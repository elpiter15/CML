/*
 * generated by Xtext 2.27.0
 */
package org.xtext.example.dockercompose.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class DockerComposeGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class DockerComposeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.DockerCompose");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cVersionKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cVersionAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cVersionVersionParserRuleCall_0_1_0 = (RuleCall)cVersionAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Keyword cServicesKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cServicesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cServicesServiceParserRuleCall_1_1_0 = (RuleCall)cServicesAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Keyword cVolumesKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cVolumesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cVolumesVolumeParserRuleCall_2_1_0 = (RuleCall)cVolumesAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cUnorderedGroup.eContents().get(3);
		private final Keyword cConfigsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cConfigsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cConfigsConfigParserRuleCall_3_1_0 = (RuleCall)cConfigsAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cUnorderedGroup.eContents().get(4);
		private final Keyword cSecretsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cSecretsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cSecretsSecretParserRuleCall_4_1_0 = (RuleCall)cSecretsAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cUnorderedGroup.eContents().get(5);
		private final Keyword cNetworksKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNetworksAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNetworksNetworkParserRuleCall_5_1_0 = (RuleCall)cNetworksAssignment_5_1.eContents().get(0);
		
		//DockerCompose returns DockerCompose:
		//    (
		//            ('version:'     version=Version)?
		//        &    ('services:'     (services+=Service)+ )
		//        &    ('volumes:'     (volumes+=Volume)+ )?
		//        &    ('configs:'     (configs+=Config)+ )?
		//        &    ('secrets:'     (secrets+=Secret)+ )?
		//        &    ('networks:'    (networks+=Network)+ )?
		//    );
		@Override public ParserRule getRule() { return rule; }
		
		//(
		//        ('version:'     version=Version)?
		//    &    ('services:'     (services+=Service)+ )
		//    &    ('volumes:'     (volumes+=Volume)+ )?
		//    &    ('configs:'     (configs+=Config)+ )?
		//    &    ('secrets:'     (secrets+=Secret)+ )?
		//    &    ('networks:'    (networks+=Network)+ )?
		//)
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//('version:' 	version=Version)?
		public Group getGroup_0() { return cGroup_0; }
		
		//'version:'
		public Keyword getVersionKeyword_0_0() { return cVersionKeyword_0_0; }
		
		//version=Version
		public Assignment getVersionAssignment_0_1() { return cVersionAssignment_0_1; }
		
		//Version
		public RuleCall getVersionVersionParserRuleCall_0_1_0() { return cVersionVersionParserRuleCall_0_1_0; }
		
		//('services:' 	(services+=Service)+ )
		public Group getGroup_1() { return cGroup_1; }
		
		//'services:'
		public Keyword getServicesKeyword_1_0() { return cServicesKeyword_1_0; }
		
		//(services+=Service)+
		public Assignment getServicesAssignment_1_1() { return cServicesAssignment_1_1; }
		
		//Service
		public RuleCall getServicesServiceParserRuleCall_1_1_0() { return cServicesServiceParserRuleCall_1_1_0; }
		
		//('volumes:' 	(volumes+=Volume)+ )?
		public Group getGroup_2() { return cGroup_2; }
		
		//'volumes:'
		public Keyword getVolumesKeyword_2_0() { return cVolumesKeyword_2_0; }
		
		//(volumes+=Volume)+
		public Assignment getVolumesAssignment_2_1() { return cVolumesAssignment_2_1; }
		
		//Volume
		public RuleCall getVolumesVolumeParserRuleCall_2_1_0() { return cVolumesVolumeParserRuleCall_2_1_0; }
		
		//('configs:' 	(configs+=Config)+ )?
		public Group getGroup_3() { return cGroup_3; }
		
		//'configs:'
		public Keyword getConfigsKeyword_3_0() { return cConfigsKeyword_3_0; }
		
		//(configs+=Config)+
		public Assignment getConfigsAssignment_3_1() { return cConfigsAssignment_3_1; }
		
		//Config
		public RuleCall getConfigsConfigParserRuleCall_3_1_0() { return cConfigsConfigParserRuleCall_3_1_0; }
		
		//('secrets:' 	(secrets+=Secret)+ )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'secrets:'
		public Keyword getSecretsKeyword_4_0() { return cSecretsKeyword_4_0; }
		
		//(secrets+=Secret)+
		public Assignment getSecretsAssignment_4_1() { return cSecretsAssignment_4_1; }
		
		//Secret
		public RuleCall getSecretsSecretParserRuleCall_4_1_0() { return cSecretsSecretParserRuleCall_4_1_0; }
		
		//('networks:'	(networks+=Network)+ )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'networks:'
		public Keyword getNetworksKeyword_5_0() { return cNetworksKeyword_5_0; }
		
		//(networks+=Network)+
		public Assignment getNetworksAssignment_5_1() { return cNetworksAssignment_5_1; }
		
		//Network
		public RuleCall getNetworksNetworkParserRuleCall_5_1_0() { return cNetworksNetworkParserRuleCall_5_1_0; }
	}
	public class VersionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.Version");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cVERSION_INTTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cVERSION_FLOATTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Version returns ecore::EString:
		//    VERSION_INT | VERSION_FLOAT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//VERSION_INT | VERSION_FLOAT
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//VERSION_INT
		public RuleCall getVERSION_INTTerminalRuleCall_0() { return cVERSION_INTTerminalRuleCall_0; }
		
		//VERSION_FLOAT
		public RuleCall getVERSION_FLOATTerminalRuleCall_1() { return cVERSION_FLOATTerminalRuleCall_1; }
	}
	public class QuotedIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.QuotedInt");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cQUOTED_INTTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cVERSION_INTTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//QuotedInt returns ecore::EString:
		//    QUOTED_INT | VERSION_INT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//QUOTED_INT | VERSION_INT
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//QUOTED_INT
		public RuleCall getQUOTED_INTTerminalRuleCall_0() { return cQUOTED_INTTerminalRuleCall_0; }
		
		//VERSION_INT
		public RuleCall getVERSION_INTTerminalRuleCall_1() { return cVERSION_INTTerminalRuleCall_1; }
	}
	public class EDoubleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.EDouble");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//EDouble returns ecore::EDouble:
		//    INT '.' INT;
		@Override public ParserRule getRule() { return rule; }
		
		//INT '.' INT
		public Group getGroup() { return cGroup; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }
		
		//'.'
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}
	public class ServiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.Service");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cServiceAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cUnorderedGroup_3.eContents().get(0);
		private final Keyword cBuildKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Assignment cBuildAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final RuleCall cBuildPATHParserRuleCall_3_0_1_0 = (RuleCall)cBuildAssignment_3_0_1.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cUnorderedGroup_3.eContents().get(1);
		private final Keyword cImageKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cImageAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cImageImageParserRuleCall_3_1_1_0 = (RuleCall)cImageAssignment_3_1_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cUnorderedGroup_3.eContents().get(2);
		private final Keyword cCpu_countKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cCpu_countAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cCpu_countEIntParserRuleCall_3_2_1_0 = (RuleCall)cCpu_countAssignment_3_2_1.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cUnorderedGroup_3.eContents().get(3);
		private final Keyword cCommandKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cCommandAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cCommandCommandParserRuleCall_3_3_1_0 = (RuleCall)cCommandAssignment_3_3_1.eContents().get(0);
		private final Group cGroup_3_4 = (Group)cUnorderedGroup_3.eContents().get(4);
		private final Keyword cContainer_nameKeyword_3_4_0 = (Keyword)cGroup_3_4.eContents().get(0);
		private final Assignment cContainer_nameAssignment_3_4_1 = (Assignment)cGroup_3_4.eContents().get(1);
		private final RuleCall cContainer_nameEStringParserRuleCall_3_4_1_0 = (RuleCall)cContainer_nameAssignment_3_4_1.eContents().get(0);
		private final Group cGroup_3_5 = (Group)cUnorderedGroup_3.eContents().get(5);
		private final Keyword cRestartKeyword_3_5_0 = (Keyword)cGroup_3_5.eContents().get(0);
		private final Assignment cRestartAssignment_3_5_1 = (Assignment)cGroup_3_5.eContents().get(1);
		private final RuleCall cRestartRestartPolicyEnumRuleCall_3_5_1_0 = (RuleCall)cRestartAssignment_3_5_1.eContents().get(0);
		private final Group cGroup_3_6 = (Group)cUnorderedGroup_3.eContents().get(6);
		private final Keyword cInitKeyword_3_6_0 = (Keyword)cGroup_3_6.eContents().get(0);
		private final Assignment cInitAssignment_3_6_1 = (Assignment)cGroup_3_6.eContents().get(1);
		private final RuleCall cInitEBooleanParserRuleCall_3_6_1_0 = (RuleCall)cInitAssignment_3_6_1.eContents().get(0);
		private final Group cGroup_3_7 = (Group)cUnorderedGroup_3.eContents().get(7);
		private final Keyword cRead_onlyKeyword_3_7_0 = (Keyword)cGroup_3_7.eContents().get(0);
		private final Assignment cRead_onlyAssignment_3_7_1 = (Assignment)cGroup_3_7.eContents().get(1);
		private final RuleCall cRead_onlyEBooleanParserRuleCall_3_7_1_0 = (RuleCall)cRead_onlyAssignment_3_7_1.eContents().get(0);
		private final Group cGroup_3_8 = (Group)cUnorderedGroup_3.eContents().get(8);
		private final Keyword cLinksKeyword_3_8_0 = (Keyword)cGroup_3_8.eContents().get(0);
		private final Group cGroup_3_8_1 = (Group)cGroup_3_8.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_3_8_1_0 = (Keyword)cGroup_3_8_1.eContents().get(0);
		private final Assignment cLinksAssignment_3_8_1_1 = (Assignment)cGroup_3_8_1.eContents().get(1);
		private final RuleCall cLinksLinkParserRuleCall_3_8_1_1_0 = (RuleCall)cLinksAssignment_3_8_1_1.eContents().get(0);
		private final Group cGroup_3_9 = (Group)cUnorderedGroup_3.eContents().get(9);
		private final Keyword cDepends_onKeyword_3_9_0 = (Keyword)cGroup_3_9.eContents().get(0);
		private final Assignment cDepends_onAssignment_3_9_1 = (Assignment)cGroup_3_9.eContents().get(1);
		private final RuleCall cDepends_onDependencyParserRuleCall_3_9_1_0 = (RuleCall)cDepends_onAssignment_3_9_1.eContents().get(0);
		private final Group cGroup_3_10 = (Group)cUnorderedGroup_3.eContents().get(10);
		private final Keyword cNetworksKeyword_3_10_0 = (Keyword)cGroup_3_10.eContents().get(0);
		private final Alternatives cAlternatives_3_10_1 = (Alternatives)cGroup_3_10.eContents().get(1);
		private final Assignment cNetworksAssignment_3_10_1_0 = (Assignment)cAlternatives_3_10_1.eContents().get(0);
		private final RuleCall cNetworksNetworkConnector_longParserRuleCall_3_10_1_0_0 = (RuleCall)cNetworksAssignment_3_10_1_0.eContents().get(0);
		private final Assignment cNetworksAssignment_3_10_1_1 = (Assignment)cAlternatives_3_10_1.eContents().get(1);
		private final RuleCall cNetworksNetworkConnector_shortParserRuleCall_3_10_1_1_0 = (RuleCall)cNetworksAssignment_3_10_1_1.eContents().get(0);
		private final Group cGroup_3_11 = (Group)cUnorderedGroup_3.eContents().get(11);
		private final Keyword cVolumesKeyword_3_11_0 = (Keyword)cGroup_3_11.eContents().get(0);
		private final Group cGroup_3_11_1 = (Group)cGroup_3_11.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_3_11_1_0 = (Keyword)cGroup_3_11_1.eContents().get(0);
		private final Assignment cVolumesAssignment_3_11_1_1 = (Assignment)cGroup_3_11_1.eContents().get(1);
		private final RuleCall cVolumesVolumeConnectorParserRuleCall_3_11_1_1_0 = (RuleCall)cVolumesAssignment_3_11_1_1.eContents().get(0);
		private final Group cGroup_3_12 = (Group)cUnorderedGroup_3.eContents().get(12);
		private final Keyword cConfigsKeyword_3_12_0 = (Keyword)cGroup_3_12.eContents().get(0);
		private final Group cGroup_3_12_1 = (Group)cGroup_3_12.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_3_12_1_0 = (Keyword)cGroup_3_12_1.eContents().get(0);
		private final Assignment cConfigsAssignment_3_12_1_1 = (Assignment)cGroup_3_12_1.eContents().get(1);
		private final RuleCall cConfigsConfigConnectorParserRuleCall_3_12_1_1_0 = (RuleCall)cConfigsAssignment_3_12_1_1.eContents().get(0);
		private final Group cGroup_3_13 = (Group)cUnorderedGroup_3.eContents().get(13);
		private final Keyword cSecretsKeyword_3_13_0 = (Keyword)cGroup_3_13.eContents().get(0);
		private final Group cGroup_3_13_1 = (Group)cGroup_3_13.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_3_13_1_0 = (Keyword)cGroup_3_13_1.eContents().get(0);
		private final Assignment cSecretsAssignment_3_13_1_1 = (Assignment)cGroup_3_13_1.eContents().get(1);
		private final RuleCall cSecretsSecretConnectorParserRuleCall_3_13_1_1_0 = (RuleCall)cSecretsAssignment_3_13_1_1.eContents().get(0);
		private final Group cGroup_3_14 = (Group)cUnorderedGroup_3.eContents().get(14);
		private final Keyword cEnvironmentKeyword_3_14_0 = (Keyword)cGroup_3_14.eContents().get(0);
		private final Alternatives cAlternatives_3_14_1 = (Alternatives)cGroup_3_14.eContents().get(1);
		private final Assignment cEnvironmentAssignment_3_14_1_0 = (Assignment)cAlternatives_3_14_1.eContents().get(0);
		private final RuleCall cEnvironmentEnvironmentVariableMapParserRuleCall_3_14_1_0_0 = (RuleCall)cEnvironmentAssignment_3_14_1_0.eContents().get(0);
		private final Assignment cEnvironmentAssignment_3_14_1_1 = (Assignment)cAlternatives_3_14_1.eContents().get(1);
		private final RuleCall cEnvironmentEnvironmentVariableListParserRuleCall_3_14_1_1_0 = (RuleCall)cEnvironmentAssignment_3_14_1_1.eContents().get(0);
		private final Group cGroup_3_15 = (Group)cUnorderedGroup_3.eContents().get(15);
		private final Keyword cDevicesKeyword_3_15_0 = (Keyword)cGroup_3_15.eContents().get(0);
		private final Group cGroup_3_15_1 = (Group)cGroup_3_15.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_3_15_1_0 = (Keyword)cGroup_3_15_1.eContents().get(0);
		private final Assignment cDevicesAssignment_3_15_1_1 = (Assignment)cGroup_3_15_1.eContents().get(1);
		private final RuleCall cDevicesDeviceParserRuleCall_3_15_1_1_0 = (RuleCall)cDevicesAssignment_3_15_1_1.eContents().get(0);
		private final Group cGroup_3_16 = (Group)cUnorderedGroup_3.eContents().get(16);
		private final Keyword cDnsKeyword_3_16_0 = (Keyword)cGroup_3_16.eContents().get(0);
		private final Alternatives cAlternatives_3_16_1 = (Alternatives)cGroup_3_16.eContents().get(1);
		private final Group cGroup_3_16_1_0 = (Group)cAlternatives_3_16_1.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_3_16_1_0_0 = (Keyword)cGroup_3_16_1_0.eContents().get(0);
		private final Assignment cDnsAssignment_3_16_1_0_1 = (Assignment)cGroup_3_16_1_0.eContents().get(1);
		private final RuleCall cDnsDNSParserRuleCall_3_16_1_0_1_0 = (RuleCall)cDnsAssignment_3_16_1_0_1.eContents().get(0);
		private final Assignment cDnsAssignment_3_16_1_1 = (Assignment)cAlternatives_3_16_1.eContents().get(1);
		private final RuleCall cDnsDNSParserRuleCall_3_16_1_1_0 = (RuleCall)cDnsAssignment_3_16_1_1.eContents().get(0);
		private final Group cGroup_3_17 = (Group)cUnorderedGroup_3.eContents().get(17);
		private final Keyword cPortsKeyword_3_17_0 = (Keyword)cGroup_3_17.eContents().get(0);
		private final Group cGroup_3_17_1 = (Group)cGroup_3_17.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_3_17_1_0 = (Keyword)cGroup_3_17_1.eContents().get(0);
		private final Assignment cPortsAssignment_3_17_1_1 = (Assignment)cGroup_3_17_1.eContents().get(1);
		private final RuleCall cPortsPortParserRuleCall_3_17_1_1_0 = (RuleCall)cPortsAssignment_3_17_1_1.eContents().get(0);
		
		//Service returns Service:
		//    {Service}
		//    name=ID ':'
		//    (
		//            ('build:'             build=PATH)?
		//        &    ('image:'             image=Image)?
		//        &    ('cpu_count:'         cpu_count=EInt)?
		//        &    ('command:'         command=Command)?
		//        &    ('container_name:'     container_name=EString)?
		//        &    ('restart:'         restart=RestartPolicy)?
		//        &    ('init:'            init=EBoolean)?
		//        &    ('read_only:'        read_only=EBoolean)?
		//        &    ('links:'             ('-'links+=Link)+ )?
		//        &    ('depends_on:'         (depends_on+=Dependency)+)?
		//        &    ('networks:'         ((networks+=NetworkConnector_long)+ | (networks+=NetworkConnector_short)+ ))?
		//        &    ('volumes:'         ('-'volumes+=VolumeConnector)+)?
		//        &    ('configs:'         ('-'configs+=ConfigConnector)+)?
		//        &    ('secrets:'         ('-'secrets+=SecretConnector)+)?
		//        &    ('environment:'     ((environment+=EnvironmentVariableMap)+ | (environment+=EnvironmentVariableList)+ ))?
		//        &    ('devices:'         ('-'devices+=Device)+ )?
		//        &    ('dns:'                (('-'dns+=DNS)+ | dns+=DNS) )?
		//        &    ('ports:'            ('-'ports+=Port)+ )?
		//    );
		@Override public ParserRule getRule() { return rule; }
		
		//{Service}
		//name=ID ':'
		//(
		//        ('build:'             build=PATH)?
		//    &    ('image:'             image=Image)?
		//    &    ('cpu_count:'         cpu_count=EInt)?
		//    &    ('command:'         command=Command)?
		//    &    ('container_name:'     container_name=EString)?
		//    &    ('restart:'         restart=RestartPolicy)?
		//    &    ('init:'            init=EBoolean)?
		//    &    ('read_only:'        read_only=EBoolean)?
		//    &    ('links:'             ('-'links+=Link)+ )?
		//    &    ('depends_on:'         (depends_on+=Dependency)+)?
		//    &    ('networks:'         ((networks+=NetworkConnector_long)+ | (networks+=NetworkConnector_short)+ ))?
		//    &    ('volumes:'         ('-'volumes+=VolumeConnector)+)?
		//    &    ('configs:'         ('-'configs+=ConfigConnector)+)?
		//    &    ('secrets:'         ('-'secrets+=SecretConnector)+)?
		//    &    ('environment:'     ((environment+=EnvironmentVariableMap)+ | (environment+=EnvironmentVariableList)+ ))?
		//    &    ('devices:'         ('-'devices+=Device)+ )?
		//    &    ('dns:'                (('-'dns+=DNS)+ | dns+=DNS) )?
		//    &    ('ports:'            ('-'ports+=Port)+ )?
		//)
		public Group getGroup() { return cGroup; }
		
		//{Service}
		public Action getServiceAction_0() { return cServiceAction_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//(
		//        ('build:'             build=PATH)?
		//    &    ('image:'             image=Image)?
		//    &    ('cpu_count:'         cpu_count=EInt)?
		//    &    ('command:'         command=Command)?
		//    &    ('container_name:'     container_name=EString)?
		//    &    ('restart:'         restart=RestartPolicy)?
		//    &    ('init:'            init=EBoolean)?
		//    &    ('read_only:'        read_only=EBoolean)?
		//    &    ('links:'             ('-'links+=Link)+ )?
		//    &    ('depends_on:'         (depends_on+=Dependency)+)?
		//    &    ('networks:'         ((networks+=NetworkConnector_long)+ | (networks+=NetworkConnector_short)+ ))?
		//    &    ('volumes:'         ('-'volumes+=VolumeConnector)+)?
		//    &    ('configs:'         ('-'configs+=ConfigConnector)+)?
		//    &    ('secrets:'         ('-'secrets+=SecretConnector)+)?
		//    &    ('environment:'     ((environment+=EnvironmentVariableMap)+ | (environment+=EnvironmentVariableList)+ ))?
		//    &    ('devices:'         ('-'devices+=Device)+ )?
		//    &    ('dns:'                (('-'dns+=DNS)+ | dns+=DNS) )?
		//    &    ('ports:'            ('-'ports+=Port)+ )?
		//)
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }
		
		//('build:' 			build=PATH)?
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//'build:'
		public Keyword getBuildKeyword_3_0_0() { return cBuildKeyword_3_0_0; }
		
		//build=PATH
		public Assignment getBuildAssignment_3_0_1() { return cBuildAssignment_3_0_1; }
		
		//PATH
		public RuleCall getBuildPATHParserRuleCall_3_0_1_0() { return cBuildPATHParserRuleCall_3_0_1_0; }
		
		//('image:' 			image=Image)?
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'image:'
		public Keyword getImageKeyword_3_1_0() { return cImageKeyword_3_1_0; }
		
		//image=Image
		public Assignment getImageAssignment_3_1_1() { return cImageAssignment_3_1_1; }
		
		//Image
		public RuleCall getImageImageParserRuleCall_3_1_1_0() { return cImageImageParserRuleCall_3_1_1_0; }
		
		//('cpu_count:' 		cpu_count=EInt)?
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//'cpu_count:'
		public Keyword getCpu_countKeyword_3_2_0() { return cCpu_countKeyword_3_2_0; }
		
		//cpu_count=EInt
		public Assignment getCpu_countAssignment_3_2_1() { return cCpu_countAssignment_3_2_1; }
		
		//EInt
		public RuleCall getCpu_countEIntParserRuleCall_3_2_1_0() { return cCpu_countEIntParserRuleCall_3_2_1_0; }
		
		//('command:' 		command=Command)?
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//'command:'
		public Keyword getCommandKeyword_3_3_0() { return cCommandKeyword_3_3_0; }
		
		//command=Command
		public Assignment getCommandAssignment_3_3_1() { return cCommandAssignment_3_3_1; }
		
		//Command
		public RuleCall getCommandCommandParserRuleCall_3_3_1_0() { return cCommandCommandParserRuleCall_3_3_1_0; }
		
		//('container_name:' 	container_name=EString)?
		public Group getGroup_3_4() { return cGroup_3_4; }
		
		//'container_name:'
		public Keyword getContainer_nameKeyword_3_4_0() { return cContainer_nameKeyword_3_4_0; }
		
		//container_name=EString
		public Assignment getContainer_nameAssignment_3_4_1() { return cContainer_nameAssignment_3_4_1; }
		
		//EString
		public RuleCall getContainer_nameEStringParserRuleCall_3_4_1_0() { return cContainer_nameEStringParserRuleCall_3_4_1_0; }
		
		//('restart:' 		restart=RestartPolicy)?
		public Group getGroup_3_5() { return cGroup_3_5; }
		
		//'restart:'
		public Keyword getRestartKeyword_3_5_0() { return cRestartKeyword_3_5_0; }
		
		//restart=RestartPolicy
		public Assignment getRestartAssignment_3_5_1() { return cRestartAssignment_3_5_1; }
		
		//RestartPolicy
		public RuleCall getRestartRestartPolicyEnumRuleCall_3_5_1_0() { return cRestartRestartPolicyEnumRuleCall_3_5_1_0; }
		
		//('init:'			init=EBoolean)?
		public Group getGroup_3_6() { return cGroup_3_6; }
		
		//'init:'
		public Keyword getInitKeyword_3_6_0() { return cInitKeyword_3_6_0; }
		
		//init=EBoolean
		public Assignment getInitAssignment_3_6_1() { return cInitAssignment_3_6_1; }
		
		//EBoolean
		public RuleCall getInitEBooleanParserRuleCall_3_6_1_0() { return cInitEBooleanParserRuleCall_3_6_1_0; }
		
		//('read_only:'		read_only=EBoolean)?
		public Group getGroup_3_7() { return cGroup_3_7; }
		
		//'read_only:'
		public Keyword getRead_onlyKeyword_3_7_0() { return cRead_onlyKeyword_3_7_0; }
		
		//read_only=EBoolean
		public Assignment getRead_onlyAssignment_3_7_1() { return cRead_onlyAssignment_3_7_1; }
		
		//EBoolean
		public RuleCall getRead_onlyEBooleanParserRuleCall_3_7_1_0() { return cRead_onlyEBooleanParserRuleCall_3_7_1_0; }
		
		//('links:' 			('-'links+=Link)+ )?
		public Group getGroup_3_8() { return cGroup_3_8; }
		
		//'links:'
		public Keyword getLinksKeyword_3_8_0() { return cLinksKeyword_3_8_0; }
		
		//('-'links+=Link)+
		public Group getGroup_3_8_1() { return cGroup_3_8_1; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_3_8_1_0() { return cHyphenMinusKeyword_3_8_1_0; }
		
		//links+=Link
		public Assignment getLinksAssignment_3_8_1_1() { return cLinksAssignment_3_8_1_1; }
		
		//Link
		public RuleCall getLinksLinkParserRuleCall_3_8_1_1_0() { return cLinksLinkParserRuleCall_3_8_1_1_0; }
		
		//('depends_on:' 		(depends_on+=Dependency)+)?
		public Group getGroup_3_9() { return cGroup_3_9; }
		
		//'depends_on:'
		public Keyword getDepends_onKeyword_3_9_0() { return cDepends_onKeyword_3_9_0; }
		
		//(depends_on+=Dependency)+
		public Assignment getDepends_onAssignment_3_9_1() { return cDepends_onAssignment_3_9_1; }
		
		//Dependency
		public RuleCall getDepends_onDependencyParserRuleCall_3_9_1_0() { return cDepends_onDependencyParserRuleCall_3_9_1_0; }
		
		//('networks:' 		((networks+=NetworkConnector_long)+ | (networks+=NetworkConnector_short)+ ))?
		public Group getGroup_3_10() { return cGroup_3_10; }
		
		//'networks:'
		public Keyword getNetworksKeyword_3_10_0() { return cNetworksKeyword_3_10_0; }
		
		//((networks+=NetworkConnector_long)+ | (networks+=NetworkConnector_short)+ )
		public Alternatives getAlternatives_3_10_1() { return cAlternatives_3_10_1; }
		
		//(networks+=NetworkConnector_long)+
		public Assignment getNetworksAssignment_3_10_1_0() { return cNetworksAssignment_3_10_1_0; }
		
		//NetworkConnector_long
		public RuleCall getNetworksNetworkConnector_longParserRuleCall_3_10_1_0_0() { return cNetworksNetworkConnector_longParserRuleCall_3_10_1_0_0; }
		
		//(networks+=NetworkConnector_short)+
		public Assignment getNetworksAssignment_3_10_1_1() { return cNetworksAssignment_3_10_1_1; }
		
		//NetworkConnector_short
		public RuleCall getNetworksNetworkConnector_shortParserRuleCall_3_10_1_1_0() { return cNetworksNetworkConnector_shortParserRuleCall_3_10_1_1_0; }
		
		//('volumes:' 		('-'volumes+=VolumeConnector)+)?
		public Group getGroup_3_11() { return cGroup_3_11; }
		
		//'volumes:'
		public Keyword getVolumesKeyword_3_11_0() { return cVolumesKeyword_3_11_0; }
		
		//('-'volumes+=VolumeConnector)+
		public Group getGroup_3_11_1() { return cGroup_3_11_1; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_3_11_1_0() { return cHyphenMinusKeyword_3_11_1_0; }
		
		//volumes+=VolumeConnector
		public Assignment getVolumesAssignment_3_11_1_1() { return cVolumesAssignment_3_11_1_1; }
		
		//VolumeConnector
		public RuleCall getVolumesVolumeConnectorParserRuleCall_3_11_1_1_0() { return cVolumesVolumeConnectorParserRuleCall_3_11_1_1_0; }
		
		//('configs:' 		('-'configs+=ConfigConnector)+)?
		public Group getGroup_3_12() { return cGroup_3_12; }
		
		//'configs:'
		public Keyword getConfigsKeyword_3_12_0() { return cConfigsKeyword_3_12_0; }
		
		//('-'configs+=ConfigConnector)+
		public Group getGroup_3_12_1() { return cGroup_3_12_1; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_3_12_1_0() { return cHyphenMinusKeyword_3_12_1_0; }
		
		//configs+=ConfigConnector
		public Assignment getConfigsAssignment_3_12_1_1() { return cConfigsAssignment_3_12_1_1; }
		
		//ConfigConnector
		public RuleCall getConfigsConfigConnectorParserRuleCall_3_12_1_1_0() { return cConfigsConfigConnectorParserRuleCall_3_12_1_1_0; }
		
		//('secrets:' 		('-'secrets+=SecretConnector)+)?
		public Group getGroup_3_13() { return cGroup_3_13; }
		
		//'secrets:'
		public Keyword getSecretsKeyword_3_13_0() { return cSecretsKeyword_3_13_0; }
		
		//('-'secrets+=SecretConnector)+
		public Group getGroup_3_13_1() { return cGroup_3_13_1; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_3_13_1_0() { return cHyphenMinusKeyword_3_13_1_0; }
		
		//secrets+=SecretConnector
		public Assignment getSecretsAssignment_3_13_1_1() { return cSecretsAssignment_3_13_1_1; }
		
		//SecretConnector
		public RuleCall getSecretsSecretConnectorParserRuleCall_3_13_1_1_0() { return cSecretsSecretConnectorParserRuleCall_3_13_1_1_0; }
		
		//('environment:' 	((environment+=EnvironmentVariableMap)+ | (environment+=EnvironmentVariableList)+ ))?
		public Group getGroup_3_14() { return cGroup_3_14; }
		
		//'environment:'
		public Keyword getEnvironmentKeyword_3_14_0() { return cEnvironmentKeyword_3_14_0; }
		
		//((environment+=EnvironmentVariableMap)+ | (environment+=EnvironmentVariableList)+ )
		public Alternatives getAlternatives_3_14_1() { return cAlternatives_3_14_1; }
		
		//(environment+=EnvironmentVariableMap)+
		public Assignment getEnvironmentAssignment_3_14_1_0() { return cEnvironmentAssignment_3_14_1_0; }
		
		//EnvironmentVariableMap
		public RuleCall getEnvironmentEnvironmentVariableMapParserRuleCall_3_14_1_0_0() { return cEnvironmentEnvironmentVariableMapParserRuleCall_3_14_1_0_0; }
		
		//(environment+=EnvironmentVariableList)+
		public Assignment getEnvironmentAssignment_3_14_1_1() { return cEnvironmentAssignment_3_14_1_1; }
		
		//EnvironmentVariableList
		public RuleCall getEnvironmentEnvironmentVariableListParserRuleCall_3_14_1_1_0() { return cEnvironmentEnvironmentVariableListParserRuleCall_3_14_1_1_0; }
		
		//('devices:' 		('-'devices+=Device)+ )?
		public Group getGroup_3_15() { return cGroup_3_15; }
		
		//'devices:'
		public Keyword getDevicesKeyword_3_15_0() { return cDevicesKeyword_3_15_0; }
		
		//('-'devices+=Device)+
		public Group getGroup_3_15_1() { return cGroup_3_15_1; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_3_15_1_0() { return cHyphenMinusKeyword_3_15_1_0; }
		
		//devices+=Device
		public Assignment getDevicesAssignment_3_15_1_1() { return cDevicesAssignment_3_15_1_1; }
		
		//Device
		public RuleCall getDevicesDeviceParserRuleCall_3_15_1_1_0() { return cDevicesDeviceParserRuleCall_3_15_1_1_0; }
		
		//('dns:'				(('-'dns+=DNS)+ | dns+=DNS) )?
		public Group getGroup_3_16() { return cGroup_3_16; }
		
		//'dns:'
		public Keyword getDnsKeyword_3_16_0() { return cDnsKeyword_3_16_0; }
		
		//(('-'dns+=DNS)+ | dns+=DNS)
		public Alternatives getAlternatives_3_16_1() { return cAlternatives_3_16_1; }
		
		//('-'dns+=DNS)+
		public Group getGroup_3_16_1_0() { return cGroup_3_16_1_0; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_3_16_1_0_0() { return cHyphenMinusKeyword_3_16_1_0_0; }
		
		//dns+=DNS
		public Assignment getDnsAssignment_3_16_1_0_1() { return cDnsAssignment_3_16_1_0_1; }
		
		//DNS
		public RuleCall getDnsDNSParserRuleCall_3_16_1_0_1_0() { return cDnsDNSParserRuleCall_3_16_1_0_1_0; }
		
		//dns+=DNS
		public Assignment getDnsAssignment_3_16_1_1() { return cDnsAssignment_3_16_1_1; }
		
		//DNS
		public RuleCall getDnsDNSParserRuleCall_3_16_1_1_0() { return cDnsDNSParserRuleCall_3_16_1_1_0; }
		
		//('ports:'			('-'ports+=Port)+ )?
		public Group getGroup_3_17() { return cGroup_3_17; }
		
		//'ports:'
		public Keyword getPortsKeyword_3_17_0() { return cPortsKeyword_3_17_0; }
		
		//('-'ports+=Port)+
		public Group getGroup_3_17_1() { return cGroup_3_17_1; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_3_17_1_0() { return cHyphenMinusKeyword_3_17_1_0; }
		
		//ports+=Port
		public Assignment getPortsAssignment_3_17_1_1() { return cPortsAssignment_3_17_1_1; }
		
		//Port
		public RuleCall getPortsPortParserRuleCall_3_17_1_1_0() { return cPortsPortParserRuleCall_3_17_1_1_0; }
	}
	public class EnvironmentVariableMapElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.EnvironmentVariableMap");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEnvironmentVariableAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cValueEStringParserRuleCall_3_0_0 = (RuleCall)cValueAssignment_3_0.eContents().get(0);
		private final Assignment cValueAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cValuePATHParserRuleCall_3_1_0 = (RuleCall)cValueAssignment_3_1.eContents().get(0);
		
		//EnvironmentVariableMap returns EnvironmentVariable:
		//    {EnvironmentVariable}
		//    name=ID':' (value=EString|value=PATH)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{EnvironmentVariable}
		//name=ID':' (value=EString|value=PATH)?
		public Group getGroup() { return cGroup; }
		
		//{EnvironmentVariable}
		public Action getEnvironmentVariableAction_0() { return cEnvironmentVariableAction_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//(value=EString|value=PATH)?
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//value=EString
		public Assignment getValueAssignment_3_0() { return cValueAssignment_3_0; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_3_0_0() { return cValueEStringParserRuleCall_3_0_0; }
		
		//value=PATH
		public Assignment getValueAssignment_3_1() { return cValueAssignment_3_1; }
		
		//PATH
		public RuleCall getValuePATHParserRuleCall_3_1_0() { return cValuePATHParserRuleCall_3_1_0; }
	}
	public class EnvironmentVariableListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.EnvironmentVariableList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEnvironmentVariableAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Alternatives cAlternatives_3_1 = (Alternatives)cGroup_3.eContents().get(1);
		private final Assignment cValueAssignment_3_1_0 = (Assignment)cAlternatives_3_1.eContents().get(0);
		private final RuleCall cValueEStringParserRuleCall_3_1_0_0 = (RuleCall)cValueAssignment_3_1_0.eContents().get(0);
		private final Assignment cValueAssignment_3_1_1 = (Assignment)cAlternatives_3_1.eContents().get(1);
		private final RuleCall cValuePATHParserRuleCall_3_1_1_0 = (RuleCall)cValueAssignment_3_1_1.eContents().get(0);
		
		//EnvironmentVariableList returns EnvironmentVariable:
		//    {EnvironmentVariable}
		//    '-' name=ID('='(value=EString|value=PATH))?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{EnvironmentVariable}
		//'-' name=ID('='(value=EString|value=PATH))?
		public Group getGroup() { return cGroup; }
		
		//{EnvironmentVariable}
		public Action getEnvironmentVariableAction_0() { return cEnvironmentVariableAction_0; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_1() { return cHyphenMinusKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//('='(value=EString|value=PATH))?
		public Group getGroup_3() { return cGroup_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_0() { return cEqualsSignKeyword_3_0; }
		
		//(value=EString|value=PATH)
		public Alternatives getAlternatives_3_1() { return cAlternatives_3_1; }
		
		//value=EString
		public Assignment getValueAssignment_3_1_0() { return cValueAssignment_3_1_0; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_3_1_0_0() { return cValueEStringParserRuleCall_3_1_0_0; }
		
		//value=PATH
		public Assignment getValueAssignment_3_1_1() { return cValueAssignment_3_1_1; }
		
		//PATH
		public RuleCall getValuePATHParserRuleCall_3_1_1_0() { return cValuePATHParserRuleCall_3_1_1_0; }
	}
	public class PortElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.Port");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPortAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValuePortsParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		
		//Port returns Port:
		//    {Port}
		////    value=PORT_DEF;
		//    value=Ports;
		@Override public ParserRule getRule() { return rule; }
		
		//    {Port}
		////    value=PORT_DEF;
		//    value=Ports
		public Group getGroup() { return cGroup; }
		
		//{Port}
		public Action getPortAction_0() { return cPortAction_0; }
		
		////    value=PORT_DEF;
		//    value=Ports
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }
		
		//Ports
		public RuleCall getValuePortsParserRuleCall_1_0() { return cValuePortsParserRuleCall_1_0; }
	}
	public class DeviceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.Device");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDeviceAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueDEVICE_DEFTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		
		//Device returns Device:
		//    {Device}
		//    value=DEVICE_DEF;
		@Override public ParserRule getRule() { return rule; }
		
		//{Device}
		//value=DEVICE_DEF
		public Group getGroup() { return cGroup; }
		
		//{Device}
		public Action getDeviceAction_0() { return cDeviceAction_0; }
		
		//value=DEVICE_DEF
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }
		
		//DEVICE_DEF
		public RuleCall getValueDEVICE_DEFTerminalRuleCall_1_0() { return cValueDEVICE_DEFTerminalRuleCall_1_0; }
	}
	public class ImageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.Image");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final RuleCall cDotIDParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cGroup_0.eContents().get(1);
		private final Keyword cColonKeyword_0_1_0 = (Keyword)cGroup_0_1.eContents().get(0);
		private final Alternatives cAlternatives_0_1_1 = (Alternatives)cGroup_0_1.eContents().get(1);
		private final RuleCall cEIntParserRuleCall_0_1_1_0 = (RuleCall)cAlternatives_0_1_1.eContents().get(0);
		private final RuleCall cDotIDParserRuleCall_0_1_1_1 = (RuleCall)cAlternatives_0_1_1.eContents().get(1);
		private final Keyword cSolidusKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cDotIDParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cColonKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1_1 = (Alternatives)cGroup_1_1.eContents().get(1);
		private final RuleCall cEIntParserRuleCall_1_1_1_0 = (RuleCall)cAlternatives_1_1_1.eContents().get(0);
		private final RuleCall cDotIDParserRuleCall_1_1_1_1 = (RuleCall)cAlternatives_1_1_1.eContents().get(1);
		private final Keyword cSolidusKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final RuleCall cIDTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Keyword cColonKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Alternatives cAlternatives_3_0_1 = (Alternatives)cGroup_3_0.eContents().get(1);
		private final RuleCall cEIntParserRuleCall_3_0_1_0 = (RuleCall)cAlternatives_3_0_1.eContents().get(0);
		private final RuleCall cEDoubleParserRuleCall_3_0_1_1 = (RuleCall)cAlternatives_3_0_1.eContents().get(1);
		private final Group cGroup_3_0_1_2 = (Group)cAlternatives_3_0_1.eContents().get(2);
		private final Keyword cHyphenMinusKeyword_3_0_1_2_0 = (Keyword)cGroup_3_0_1_2.eContents().get(0);
		private final RuleCall cDotIDParserRuleCall_3_0_1_2_1 = (RuleCall)cGroup_3_0_1_2.eContents().get(1);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Keyword cCommercialAtKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final RuleCall cDotIDParserRuleCall_3_1_1 = (RuleCall)cGroup_3_1.eContents().get(1);
		private final Group cGroup_3_1_2 = (Group)cGroup_3_1.eContents().get(2);
		private final Keyword cColonKeyword_3_1_2_0 = (Keyword)cGroup_3_1_2.eContents().get(0);
		private final Alternatives cAlternatives_3_1_2_1 = (Alternatives)cGroup_3_1_2.eContents().get(1);
		private final RuleCall cEIntParserRuleCall_3_1_2_1_0 = (RuleCall)cAlternatives_3_1_2_1.eContents().get(0);
		private final RuleCall cDotIDParserRuleCall_3_1_2_1_1 = (RuleCall)cAlternatives_3_1_2_1.eContents().get(1);
		
		//Image returns ecore::EString:
		//    (dotID(':'(EInt|dotID)+)*'/')? (dotID(':'(EInt|dotID)+)*'/')? ID (':'(EInt|EDouble|'-'?dotID)+|'@'dotID(':'(EInt|dotID)+)*)?;
		@Override public ParserRule getRule() { return rule; }
		
		//(dotID(':'(EInt|dotID)+)*'/')? (dotID(':'(EInt|dotID)+)*'/')? ID (':'(EInt|EDouble|'-'?dotID)+|'@'dotID(':'(EInt|dotID)+)*)?
		public Group getGroup() { return cGroup; }
		
		//(dotID(':'(EInt|dotID)+)*'/')?
		public Group getGroup_0() { return cGroup_0; }
		
		//dotID
		public RuleCall getDotIDParserRuleCall_0_0() { return cDotIDParserRuleCall_0_0; }
		
		//(':'(EInt|dotID)+)*
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//':'
		public Keyword getColonKeyword_0_1_0() { return cColonKeyword_0_1_0; }
		
		//(EInt|dotID)+
		public Alternatives getAlternatives_0_1_1() { return cAlternatives_0_1_1; }
		
		//EInt
		public RuleCall getEIntParserRuleCall_0_1_1_0() { return cEIntParserRuleCall_0_1_1_0; }
		
		//dotID
		public RuleCall getDotIDParserRuleCall_0_1_1_1() { return cDotIDParserRuleCall_0_1_1_1; }
		
		//'/'
		public Keyword getSolidusKeyword_0_2() { return cSolidusKeyword_0_2; }
		
		//(dotID(':'(EInt|dotID)+)*'/')?
		public Group getGroup_1() { return cGroup_1; }
		
		//dotID
		public RuleCall getDotIDParserRuleCall_1_0() { return cDotIDParserRuleCall_1_0; }
		
		//(':'(EInt|dotID)+)*
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//':'
		public Keyword getColonKeyword_1_1_0() { return cColonKeyword_1_1_0; }
		
		//(EInt|dotID)+
		public Alternatives getAlternatives_1_1_1() { return cAlternatives_1_1_1; }
		
		//EInt
		public RuleCall getEIntParserRuleCall_1_1_1_0() { return cEIntParserRuleCall_1_1_1_0; }
		
		//dotID
		public RuleCall getDotIDParserRuleCall_1_1_1_1() { return cDotIDParserRuleCall_1_1_1_1; }
		
		//'/'
		public Keyword getSolidusKeyword_1_2() { return cSolidusKeyword_1_2; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_2() { return cIDTerminalRuleCall_2; }
		
		//(':'(EInt|EDouble|'-'?dotID)+|'@'dotID(':'(EInt|dotID)+)*)?
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//':'(EInt|EDouble|'-'?dotID)+
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//':'
		public Keyword getColonKeyword_3_0_0() { return cColonKeyword_3_0_0; }
		
		//(EInt|EDouble|'-'?dotID)+
		public Alternatives getAlternatives_3_0_1() { return cAlternatives_3_0_1; }
		
		//EInt
		public RuleCall getEIntParserRuleCall_3_0_1_0() { return cEIntParserRuleCall_3_0_1_0; }
		
		//EDouble
		public RuleCall getEDoubleParserRuleCall_3_0_1_1() { return cEDoubleParserRuleCall_3_0_1_1; }
		
		//'-'?dotID
		public Group getGroup_3_0_1_2() { return cGroup_3_0_1_2; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_3_0_1_2_0() { return cHyphenMinusKeyword_3_0_1_2_0; }
		
		//dotID
		public RuleCall getDotIDParserRuleCall_3_0_1_2_1() { return cDotIDParserRuleCall_3_0_1_2_1; }
		
		//'@'dotID(':'(EInt|dotID)+)*
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'@'
		public Keyword getCommercialAtKeyword_3_1_0() { return cCommercialAtKeyword_3_1_0; }
		
		//dotID
		public RuleCall getDotIDParserRuleCall_3_1_1() { return cDotIDParserRuleCall_3_1_1; }
		
		//(':'(EInt|dotID)+)*
		public Group getGroup_3_1_2() { return cGroup_3_1_2; }
		
		//':'
		public Keyword getColonKeyword_3_1_2_0() { return cColonKeyword_3_1_2_0; }
		
		//(EInt|dotID)+
		public Alternatives getAlternatives_3_1_2_1() { return cAlternatives_3_1_2_1; }
		
		//EInt
		public RuleCall getEIntParserRuleCall_3_1_2_1_0() { return cEIntParserRuleCall_3_1_2_1_0; }
		
		//dotID
		public RuleCall getDotIDParserRuleCall_3_1_2_1_1() { return cDotIDParserRuleCall_3_1_2_1_1; }
	}
	public class LinkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.Link");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLinkAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cServiceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cServiceServiceCrossReference_1_0 = (CrossReference)cServiceAssignment_1.eContents().get(0);
		private final RuleCall cServiceServiceIDTerminalRuleCall_1_0_1 = (RuleCall)cServiceServiceCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cAliasAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cAliasEStringParserRuleCall_2_1_0 = (RuleCall)cAliasAssignment_2_1.eContents().get(0);
		
		//Link returns Link:
		//    {Link}
		//    service=[Service|ID](':'alias=EString)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Link}
		//service=[Service|ID](':'alias=EString)?
		public Group getGroup() { return cGroup; }
		
		//{Link}
		public Action getLinkAction_0() { return cLinkAction_0; }
		
		//service=[Service|ID]
		public Assignment getServiceAssignment_1() { return cServiceAssignment_1; }
		
		//[Service|ID]
		public CrossReference getServiceServiceCrossReference_1_0() { return cServiceServiceCrossReference_1_0; }
		
		//ID
		public RuleCall getServiceServiceIDTerminalRuleCall_1_0_1() { return cServiceServiceIDTerminalRuleCall_1_0_1; }
		
		//(':'alias=EString)?
		public Group getGroup_2() { return cGroup_2; }
		
		//':'
		public Keyword getColonKeyword_2_0() { return cColonKeyword_2_0; }
		
		//alias=EString
		public Assignment getAliasAssignment_2_1() { return cAliasAssignment_2_1; }
		
		//EString
		public RuleCall getAliasEStringParserRuleCall_2_1_0() { return cAliasEStringParserRuleCall_2_1_0; }
	}
	public class DependencyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.Dependency");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDependencyAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cServiceAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final CrossReference cServiceServiceCrossReference_1_0_1_0 = (CrossReference)cServiceAssignment_1_0_1.eContents().get(0);
		private final RuleCall cServiceServiceIDTerminalRuleCall_1_0_1_0_1 = (RuleCall)cServiceServiceCrossReference_1_0_1_0.eContents().get(1);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Assignment cServiceAssignment_1_1_0 = (Assignment)cGroup_1_1.eContents().get(0);
		private final CrossReference cServiceServiceCrossReference_1_1_0_0 = (CrossReference)cServiceAssignment_1_1_0.eContents().get(0);
		private final RuleCall cServiceServiceIDTerminalRuleCall_1_1_0_0_1 = (RuleCall)cServiceServiceCrossReference_1_1_0_0.eContents().get(1);
		private final Keyword cColonKeyword_1_1_1 = (Keyword)cGroup_1_1.eContents().get(1);
		private final Keyword cConditionKeyword_1_1_2 = (Keyword)cGroup_1_1.eContents().get(2);
		private final Assignment cConditionAssignment_1_1_3 = (Assignment)cGroup_1_1.eContents().get(3);
		private final RuleCall cConditionConditionEnumRuleCall_1_1_3_0 = (RuleCall)cConditionAssignment_1_1_3.eContents().get(0);
		
		///*
		//Dependency_short returns Dependency:
		//    {Dependency}
		//    '-'service=[Service|EString];
		//Dependency_long returns Dependency:
		//    {Dependency}
		//    service=[Service|EString]':'
		//    'condition:' condition=Condition;
		//*/
		//Dependency returns Dependency:
		//    {Dependency}
		//    (('-'service=[Service|ID]) |
		//    (service=[Service|ID]':'
		//    'condition:' condition=Condition));
		@Override public ParserRule getRule() { return rule; }
		
		//{Dependency}
		//(('-'service=[Service|ID]) |
		//(service=[Service|ID]':'
		//'condition:' condition=Condition))
		public Group getGroup() { return cGroup; }
		
		//{Dependency}
		public Action getDependencyAction_0() { return cDependencyAction_0; }
		
		//(('-'service=[Service|ID]) |
		//(service=[Service|ID]':'
		//'condition:' condition=Condition))
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//('-'service=[Service|ID])
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_1_0_0() { return cHyphenMinusKeyword_1_0_0; }
		
		//service=[Service|ID]
		public Assignment getServiceAssignment_1_0_1() { return cServiceAssignment_1_0_1; }
		
		//[Service|ID]
		public CrossReference getServiceServiceCrossReference_1_0_1_0() { return cServiceServiceCrossReference_1_0_1_0; }
		
		//ID
		public RuleCall getServiceServiceIDTerminalRuleCall_1_0_1_0_1() { return cServiceServiceIDTerminalRuleCall_1_0_1_0_1; }
		
		//(service=[Service|ID]':'
		//'condition:' condition=Condition)
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//service=[Service|ID]
		public Assignment getServiceAssignment_1_1_0() { return cServiceAssignment_1_1_0; }
		
		//[Service|ID]
		public CrossReference getServiceServiceCrossReference_1_1_0_0() { return cServiceServiceCrossReference_1_1_0_0; }
		
		//ID
		public RuleCall getServiceServiceIDTerminalRuleCall_1_1_0_0_1() { return cServiceServiceIDTerminalRuleCall_1_1_0_0_1; }
		
		//':'
		public Keyword getColonKeyword_1_1_1() { return cColonKeyword_1_1_1; }
		
		//'condition:'
		public Keyword getConditionKeyword_1_1_2() { return cConditionKeyword_1_1_2; }
		
		//condition=Condition
		public Assignment getConditionAssignment_1_1_3() { return cConditionAssignment_1_1_3; }
		
		//Condition
		public RuleCall getConditionConditionEnumRuleCall_1_1_3_0() { return cConditionConditionEnumRuleCall_1_1_3_0; }
	}
	public class NetworkConnector_longElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.NetworkConnector_long");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cNetworkConnectorAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNetworkAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cNetworkNetworkCrossReference_1_0 = (CrossReference)cNetworkAssignment_1.eContents().get(0);
		private final RuleCall cNetworkNetworkIDTerminalRuleCall_1_0_1 = (RuleCall)cNetworkNetworkCrossReference_1_0.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cUnorderedGroup_3.eContents().get(0);
		private final Keyword cIpv4_addressKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Assignment cIpv4_addressAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final RuleCall cIpv4_addressDNSParserRuleCall_3_0_1_0 = (RuleCall)cIpv4_addressAssignment_3_0_1.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cUnorderedGroup_3.eContents().get(1);
		private final Keyword cPriorityKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cPriorityAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cPriorityEIntParserRuleCall_3_1_1_0 = (RuleCall)cPriorityAssignment_3_1_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cUnorderedGroup_3.eContents().get(2);
		private final Keyword cAliasesKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Group cGroup_3_2_1 = (Group)cGroup_3_2.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_3_2_1_0 = (Keyword)cGroup_3_2_1.eContents().get(0);
		private final Assignment cAliasesAssignment_3_2_1_1 = (Assignment)cGroup_3_2_1.eContents().get(1);
		private final RuleCall cAliasesAliasParserRuleCall_3_2_1_1_0 = (RuleCall)cAliasesAssignment_3_2_1_1.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cUnorderedGroup_3.eContents().get(3);
		private final Keyword cLink_local_ipsKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Group cGroup_3_3_1 = (Group)cGroup_3_3.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_3_3_1_0 = (Keyword)cGroup_3_3_1.eContents().get(0);
		private final Assignment cLink_local_ipsAssignment_3_3_1_1 = (Assignment)cGroup_3_3_1.eContents().get(1);
		private final RuleCall cLink_local_ipsDNSParserRuleCall_3_3_1_1_0 = (RuleCall)cLink_local_ipsAssignment_3_3_1_1.eContents().get(0);
		
		//NetworkConnector_long returns NetworkConnector:
		//    {NetworkConnector}
		//    network=[Network|ID]':'
		//    (
		//            ('ipv4_address:'    ipv4_address=DNS)?
		//        &    ('priority:'        priority=EInt)?
		//        &    ('aliases:'         ('-'aliases+=Alias)+ )?
		//        &    ('link_local_ips:'     ('-'link_local_ips+=DNS)+ )?
		//    );
		@Override public ParserRule getRule() { return rule; }
		
		//{NetworkConnector}
		//network=[Network|ID]':'
		//(
		//        ('ipv4_address:'    ipv4_address=DNS)?
		//    &    ('priority:'        priority=EInt)?
		//    &    ('aliases:'         ('-'aliases+=Alias)+ )?
		//    &    ('link_local_ips:'     ('-'link_local_ips+=DNS)+ )?
		//)
		public Group getGroup() { return cGroup; }
		
		//{NetworkConnector}
		public Action getNetworkConnectorAction_0() { return cNetworkConnectorAction_0; }
		
		//network=[Network|ID]
		public Assignment getNetworkAssignment_1() { return cNetworkAssignment_1; }
		
		//[Network|ID]
		public CrossReference getNetworkNetworkCrossReference_1_0() { return cNetworkNetworkCrossReference_1_0; }
		
		//ID
		public RuleCall getNetworkNetworkIDTerminalRuleCall_1_0_1() { return cNetworkNetworkIDTerminalRuleCall_1_0_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//(
		//        ('ipv4_address:'    ipv4_address=DNS)?
		//    &    ('priority:'        priority=EInt)?
		//    &    ('aliases:'         ('-'aliases+=Alias)+ )?
		//    &    ('link_local_ips:'     ('-'link_local_ips+=DNS)+ )?
		//)
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }
		
		//('ipv4_address:'	ipv4_address=DNS)?
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//'ipv4_address:'
		public Keyword getIpv4_addressKeyword_3_0_0() { return cIpv4_addressKeyword_3_0_0; }
		
		//ipv4_address=DNS
		public Assignment getIpv4_addressAssignment_3_0_1() { return cIpv4_addressAssignment_3_0_1; }
		
		//DNS
		public RuleCall getIpv4_addressDNSParserRuleCall_3_0_1_0() { return cIpv4_addressDNSParserRuleCall_3_0_1_0; }
		
		//('priority:'		priority=EInt)?
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'priority:'
		public Keyword getPriorityKeyword_3_1_0() { return cPriorityKeyword_3_1_0; }
		
		//priority=EInt
		public Assignment getPriorityAssignment_3_1_1() { return cPriorityAssignment_3_1_1; }
		
		//EInt
		public RuleCall getPriorityEIntParserRuleCall_3_1_1_0() { return cPriorityEIntParserRuleCall_3_1_1_0; }
		
		//('aliases:' 		('-'aliases+=Alias)+ )?
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//'aliases:'
		public Keyword getAliasesKeyword_3_2_0() { return cAliasesKeyword_3_2_0; }
		
		//('-'aliases+=Alias)+
		public Group getGroup_3_2_1() { return cGroup_3_2_1; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_3_2_1_0() { return cHyphenMinusKeyword_3_2_1_0; }
		
		//aliases+=Alias
		public Assignment getAliasesAssignment_3_2_1_1() { return cAliasesAssignment_3_2_1_1; }
		
		//Alias
		public RuleCall getAliasesAliasParserRuleCall_3_2_1_1_0() { return cAliasesAliasParserRuleCall_3_2_1_1_0; }
		
		//('link_local_ips:' 	('-'link_local_ips+=DNS)+ )?
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//'link_local_ips:'
		public Keyword getLink_local_ipsKeyword_3_3_0() { return cLink_local_ipsKeyword_3_3_0; }
		
		//('-'link_local_ips+=DNS)+
		public Group getGroup_3_3_1() { return cGroup_3_3_1; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_3_3_1_0() { return cHyphenMinusKeyword_3_3_1_0; }
		
		//link_local_ips+=DNS
		public Assignment getLink_local_ipsAssignment_3_3_1_1() { return cLink_local_ipsAssignment_3_3_1_1; }
		
		//DNS
		public RuleCall getLink_local_ipsDNSParserRuleCall_3_3_1_1_0() { return cLink_local_ipsDNSParserRuleCall_3_3_1_1_0; }
	}
	public class NetworkConnector_shortElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.NetworkConnector_short");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cNetworkConnectorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNetworkAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cNetworkNetworkCrossReference_2_0 = (CrossReference)cNetworkAssignment_2.eContents().get(0);
		private final RuleCall cNetworkNetworkIDTerminalRuleCall_2_0_1 = (RuleCall)cNetworkNetworkCrossReference_2_0.eContents().get(1);
		
		//NetworkConnector_short returns NetworkConnector:
		//    {NetworkConnector}
		//    '-'network=[Network|ID];
		@Override public ParserRule getRule() { return rule; }
		
		//{NetworkConnector}
		//'-'network=[Network|ID]
		public Group getGroup() { return cGroup; }
		
		//{NetworkConnector}
		public Action getNetworkConnectorAction_0() { return cNetworkConnectorAction_0; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_1() { return cHyphenMinusKeyword_1; }
		
		//network=[Network|ID]
		public Assignment getNetworkAssignment_2() { return cNetworkAssignment_2; }
		
		//[Network|ID]
		public CrossReference getNetworkNetworkCrossReference_2_0() { return cNetworkNetworkCrossReference_2_0; }
		
		//ID
		public RuleCall getNetworkNetworkIDTerminalRuleCall_2_0_1() { return cNetworkNetworkIDTerminalRuleCall_2_0_1; }
	}
	public class AliasElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.Alias");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAliasAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cAliasAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAliasEStringParserRuleCall_1_0 = (RuleCall)cAliasAssignment_1.eContents().get(0);
		
		///*
		//NetworkConnector returns NetworkConnector:
		//    {NetworkConnector}
		//    ('-'network=[Network|ID] |
		//    (network=[Network|ID]':'
		//    (
		//            ('ipv4_address:'    ipv4_address=DNS)?
		//        &    ('priority:'        priority=EInt)?
		//        &    ('aliases:'         ('-'aliases+=Alias)+ )?
		//        &    ('link_local_ips:'     ('-'link_local_ips+=DNS)+ )?
		//    )));
		//*/
		//Alias returns Alias:
		//    {Alias}
		//    alias=EString
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Alias}
		//alias=EString
		public Group getGroup() { return cGroup; }
		
		//{Alias}
		public Action getAliasAction_0() { return cAliasAction_0; }
		
		//alias=EString
		public Assignment getAliasAssignment_1() { return cAliasAssignment_1; }
		
		//EString
		public RuleCall getAliasEStringParserRuleCall_1_0() { return cAliasEStringParserRuleCall_1_0; }
	}
	public class VolumeConnectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.VolumeConnector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cVolumeConnectorAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Assignment cVolumeAssignment_1_0_0 = (Assignment)cGroup_1_0.eContents().get(0);
		private final CrossReference cVolumeVolumeCrossReference_1_0_0_0 = (CrossReference)cVolumeAssignment_1_0_0.eContents().get(0);
		private final RuleCall cVolumeVolumeIDTerminalRuleCall_1_0_0_0_1 = (RuleCall)cVolumeVolumeCrossReference_1_0_0_0.eContents().get(1);
		private final Keyword cColonKeyword_1_0_1 = (Keyword)cGroup_1_0.eContents().get(1);
		private final Assignment cContainer_pathAssignment_1_0_2 = (Assignment)cGroup_1_0.eContents().get(2);
		private final RuleCall cContainer_pathPATHParserRuleCall_1_0_2_0 = (RuleCall)cContainer_pathAssignment_1_0_2.eContents().get(0);
		private final Group cGroup_1_0_3 = (Group)cGroup_1_0.eContents().get(3);
		private final Keyword cColonKeyword_1_0_3_0 = (Keyword)cGroup_1_0_3.eContents().get(0);
		private final Assignment cAccess_modeAssignment_1_0_3_1 = (Assignment)cGroup_1_0_3.eContents().get(1);
		private final RuleCall cAccess_modeAccessModeEnumRuleCall_1_0_3_1_0 = (RuleCall)cAccess_modeAssignment_1_0_3_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1_1 = (UnorderedGroup)cAlternatives_1.eContents().get(1);
		private final Group cGroup_1_1_0 = (Group)cUnorderedGroup_1_1.eContents().get(0);
		private final Keyword cSourceKeyword_1_1_0_0 = (Keyword)cGroup_1_1_0.eContents().get(0);
		private final Assignment cVolumeAssignment_1_1_0_1 = (Assignment)cGroup_1_1_0.eContents().get(1);
		private final CrossReference cVolumeVolumeCrossReference_1_1_0_1_0 = (CrossReference)cVolumeAssignment_1_1_0_1.eContents().get(0);
		private final RuleCall cVolumeVolumeIDTerminalRuleCall_1_1_0_1_0_1 = (RuleCall)cVolumeVolumeCrossReference_1_1_0_1_0.eContents().get(1);
		private final Group cGroup_1_1_1 = (Group)cUnorderedGroup_1_1.eContents().get(1);
		private final Keyword cTypeKeyword_1_1_1_0 = (Keyword)cGroup_1_1_1.eContents().get(0);
		private final Assignment cTypeAssignment_1_1_1_1 = (Assignment)cGroup_1_1_1.eContents().get(1);
		private final RuleCall cTypeMountTypeEnumRuleCall_1_1_1_1_0 = (RuleCall)cTypeAssignment_1_1_1_1.eContents().get(0);
		private final Group cGroup_1_1_2 = (Group)cUnorderedGroup_1_1.eContents().get(2);
		private final Keyword cTargetKeyword_1_1_2_0 = (Keyword)cGroup_1_1_2.eContents().get(0);
		private final Assignment cContainer_pathAssignment_1_1_2_1 = (Assignment)cGroup_1_1_2.eContents().get(1);
		private final RuleCall cContainer_pathPATHParserRuleCall_1_1_2_1_0 = (RuleCall)cContainer_pathAssignment_1_1_2_1.eContents().get(0);
		private final Group cGroup_1_1_3 = (Group)cUnorderedGroup_1_1.eContents().get(3);
		private final Keyword cRead_onlyKeyword_1_1_3_0 = (Keyword)cGroup_1_1_3.eContents().get(0);
		private final Assignment cRead_onlyAssignment_1_1_3_1 = (Assignment)cGroup_1_1_3.eContents().get(1);
		private final RuleCall cRead_onlyEBooleanParserRuleCall_1_1_3_1_0 = (RuleCall)cRead_onlyAssignment_1_1_3_1.eContents().get(0);
		private final Group cGroup_1_1_4 = (Group)cUnorderedGroup_1_1.eContents().get(4);
		private final Keyword cBindKeyword_1_1_4_0 = (Keyword)cGroup_1_1_4.eContents().get(0);
		private final Keyword cPropagationKeyword_1_1_4_1 = (Keyword)cGroup_1_1_4.eContents().get(1);
		private final Assignment cPropagationAssignment_1_1_4_2 = (Assignment)cGroup_1_1_4.eContents().get(2);
		private final RuleCall cPropagationPropagationTypeEnumRuleCall_1_1_4_2_0 = (RuleCall)cPropagationAssignment_1_1_4_2.eContents().get(0);
		private final Group cGroup_1_1_5 = (Group)cUnorderedGroup_1_1.eContents().get(5);
		private final Keyword cVolumeKeyword_1_1_5_0 = (Keyword)cGroup_1_1_5.eContents().get(0);
		private final Keyword cNocopyKeyword_1_1_5_1 = (Keyword)cGroup_1_1_5.eContents().get(1);
		private final Assignment cNocopyAssignment_1_1_5_2 = (Assignment)cGroup_1_1_5.eContents().get(2);
		private final RuleCall cNocopyEBooleanParserRuleCall_1_1_5_2_0 = (RuleCall)cNocopyAssignment_1_1_5_2.eContents().get(0);
		private final Group cGroup_1_1_6 = (Group)cUnorderedGroup_1_1.eContents().get(6);
		private final Keyword cTmpfsKeyword_1_1_6_0 = (Keyword)cGroup_1_1_6.eContents().get(0);
		private final Keyword cSizeKeyword_1_1_6_1 = (Keyword)cGroup_1_1_6.eContents().get(1);
		private final Keyword cColonKeyword_1_1_6_2 = (Keyword)cGroup_1_1_6.eContents().get(2);
		private final Assignment cSizeAssignment_1_1_6_3 = (Assignment)cGroup_1_1_6.eContents().get(3);
		private final RuleCall cSizeEIntParserRuleCall_1_1_6_3_0 = (RuleCall)cSizeAssignment_1_1_6_3.eContents().get(0);
		
		///*
		//VolumeConnector_long returns VolumeConnector:
		//    {VolumeConnector}
		//    (
		//            ('source:'            volume=[Volume|EString])
		//        &    ('type:'            type=MountType)?
		//        &    ('target:'            container_path=PATH)
		//        &    ('read_only:'         read_only=EBoolean)?
		//        &    ('bind:'
		//                'propagation:'    propagation=PropagationType)?
		//        &    ('volume:'
		//                'nocopy:'         nocopy=EBoolean)?
		//        &    ('tmpfs:'
		//                'size:'         size=EInt)?
		//    );
		//VolumeConnector_short returns VolumeConnector:
		//    {VolumeConnector}
		//    volume=[Volume|EString]':'container_path=PATH(':'access_mode=AccessMode)?;
		// */
		// VolumeConnector returns VolumeConnector:
		//    {VolumeConnector}
		//    ((volume=[Volume|ID]':'container_path=PATH(':'access_mode=AccessMode)?) |
		//    (
		//            ('source:'            volume=[Volume|ID])
		//        &    ('type:'            type=MountType)?
		//        &    ('target:'            container_path=PATH)
		//        &    ('read_only:'         read_only=EBoolean)?
		//        &    ('bind:'
		//                'propagation:'    propagation=PropagationType)?
		//        &    ('volume:'
		//                'nocopy:'         nocopy=EBoolean)?
		//        &    ('tmpfs:'
		//                'size'':'         size=EInt)?
		//    ));
		@Override public ParserRule getRule() { return rule; }
		
		//{VolumeConnector}
		//((volume=[Volume|ID]':'container_path=PATH(':'access_mode=AccessMode)?) |
		//(
		//        ('source:'            volume=[Volume|ID])
		//    &    ('type:'            type=MountType)?
		//    &    ('target:'            container_path=PATH)
		//    &    ('read_only:'         read_only=EBoolean)?
		//    &    ('bind:'
		//            'propagation:'    propagation=PropagationType)?
		//    &    ('volume:'
		//            'nocopy:'         nocopy=EBoolean)?
		//    &    ('tmpfs:'
		//            'size'':'         size=EInt)?
		//))
		public Group getGroup() { return cGroup; }
		
		//{VolumeConnector}
		public Action getVolumeConnectorAction_0() { return cVolumeConnectorAction_0; }
		
		//((volume=[Volume|ID]':'container_path=PATH(':'access_mode=AccessMode)?) |
		//(
		//        ('source:'            volume=[Volume|ID])
		//    &    ('type:'            type=MountType)?
		//    &    ('target:'            container_path=PATH)
		//    &    ('read_only:'         read_only=EBoolean)?
		//    &    ('bind:'
		//            'propagation:'    propagation=PropagationType)?
		//    &    ('volume:'
		//            'nocopy:'         nocopy=EBoolean)?
		//    &    ('tmpfs:'
		//            'size'':'         size=EInt)?
		//))
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//(volume=[Volume|ID]':'container_path=PATH(':'access_mode=AccessMode)?)
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//volume=[Volume|ID]
		public Assignment getVolumeAssignment_1_0_0() { return cVolumeAssignment_1_0_0; }
		
		//[Volume|ID]
		public CrossReference getVolumeVolumeCrossReference_1_0_0_0() { return cVolumeVolumeCrossReference_1_0_0_0; }
		
		//ID
		public RuleCall getVolumeVolumeIDTerminalRuleCall_1_0_0_0_1() { return cVolumeVolumeIDTerminalRuleCall_1_0_0_0_1; }
		
		//':'
		public Keyword getColonKeyword_1_0_1() { return cColonKeyword_1_0_1; }
		
		//container_path=PATH
		public Assignment getContainer_pathAssignment_1_0_2() { return cContainer_pathAssignment_1_0_2; }
		
		//PATH
		public RuleCall getContainer_pathPATHParserRuleCall_1_0_2_0() { return cContainer_pathPATHParserRuleCall_1_0_2_0; }
		
		//(':'access_mode=AccessMode)?
		public Group getGroup_1_0_3() { return cGroup_1_0_3; }
		
		//':'
		public Keyword getColonKeyword_1_0_3_0() { return cColonKeyword_1_0_3_0; }
		
		//access_mode=AccessMode
		public Assignment getAccess_modeAssignment_1_0_3_1() { return cAccess_modeAssignment_1_0_3_1; }
		
		//AccessMode
		public RuleCall getAccess_modeAccessModeEnumRuleCall_1_0_3_1_0() { return cAccess_modeAccessModeEnumRuleCall_1_0_3_1_0; }
		
		//(
		//        ('source:'            volume=[Volume|ID])
		//    &    ('type:'            type=MountType)?
		//    &    ('target:'            container_path=PATH)
		//    &    ('read_only:'         read_only=EBoolean)?
		//    &    ('bind:'
		//            'propagation:'    propagation=PropagationType)?
		//    &    ('volume:'
		//            'nocopy:'         nocopy=EBoolean)?
		//    &    ('tmpfs:'
		//            'size'':'         size=EInt)?
		//)
		public UnorderedGroup getUnorderedGroup_1_1() { return cUnorderedGroup_1_1; }
		
		//('source:'			volume=[Volume|ID])
		public Group getGroup_1_1_0() { return cGroup_1_1_0; }
		
		//'source:'
		public Keyword getSourceKeyword_1_1_0_0() { return cSourceKeyword_1_1_0_0; }
		
		//volume=[Volume|ID]
		public Assignment getVolumeAssignment_1_1_0_1() { return cVolumeAssignment_1_1_0_1; }
		
		//[Volume|ID]
		public CrossReference getVolumeVolumeCrossReference_1_1_0_1_0() { return cVolumeVolumeCrossReference_1_1_0_1_0; }
		
		//ID
		public RuleCall getVolumeVolumeIDTerminalRuleCall_1_1_0_1_0_1() { return cVolumeVolumeIDTerminalRuleCall_1_1_0_1_0_1; }
		
		//('type:'			type=MountType)?
		public Group getGroup_1_1_1() { return cGroup_1_1_1; }
		
		//'type:'
		public Keyword getTypeKeyword_1_1_1_0() { return cTypeKeyword_1_1_1_0; }
		
		//type=MountType
		public Assignment getTypeAssignment_1_1_1_1() { return cTypeAssignment_1_1_1_1; }
		
		//MountType
		public RuleCall getTypeMountTypeEnumRuleCall_1_1_1_1_0() { return cTypeMountTypeEnumRuleCall_1_1_1_1_0; }
		
		//('target:'			container_path=PATH)
		public Group getGroup_1_1_2() { return cGroup_1_1_2; }
		
		//'target:'
		public Keyword getTargetKeyword_1_1_2_0() { return cTargetKeyword_1_1_2_0; }
		
		//container_path=PATH
		public Assignment getContainer_pathAssignment_1_1_2_1() { return cContainer_pathAssignment_1_1_2_1; }
		
		//PATH
		public RuleCall getContainer_pathPATHParserRuleCall_1_1_2_1_0() { return cContainer_pathPATHParserRuleCall_1_1_2_1_0; }
		
		//('read_only:' 		read_only=EBoolean)?
		public Group getGroup_1_1_3() { return cGroup_1_1_3; }
		
		//'read_only:'
		public Keyword getRead_onlyKeyword_1_1_3_0() { return cRead_onlyKeyword_1_1_3_0; }
		
		//read_only=EBoolean
		public Assignment getRead_onlyAssignment_1_1_3_1() { return cRead_onlyAssignment_1_1_3_1; }
		
		//EBoolean
		public RuleCall getRead_onlyEBooleanParserRuleCall_1_1_3_1_0() { return cRead_onlyEBooleanParserRuleCall_1_1_3_1_0; }
		
		//('bind:'
		//            'propagation:'    propagation=PropagationType)?
		public Group getGroup_1_1_4() { return cGroup_1_1_4; }
		
		//'bind:'
		public Keyword getBindKeyword_1_1_4_0() { return cBindKeyword_1_1_4_0; }
		
		//'propagation:'
		public Keyword getPropagationKeyword_1_1_4_1() { return cPropagationKeyword_1_1_4_1; }
		
		//propagation=PropagationType
		public Assignment getPropagationAssignment_1_1_4_2() { return cPropagationAssignment_1_1_4_2; }
		
		//PropagationType
		public RuleCall getPropagationPropagationTypeEnumRuleCall_1_1_4_2_0() { return cPropagationPropagationTypeEnumRuleCall_1_1_4_2_0; }
		
		//('volume:'
		//            'nocopy:'         nocopy=EBoolean)?
		public Group getGroup_1_1_5() { return cGroup_1_1_5; }
		
		//'volume:'
		public Keyword getVolumeKeyword_1_1_5_0() { return cVolumeKeyword_1_1_5_0; }
		
		//'nocopy:'
		public Keyword getNocopyKeyword_1_1_5_1() { return cNocopyKeyword_1_1_5_1; }
		
		//nocopy=EBoolean
		public Assignment getNocopyAssignment_1_1_5_2() { return cNocopyAssignment_1_1_5_2; }
		
		//EBoolean
		public RuleCall getNocopyEBooleanParserRuleCall_1_1_5_2_0() { return cNocopyEBooleanParserRuleCall_1_1_5_2_0; }
		
		//('tmpfs:'
		//            'size'':'         size=EInt)?
		public Group getGroup_1_1_6() { return cGroup_1_1_6; }
		
		//'tmpfs:'
		public Keyword getTmpfsKeyword_1_1_6_0() { return cTmpfsKeyword_1_1_6_0; }
		
		//'size'
		public Keyword getSizeKeyword_1_1_6_1() { return cSizeKeyword_1_1_6_1; }
		
		//':'
		public Keyword getColonKeyword_1_1_6_2() { return cColonKeyword_1_1_6_2; }
		
		//size=EInt
		public Assignment getSizeAssignment_1_1_6_3() { return cSizeAssignment_1_1_6_3; }
		
		//EInt
		public RuleCall getSizeEIntParserRuleCall_1_1_6_3_0() { return cSizeEIntParserRuleCall_1_1_6_3_0; }
	}
	public class ConfigConnectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.ConfigConnector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConfigConnectorAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cConfigAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final CrossReference cConfigConfigCrossReference_1_0_0 = (CrossReference)cConfigAssignment_1_0.eContents().get(0);
		private final RuleCall cConfigConfigIDTerminalRuleCall_1_0_0_1 = (RuleCall)cConfigConfigCrossReference_1_0_0.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_1_1 = (UnorderedGroup)cAlternatives_1.eContents().get(1);
		private final Group cGroup_1_1_0 = (Group)cUnorderedGroup_1_1.eContents().get(0);
		private final Keyword cSourceKeyword_1_1_0_0 = (Keyword)cGroup_1_1_0.eContents().get(0);
		private final Assignment cConfigAssignment_1_1_0_1 = (Assignment)cGroup_1_1_0.eContents().get(1);
		private final CrossReference cConfigConfigCrossReference_1_1_0_1_0 = (CrossReference)cConfigAssignment_1_1_0_1.eContents().get(0);
		private final RuleCall cConfigConfigIDTerminalRuleCall_1_1_0_1_0_1 = (RuleCall)cConfigConfigCrossReference_1_1_0_1_0.eContents().get(1);
		private final Group cGroup_1_1_1 = (Group)cUnorderedGroup_1_1.eContents().get(1);
		private final Keyword cTargetKeyword_1_1_1_0 = (Keyword)cGroup_1_1_1.eContents().get(0);
		private final Assignment cTargetAssignment_1_1_1_1 = (Assignment)cGroup_1_1_1.eContents().get(1);
		private final RuleCall cTargetPATHParserRuleCall_1_1_1_1_0 = (RuleCall)cTargetAssignment_1_1_1_1.eContents().get(0);
		private final Group cGroup_1_1_2 = (Group)cUnorderedGroup_1_1.eContents().get(2);
		private final Keyword cUidKeyword_1_1_2_0 = (Keyword)cGroup_1_1_2.eContents().get(0);
		private final Assignment cUidAssignment_1_1_2_1 = (Assignment)cGroup_1_1_2.eContents().get(1);
		private final RuleCall cUidQuotedIntParserRuleCall_1_1_2_1_0 = (RuleCall)cUidAssignment_1_1_2_1.eContents().get(0);
		private final Group cGroup_1_1_3 = (Group)cUnorderedGroup_1_1.eContents().get(3);
		private final Keyword cGidKeyword_1_1_3_0 = (Keyword)cGroup_1_1_3.eContents().get(0);
		private final Assignment cGidAssignment_1_1_3_1 = (Assignment)cGroup_1_1_3.eContents().get(1);
		private final RuleCall cGidQuotedIntParserRuleCall_1_1_3_1_0 = (RuleCall)cGidAssignment_1_1_3_1.eContents().get(0);
		private final Group cGroup_1_1_4 = (Group)cUnorderedGroup_1_1.eContents().get(4);
		private final Keyword cModeKeyword_1_1_4_0 = (Keyword)cGroup_1_1_4.eContents().get(0);
		private final Assignment cModeAssignment_1_1_4_1 = (Assignment)cGroup_1_1_4.eContents().get(1);
		private final RuleCall cModeEIntParserRuleCall_1_1_4_1_0 = (RuleCall)cModeAssignment_1_1_4_1.eContents().get(0);
		
		///*
		//ConfigConnector_long returns ConfigConnector:
		//    {ConfigConnector}
		//    (
		//            ('source:'    config=[Config|EString])
		//        &    ('target:'    target=PATH)?
		//        &    ('uid:'     uid=QUOTED_INT)?
		//        &    ('gid:'     gid=QUOTED_INT)?
		//        &    ('mode:'     mode=EInt)?
		//    );
		//ConfigConnector_short returns ConfigConnector:
		//    {ConfigConnector}
		//    config=[Config|EString];
		//*/
		//ConfigConnector returns ConfigConnector:
		//    {ConfigConnector}
		//    ((config=[Config|ID]) |
		//    (
		//            ('source:'    config=[Config|ID])
		//        &    ('target:'    target=PATH)?
		//        &    ('uid:'     uid=QuotedInt)?
		//        &    ('gid:'     gid=QuotedInt)?
		//        &    ('mode:'     mode=EInt)?
		//    ));
		@Override public ParserRule getRule() { return rule; }
		
		//{ConfigConnector}
		//((config=[Config|ID]) |
		//(
		//        ('source:'    config=[Config|ID])
		//    &    ('target:'    target=PATH)?
		//    &    ('uid:'     uid=QuotedInt)?
		//    &    ('gid:'     gid=QuotedInt)?
		//    &    ('mode:'     mode=EInt)?
		//))
		public Group getGroup() { return cGroup; }
		
		//{ConfigConnector}
		public Action getConfigConnectorAction_0() { return cConfigConnectorAction_0; }
		
		//((config=[Config|ID]) |
		//(
		//        ('source:'    config=[Config|ID])
		//    &    ('target:'    target=PATH)?
		//    &    ('uid:'     uid=QuotedInt)?
		//    &    ('gid:'     gid=QuotedInt)?
		//    &    ('mode:'     mode=EInt)?
		//))
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//(config=[Config|ID])
		public Assignment getConfigAssignment_1_0() { return cConfigAssignment_1_0; }
		
		//[Config|ID]
		public CrossReference getConfigConfigCrossReference_1_0_0() { return cConfigConfigCrossReference_1_0_0; }
		
		//ID
		public RuleCall getConfigConfigIDTerminalRuleCall_1_0_0_1() { return cConfigConfigIDTerminalRuleCall_1_0_0_1; }
		
		//(
		//        ('source:'    config=[Config|ID])
		//    &    ('target:'    target=PATH)?
		//    &    ('uid:'     uid=QuotedInt)?
		//    &    ('gid:'     gid=QuotedInt)?
		//    &    ('mode:'     mode=EInt)?
		//)
		public UnorderedGroup getUnorderedGroup_1_1() { return cUnorderedGroup_1_1; }
		
		//('source:'	config=[Config|ID])
		public Group getGroup_1_1_0() { return cGroup_1_1_0; }
		
		//'source:'
		public Keyword getSourceKeyword_1_1_0_0() { return cSourceKeyword_1_1_0_0; }
		
		//config=[Config|ID]
		public Assignment getConfigAssignment_1_1_0_1() { return cConfigAssignment_1_1_0_1; }
		
		//[Config|ID]
		public CrossReference getConfigConfigCrossReference_1_1_0_1_0() { return cConfigConfigCrossReference_1_1_0_1_0; }
		
		//ID
		public RuleCall getConfigConfigIDTerminalRuleCall_1_1_0_1_0_1() { return cConfigConfigIDTerminalRuleCall_1_1_0_1_0_1; }
		
		//('target:'	target=PATH)?
		public Group getGroup_1_1_1() { return cGroup_1_1_1; }
		
		//'target:'
		public Keyword getTargetKeyword_1_1_1_0() { return cTargetKeyword_1_1_1_0; }
		
		//target=PATH
		public Assignment getTargetAssignment_1_1_1_1() { return cTargetAssignment_1_1_1_1; }
		
		//PATH
		public RuleCall getTargetPATHParserRuleCall_1_1_1_1_0() { return cTargetPATHParserRuleCall_1_1_1_1_0; }
		
		//('uid:' 	uid=QuotedInt)?
		public Group getGroup_1_1_2() { return cGroup_1_1_2; }
		
		//'uid:'
		public Keyword getUidKeyword_1_1_2_0() { return cUidKeyword_1_1_2_0; }
		
		//uid=QuotedInt
		public Assignment getUidAssignment_1_1_2_1() { return cUidAssignment_1_1_2_1; }
		
		//QuotedInt
		public RuleCall getUidQuotedIntParserRuleCall_1_1_2_1_0() { return cUidQuotedIntParserRuleCall_1_1_2_1_0; }
		
		//('gid:' 	gid=QuotedInt)?
		public Group getGroup_1_1_3() { return cGroup_1_1_3; }
		
		//'gid:'
		public Keyword getGidKeyword_1_1_3_0() { return cGidKeyword_1_1_3_0; }
		
		//gid=QuotedInt
		public Assignment getGidAssignment_1_1_3_1() { return cGidAssignment_1_1_3_1; }
		
		//QuotedInt
		public RuleCall getGidQuotedIntParserRuleCall_1_1_3_1_0() { return cGidQuotedIntParserRuleCall_1_1_3_1_0; }
		
		//('mode:' 	mode=EInt)?
		public Group getGroup_1_1_4() { return cGroup_1_1_4; }
		
		//'mode:'
		public Keyword getModeKeyword_1_1_4_0() { return cModeKeyword_1_1_4_0; }
		
		//mode=EInt
		public Assignment getModeAssignment_1_1_4_1() { return cModeAssignment_1_1_4_1; }
		
		//EInt
		public RuleCall getModeEIntParserRuleCall_1_1_4_1_0() { return cModeEIntParserRuleCall_1_1_4_1_0; }
	}
	public class SecretConnectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.SecretConnector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSecretConnectorAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cSecretAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final CrossReference cSecretSecretCrossReference_1_0_0 = (CrossReference)cSecretAssignment_1_0.eContents().get(0);
		private final RuleCall cSecretSecretIDTerminalRuleCall_1_0_0_1 = (RuleCall)cSecretSecretCrossReference_1_0_0.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_1_1 = (UnorderedGroup)cAlternatives_1.eContents().get(1);
		private final Group cGroup_1_1_0 = (Group)cUnorderedGroup_1_1.eContents().get(0);
		private final Keyword cSourceKeyword_1_1_0_0 = (Keyword)cGroup_1_1_0.eContents().get(0);
		private final Assignment cSecretAssignment_1_1_0_1 = (Assignment)cGroup_1_1_0.eContents().get(1);
		private final CrossReference cSecretSecretCrossReference_1_1_0_1_0 = (CrossReference)cSecretAssignment_1_1_0_1.eContents().get(0);
		private final RuleCall cSecretSecretIDTerminalRuleCall_1_1_0_1_0_1 = (RuleCall)cSecretSecretCrossReference_1_1_0_1_0.eContents().get(1);
		private final Group cGroup_1_1_1 = (Group)cUnorderedGroup_1_1.eContents().get(1);
		private final Keyword cTargetKeyword_1_1_1_0 = (Keyword)cGroup_1_1_1.eContents().get(0);
		private final Assignment cTargetAssignment_1_1_1_1 = (Assignment)cGroup_1_1_1.eContents().get(1);
		private final RuleCall cTargetPATHParserRuleCall_1_1_1_1_0 = (RuleCall)cTargetAssignment_1_1_1_1.eContents().get(0);
		private final Group cGroup_1_1_2 = (Group)cUnorderedGroup_1_1.eContents().get(2);
		private final Keyword cUidKeyword_1_1_2_0 = (Keyword)cGroup_1_1_2.eContents().get(0);
		private final Assignment cUidAssignment_1_1_2_1 = (Assignment)cGroup_1_1_2.eContents().get(1);
		private final RuleCall cUidQuotedIntParserRuleCall_1_1_2_1_0 = (RuleCall)cUidAssignment_1_1_2_1.eContents().get(0);
		private final Group cGroup_1_1_3 = (Group)cUnorderedGroup_1_1.eContents().get(3);
		private final Keyword cGidKeyword_1_1_3_0 = (Keyword)cGroup_1_1_3.eContents().get(0);
		private final Assignment cGidAssignment_1_1_3_1 = (Assignment)cGroup_1_1_3.eContents().get(1);
		private final RuleCall cGidQuotedIntParserRuleCall_1_1_3_1_0 = (RuleCall)cGidAssignment_1_1_3_1.eContents().get(0);
		private final Group cGroup_1_1_4 = (Group)cUnorderedGroup_1_1.eContents().get(4);
		private final Keyword cModeKeyword_1_1_4_0 = (Keyword)cGroup_1_1_4.eContents().get(0);
		private final Assignment cModeAssignment_1_1_4_1 = (Assignment)cGroup_1_1_4.eContents().get(1);
		private final RuleCall cModeEIntParserRuleCall_1_1_4_1_0 = (RuleCall)cModeAssignment_1_1_4_1.eContents().get(0);
		
		///*
		//SecretConnector_long returns SecretConnector:
		//    {SecretConnector}
		//    (
		//            ('source:'    secret=[Secret|EString])
		//        &    ('target:'    target=PATH)?
		//        &    ('uid:'     uid=QUOTED_INT)?
		//        &    ('gid:'     gid=QUOTED_INT)?
		//        &    ('mode:'     mode=EInt)?
		//    );
		//SecretConnector_short returns SecretConnector:
		//    {SecretConnector}
		//    secret=[Secret|EString];
		//*/
		//SecretConnector returns SecretConnector:
		//    {SecretConnector}
		//    ((secret=[Secret|ID]) |
		//    (
		//            ('source:'    secret=[Secret|ID])
		//        &    ('target:'    target=PATH)?
		//        &    ('uid:'     uid=QuotedInt)?
		//        &    ('gid:'     gid=QuotedInt)?
		//        &    ('mode:'     mode=EInt)?
		//    ));
		@Override public ParserRule getRule() { return rule; }
		
		//{SecretConnector}
		//((secret=[Secret|ID]) |
		//(
		//        ('source:'    secret=[Secret|ID])
		//    &    ('target:'    target=PATH)?
		//    &    ('uid:'     uid=QuotedInt)?
		//    &    ('gid:'     gid=QuotedInt)?
		//    &    ('mode:'     mode=EInt)?
		//))
		public Group getGroup() { return cGroup; }
		
		//{SecretConnector}
		public Action getSecretConnectorAction_0() { return cSecretConnectorAction_0; }
		
		//((secret=[Secret|ID]) |
		//(
		//        ('source:'    secret=[Secret|ID])
		//    &    ('target:'    target=PATH)?
		//    &    ('uid:'     uid=QuotedInt)?
		//    &    ('gid:'     gid=QuotedInt)?
		//    &    ('mode:'     mode=EInt)?
		//))
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//(secret=[Secret|ID])
		public Assignment getSecretAssignment_1_0() { return cSecretAssignment_1_0; }
		
		//[Secret|ID]
		public CrossReference getSecretSecretCrossReference_1_0_0() { return cSecretSecretCrossReference_1_0_0; }
		
		//ID
		public RuleCall getSecretSecretIDTerminalRuleCall_1_0_0_1() { return cSecretSecretIDTerminalRuleCall_1_0_0_1; }
		
		//(
		//        ('source:'    secret=[Secret|ID])
		//    &    ('target:'    target=PATH)?
		//    &    ('uid:'     uid=QuotedInt)?
		//    &    ('gid:'     gid=QuotedInt)?
		//    &    ('mode:'     mode=EInt)?
		//)
		public UnorderedGroup getUnorderedGroup_1_1() { return cUnorderedGroup_1_1; }
		
		//('source:'	secret=[Secret|ID])
		public Group getGroup_1_1_0() { return cGroup_1_1_0; }
		
		//'source:'
		public Keyword getSourceKeyword_1_1_0_0() { return cSourceKeyword_1_1_0_0; }
		
		//secret=[Secret|ID]
		public Assignment getSecretAssignment_1_1_0_1() { return cSecretAssignment_1_1_0_1; }
		
		//[Secret|ID]
		public CrossReference getSecretSecretCrossReference_1_1_0_1_0() { return cSecretSecretCrossReference_1_1_0_1_0; }
		
		//ID
		public RuleCall getSecretSecretIDTerminalRuleCall_1_1_0_1_0_1() { return cSecretSecretIDTerminalRuleCall_1_1_0_1_0_1; }
		
		//('target:'	target=PATH)?
		public Group getGroup_1_1_1() { return cGroup_1_1_1; }
		
		//'target:'
		public Keyword getTargetKeyword_1_1_1_0() { return cTargetKeyword_1_1_1_0; }
		
		//target=PATH
		public Assignment getTargetAssignment_1_1_1_1() { return cTargetAssignment_1_1_1_1; }
		
		//PATH
		public RuleCall getTargetPATHParserRuleCall_1_1_1_1_0() { return cTargetPATHParserRuleCall_1_1_1_1_0; }
		
		//('uid:' 	uid=QuotedInt)?
		public Group getGroup_1_1_2() { return cGroup_1_1_2; }
		
		//'uid:'
		public Keyword getUidKeyword_1_1_2_0() { return cUidKeyword_1_1_2_0; }
		
		//uid=QuotedInt
		public Assignment getUidAssignment_1_1_2_1() { return cUidAssignment_1_1_2_1; }
		
		//QuotedInt
		public RuleCall getUidQuotedIntParserRuleCall_1_1_2_1_0() { return cUidQuotedIntParserRuleCall_1_1_2_1_0; }
		
		//('gid:' 	gid=QuotedInt)?
		public Group getGroup_1_1_3() { return cGroup_1_1_3; }
		
		//'gid:'
		public Keyword getGidKeyword_1_1_3_0() { return cGidKeyword_1_1_3_0; }
		
		//gid=QuotedInt
		public Assignment getGidAssignment_1_1_3_1() { return cGidAssignment_1_1_3_1; }
		
		//QuotedInt
		public RuleCall getGidQuotedIntParserRuleCall_1_1_3_1_0() { return cGidQuotedIntParserRuleCall_1_1_3_1_0; }
		
		//('mode:' 	mode=EInt)?
		public Group getGroup_1_1_4() { return cGroup_1_1_4; }
		
		//'mode:'
		public Keyword getModeKeyword_1_1_4_0() { return cModeKeyword_1_1_4_0; }
		
		//mode=EInt
		public Assignment getModeAssignment_1_1_4_1() { return cModeAssignment_1_1_4_1; }
		
		//EInt
		public RuleCall getModeEIntParserRuleCall_1_1_4_1_0() { return cModeEIntParserRuleCall_1_1_4_1_0; }
	}
	public class NetworkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.Network");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cNetworkAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_0_1 = (Keyword)cGroup_3_0.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_3_1 = (UnorderedGroup)cAlternatives_3.eContents().get(1);
		private final Group cGroup_3_1_0 = (Group)cUnorderedGroup_3_1.eContents().get(0);
		private final Keyword cDriverKeyword_3_1_0_0 = (Keyword)cGroup_3_1_0.eContents().get(0);
		private final Assignment cDriverAssignment_3_1_0_1 = (Assignment)cGroup_3_1_0.eContents().get(1);
		private final RuleCall cDriverEStringParserRuleCall_3_1_0_1_0 = (RuleCall)cDriverAssignment_3_1_0_1.eContents().get(0);
		private final Group cGroup_3_1_1 = (Group)cUnorderedGroup_3_1.eContents().get(1);
		private final Keyword cAttachableKeyword_3_1_1_0 = (Keyword)cGroup_3_1_1.eContents().get(0);
		private final Assignment cAttachableAssignment_3_1_1_1 = (Assignment)cGroup_3_1_1.eContents().get(1);
		private final RuleCall cAttachableEBooleanParserRuleCall_3_1_1_1_0 = (RuleCall)cAttachableAssignment_3_1_1_1.eContents().get(0);
		private final Group cGroup_3_1_2 = (Group)cUnorderedGroup_3_1.eContents().get(2);
		private final Keyword cEnable_ipv6Keyword_3_1_2_0 = (Keyword)cGroup_3_1_2.eContents().get(0);
		private final Assignment cEnable_ipv6Assignment_3_1_2_1 = (Assignment)cGroup_3_1_2.eContents().get(1);
		private final RuleCall cEnable_ipv6EBooleanParserRuleCall_3_1_2_1_0 = (RuleCall)cEnable_ipv6Assignment_3_1_2_1.eContents().get(0);
		private final Group cGroup_3_1_3 = (Group)cUnorderedGroup_3_1.eContents().get(3);
		private final Keyword cInternalKeyword_3_1_3_0 = (Keyword)cGroup_3_1_3.eContents().get(0);
		private final Assignment cInternalAssignment_3_1_3_1 = (Assignment)cGroup_3_1_3.eContents().get(1);
		private final RuleCall cInternalEBooleanParserRuleCall_3_1_3_1_0 = (RuleCall)cInternalAssignment_3_1_3_1.eContents().get(0);
		private final Group cGroup_3_1_4 = (Group)cUnorderedGroup_3_1.eContents().get(4);
		private final Keyword cExternalKeyword_3_1_4_0 = (Keyword)cGroup_3_1_4.eContents().get(0);
		private final Assignment cExternalAssignment_3_1_4_1 = (Assignment)cGroup_3_1_4.eContents().get(1);
		private final RuleCall cExternalEBooleanParserRuleCall_3_1_4_1_0 = (RuleCall)cExternalAssignment_3_1_4_1.eContents().get(0);
		private final Group cGroup_3_1_5 = (Group)cUnorderedGroup_3_1.eContents().get(5);
		private final Keyword cNameKeyword_3_1_5_0 = (Keyword)cGroup_3_1_5.eContents().get(0);
		private final Assignment cNetwork_nameAssignment_3_1_5_1 = (Assignment)cGroup_3_1_5.eContents().get(1);
		private final RuleCall cNetwork_nameEStringParserRuleCall_3_1_5_1_0 = (RuleCall)cNetwork_nameAssignment_3_1_5_1.eContents().get(0);
		private final Group cGroup_3_1_6 = (Group)cUnorderedGroup_3_1.eContents().get(6);
		private final Keyword cLabelsKeyword_3_1_6_0 = (Keyword)cGroup_3_1_6.eContents().get(0);
		private final Assignment cLabelsAssignment_3_1_6_1 = (Assignment)cGroup_3_1_6.eContents().get(1);
		private final RuleCall cLabelsNetworkLabelParserRuleCall_3_1_6_1_0 = (RuleCall)cLabelsAssignment_3_1_6_1.eContents().get(0);
		private final Group cGroup_3_1_7 = (Group)cUnorderedGroup_3_1.eContents().get(7);
		private final Keyword cDriver_optsKeyword_3_1_7_0 = (Keyword)cGroup_3_1_7.eContents().get(0);
		private final Assignment cDriver_optsAssignment_3_1_7_1 = (Assignment)cGroup_3_1_7.eContents().get(1);
		private final RuleCall cDriver_optsNetworkDriverOptParserRuleCall_3_1_7_1_0 = (RuleCall)cDriver_optsAssignment_3_1_7_1.eContents().get(0);
		private final Group cGroup_3_1_8 = (Group)cUnorderedGroup_3_1.eContents().get(8);
		private final Keyword cIpamKeyword_3_1_8_0 = (Keyword)cGroup_3_1_8.eContents().get(0);
		private final Assignment cIpamAssignment_3_1_8_1 = (Assignment)cGroup_3_1_8.eContents().get(1);
		private final RuleCall cIpamIPAMParserRuleCall_3_1_8_1_0 = (RuleCall)cIpamAssignment_3_1_8_1.eContents().get(0);
		
		//Network returns Network:
		//    {Network}
		//    name=ID ':'
		//    (
		//        '{''}' |
		//            (('driver:'        driver=EString)?
		//        &    ('attachable:'    attachable=EBoolean)?
		//        &    ('enable_ipv6:'    enable_ipv6=EBoolean)?
		//        &    ('internal:'    internal=EBoolean)?
		//        &    ('external:'    external=EBoolean)?
		//        &    ('name:'         network_name=EString)?
		//        &    ('labels:'         (labels+=NetworkLabel)+ )?
		//        &    ('driver_opts:' (driver_opts+=NetworkDriverOpt)+ )?
		//        &    ('ipam:'         ipam=IPAM)?)
		//    );
		@Override public ParserRule getRule() { return rule; }
		
		//{Network}
		//name=ID ':'
		//(
		//    '{''}' |
		//        (('driver:'        driver=EString)?
		//    &    ('attachable:'    attachable=EBoolean)?
		//    &    ('enable_ipv6:'    enable_ipv6=EBoolean)?
		//    &    ('internal:'    internal=EBoolean)?
		//    &    ('external:'    external=EBoolean)?
		//    &    ('name:'         network_name=EString)?
		//    &    ('labels:'         (labels+=NetworkLabel)+ )?
		//    &    ('driver_opts:' (driver_opts+=NetworkDriverOpt)+ )?
		//    &    ('ipam:'         ipam=IPAM)?)
		//)
		public Group getGroup() { return cGroup; }
		
		//{Network}
		public Action getNetworkAction_0() { return cNetworkAction_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//(
		//    '{''}' |
		//        (('driver:'        driver=EString)?
		//    &    ('attachable:'    attachable=EBoolean)?
		//    &    ('enable_ipv6:'    enable_ipv6=EBoolean)?
		//    &    ('internal:'    internal=EBoolean)?
		//    &    ('external:'    external=EBoolean)?
		//    &    ('name:'         network_name=EString)?
		//    &    ('labels:'         (labels+=NetworkLabel)+ )?
		//    &    ('driver_opts:' (driver_opts+=NetworkDriverOpt)+ )?
		//    &    ('ipam:'         ipam=IPAM)?)
		//)
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//'{''}'
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_0_0() { return cLeftCurlyBracketKeyword_3_0_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_0_1() { return cRightCurlyBracketKeyword_3_0_1; }
		
		//    (('driver:'        driver=EString)?
		//&    ('attachable:'    attachable=EBoolean)?
		//&    ('enable_ipv6:'    enable_ipv6=EBoolean)?
		//&    ('internal:'    internal=EBoolean)?
		//&    ('external:'    external=EBoolean)?
		//&    ('name:'         network_name=EString)?
		//&    ('labels:'         (labels+=NetworkLabel)+ )?
		//&    ('driver_opts:' (driver_opts+=NetworkDriverOpt)+ )?
		//&    ('ipam:'         ipam=IPAM)?)
		public UnorderedGroup getUnorderedGroup_3_1() { return cUnorderedGroup_3_1; }
		
		//('driver:'		driver=EString)?
		public Group getGroup_3_1_0() { return cGroup_3_1_0; }
		
		//'driver:'
		public Keyword getDriverKeyword_3_1_0_0() { return cDriverKeyword_3_1_0_0; }
		
		//driver=EString
		public Assignment getDriverAssignment_3_1_0_1() { return cDriverAssignment_3_1_0_1; }
		
		//EString
		public RuleCall getDriverEStringParserRuleCall_3_1_0_1_0() { return cDriverEStringParserRuleCall_3_1_0_1_0; }
		
		//('attachable:'	attachable=EBoolean)?
		public Group getGroup_3_1_1() { return cGroup_3_1_1; }
		
		//'attachable:'
		public Keyword getAttachableKeyword_3_1_1_0() { return cAttachableKeyword_3_1_1_0; }
		
		//attachable=EBoolean
		public Assignment getAttachableAssignment_3_1_1_1() { return cAttachableAssignment_3_1_1_1; }
		
		//EBoolean
		public RuleCall getAttachableEBooleanParserRuleCall_3_1_1_1_0() { return cAttachableEBooleanParserRuleCall_3_1_1_1_0; }
		
		//('enable_ipv6:'	enable_ipv6=EBoolean)?
		public Group getGroup_3_1_2() { return cGroup_3_1_2; }
		
		//'enable_ipv6:'
		public Keyword getEnable_ipv6Keyword_3_1_2_0() { return cEnable_ipv6Keyword_3_1_2_0; }
		
		//enable_ipv6=EBoolean
		public Assignment getEnable_ipv6Assignment_3_1_2_1() { return cEnable_ipv6Assignment_3_1_2_1; }
		
		//EBoolean
		public RuleCall getEnable_ipv6EBooleanParserRuleCall_3_1_2_1_0() { return cEnable_ipv6EBooleanParserRuleCall_3_1_2_1_0; }
		
		//('internal:'	internal=EBoolean)?
		public Group getGroup_3_1_3() { return cGroup_3_1_3; }
		
		//'internal:'
		public Keyword getInternalKeyword_3_1_3_0() { return cInternalKeyword_3_1_3_0; }
		
		//internal=EBoolean
		public Assignment getInternalAssignment_3_1_3_1() { return cInternalAssignment_3_1_3_1; }
		
		//EBoolean
		public RuleCall getInternalEBooleanParserRuleCall_3_1_3_1_0() { return cInternalEBooleanParserRuleCall_3_1_3_1_0; }
		
		//('external:'	external=EBoolean)?
		public Group getGroup_3_1_4() { return cGroup_3_1_4; }
		
		//'external:'
		public Keyword getExternalKeyword_3_1_4_0() { return cExternalKeyword_3_1_4_0; }
		
		//external=EBoolean
		public Assignment getExternalAssignment_3_1_4_1() { return cExternalAssignment_3_1_4_1; }
		
		//EBoolean
		public RuleCall getExternalEBooleanParserRuleCall_3_1_4_1_0() { return cExternalEBooleanParserRuleCall_3_1_4_1_0; }
		
		//('name:' 		network_name=EString)?
		public Group getGroup_3_1_5() { return cGroup_3_1_5; }
		
		//'name:'
		public Keyword getNameKeyword_3_1_5_0() { return cNameKeyword_3_1_5_0; }
		
		//network_name=EString
		public Assignment getNetwork_nameAssignment_3_1_5_1() { return cNetwork_nameAssignment_3_1_5_1; }
		
		//EString
		public RuleCall getNetwork_nameEStringParserRuleCall_3_1_5_1_0() { return cNetwork_nameEStringParserRuleCall_3_1_5_1_0; }
		
		//('labels:' 		(labels+=NetworkLabel)+ )?
		public Group getGroup_3_1_6() { return cGroup_3_1_6; }
		
		//'labels:'
		public Keyword getLabelsKeyword_3_1_6_0() { return cLabelsKeyword_3_1_6_0; }
		
		//(labels+=NetworkLabel)+
		public Assignment getLabelsAssignment_3_1_6_1() { return cLabelsAssignment_3_1_6_1; }
		
		//NetworkLabel
		public RuleCall getLabelsNetworkLabelParserRuleCall_3_1_6_1_0() { return cLabelsNetworkLabelParserRuleCall_3_1_6_1_0; }
		
		//('driver_opts:' (driver_opts+=NetworkDriverOpt)+ )?
		public Group getGroup_3_1_7() { return cGroup_3_1_7; }
		
		//'driver_opts:'
		public Keyword getDriver_optsKeyword_3_1_7_0() { return cDriver_optsKeyword_3_1_7_0; }
		
		//(driver_opts+=NetworkDriverOpt)+
		public Assignment getDriver_optsAssignment_3_1_7_1() { return cDriver_optsAssignment_3_1_7_1; }
		
		//NetworkDriverOpt
		public RuleCall getDriver_optsNetworkDriverOptParserRuleCall_3_1_7_1_0() { return cDriver_optsNetworkDriverOptParserRuleCall_3_1_7_1_0; }
		
		//('ipam:' 		ipam=IPAM)?
		public Group getGroup_3_1_8() { return cGroup_3_1_8; }
		
		//'ipam:'
		public Keyword getIpamKeyword_3_1_8_0() { return cIpamKeyword_3_1_8_0; }
		
		//ipam=IPAM
		public Assignment getIpamAssignment_3_1_8_1() { return cIpamAssignment_3_1_8_1; }
		
		//IPAM
		public RuleCall getIpamIPAMParserRuleCall_3_1_8_1_0() { return cIpamIPAMParserRuleCall_3_1_8_1_0; }
	}
	public class VolumeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.Volume");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cVolumeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cUnorderedGroup_3.eContents().get(0);
		private final Keyword cExternalKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Assignment cExternalAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final RuleCall cExternalEBooleanParserRuleCall_3_0_1_0 = (RuleCall)cExternalAssignment_3_0_1.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cUnorderedGroup_3.eContents().get(1);
		private final Keyword cDriverKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cDriverAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cDriverEStringParserRuleCall_3_1_1_0 = (RuleCall)cDriverAssignment_3_1_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cUnorderedGroup_3.eContents().get(2);
		private final Keyword cNameKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cVolume_nameAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cVolume_nameEStringParserRuleCall_3_2_1_0 = (RuleCall)cVolume_nameAssignment_3_2_1.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cUnorderedGroup_3.eContents().get(3);
		private final Keyword cLabelsKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cLabelsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cLabelsVolumeLabelParserRuleCall_3_3_1_0 = (RuleCall)cLabelsAssignment_3_3_1.eContents().get(0);
		private final Group cGroup_3_4 = (Group)cUnorderedGroup_3.eContents().get(4);
		private final Keyword cDriver_optsKeyword_3_4_0 = (Keyword)cGroup_3_4.eContents().get(0);
		private final Assignment cDriver_optsAssignment_3_4_1 = (Assignment)cGroup_3_4.eContents().get(1);
		private final RuleCall cDriver_optsVolumeDriverOptParserRuleCall_3_4_1_0 = (RuleCall)cDriver_optsAssignment_3_4_1.eContents().get(0);
		
		//Volume returns Volume:
		//    {Volume}
		//    name=ID':'
		//    (
		//            ('external:'     external?=EBoolean)?
		//        &    ('driver:'         driver=EString)?
		//        &    ('name:'         volume_name=EString)?
		//        &    ('labels:'         (labels+=VolumeLabel)+ )?
		//        &    ('driver_opts:' (driver_opts+=VolumeDriverOpt)+ )?
		//    );
		@Override public ParserRule getRule() { return rule; }
		
		//{Volume}
		//name=ID':'
		//(
		//        ('external:'     external?=EBoolean)?
		//    &    ('driver:'         driver=EString)?
		//    &    ('name:'         volume_name=EString)?
		//    &    ('labels:'         (labels+=VolumeLabel)+ )?
		//    &    ('driver_opts:' (driver_opts+=VolumeDriverOpt)+ )?
		//)
		public Group getGroup() { return cGroup; }
		
		//{Volume}
		public Action getVolumeAction_0() { return cVolumeAction_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//(
		//        ('external:'     external?=EBoolean)?
		//    &    ('driver:'         driver=EString)?
		//    &    ('name:'         volume_name=EString)?
		//    &    ('labels:'         (labels+=VolumeLabel)+ )?
		//    &    ('driver_opts:' (driver_opts+=VolumeDriverOpt)+ )?
		//)
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }
		
		//('external:' 	external?=EBoolean)?
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//'external:'
		public Keyword getExternalKeyword_3_0_0() { return cExternalKeyword_3_0_0; }
		
		//external?=EBoolean
		public Assignment getExternalAssignment_3_0_1() { return cExternalAssignment_3_0_1; }
		
		//EBoolean
		public RuleCall getExternalEBooleanParserRuleCall_3_0_1_0() { return cExternalEBooleanParserRuleCall_3_0_1_0; }
		
		//('driver:' 		driver=EString)?
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'driver:'
		public Keyword getDriverKeyword_3_1_0() { return cDriverKeyword_3_1_0; }
		
		//driver=EString
		public Assignment getDriverAssignment_3_1_1() { return cDriverAssignment_3_1_1; }
		
		//EString
		public RuleCall getDriverEStringParserRuleCall_3_1_1_0() { return cDriverEStringParserRuleCall_3_1_1_0; }
		
		//('name:' 		volume_name=EString)?
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//'name:'
		public Keyword getNameKeyword_3_2_0() { return cNameKeyword_3_2_0; }
		
		//volume_name=EString
		public Assignment getVolume_nameAssignment_3_2_1() { return cVolume_nameAssignment_3_2_1; }
		
		//EString
		public RuleCall getVolume_nameEStringParserRuleCall_3_2_1_0() { return cVolume_nameEStringParserRuleCall_3_2_1_0; }
		
		//('labels:' 		(labels+=VolumeLabel)+ )?
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//'labels:'
		public Keyword getLabelsKeyword_3_3_0() { return cLabelsKeyword_3_3_0; }
		
		//(labels+=VolumeLabel)+
		public Assignment getLabelsAssignment_3_3_1() { return cLabelsAssignment_3_3_1; }
		
		//VolumeLabel
		public RuleCall getLabelsVolumeLabelParserRuleCall_3_3_1_0() { return cLabelsVolumeLabelParserRuleCall_3_3_1_0; }
		
		//('driver_opts:' (driver_opts+=VolumeDriverOpt)+ )?
		public Group getGroup_3_4() { return cGroup_3_4; }
		
		//'driver_opts:'
		public Keyword getDriver_optsKeyword_3_4_0() { return cDriver_optsKeyword_3_4_0; }
		
		//(driver_opts+=VolumeDriverOpt)+
		public Assignment getDriver_optsAssignment_3_4_1() { return cDriver_optsAssignment_3_4_1; }
		
		//VolumeDriverOpt
		public RuleCall getDriver_optsVolumeDriverOptParserRuleCall_3_4_1_0() { return cDriver_optsVolumeDriverOptParserRuleCall_3_4_1_0; }
	}
	public class ConfigElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.Config");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConfigAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cUnorderedGroup_3.eContents().get(0);
		private final Keyword cExternalKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Assignment cExternalAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final RuleCall cExternalEBooleanParserRuleCall_3_0_1_0 = (RuleCall)cExternalAssignment_3_0_1.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cUnorderedGroup_3.eContents().get(1);
		private final Keyword cFileKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cFileAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cFilePATHParserRuleCall_3_1_1_0 = (RuleCall)cFileAssignment_3_1_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cUnorderedGroup_3.eContents().get(2);
		private final Keyword cNameKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cConfig_nameAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cConfig_nameEStringParserRuleCall_3_2_1_0 = (RuleCall)cConfig_nameAssignment_3_2_1.eContents().get(0);
		
		//Config returns Config:
		//    {Config}
		//    name=ID':'
		//    (
		//            ('external:'    external=EBoolean)?
		//        &    ('file:'         file=PATH)?
		//        &    ('name:'         config_name=EString)?
		//    );
		@Override public ParserRule getRule() { return rule; }
		
		//{Config}
		//name=ID':'
		//(
		//        ('external:'    external=EBoolean)?
		//    &    ('file:'         file=PATH)?
		//    &    ('name:'         config_name=EString)?
		//)
		public Group getGroup() { return cGroup; }
		
		//{Config}
		public Action getConfigAction_0() { return cConfigAction_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//(
		//        ('external:'    external=EBoolean)?
		//    &    ('file:'         file=PATH)?
		//    &    ('name:'         config_name=EString)?
		//)
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }
		
		//('external:'	external=EBoolean)?
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//'external:'
		public Keyword getExternalKeyword_3_0_0() { return cExternalKeyword_3_0_0; }
		
		//external=EBoolean
		public Assignment getExternalAssignment_3_0_1() { return cExternalAssignment_3_0_1; }
		
		//EBoolean
		public RuleCall getExternalEBooleanParserRuleCall_3_0_1_0() { return cExternalEBooleanParserRuleCall_3_0_1_0; }
		
		//('file:' 		file=PATH)?
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'file:'
		public Keyword getFileKeyword_3_1_0() { return cFileKeyword_3_1_0; }
		
		//file=PATH
		public Assignment getFileAssignment_3_1_1() { return cFileAssignment_3_1_1; }
		
		//PATH
		public RuleCall getFilePATHParserRuleCall_3_1_1_0() { return cFilePATHParserRuleCall_3_1_1_0; }
		
		//('name:' 		config_name=EString)?
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//'name:'
		public Keyword getNameKeyword_3_2_0() { return cNameKeyword_3_2_0; }
		
		//config_name=EString
		public Assignment getConfig_nameAssignment_3_2_1() { return cConfig_nameAssignment_3_2_1; }
		
		//EString
		public RuleCall getConfig_nameEStringParserRuleCall_3_2_1_0() { return cConfig_nameEStringParserRuleCall_3_2_1_0; }
	}
	public class SecretElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.Secret");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSecretAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cUnorderedGroup_3.eContents().get(0);
		private final Keyword cExternalKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Assignment cExternalAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final RuleCall cExternalEBooleanParserRuleCall_3_0_1_0 = (RuleCall)cExternalAssignment_3_0_1.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cUnorderedGroup_3.eContents().get(1);
		private final Keyword cFileKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cFileAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cFilePATHParserRuleCall_3_1_1_0 = (RuleCall)cFileAssignment_3_1_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cUnorderedGroup_3.eContents().get(2);
		private final Keyword cEnvironmentKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cEnvironmentAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cEnvironmentEStringParserRuleCall_3_2_1_0 = (RuleCall)cEnvironmentAssignment_3_2_1.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cUnorderedGroup_3.eContents().get(3);
		private final Keyword cNameKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cSecret_nameAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cSecret_nameEStringParserRuleCall_3_3_1_0 = (RuleCall)cSecret_nameAssignment_3_3_1.eContents().get(0);
		
		//Secret returns Secret:
		//    {Secret}
		//    name=ID':'
		//    (
		//            ('external:'    external=EBoolean)?
		//        &    ('file:'         file=PATH)?
		//        &    ('environment:' environment=EString)?
		//        &    ('name:'         secret_name=EString)?
		//    );
		@Override public ParserRule getRule() { return rule; }
		
		//{Secret}
		//name=ID':'
		//(
		//        ('external:'    external=EBoolean)?
		//    &    ('file:'         file=PATH)?
		//    &    ('environment:' environment=EString)?
		//    &    ('name:'         secret_name=EString)?
		//)
		public Group getGroup() { return cGroup; }
		
		//{Secret}
		public Action getSecretAction_0() { return cSecretAction_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//(
		//        ('external:'    external=EBoolean)?
		//    &    ('file:'         file=PATH)?
		//    &    ('environment:' environment=EString)?
		//    &    ('name:'         secret_name=EString)?
		//)
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }
		
		//('external:'	external=EBoolean)?
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//'external:'
		public Keyword getExternalKeyword_3_0_0() { return cExternalKeyword_3_0_0; }
		
		//external=EBoolean
		public Assignment getExternalAssignment_3_0_1() { return cExternalAssignment_3_0_1; }
		
		//EBoolean
		public RuleCall getExternalEBooleanParserRuleCall_3_0_1_0() { return cExternalEBooleanParserRuleCall_3_0_1_0; }
		
		//('file:' 		file=PATH)?
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'file:'
		public Keyword getFileKeyword_3_1_0() { return cFileKeyword_3_1_0; }
		
		//file=PATH
		public Assignment getFileAssignment_3_1_1() { return cFileAssignment_3_1_1; }
		
		//PATH
		public RuleCall getFilePATHParserRuleCall_3_1_1_0() { return cFilePATHParserRuleCall_3_1_1_0; }
		
		//('environment:' environment=EString)?
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//'environment:'
		public Keyword getEnvironmentKeyword_3_2_0() { return cEnvironmentKeyword_3_2_0; }
		
		//environment=EString
		public Assignment getEnvironmentAssignment_3_2_1() { return cEnvironmentAssignment_3_2_1; }
		
		//EString
		public RuleCall getEnvironmentEStringParserRuleCall_3_2_1_0() { return cEnvironmentEStringParserRuleCall_3_2_1_0; }
		
		//('name:' 		secret_name=EString)?
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//'name:'
		public Keyword getNameKeyword_3_3_0() { return cNameKeyword_3_3_0; }
		
		//secret_name=EString
		public Assignment getSecret_nameAssignment_3_3_1() { return cSecret_nameAssignment_3_3_1; }
		
		//EString
		public RuleCall getSecret_nameEStringParserRuleCall_3_3_1_0() { return cSecret_nameEStringParserRuleCall_3_3_1_0; }
	}
	public class VolumeLabelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.VolumeLabel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cVolumeLabelAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueEStringParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		
		//VolumeLabel returns VolumeLabel:
		//    {VolumeLabel}
		//    name=EString':' value=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{VolumeLabel}
		//name=EString':' value=EString
		public Group getGroup() { return cGroup; }
		
		//{VolumeLabel}
		public Action getVolumeLabelAction_0() { return cVolumeLabelAction_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//value=EString
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_3_0() { return cValueEStringParserRuleCall_3_0; }
	}
	public class VolumeDriverOptElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.VolumeDriverOpt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cVolumeDriverOptAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueEStringParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		
		//VolumeDriverOpt returns VolumeDriverOpt:
		//    {VolumeDriverOpt}
		//    name=EString':' value=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{VolumeDriverOpt}
		//name=EString':' value=EString
		public Group getGroup() { return cGroup; }
		
		//{VolumeDriverOpt}
		public Action getVolumeDriverOptAction_0() { return cVolumeDriverOptAction_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//value=EString
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_3_0() { return cValueEStringParserRuleCall_3_0; }
	}
	public class NetworkLabelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.NetworkLabel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cNetworkLabelAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameLabelIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueEStringParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		
		//NetworkLabel returns NetworkLabel:
		//    {NetworkLabel}
		//    name=LabelID':' value=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{NetworkLabel}
		//name=LabelID':' value=EString
		public Group getGroup() { return cGroup; }
		
		//{NetworkLabel}
		public Action getNetworkLabelAction_0() { return cNetworkLabelAction_0; }
		
		//name=LabelID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//LabelID
		public RuleCall getNameLabelIDParserRuleCall_1_0() { return cNameLabelIDParserRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//value=EString
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_3_0() { return cValueEStringParserRuleCall_3_0; }
	}
	public class NetworkDriverOptElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.NetworkDriverOpt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cNetworkDriverOptAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueEStringParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		
		//NetworkDriverOpt returns NetworkDriverOpt:
		//    {NetworkDriverOpt}
		//    name=EString':' value=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{NetworkDriverOpt}
		//name=EString':' value=EString
		public Group getGroup() { return cGroup; }
		
		//{NetworkDriverOpt}
		public Action getNetworkDriverOptAction_0() { return cNetworkDriverOptAction_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//value=EString
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_3_0() { return cValueEStringParserRuleCall_3_0; }
	}
	public class IPAMElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.IPAM");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cIPAMAction_0 = (Action)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cDriverKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cDriverAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cDriverEStringParserRuleCall_1_0_1_0 = (RuleCall)cDriverAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cConfigKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Group cGroup_1_1_1 = (Group)cGroup_1_1.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_1_1_1_0 = (Keyword)cGroup_1_1_1.eContents().get(0);
		private final Assignment cConfigsAssignment_1_1_1_1 = (Assignment)cGroup_1_1_1.eContents().get(1);
		private final RuleCall cConfigsIPAMConfigParserRuleCall_1_1_1_1_0 = (RuleCall)cConfigsAssignment_1_1_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cOptionsKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cOptionsAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cOptionsIPAMOptionParserRuleCall_1_2_1_0 = (RuleCall)cOptionsAssignment_1_2_1.eContents().get(0);
		
		//IPAM returns IPAM:
		//    {IPAM}
		//    (
		//            ('driver:'    driver=EString)?
		//        &    ('config:'    ('-'configs+=IPAMConfig)+ )?
		//        &    ('options:'    (options+=IPAMOption)+ )?
		//    );
		@Override public ParserRule getRule() { return rule; }
		
		//{IPAM}
		//(
		//        ('driver:'    driver=EString)?
		//    &    ('config:'    ('-'configs+=IPAMConfig)+ )?
		//    &    ('options:'    (options+=IPAMOption)+ )?
		//)
		public Group getGroup() { return cGroup; }
		
		//{IPAM}
		public Action getIPAMAction_0() { return cIPAMAction_0; }
		
		//(
		//        ('driver:'    driver=EString)?
		//    &    ('config:'    ('-'configs+=IPAMConfig)+ )?
		//    &    ('options:'    (options+=IPAMOption)+ )?
		//)
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//('driver:'	driver=EString)?
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'driver:'
		public Keyword getDriverKeyword_1_0_0() { return cDriverKeyword_1_0_0; }
		
		//driver=EString
		public Assignment getDriverAssignment_1_0_1() { return cDriverAssignment_1_0_1; }
		
		//EString
		public RuleCall getDriverEStringParserRuleCall_1_0_1_0() { return cDriverEStringParserRuleCall_1_0_1_0; }
		
		//('config:'	('-'configs+=IPAMConfig)+ )?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'config:'
		public Keyword getConfigKeyword_1_1_0() { return cConfigKeyword_1_1_0; }
		
		//('-'configs+=IPAMConfig)+
		public Group getGroup_1_1_1() { return cGroup_1_1_1; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_1_1_1_0() { return cHyphenMinusKeyword_1_1_1_0; }
		
		//configs+=IPAMConfig
		public Assignment getConfigsAssignment_1_1_1_1() { return cConfigsAssignment_1_1_1_1; }
		
		//IPAMConfig
		public RuleCall getConfigsIPAMConfigParserRuleCall_1_1_1_1_0() { return cConfigsIPAMConfigParserRuleCall_1_1_1_1_0; }
		
		//('options:'	(options+=IPAMOption)+ )?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'options:'
		public Keyword getOptionsKeyword_1_2_0() { return cOptionsKeyword_1_2_0; }
		
		//(options+=IPAMOption)+
		public Assignment getOptionsAssignment_1_2_1() { return cOptionsAssignment_1_2_1; }
		
		//IPAMOption
		public RuleCall getOptionsIPAMOptionParserRuleCall_1_2_1_0() { return cOptionsIPAMOptionParserRuleCall_1_2_1_0; }
	}
	public class IPAMConfigElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.IPAMConfig");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cIPAMConfigAction_0 = (Action)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cSubnetKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cSubnetAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cSubnetNetworkAddressParserRuleCall_1_0_1_0 = (RuleCall)cSubnetAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cIp_rangeKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cIp_rangeAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cIp_rangeNetworkAddressParserRuleCall_1_1_1_0 = (RuleCall)cIp_rangeAssignment_1_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cUnorderedGroup_1.eContents().get(2);
		private final Keyword cGatewayKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cGatewayAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cGatewayDNSParserRuleCall_1_2_1_0 = (RuleCall)cGatewayAssignment_1_2_1.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cUnorderedGroup_1.eContents().get(3);
		private final Keyword cAux_addressesKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cAux_addressesAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cAux_addressesIPAMAddressParserRuleCall_1_3_1_0 = (RuleCall)cAux_addressesAssignment_1_3_1.eContents().get(0);
		
		//IPAMConfig returns IPAMConfig:
		//    {IPAMConfig}
		//    (
		//            ('subnet:'            subnet=NetworkAddress)?
		//        &    ('ip_range:'         ip_range=NetworkAddress)?
		//        &    ('gateway:'         gateway=DNS)?
		//        &    ('aux_addresses:'    (aux_addresses+=IPAMAddress)+ )?
		//    );
		@Override public ParserRule getRule() { return rule; }
		
		//{IPAMConfig}
		//(
		//        ('subnet:'            subnet=NetworkAddress)?
		//    &    ('ip_range:'         ip_range=NetworkAddress)?
		//    &    ('gateway:'         gateway=DNS)?
		//    &    ('aux_addresses:'    (aux_addresses+=IPAMAddress)+ )?
		//)
		public Group getGroup() { return cGroup; }
		
		//{IPAMConfig}
		public Action getIPAMConfigAction_0() { return cIPAMConfigAction_0; }
		
		//(
		//        ('subnet:'            subnet=NetworkAddress)?
		//    &    ('ip_range:'         ip_range=NetworkAddress)?
		//    &    ('gateway:'         gateway=DNS)?
		//    &    ('aux_addresses:'    (aux_addresses+=IPAMAddress)+ )?
		//)
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//('subnet:'			subnet=NetworkAddress)?
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'subnet:'
		public Keyword getSubnetKeyword_1_0_0() { return cSubnetKeyword_1_0_0; }
		
		//subnet=NetworkAddress
		public Assignment getSubnetAssignment_1_0_1() { return cSubnetAssignment_1_0_1; }
		
		//NetworkAddress
		public RuleCall getSubnetNetworkAddressParserRuleCall_1_0_1_0() { return cSubnetNetworkAddressParserRuleCall_1_0_1_0; }
		
		//('ip_range:' 		ip_range=NetworkAddress)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'ip_range:'
		public Keyword getIp_rangeKeyword_1_1_0() { return cIp_rangeKeyword_1_1_0; }
		
		//ip_range=NetworkAddress
		public Assignment getIp_rangeAssignment_1_1_1() { return cIp_rangeAssignment_1_1_1; }
		
		//NetworkAddress
		public RuleCall getIp_rangeNetworkAddressParserRuleCall_1_1_1_0() { return cIp_rangeNetworkAddressParserRuleCall_1_1_1_0; }
		
		//('gateway:' 		gateway=DNS)?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'gateway:'
		public Keyword getGatewayKeyword_1_2_0() { return cGatewayKeyword_1_2_0; }
		
		//gateway=DNS
		public Assignment getGatewayAssignment_1_2_1() { return cGatewayAssignment_1_2_1; }
		
		//DNS
		public RuleCall getGatewayDNSParserRuleCall_1_2_1_0() { return cGatewayDNSParserRuleCall_1_2_1_0; }
		
		//('aux_addresses:'	(aux_addresses+=IPAMAddress)+ )?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'aux_addresses:'
		public Keyword getAux_addressesKeyword_1_3_0() { return cAux_addressesKeyword_1_3_0; }
		
		//(aux_addresses+=IPAMAddress)+
		public Assignment getAux_addressesAssignment_1_3_1() { return cAux_addressesAssignment_1_3_1; }
		
		//IPAMAddress
		public RuleCall getAux_addressesIPAMAddressParserRuleCall_1_3_1_0() { return cAux_addressesIPAMAddressParserRuleCall_1_3_1_0; }
	}
	public class IPAMOptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.IPAMOption");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cIPAMOptionAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueEStringParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		
		//IPAMOption returns IPAMOption:
		//    {IPAMOption}
		//    name=EString':' value=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{IPAMOption}
		//name=EString':' value=EString
		public Group getGroup() { return cGroup; }
		
		//{IPAMOption}
		public Action getIPAMOptionAction_0() { return cIPAMOptionAction_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//value=EString
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_3_0() { return cValueEStringParserRuleCall_3_0; }
	}
	public class IPAMAddressElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.IPAMAddress");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cIPAMAddressAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDnsDNSParserRuleCall_3_0 = (RuleCall)cDnsAssignment_3.eContents().get(0);
		
		//IPAMAddress returns IPAMAddress:
		//    {IPAMAddress}
		//    name=EString':' dns=DNS;
		@Override public ParserRule getRule() { return rule; }
		
		//{IPAMAddress}
		//name=EString':' dns=DNS
		public Group getGroup() { return cGroup; }
		
		//{IPAMAddress}
		public Action getIPAMAddressAction_0() { return cIPAMAddressAction_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//dns=DNS
		public Assignment getDnsAssignment_3() { return cDnsAssignment_3; }
		
		//DNS
		public RuleCall getDnsDNSParserRuleCall_3_0() { return cDnsDNSParserRuleCall_3_0; }
	}
	public class PortsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.Ports");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPORT_DEFTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cVERSION_INTTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cQUOTED_INTTerminalRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		///*
		//terminal PORT:
		//    '"'PORT_DEF'"' | PORT_DEF;
		//terminal PORT_DEF:
		//    (((('0'..'9')+'.'('0'..'9')+'.'('0'..'9')+'.'('0'..'9')+':')?('0'..'9')+'-'('0'..'9')+':')?('0'..'9')+'-'('0'..'9')+('/'ID)?)
		//    | (((('0'..'9')+'.'('0'..'9')+'.'('0'..'9')+'.'('0'..'9')+':')?('0'..'9')+':')?('0'..'9')+('/'ID)?);
		//*/
		//Ports returns ecore::EString:
		//    PORT_DEF | VERSION_INT | QUOTED_INT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PORT_DEF | VERSION_INT | QUOTED_INT
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PORT_DEF
		public RuleCall getPORT_DEFTerminalRuleCall_0() { return cPORT_DEFTerminalRuleCall_0; }
		
		//VERSION_INT
		public RuleCall getVERSION_INTTerminalRuleCall_1() { return cVERSION_INTTerminalRuleCall_1; }
		
		//QUOTED_INT
		public RuleCall getQUOTED_INTTerminalRuleCall_2() { return cQUOTED_INTTerminalRuleCall_2; }
	}
	public class PATHElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.PATH");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Alternatives cAlternatives_0_0 = (Alternatives)cGroup_0.eContents().get(0);
		private final Group cGroup_0_0_0 = (Group)cAlternatives_0_0.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_0_0_0_0 = (RuleCall)cGroup_0_0_0.eContents().get(0);
		private final Group cGroup_0_0_0_1 = (Group)cGroup_0_0_0.eContents().get(1);
		private final Keyword cFullStopKeyword_0_0_0_1_0 = (Keyword)cGroup_0_0_0_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_0_0_0_1_1 = (RuleCall)cGroup_0_0_0_1.eContents().get(1);
		private final Keyword cFullStopKeyword_0_0_1 = (Keyword)cAlternatives_0_0.eContents().get(1);
		private final Keyword cFullStopFullStopKeyword_0_0_2 = (Keyword)cAlternatives_0_0.eContents().get(2);
		private final Group cGroup_0_1 = (Group)cGroup_0.eContents().get(1);
		private final Keyword cSolidusKeyword_0_1_0 = (Keyword)cGroup_0_1.eContents().get(0);
		private final Alternatives cAlternatives_0_1_1 = (Alternatives)cGroup_0_1.eContents().get(1);
		private final Group cGroup_0_1_1_0 = (Group)cAlternatives_0_1_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_0_1_1_0_0 = (RuleCall)cGroup_0_1_1_0.eContents().get(0);
		private final Group cGroup_0_1_1_0_1 = (Group)cGroup_0_1_1_0.eContents().get(1);
		private final Keyword cFullStopKeyword_0_1_1_0_1_0 = (Keyword)cGroup_0_1_1_0_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_0_1_1_0_1_1 = (RuleCall)cGroup_0_1_1_0_1.eContents().get(1);
		private final Keyword cFullStopKeyword_0_1_1_1 = (Keyword)cAlternatives_0_1_1.eContents().get(1);
		private final Keyword cFullStopFullStopKeyword_0_1_1_2 = (Keyword)cAlternatives_0_1_1.eContents().get(2);
		private final Keyword cSolidusKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cSolidusKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Alternatives cAlternatives_1_1_0 = (Alternatives)cGroup_1_1.eContents().get(0);
		private final Group cGroup_1_1_0_0 = (Group)cAlternatives_1_1_0.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1_0_0_0 = (RuleCall)cGroup_1_1_0_0.eContents().get(0);
		private final Group cGroup_1_1_0_0_1 = (Group)cGroup_1_1_0_0.eContents().get(1);
		private final Keyword cFullStopKeyword_1_1_0_0_1_0 = (Keyword)cGroup_1_1_0_0_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1_0_0_1_1 = (RuleCall)cGroup_1_1_0_0_1.eContents().get(1);
		private final Keyword cFullStopKeyword_1_1_0_1 = (Keyword)cAlternatives_1_1_0.eContents().get(1);
		private final Keyword cFullStopFullStopKeyword_1_1_0_2 = (Keyword)cAlternatives_1_1_0.eContents().get(2);
		private final Keyword cSolidusKeyword_1_1_1 = (Keyword)cGroup_1_1.eContents().get(1);
		private final Alternatives cAlternatives_1_2 = (Alternatives)cGroup_1.eContents().get(2);
		private final Group cGroup_1_2_0 = (Group)cAlternatives_1_2.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_2_0_0 = (RuleCall)cGroup_1_2_0.eContents().get(0);
		private final Group cGroup_1_2_0_1 = (Group)cGroup_1_2_0.eContents().get(1);
		private final Keyword cFullStopKeyword_1_2_0_1_0 = (Keyword)cGroup_1_2_0_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_2_0_1_1 = (RuleCall)cGroup_1_2_0_1.eContents().get(1);
		private final Keyword cFullStopKeyword_1_2_1 = (Keyword)cAlternatives_1_2.eContents().get(1);
		private final Keyword cFullStopFullStopKeyword_1_2_2 = (Keyword)cAlternatives_1_2.eContents().get(2);
		
		//PATH returns ecore::EString:
		//    ((ID('.'ID)*|'.'|'..') ('/'(ID('.'ID)*|'.'|'..'))* '/'?) | ('/' ((ID('.'ID)*|'.'|'..')'/')* (ID('.'ID)*|'.'|'..')?);
		@Override public ParserRule getRule() { return rule; }
		
		//((ID('.'ID)*|'.'|'..') ('/'(ID('.'ID)*|'.'|'..'))* '/'?) | ('/' ((ID('.'ID)*|'.'|'..')'/')* (ID('.'ID)*|'.'|'..')?)
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//((ID('.'ID)*|'.'|'..') ('/'(ID('.'ID)*|'.'|'..'))* '/'?)
		public Group getGroup_0() { return cGroup_0; }
		
		//(ID('.'ID)*|'.'|'..')
		public Alternatives getAlternatives_0_0() { return cAlternatives_0_0; }
		
		//ID('.'ID)*
		public Group getGroup_0_0_0() { return cGroup_0_0_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0_0_0_0() { return cIDTerminalRuleCall_0_0_0_0; }
		
		//('.'ID)*
		public Group getGroup_0_0_0_1() { return cGroup_0_0_0_1; }
		
		//'.'
		public Keyword getFullStopKeyword_0_0_0_1_0() { return cFullStopKeyword_0_0_0_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0_0_0_1_1() { return cIDTerminalRuleCall_0_0_0_1_1; }
		
		//'.'
		public Keyword getFullStopKeyword_0_0_1() { return cFullStopKeyword_0_0_1; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_0_0_2() { return cFullStopFullStopKeyword_0_0_2; }
		
		//('/'(ID('.'ID)*|'.'|'..'))*
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//'/'
		public Keyword getSolidusKeyword_0_1_0() { return cSolidusKeyword_0_1_0; }
		
		//(ID('.'ID)*|'.'|'..')
		public Alternatives getAlternatives_0_1_1() { return cAlternatives_0_1_1; }
		
		//ID('.'ID)*
		public Group getGroup_0_1_1_0() { return cGroup_0_1_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0_1_1_0_0() { return cIDTerminalRuleCall_0_1_1_0_0; }
		
		//('.'ID)*
		public Group getGroup_0_1_1_0_1() { return cGroup_0_1_1_0_1; }
		
		//'.'
		public Keyword getFullStopKeyword_0_1_1_0_1_0() { return cFullStopKeyword_0_1_1_0_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0_1_1_0_1_1() { return cIDTerminalRuleCall_0_1_1_0_1_1; }
		
		//'.'
		public Keyword getFullStopKeyword_0_1_1_1() { return cFullStopKeyword_0_1_1_1; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_0_1_1_2() { return cFullStopFullStopKeyword_0_1_1_2; }
		
		//'/'?
		public Keyword getSolidusKeyword_0_2() { return cSolidusKeyword_0_2; }
		
		//('/' ((ID('.'ID)*|'.'|'..')'/')* (ID('.'ID)*|'.'|'..')?)
		public Group getGroup_1() { return cGroup_1; }
		
		//'/'
		public Keyword getSolidusKeyword_1_0() { return cSolidusKeyword_1_0; }
		
		//((ID('.'ID)*|'.'|'..')'/')*
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//(ID('.'ID)*|'.'|'..')
		public Alternatives getAlternatives_1_1_0() { return cAlternatives_1_1_0; }
		
		//ID('.'ID)*
		public Group getGroup_1_1_0_0() { return cGroup_1_1_0_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1_0_0_0() { return cIDTerminalRuleCall_1_1_0_0_0; }
		
		//('.'ID)*
		public Group getGroup_1_1_0_0_1() { return cGroup_1_1_0_0_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_1_0_0_1_0() { return cFullStopKeyword_1_1_0_0_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1_0_0_1_1() { return cIDTerminalRuleCall_1_1_0_0_1_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_1_0_1() { return cFullStopKeyword_1_1_0_1; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_1_1_0_2() { return cFullStopFullStopKeyword_1_1_0_2; }
		
		//'/'
		public Keyword getSolidusKeyword_1_1_1() { return cSolidusKeyword_1_1_1; }
		
		//(ID('.'ID)*|'.'|'..')?
		public Alternatives getAlternatives_1_2() { return cAlternatives_1_2; }
		
		//ID('.'ID)*
		public Group getGroup_1_2_0() { return cGroup_1_2_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_2_0_0() { return cIDTerminalRuleCall_1_2_0_0; }
		
		//('.'ID)*
		public Group getGroup_1_2_0_1() { return cGroup_1_2_0_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_2_0_1_0() { return cFullStopKeyword_1_2_0_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_2_0_1_1() { return cIDTerminalRuleCall_1_2_0_1_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_2_1() { return cFullStopKeyword_1_2_1; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_1_2_2() { return cFullStopFullStopKeyword_1_2_2; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cQuotationMarkKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cQuotationMarkKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final RuleCall cPORT_DEFTerminalRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cVERSION_INTTerminalRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cQUOTED_INTTerminalRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cVERSION_FLOATTerminalRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cDEVICE_DEFTerminalRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		
		//    //(((ID|EInt|EInt?ID)('.'(ID|EInt|EInt?ID))*|'.'|'..') ('/'((ID|EInt|EInt?ID)('.'(ID|EInt|EInt?ID))*|'.'|'..'))* '/'?) | ('/' (((ID|EInt|EInt?ID)('.'(ID|EInt|EInt?ID))*|'.'|'..')'/')* ((ID|EInt|EInt?ID)('.'(ID|EInt|EInt?ID))*|'.'|'..')?);
		//    //(((ID|EInt)+('.'(ID|EInt)+)*|'.'|'..') ('/'((ID|EInt)+('.'(ID|EInt)+)*|'.'|'..'))* '/'?) | ('/' (((ID|EInt)+('.'(ID|EInt)+)*|'.'|'..')'/')* ((ID|EInt)+('.'(ID|EInt)+)*|'.'|'..')?);
		//EString returns ecore::EString:
		//    STRING | ID | '"''"' | PORT_DEF | VERSION_INT | QUOTED_INT | VERSION_FLOAT | DEVICE_DEF;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID | '"''"' | PORT_DEF | VERSION_INT | QUOTED_INT | VERSION_FLOAT | DEVICE_DEF
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
		
		//'"''"'
		public Group getGroup_2() { return cGroup_2; }
		
		//'"'
		public Keyword getQuotationMarkKeyword_2_0() { return cQuotationMarkKeyword_2_0; }
		
		//'"'
		public Keyword getQuotationMarkKeyword_2_1() { return cQuotationMarkKeyword_2_1; }
		
		//PORT_DEF
		public RuleCall getPORT_DEFTerminalRuleCall_3() { return cPORT_DEFTerminalRuleCall_3; }
		
		//VERSION_INT
		public RuleCall getVERSION_INTTerminalRuleCall_4() { return cVERSION_INTTerminalRuleCall_4; }
		
		//QUOTED_INT
		public RuleCall getQUOTED_INTTerminalRuleCall_5() { return cQUOTED_INTTerminalRuleCall_5; }
		
		//VERSION_FLOAT
		public RuleCall getVERSION_FLOATTerminalRuleCall_6() { return cVERSION_FLOATTerminalRuleCall_6; }
		
		//DEVICE_DEF
		public RuleCall getDEVICE_DEFTerminalRuleCall_7() { return cDEVICE_DEFTerminalRuleCall_7; }
	}
	public class LabelIDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.LabelID");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//LabelID returns ecore::EString:
		//    ID('.'ID)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ID('.'ID)*
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//('.'ID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.EInt");
		private final RuleCall cINTTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//EInt returns ecore::EInt:
		//    INT;
		@Override public ParserRule getRule() { return rule; }
		
		//INT
		public RuleCall getINTTerminalRuleCall() { return cINTTerminalRuleCall; }
	}
	public class CommandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.Command");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEStringParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cANY_OTHERTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPATHParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cEIntParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final Keyword cHyphenMinusKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		
		//Command returns ecore::EString:
		//    (EString|ANY_OTHER|PATH|EInt|'-')+;
		@Override public ParserRule getRule() { return rule; }
		
		//(EString|ANY_OTHER|PATH|EInt|'-')+
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EString
		public RuleCall getEStringParserRuleCall_0() { return cEStringParserRuleCall_0; }
		
		//ANY_OTHER
		public RuleCall getANY_OTHERTerminalRuleCall_1() { return cANY_OTHERTerminalRuleCall_1; }
		
		//PATH
		public RuleCall getPATHParserRuleCall_2() { return cPATHParserRuleCall_2; }
		
		//EInt
		public RuleCall getEIntParserRuleCall_3() { return cEIntParserRuleCall_3; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_4() { return cHyphenMinusKeyword_4; }
	}
	public class DotIDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.dotID");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		////terminal UPPER_ID:
		////    ('^')?('A'..'Z'|'_') ('A'..'Z'|'_'|'-'|'0'..'9')*;
		//dotID returns ecore::EString:
		//    ID('.'ID)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ID('.'ID)*
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//('.'ID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	public class DNSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.DNS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDns1Assignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDns1EIntParserRuleCall_0_0 = (RuleCall)cDns1Assignment_0.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDns2Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDns2EIntParserRuleCall_2_0 = (RuleCall)cDns2Assignment_2.eContents().get(0);
		private final Keyword cFullStopKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cDns3Assignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDns3EIntParserRuleCall_4_0 = (RuleCall)cDns3Assignment_4.eContents().get(0);
		private final Keyword cFullStopKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cDns4Assignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDns4EIntParserRuleCall_6_0 = (RuleCall)cDns4Assignment_6.eContents().get(0);
		
		//DNS returns DNS:
		//    dns1=EInt'.'dns2=EInt'.'dns3=EInt'.'dns4=EInt;
		@Override public ParserRule getRule() { return rule; }
		
		//dns1=EInt'.'dns2=EInt'.'dns3=EInt'.'dns4=EInt
		public Group getGroup() { return cGroup; }
		
		//dns1=EInt
		public Assignment getDns1Assignment_0() { return cDns1Assignment_0; }
		
		//EInt
		public RuleCall getDns1EIntParserRuleCall_0_0() { return cDns1EIntParserRuleCall_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }
		
		//dns2=EInt
		public Assignment getDns2Assignment_2() { return cDns2Assignment_2; }
		
		//EInt
		public RuleCall getDns2EIntParserRuleCall_2_0() { return cDns2EIntParserRuleCall_2_0; }
		
		//'.'
		public Keyword getFullStopKeyword_3() { return cFullStopKeyword_3; }
		
		//dns3=EInt
		public Assignment getDns3Assignment_4() { return cDns3Assignment_4; }
		
		//EInt
		public RuleCall getDns3EIntParserRuleCall_4_0() { return cDns3EIntParserRuleCall_4_0; }
		
		//'.'
		public Keyword getFullStopKeyword_5() { return cFullStopKeyword_5; }
		
		//dns4=EInt
		public Assignment getDns4Assignment_6() { return cDns4Assignment_6; }
		
		//EInt
		public RuleCall getDns4EIntParserRuleCall_6_0() { return cDns4EIntParserRuleCall_6_0; }
	}
	public class NetworkAddressElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.NetworkAddress");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDns1Assignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDns1EIntParserRuleCall_0_0 = (RuleCall)cDns1Assignment_0.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDns2Assignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDns2EIntParserRuleCall_2_0 = (RuleCall)cDns2Assignment_2.eContents().get(0);
		private final Keyword cFullStopKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cDns3Assignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDns3EIntParserRuleCall_4_0 = (RuleCall)cDns3Assignment_4.eContents().get(0);
		private final Keyword cFullStopKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cDns4Assignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDns4EIntParserRuleCall_6_0 = (RuleCall)cDns4Assignment_6.eContents().get(0);
		private final Keyword cSolidusKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cNetIdAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cNetIdEIntParserRuleCall_8_0 = (RuleCall)cNetIdAssignment_8.eContents().get(0);
		
		//NetworkAddress returns NetworkAddress:
		//    dns1=EInt'.'dns2=EInt'.'dns3=EInt'.'dns4=EInt'/'netId=EInt;
		@Override public ParserRule getRule() { return rule; }
		
		//dns1=EInt'.'dns2=EInt'.'dns3=EInt'.'dns4=EInt'/'netId=EInt
		public Group getGroup() { return cGroup; }
		
		//dns1=EInt
		public Assignment getDns1Assignment_0() { return cDns1Assignment_0; }
		
		//EInt
		public RuleCall getDns1EIntParserRuleCall_0_0() { return cDns1EIntParserRuleCall_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }
		
		//dns2=EInt
		public Assignment getDns2Assignment_2() { return cDns2Assignment_2; }
		
		//EInt
		public RuleCall getDns2EIntParserRuleCall_2_0() { return cDns2EIntParserRuleCall_2_0; }
		
		//'.'
		public Keyword getFullStopKeyword_3() { return cFullStopKeyword_3; }
		
		//dns3=EInt
		public Assignment getDns3Assignment_4() { return cDns3Assignment_4; }
		
		//EInt
		public RuleCall getDns3EIntParserRuleCall_4_0() { return cDns3EIntParserRuleCall_4_0; }
		
		//'.'
		public Keyword getFullStopKeyword_5() { return cFullStopKeyword_5; }
		
		//dns4=EInt
		public Assignment getDns4Assignment_6() { return cDns4Assignment_6; }
		
		//EInt
		public RuleCall getDns4EIntParserRuleCall_6_0() { return cDns4EIntParserRuleCall_6_0; }
		
		//'/'
		public Keyword getSolidusKeyword_7() { return cSolidusKeyword_7; }
		
		//netId=EInt
		public Assignment getNetIdAssignment_8() { return cNetIdAssignment_8; }
		
		//EInt
		public RuleCall getNetIdEIntParserRuleCall_8_0() { return cNetIdEIntParserRuleCall_8_0; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean returns ecore::EBoolean:
		//    'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	
	public class RestartPolicyElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.RestartPolicy");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cNoEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cNoNoKeyword_0_0 = (Keyword)cNoEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cAlwaysEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cAlwaysAlwaysKeyword_1_0 = (Keyword)cAlwaysEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cOnfailureEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cOnfailureOnFailureKeyword_2_0 = (Keyword)cOnfailureEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cUnlessstoppedEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cUnlessstoppedUnlessStoppedKeyword_3_0 = (Keyword)cUnlessstoppedEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum RestartPolicy returns RestartPolicy:
		//                no = '"no"' | always = 'always' | onfailure = 'on-failure' | unlessstopped = 'unless-stopped';
		public EnumRule getRule() { return rule; }
		
		//no = '"no"' | always = 'always' | onfailure = 'on-failure' | unlessstopped = 'unless-stopped'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//no = '"no"'
		public EnumLiteralDeclaration getNoEnumLiteralDeclaration_0() { return cNoEnumLiteralDeclaration_0; }
		
		//'"no"'
		public Keyword getNoNoKeyword_0_0() { return cNoNoKeyword_0_0; }
		
		//always = 'always'
		public EnumLiteralDeclaration getAlwaysEnumLiteralDeclaration_1() { return cAlwaysEnumLiteralDeclaration_1; }
		
		//'always'
		public Keyword getAlwaysAlwaysKeyword_1_0() { return cAlwaysAlwaysKeyword_1_0; }
		
		//onfailure = 'on-failure'
		public EnumLiteralDeclaration getOnfailureEnumLiteralDeclaration_2() { return cOnfailureEnumLiteralDeclaration_2; }
		
		//'on-failure'
		public Keyword getOnfailureOnFailureKeyword_2_0() { return cOnfailureOnFailureKeyword_2_0; }
		
		//unlessstopped = 'unless-stopped'
		public EnumLiteralDeclaration getUnlessstoppedEnumLiteralDeclaration_3() { return cUnlessstoppedEnumLiteralDeclaration_3; }
		
		//'unless-stopped'
		public Keyword getUnlessstoppedUnlessStoppedKeyword_3_0() { return cUnlessstoppedUnlessStoppedKeyword_3_0; }
	}
	public class AccessModeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.AccessMode");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cRwEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cRwRwKeyword_0_0 = (Keyword)cRwEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cRoEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cRoRoKeyword_1_0 = (Keyword)cRoEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cZEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cZZKeyword_2_0 = (Keyword)cZEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum AccessMode returns AccessMode:
		//                rw = 'rw' | ro = 'ro' | z = 'z' ;
		public EnumRule getRule() { return rule; }
		
		//rw = 'rw' | ro = 'ro' | z = 'z'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//rw = 'rw'
		public EnumLiteralDeclaration getRwEnumLiteralDeclaration_0() { return cRwEnumLiteralDeclaration_0; }
		
		//'rw'
		public Keyword getRwRwKeyword_0_0() { return cRwRwKeyword_0_0; }
		
		//ro = 'ro'
		public EnumLiteralDeclaration getRoEnumLiteralDeclaration_1() { return cRoEnumLiteralDeclaration_1; }
		
		//'ro'
		public Keyword getRoRoKeyword_1_0() { return cRoRoKeyword_1_0; }
		
		//z = 'z'
		public EnumLiteralDeclaration getZEnumLiteralDeclaration_2() { return cZEnumLiteralDeclaration_2; }
		
		//'z'
		public Keyword getZZKeyword_2_0() { return cZZKeyword_2_0; }
	}
	public class MountTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.MountType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cVolumeEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cVolumeVolumeKeyword_0_0 = (Keyword)cVolumeEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cBindEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cBindBindKeyword_1_0 = (Keyword)cBindEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cTmpfsEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cTmpfsTmpfsKeyword_2_0 = (Keyword)cTmpfsEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cNpipeEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cNpipeNpipeKeyword_3_0 = (Keyword)cNpipeEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum MountType returns MountType:
		//                volume = 'volume' | bind = 'bind' | tmpfs = 'tmpfs' | npipe = 'npipe';
		public EnumRule getRule() { return rule; }
		
		//volume = 'volume' | bind = 'bind' | tmpfs = 'tmpfs' | npipe = 'npipe'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//volume = 'volume'
		public EnumLiteralDeclaration getVolumeEnumLiteralDeclaration_0() { return cVolumeEnumLiteralDeclaration_0; }
		
		//'volume'
		public Keyword getVolumeVolumeKeyword_0_0() { return cVolumeVolumeKeyword_0_0; }
		
		//bind = 'bind'
		public EnumLiteralDeclaration getBindEnumLiteralDeclaration_1() { return cBindEnumLiteralDeclaration_1; }
		
		//'bind'
		public Keyword getBindBindKeyword_1_0() { return cBindBindKeyword_1_0; }
		
		//tmpfs = 'tmpfs'
		public EnumLiteralDeclaration getTmpfsEnumLiteralDeclaration_2() { return cTmpfsEnumLiteralDeclaration_2; }
		
		//'tmpfs'
		public Keyword getTmpfsTmpfsKeyword_2_0() { return cTmpfsTmpfsKeyword_2_0; }
		
		//npipe = 'npipe'
		public EnumLiteralDeclaration getNpipeEnumLiteralDeclaration_3() { return cNpipeEnumLiteralDeclaration_3; }
		
		//'npipe'
		public Keyword getNpipeNpipeKeyword_3_0() { return cNpipeNpipeKeyword_3_0; }
	}
	public class PropagationTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.PropagationType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cRprivateEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cRprivateRprivateKeyword_0_0 = (Keyword)cRprivateEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPrivateEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPrivatePrivateKeyword_1_0 = (Keyword)cPrivateEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cRsharedEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cRsharedRsharedKeyword_2_0 = (Keyword)cRsharedEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cSharedEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cSharedSharedKeyword_3_0 = (Keyword)cSharedEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cRslaveEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cRslaveRslaveKeyword_4_0 = (Keyword)cRslaveEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cSlaveEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cSlaveSlaveKeyword_5_0 = (Keyword)cSlaveEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum PropagationType returns PropagationType:
		//                rprivate = 'rprivate' | private = 'private' | rshared = 'rshared' | shared = 'shared' | rslave = 'rslave' | slave = 'slave';
		public EnumRule getRule() { return rule; }
		
		//rprivate = 'rprivate' | private = 'private' | rshared = 'rshared' | shared = 'shared' | rslave = 'rslave' | slave = 'slave'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//rprivate = 'rprivate'
		public EnumLiteralDeclaration getRprivateEnumLiteralDeclaration_0() { return cRprivateEnumLiteralDeclaration_0; }
		
		//'rprivate'
		public Keyword getRprivateRprivateKeyword_0_0() { return cRprivateRprivateKeyword_0_0; }
		
		//private = 'private'
		public EnumLiteralDeclaration getPrivateEnumLiteralDeclaration_1() { return cPrivateEnumLiteralDeclaration_1; }
		
		//'private'
		public Keyword getPrivatePrivateKeyword_1_0() { return cPrivatePrivateKeyword_1_0; }
		
		//rshared = 'rshared'
		public EnumLiteralDeclaration getRsharedEnumLiteralDeclaration_2() { return cRsharedEnumLiteralDeclaration_2; }
		
		//'rshared'
		public Keyword getRsharedRsharedKeyword_2_0() { return cRsharedRsharedKeyword_2_0; }
		
		//shared = 'shared'
		public EnumLiteralDeclaration getSharedEnumLiteralDeclaration_3() { return cSharedEnumLiteralDeclaration_3; }
		
		//'shared'
		public Keyword getSharedSharedKeyword_3_0() { return cSharedSharedKeyword_3_0; }
		
		//rslave = 'rslave'
		public EnumLiteralDeclaration getRslaveEnumLiteralDeclaration_4() { return cRslaveEnumLiteralDeclaration_4; }
		
		//'rslave'
		public Keyword getRslaveRslaveKeyword_4_0() { return cRslaveRslaveKeyword_4_0; }
		
		//slave = 'slave'
		public EnumLiteralDeclaration getSlaveEnumLiteralDeclaration_5() { return cSlaveEnumLiteralDeclaration_5; }
		
		//'slave'
		public Keyword getSlaveSlaveKeyword_5_0() { return cSlaveSlaveKeyword_5_0; }
	}
	public class ConditionElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.Condition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cService_startedEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cService_startedService_startedKeyword_0_0 = (Keyword)cService_startedEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cService_healthyEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cService_healthyService_healthyKeyword_1_0 = (Keyword)cService_healthyEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cService_completed_successfullyEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cService_completed_successfullyService_completed_successfullyKeyword_2_0 = (Keyword)cService_completed_successfullyEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Condition returns Condition:
		//                service_started = 'service_started' | service_healthy = 'service_healthy' | service_completed_successfully = 'service_completed_successfully';
		public EnumRule getRule() { return rule; }
		
		//service_started = 'service_started' | service_healthy = 'service_healthy' | service_completed_successfully = 'service_completed_successfully'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//service_started = 'service_started'
		public EnumLiteralDeclaration getService_startedEnumLiteralDeclaration_0() { return cService_startedEnumLiteralDeclaration_0; }
		
		//'service_started'
		public Keyword getService_startedService_startedKeyword_0_0() { return cService_startedService_startedKeyword_0_0; }
		
		//service_healthy = 'service_healthy'
		public EnumLiteralDeclaration getService_healthyEnumLiteralDeclaration_1() { return cService_healthyEnumLiteralDeclaration_1; }
		
		//'service_healthy'
		public Keyword getService_healthyService_healthyKeyword_1_0() { return cService_healthyService_healthyKeyword_1_0; }
		
		//service_completed_successfully = 'service_completed_successfully'
		public EnumLiteralDeclaration getService_completed_successfullyEnumLiteralDeclaration_2() { return cService_completed_successfullyEnumLiteralDeclaration_2; }
		
		//'service_completed_successfully'
		public Keyword getService_completed_successfullyService_completed_successfullyKeyword_2_0() { return cService_completed_successfullyService_completed_successfullyKeyword_2_0; }
	}
	
	private final DockerComposeElements pDockerCompose;
	private final VersionElements pVersion;
	private final TerminalRule tVERSION_INT;
	private final TerminalRule tVERSION_FLOAT;
	private final TerminalRule tQUOTED_INT;
	private final QuotedIntElements pQuotedInt;
	private final EDoubleElements pEDouble;
	private final ServiceElements pService;
	private final EnvironmentVariableMapElements pEnvironmentVariableMap;
	private final EnvironmentVariableListElements pEnvironmentVariableList;
	private final PortElements pPort;
	private final DeviceElements pDevice;
	private final ImageElements pImage;
	private final LinkElements pLink;
	private final DependencyElements pDependency;
	private final NetworkConnector_longElements pNetworkConnector_long;
	private final NetworkConnector_shortElements pNetworkConnector_short;
	private final AliasElements pAlias;
	private final VolumeConnectorElements pVolumeConnector;
	private final ConfigConnectorElements pConfigConnector;
	private final SecretConnectorElements pSecretConnector;
	private final NetworkElements pNetwork;
	private final VolumeElements pVolume;
	private final ConfigElements pConfig;
	private final SecretElements pSecret;
	private final VolumeLabelElements pVolumeLabel;
	private final VolumeDriverOptElements pVolumeDriverOpt;
	private final NetworkLabelElements pNetworkLabel;
	private final NetworkDriverOptElements pNetworkDriverOpt;
	private final IPAMElements pIPAM;
	private final IPAMConfigElements pIPAMConfig;
	private final IPAMOptionElements pIPAMOption;
	private final IPAMAddressElements pIPAMAddress;
	private final PortsElements pPorts;
	private final TerminalRule tPORT_DEF;
	private final TerminalRule tDEVICE_DEF;
	private final TerminalRule tPERMISSION;
	private final PATHElements pPATH;
	private final EStringElements pEString;
	private final LabelIDElements pLabelID;
	private final EIntElements pEInt;
	private final CommandElements pCommand;
	private final TerminalRule tID;
	private final DotIDElements pDotID;
	private final DNSElements pDNS;
	private final NetworkAddressElements pNetworkAddress;
	private final EBooleanElements pEBoolean;
	private final RestartPolicyElements eRestartPolicy;
	private final AccessModeElements eAccessMode;
	private final MountTypeElements eMountType;
	private final PropagationTypeElements ePropagationType;
	private final ConditionElements eCondition;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public DockerComposeGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pDockerCompose = new DockerComposeElements();
		this.pVersion = new VersionElements();
		this.tVERSION_INT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.VERSION_INT");
		this.tVERSION_FLOAT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.VERSION_FLOAT");
		this.tQUOTED_INT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.QUOTED_INT");
		this.pQuotedInt = new QuotedIntElements();
		this.pEDouble = new EDoubleElements();
		this.pService = new ServiceElements();
		this.pEnvironmentVariableMap = new EnvironmentVariableMapElements();
		this.pEnvironmentVariableList = new EnvironmentVariableListElements();
		this.pPort = new PortElements();
		this.pDevice = new DeviceElements();
		this.pImage = new ImageElements();
		this.pLink = new LinkElements();
		this.pDependency = new DependencyElements();
		this.pNetworkConnector_long = new NetworkConnector_longElements();
		this.pNetworkConnector_short = new NetworkConnector_shortElements();
		this.pAlias = new AliasElements();
		this.pVolumeConnector = new VolumeConnectorElements();
		this.pConfigConnector = new ConfigConnectorElements();
		this.pSecretConnector = new SecretConnectorElements();
		this.pNetwork = new NetworkElements();
		this.pVolume = new VolumeElements();
		this.pConfig = new ConfigElements();
		this.pSecret = new SecretElements();
		this.pVolumeLabel = new VolumeLabelElements();
		this.pVolumeDriverOpt = new VolumeDriverOptElements();
		this.pNetworkLabel = new NetworkLabelElements();
		this.pNetworkDriverOpt = new NetworkDriverOptElements();
		this.pIPAM = new IPAMElements();
		this.pIPAMConfig = new IPAMConfigElements();
		this.pIPAMOption = new IPAMOptionElements();
		this.pIPAMAddress = new IPAMAddressElements();
		this.pPorts = new PortsElements();
		this.tPORT_DEF = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.PORT_DEF");
		this.tDEVICE_DEF = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.DEVICE_DEF");
		this.tPERMISSION = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.PERMISSION");
		this.pPATH = new PATHElements();
		this.pEString = new EStringElements();
		this.pLabelID = new LabelIDElements();
		this.pEInt = new EIntElements();
		this.pCommand = new CommandElements();
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.dockercompose.DockerCompose.ID");
		this.pDotID = new DotIDElements();
		this.pDNS = new DNSElements();
		this.pNetworkAddress = new NetworkAddressElements();
		this.pEBoolean = new EBooleanElements();
		this.eRestartPolicy = new RestartPolicyElements();
		this.eAccessMode = new AccessModeElements();
		this.eMountType = new MountTypeElements();
		this.ePropagationType = new PropagationTypeElements();
		this.eCondition = new ConditionElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.dockercompose.DockerCompose".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//DockerCompose returns DockerCompose:
	//    (
	//            ('version:'     version=Version)?
	//        &    ('services:'     (services+=Service)+ )
	//        &    ('volumes:'     (volumes+=Volume)+ )?
	//        &    ('configs:'     (configs+=Config)+ )?
	//        &    ('secrets:'     (secrets+=Secret)+ )?
	//        &    ('networks:'    (networks+=Network)+ )?
	//    );
	public DockerComposeElements getDockerComposeAccess() {
		return pDockerCompose;
	}
	
	public ParserRule getDockerComposeRule() {
		return getDockerComposeAccess().getRule();
	}
	
	//Version returns ecore::EString:
	//    VERSION_INT | VERSION_FLOAT
	//;
	public VersionElements getVersionAccess() {
		return pVersion;
	}
	
	public ParserRule getVersionRule() {
		return getVersionAccess().getRule();
	}
	
	//terminal VERSION_INT:
	//    '"'('1'|'2'|'3')'"';
	public TerminalRule getVERSION_INTRule() {
		return tVERSION_INT;
	}
	
	//terminal VERSION_FLOAT:
	//    '"'('2.'('1'..'9')|'3.'('1'..'9'))'"';
	public TerminalRule getVERSION_FLOATRule() {
		return tVERSION_FLOAT;
	}
	
	//terminal QUOTED_INT:
	//    '"'INT'"';
	public TerminalRule getQUOTED_INTRule() {
		return tQUOTED_INT;
	}
	
	//QuotedInt returns ecore::EString:
	//    QUOTED_INT | VERSION_INT
	//;
	public QuotedIntElements getQuotedIntAccess() {
		return pQuotedInt;
	}
	
	public ParserRule getQuotedIntRule() {
		return getQuotedIntAccess().getRule();
	}
	
	//EDouble returns ecore::EDouble:
	//    INT '.' INT;
	public EDoubleElements getEDoubleAccess() {
		return pEDouble;
	}
	
	public ParserRule getEDoubleRule() {
		return getEDoubleAccess().getRule();
	}
	
	//Service returns Service:
	//    {Service}
	//    name=ID ':'
	//    (
	//            ('build:'             build=PATH)?
	//        &    ('image:'             image=Image)?
	//        &    ('cpu_count:'         cpu_count=EInt)?
	//        &    ('command:'         command=Command)?
	//        &    ('container_name:'     container_name=EString)?
	//        &    ('restart:'         restart=RestartPolicy)?
	//        &    ('init:'            init=EBoolean)?
	//        &    ('read_only:'        read_only=EBoolean)?
	//        &    ('links:'             ('-'links+=Link)+ )?
	//        &    ('depends_on:'         (depends_on+=Dependency)+)?
	//        &    ('networks:'         ((networks+=NetworkConnector_long)+ | (networks+=NetworkConnector_short)+ ))?
	//        &    ('volumes:'         ('-'volumes+=VolumeConnector)+)?
	//        &    ('configs:'         ('-'configs+=ConfigConnector)+)?
	//        &    ('secrets:'         ('-'secrets+=SecretConnector)+)?
	//        &    ('environment:'     ((environment+=EnvironmentVariableMap)+ | (environment+=EnvironmentVariableList)+ ))?
	//        &    ('devices:'         ('-'devices+=Device)+ )?
	//        &    ('dns:'                (('-'dns+=DNS)+ | dns+=DNS) )?
	//        &    ('ports:'            ('-'ports+=Port)+ )?
	//    );
	public ServiceElements getServiceAccess() {
		return pService;
	}
	
	public ParserRule getServiceRule() {
		return getServiceAccess().getRule();
	}
	
	//EnvironmentVariableMap returns EnvironmentVariable:
	//    {EnvironmentVariable}
	//    name=ID':' (value=EString|value=PATH)?
	//;
	public EnvironmentVariableMapElements getEnvironmentVariableMapAccess() {
		return pEnvironmentVariableMap;
	}
	
	public ParserRule getEnvironmentVariableMapRule() {
		return getEnvironmentVariableMapAccess().getRule();
	}
	
	//EnvironmentVariableList returns EnvironmentVariable:
	//    {EnvironmentVariable}
	//    '-' name=ID('='(value=EString|value=PATH))?
	//;
	public EnvironmentVariableListElements getEnvironmentVariableListAccess() {
		return pEnvironmentVariableList;
	}
	
	public ParserRule getEnvironmentVariableListRule() {
		return getEnvironmentVariableListAccess().getRule();
	}
	
	//Port returns Port:
	//    {Port}
	////    value=PORT_DEF;
	//    value=Ports;
	public PortElements getPortAccess() {
		return pPort;
	}
	
	public ParserRule getPortRule() {
		return getPortAccess().getRule();
	}
	
	//Device returns Device:
	//    {Device}
	//    value=DEVICE_DEF;
	public DeviceElements getDeviceAccess() {
		return pDevice;
	}
	
	public ParserRule getDeviceRule() {
		return getDeviceAccess().getRule();
	}
	
	//Image returns ecore::EString:
	//    (dotID(':'(EInt|dotID)+)*'/')? (dotID(':'(EInt|dotID)+)*'/')? ID (':'(EInt|EDouble|'-'?dotID)+|'@'dotID(':'(EInt|dotID)+)*)?;
	public ImageElements getImageAccess() {
		return pImage;
	}
	
	public ParserRule getImageRule() {
		return getImageAccess().getRule();
	}
	
	//Link returns Link:
	//    {Link}
	//    service=[Service|ID](':'alias=EString)?;
	public LinkElements getLinkAccess() {
		return pLink;
	}
	
	public ParserRule getLinkRule() {
		return getLinkAccess().getRule();
	}
	
	///*
	//Dependency_short returns Dependency:
	//    {Dependency}
	//    '-'service=[Service|EString];
	//Dependency_long returns Dependency:
	//    {Dependency}
	//    service=[Service|EString]':'
	//    'condition:' condition=Condition;
	//*/
	//Dependency returns Dependency:
	//    {Dependency}
	//    (('-'service=[Service|ID]) |
	//    (service=[Service|ID]':'
	//    'condition:' condition=Condition));
	public DependencyElements getDependencyAccess() {
		return pDependency;
	}
	
	public ParserRule getDependencyRule() {
		return getDependencyAccess().getRule();
	}
	
	//NetworkConnector_long returns NetworkConnector:
	//    {NetworkConnector}
	//    network=[Network|ID]':'
	//    (
	//            ('ipv4_address:'    ipv4_address=DNS)?
	//        &    ('priority:'        priority=EInt)?
	//        &    ('aliases:'         ('-'aliases+=Alias)+ )?
	//        &    ('link_local_ips:'     ('-'link_local_ips+=DNS)+ )?
	//    );
	public NetworkConnector_longElements getNetworkConnector_longAccess() {
		return pNetworkConnector_long;
	}
	
	public ParserRule getNetworkConnector_longRule() {
		return getNetworkConnector_longAccess().getRule();
	}
	
	//NetworkConnector_short returns NetworkConnector:
	//    {NetworkConnector}
	//    '-'network=[Network|ID];
	public NetworkConnector_shortElements getNetworkConnector_shortAccess() {
		return pNetworkConnector_short;
	}
	
	public ParserRule getNetworkConnector_shortRule() {
		return getNetworkConnector_shortAccess().getRule();
	}
	
	///*
	//NetworkConnector returns NetworkConnector:
	//    {NetworkConnector}
	//    ('-'network=[Network|ID] |
	//    (network=[Network|ID]':'
	//    (
	//            ('ipv4_address:'    ipv4_address=DNS)?
	//        &    ('priority:'        priority=EInt)?
	//        &    ('aliases:'         ('-'aliases+=Alias)+ )?
	//        &    ('link_local_ips:'     ('-'link_local_ips+=DNS)+ )?
	//    )));
	//*/
	//Alias returns Alias:
	//    {Alias}
	//    alias=EString
	//    ;
	public AliasElements getAliasAccess() {
		return pAlias;
	}
	
	public ParserRule getAliasRule() {
		return getAliasAccess().getRule();
	}
	
	///*
	//VolumeConnector_long returns VolumeConnector:
	//    {VolumeConnector}
	//    (
	//            ('source:'            volume=[Volume|EString])
	//        &    ('type:'            type=MountType)?
	//        &    ('target:'            container_path=PATH)
	//        &    ('read_only:'         read_only=EBoolean)?
	//        &    ('bind:'
	//                'propagation:'    propagation=PropagationType)?
	//        &    ('volume:'
	//                'nocopy:'         nocopy=EBoolean)?
	//        &    ('tmpfs:'
	//                'size:'         size=EInt)?
	//    );
	//VolumeConnector_short returns VolumeConnector:
	//    {VolumeConnector}
	//    volume=[Volume|EString]':'container_path=PATH(':'access_mode=AccessMode)?;
	// */
	// VolumeConnector returns VolumeConnector:
	//    {VolumeConnector}
	//    ((volume=[Volume|ID]':'container_path=PATH(':'access_mode=AccessMode)?) |
	//    (
	//            ('source:'            volume=[Volume|ID])
	//        &    ('type:'            type=MountType)?
	//        &    ('target:'            container_path=PATH)
	//        &    ('read_only:'         read_only=EBoolean)?
	//        &    ('bind:'
	//                'propagation:'    propagation=PropagationType)?
	//        &    ('volume:'
	//                'nocopy:'         nocopy=EBoolean)?
	//        &    ('tmpfs:'
	//                'size'':'         size=EInt)?
	//    ));
	public VolumeConnectorElements getVolumeConnectorAccess() {
		return pVolumeConnector;
	}
	
	public ParserRule getVolumeConnectorRule() {
		return getVolumeConnectorAccess().getRule();
	}
	
	///*
	//ConfigConnector_long returns ConfigConnector:
	//    {ConfigConnector}
	//    (
	//            ('source:'    config=[Config|EString])
	//        &    ('target:'    target=PATH)?
	//        &    ('uid:'     uid=QUOTED_INT)?
	//        &    ('gid:'     gid=QUOTED_INT)?
	//        &    ('mode:'     mode=EInt)?
	//    );
	//ConfigConnector_short returns ConfigConnector:
	//    {ConfigConnector}
	//    config=[Config|EString];
	//*/
	//ConfigConnector returns ConfigConnector:
	//    {ConfigConnector}
	//    ((config=[Config|ID]) |
	//    (
	//            ('source:'    config=[Config|ID])
	//        &    ('target:'    target=PATH)?
	//        &    ('uid:'     uid=QuotedInt)?
	//        &    ('gid:'     gid=QuotedInt)?
	//        &    ('mode:'     mode=EInt)?
	//    ));
	public ConfigConnectorElements getConfigConnectorAccess() {
		return pConfigConnector;
	}
	
	public ParserRule getConfigConnectorRule() {
		return getConfigConnectorAccess().getRule();
	}
	
	///*
	//SecretConnector_long returns SecretConnector:
	//    {SecretConnector}
	//    (
	//            ('source:'    secret=[Secret|EString])
	//        &    ('target:'    target=PATH)?
	//        &    ('uid:'     uid=QUOTED_INT)?
	//        &    ('gid:'     gid=QUOTED_INT)?
	//        &    ('mode:'     mode=EInt)?
	//    );
	//SecretConnector_short returns SecretConnector:
	//    {SecretConnector}
	//    secret=[Secret|EString];
	//*/
	//SecretConnector returns SecretConnector:
	//    {SecretConnector}
	//    ((secret=[Secret|ID]) |
	//    (
	//            ('source:'    secret=[Secret|ID])
	//        &    ('target:'    target=PATH)?
	//        &    ('uid:'     uid=QuotedInt)?
	//        &    ('gid:'     gid=QuotedInt)?
	//        &    ('mode:'     mode=EInt)?
	//    ));
	public SecretConnectorElements getSecretConnectorAccess() {
		return pSecretConnector;
	}
	
	public ParserRule getSecretConnectorRule() {
		return getSecretConnectorAccess().getRule();
	}
	
	//Network returns Network:
	//    {Network}
	//    name=ID ':'
	//    (
	//        '{''}' |
	//            (('driver:'        driver=EString)?
	//        &    ('attachable:'    attachable=EBoolean)?
	//        &    ('enable_ipv6:'    enable_ipv6=EBoolean)?
	//        &    ('internal:'    internal=EBoolean)?
	//        &    ('external:'    external=EBoolean)?
	//        &    ('name:'         network_name=EString)?
	//        &    ('labels:'         (labels+=NetworkLabel)+ )?
	//        &    ('driver_opts:' (driver_opts+=NetworkDriverOpt)+ )?
	//        &    ('ipam:'         ipam=IPAM)?)
	//    );
	public NetworkElements getNetworkAccess() {
		return pNetwork;
	}
	
	public ParserRule getNetworkRule() {
		return getNetworkAccess().getRule();
	}
	
	//Volume returns Volume:
	//    {Volume}
	//    name=ID':'
	//    (
	//            ('external:'     external?=EBoolean)?
	//        &    ('driver:'         driver=EString)?
	//        &    ('name:'         volume_name=EString)?
	//        &    ('labels:'         (labels+=VolumeLabel)+ )?
	//        &    ('driver_opts:' (driver_opts+=VolumeDriverOpt)+ )?
	//    );
	public VolumeElements getVolumeAccess() {
		return pVolume;
	}
	
	public ParserRule getVolumeRule() {
		return getVolumeAccess().getRule();
	}
	
	//Config returns Config:
	//    {Config}
	//    name=ID':'
	//    (
	//            ('external:'    external=EBoolean)?
	//        &    ('file:'         file=PATH)?
	//        &    ('name:'         config_name=EString)?
	//    );
	public ConfigElements getConfigAccess() {
		return pConfig;
	}
	
	public ParserRule getConfigRule() {
		return getConfigAccess().getRule();
	}
	
	//Secret returns Secret:
	//    {Secret}
	//    name=ID':'
	//    (
	//            ('external:'    external=EBoolean)?
	//        &    ('file:'         file=PATH)?
	//        &    ('environment:' environment=EString)?
	//        &    ('name:'         secret_name=EString)?
	//    );
	public SecretElements getSecretAccess() {
		return pSecret;
	}
	
	public ParserRule getSecretRule() {
		return getSecretAccess().getRule();
	}
	
	//VolumeLabel returns VolumeLabel:
	//    {VolumeLabel}
	//    name=EString':' value=EString;
	public VolumeLabelElements getVolumeLabelAccess() {
		return pVolumeLabel;
	}
	
	public ParserRule getVolumeLabelRule() {
		return getVolumeLabelAccess().getRule();
	}
	
	//VolumeDriverOpt returns VolumeDriverOpt:
	//    {VolumeDriverOpt}
	//    name=EString':' value=EString;
	public VolumeDriverOptElements getVolumeDriverOptAccess() {
		return pVolumeDriverOpt;
	}
	
	public ParserRule getVolumeDriverOptRule() {
		return getVolumeDriverOptAccess().getRule();
	}
	
	//NetworkLabel returns NetworkLabel:
	//    {NetworkLabel}
	//    name=LabelID':' value=EString;
	public NetworkLabelElements getNetworkLabelAccess() {
		return pNetworkLabel;
	}
	
	public ParserRule getNetworkLabelRule() {
		return getNetworkLabelAccess().getRule();
	}
	
	//NetworkDriverOpt returns NetworkDriverOpt:
	//    {NetworkDriverOpt}
	//    name=EString':' value=EString;
	public NetworkDriverOptElements getNetworkDriverOptAccess() {
		return pNetworkDriverOpt;
	}
	
	public ParserRule getNetworkDriverOptRule() {
		return getNetworkDriverOptAccess().getRule();
	}
	
	//IPAM returns IPAM:
	//    {IPAM}
	//    (
	//            ('driver:'    driver=EString)?
	//        &    ('config:'    ('-'configs+=IPAMConfig)+ )?
	//        &    ('options:'    (options+=IPAMOption)+ )?
	//    );
	public IPAMElements getIPAMAccess() {
		return pIPAM;
	}
	
	public ParserRule getIPAMRule() {
		return getIPAMAccess().getRule();
	}
	
	//IPAMConfig returns IPAMConfig:
	//    {IPAMConfig}
	//    (
	//            ('subnet:'            subnet=NetworkAddress)?
	//        &    ('ip_range:'         ip_range=NetworkAddress)?
	//        &    ('gateway:'         gateway=DNS)?
	//        &    ('aux_addresses:'    (aux_addresses+=IPAMAddress)+ )?
	//    );
	public IPAMConfigElements getIPAMConfigAccess() {
		return pIPAMConfig;
	}
	
	public ParserRule getIPAMConfigRule() {
		return getIPAMConfigAccess().getRule();
	}
	
	//IPAMOption returns IPAMOption:
	//    {IPAMOption}
	//    name=EString':' value=EString;
	public IPAMOptionElements getIPAMOptionAccess() {
		return pIPAMOption;
	}
	
	public ParserRule getIPAMOptionRule() {
		return getIPAMOptionAccess().getRule();
	}
	
	//IPAMAddress returns IPAMAddress:
	//    {IPAMAddress}
	//    name=EString':' dns=DNS;
	public IPAMAddressElements getIPAMAddressAccess() {
		return pIPAMAddress;
	}
	
	public ParserRule getIPAMAddressRule() {
		return getIPAMAddressAccess().getRule();
	}
	
	///*
	//terminal PORT:
	//    '"'PORT_DEF'"' | PORT_DEF;
	//terminal PORT_DEF:
	//    (((('0'..'9')+'.'('0'..'9')+'.'('0'..'9')+'.'('0'..'9')+':')?('0'..'9')+'-'('0'..'9')+':')?('0'..'9')+'-'('0'..'9')+('/'ID)?)
	//    | (((('0'..'9')+'.'('0'..'9')+'.'('0'..'9')+'.'('0'..'9')+':')?('0'..'9')+':')?('0'..'9')+('/'ID)?);
	//*/
	//Ports returns ecore::EString:
	//    PORT_DEF | VERSION_INT | QUOTED_INT
	//;
	public PortsElements getPortsAccess() {
		return pPorts;
	}
	
	public ParserRule getPortsRule() {
		return getPortsAccess().getRule();
	}
	
	//terminal PORT_DEF:
	//    ('"'(((((('0'..'9')|('0'..'9')('0'..'9')|'1'('0'..'9')('0'..'9')|'2'('0'..'5')('0'..'5'))'.'
	//    (('0'..'9')|('0'..'9')('0'..'9')|'1'('0'..'9')('0'..'9')|'2'('0'..'5')('0'..'5'))'.'
	//    (('0'..'9')|('0'..'9')('0'..'9')|'1'('0'..'9')('0'..'9')|'2'('0'..'5')('0'..'5'))'.'
	//    (('0'..'9')|('0'..'9')('0'..'9')|'1'('0'..'9')('0'..'9')|'2'('0'..'5')('0'..'5'))':')?INT'-'INT':')?INT'-'INT('/'ID)?)
	//    | ((((('0'..'9')|('0'..'9')('0'..'9')|'1'('0'..'9')('0'..'9')|'2'('0'..'5')('0'..'5'))'.'
	//    (('0'..'9')|('0'..'9')('0'..'9')|'1'('0'..'9')('0'..'9')|'2'('0'..'5')('0'..'5'))'.'
	//    (('0'..'9')|('0'..'9')('0'..'9')|'1'('0'..'9')('0'..'9')|'2'('0'..'5')('0'..'5'))'.'
	//    (('0'..'9')|('0'..'9')('0'..'9')|'1'('0'..'9')('0'..'9')|'2'('0'..'5')('0'..'5'))':')?INT':')?INT('/'ID)?))'"');
	public TerminalRule getPORT_DEFRule() {
		return tPORT_DEF;
	}
	
	//terminal DEVICE_DEF:
	//    '"'(((ID('.'ID)*|'.'|'..') ('/'(ID('.'ID)*|'.'|'..'))* '/'?) | ('/' ((ID('.'ID)*|'.'|'..')'/')* (ID('.'ID)*|'.'|'..')?))':'(((ID('.'ID)*|'.'|'..') ('/'(ID('.'ID)*|'.'|'..'))* '/'?) | ('/' ((ID('.'ID)*|'.'|'..')'/')* (ID('.'ID)*|'.'|'..')?))(':'PERMISSION)?'"';
	public TerminalRule getDEVICE_DEFRule() {
		return tDEVICE_DEF;
	}
	
	//terminal PERMISSION:
	//    'r'|'w'|'m'|'rw'|'wr'|'rm'|'mr'|'mw'|'wm'|'rwm'|'rmw'|'wrm'|'wmr'|'mrw'|'mwr';
	public TerminalRule getPERMISSIONRule() {
		return tPERMISSION;
	}
	
	//PATH returns ecore::EString:
	//    ((ID('.'ID)*|'.'|'..') ('/'(ID('.'ID)*|'.'|'..'))* '/'?) | ('/' ((ID('.'ID)*|'.'|'..')'/')* (ID('.'ID)*|'.'|'..')?);
	public PATHElements getPATHAccess() {
		return pPATH;
	}
	
	public ParserRule getPATHRule() {
		return getPATHAccess().getRule();
	}
	
	//    //(((ID|EInt|EInt?ID)('.'(ID|EInt|EInt?ID))*|'.'|'..') ('/'((ID|EInt|EInt?ID)('.'(ID|EInt|EInt?ID))*|'.'|'..'))* '/'?) | ('/' (((ID|EInt|EInt?ID)('.'(ID|EInt|EInt?ID))*|'.'|'..')'/')* ((ID|EInt|EInt?ID)('.'(ID|EInt|EInt?ID))*|'.'|'..')?);
	//    //(((ID|EInt)+('.'(ID|EInt)+)*|'.'|'..') ('/'((ID|EInt)+('.'(ID|EInt)+)*|'.'|'..'))* '/'?) | ('/' (((ID|EInt)+('.'(ID|EInt)+)*|'.'|'..')'/')* ((ID|EInt)+('.'(ID|EInt)+)*|'.'|'..')?);
	//EString returns ecore::EString:
	//    STRING | ID | '"''"' | PORT_DEF | VERSION_INT | QUOTED_INT | VERSION_FLOAT | DEVICE_DEF;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//LabelID returns ecore::EString:
	//    ID('.'ID)*;
	public LabelIDElements getLabelIDAccess() {
		return pLabelID;
	}
	
	public ParserRule getLabelIDRule() {
		return getLabelIDAccess().getRule();
	}
	
	//EInt returns ecore::EInt:
	//    INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//Command returns ecore::EString:
	//    (EString|ANY_OTHER|PATH|EInt|'-')+;
	public CommandElements getCommandAccess() {
		return pCommand;
	}
	
	public ParserRule getCommandRule() {
		return getCommandAccess().getRule();
	}
	
	//terminal ID:
	//    //('^')?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'-'|'/'|'.'|'0'..'9')*;
	//    ('^')?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'-'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return tID;
	}
	
	////terminal UPPER_ID:
	////    ('^')?('A'..'Z'|'_') ('A'..'Z'|'_'|'-'|'0'..'9')*;
	//dotID returns ecore::EString:
	//    ID('.'ID)*;
	public DotIDElements getDotIDAccess() {
		return pDotID;
	}
	
	public ParserRule getDotIDRule() {
		return getDotIDAccess().getRule();
	}
	
	//DNS returns DNS:
	//    dns1=EInt'.'dns2=EInt'.'dns3=EInt'.'dns4=EInt;
	public DNSElements getDNSAccess() {
		return pDNS;
	}
	
	public ParserRule getDNSRule() {
		return getDNSAccess().getRule();
	}
	
	//NetworkAddress returns NetworkAddress:
	//    dns1=EInt'.'dns2=EInt'.'dns3=EInt'.'dns4=EInt'/'netId=EInt;
	public NetworkAddressElements getNetworkAddressAccess() {
		return pNetworkAddress;
	}
	
	public ParserRule getNetworkAddressRule() {
		return getNetworkAddressAccess().getRule();
	}
	
	//EBoolean returns ecore::EBoolean:
	//    'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//enum RestartPolicy returns RestartPolicy:
	//                no = '"no"' | always = 'always' | onfailure = 'on-failure' | unlessstopped = 'unless-stopped';
	public RestartPolicyElements getRestartPolicyAccess() {
		return eRestartPolicy;
	}
	
	public EnumRule getRestartPolicyRule() {
		return getRestartPolicyAccess().getRule();
	}
	
	//enum AccessMode returns AccessMode:
	//                rw = 'rw' | ro = 'ro' | z = 'z' ;
	public AccessModeElements getAccessModeAccess() {
		return eAccessMode;
	}
	
	public EnumRule getAccessModeRule() {
		return getAccessModeAccess().getRule();
	}
	
	//enum MountType returns MountType:
	//                volume = 'volume' | bind = 'bind' | tmpfs = 'tmpfs' | npipe = 'npipe';
	public MountTypeElements getMountTypeAccess() {
		return eMountType;
	}
	
	public EnumRule getMountTypeRule() {
		return getMountTypeAccess().getRule();
	}
	
	//enum PropagationType returns PropagationType:
	//                rprivate = 'rprivate' | private = 'private' | rshared = 'rshared' | shared = 'shared' | rslave = 'rslave' | slave = 'slave';
	public PropagationTypeElements getPropagationTypeAccess() {
		return ePropagationType;
	}
	
	public EnumRule getPropagationTypeRule() {
		return getPropagationTypeAccess().getRule();
	}
	
	//enum Condition returns Condition:
	//                service_started = 'service_started' | service_healthy = 'service_healthy' | service_completed_successfully = 'service_completed_successfully';
	public ConditionElements getConditionAccess() {
		return eCondition;
	}
	
	public EnumRule getConditionRule() {
		return getConditionAccess().getRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
