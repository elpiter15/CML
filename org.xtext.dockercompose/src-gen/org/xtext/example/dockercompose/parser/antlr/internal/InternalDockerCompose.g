/*
 * generated by Xtext 2.27.0
 */
grammar InternalDockerCompose;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.dockercompose.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.dockercompose.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.dockercompose.services.DockerComposeGrammarAccess;

}

@parser::members {

 	private DockerComposeGrammarAccess grammarAccess;

    public InternalDockerComposeParser(TokenStream input, DockerComposeGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "DockerCompose";
   	}

   	@Override
   	protected DockerComposeGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleDockerCompose
entryRuleDockerCompose returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDockerComposeRule()); }
	iv_ruleDockerCompose=ruleDockerCompose
	{ $current=$iv_ruleDockerCompose.current; }
	EOF;

// Rule DockerCompose
ruleDockerCompose returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{ 
			  getUnorderedGroupHelper().enter(grammarAccess.getDockerComposeAccess().getUnorderedGroup());
			}
			(
				(
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0);
				}
							({true}?=>(otherlv_1='version:'
							{
								newLeafNode(otherlv_1, grammarAccess.getDockerComposeAccess().getVersionKeyword_0_0());
							}
							(
								(
									lv_version_2_0=RULE_VERSION
									{
										newLeafNode(lv_version_2_0, grammarAccess.getDockerComposeAccess().getVersionVERSIONTerminalRuleCall_0_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getDockerComposeRule());
										}
										setWithLastConsumed(
											$current,
											"version",
											lv_version_2_0,
											"org.xtext.example.dockercompose.DockerCompose.VERSION");
									}
								)
							)
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDockerComposeAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1);
				}
							({true}?=>(otherlv_3='services:'
							{
								newLeafNode(otherlv_3, grammarAccess.getDockerComposeAccess().getServicesKeyword_1_0());
							}
							(
								(
									{
										newCompositeNode(grammarAccess.getDockerComposeAccess().getServicesServiceParserRuleCall_1_1_0());
									}
									lv_services_4_0=ruleService
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getDockerComposeRule());
										}
										add(
											$current,
											"services",
											lv_services_4_0,
											"org.xtext.example.dockercompose.DockerCompose.Service");
										afterParserOrEnumRuleCall();
									}
								)
							)+
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDockerComposeAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2);
				}
							({true}?=>(otherlv_5='volumes:'
							{
								newLeafNode(otherlv_5, grammarAccess.getDockerComposeAccess().getVolumesKeyword_2_0());
							}
							(
								(
									{
										newCompositeNode(grammarAccess.getDockerComposeAccess().getVolumesVolumeParserRuleCall_2_1_0());
									}
									lv_volumes_6_0=ruleVolume
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getDockerComposeRule());
										}
										add(
											$current,
											"volumes",
											lv_volumes_6_0,
											"org.xtext.example.dockercompose.DockerCompose.Volume");
										afterParserOrEnumRuleCall();
									}
								)
							)+
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDockerComposeAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3);
				}
							({true}?=>(otherlv_7='configs:'
							{
								newLeafNode(otherlv_7, grammarAccess.getDockerComposeAccess().getConfigsKeyword_3_0());
							}
							(
								(
									{
										newCompositeNode(grammarAccess.getDockerComposeAccess().getConfigsConfigParserRuleCall_3_1_0());
									}
									lv_configs_8_0=ruleConfig
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getDockerComposeRule());
										}
										add(
											$current,
											"configs",
											lv_configs_8_0,
											"org.xtext.example.dockercompose.DockerCompose.Config");
										afterParserOrEnumRuleCall();
									}
								)
							)+
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDockerComposeAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4);
				}
							({true}?=>(otherlv_9='secrets:'
							{
								newLeafNode(otherlv_9, grammarAccess.getDockerComposeAccess().getSecretsKeyword_4_0());
							}
							(
								(
									{
										newCompositeNode(grammarAccess.getDockerComposeAccess().getSecretsSecretParserRuleCall_4_1_0());
									}
									lv_secrets_10_0=ruleSecret
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getDockerComposeRule());
										}
										add(
											$current,
											"secrets",
											lv_secrets_10_0,
											"org.xtext.example.dockercompose.DockerCompose.Secret");
										afterParserOrEnumRuleCall();
									}
								)
							)+
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDockerComposeAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5);
				}
							({true}?=>(otherlv_11='networks:'
							{
								newLeafNode(otherlv_11, grammarAccess.getDockerComposeAccess().getNetworksKeyword_5_0());
							}
							(
								(
									{
										newCompositeNode(grammarAccess.getDockerComposeAccess().getNetworksNetworkParserRuleCall_5_1_0());
									}
									lv_networks_12_0=ruleNetwork
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getDockerComposeRule());
										}
										add(
											$current,
											"networks",
											lv_networks_12_0,
											"org.xtext.example.dockercompose.DockerCompose.Network");
										afterParserOrEnumRuleCall();
									}
								)
							)+
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDockerComposeAccess().getUnorderedGroup());
				}
			)
		)
				)+
				{getUnorderedGroupHelper().canLeave(grammarAccess.getDockerComposeAccess().getUnorderedGroup())}?
			)
		)
			{ 
			  getUnorderedGroupHelper().leave(grammarAccess.getDockerComposeAccess().getUnorderedGroup());
			}
	)
;

// Entry rule entryRuleService
entryRuleService returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServiceRule()); }
	iv_ruleService=ruleService
	{ $current=$iv_ruleService.current; }
	EOF;

// Rule Service
ruleService returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getServiceAccess().getServiceAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.dockercompose.DockerCompose.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getServiceAccess().getColonKeyword_2());
		}
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getServiceAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>((
									otherlv_4='build:'
									{
										newLeafNode(otherlv_4, grammarAccess.getServiceAccess().getBuildKeyword_3_0_0_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getServiceAccess().getBuildPATHParserRuleCall_3_0_0_1_0());
											}
											lv_build_5_0=rulePATH
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getServiceRule());
												}
												set(
													$current,
													"build",
													lv_build_5_0,
													"org.xtext.example.dockercompose.DockerCompose.PATH");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)
								    |
								(
									otherlv_6='image:'
									{
										newLeafNode(otherlv_6, grammarAccess.getServiceAccess().getImageKeyword_3_0_1_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getServiceAccess().getImageImageParserRuleCall_3_0_1_1_0());
											}
											lv_image_7_0=ruleImage
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getServiceRule());
												}
												set(
													$current,
													"image",
													lv_image_7_0,
													"org.xtext.example.dockercompose.DockerCompose.Image");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getServiceAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>(otherlv_8='cpu_count:'
								{
									newLeafNode(otherlv_8, grammarAccess.getServiceAccess().getCpu_countKeyword_3_1_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getServiceAccess().getCpu_countEIntParserRuleCall_3_1_1_0());
										}
										lv_cpu_count_9_0=ruleEInt
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getServiceRule());
											}
											set(
												$current,
												"cpu_count",
												lv_cpu_count_9_0,
												"org.xtext.example.dockercompose.DockerCompose.EInt");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getServiceAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2);
					}
								({true}?=>(otherlv_10='command:'
								{
									newLeafNode(otherlv_10, grammarAccess.getServiceAccess().getCommandKeyword_3_2_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getServiceAccess().getCommandEStringParserRuleCall_3_2_1_0());
										}
										lv_command_11_0=ruleEString
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getServiceRule());
											}
											set(
												$current,
												"command",
												lv_command_11_0,
												"org.xtext.example.dockercompose.DockerCompose.EString");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getServiceAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3);
					}
								({true}?=>(otherlv_12='container_name:'
								{
									newLeafNode(otherlv_12, grammarAccess.getServiceAccess().getContainer_nameKeyword_3_3_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getServiceAccess().getContainer_nameEStringParserRuleCall_3_3_1_0());
										}
										lv_container_name_13_0=ruleEString
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getServiceRule());
											}
											set(
												$current,
												"container_name",
												lv_container_name_13_0,
												"org.xtext.example.dockercompose.DockerCompose.EString");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getServiceAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4);
					}
								({true}?=>(otherlv_14='restart:'
								{
									newLeafNode(otherlv_14, grammarAccess.getServiceAccess().getRestartKeyword_3_4_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getServiceAccess().getRestartRestartPolicyEnumRuleCall_3_4_1_0());
										}
										lv_restart_15_0=ruleRestartPolicy
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getServiceRule());
											}
											set(
												$current,
												"restart",
												lv_restart_15_0,
												"org.xtext.example.dockercompose.DockerCompose.RestartPolicy");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getServiceAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5);
					}
								({true}?=>(otherlv_16='init:'
								{
									newLeafNode(otherlv_16, grammarAccess.getServiceAccess().getInitKeyword_3_5_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getServiceAccess().getInitEBooleanParserRuleCall_3_5_1_0());
										}
										lv_init_17_0=ruleEBoolean
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getServiceRule());
											}
											set(
												$current,
												"init",
												lv_init_17_0,
												"org.xtext.example.dockercompose.DockerCompose.EBoolean");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getServiceAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6);
					}
								({true}?=>(otherlv_18='read_only:'
								{
									newLeafNode(otherlv_18, grammarAccess.getServiceAccess().getRead_onlyKeyword_3_6_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getServiceAccess().getRead_onlyEBooleanParserRuleCall_3_6_1_0());
										}
										lv_read_only_19_0=ruleEBoolean
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getServiceRule());
											}
											set(
												$current,
												"read_only",
												lv_read_only_19_0,
												"org.xtext.example.dockercompose.DockerCompose.EBoolean");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getServiceAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7);
					}
								({true}?=>(otherlv_20='links:'
								{
									newLeafNode(otherlv_20, grammarAccess.getServiceAccess().getLinksKeyword_3_7_0());
								}
								(
									otherlv_21='-'
									{
										newLeafNode(otherlv_21, grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_7_1_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getServiceAccess().getLinksLinkParserRuleCall_3_7_1_1_0());
											}
											lv_links_22_0=ruleLink
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getServiceRule());
												}
												add(
													$current,
													"links",
													lv_links_22_0,
													"org.xtext.example.dockercompose.DockerCompose.Link");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)+
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getServiceAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8);
					}
								({true}?=>(otherlv_23='depends_on:'
								{
									newLeafNode(otherlv_23, grammarAccess.getServiceAccess().getDepends_onKeyword_3_8_0());
								}
								(
									(
										(
											{
												newCompositeNode(grammarAccess.getServiceAccess().getDepends_onDependency_shortParserRuleCall_3_8_1_0_0());
											}
											lv_depends_on_24_0=ruleDependency_short
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getServiceRule());
												}
												add(
													$current,
													"depends_on",
													lv_depends_on_24_0,
													"org.xtext.example.dockercompose.DockerCompose.Dependency_short");
												afterParserOrEnumRuleCall();
											}
										)
									)+
									    |
									(
										(
											{
												newCompositeNode(grammarAccess.getServiceAccess().getDepends_onDependency_longParserRuleCall_3_8_1_1_0());
											}
											lv_depends_on_25_0=ruleDependency_long
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getServiceRule());
												}
												add(
													$current,
													"depends_on",
													lv_depends_on_25_0,
													"org.xtext.example.dockercompose.DockerCompose.Dependency_long");
												afterParserOrEnumRuleCall();
											}
										)
									)+
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getServiceAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9);
					}
								({true}?=>(otherlv_26='networks:'
								{
									newLeafNode(otherlv_26, grammarAccess.getServiceAccess().getNetworksKeyword_3_9_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getServiceAccess().getNetworksNetworkConnectorParserRuleCall_3_9_1_0());
										}
										lv_networks_27_0=ruleNetworkConnector
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getServiceRule());
											}
											add(
												$current,
												"networks",
												lv_networks_27_0,
												"org.xtext.example.dockercompose.DockerCompose.NetworkConnector");
											afterParserOrEnumRuleCall();
										}
									)
								)+
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getServiceAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10);
					}
								({true}?=>(otherlv_28='volumes:'
								{
									newLeafNode(otherlv_28, grammarAccess.getServiceAccess().getVolumesKeyword_3_10_0());
								}
								(
									(
										otherlv_29='-'
										{
											newLeafNode(otherlv_29, grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_10_1_0_0());
										}
										(
											(
												{
													newCompositeNode(grammarAccess.getServiceAccess().getVolumesVolumeConnector_shortParserRuleCall_3_10_1_0_1_0());
												}
												lv_volumes_30_0=ruleVolumeConnector_short
												{
													if ($current==null) {
														$current = createModelElementForParent(grammarAccess.getServiceRule());
													}
													add(
														$current,
														"volumes",
														lv_volumes_30_0,
														"org.xtext.example.dockercompose.DockerCompose.VolumeConnector_short");
													afterParserOrEnumRuleCall();
												}
											)
										)
									)+
									    |
									(
										otherlv_31='-'
										{
											newLeafNode(otherlv_31, grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_10_1_1_0());
										}
										(
											(
												{
													newCompositeNode(grammarAccess.getServiceAccess().getVolumesVolumeConnector_longParserRuleCall_3_10_1_1_1_0());
												}
												lv_volumes_32_0=ruleVolumeConnector_long
												{
													if ($current==null) {
														$current = createModelElementForParent(grammarAccess.getServiceRule());
													}
													add(
														$current,
														"volumes",
														lv_volumes_32_0,
														"org.xtext.example.dockercompose.DockerCompose.VolumeConnector_long");
													afterParserOrEnumRuleCall();
												}
											)
										)
									)+
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getServiceAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11);
					}
								({true}?=>(otherlv_33='configs:'
								{
									newLeafNode(otherlv_33, grammarAccess.getServiceAccess().getConfigsKeyword_3_11_0());
								}
								(
									(
										otherlv_34='-'
										{
											newLeafNode(otherlv_34, grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_11_1_0_0());
										}
										(
											(
												{
													newCompositeNode(grammarAccess.getServiceAccess().getConfigsConfigConnector_shortParserRuleCall_3_11_1_0_1_0());
												}
												lv_configs_35_0=ruleConfigConnector_short
												{
													if ($current==null) {
														$current = createModelElementForParent(grammarAccess.getServiceRule());
													}
													add(
														$current,
														"configs",
														lv_configs_35_0,
														"org.xtext.example.dockercompose.DockerCompose.ConfigConnector_short");
													afterParserOrEnumRuleCall();
												}
											)
										)
									)+
									    |
									(
										otherlv_36='-'
										{
											newLeafNode(otherlv_36, grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_11_1_1_0());
										}
										(
											(
												{
													newCompositeNode(grammarAccess.getServiceAccess().getConfigsConfigConnector_longParserRuleCall_3_11_1_1_1_0());
												}
												lv_configs_37_0=ruleConfigConnector_long
												{
													if ($current==null) {
														$current = createModelElementForParent(grammarAccess.getServiceRule());
													}
													add(
														$current,
														"configs",
														lv_configs_37_0,
														"org.xtext.example.dockercompose.DockerCompose.ConfigConnector_long");
													afterParserOrEnumRuleCall();
												}
											)
										)
									)+
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getServiceAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12);
					}
								({true}?=>(otherlv_38='secrets:'
								{
									newLeafNode(otherlv_38, grammarAccess.getServiceAccess().getSecretsKeyword_3_12_0());
								}
								(
									(
										otherlv_39='-'
										{
											newLeafNode(otherlv_39, grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_12_1_0_0());
										}
										(
											(
												{
													newCompositeNode(grammarAccess.getServiceAccess().getSecretsSecretConnector_shortParserRuleCall_3_12_1_0_1_0());
												}
												lv_secrets_40_0=ruleSecretConnector_short
												{
													if ($current==null) {
														$current = createModelElementForParent(grammarAccess.getServiceRule());
													}
													add(
														$current,
														"secrets",
														lv_secrets_40_0,
														"org.xtext.example.dockercompose.DockerCompose.SecretConnector_short");
													afterParserOrEnumRuleCall();
												}
											)
										)
									)+
									    |
									(
										otherlv_41='-'
										{
											newLeafNode(otherlv_41, grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_12_1_1_0());
										}
										(
											(
												{
													newCompositeNode(grammarAccess.getServiceAccess().getSecretsSecretConnector_longParserRuleCall_3_12_1_1_1_0());
												}
												lv_secrets_42_0=ruleSecretConnector_long
												{
													if ($current==null) {
														$current = createModelElementForParent(grammarAccess.getServiceRule());
													}
													add(
														$current,
														"secrets",
														lv_secrets_42_0,
														"org.xtext.example.dockercompose.DockerCompose.SecretConnector_long");
													afterParserOrEnumRuleCall();
												}
											)
										)
									)+
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getServiceAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13);
					}
								({true}?=>(otherlv_43='devices:'
								{
									newLeafNode(otherlv_43, grammarAccess.getServiceAccess().getDevicesKeyword_3_13_0());
								}
								(
									otherlv_44='-'
									{
										newLeafNode(otherlv_44, grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_13_1_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getServiceAccess().getDevicesDeviceParserRuleCall_3_13_1_1_0());
											}
											lv_devices_45_0=ruleDevice
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getServiceRule());
												}
												add(
													$current,
													"devices",
													lv_devices_45_0,
													"org.xtext.example.dockercompose.DockerCompose.Device");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)+
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getServiceAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14);
					}
								({true}?=>(otherlv_46='dns:'
								{
									newLeafNode(otherlv_46, grammarAccess.getServiceAccess().getDnsKeyword_3_14_0());
								}
								(
									(
										otherlv_47='-'
										{
											newLeafNode(otherlv_47, grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_14_1_0_0());
										}
										(
											(
												{
													newCompositeNode(grammarAccess.getServiceAccess().getDnsDNSParserRuleCall_3_14_1_0_1_0());
												}
												lv_dns_48_0=ruleDNS
												{
													if ($current==null) {
														$current = createModelElementForParent(grammarAccess.getServiceRule());
													}
													add(
														$current,
														"dns",
														lv_dns_48_0,
														"org.xtext.example.dockercompose.DockerCompose.DNS");
													afterParserOrEnumRuleCall();
												}
											)
										)
									)+
									    |
									(
										(
											{
												newCompositeNode(grammarAccess.getServiceAccess().getDnsDNSParserRuleCall_3_14_1_1_0());
											}
											lv_dns_49_0=ruleDNS
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getServiceRule());
												}
												add(
													$current,
													"dns",
													lv_dns_49_0,
													"org.xtext.example.dockercompose.DockerCompose.DNS");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getServiceAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15);
					}
								({true}?=>(otherlv_50='ports:'
								{
									newLeafNode(otherlv_50, grammarAccess.getServiceAccess().getPortsKeyword_3_15_0());
								}
								(
									otherlv_51='-'
									{
										newLeafNode(otherlv_51, grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_15_1_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getServiceAccess().getPortsPortParserRuleCall_3_15_1_1_0());
											}
											lv_ports_52_0=rulePort
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getServiceRule());
												}
												add(
													$current,
													"ports",
													lv_ports_52_0,
													"org.xtext.example.dockercompose.DockerCompose.Port");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)+
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getServiceAccess().getUnorderedGroup_3());
					}
				)
			)
					)+
					{getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3())}?
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getServiceAccess().getUnorderedGroup_3());
				}
		)
	)
;

// Entry rule entryRulePort
entryRulePort returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPortRule()); }
	iv_rulePort=rulePort
	{ $current=$iv_rulePort.current; }
	EOF;

// Rule Port
rulePort returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPortAccess().getPortAction_0(),
					$current);
			}
		)
		(
			(
				lv_value_1_0=RULE_PORT_DEF
				{
					newLeafNode(lv_value_1_0, grammarAccess.getPortAccess().getValuePORT_DEFTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPortRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.xtext.example.dockercompose.DockerCompose.PORT_DEF");
				}
			)
		)
	)
;

// Entry rule entryRuleDevice
entryRuleDevice returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeviceRule()); }
	iv_ruleDevice=ruleDevice
	{ $current=$iv_ruleDevice.current; }
	EOF;

// Rule Device
ruleDevice returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDeviceAccess().getDeviceAction_0(),
					$current);
			}
		)
		(
			(
				lv_value_1_0=RULE_DEVICE_DEF
				{
					newLeafNode(lv_value_1_0, grammarAccess.getDeviceAccess().getValueDEVICE_DEFTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeviceRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.xtext.example.dockercompose.DockerCompose.DEVICE_DEF");
				}
			)
		)
	)
;

// Entry rule entryRuleImage
entryRuleImage returns [String current=null]:
	{ newCompositeNode(grammarAccess.getImageRule()); }
	iv_ruleImage=ruleImage
	{ $current=$iv_ruleImage.current.getText(); }
	EOF;

// Rule Image
ruleImage returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getImageAccess().getEStringParserRuleCall_0());
		}
		this_EString_0=ruleEString
		{
			$current.merge(this_EString_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		(
			this_ID_1=RULE_ID
			{
				$current.merge(this_ID_1);
			}
			{
				newLeafNode(this_ID_1, grammarAccess.getImageAccess().getIDTerminalRuleCall_1_0());
			}
			(
				kw=':'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getImageAccess().getColonKeyword_1_1_0());
				}
				this_ID_3=RULE_ID
				{
					$current.merge(this_ID_3);
				}
				{
					newLeafNode(this_ID_3, grammarAccess.getImageAccess().getIDTerminalRuleCall_1_1_1());
				}
			)+
		)
	)
;

// Entry rule entryRuleLink
entryRuleLink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinkRule()); }
	iv_ruleLink=ruleLink
	{ $current=$iv_ruleLink.current; }
	EOF;

// Rule Link
ruleLink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLinkAccess().getLinkAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLinkRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getLinkAccess().getServiceServiceCrossReference_1_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getLinkAccess().getColonKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLinkAccess().getAliasEStringParserRuleCall_2_1_0());
					}
					lv_alias_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkRule());
						}
						set(
							$current,
							"alias",
							lv_alias_3_0,
							"org.xtext.example.dockercompose.DockerCompose.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleDependency_short
entryRuleDependency_short returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDependency_shortRule()); }
	iv_ruleDependency_short=ruleDependency_short
	{ $current=$iv_ruleDependency_short.current; }
	EOF;

// Rule Dependency_short
ruleDependency_short returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDependency_shortAccess().getDependencyAction_0(),
					$current);
			}
		)
		otherlv_1='-'
		{
			newLeafNode(otherlv_1, grammarAccess.getDependency_shortAccess().getHyphenMinusKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDependency_shortRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDependency_shortAccess().getServiceServiceCrossReference_2_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDependency_long
entryRuleDependency_long returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDependency_longRule()); }
	iv_ruleDependency_long=ruleDependency_long
	{ $current=$iv_ruleDependency_long.current; }
	EOF;

// Rule Dependency_long
ruleDependency_long returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDependency_longAccess().getDependencyAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDependency_longRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDependency_longAccess().getServiceServiceCrossReference_1_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getDependency_longAccess().getColonKeyword_2());
		}
		otherlv_3='condition:'
		{
			newLeafNode(otherlv_3, grammarAccess.getDependency_longAccess().getConditionKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDependency_longAccess().getConditionConditionEnumRuleCall_4_0());
				}
				lv_condition_4_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDependency_longRule());
					}
					set(
						$current,
						"condition",
						lv_condition_4_0,
						"org.xtext.example.dockercompose.DockerCompose.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNetworkConnector
entryRuleNetworkConnector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNetworkConnectorRule()); }
	iv_ruleNetworkConnector=ruleNetworkConnector
	{ $current=$iv_ruleNetworkConnector.current; }
	EOF;

// Rule NetworkConnector
ruleNetworkConnector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNetworkConnectorAccess().getNetworkConnectorAction_0(),
					$current);
			}
		)
		(
			(
				otherlv_1='-'
				{
					newLeafNode(otherlv_1, grammarAccess.getNetworkConnectorAccess().getHyphenMinusKeyword_1_0_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getNetworkConnectorRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getNetworkConnectorAccess().getNetworkNetworkCrossReference_1_0_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getNetworkConnectorRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getNetworkConnectorAccess().getNetworkNetworkCrossReference_1_1_0_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_4=':'
				{
					newLeafNode(otherlv_4, grammarAccess.getNetworkConnectorAccess().getColonKeyword_1_1_1());
				}
				(
					(
						{ 
						  getUnorderedGroupHelper().enter(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2());
						}
						(
							(
					(
						{getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 0)}?=>(
							{
								getUnorderedGroupHelper().select(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 0);
							}
										({true}?=>(otherlv_6='ipv4_address:'
										{
											newLeafNode(otherlv_6, grammarAccess.getNetworkConnectorAccess().getIpv4_addressKeyword_1_1_2_0_0());
										}
										(
											(
												{
													newCompositeNode(grammarAccess.getNetworkConnectorAccess().getIpv4_addressDNSParserRuleCall_1_1_2_0_1_0());
												}
												lv_ipv4_address_7_0=ruleDNS
												{
													if ($current==null) {
														$current = createModelElementForParent(grammarAccess.getNetworkConnectorRule());
													}
													set(
														$current,
														"ipv4_address",
														lv_ipv4_address_7_0,
														"org.xtext.example.dockercompose.DockerCompose.DNS");
													afterParserOrEnumRuleCall();
												}
											)
										)
										))
							{ 
								getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2());
							}
						)
					)|
					(
						{getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 1)}?=>(
							{
								getUnorderedGroupHelper().select(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 1);
							}
										({true}?=>(otherlv_8='priority:'
										{
											newLeafNode(otherlv_8, grammarAccess.getNetworkConnectorAccess().getPriorityKeyword_1_1_2_1_0());
										}
										(
											(
												{
													newCompositeNode(grammarAccess.getNetworkConnectorAccess().getPriorityEIntParserRuleCall_1_1_2_1_1_0());
												}
												lv_priority_9_0=ruleEInt
												{
													if ($current==null) {
														$current = createModelElementForParent(grammarAccess.getNetworkConnectorRule());
													}
													set(
														$current,
														"priority",
														lv_priority_9_0,
														"org.xtext.example.dockercompose.DockerCompose.EInt");
													afterParserOrEnumRuleCall();
												}
											)
										)
										))
							{ 
								getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2());
							}
						)
					)|
					(
						{getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 2)}?=>(
							{
								getUnorderedGroupHelper().select(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 2);
							}
										({true}?=>(otherlv_10='aliases:'
										{
											newLeafNode(otherlv_10, grammarAccess.getNetworkConnectorAccess().getAliasesKeyword_1_1_2_2_0());
										}
										(
											otherlv_11='-'
											{
												newLeafNode(otherlv_11, grammarAccess.getNetworkConnectorAccess().getHyphenMinusKeyword_1_1_2_2_1_0());
											}
											(
												(
													{
														newCompositeNode(grammarAccess.getNetworkConnectorAccess().getAliasesAliasParserRuleCall_1_1_2_2_1_1_0());
													}
													lv_aliases_12_0=ruleAlias
													{
														if ($current==null) {
															$current = createModelElementForParent(grammarAccess.getNetworkConnectorRule());
														}
														add(
															$current,
															"aliases",
															lv_aliases_12_0,
															"org.xtext.example.dockercompose.DockerCompose.Alias");
														afterParserOrEnumRuleCall();
													}
												)
											)
										)+
										))
							{ 
								getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2());
							}
						)
					)|
					(
						{getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 3)}?=>(
							{
								getUnorderedGroupHelper().select(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 3);
							}
										({true}?=>(otherlv_13='link_local_ips:'
										{
											newLeafNode(otherlv_13, grammarAccess.getNetworkConnectorAccess().getLink_local_ipsKeyword_1_1_2_3_0());
										}
										(
											otherlv_14='-'
											{
												newLeafNode(otherlv_14, grammarAccess.getNetworkConnectorAccess().getHyphenMinusKeyword_1_1_2_3_1_0());
											}
											(
												(
													{
														newCompositeNode(grammarAccess.getNetworkConnectorAccess().getLink_local_ipsDNSParserRuleCall_1_1_2_3_1_1_0());
													}
													lv_link_local_ips_15_0=ruleDNS
													{
														if ($current==null) {
															$current = createModelElementForParent(grammarAccess.getNetworkConnectorRule());
														}
														add(
															$current,
															"link_local_ips",
															lv_link_local_ips_15_0,
															"org.xtext.example.dockercompose.DockerCompose.DNS");
														afterParserOrEnumRuleCall();
													}
												)
											)
										)+
										))
							{ 
								getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2());
							}
						)
					)
							)*
						)
					)
						{ 
						  getUnorderedGroupHelper().leave(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2());
						}
				)
			)
		)
	)
;

// Entry rule entryRuleAlias
entryRuleAlias returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAliasRule()); }
	iv_ruleAlias=ruleAlias
	{ $current=$iv_ruleAlias.current; }
	EOF;

// Rule Alias
ruleAlias returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAliasAccess().getAliasAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAliasAccess().getAliasEStringParserRuleCall_1_0());
				}
				lv_alias_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAliasRule());
					}
					set(
						$current,
						"alias",
						lv_alias_1_0,
						"org.xtext.example.dockercompose.DockerCompose.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVolumeConnector_long
entryRuleVolumeConnector_long returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVolumeConnector_longRule()); }
	iv_ruleVolumeConnector_long=ruleVolumeConnector_long
	{ $current=$iv_ruleVolumeConnector_long.current; }
	EOF;

// Rule VolumeConnector_long
ruleVolumeConnector_long returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVolumeConnector_longAccess().getVolumeConnectorAction_0(),
					$current);
			}
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 0);
					}
								({true}?=>(otherlv_2='source:'
								{
									newLeafNode(otherlv_2, grammarAccess.getVolumeConnector_longAccess().getSourceKeyword_1_0_0());
								}
								(
									(
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getVolumeConnector_longRule());
											}
										}
										{
											newCompositeNode(grammarAccess.getVolumeConnector_longAccess().getVolumeVolumeCrossReference_1_0_1_0());
										}
										ruleEString
										{
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 1);
					}
								({true}?=>(otherlv_4='type:'
								{
									newLeafNode(otherlv_4, grammarAccess.getVolumeConnector_longAccess().getTypeKeyword_1_1_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getVolumeConnector_longAccess().getTypeMountTypeEnumRuleCall_1_1_1_0());
										}
										lv_type_5_0=ruleMountType
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getVolumeConnector_longRule());
											}
											set(
												$current,
												"type",
												lv_type_5_0,
												"org.xtext.example.dockercompose.DockerCompose.MountType");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 2);
					}
								({true}?=>(otherlv_6='target:'
								{
									newLeafNode(otherlv_6, grammarAccess.getVolumeConnector_longAccess().getTargetKeyword_1_2_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getVolumeConnector_longAccess().getContainer_pathPATHParserRuleCall_1_2_1_0());
										}
										lv_container_path_7_0=rulePATH
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getVolumeConnector_longRule());
											}
											set(
												$current,
												"container_path",
												lv_container_path_7_0,
												"org.xtext.example.dockercompose.DockerCompose.PATH");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3);
					}
								({true}?=>(otherlv_8='read_only:'
								{
									newLeafNode(otherlv_8, grammarAccess.getVolumeConnector_longAccess().getRead_onlyKeyword_1_3_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getVolumeConnector_longAccess().getRead_onlyEBooleanParserRuleCall_1_3_1_0());
										}
										lv_read_only_9_0=ruleEBoolean
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getVolumeConnector_longRule());
											}
											set(
												$current,
												"read_only",
												lv_read_only_9_0,
												"org.xtext.example.dockercompose.DockerCompose.EBoolean");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 4)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 4);
					}
								({true}?=>(otherlv_10='bind:'
								{
									newLeafNode(otherlv_10, grammarAccess.getVolumeConnector_longAccess().getBindKeyword_1_4_0());
								}
								otherlv_11='propagation:'
								{
									newLeafNode(otherlv_11, grammarAccess.getVolumeConnector_longAccess().getPropagationKeyword_1_4_1());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getVolumeConnector_longAccess().getPropagationPropagationTypeEnumRuleCall_1_4_2_0());
										}
										lv_propagation_12_0=rulePropagationType
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getVolumeConnector_longRule());
											}
											set(
												$current,
												"propagation",
												lv_propagation_12_0,
												"org.xtext.example.dockercompose.DockerCompose.PropagationType");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 5)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 5);
					}
								({true}?=>(otherlv_13='volume:'
								{
									newLeafNode(otherlv_13, grammarAccess.getVolumeConnector_longAccess().getVolumeKeyword_1_5_0());
								}
								otherlv_14='nocopy:'
								{
									newLeafNode(otherlv_14, grammarAccess.getVolumeConnector_longAccess().getNocopyKeyword_1_5_1());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getVolumeConnector_longAccess().getNocopyEBooleanParserRuleCall_1_5_2_0());
										}
										lv_nocopy_15_0=ruleEBoolean
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getVolumeConnector_longRule());
											}
											set(
												$current,
												"nocopy",
												lv_nocopy_15_0,
												"org.xtext.example.dockercompose.DockerCompose.EBoolean");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 6)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 6);
					}
								({true}?=>(otherlv_16='tmpfs:'
								{
									newLeafNode(otherlv_16, grammarAccess.getVolumeConnector_longAccess().getTmpfsKeyword_1_6_0());
								}
								otherlv_17='size:'
								{
									newLeafNode(otherlv_17, grammarAccess.getVolumeConnector_longAccess().getSizeKeyword_1_6_1());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getVolumeConnector_longAccess().getSizeEIntParserRuleCall_1_6_2_0());
										}
										lv_size_18_0=ruleEInt
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getVolumeConnector_longRule());
											}
											set(
												$current,
												"size",
												lv_size_18_0,
												"org.xtext.example.dockercompose.DockerCompose.EInt");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1());
					}
				)
			)
					)+
					{getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1())}?
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1());
				}
		)
	)
;

// Entry rule entryRuleVolumeConnector_short
entryRuleVolumeConnector_short returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVolumeConnector_shortRule()); }
	iv_ruleVolumeConnector_short=ruleVolumeConnector_short
	{ $current=$iv_ruleVolumeConnector_short.current; }
	EOF;

// Rule VolumeConnector_short
ruleVolumeConnector_short returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVolumeConnector_shortAccess().getVolumeConnectorAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVolumeConnector_shortRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getVolumeConnector_shortAccess().getVolumeVolumeCrossReference_1_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getVolumeConnector_shortAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVolumeConnector_shortAccess().getContainer_pathPATHParserRuleCall_3_0());
				}
				lv_container_path_3_0=rulePATH
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVolumeConnector_shortRule());
					}
					set(
						$current,
						"container_path",
						lv_container_path_3_0,
						"org.xtext.example.dockercompose.DockerCompose.PATH");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=':'
			{
				newLeafNode(otherlv_4, grammarAccess.getVolumeConnector_shortAccess().getColonKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVolumeConnector_shortAccess().getAccess_modeAccessModeEnumRuleCall_4_1_0());
					}
					lv_access_mode_5_0=ruleAccessMode
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVolumeConnector_shortRule());
						}
						set(
							$current,
							"access_mode",
							lv_access_mode_5_0,
							"org.xtext.example.dockercompose.DockerCompose.AccessMode");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleConfigConnector_long
entryRuleConfigConnector_long returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigConnector_longRule()); }
	iv_ruleConfigConnector_long=ruleConfigConnector_long
	{ $current=$iv_ruleConfigConnector_long.current; }
	EOF;

// Rule ConfigConnector_long
ruleConfigConnector_long returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConfigConnector_longAccess().getConfigConnectorAction_0(),
					$current);
			}
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 0);
					}
								({true}?=>(otherlv_2='source:'
								{
									newLeafNode(otherlv_2, grammarAccess.getConfigConnector_longAccess().getSourceKeyword_1_0_0());
								}
								(
									(
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getConfigConnector_longRule());
											}
										}
										{
											newCompositeNode(grammarAccess.getConfigConnector_longAccess().getConfigConfigCrossReference_1_0_1_0());
										}
										ruleEString
										{
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 1);
					}
								({true}?=>(otherlv_4='target:'
								{
									newLeafNode(otherlv_4, grammarAccess.getConfigConnector_longAccess().getTargetKeyword_1_1_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConfigConnector_longAccess().getTargetPATHParserRuleCall_1_1_1_0());
										}
										lv_target_5_0=rulePATH
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConfigConnector_longRule());
											}
											set(
												$current,
												"target",
												lv_target_5_0,
												"org.xtext.example.dockercompose.DockerCompose.PATH");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 2);
					}
								({true}?=>(otherlv_6='uid:'
								{
									newLeafNode(otherlv_6, grammarAccess.getConfigConnector_longAccess().getUidKeyword_1_2_0());
								}
								(
									(
										lv_uid_7_0=RULE_QUOTED_INT
										{
											newLeafNode(lv_uid_7_0, grammarAccess.getConfigConnector_longAccess().getUidQUOTED_INTTerminalRuleCall_1_2_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getConfigConnector_longRule());
											}
											setWithLastConsumed(
												$current,
												"uid",
												lv_uid_7_0,
												"org.xtext.example.dockercompose.DockerCompose.QUOTED_INT");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 3);
					}
								({true}?=>(otherlv_8='gid:'
								{
									newLeafNode(otherlv_8, grammarAccess.getConfigConnector_longAccess().getGidKeyword_1_3_0());
								}
								(
									(
										lv_gid_9_0=RULE_QUOTED_INT
										{
											newLeafNode(lv_gid_9_0, grammarAccess.getConfigConnector_longAccess().getGidQUOTED_INTTerminalRuleCall_1_3_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getConfigConnector_longRule());
											}
											setWithLastConsumed(
												$current,
												"gid",
												lv_gid_9_0,
												"org.xtext.example.dockercompose.DockerCompose.QUOTED_INT");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 4)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 4);
					}
								({true}?=>(otherlv_10='mode:'
								{
									newLeafNode(otherlv_10, grammarAccess.getConfigConnector_longAccess().getModeKeyword_1_4_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConfigConnector_longAccess().getModeEIntParserRuleCall_1_4_1_0());
										}
										lv_mode_11_0=ruleEInt
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConfigConnector_longRule());
											}
											set(
												$current,
												"mode",
												lv_mode_11_0,
												"org.xtext.example.dockercompose.DockerCompose.EInt");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1());
					}
				)
			)
					)+
					{getUnorderedGroupHelper().canLeave(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1())}?
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1());
				}
		)
	)
;

// Entry rule entryRuleConfigConnector_short
entryRuleConfigConnector_short returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigConnector_shortRule()); }
	iv_ruleConfigConnector_short=ruleConfigConnector_short
	{ $current=$iv_ruleConfigConnector_short.current; }
	EOF;

// Rule ConfigConnector_short
ruleConfigConnector_short returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConfigConnector_shortAccess().getConfigConnectorAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConfigConnector_shortRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getConfigConnector_shortAccess().getConfigConfigCrossReference_1_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSecretConnector_long
entryRuleSecretConnector_long returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSecretConnector_longRule()); }
	iv_ruleSecretConnector_long=ruleSecretConnector_long
	{ $current=$iv_ruleSecretConnector_long.current; }
	EOF;

// Rule SecretConnector_long
ruleSecretConnector_long returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSecretConnector_longAccess().getSecretConnectorAction_0(),
					$current);
			}
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 0);
					}
								({true}?=>(otherlv_2='source:'
								{
									newLeafNode(otherlv_2, grammarAccess.getSecretConnector_longAccess().getSourceKeyword_1_0_0());
								}
								(
									(
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getSecretConnector_longRule());
											}
										}
										{
											newCompositeNode(grammarAccess.getSecretConnector_longAccess().getSecretSecretCrossReference_1_0_1_0());
										}
										ruleEString
										{
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 1);
					}
								({true}?=>(otherlv_4='target:'
								{
									newLeafNode(otherlv_4, grammarAccess.getSecretConnector_longAccess().getTargetKeyword_1_1_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getSecretConnector_longAccess().getTargetPATHParserRuleCall_1_1_1_0());
										}
										lv_target_5_0=rulePATH
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getSecretConnector_longRule());
											}
											set(
												$current,
												"target",
												lv_target_5_0,
												"org.xtext.example.dockercompose.DockerCompose.PATH");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 2);
					}
								({true}?=>(otherlv_6='uid:'
								{
									newLeafNode(otherlv_6, grammarAccess.getSecretConnector_longAccess().getUidKeyword_1_2_0());
								}
								(
									(
										lv_uid_7_0=RULE_QUOTED_INT
										{
											newLeafNode(lv_uid_7_0, grammarAccess.getSecretConnector_longAccess().getUidQUOTED_INTTerminalRuleCall_1_2_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getSecretConnector_longRule());
											}
											setWithLastConsumed(
												$current,
												"uid",
												lv_uid_7_0,
												"org.xtext.example.dockercompose.DockerCompose.QUOTED_INT");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 3);
					}
								({true}?=>(otherlv_8='gid:'
								{
									newLeafNode(otherlv_8, grammarAccess.getSecretConnector_longAccess().getGidKeyword_1_3_0());
								}
								(
									(
										lv_gid_9_0=RULE_QUOTED_INT
										{
											newLeafNode(lv_gid_9_0, grammarAccess.getSecretConnector_longAccess().getGidQUOTED_INTTerminalRuleCall_1_3_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getSecretConnector_longRule());
											}
											setWithLastConsumed(
												$current,
												"gid",
												lv_gid_9_0,
												"org.xtext.example.dockercompose.DockerCompose.QUOTED_INT");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 4)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 4);
					}
								({true}?=>(otherlv_10='mode:'
								{
									newLeafNode(otherlv_10, grammarAccess.getSecretConnector_longAccess().getModeKeyword_1_4_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getSecretConnector_longAccess().getModeEIntParserRuleCall_1_4_1_0());
										}
										lv_mode_11_0=ruleEInt
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getSecretConnector_longRule());
											}
											set(
												$current,
												"mode",
												lv_mode_11_0,
												"org.xtext.example.dockercompose.DockerCompose.EInt");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1());
					}
				)
			)
					)+
					{getUnorderedGroupHelper().canLeave(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1())}?
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1());
				}
		)
	)
;

// Entry rule entryRuleSecretConnector_short
entryRuleSecretConnector_short returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSecretConnector_shortRule()); }
	iv_ruleSecretConnector_short=ruleSecretConnector_short
	{ $current=$iv_ruleSecretConnector_short.current; }
	EOF;

// Rule SecretConnector_short
ruleSecretConnector_short returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSecretConnector_shortAccess().getSecretConnectorAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSecretConnector_shortRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSecretConnector_shortAccess().getSecretSecretCrossReference_1_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNetwork
entryRuleNetwork returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNetworkRule()); }
	iv_ruleNetwork=ruleNetwork
	{ $current=$iv_ruleNetwork.current; }
	EOF;

// Rule Network
ruleNetwork returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNetworkAccess().getNetworkAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNetworkAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNetworkRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.dockercompose.DockerCompose.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getNetworkAccess().getColonKeyword_2());
		}
		(
			(
				otherlv_3='{'
				{
					newLeafNode(otherlv_3, grammarAccess.getNetworkAccess().getLeftCurlyBracketKeyword_3_0_0());
				}
				otherlv_4='}'
				{
					newLeafNode(otherlv_4, grammarAccess.getNetworkAccess().getRightCurlyBracketKeyword_3_0_1());
				}
			)
			    |
			(
				(
					{ 
					  getUnorderedGroupHelper().enter(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1());
					}
					(
						(
				(
					{getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0)}?=>(
						{
							getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0);
						}
									({true}?=>(otherlv_6='driver:'
									{
										newLeafNode(otherlv_6, grammarAccess.getNetworkAccess().getDriverKeyword_3_1_0_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getNetworkAccess().getDriverEStringParserRuleCall_3_1_0_1_0());
											}
											lv_driver_7_0=ruleEString
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getNetworkRule());
												}
												set(
													$current,
													"driver",
													lv_driver_7_0,
													"org.xtext.example.dockercompose.DockerCompose.EString");
												afterParserOrEnumRuleCall();
											}
										)
									)
									))
						{ 
							getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1());
						}
					)
				)|
				(
					{getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1)}?=>(
						{
							getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1);
						}
									({true}?=>(otherlv_8='attachable:'
									{
										newLeafNode(otherlv_8, grammarAccess.getNetworkAccess().getAttachableKeyword_3_1_1_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getNetworkAccess().getAttachableEBooleanParserRuleCall_3_1_1_1_0());
											}
											lv_attachable_9_0=ruleEBoolean
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getNetworkRule());
												}
												set(
													$current,
													"attachable",
													lv_attachable_9_0,
													"org.xtext.example.dockercompose.DockerCompose.EBoolean");
												afterParserOrEnumRuleCall();
											}
										)
									)
									))
						{ 
							getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1());
						}
					)
				)|
				(
					{getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2)}?=>(
						{
							getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2);
						}
									({true}?=>(otherlv_10='enable_ipv6:'
									{
										newLeafNode(otherlv_10, grammarAccess.getNetworkAccess().getEnable_ipv6Keyword_3_1_2_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getNetworkAccess().getEnable_ipv6EBooleanParserRuleCall_3_1_2_1_0());
											}
											lv_enable_ipv6_11_0=ruleEBoolean
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getNetworkRule());
												}
												set(
													$current,
													"enable_ipv6",
													lv_enable_ipv6_11_0,
													"org.xtext.example.dockercompose.DockerCompose.EBoolean");
												afterParserOrEnumRuleCall();
											}
										)
									)
									))
						{ 
							getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1());
						}
					)
				)|
				(
					{getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3)}?=>(
						{
							getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3);
						}
									({true}?=>(otherlv_12='internal:'
									{
										newLeafNode(otherlv_12, grammarAccess.getNetworkAccess().getInternalKeyword_3_1_3_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getNetworkAccess().getInternalEBooleanParserRuleCall_3_1_3_1_0());
											}
											lv_internal_13_0=ruleEBoolean
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getNetworkRule());
												}
												set(
													$current,
													"internal",
													lv_internal_13_0,
													"org.xtext.example.dockercompose.DockerCompose.EBoolean");
												afterParserOrEnumRuleCall();
											}
										)
									)
									))
						{ 
							getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1());
						}
					)
				)|
				(
					{getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4)}?=>(
						{
							getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4);
						}
									({true}?=>(otherlv_14='external:'
									{
										newLeafNode(otherlv_14, grammarAccess.getNetworkAccess().getExternalKeyword_3_1_4_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getNetworkAccess().getExternalEBooleanParserRuleCall_3_1_4_1_0());
											}
											lv_external_15_0=ruleEBoolean
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getNetworkRule());
												}
												set(
													$current,
													"external",
													lv_external_15_0,
													"org.xtext.example.dockercompose.DockerCompose.EBoolean");
												afterParserOrEnumRuleCall();
											}
										)
									)
									))
						{ 
							getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1());
						}
					)
				)|
				(
					{getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5)}?=>(
						{
							getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5);
						}
									({true}?=>(otherlv_16='name:'
									{
										newLeafNode(otherlv_16, grammarAccess.getNetworkAccess().getNameKeyword_3_1_5_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getNetworkAccess().getNetwork_nameEStringParserRuleCall_3_1_5_1_0());
											}
											lv_network_name_17_0=ruleEString
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getNetworkRule());
												}
												set(
													$current,
													"network_name",
													lv_network_name_17_0,
													"org.xtext.example.dockercompose.DockerCompose.EString");
												afterParserOrEnumRuleCall();
											}
										)
									)
									))
						{ 
							getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1());
						}
					)
				)|
				(
					{getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6)}?=>(
						{
							getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6);
						}
									({true}?=>(otherlv_18='labels:'
									{
										newLeafNode(otherlv_18, grammarAccess.getNetworkAccess().getLabelsKeyword_3_1_6_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getNetworkAccess().getLabelsNetworkLabelParserRuleCall_3_1_6_1_0());
											}
											lv_labels_19_0=ruleNetworkLabel
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getNetworkRule());
												}
												add(
													$current,
													"labels",
													lv_labels_19_0,
													"org.xtext.example.dockercompose.DockerCompose.NetworkLabel");
												afterParserOrEnumRuleCall();
											}
										)
									)+
									))
						{ 
							getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1());
						}
					)
				)|
				(
					{getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7)}?=>(
						{
							getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7);
						}
									({true}?=>(otherlv_20='driver_opts:'
									{
										newLeafNode(otherlv_20, grammarAccess.getNetworkAccess().getDriver_optsKeyword_3_1_7_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getNetworkAccess().getDriver_optsNetworkDriverOptParserRuleCall_3_1_7_1_0());
											}
											lv_driver_opts_21_0=ruleNetworkDriverOpt
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getNetworkRule());
												}
												add(
													$current,
													"driver_opts",
													lv_driver_opts_21_0,
													"org.xtext.example.dockercompose.DockerCompose.NetworkDriverOpt");
												afterParserOrEnumRuleCall();
											}
										)
									)+
									))
						{ 
							getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1());
						}
					)
				)|
				(
					{getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8)}?=>(
						{
							getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8);
						}
									({true}?=>(otherlv_22='ipam:'
									{
										newLeafNode(otherlv_22, grammarAccess.getNetworkAccess().getIpamKeyword_3_1_8_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getNetworkAccess().getIpamIPAMParserRuleCall_3_1_8_1_0());
											}
											lv_ipam_23_0=ruleIPAM
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getNetworkRule());
												}
												set(
													$current,
													"ipam",
													lv_ipam_23_0,
													"org.xtext.example.dockercompose.DockerCompose.IPAM");
												afterParserOrEnumRuleCall();
											}
										)
									)
									))
						{ 
							getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1());
						}
					)
				)
						)*
					)
				)
					{ 
					  getUnorderedGroupHelper().leave(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1());
					}
			)
		)
	)
;

// Entry rule entryRuleVolume
entryRuleVolume returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVolumeRule()); }
	iv_ruleVolume=ruleVolume
	{ $current=$iv_ruleVolume.current; }
	EOF;

// Rule Volume
ruleVolume returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVolumeAccess().getVolumeAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVolumeAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVolumeRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.dockercompose.DockerCompose.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getVolumeAccess().getColonKeyword_2());
		}
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getVolumeAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>(otherlv_4='external:'
								{
									newLeafNode(otherlv_4, grammarAccess.getVolumeAccess().getExternalKeyword_3_0_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getVolumeAccess().getExternalEBooleanParserRuleCall_3_0_1_0());
										}
										lv_external_5_0=ruleEBoolean
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getVolumeRule());
											}
											set(
												$current,
												"external",
												lv_external_5_0 != null,
												"org.xtext.example.dockercompose.DockerCompose.EBoolean");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVolumeAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>(otherlv_6='driver:'
								{
									newLeafNode(otherlv_6, grammarAccess.getVolumeAccess().getDriverKeyword_3_1_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getVolumeAccess().getDriverEStringParserRuleCall_3_1_1_0());
										}
										lv_driver_7_0=ruleEString
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getVolumeRule());
											}
											set(
												$current,
												"driver",
												lv_driver_7_0,
												"org.xtext.example.dockercompose.DockerCompose.EString");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVolumeAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2);
					}
								({true}?=>(otherlv_8='name:'
								{
									newLeafNode(otherlv_8, grammarAccess.getVolumeAccess().getNameKeyword_3_2_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getVolumeAccess().getVolume_nameEStringParserRuleCall_3_2_1_0());
										}
										lv_volume_name_9_0=ruleEString
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getVolumeRule());
											}
											set(
												$current,
												"volume_name",
												lv_volume_name_9_0,
												"org.xtext.example.dockercompose.DockerCompose.EString");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVolumeAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3);
					}
								({true}?=>(otherlv_10='labels:'
								{
									newLeafNode(otherlv_10, grammarAccess.getVolumeAccess().getLabelsKeyword_3_3_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getVolumeAccess().getLabelsVolumeLabelParserRuleCall_3_3_1_0());
										}
										lv_labels_11_0=ruleVolumeLabel
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getVolumeRule());
											}
											add(
												$current,
												"labels",
												lv_labels_11_0,
												"org.xtext.example.dockercompose.DockerCompose.VolumeLabel");
											afterParserOrEnumRuleCall();
										}
									)
								)+
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVolumeAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4);
					}
								({true}?=>(otherlv_12='driver_opts:'
								{
									newLeafNode(otherlv_12, grammarAccess.getVolumeAccess().getDriver_optsKeyword_3_4_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getVolumeAccess().getDriver_optsVolumeDriverOptParserRuleCall_3_4_1_0());
										}
										lv_driver_opts_13_0=ruleVolumeDriverOpt
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getVolumeRule());
											}
											add(
												$current,
												"driver_opts",
												lv_driver_opts_13_0,
												"org.xtext.example.dockercompose.DockerCompose.VolumeDriverOpt");
											afterParserOrEnumRuleCall();
										}
									)
								)+
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVolumeAccess().getUnorderedGroup_3());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getVolumeAccess().getUnorderedGroup_3());
				}
		)
	)
;

// Entry rule entryRuleConfig
entryRuleConfig returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigRule()); }
	iv_ruleConfig=ruleConfig
	{ $current=$iv_ruleConfig.current; }
	EOF;

// Rule Config
ruleConfig returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConfigAccess().getConfigAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.dockercompose.DockerCompose.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getConfigAccess().getColonKeyword_2());
		}
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getConfigAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>(otherlv_4='external:'
								{
									newLeafNode(otherlv_4, grammarAccess.getConfigAccess().getExternalKeyword_3_0_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConfigAccess().getExternalEBooleanParserRuleCall_3_0_1_0());
										}
										lv_external_5_0=ruleEBoolean
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConfigRule());
											}
											set(
												$current,
												"external",
												lv_external_5_0,
												"org.xtext.example.dockercompose.DockerCompose.EBoolean");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConfigAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>(otherlv_6='file:'
								{
									newLeafNode(otherlv_6, grammarAccess.getConfigAccess().getFileKeyword_3_1_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConfigAccess().getFileEStringParserRuleCall_3_1_1_0());
										}
										lv_file_7_0=ruleEString
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConfigRule());
											}
											set(
												$current,
												"file",
												lv_file_7_0,
												"org.xtext.example.dockercompose.DockerCompose.EString");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConfigAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2);
					}
								({true}?=>(otherlv_8='name:'
								{
									newLeafNode(otherlv_8, grammarAccess.getConfigAccess().getNameKeyword_3_2_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getConfigAccess().getConfig_nameEStringParserRuleCall_3_2_1_0());
										}
										lv_config_name_9_0=ruleEString
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getConfigRule());
											}
											set(
												$current,
												"config_name",
												lv_config_name_9_0,
												"org.xtext.example.dockercompose.DockerCompose.EString");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConfigAccess().getUnorderedGroup_3());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getConfigAccess().getUnorderedGroup_3());
				}
		)
	)
;

// Entry rule entryRuleSecret
entryRuleSecret returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSecretRule()); }
	iv_ruleSecret=ruleSecret
	{ $current=$iv_ruleSecret.current; }
	EOF;

// Rule Secret
ruleSecret returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSecretAccess().getSecretAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSecretAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSecretRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.dockercompose.DockerCompose.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getSecretAccess().getColonKeyword_2());
		}
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getSecretAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>(otherlv_4='external:'
								{
									newLeafNode(otherlv_4, grammarAccess.getSecretAccess().getExternalKeyword_3_0_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getSecretAccess().getExternalEBooleanParserRuleCall_3_0_1_0());
										}
										lv_external_5_0=ruleEBoolean
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getSecretRule());
											}
											set(
												$current,
												"external",
												lv_external_5_0,
												"org.xtext.example.dockercompose.DockerCompose.EBoolean");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSecretAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>(otherlv_6='file:'
								{
									newLeafNode(otherlv_6, grammarAccess.getSecretAccess().getFileKeyword_3_1_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getSecretAccess().getFileEStringParserRuleCall_3_1_1_0());
										}
										lv_file_7_0=ruleEString
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getSecretRule());
											}
											set(
												$current,
												"file",
												lv_file_7_0,
												"org.xtext.example.dockercompose.DockerCompose.EString");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSecretAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2);
					}
								({true}?=>(otherlv_8='environment:'
								{
									newLeafNode(otherlv_8, grammarAccess.getSecretAccess().getEnvironmentKeyword_3_2_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getSecretAccess().getEnvironmentEStringParserRuleCall_3_2_1_0());
										}
										lv_environment_9_0=ruleEString
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getSecretRule());
											}
											set(
												$current,
												"environment",
												lv_environment_9_0,
												"org.xtext.example.dockercompose.DockerCompose.EString");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSecretAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3);
					}
								({true}?=>(otherlv_10='name:'
								{
									newLeafNode(otherlv_10, grammarAccess.getSecretAccess().getNameKeyword_3_3_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getSecretAccess().getSecret_nameEStringParserRuleCall_3_3_1_0());
										}
										lv_secret_name_11_0=ruleEString
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getSecretRule());
											}
											set(
												$current,
												"secret_name",
												lv_secret_name_11_0,
												"org.xtext.example.dockercompose.DockerCompose.EString");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSecretAccess().getUnorderedGroup_3());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getSecretAccess().getUnorderedGroup_3());
				}
		)
	)
;

// Entry rule entryRuleVolumeLabel
entryRuleVolumeLabel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVolumeLabelRule()); }
	iv_ruleVolumeLabel=ruleVolumeLabel
	{ $current=$iv_ruleVolumeLabel.current; }
	EOF;

// Rule VolumeLabel
ruleVolumeLabel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVolumeLabelAccess().getVolumeLabelAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVolumeLabelAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVolumeLabelRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.dockercompose.DockerCompose.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getVolumeLabelAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVolumeLabelAccess().getValueEStringParserRuleCall_3_0());
				}
				lv_value_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVolumeLabelRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"org.xtext.example.dockercompose.DockerCompose.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVolumeDriverOpt
entryRuleVolumeDriverOpt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVolumeDriverOptRule()); }
	iv_ruleVolumeDriverOpt=ruleVolumeDriverOpt
	{ $current=$iv_ruleVolumeDriverOpt.current; }
	EOF;

// Rule VolumeDriverOpt
ruleVolumeDriverOpt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVolumeDriverOptAccess().getVolumeDriverOptAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVolumeDriverOptAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVolumeDriverOptRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.dockercompose.DockerCompose.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getVolumeDriverOptAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVolumeDriverOptAccess().getValueEStringParserRuleCall_3_0());
				}
				lv_value_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVolumeDriverOptRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"org.xtext.example.dockercompose.DockerCompose.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNetworkLabel
entryRuleNetworkLabel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNetworkLabelRule()); }
	iv_ruleNetworkLabel=ruleNetworkLabel
	{ $current=$iv_ruleNetworkLabel.current; }
	EOF;

// Rule NetworkLabel
ruleNetworkLabel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNetworkLabelAccess().getNetworkLabelAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNetworkLabelAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNetworkLabelRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.dockercompose.DockerCompose.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getNetworkLabelAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNetworkLabelAccess().getValueEStringParserRuleCall_3_0());
				}
				lv_value_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNetworkLabelRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"org.xtext.example.dockercompose.DockerCompose.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNetworkDriverOpt
entryRuleNetworkDriverOpt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNetworkDriverOptRule()); }
	iv_ruleNetworkDriverOpt=ruleNetworkDriverOpt
	{ $current=$iv_ruleNetworkDriverOpt.current; }
	EOF;

// Rule NetworkDriverOpt
ruleNetworkDriverOpt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNetworkDriverOptAccess().getNetworkDriverOptAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNetworkDriverOptAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNetworkDriverOptRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.dockercompose.DockerCompose.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getNetworkDriverOptAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNetworkDriverOptAccess().getValueEStringParserRuleCall_3_0());
				}
				lv_value_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNetworkDriverOptRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"org.xtext.example.dockercompose.DockerCompose.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIPAM
entryRuleIPAM returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIPAMRule()); }
	iv_ruleIPAM=ruleIPAM
	{ $current=$iv_ruleIPAM.current; }
	EOF;

// Rule IPAM
ruleIPAM returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIPAMAccess().getIPAMAction_0(),
					$current);
			}
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getIPAMAccess().getUnorderedGroup_1());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0);
					}
								({true}?=>(otherlv_2='driver:'
								{
									newLeafNode(otherlv_2, grammarAccess.getIPAMAccess().getDriverKeyword_1_0_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getIPAMAccess().getDriverEStringParserRuleCall_1_0_1_0());
										}
										lv_driver_3_0=ruleEString
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getIPAMRule());
											}
											set(
												$current,
												"driver",
												lv_driver_3_0,
												"org.xtext.example.dockercompose.DockerCompose.EString");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIPAMAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1);
					}
								({true}?=>(otherlv_4='config:'
								{
									newLeafNode(otherlv_4, grammarAccess.getIPAMAccess().getConfigKeyword_1_1_0());
								}
								(
									otherlv_5='-'
									{
										newLeafNode(otherlv_5, grammarAccess.getIPAMAccess().getHyphenMinusKeyword_1_1_1_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getIPAMAccess().getConfigsIPAMConfigParserRuleCall_1_1_1_1_0());
											}
											lv_configs_6_0=ruleIPAMConfig
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getIPAMRule());
												}
												add(
													$current,
													"configs",
													lv_configs_6_0,
													"org.xtext.example.dockercompose.DockerCompose.IPAMConfig");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)+
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIPAMAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2);
					}
								({true}?=>(otherlv_7='options:'
								{
									newLeafNode(otherlv_7, grammarAccess.getIPAMAccess().getOptionsKeyword_1_2_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getIPAMAccess().getOptionsIPAMOptionParserRuleCall_1_2_1_0());
										}
										lv_options_8_0=ruleIPAMOption
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getIPAMRule());
											}
											add(
												$current,
												"options",
												lv_options_8_0,
												"org.xtext.example.dockercompose.DockerCompose.IPAMOption");
											afterParserOrEnumRuleCall();
										}
									)
								)+
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIPAMAccess().getUnorderedGroup_1());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getIPAMAccess().getUnorderedGroup_1());
				}
		)
	)
;

// Entry rule entryRuleIPAMConfig
entryRuleIPAMConfig returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIPAMConfigRule()); }
	iv_ruleIPAMConfig=ruleIPAMConfig
	{ $current=$iv_ruleIPAMConfig.current; }
	EOF;

// Rule IPAMConfig
ruleIPAMConfig returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIPAMConfigAccess().getIPAMConfigAction_0(),
					$current);
			}
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0);
					}
								({true}?=>(otherlv_2='subnet:'
								{
									newLeafNode(otherlv_2, grammarAccess.getIPAMConfigAccess().getSubnetKeyword_1_0_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getIPAMConfigAccess().getSubnetNetworkAddressParserRuleCall_1_0_1_0());
										}
										lv_subnet_3_0=ruleNetworkAddress
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getIPAMConfigRule());
											}
											set(
												$current,
												"subnet",
												lv_subnet_3_0,
												"org.xtext.example.dockercompose.DockerCompose.NetworkAddress");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1);
					}
								({true}?=>(otherlv_4='ip_range:'
								{
									newLeafNode(otherlv_4, grammarAccess.getIPAMConfigAccess().getIp_rangeKeyword_1_1_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getIPAMConfigAccess().getIp_rangeNetworkAddressParserRuleCall_1_1_1_0());
										}
										lv_ip_range_5_0=ruleNetworkAddress
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getIPAMConfigRule());
											}
											set(
												$current,
												"ip_range",
												lv_ip_range_5_0,
												"org.xtext.example.dockercompose.DockerCompose.NetworkAddress");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2);
					}
								({true}?=>(otherlv_6='gateway:'
								{
									newLeafNode(otherlv_6, grammarAccess.getIPAMConfigAccess().getGatewayKeyword_1_2_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getIPAMConfigAccess().getGatewayDNSParserRuleCall_1_2_1_0());
										}
										lv_gateway_7_0=ruleDNS
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getIPAMConfigRule());
											}
											set(
												$current,
												"gateway",
												lv_gateway_7_0,
												"org.xtext.example.dockercompose.DockerCompose.DNS");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3);
					}
								({true}?=>(otherlv_8='aux_addresses:'
								{
									newLeafNode(otherlv_8, grammarAccess.getIPAMConfigAccess().getAux_addressesKeyword_1_3_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getIPAMConfigAccess().getAux_addressesIPAMAddressParserRuleCall_1_3_1_0());
										}
										lv_aux_addresses_9_0=ruleIPAMAddress
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getIPAMConfigRule());
											}
											add(
												$current,
												"aux_addresses",
												lv_aux_addresses_9_0,
												"org.xtext.example.dockercompose.DockerCompose.IPAMAddress");
											afterParserOrEnumRuleCall();
										}
									)
								)+
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1());
				}
		)
	)
;

// Entry rule entryRuleIPAMOption
entryRuleIPAMOption returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIPAMOptionRule()); }
	iv_ruleIPAMOption=ruleIPAMOption
	{ $current=$iv_ruleIPAMOption.current; }
	EOF;

// Rule IPAMOption
ruleIPAMOption returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIPAMOptionAccess().getIPAMOptionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIPAMOptionAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIPAMOptionRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.dockercompose.DockerCompose.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getIPAMOptionAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIPAMOptionAccess().getValueEStringParserRuleCall_3_0());
				}
				lv_value_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIPAMOptionRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"org.xtext.example.dockercompose.DockerCompose.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIPAMAddress
entryRuleIPAMAddress returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIPAMAddressRule()); }
	iv_ruleIPAMAddress=ruleIPAMAddress
	{ $current=$iv_ruleIPAMAddress.current; }
	EOF;

// Rule IPAMAddress
ruleIPAMAddress returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIPAMAddressAccess().getIPAMAddressAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIPAMAddressAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIPAMAddressRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.dockercompose.DockerCompose.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getIPAMAddressAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIPAMAddressAccess().getDnsDNSParserRuleCall_3_0());
				}
				lv_dns_3_0=ruleDNS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIPAMAddressRule());
					}
					set(
						$current,
						"dns",
						lv_dns_3_0,
						"org.xtext.example.dockercompose.DockerCompose.DNS");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePATH
entryRulePATH returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPATHRule()); }
	iv_rulePATH=rulePATH
	{ $current=$iv_rulePATH.current.getText(); }
	EOF;

// Rule PATH
rulePATH returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPATHAccess().getFullStopKeyword_0());
			}
		)?
		(
			kw='/'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPATHAccess().getSolidusKeyword_1());
			}
		)?
		(
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getPATHAccess().getIDTerminalRuleCall_2());
			}
		)*
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_INT_0=RULE_INT
	{
		$current.merge(this_INT_0);
	}
	{
		newLeafNode(this_INT_0, grammarAccess.getEIntAccess().getINTTerminalRuleCall());
	}
;

// Entry rule entryRuleDNS
entryRuleDNS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDNSRule()); }
	iv_ruleDNS=ruleDNS
	{ $current=$iv_ruleDNS.current; }
	EOF;

// Rule DNS
ruleDNS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDNSAccess().getDns1EIntParserRuleCall_0_0());
				}
				lv_dns1_0_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDNSRule());
					}
					set(
						$current,
						"dns1",
						lv_dns1_0_0,
						"org.xtext.example.dockercompose.DockerCompose.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getDNSAccess().getFullStopKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDNSAccess().getDns2EIntParserRuleCall_2_0());
				}
				lv_dns2_2_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDNSRule());
					}
					set(
						$current,
						"dns2",
						lv_dns2_2_0,
						"org.xtext.example.dockercompose.DockerCompose.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='.'
		{
			newLeafNode(otherlv_3, grammarAccess.getDNSAccess().getFullStopKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDNSAccess().getDns3EIntParserRuleCall_4_0());
				}
				lv_dns3_4_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDNSRule());
					}
					set(
						$current,
						"dns3",
						lv_dns3_4_0,
						"org.xtext.example.dockercompose.DockerCompose.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='.'
		{
			newLeafNode(otherlv_5, grammarAccess.getDNSAccess().getFullStopKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDNSAccess().getDns4EIntParserRuleCall_6_0());
				}
				lv_dns4_6_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDNSRule());
					}
					set(
						$current,
						"dns4",
						lv_dns4_6_0,
						"org.xtext.example.dockercompose.DockerCompose.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNetworkAddress
entryRuleNetworkAddress returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNetworkAddressRule()); }
	iv_ruleNetworkAddress=ruleNetworkAddress
	{ $current=$iv_ruleNetworkAddress.current; }
	EOF;

// Rule NetworkAddress
ruleNetworkAddress returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getNetworkAddressAccess().getDns1EIntParserRuleCall_0_0());
				}
				lv_dns1_0_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNetworkAddressRule());
					}
					set(
						$current,
						"dns1",
						lv_dns1_0_0,
						"org.xtext.example.dockercompose.DockerCompose.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getNetworkAddressAccess().getFullStopKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNetworkAddressAccess().getDns2EIntParserRuleCall_2_0());
				}
				lv_dns2_2_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNetworkAddressRule());
					}
					set(
						$current,
						"dns2",
						lv_dns2_2_0,
						"org.xtext.example.dockercompose.DockerCompose.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='.'
		{
			newLeafNode(otherlv_3, grammarAccess.getNetworkAddressAccess().getFullStopKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNetworkAddressAccess().getDns3EIntParserRuleCall_4_0());
				}
				lv_dns3_4_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNetworkAddressRule());
					}
					set(
						$current,
						"dns3",
						lv_dns3_4_0,
						"org.xtext.example.dockercompose.DockerCompose.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='.'
		{
			newLeafNode(otherlv_5, grammarAccess.getNetworkAddressAccess().getFullStopKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNetworkAddressAccess().getDns4EIntParserRuleCall_6_0());
				}
				lv_dns4_6_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNetworkAddressRule());
					}
					set(
						$current,
						"dns4",
						lv_dns4_6_0,
						"org.xtext.example.dockercompose.DockerCompose.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='/'
		{
			newLeafNode(otherlv_7, grammarAccess.getNetworkAddressAccess().getSolidusKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNetworkAddressAccess().getNetIdEIntParserRuleCall_8_0());
				}
				lv_netId_8_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNetworkAddressRule());
					}
					set(
						$current,
						"netId",
						lv_netId_8_0,
						"org.xtext.example.dockercompose.DockerCompose.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEBoolean
entryRuleEBoolean returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEBooleanRule()); }
	iv_ruleEBoolean=ruleEBoolean
	{ $current=$iv_ruleEBoolean.current.getText(); }
	EOF;

// Rule EBoolean
ruleEBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEBooleanAccess().getTrueKeyword_0());
		}
		    |
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEBooleanAccess().getFalseKeyword_1());
		}
	)
;

// Rule RestartPolicy
ruleRestartPolicy returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='"no"'
			{
				$current = grammarAccess.getRestartPolicyAccess().getNoEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getRestartPolicyAccess().getNoEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='always'
			{
				$current = grammarAccess.getRestartPolicyAccess().getAlwaysEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getRestartPolicyAccess().getAlwaysEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='on-failure'
			{
				$current = grammarAccess.getRestartPolicyAccess().getOnfailureEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getRestartPolicyAccess().getOnfailureEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='unless-stopped'
			{
				$current = grammarAccess.getRestartPolicyAccess().getUnlessstoppedEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getRestartPolicyAccess().getUnlessstoppedEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule AccessMode
ruleAccessMode returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='rw'
			{
				$current = grammarAccess.getAccessModeAccess().getRwEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getAccessModeAccess().getRwEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='ro'
			{
				$current = grammarAccess.getAccessModeAccess().getRoEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getAccessModeAccess().getRoEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='z'
			{
				$current = grammarAccess.getAccessModeAccess().getZEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getAccessModeAccess().getZEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule MountType
ruleMountType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='volume'
			{
				$current = grammarAccess.getMountTypeAccess().getVolumeEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getMountTypeAccess().getVolumeEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='bind'
			{
				$current = grammarAccess.getMountTypeAccess().getBindEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getMountTypeAccess().getBindEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='tmpfs'
			{
				$current = grammarAccess.getMountTypeAccess().getTmpfsEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getMountTypeAccess().getTmpfsEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='npipe'
			{
				$current = grammarAccess.getMountTypeAccess().getNpipeEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getMountTypeAccess().getNpipeEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule PropagationType
rulePropagationType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='rprivate'
			{
				$current = grammarAccess.getPropagationTypeAccess().getRprivateEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getPropagationTypeAccess().getRprivateEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='private'
			{
				$current = grammarAccess.getPropagationTypeAccess().getPrivateEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getPropagationTypeAccess().getPrivateEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='rshared'
			{
				$current = grammarAccess.getPropagationTypeAccess().getRsharedEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getPropagationTypeAccess().getRsharedEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='shared'
			{
				$current = grammarAccess.getPropagationTypeAccess().getSharedEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getPropagationTypeAccess().getSharedEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='rslave'
			{
				$current = grammarAccess.getPropagationTypeAccess().getRslaveEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getPropagationTypeAccess().getRslaveEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='slave'
			{
				$current = grammarAccess.getPropagationTypeAccess().getSlaveEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getPropagationTypeAccess().getSlaveEnumLiteralDeclaration_5());
			}
		)
	)
;

// Rule Condition
ruleCondition returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='service_started'
			{
				$current = grammarAccess.getConditionAccess().getService_startedEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getConditionAccess().getService_startedEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='service_healthy'
			{
				$current = grammarAccess.getConditionAccess().getService_healthyEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getConditionAccess().getService_healthyEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='service_completed_successfully'
			{
				$current = grammarAccess.getConditionAccess().getService_completed_successfullyEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getConditionAccess().getService_completed_successfullyEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_VERSION : '"' RULE_INT '.' RULE_INT '"';

RULE_QUOTED_INT : '"' '"';

RULE_PORT_DEF : '"' (((('0'..'9'|'0'..'9' '0'..'9'|'1' '0'..'9' '0'..'9'|'2' '0'..'5' '0'..'5') '.' ('0'..'9'|'0'..'9' '0'..'9'|'1' '0'..'9' '0'..'9'|'2' '0'..'5' '0'..'5') '.' ('0'..'9'|'0'..'9' '0'..'9'|'1' '0'..'9' '0'..'9'|'2' '0'..'5' '0'..'5') '.' ('0'..'9'|'0'..'9' '0'..'9'|'1' '0'..'9' '0'..'9'|'2' '0'..'5' '0'..'5') ':')? RULE_INT '-' RULE_INT ':')? RULE_INT '-' RULE_INT ('/' RULE_ID)?|((('0'..'9'|'0'..'9' '0'..'9'|'1' '0'..'9' '0'..'9'|'2' '0'..'5' '0'..'5') '.' ('0'..'9'|'0'..'9' '0'..'9'|'1' '0'..'9' '0'..'9'|'2' '0'..'5' '0'..'5') '.' ('0'..'9'|'0'..'9' '0'..'9'|'1' '0'..'9' '0'..'9'|'2' '0'..'5' '0'..'5') '.' ('0'..'9'|'0'..'9' '0'..'9'|'1' '0'..'9' '0'..'9'|'2' '0'..'5' '0'..'5') ':')? RULE_INT ':')? RULE_INT ('/' RULE_ID)?) '"';

RULE_DEVICE_DEF : '"' '.'? '/'? RULE_ID ':' '.'? '/'? RULE_ID (':' RULE_ID)? '"';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'-'|'/'|'.'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
