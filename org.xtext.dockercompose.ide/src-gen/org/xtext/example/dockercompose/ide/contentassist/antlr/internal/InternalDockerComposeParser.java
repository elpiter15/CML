package org.xtext.example.dockercompose.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.dockercompose.services.DockerComposeGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings("all")
public class InternalDockerComposeParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_INT", "RULE_STRING", "RULE_ID", "RULE_VERSION", "RULE_DEVICE", "RULE_PORT", "RULE_QUOTED_INT", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'true'", "'false'", "'\"no\"'", "'always'", "'on-failure'", "'unless-stopped'", "'rw'", "'ro'", "'z'", "'volume'", "'bind'", "'tmpfs'", "'npipe'", "'rprivate'", "'private'", "'rshared'", "'shared'", "'rslave'", "'slave'", "'version:'", "'services:'", "'networks:'", "'volumes:'", "'configs:'", "'secrets:'", "':'", "'build:'", "'image:'", "'cpu_count:'", "'command:'", "'container_name:'", "'restart:'", "'init:'", "'read_only:'", "'depends_on:'", "'-'", "'devices:'", "'dns:'", "'ports:'", "'ipv4_address:'", "'priority:'", "'aliases:'", "'link_local_ips:'", "'source:'", "'type:'", "'target:'", "'bind:'", "'propagation:'", "'volume:'", "'nocopy:'", "'tmpfs:'", "'size:'", "'uid:'", "'gid:'", "'mode:'", "'{'", "'}'", "'driver:'", "'attachable:'", "'enable_ipv6:'", "'internal:'", "'external:'", "'name:'", "'labels:'", "'driver_opts:'", "'ipam:'", "'file:'", "'environment:'", "'config:'", "'options:'", "'subnet:'", "'ip_range:'", "'gateway:'", "'aux_addresses:'", "'.'", "'/'"
    };
    public static final int T__50=50;
    public static final int T__90=90;
    public static final int T__19=19;
    public static final int RULE_VERSION=7;
    public static final int T__15=15;
    public static final int T__59=59;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_QUOTED_INT=10;
    public static final int RULE_ID=6;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int RULE_INT=4;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=11;
    public static final int T__23=23;
    public static final int T__67=67;
    public static final int T__24=24;
    public static final int T__68=68;
    public static final int T__25=25;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__20=20;
    public static final int T__64=64;
    public static final int T__21=21;
    public static final int T__65=65;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_PORT=9;
    public static final int RULE_STRING=5;
    public static final int RULE_SL_COMMENT=12;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__77=77;
    public static final int T__34=34;
    public static final int T__78=78;
    public static final int T__35=35;
    public static final int T__79=79;
    public static final int T__36=36;
    public static final int T__73=73;
    public static final int EOF=-1;
    public static final int T__30=30;
    public static final int T__74=74;
    public static final int T__31=31;
    public static final int T__75=75;
    public static final int T__32=32;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int RULE_WS=13;
    public static final int RULE_DEVICE=8;
    public static final int RULE_ANY_OTHER=14;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__88=88;
    public static final int T__45=45;
    public static final int T__89=89;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__84=84;
    public static final int T__41=41;
    public static final int T__85=85;
    public static final int T__42=42;
    public static final int T__86=86;
    public static final int T__43=43;
    public static final int T__87=87;

    // delegates
    // delegators


        public InternalDockerComposeParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalDockerComposeParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalDockerComposeParser.tokenNames; }
    public String getGrammarFileName() { return "InternalDockerCompose.g"; }


    	private DockerComposeGrammarAccess grammarAccess;

    	public void setGrammarAccess(DockerComposeGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		return tokenName;
    	}



    // $ANTLR start "entryRuleDockerCompose"
    // InternalDockerCompose.g:53:1: entryRuleDockerCompose : ruleDockerCompose EOF ;
    public final void entryRuleDockerCompose() throws RecognitionException {
        try {
            // InternalDockerCompose.g:54:1: ( ruleDockerCompose EOF )
            // InternalDockerCompose.g:55:1: ruleDockerCompose EOF
            {
             before(grammarAccess.getDockerComposeRule()); 
            pushFollow(FOLLOW_1);
            ruleDockerCompose();

            state._fsp--;

             after(grammarAccess.getDockerComposeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDockerCompose"


    // $ANTLR start "ruleDockerCompose"
    // InternalDockerCompose.g:62:1: ruleDockerCompose : ( ( rule__DockerCompose__UnorderedGroup ) ) ;
    public final void ruleDockerCompose() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:66:2: ( ( ( rule__DockerCompose__UnorderedGroup ) ) )
            // InternalDockerCompose.g:67:2: ( ( rule__DockerCompose__UnorderedGroup ) )
            {
            // InternalDockerCompose.g:67:2: ( ( rule__DockerCompose__UnorderedGroup ) )
            // InternalDockerCompose.g:68:3: ( rule__DockerCompose__UnorderedGroup )
            {
             before(grammarAccess.getDockerComposeAccess().getUnorderedGroup()); 
            // InternalDockerCompose.g:69:3: ( rule__DockerCompose__UnorderedGroup )
            // InternalDockerCompose.g:69:4: rule__DockerCompose__UnorderedGroup
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__UnorderedGroup();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getUnorderedGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDockerCompose"


    // $ANTLR start "entryRuleService"
    // InternalDockerCompose.g:78:1: entryRuleService : ruleService EOF ;
    public final void entryRuleService() throws RecognitionException {
        try {
            // InternalDockerCompose.g:79:1: ( ruleService EOF )
            // InternalDockerCompose.g:80:1: ruleService EOF
            {
             before(grammarAccess.getServiceRule()); 
            pushFollow(FOLLOW_1);
            ruleService();

            state._fsp--;

             after(grammarAccess.getServiceRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleService"


    // $ANTLR start "ruleService"
    // InternalDockerCompose.g:87:1: ruleService : ( ( rule__Service__Group__0 ) ) ;
    public final void ruleService() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:91:2: ( ( ( rule__Service__Group__0 ) ) )
            // InternalDockerCompose.g:92:2: ( ( rule__Service__Group__0 ) )
            {
            // InternalDockerCompose.g:92:2: ( ( rule__Service__Group__0 ) )
            // InternalDockerCompose.g:93:3: ( rule__Service__Group__0 )
            {
             before(grammarAccess.getServiceAccess().getGroup()); 
            // InternalDockerCompose.g:94:3: ( rule__Service__Group__0 )
            // InternalDockerCompose.g:94:4: rule__Service__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleService"


    // $ANTLR start "entryRuleImage"
    // InternalDockerCompose.g:103:1: entryRuleImage : ruleImage EOF ;
    public final void entryRuleImage() throws RecognitionException {
        try {
            // InternalDockerCompose.g:104:1: ( ruleImage EOF )
            // InternalDockerCompose.g:105:1: ruleImage EOF
            {
             before(grammarAccess.getImageRule()); 
            pushFollow(FOLLOW_1);
            ruleImage();

            state._fsp--;

             after(grammarAccess.getImageRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleImage"


    // $ANTLR start "ruleImage"
    // InternalDockerCompose.g:112:1: ruleImage : ( ( rule__Image__Alternatives ) ) ;
    public final void ruleImage() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:116:2: ( ( ( rule__Image__Alternatives ) ) )
            // InternalDockerCompose.g:117:2: ( ( rule__Image__Alternatives ) )
            {
            // InternalDockerCompose.g:117:2: ( ( rule__Image__Alternatives ) )
            // InternalDockerCompose.g:118:3: ( rule__Image__Alternatives )
            {
             before(grammarAccess.getImageAccess().getAlternatives()); 
            // InternalDockerCompose.g:119:3: ( rule__Image__Alternatives )
            // InternalDockerCompose.g:119:4: rule__Image__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Image__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getImageAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleImage"


    // $ANTLR start "entryRuleDependency"
    // InternalDockerCompose.g:128:1: entryRuleDependency : ruleDependency EOF ;
    public final void entryRuleDependency() throws RecognitionException {
        try {
            // InternalDockerCompose.g:129:1: ( ruleDependency EOF )
            // InternalDockerCompose.g:130:1: ruleDependency EOF
            {
             before(grammarAccess.getDependencyRule()); 
            pushFollow(FOLLOW_1);
            ruleDependency();

            state._fsp--;

             after(grammarAccess.getDependencyRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDependency"


    // $ANTLR start "ruleDependency"
    // InternalDockerCompose.g:137:1: ruleDependency : ( ( rule__Dependency__Group__0 ) ) ;
    public final void ruleDependency() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:141:2: ( ( ( rule__Dependency__Group__0 ) ) )
            // InternalDockerCompose.g:142:2: ( ( rule__Dependency__Group__0 ) )
            {
            // InternalDockerCompose.g:142:2: ( ( rule__Dependency__Group__0 ) )
            // InternalDockerCompose.g:143:3: ( rule__Dependency__Group__0 )
            {
             before(grammarAccess.getDependencyAccess().getGroup()); 
            // InternalDockerCompose.g:144:3: ( rule__Dependency__Group__0 )
            // InternalDockerCompose.g:144:4: rule__Dependency__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Dependency__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDependencyAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDependency"


    // $ANTLR start "entryRuleNetworkConnector"
    // InternalDockerCompose.g:153:1: entryRuleNetworkConnector : ruleNetworkConnector EOF ;
    public final void entryRuleNetworkConnector() throws RecognitionException {
        try {
            // InternalDockerCompose.g:154:1: ( ruleNetworkConnector EOF )
            // InternalDockerCompose.g:155:1: ruleNetworkConnector EOF
            {
             before(grammarAccess.getNetworkConnectorRule()); 
            pushFollow(FOLLOW_1);
            ruleNetworkConnector();

            state._fsp--;

             after(grammarAccess.getNetworkConnectorRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNetworkConnector"


    // $ANTLR start "ruleNetworkConnector"
    // InternalDockerCompose.g:162:1: ruleNetworkConnector : ( ( rule__NetworkConnector__Alternatives ) ) ;
    public final void ruleNetworkConnector() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:166:2: ( ( ( rule__NetworkConnector__Alternatives ) ) )
            // InternalDockerCompose.g:167:2: ( ( rule__NetworkConnector__Alternatives ) )
            {
            // InternalDockerCompose.g:167:2: ( ( rule__NetworkConnector__Alternatives ) )
            // InternalDockerCompose.g:168:3: ( rule__NetworkConnector__Alternatives )
            {
             before(grammarAccess.getNetworkConnectorAccess().getAlternatives()); 
            // InternalDockerCompose.g:169:3: ( rule__NetworkConnector__Alternatives )
            // InternalDockerCompose.g:169:4: rule__NetworkConnector__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNetworkConnector"


    // $ANTLR start "entryRuleAlias"
    // InternalDockerCompose.g:178:1: entryRuleAlias : ruleAlias EOF ;
    public final void entryRuleAlias() throws RecognitionException {
        try {
            // InternalDockerCompose.g:179:1: ( ruleAlias EOF )
            // InternalDockerCompose.g:180:1: ruleAlias EOF
            {
             before(grammarAccess.getAliasRule()); 
            pushFollow(FOLLOW_1);
            ruleAlias();

            state._fsp--;

             after(grammarAccess.getAliasRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAlias"


    // $ANTLR start "ruleAlias"
    // InternalDockerCompose.g:187:1: ruleAlias : ( ( rule__Alias__Group__0 ) ) ;
    public final void ruleAlias() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:191:2: ( ( ( rule__Alias__Group__0 ) ) )
            // InternalDockerCompose.g:192:2: ( ( rule__Alias__Group__0 ) )
            {
            // InternalDockerCompose.g:192:2: ( ( rule__Alias__Group__0 ) )
            // InternalDockerCompose.g:193:3: ( rule__Alias__Group__0 )
            {
             before(grammarAccess.getAliasAccess().getGroup()); 
            // InternalDockerCompose.g:194:3: ( rule__Alias__Group__0 )
            // InternalDockerCompose.g:194:4: rule__Alias__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Alias__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAliasAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAlias"


    // $ANTLR start "entryRuleVolumeConnector"
    // InternalDockerCompose.g:203:1: entryRuleVolumeConnector : ruleVolumeConnector EOF ;
    public final void entryRuleVolumeConnector() throws RecognitionException {
        try {
            // InternalDockerCompose.g:204:1: ( ruleVolumeConnector EOF )
            // InternalDockerCompose.g:205:1: ruleVolumeConnector EOF
            {
             before(grammarAccess.getVolumeConnectorRule()); 
            pushFollow(FOLLOW_1);
            ruleVolumeConnector();

            state._fsp--;

             after(grammarAccess.getVolumeConnectorRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVolumeConnector"


    // $ANTLR start "ruleVolumeConnector"
    // InternalDockerCompose.g:212:1: ruleVolumeConnector : ( ( rule__VolumeConnector__Group__0 ) ) ;
    public final void ruleVolumeConnector() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:216:2: ( ( ( rule__VolumeConnector__Group__0 ) ) )
            // InternalDockerCompose.g:217:2: ( ( rule__VolumeConnector__Group__0 ) )
            {
            // InternalDockerCompose.g:217:2: ( ( rule__VolumeConnector__Group__0 ) )
            // InternalDockerCompose.g:218:3: ( rule__VolumeConnector__Group__0 )
            {
             before(grammarAccess.getVolumeConnectorAccess().getGroup()); 
            // InternalDockerCompose.g:219:3: ( rule__VolumeConnector__Group__0 )
            // InternalDockerCompose.g:219:4: rule__VolumeConnector__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnectorAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVolumeConnector"


    // $ANTLR start "entryRuleConfigConnector"
    // InternalDockerCompose.g:228:1: entryRuleConfigConnector : ruleConfigConnector EOF ;
    public final void entryRuleConfigConnector() throws RecognitionException {
        try {
            // InternalDockerCompose.g:229:1: ( ruleConfigConnector EOF )
            // InternalDockerCompose.g:230:1: ruleConfigConnector EOF
            {
             before(grammarAccess.getConfigConnectorRule()); 
            pushFollow(FOLLOW_1);
            ruleConfigConnector();

            state._fsp--;

             after(grammarAccess.getConfigConnectorRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConfigConnector"


    // $ANTLR start "ruleConfigConnector"
    // InternalDockerCompose.g:237:1: ruleConfigConnector : ( ( rule__ConfigConnector__Group__0 ) ) ;
    public final void ruleConfigConnector() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:241:2: ( ( ( rule__ConfigConnector__Group__0 ) ) )
            // InternalDockerCompose.g:242:2: ( ( rule__ConfigConnector__Group__0 ) )
            {
            // InternalDockerCompose.g:242:2: ( ( rule__ConfigConnector__Group__0 ) )
            // InternalDockerCompose.g:243:3: ( rule__ConfigConnector__Group__0 )
            {
             before(grammarAccess.getConfigConnectorAccess().getGroup()); 
            // InternalDockerCompose.g:244:3: ( rule__ConfigConnector__Group__0 )
            // InternalDockerCompose.g:244:4: rule__ConfigConnector__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnectorAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConfigConnector"


    // $ANTLR start "entryRuleSecretConnector"
    // InternalDockerCompose.g:253:1: entryRuleSecretConnector : ruleSecretConnector EOF ;
    public final void entryRuleSecretConnector() throws RecognitionException {
        try {
            // InternalDockerCompose.g:254:1: ( ruleSecretConnector EOF )
            // InternalDockerCompose.g:255:1: ruleSecretConnector EOF
            {
             before(grammarAccess.getSecretConnectorRule()); 
            pushFollow(FOLLOW_1);
            ruleSecretConnector();

            state._fsp--;

             after(grammarAccess.getSecretConnectorRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSecretConnector"


    // $ANTLR start "ruleSecretConnector"
    // InternalDockerCompose.g:262:1: ruleSecretConnector : ( ( rule__SecretConnector__Group__0 ) ) ;
    public final void ruleSecretConnector() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:266:2: ( ( ( rule__SecretConnector__Group__0 ) ) )
            // InternalDockerCompose.g:267:2: ( ( rule__SecretConnector__Group__0 ) )
            {
            // InternalDockerCompose.g:267:2: ( ( rule__SecretConnector__Group__0 ) )
            // InternalDockerCompose.g:268:3: ( rule__SecretConnector__Group__0 )
            {
             before(grammarAccess.getSecretConnectorAccess().getGroup()); 
            // InternalDockerCompose.g:269:3: ( rule__SecretConnector__Group__0 )
            // InternalDockerCompose.g:269:4: rule__SecretConnector__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnectorAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSecretConnector"


    // $ANTLR start "entryRuleNetwork"
    // InternalDockerCompose.g:278:1: entryRuleNetwork : ruleNetwork EOF ;
    public final void entryRuleNetwork() throws RecognitionException {
        try {
            // InternalDockerCompose.g:279:1: ( ruleNetwork EOF )
            // InternalDockerCompose.g:280:1: ruleNetwork EOF
            {
             before(grammarAccess.getNetworkRule()); 
            pushFollow(FOLLOW_1);
            ruleNetwork();

            state._fsp--;

             after(grammarAccess.getNetworkRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNetwork"


    // $ANTLR start "ruleNetwork"
    // InternalDockerCompose.g:287:1: ruleNetwork : ( ( rule__Network__Group__0 ) ) ;
    public final void ruleNetwork() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:291:2: ( ( ( rule__Network__Group__0 ) ) )
            // InternalDockerCompose.g:292:2: ( ( rule__Network__Group__0 ) )
            {
            // InternalDockerCompose.g:292:2: ( ( rule__Network__Group__0 ) )
            // InternalDockerCompose.g:293:3: ( rule__Network__Group__0 )
            {
             before(grammarAccess.getNetworkAccess().getGroup()); 
            // InternalDockerCompose.g:294:3: ( rule__Network__Group__0 )
            // InternalDockerCompose.g:294:4: rule__Network__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNetwork"


    // $ANTLR start "entryRuleVolume"
    // InternalDockerCompose.g:303:1: entryRuleVolume : ruleVolume EOF ;
    public final void entryRuleVolume() throws RecognitionException {
        try {
            // InternalDockerCompose.g:304:1: ( ruleVolume EOF )
            // InternalDockerCompose.g:305:1: ruleVolume EOF
            {
             before(grammarAccess.getVolumeRule()); 
            pushFollow(FOLLOW_1);
            ruleVolume();

            state._fsp--;

             after(grammarAccess.getVolumeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVolume"


    // $ANTLR start "ruleVolume"
    // InternalDockerCompose.g:312:1: ruleVolume : ( ( rule__Volume__Group__0 ) ) ;
    public final void ruleVolume() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:316:2: ( ( ( rule__Volume__Group__0 ) ) )
            // InternalDockerCompose.g:317:2: ( ( rule__Volume__Group__0 ) )
            {
            // InternalDockerCompose.g:317:2: ( ( rule__Volume__Group__0 ) )
            // InternalDockerCompose.g:318:3: ( rule__Volume__Group__0 )
            {
             before(grammarAccess.getVolumeAccess().getGroup()); 
            // InternalDockerCompose.g:319:3: ( rule__Volume__Group__0 )
            // InternalDockerCompose.g:319:4: rule__Volume__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVolume"


    // $ANTLR start "entryRuleConfig"
    // InternalDockerCompose.g:328:1: entryRuleConfig : ruleConfig EOF ;
    public final void entryRuleConfig() throws RecognitionException {
        try {
            // InternalDockerCompose.g:329:1: ( ruleConfig EOF )
            // InternalDockerCompose.g:330:1: ruleConfig EOF
            {
             before(grammarAccess.getConfigRule()); 
            pushFollow(FOLLOW_1);
            ruleConfig();

            state._fsp--;

             after(grammarAccess.getConfigRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConfig"


    // $ANTLR start "ruleConfig"
    // InternalDockerCompose.g:337:1: ruleConfig : ( ( rule__Config__Group__0 ) ) ;
    public final void ruleConfig() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:341:2: ( ( ( rule__Config__Group__0 ) ) )
            // InternalDockerCompose.g:342:2: ( ( rule__Config__Group__0 ) )
            {
            // InternalDockerCompose.g:342:2: ( ( rule__Config__Group__0 ) )
            // InternalDockerCompose.g:343:3: ( rule__Config__Group__0 )
            {
             before(grammarAccess.getConfigAccess().getGroup()); 
            // InternalDockerCompose.g:344:3: ( rule__Config__Group__0 )
            // InternalDockerCompose.g:344:4: rule__Config__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Config__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getConfigAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConfig"


    // $ANTLR start "entryRuleSecret"
    // InternalDockerCompose.g:353:1: entryRuleSecret : ruleSecret EOF ;
    public final void entryRuleSecret() throws RecognitionException {
        try {
            // InternalDockerCompose.g:354:1: ( ruleSecret EOF )
            // InternalDockerCompose.g:355:1: ruleSecret EOF
            {
             before(grammarAccess.getSecretRule()); 
            pushFollow(FOLLOW_1);
            ruleSecret();

            state._fsp--;

             after(grammarAccess.getSecretRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSecret"


    // $ANTLR start "ruleSecret"
    // InternalDockerCompose.g:362:1: ruleSecret : ( ( rule__Secret__Group__0 ) ) ;
    public final void ruleSecret() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:366:2: ( ( ( rule__Secret__Group__0 ) ) )
            // InternalDockerCompose.g:367:2: ( ( rule__Secret__Group__0 ) )
            {
            // InternalDockerCompose.g:367:2: ( ( rule__Secret__Group__0 ) )
            // InternalDockerCompose.g:368:3: ( rule__Secret__Group__0 )
            {
             before(grammarAccess.getSecretAccess().getGroup()); 
            // InternalDockerCompose.g:369:3: ( rule__Secret__Group__0 )
            // InternalDockerCompose.g:369:4: rule__Secret__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSecret"


    // $ANTLR start "entryRuleVolumeLabel"
    // InternalDockerCompose.g:378:1: entryRuleVolumeLabel : ruleVolumeLabel EOF ;
    public final void entryRuleVolumeLabel() throws RecognitionException {
        try {
            // InternalDockerCompose.g:379:1: ( ruleVolumeLabel EOF )
            // InternalDockerCompose.g:380:1: ruleVolumeLabel EOF
            {
             before(grammarAccess.getVolumeLabelRule()); 
            pushFollow(FOLLOW_1);
            ruleVolumeLabel();

            state._fsp--;

             after(grammarAccess.getVolumeLabelRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVolumeLabel"


    // $ANTLR start "ruleVolumeLabel"
    // InternalDockerCompose.g:387:1: ruleVolumeLabel : ( ( rule__VolumeLabel__Group__0 ) ) ;
    public final void ruleVolumeLabel() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:391:2: ( ( ( rule__VolumeLabel__Group__0 ) ) )
            // InternalDockerCompose.g:392:2: ( ( rule__VolumeLabel__Group__0 ) )
            {
            // InternalDockerCompose.g:392:2: ( ( rule__VolumeLabel__Group__0 ) )
            // InternalDockerCompose.g:393:3: ( rule__VolumeLabel__Group__0 )
            {
             before(grammarAccess.getVolumeLabelAccess().getGroup()); 
            // InternalDockerCompose.g:394:3: ( rule__VolumeLabel__Group__0 )
            // InternalDockerCompose.g:394:4: rule__VolumeLabel__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VolumeLabel__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getVolumeLabelAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVolumeLabel"


    // $ANTLR start "entryRuleVolumeDriverOpt"
    // InternalDockerCompose.g:403:1: entryRuleVolumeDriverOpt : ruleVolumeDriverOpt EOF ;
    public final void entryRuleVolumeDriverOpt() throws RecognitionException {
        try {
            // InternalDockerCompose.g:404:1: ( ruleVolumeDriverOpt EOF )
            // InternalDockerCompose.g:405:1: ruleVolumeDriverOpt EOF
            {
             before(grammarAccess.getVolumeDriverOptRule()); 
            pushFollow(FOLLOW_1);
            ruleVolumeDriverOpt();

            state._fsp--;

             after(grammarAccess.getVolumeDriverOptRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVolumeDriverOpt"


    // $ANTLR start "ruleVolumeDriverOpt"
    // InternalDockerCompose.g:412:1: ruleVolumeDriverOpt : ( ( rule__VolumeDriverOpt__Group__0 ) ) ;
    public final void ruleVolumeDriverOpt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:416:2: ( ( ( rule__VolumeDriverOpt__Group__0 ) ) )
            // InternalDockerCompose.g:417:2: ( ( rule__VolumeDriverOpt__Group__0 ) )
            {
            // InternalDockerCompose.g:417:2: ( ( rule__VolumeDriverOpt__Group__0 ) )
            // InternalDockerCompose.g:418:3: ( rule__VolumeDriverOpt__Group__0 )
            {
             before(grammarAccess.getVolumeDriverOptAccess().getGroup()); 
            // InternalDockerCompose.g:419:3: ( rule__VolumeDriverOpt__Group__0 )
            // InternalDockerCompose.g:419:4: rule__VolumeDriverOpt__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getVolumeDriverOptAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVolumeDriverOpt"


    // $ANTLR start "entryRuleNetworkLabel"
    // InternalDockerCompose.g:428:1: entryRuleNetworkLabel : ruleNetworkLabel EOF ;
    public final void entryRuleNetworkLabel() throws RecognitionException {
        try {
            // InternalDockerCompose.g:429:1: ( ruleNetworkLabel EOF )
            // InternalDockerCompose.g:430:1: ruleNetworkLabel EOF
            {
             before(grammarAccess.getNetworkLabelRule()); 
            pushFollow(FOLLOW_1);
            ruleNetworkLabel();

            state._fsp--;

             after(grammarAccess.getNetworkLabelRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNetworkLabel"


    // $ANTLR start "ruleNetworkLabel"
    // InternalDockerCompose.g:437:1: ruleNetworkLabel : ( ( rule__NetworkLabel__Group__0 ) ) ;
    public final void ruleNetworkLabel() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:441:2: ( ( ( rule__NetworkLabel__Group__0 ) ) )
            // InternalDockerCompose.g:442:2: ( ( rule__NetworkLabel__Group__0 ) )
            {
            // InternalDockerCompose.g:442:2: ( ( rule__NetworkLabel__Group__0 ) )
            // InternalDockerCompose.g:443:3: ( rule__NetworkLabel__Group__0 )
            {
             before(grammarAccess.getNetworkLabelAccess().getGroup()); 
            // InternalDockerCompose.g:444:3: ( rule__NetworkLabel__Group__0 )
            // InternalDockerCompose.g:444:4: rule__NetworkLabel__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NetworkLabel__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkLabelAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNetworkLabel"


    // $ANTLR start "entryRuleNetworkDriverOpt"
    // InternalDockerCompose.g:453:1: entryRuleNetworkDriverOpt : ruleNetworkDriverOpt EOF ;
    public final void entryRuleNetworkDriverOpt() throws RecognitionException {
        try {
            // InternalDockerCompose.g:454:1: ( ruleNetworkDriverOpt EOF )
            // InternalDockerCompose.g:455:1: ruleNetworkDriverOpt EOF
            {
             before(grammarAccess.getNetworkDriverOptRule()); 
            pushFollow(FOLLOW_1);
            ruleNetworkDriverOpt();

            state._fsp--;

             after(grammarAccess.getNetworkDriverOptRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNetworkDriverOpt"


    // $ANTLR start "ruleNetworkDriverOpt"
    // InternalDockerCompose.g:462:1: ruleNetworkDriverOpt : ( ( rule__NetworkDriverOpt__Group__0 ) ) ;
    public final void ruleNetworkDriverOpt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:466:2: ( ( ( rule__NetworkDriverOpt__Group__0 ) ) )
            // InternalDockerCompose.g:467:2: ( ( rule__NetworkDriverOpt__Group__0 ) )
            {
            // InternalDockerCompose.g:467:2: ( ( rule__NetworkDriverOpt__Group__0 ) )
            // InternalDockerCompose.g:468:3: ( rule__NetworkDriverOpt__Group__0 )
            {
             before(grammarAccess.getNetworkDriverOptAccess().getGroup()); 
            // InternalDockerCompose.g:469:3: ( rule__NetworkDriverOpt__Group__0 )
            // InternalDockerCompose.g:469:4: rule__NetworkDriverOpt__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkDriverOptAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNetworkDriverOpt"


    // $ANTLR start "entryRuleIPAM"
    // InternalDockerCompose.g:478:1: entryRuleIPAM : ruleIPAM EOF ;
    public final void entryRuleIPAM() throws RecognitionException {
        try {
            // InternalDockerCompose.g:479:1: ( ruleIPAM EOF )
            // InternalDockerCompose.g:480:1: ruleIPAM EOF
            {
             before(grammarAccess.getIPAMRule()); 
            pushFollow(FOLLOW_1);
            ruleIPAM();

            state._fsp--;

             after(grammarAccess.getIPAMRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIPAM"


    // $ANTLR start "ruleIPAM"
    // InternalDockerCompose.g:487:1: ruleIPAM : ( ( rule__IPAM__Group__0 ) ) ;
    public final void ruleIPAM() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:491:2: ( ( ( rule__IPAM__Group__0 ) ) )
            // InternalDockerCompose.g:492:2: ( ( rule__IPAM__Group__0 ) )
            {
            // InternalDockerCompose.g:492:2: ( ( rule__IPAM__Group__0 ) )
            // InternalDockerCompose.g:493:3: ( rule__IPAM__Group__0 )
            {
             before(grammarAccess.getIPAMAccess().getGroup()); 
            // InternalDockerCompose.g:494:3: ( rule__IPAM__Group__0 )
            // InternalDockerCompose.g:494:4: rule__IPAM__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIPAM"


    // $ANTLR start "entryRuleIPAMConfig"
    // InternalDockerCompose.g:503:1: entryRuleIPAMConfig : ruleIPAMConfig EOF ;
    public final void entryRuleIPAMConfig() throws RecognitionException {
        try {
            // InternalDockerCompose.g:504:1: ( ruleIPAMConfig EOF )
            // InternalDockerCompose.g:505:1: ruleIPAMConfig EOF
            {
             before(grammarAccess.getIPAMConfigRule()); 
            pushFollow(FOLLOW_1);
            ruleIPAMConfig();

            state._fsp--;

             after(grammarAccess.getIPAMConfigRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIPAMConfig"


    // $ANTLR start "ruleIPAMConfig"
    // InternalDockerCompose.g:512:1: ruleIPAMConfig : ( ( rule__IPAMConfig__Group__0 ) ) ;
    public final void ruleIPAMConfig() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:516:2: ( ( ( rule__IPAMConfig__Group__0 ) ) )
            // InternalDockerCompose.g:517:2: ( ( rule__IPAMConfig__Group__0 ) )
            {
            // InternalDockerCompose.g:517:2: ( ( rule__IPAMConfig__Group__0 ) )
            // InternalDockerCompose.g:518:3: ( rule__IPAMConfig__Group__0 )
            {
             before(grammarAccess.getIPAMConfigAccess().getGroup()); 
            // InternalDockerCompose.g:519:3: ( rule__IPAMConfig__Group__0 )
            // InternalDockerCompose.g:519:4: rule__IPAMConfig__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIPAMConfigAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIPAMConfig"


    // $ANTLR start "entryRuleIPAMOption"
    // InternalDockerCompose.g:528:1: entryRuleIPAMOption : ruleIPAMOption EOF ;
    public final void entryRuleIPAMOption() throws RecognitionException {
        try {
            // InternalDockerCompose.g:529:1: ( ruleIPAMOption EOF )
            // InternalDockerCompose.g:530:1: ruleIPAMOption EOF
            {
             before(grammarAccess.getIPAMOptionRule()); 
            pushFollow(FOLLOW_1);
            ruleIPAMOption();

            state._fsp--;

             after(grammarAccess.getIPAMOptionRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIPAMOption"


    // $ANTLR start "ruleIPAMOption"
    // InternalDockerCompose.g:537:1: ruleIPAMOption : ( ( rule__IPAMOption__Group__0 ) ) ;
    public final void ruleIPAMOption() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:541:2: ( ( ( rule__IPAMOption__Group__0 ) ) )
            // InternalDockerCompose.g:542:2: ( ( rule__IPAMOption__Group__0 ) )
            {
            // InternalDockerCompose.g:542:2: ( ( rule__IPAMOption__Group__0 ) )
            // InternalDockerCompose.g:543:3: ( rule__IPAMOption__Group__0 )
            {
             before(grammarAccess.getIPAMOptionAccess().getGroup()); 
            // InternalDockerCompose.g:544:3: ( rule__IPAMOption__Group__0 )
            // InternalDockerCompose.g:544:4: rule__IPAMOption__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IPAMOption__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIPAMOptionAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIPAMOption"


    // $ANTLR start "entryRuleIPAMAddress"
    // InternalDockerCompose.g:553:1: entryRuleIPAMAddress : ruleIPAMAddress EOF ;
    public final void entryRuleIPAMAddress() throws RecognitionException {
        try {
            // InternalDockerCompose.g:554:1: ( ruleIPAMAddress EOF )
            // InternalDockerCompose.g:555:1: ruleIPAMAddress EOF
            {
             before(grammarAccess.getIPAMAddressRule()); 
            pushFollow(FOLLOW_1);
            ruleIPAMAddress();

            state._fsp--;

             after(grammarAccess.getIPAMAddressRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIPAMAddress"


    // $ANTLR start "ruleIPAMAddress"
    // InternalDockerCompose.g:562:1: ruleIPAMAddress : ( ( rule__IPAMAddress__Group__0 ) ) ;
    public final void ruleIPAMAddress() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:566:2: ( ( ( rule__IPAMAddress__Group__0 ) ) )
            // InternalDockerCompose.g:567:2: ( ( rule__IPAMAddress__Group__0 ) )
            {
            // InternalDockerCompose.g:567:2: ( ( rule__IPAMAddress__Group__0 ) )
            // InternalDockerCompose.g:568:3: ( rule__IPAMAddress__Group__0 )
            {
             before(grammarAccess.getIPAMAddressAccess().getGroup()); 
            // InternalDockerCompose.g:569:3: ( rule__IPAMAddress__Group__0 )
            // InternalDockerCompose.g:569:4: rule__IPAMAddress__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IPAMAddress__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAddressAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIPAMAddress"


    // $ANTLR start "entryRulePATH"
    // InternalDockerCompose.g:578:1: entryRulePATH : rulePATH EOF ;
    public final void entryRulePATH() throws RecognitionException {
        try {
            // InternalDockerCompose.g:579:1: ( rulePATH EOF )
            // InternalDockerCompose.g:580:1: rulePATH EOF
            {
             before(grammarAccess.getPATHRule()); 
            pushFollow(FOLLOW_1);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getPATHRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePATH"


    // $ANTLR start "rulePATH"
    // InternalDockerCompose.g:587:1: rulePATH : ( ( rule__PATH__Group__0 ) ) ;
    public final void rulePATH() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:591:2: ( ( ( rule__PATH__Group__0 ) ) )
            // InternalDockerCompose.g:592:2: ( ( rule__PATH__Group__0 ) )
            {
            // InternalDockerCompose.g:592:2: ( ( rule__PATH__Group__0 ) )
            // InternalDockerCompose.g:593:3: ( rule__PATH__Group__0 )
            {
             before(grammarAccess.getPATHAccess().getGroup()); 
            // InternalDockerCompose.g:594:3: ( rule__PATH__Group__0 )
            // InternalDockerCompose.g:594:4: rule__PATH__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getPATHAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePATH"


    // $ANTLR start "entryRuleEString"
    // InternalDockerCompose.g:603:1: entryRuleEString : ruleEString EOF ;
    public final void entryRuleEString() throws RecognitionException {
        try {
            // InternalDockerCompose.g:604:1: ( ruleEString EOF )
            // InternalDockerCompose.g:605:1: ruleEString EOF
            {
             before(grammarAccess.getEStringRule()); 
            pushFollow(FOLLOW_1);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getEStringRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEString"


    // $ANTLR start "ruleEString"
    // InternalDockerCompose.g:612:1: ruleEString : ( ( rule__EString__Alternatives ) ) ;
    public final void ruleEString() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:616:2: ( ( ( rule__EString__Alternatives ) ) )
            // InternalDockerCompose.g:617:2: ( ( rule__EString__Alternatives ) )
            {
            // InternalDockerCompose.g:617:2: ( ( rule__EString__Alternatives ) )
            // InternalDockerCompose.g:618:3: ( rule__EString__Alternatives )
            {
             before(grammarAccess.getEStringAccess().getAlternatives()); 
            // InternalDockerCompose.g:619:3: ( rule__EString__Alternatives )
            // InternalDockerCompose.g:619:4: rule__EString__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EString__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getEStringAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEString"


    // $ANTLR start "entryRuleEInt"
    // InternalDockerCompose.g:628:1: entryRuleEInt : ruleEInt EOF ;
    public final void entryRuleEInt() throws RecognitionException {
        try {
            // InternalDockerCompose.g:629:1: ( ruleEInt EOF )
            // InternalDockerCompose.g:630:1: ruleEInt EOF
            {
             before(grammarAccess.getEIntRule()); 
            pushFollow(FOLLOW_1);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getEIntRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEInt"


    // $ANTLR start "ruleEInt"
    // InternalDockerCompose.g:637:1: ruleEInt : ( RULE_INT ) ;
    public final void ruleEInt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:641:2: ( ( RULE_INT ) )
            // InternalDockerCompose.g:642:2: ( RULE_INT )
            {
            // InternalDockerCompose.g:642:2: ( RULE_INT )
            // InternalDockerCompose.g:643:3: RULE_INT
            {
             before(grammarAccess.getEIntAccess().getINTTerminalRuleCall()); 
            match(input,RULE_INT,FOLLOW_2); 
             after(grammarAccess.getEIntAccess().getINTTerminalRuleCall()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEInt"


    // $ANTLR start "entryRuleDNS"
    // InternalDockerCompose.g:653:1: entryRuleDNS : ruleDNS EOF ;
    public final void entryRuleDNS() throws RecognitionException {
        try {
            // InternalDockerCompose.g:654:1: ( ruleDNS EOF )
            // InternalDockerCompose.g:655:1: ruleDNS EOF
            {
             before(grammarAccess.getDNSRule()); 
            pushFollow(FOLLOW_1);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getDNSRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDNS"


    // $ANTLR start "ruleDNS"
    // InternalDockerCompose.g:662:1: ruleDNS : ( ( rule__DNS__Group__0 ) ) ;
    public final void ruleDNS() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:666:2: ( ( ( rule__DNS__Group__0 ) ) )
            // InternalDockerCompose.g:667:2: ( ( rule__DNS__Group__0 ) )
            {
            // InternalDockerCompose.g:667:2: ( ( rule__DNS__Group__0 ) )
            // InternalDockerCompose.g:668:3: ( rule__DNS__Group__0 )
            {
             before(grammarAccess.getDNSAccess().getGroup()); 
            // InternalDockerCompose.g:669:3: ( rule__DNS__Group__0 )
            // InternalDockerCompose.g:669:4: rule__DNS__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DNS__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDNSAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDNS"


    // $ANTLR start "entryRuleNetworkAddress"
    // InternalDockerCompose.g:678:1: entryRuleNetworkAddress : ruleNetworkAddress EOF ;
    public final void entryRuleNetworkAddress() throws RecognitionException {
        try {
            // InternalDockerCompose.g:679:1: ( ruleNetworkAddress EOF )
            // InternalDockerCompose.g:680:1: ruleNetworkAddress EOF
            {
             before(grammarAccess.getNetworkAddressRule()); 
            pushFollow(FOLLOW_1);
            ruleNetworkAddress();

            state._fsp--;

             after(grammarAccess.getNetworkAddressRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNetworkAddress"


    // $ANTLR start "ruleNetworkAddress"
    // InternalDockerCompose.g:687:1: ruleNetworkAddress : ( ( rule__NetworkAddress__Group__0 ) ) ;
    public final void ruleNetworkAddress() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:691:2: ( ( ( rule__NetworkAddress__Group__0 ) ) )
            // InternalDockerCompose.g:692:2: ( ( rule__NetworkAddress__Group__0 ) )
            {
            // InternalDockerCompose.g:692:2: ( ( rule__NetworkAddress__Group__0 ) )
            // InternalDockerCompose.g:693:3: ( rule__NetworkAddress__Group__0 )
            {
             before(grammarAccess.getNetworkAddressAccess().getGroup()); 
            // InternalDockerCompose.g:694:3: ( rule__NetworkAddress__Group__0 )
            // InternalDockerCompose.g:694:4: rule__NetworkAddress__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAddressAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNetworkAddress"


    // $ANTLR start "entryRuleEBoolean"
    // InternalDockerCompose.g:703:1: entryRuleEBoolean : ruleEBoolean EOF ;
    public final void entryRuleEBoolean() throws RecognitionException {
        try {
            // InternalDockerCompose.g:704:1: ( ruleEBoolean EOF )
            // InternalDockerCompose.g:705:1: ruleEBoolean EOF
            {
             before(grammarAccess.getEBooleanRule()); 
            pushFollow(FOLLOW_1);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getEBooleanRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEBoolean"


    // $ANTLR start "ruleEBoolean"
    // InternalDockerCompose.g:712:1: ruleEBoolean : ( ( rule__EBoolean__Alternatives ) ) ;
    public final void ruleEBoolean() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:716:2: ( ( ( rule__EBoolean__Alternatives ) ) )
            // InternalDockerCompose.g:717:2: ( ( rule__EBoolean__Alternatives ) )
            {
            // InternalDockerCompose.g:717:2: ( ( rule__EBoolean__Alternatives ) )
            // InternalDockerCompose.g:718:3: ( rule__EBoolean__Alternatives )
            {
             before(grammarAccess.getEBooleanAccess().getAlternatives()); 
            // InternalDockerCompose.g:719:3: ( rule__EBoolean__Alternatives )
            // InternalDockerCompose.g:719:4: rule__EBoolean__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EBoolean__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getEBooleanAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEBoolean"


    // $ANTLR start "ruleRestartPolicy"
    // InternalDockerCompose.g:728:1: ruleRestartPolicy : ( ( rule__RestartPolicy__Alternatives ) ) ;
    public final void ruleRestartPolicy() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:732:1: ( ( ( rule__RestartPolicy__Alternatives ) ) )
            // InternalDockerCompose.g:733:2: ( ( rule__RestartPolicy__Alternatives ) )
            {
            // InternalDockerCompose.g:733:2: ( ( rule__RestartPolicy__Alternatives ) )
            // InternalDockerCompose.g:734:3: ( rule__RestartPolicy__Alternatives )
            {
             before(grammarAccess.getRestartPolicyAccess().getAlternatives()); 
            // InternalDockerCompose.g:735:3: ( rule__RestartPolicy__Alternatives )
            // InternalDockerCompose.g:735:4: rule__RestartPolicy__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__RestartPolicy__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getRestartPolicyAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRestartPolicy"


    // $ANTLR start "ruleAccessMode"
    // InternalDockerCompose.g:744:1: ruleAccessMode : ( ( rule__AccessMode__Alternatives ) ) ;
    public final void ruleAccessMode() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:748:1: ( ( ( rule__AccessMode__Alternatives ) ) )
            // InternalDockerCompose.g:749:2: ( ( rule__AccessMode__Alternatives ) )
            {
            // InternalDockerCompose.g:749:2: ( ( rule__AccessMode__Alternatives ) )
            // InternalDockerCompose.g:750:3: ( rule__AccessMode__Alternatives )
            {
             before(grammarAccess.getAccessModeAccess().getAlternatives()); 
            // InternalDockerCompose.g:751:3: ( rule__AccessMode__Alternatives )
            // InternalDockerCompose.g:751:4: rule__AccessMode__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AccessMode__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getAccessModeAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAccessMode"


    // $ANTLR start "ruleMountType"
    // InternalDockerCompose.g:760:1: ruleMountType : ( ( rule__MountType__Alternatives ) ) ;
    public final void ruleMountType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:764:1: ( ( ( rule__MountType__Alternatives ) ) )
            // InternalDockerCompose.g:765:2: ( ( rule__MountType__Alternatives ) )
            {
            // InternalDockerCompose.g:765:2: ( ( rule__MountType__Alternatives ) )
            // InternalDockerCompose.g:766:3: ( rule__MountType__Alternatives )
            {
             before(grammarAccess.getMountTypeAccess().getAlternatives()); 
            // InternalDockerCompose.g:767:3: ( rule__MountType__Alternatives )
            // InternalDockerCompose.g:767:4: rule__MountType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__MountType__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getMountTypeAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMountType"


    // $ANTLR start "rulePropagationType"
    // InternalDockerCompose.g:776:1: rulePropagationType : ( ( rule__PropagationType__Alternatives ) ) ;
    public final void rulePropagationType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:780:1: ( ( ( rule__PropagationType__Alternatives ) ) )
            // InternalDockerCompose.g:781:2: ( ( rule__PropagationType__Alternatives ) )
            {
            // InternalDockerCompose.g:781:2: ( ( rule__PropagationType__Alternatives ) )
            // InternalDockerCompose.g:782:3: ( rule__PropagationType__Alternatives )
            {
             before(grammarAccess.getPropagationTypeAccess().getAlternatives()); 
            // InternalDockerCompose.g:783:3: ( rule__PropagationType__Alternatives )
            // InternalDockerCompose.g:783:4: rule__PropagationType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__PropagationType__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getPropagationTypeAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePropagationType"


    // $ANTLR start "rule__Service__Alternatives_3_0"
    // InternalDockerCompose.g:791:1: rule__Service__Alternatives_3_0 : ( ( ( rule__Service__Group_3_0_0__0 ) ) | ( ( rule__Service__Group_3_0_1__0 ) ) );
    public final void rule__Service__Alternatives_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:795:1: ( ( ( rule__Service__Group_3_0_0__0 ) ) | ( ( rule__Service__Group_3_0_1__0 ) ) )
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==41) ) {
                alt1=1;
            }
            else if ( (LA1_0==42) ) {
                alt1=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 1, 0, input);

                throw nvae;
            }
            switch (alt1) {
                case 1 :
                    // InternalDockerCompose.g:796:2: ( ( rule__Service__Group_3_0_0__0 ) )
                    {
                    // InternalDockerCompose.g:796:2: ( ( rule__Service__Group_3_0_0__0 ) )
                    // InternalDockerCompose.g:797:3: ( rule__Service__Group_3_0_0__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_0_0()); 
                    // InternalDockerCompose.g:798:3: ( rule__Service__Group_3_0_0__0 )
                    // InternalDockerCompose.g:798:4: rule__Service__Group_3_0_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_0_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:802:2: ( ( rule__Service__Group_3_0_1__0 ) )
                    {
                    // InternalDockerCompose.g:802:2: ( ( rule__Service__Group_3_0_1__0 ) )
                    // InternalDockerCompose.g:803:3: ( rule__Service__Group_3_0_1__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_0_1()); 
                    // InternalDockerCompose.g:804:3: ( rule__Service__Group_3_0_1__0 )
                    // InternalDockerCompose.g:804:4: rule__Service__Group_3_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_0_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Alternatives_3_0"


    // $ANTLR start "rule__Service__Alternatives_3_13_1"
    // InternalDockerCompose.g:812:1: rule__Service__Alternatives_3_13_1 : ( ( ( ( rule__Service__Group_3_13_1_0__0 ) ) ( ( rule__Service__Group_3_13_1_0__0 )* ) ) | ( ( rule__Service__DnsAssignment_3_13_1_1 ) ) );
    public final void rule__Service__Alternatives_3_13_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:816:1: ( ( ( ( rule__Service__Group_3_13_1_0__0 ) ) ( ( rule__Service__Group_3_13_1_0__0 )* ) ) | ( ( rule__Service__DnsAssignment_3_13_1_1 ) ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==50) ) {
                alt3=1;
            }
            else if ( (LA3_0==RULE_INT) ) {
                alt3=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalDockerCompose.g:817:2: ( ( ( rule__Service__Group_3_13_1_0__0 ) ) ( ( rule__Service__Group_3_13_1_0__0 )* ) )
                    {
                    // InternalDockerCompose.g:817:2: ( ( ( rule__Service__Group_3_13_1_0__0 ) ) ( ( rule__Service__Group_3_13_1_0__0 )* ) )
                    // InternalDockerCompose.g:818:3: ( ( rule__Service__Group_3_13_1_0__0 ) ) ( ( rule__Service__Group_3_13_1_0__0 )* )
                    {
                    // InternalDockerCompose.g:818:3: ( ( rule__Service__Group_3_13_1_0__0 ) )
                    // InternalDockerCompose.g:819:4: ( rule__Service__Group_3_13_1_0__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_13_1_0()); 
                    // InternalDockerCompose.g:820:4: ( rule__Service__Group_3_13_1_0__0 )
                    // InternalDockerCompose.g:820:5: rule__Service__Group_3_13_1_0__0
                    {
                    pushFollow(FOLLOW_3);
                    rule__Service__Group_3_13_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_13_1_0()); 

                    }

                    // InternalDockerCompose.g:823:3: ( ( rule__Service__Group_3_13_1_0__0 )* )
                    // InternalDockerCompose.g:824:4: ( rule__Service__Group_3_13_1_0__0 )*
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_13_1_0()); 
                    // InternalDockerCompose.g:825:4: ( rule__Service__Group_3_13_1_0__0 )*
                    loop2:
                    do {
                        int alt2=2;
                        int LA2_0 = input.LA(1);

                        if ( (LA2_0==50) ) {
                            alt2=1;
                        }


                        switch (alt2) {
                    	case 1 :
                    	    // InternalDockerCompose.g:825:5: rule__Service__Group_3_13_1_0__0
                    	    {
                    	    pushFollow(FOLLOW_3);
                    	    rule__Service__Group_3_13_1_0__0();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop2;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getGroup_3_13_1_0()); 

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:830:2: ( ( rule__Service__DnsAssignment_3_13_1_1 ) )
                    {
                    // InternalDockerCompose.g:830:2: ( ( rule__Service__DnsAssignment_3_13_1_1 ) )
                    // InternalDockerCompose.g:831:3: ( rule__Service__DnsAssignment_3_13_1_1 )
                    {
                     before(grammarAccess.getServiceAccess().getDnsAssignment_3_13_1_1()); 
                    // InternalDockerCompose.g:832:3: ( rule__Service__DnsAssignment_3_13_1_1 )
                    // InternalDockerCompose.g:832:4: rule__Service__DnsAssignment_3_13_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__DnsAssignment_3_13_1_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getDnsAssignment_3_13_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Alternatives_3_13_1"


    // $ANTLR start "rule__Image__Alternatives"
    // InternalDockerCompose.g:840:1: rule__Image__Alternatives : ( ( ruleEString ) | ( ( rule__Image__Group_1__0 ) ) );
    public final void rule__Image__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:844:1: ( ( ruleEString ) | ( ( rule__Image__Group_1__0 ) ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==RULE_STRING) ) {
                alt4=1;
            }
            else if ( (LA4_0==RULE_ID) ) {
                int LA4_2 = input.LA(2);

                if ( (LA4_2==EOF||(LA4_2>=RULE_STRING && LA4_2<=RULE_ID)||(LA4_2>=34 && LA4_2<=39)||(LA4_2>=41 && LA4_2<=49)||(LA4_2>=51 && LA4_2<=53)) ) {
                    alt4=1;
                }
                else if ( (LA4_2==40) ) {
                    alt4=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 4, 2, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalDockerCompose.g:845:2: ( ruleEString )
                    {
                    // InternalDockerCompose.g:845:2: ( ruleEString )
                    // InternalDockerCompose.g:846:3: ruleEString
                    {
                     before(grammarAccess.getImageAccess().getEStringParserRuleCall_0()); 
                    pushFollow(FOLLOW_2);
                    ruleEString();

                    state._fsp--;

                     after(grammarAccess.getImageAccess().getEStringParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:851:2: ( ( rule__Image__Group_1__0 ) )
                    {
                    // InternalDockerCompose.g:851:2: ( ( rule__Image__Group_1__0 ) )
                    // InternalDockerCompose.g:852:3: ( rule__Image__Group_1__0 )
                    {
                     before(grammarAccess.getImageAccess().getGroup_1()); 
                    // InternalDockerCompose.g:853:3: ( rule__Image__Group_1__0 )
                    // InternalDockerCompose.g:853:4: rule__Image__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Image__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImageAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Alternatives"


    // $ANTLR start "rule__NetworkConnector__Alternatives"
    // InternalDockerCompose.g:861:1: rule__NetworkConnector__Alternatives : ( ( ( rule__NetworkConnector__Group_0__0 ) ) | ( ( rule__NetworkConnector__Group_1__0 ) ) );
    public final void rule__NetworkConnector__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:865:1: ( ( ( rule__NetworkConnector__Group_0__0 ) ) | ( ( rule__NetworkConnector__Group_1__0 ) ) )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==50) ) {
                alt5=1;
            }
            else if ( ((LA5_0>=RULE_STRING && LA5_0<=RULE_ID)) ) {
                alt5=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // InternalDockerCompose.g:866:2: ( ( rule__NetworkConnector__Group_0__0 ) )
                    {
                    // InternalDockerCompose.g:866:2: ( ( rule__NetworkConnector__Group_0__0 ) )
                    // InternalDockerCompose.g:867:3: ( rule__NetworkConnector__Group_0__0 )
                    {
                     before(grammarAccess.getNetworkConnectorAccess().getGroup_0()); 
                    // InternalDockerCompose.g:868:3: ( rule__NetworkConnector__Group_0__0 )
                    // InternalDockerCompose.g:868:4: rule__NetworkConnector__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkConnectorAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:872:2: ( ( rule__NetworkConnector__Group_1__0 ) )
                    {
                    // InternalDockerCompose.g:872:2: ( ( rule__NetworkConnector__Group_1__0 ) )
                    // InternalDockerCompose.g:873:3: ( rule__NetworkConnector__Group_1__0 )
                    {
                     before(grammarAccess.getNetworkConnectorAccess().getGroup_1()); 
                    // InternalDockerCompose.g:874:3: ( rule__NetworkConnector__Group_1__0 )
                    // InternalDockerCompose.g:874:4: rule__NetworkConnector__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkConnectorAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Alternatives"


    // $ANTLR start "rule__VolumeConnector__Alternatives_1"
    // InternalDockerCompose.g:882:1: rule__VolumeConnector__Alternatives_1 : ( ( ( rule__VolumeConnector__Group_1_0__0 ) ) | ( ( rule__VolumeConnector__UnorderedGroup_1_1 ) ) );
    public final void rule__VolumeConnector__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:886:1: ( ( ( rule__VolumeConnector__Group_1_0__0 ) ) | ( ( rule__VolumeConnector__UnorderedGroup_1_1 ) ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( ((LA6_0>=RULE_STRING && LA6_0<=RULE_ID)) ) {
                alt6=1;
            }
            else if ( (LA6_0==48||(LA6_0>=58 && LA6_0<=61)||LA6_0==63||LA6_0==65) ) {
                alt6=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalDockerCompose.g:887:2: ( ( rule__VolumeConnector__Group_1_0__0 ) )
                    {
                    // InternalDockerCompose.g:887:2: ( ( rule__VolumeConnector__Group_1_0__0 ) )
                    // InternalDockerCompose.g:888:3: ( rule__VolumeConnector__Group_1_0__0 )
                    {
                     before(grammarAccess.getVolumeConnectorAccess().getGroup_1_0()); 
                    // InternalDockerCompose.g:889:3: ( rule__VolumeConnector__Group_1_0__0 )
                    // InternalDockerCompose.g:889:4: rule__VolumeConnector__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector__Group_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnectorAccess().getGroup_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:893:2: ( ( rule__VolumeConnector__UnorderedGroup_1_1 ) )
                    {
                    // InternalDockerCompose.g:893:2: ( ( rule__VolumeConnector__UnorderedGroup_1_1 ) )
                    // InternalDockerCompose.g:894:3: ( rule__VolumeConnector__UnorderedGroup_1_1 )
                    {
                     before(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1()); 
                    // InternalDockerCompose.g:895:3: ( rule__VolumeConnector__UnorderedGroup_1_1 )
                    // InternalDockerCompose.g:895:4: rule__VolumeConnector__UnorderedGroup_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector__UnorderedGroup_1_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Alternatives_1"


    // $ANTLR start "rule__ConfigConnector__Alternatives_1"
    // InternalDockerCompose.g:903:1: rule__ConfigConnector__Alternatives_1 : ( ( ( rule__ConfigConnector__ConfigAssignment_1_0 ) ) | ( ( rule__ConfigConnector__UnorderedGroup_1_1 ) ) );
    public final void rule__ConfigConnector__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:907:1: ( ( ( rule__ConfigConnector__ConfigAssignment_1_0 ) ) | ( ( rule__ConfigConnector__UnorderedGroup_1_1 ) ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( ((LA7_0>=RULE_STRING && LA7_0<=RULE_ID)) ) {
                alt7=1;
            }
            else if ( (LA7_0==58||LA7_0==60||(LA7_0>=67 && LA7_0<=69)) ) {
                alt7=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalDockerCompose.g:908:2: ( ( rule__ConfigConnector__ConfigAssignment_1_0 ) )
                    {
                    // InternalDockerCompose.g:908:2: ( ( rule__ConfigConnector__ConfigAssignment_1_0 ) )
                    // InternalDockerCompose.g:909:3: ( rule__ConfigConnector__ConfigAssignment_1_0 )
                    {
                     before(grammarAccess.getConfigConnectorAccess().getConfigAssignment_1_0()); 
                    // InternalDockerCompose.g:910:3: ( rule__ConfigConnector__ConfigAssignment_1_0 )
                    // InternalDockerCompose.g:910:4: rule__ConfigConnector__ConfigAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector__ConfigAssignment_1_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigConnectorAccess().getConfigAssignment_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:914:2: ( ( rule__ConfigConnector__UnorderedGroup_1_1 ) )
                    {
                    // InternalDockerCompose.g:914:2: ( ( rule__ConfigConnector__UnorderedGroup_1_1 ) )
                    // InternalDockerCompose.g:915:3: ( rule__ConfigConnector__UnorderedGroup_1_1 )
                    {
                     before(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1()); 
                    // InternalDockerCompose.g:916:3: ( rule__ConfigConnector__UnorderedGroup_1_1 )
                    // InternalDockerCompose.g:916:4: rule__ConfigConnector__UnorderedGroup_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector__UnorderedGroup_1_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Alternatives_1"


    // $ANTLR start "rule__SecretConnector__Alternatives_1"
    // InternalDockerCompose.g:924:1: rule__SecretConnector__Alternatives_1 : ( ( ( rule__SecretConnector__SecretAssignment_1_0 ) ) | ( ( rule__SecretConnector__UnorderedGroup_1_1 ) ) );
    public final void rule__SecretConnector__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:928:1: ( ( ( rule__SecretConnector__SecretAssignment_1_0 ) ) | ( ( rule__SecretConnector__UnorderedGroup_1_1 ) ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( ((LA8_0>=RULE_STRING && LA8_0<=RULE_ID)) ) {
                alt8=1;
            }
            else if ( (LA8_0==58||LA8_0==60||(LA8_0>=67 && LA8_0<=69)) ) {
                alt8=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalDockerCompose.g:929:2: ( ( rule__SecretConnector__SecretAssignment_1_0 ) )
                    {
                    // InternalDockerCompose.g:929:2: ( ( rule__SecretConnector__SecretAssignment_1_0 ) )
                    // InternalDockerCompose.g:930:3: ( rule__SecretConnector__SecretAssignment_1_0 )
                    {
                     before(grammarAccess.getSecretConnectorAccess().getSecretAssignment_1_0()); 
                    // InternalDockerCompose.g:931:3: ( rule__SecretConnector__SecretAssignment_1_0 )
                    // InternalDockerCompose.g:931:4: rule__SecretConnector__SecretAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector__SecretAssignment_1_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretConnectorAccess().getSecretAssignment_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:935:2: ( ( rule__SecretConnector__UnorderedGroup_1_1 ) )
                    {
                    // InternalDockerCompose.g:935:2: ( ( rule__SecretConnector__UnorderedGroup_1_1 ) )
                    // InternalDockerCompose.g:936:3: ( rule__SecretConnector__UnorderedGroup_1_1 )
                    {
                     before(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1()); 
                    // InternalDockerCompose.g:937:3: ( rule__SecretConnector__UnorderedGroup_1_1 )
                    // InternalDockerCompose.g:937:4: rule__SecretConnector__UnorderedGroup_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector__UnorderedGroup_1_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Alternatives_1"


    // $ANTLR start "rule__Network__Alternatives_3"
    // InternalDockerCompose.g:945:1: rule__Network__Alternatives_3 : ( ( ( rule__Network__Group_3_0__0 ) ) | ( ( rule__Network__UnorderedGroup_3_1 ) ) );
    public final void rule__Network__Alternatives_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:949:1: ( ( ( rule__Network__Group_3_0__0 ) ) | ( ( rule__Network__UnorderedGroup_3_1 ) ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==70) ) {
                alt9=1;
            }
            else if ( (LA9_0==EOF||(LA9_0>=RULE_STRING && LA9_0<=RULE_ID)||(LA9_0>=34 && LA9_0<=39)||(LA9_0>=72 && LA9_0<=80)) ) {
                alt9=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalDockerCompose.g:950:2: ( ( rule__Network__Group_3_0__0 ) )
                    {
                    // InternalDockerCompose.g:950:2: ( ( rule__Network__Group_3_0__0 ) )
                    // InternalDockerCompose.g:951:3: ( rule__Network__Group_3_0__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_0()); 
                    // InternalDockerCompose.g:952:3: ( rule__Network__Group_3_0__0 )
                    // InternalDockerCompose.g:952:4: rule__Network__Group_3_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:956:2: ( ( rule__Network__UnorderedGroup_3_1 ) )
                    {
                    // InternalDockerCompose.g:956:2: ( ( rule__Network__UnorderedGroup_3_1 ) )
                    // InternalDockerCompose.g:957:3: ( rule__Network__UnorderedGroup_3_1 )
                    {
                     before(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1()); 
                    // InternalDockerCompose.g:958:3: ( rule__Network__UnorderedGroup_3_1 )
                    // InternalDockerCompose.g:958:4: rule__Network__UnorderedGroup_3_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Alternatives_3"


    // $ANTLR start "rule__EString__Alternatives"
    // InternalDockerCompose.g:966:1: rule__EString__Alternatives : ( ( RULE_STRING ) | ( RULE_ID ) );
    public final void rule__EString__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:970:1: ( ( RULE_STRING ) | ( RULE_ID ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==RULE_STRING) ) {
                alt10=1;
            }
            else if ( (LA10_0==RULE_ID) ) {
                alt10=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalDockerCompose.g:971:2: ( RULE_STRING )
                    {
                    // InternalDockerCompose.g:971:2: ( RULE_STRING )
                    // InternalDockerCompose.g:972:3: RULE_STRING
                    {
                     before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
                    match(input,RULE_STRING,FOLLOW_2); 
                     after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:977:2: ( RULE_ID )
                    {
                    // InternalDockerCompose.g:977:2: ( RULE_ID )
                    // InternalDockerCompose.g:978:3: RULE_ID
                    {
                     before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
                    match(input,RULE_ID,FOLLOW_2); 
                     after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EString__Alternatives"


    // $ANTLR start "rule__EBoolean__Alternatives"
    // InternalDockerCompose.g:987:1: rule__EBoolean__Alternatives : ( ( 'true' ) | ( 'false' ) );
    public final void rule__EBoolean__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:991:1: ( ( 'true' ) | ( 'false' ) )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==15) ) {
                alt11=1;
            }
            else if ( (LA11_0==16) ) {
                alt11=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalDockerCompose.g:992:2: ( 'true' )
                    {
                    // InternalDockerCompose.g:992:2: ( 'true' )
                    // InternalDockerCompose.g:993:3: 'true'
                    {
                     before(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); 
                    match(input,15,FOLLOW_2); 
                     after(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:998:2: ( 'false' )
                    {
                    // InternalDockerCompose.g:998:2: ( 'false' )
                    // InternalDockerCompose.g:999:3: 'false'
                    {
                     before(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); 
                    match(input,16,FOLLOW_2); 
                     after(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EBoolean__Alternatives"


    // $ANTLR start "rule__RestartPolicy__Alternatives"
    // InternalDockerCompose.g:1008:1: rule__RestartPolicy__Alternatives : ( ( ( '\"no\"' ) ) | ( ( 'always' ) ) | ( ( 'on-failure' ) ) | ( ( 'unless-stopped' ) ) );
    public final void rule__RestartPolicy__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1012:1: ( ( ( '\"no\"' ) ) | ( ( 'always' ) ) | ( ( 'on-failure' ) ) | ( ( 'unless-stopped' ) ) )
            int alt12=4;
            switch ( input.LA(1) ) {
            case 17:
                {
                alt12=1;
                }
                break;
            case 18:
                {
                alt12=2;
                }
                break;
            case 19:
                {
                alt12=3;
                }
                break;
            case 20:
                {
                alt12=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }

            switch (alt12) {
                case 1 :
                    // InternalDockerCompose.g:1013:2: ( ( '\"no\"' ) )
                    {
                    // InternalDockerCompose.g:1013:2: ( ( '\"no\"' ) )
                    // InternalDockerCompose.g:1014:3: ( '\"no\"' )
                    {
                     before(grammarAccess.getRestartPolicyAccess().getNoEnumLiteralDeclaration_0()); 
                    // InternalDockerCompose.g:1015:3: ( '\"no\"' )
                    // InternalDockerCompose.g:1015:4: '\"no\"'
                    {
                    match(input,17,FOLLOW_2); 

                    }

                     after(grammarAccess.getRestartPolicyAccess().getNoEnumLiteralDeclaration_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1019:2: ( ( 'always' ) )
                    {
                    // InternalDockerCompose.g:1019:2: ( ( 'always' ) )
                    // InternalDockerCompose.g:1020:3: ( 'always' )
                    {
                     before(grammarAccess.getRestartPolicyAccess().getAlwaysEnumLiteralDeclaration_1()); 
                    // InternalDockerCompose.g:1021:3: ( 'always' )
                    // InternalDockerCompose.g:1021:4: 'always'
                    {
                    match(input,18,FOLLOW_2); 

                    }

                     after(grammarAccess.getRestartPolicyAccess().getAlwaysEnumLiteralDeclaration_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1025:2: ( ( 'on-failure' ) )
                    {
                    // InternalDockerCompose.g:1025:2: ( ( 'on-failure' ) )
                    // InternalDockerCompose.g:1026:3: ( 'on-failure' )
                    {
                     before(grammarAccess.getRestartPolicyAccess().getOnfailureEnumLiteralDeclaration_2()); 
                    // InternalDockerCompose.g:1027:3: ( 'on-failure' )
                    // InternalDockerCompose.g:1027:4: 'on-failure'
                    {
                    match(input,19,FOLLOW_2); 

                    }

                     after(grammarAccess.getRestartPolicyAccess().getOnfailureEnumLiteralDeclaration_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:1031:2: ( ( 'unless-stopped' ) )
                    {
                    // InternalDockerCompose.g:1031:2: ( ( 'unless-stopped' ) )
                    // InternalDockerCompose.g:1032:3: ( 'unless-stopped' )
                    {
                     before(grammarAccess.getRestartPolicyAccess().getUnlessstoppedEnumLiteralDeclaration_3()); 
                    // InternalDockerCompose.g:1033:3: ( 'unless-stopped' )
                    // InternalDockerCompose.g:1033:4: 'unless-stopped'
                    {
                    match(input,20,FOLLOW_2); 

                    }

                     after(grammarAccess.getRestartPolicyAccess().getUnlessstoppedEnumLiteralDeclaration_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestartPolicy__Alternatives"


    // $ANTLR start "rule__AccessMode__Alternatives"
    // InternalDockerCompose.g:1041:1: rule__AccessMode__Alternatives : ( ( ( 'rw' ) ) | ( ( 'ro' ) ) | ( ( 'z' ) ) );
    public final void rule__AccessMode__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1045:1: ( ( ( 'rw' ) ) | ( ( 'ro' ) ) | ( ( 'z' ) ) )
            int alt13=3;
            switch ( input.LA(1) ) {
            case 21:
                {
                alt13=1;
                }
                break;
            case 22:
                {
                alt13=2;
                }
                break;
            case 23:
                {
                alt13=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }

            switch (alt13) {
                case 1 :
                    // InternalDockerCompose.g:1046:2: ( ( 'rw' ) )
                    {
                    // InternalDockerCompose.g:1046:2: ( ( 'rw' ) )
                    // InternalDockerCompose.g:1047:3: ( 'rw' )
                    {
                     before(grammarAccess.getAccessModeAccess().getRwEnumLiteralDeclaration_0()); 
                    // InternalDockerCompose.g:1048:3: ( 'rw' )
                    // InternalDockerCompose.g:1048:4: 'rw'
                    {
                    match(input,21,FOLLOW_2); 

                    }

                     after(grammarAccess.getAccessModeAccess().getRwEnumLiteralDeclaration_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1052:2: ( ( 'ro' ) )
                    {
                    // InternalDockerCompose.g:1052:2: ( ( 'ro' ) )
                    // InternalDockerCompose.g:1053:3: ( 'ro' )
                    {
                     before(grammarAccess.getAccessModeAccess().getRoEnumLiteralDeclaration_1()); 
                    // InternalDockerCompose.g:1054:3: ( 'ro' )
                    // InternalDockerCompose.g:1054:4: 'ro'
                    {
                    match(input,22,FOLLOW_2); 

                    }

                     after(grammarAccess.getAccessModeAccess().getRoEnumLiteralDeclaration_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1058:2: ( ( 'z' ) )
                    {
                    // InternalDockerCompose.g:1058:2: ( ( 'z' ) )
                    // InternalDockerCompose.g:1059:3: ( 'z' )
                    {
                     before(grammarAccess.getAccessModeAccess().getZEnumLiteralDeclaration_2()); 
                    // InternalDockerCompose.g:1060:3: ( 'z' )
                    // InternalDockerCompose.g:1060:4: 'z'
                    {
                    match(input,23,FOLLOW_2); 

                    }

                     after(grammarAccess.getAccessModeAccess().getZEnumLiteralDeclaration_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AccessMode__Alternatives"


    // $ANTLR start "rule__MountType__Alternatives"
    // InternalDockerCompose.g:1068:1: rule__MountType__Alternatives : ( ( ( 'volume' ) ) | ( ( 'bind' ) ) | ( ( 'tmpfs' ) ) | ( ( 'npipe' ) ) );
    public final void rule__MountType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1072:1: ( ( ( 'volume' ) ) | ( ( 'bind' ) ) | ( ( 'tmpfs' ) ) | ( ( 'npipe' ) ) )
            int alt14=4;
            switch ( input.LA(1) ) {
            case 24:
                {
                alt14=1;
                }
                break;
            case 25:
                {
                alt14=2;
                }
                break;
            case 26:
                {
                alt14=3;
                }
                break;
            case 27:
                {
                alt14=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }

            switch (alt14) {
                case 1 :
                    // InternalDockerCompose.g:1073:2: ( ( 'volume' ) )
                    {
                    // InternalDockerCompose.g:1073:2: ( ( 'volume' ) )
                    // InternalDockerCompose.g:1074:3: ( 'volume' )
                    {
                     before(grammarAccess.getMountTypeAccess().getVolumeEnumLiteralDeclaration_0()); 
                    // InternalDockerCompose.g:1075:3: ( 'volume' )
                    // InternalDockerCompose.g:1075:4: 'volume'
                    {
                    match(input,24,FOLLOW_2); 

                    }

                     after(grammarAccess.getMountTypeAccess().getVolumeEnumLiteralDeclaration_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1079:2: ( ( 'bind' ) )
                    {
                    // InternalDockerCompose.g:1079:2: ( ( 'bind' ) )
                    // InternalDockerCompose.g:1080:3: ( 'bind' )
                    {
                     before(grammarAccess.getMountTypeAccess().getBindEnumLiteralDeclaration_1()); 
                    // InternalDockerCompose.g:1081:3: ( 'bind' )
                    // InternalDockerCompose.g:1081:4: 'bind'
                    {
                    match(input,25,FOLLOW_2); 

                    }

                     after(grammarAccess.getMountTypeAccess().getBindEnumLiteralDeclaration_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1085:2: ( ( 'tmpfs' ) )
                    {
                    // InternalDockerCompose.g:1085:2: ( ( 'tmpfs' ) )
                    // InternalDockerCompose.g:1086:3: ( 'tmpfs' )
                    {
                     before(grammarAccess.getMountTypeAccess().getTmpfsEnumLiteralDeclaration_2()); 
                    // InternalDockerCompose.g:1087:3: ( 'tmpfs' )
                    // InternalDockerCompose.g:1087:4: 'tmpfs'
                    {
                    match(input,26,FOLLOW_2); 

                    }

                     after(grammarAccess.getMountTypeAccess().getTmpfsEnumLiteralDeclaration_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:1091:2: ( ( 'npipe' ) )
                    {
                    // InternalDockerCompose.g:1091:2: ( ( 'npipe' ) )
                    // InternalDockerCompose.g:1092:3: ( 'npipe' )
                    {
                     before(grammarAccess.getMountTypeAccess().getNpipeEnumLiteralDeclaration_3()); 
                    // InternalDockerCompose.g:1093:3: ( 'npipe' )
                    // InternalDockerCompose.g:1093:4: 'npipe'
                    {
                    match(input,27,FOLLOW_2); 

                    }

                     after(grammarAccess.getMountTypeAccess().getNpipeEnumLiteralDeclaration_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MountType__Alternatives"


    // $ANTLR start "rule__PropagationType__Alternatives"
    // InternalDockerCompose.g:1101:1: rule__PropagationType__Alternatives : ( ( ( 'rprivate' ) ) | ( ( 'private' ) ) | ( ( 'rshared' ) ) | ( ( 'shared' ) ) | ( ( 'rslave' ) ) | ( ( 'slave' ) ) );
    public final void rule__PropagationType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1105:1: ( ( ( 'rprivate' ) ) | ( ( 'private' ) ) | ( ( 'rshared' ) ) | ( ( 'shared' ) ) | ( ( 'rslave' ) ) | ( ( 'slave' ) ) )
            int alt15=6;
            switch ( input.LA(1) ) {
            case 28:
                {
                alt15=1;
                }
                break;
            case 29:
                {
                alt15=2;
                }
                break;
            case 30:
                {
                alt15=3;
                }
                break;
            case 31:
                {
                alt15=4;
                }
                break;
            case 32:
                {
                alt15=5;
                }
                break;
            case 33:
                {
                alt15=6;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }

            switch (alt15) {
                case 1 :
                    // InternalDockerCompose.g:1106:2: ( ( 'rprivate' ) )
                    {
                    // InternalDockerCompose.g:1106:2: ( ( 'rprivate' ) )
                    // InternalDockerCompose.g:1107:3: ( 'rprivate' )
                    {
                     before(grammarAccess.getPropagationTypeAccess().getRprivateEnumLiteralDeclaration_0()); 
                    // InternalDockerCompose.g:1108:3: ( 'rprivate' )
                    // InternalDockerCompose.g:1108:4: 'rprivate'
                    {
                    match(input,28,FOLLOW_2); 

                    }

                     after(grammarAccess.getPropagationTypeAccess().getRprivateEnumLiteralDeclaration_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1112:2: ( ( 'private' ) )
                    {
                    // InternalDockerCompose.g:1112:2: ( ( 'private' ) )
                    // InternalDockerCompose.g:1113:3: ( 'private' )
                    {
                     before(grammarAccess.getPropagationTypeAccess().getPrivateEnumLiteralDeclaration_1()); 
                    // InternalDockerCompose.g:1114:3: ( 'private' )
                    // InternalDockerCompose.g:1114:4: 'private'
                    {
                    match(input,29,FOLLOW_2); 

                    }

                     after(grammarAccess.getPropagationTypeAccess().getPrivateEnumLiteralDeclaration_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1118:2: ( ( 'rshared' ) )
                    {
                    // InternalDockerCompose.g:1118:2: ( ( 'rshared' ) )
                    // InternalDockerCompose.g:1119:3: ( 'rshared' )
                    {
                     before(grammarAccess.getPropagationTypeAccess().getRsharedEnumLiteralDeclaration_2()); 
                    // InternalDockerCompose.g:1120:3: ( 'rshared' )
                    // InternalDockerCompose.g:1120:4: 'rshared'
                    {
                    match(input,30,FOLLOW_2); 

                    }

                     after(grammarAccess.getPropagationTypeAccess().getRsharedEnumLiteralDeclaration_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:1124:2: ( ( 'shared' ) )
                    {
                    // InternalDockerCompose.g:1124:2: ( ( 'shared' ) )
                    // InternalDockerCompose.g:1125:3: ( 'shared' )
                    {
                     before(grammarAccess.getPropagationTypeAccess().getSharedEnumLiteralDeclaration_3()); 
                    // InternalDockerCompose.g:1126:3: ( 'shared' )
                    // InternalDockerCompose.g:1126:4: 'shared'
                    {
                    match(input,31,FOLLOW_2); 

                    }

                     after(grammarAccess.getPropagationTypeAccess().getSharedEnumLiteralDeclaration_3()); 

                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:1130:2: ( ( 'rslave' ) )
                    {
                    // InternalDockerCompose.g:1130:2: ( ( 'rslave' ) )
                    // InternalDockerCompose.g:1131:3: ( 'rslave' )
                    {
                     before(grammarAccess.getPropagationTypeAccess().getRslaveEnumLiteralDeclaration_4()); 
                    // InternalDockerCompose.g:1132:3: ( 'rslave' )
                    // InternalDockerCompose.g:1132:4: 'rslave'
                    {
                    match(input,32,FOLLOW_2); 

                    }

                     after(grammarAccess.getPropagationTypeAccess().getRslaveEnumLiteralDeclaration_4()); 

                    }


                    }
                    break;
                case 6 :
                    // InternalDockerCompose.g:1136:2: ( ( 'slave' ) )
                    {
                    // InternalDockerCompose.g:1136:2: ( ( 'slave' ) )
                    // InternalDockerCompose.g:1137:3: ( 'slave' )
                    {
                     before(grammarAccess.getPropagationTypeAccess().getSlaveEnumLiteralDeclaration_5()); 
                    // InternalDockerCompose.g:1138:3: ( 'slave' )
                    // InternalDockerCompose.g:1138:4: 'slave'
                    {
                    match(input,33,FOLLOW_2); 

                    }

                     after(grammarAccess.getPropagationTypeAccess().getSlaveEnumLiteralDeclaration_5()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PropagationType__Alternatives"


    // $ANTLR start "rule__DockerCompose__Group_0__0"
    // InternalDockerCompose.g:1146:1: rule__DockerCompose__Group_0__0 : rule__DockerCompose__Group_0__0__Impl rule__DockerCompose__Group_0__1 ;
    public final void rule__DockerCompose__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1150:1: ( rule__DockerCompose__Group_0__0__Impl rule__DockerCompose__Group_0__1 )
            // InternalDockerCompose.g:1151:2: rule__DockerCompose__Group_0__0__Impl rule__DockerCompose__Group_0__1
            {
            pushFollow(FOLLOW_4);
            rule__DockerCompose__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_0__0"


    // $ANTLR start "rule__DockerCompose__Group_0__0__Impl"
    // InternalDockerCompose.g:1158:1: rule__DockerCompose__Group_0__0__Impl : ( 'version:' ) ;
    public final void rule__DockerCompose__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1162:1: ( ( 'version:' ) )
            // InternalDockerCompose.g:1163:1: ( 'version:' )
            {
            // InternalDockerCompose.g:1163:1: ( 'version:' )
            // InternalDockerCompose.g:1164:2: 'version:'
            {
             before(grammarAccess.getDockerComposeAccess().getVersionKeyword_0_0()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getVersionKeyword_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_0__0__Impl"


    // $ANTLR start "rule__DockerCompose__Group_0__1"
    // InternalDockerCompose.g:1173:1: rule__DockerCompose__Group_0__1 : rule__DockerCompose__Group_0__1__Impl ;
    public final void rule__DockerCompose__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1177:1: ( rule__DockerCompose__Group_0__1__Impl )
            // InternalDockerCompose.g:1178:2: rule__DockerCompose__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_0__1"


    // $ANTLR start "rule__DockerCompose__Group_0__1__Impl"
    // InternalDockerCompose.g:1184:1: rule__DockerCompose__Group_0__1__Impl : ( RULE_VERSION ) ;
    public final void rule__DockerCompose__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1188:1: ( ( RULE_VERSION ) )
            // InternalDockerCompose.g:1189:1: ( RULE_VERSION )
            {
            // InternalDockerCompose.g:1189:1: ( RULE_VERSION )
            // InternalDockerCompose.g:1190:2: RULE_VERSION
            {
             before(grammarAccess.getDockerComposeAccess().getVERSIONTerminalRuleCall_0_1()); 
            match(input,RULE_VERSION,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getVERSIONTerminalRuleCall_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_0__1__Impl"


    // $ANTLR start "rule__DockerCompose__Group_1__0"
    // InternalDockerCompose.g:1200:1: rule__DockerCompose__Group_1__0 : rule__DockerCompose__Group_1__0__Impl rule__DockerCompose__Group_1__1 ;
    public final void rule__DockerCompose__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1204:1: ( rule__DockerCompose__Group_1__0__Impl rule__DockerCompose__Group_1__1 )
            // InternalDockerCompose.g:1205:2: rule__DockerCompose__Group_1__0__Impl rule__DockerCompose__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__DockerCompose__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_1__0"


    // $ANTLR start "rule__DockerCompose__Group_1__0__Impl"
    // InternalDockerCompose.g:1212:1: rule__DockerCompose__Group_1__0__Impl : ( 'services:' ) ;
    public final void rule__DockerCompose__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1216:1: ( ( 'services:' ) )
            // InternalDockerCompose.g:1217:1: ( 'services:' )
            {
            // InternalDockerCompose.g:1217:1: ( 'services:' )
            // InternalDockerCompose.g:1218:2: 'services:'
            {
             before(grammarAccess.getDockerComposeAccess().getServicesKeyword_1_0()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getServicesKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_1__0__Impl"


    // $ANTLR start "rule__DockerCompose__Group_1__1"
    // InternalDockerCompose.g:1227:1: rule__DockerCompose__Group_1__1 : rule__DockerCompose__Group_1__1__Impl ;
    public final void rule__DockerCompose__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1231:1: ( rule__DockerCompose__Group_1__1__Impl )
            // InternalDockerCompose.g:1232:2: rule__DockerCompose__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_1__1"


    // $ANTLR start "rule__DockerCompose__Group_1__1__Impl"
    // InternalDockerCompose.g:1238:1: rule__DockerCompose__Group_1__1__Impl : ( ( ( rule__DockerCompose__ServicesAssignment_1_1 ) ) ( ( rule__DockerCompose__ServicesAssignment_1_1 )* ) ) ;
    public final void rule__DockerCompose__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1242:1: ( ( ( ( rule__DockerCompose__ServicesAssignment_1_1 ) ) ( ( rule__DockerCompose__ServicesAssignment_1_1 )* ) ) )
            // InternalDockerCompose.g:1243:1: ( ( ( rule__DockerCompose__ServicesAssignment_1_1 ) ) ( ( rule__DockerCompose__ServicesAssignment_1_1 )* ) )
            {
            // InternalDockerCompose.g:1243:1: ( ( ( rule__DockerCompose__ServicesAssignment_1_1 ) ) ( ( rule__DockerCompose__ServicesAssignment_1_1 )* ) )
            // InternalDockerCompose.g:1244:2: ( ( rule__DockerCompose__ServicesAssignment_1_1 ) ) ( ( rule__DockerCompose__ServicesAssignment_1_1 )* )
            {
            // InternalDockerCompose.g:1244:2: ( ( rule__DockerCompose__ServicesAssignment_1_1 ) )
            // InternalDockerCompose.g:1245:3: ( rule__DockerCompose__ServicesAssignment_1_1 )
            {
             before(grammarAccess.getDockerComposeAccess().getServicesAssignment_1_1()); 
            // InternalDockerCompose.g:1246:3: ( rule__DockerCompose__ServicesAssignment_1_1 )
            // InternalDockerCompose.g:1246:4: rule__DockerCompose__ServicesAssignment_1_1
            {
            pushFollow(FOLLOW_6);
            rule__DockerCompose__ServicesAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getServicesAssignment_1_1()); 

            }

            // InternalDockerCompose.g:1249:2: ( ( rule__DockerCompose__ServicesAssignment_1_1 )* )
            // InternalDockerCompose.g:1250:3: ( rule__DockerCompose__ServicesAssignment_1_1 )*
            {
             before(grammarAccess.getDockerComposeAccess().getServicesAssignment_1_1()); 
            // InternalDockerCompose.g:1251:3: ( rule__DockerCompose__ServicesAssignment_1_1 )*
            loop16:
            do {
                int alt16=2;
                int LA16_0 = input.LA(1);

                if ( ((LA16_0>=RULE_STRING && LA16_0<=RULE_ID)) ) {
                    alt16=1;
                }


                switch (alt16) {
            	case 1 :
            	    // InternalDockerCompose.g:1251:4: rule__DockerCompose__ServicesAssignment_1_1
            	    {
            	    pushFollow(FOLLOW_6);
            	    rule__DockerCompose__ServicesAssignment_1_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop16;
                }
            } while (true);

             after(grammarAccess.getDockerComposeAccess().getServicesAssignment_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_1__1__Impl"


    // $ANTLR start "rule__DockerCompose__Group_2__0"
    // InternalDockerCompose.g:1261:1: rule__DockerCompose__Group_2__0 : rule__DockerCompose__Group_2__0__Impl rule__DockerCompose__Group_2__1 ;
    public final void rule__DockerCompose__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1265:1: ( rule__DockerCompose__Group_2__0__Impl rule__DockerCompose__Group_2__1 )
            // InternalDockerCompose.g:1266:2: rule__DockerCompose__Group_2__0__Impl rule__DockerCompose__Group_2__1
            {
            pushFollow(FOLLOW_5);
            rule__DockerCompose__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_2__0"


    // $ANTLR start "rule__DockerCompose__Group_2__0__Impl"
    // InternalDockerCompose.g:1273:1: rule__DockerCompose__Group_2__0__Impl : ( 'networks:' ) ;
    public final void rule__DockerCompose__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1277:1: ( ( 'networks:' ) )
            // InternalDockerCompose.g:1278:1: ( 'networks:' )
            {
            // InternalDockerCompose.g:1278:1: ( 'networks:' )
            // InternalDockerCompose.g:1279:2: 'networks:'
            {
             before(grammarAccess.getDockerComposeAccess().getNetworksKeyword_2_0()); 
            match(input,36,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getNetworksKeyword_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_2__0__Impl"


    // $ANTLR start "rule__DockerCompose__Group_2__1"
    // InternalDockerCompose.g:1288:1: rule__DockerCompose__Group_2__1 : rule__DockerCompose__Group_2__1__Impl ;
    public final void rule__DockerCompose__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1292:1: ( rule__DockerCompose__Group_2__1__Impl )
            // InternalDockerCompose.g:1293:2: rule__DockerCompose__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_2__1"


    // $ANTLR start "rule__DockerCompose__Group_2__1__Impl"
    // InternalDockerCompose.g:1299:1: rule__DockerCompose__Group_2__1__Impl : ( ( ( rule__DockerCompose__NetworksAssignment_2_1 ) ) ( ( rule__DockerCompose__NetworksAssignment_2_1 )* ) ) ;
    public final void rule__DockerCompose__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1303:1: ( ( ( ( rule__DockerCompose__NetworksAssignment_2_1 ) ) ( ( rule__DockerCompose__NetworksAssignment_2_1 )* ) ) )
            // InternalDockerCompose.g:1304:1: ( ( ( rule__DockerCompose__NetworksAssignment_2_1 ) ) ( ( rule__DockerCompose__NetworksAssignment_2_1 )* ) )
            {
            // InternalDockerCompose.g:1304:1: ( ( ( rule__DockerCompose__NetworksAssignment_2_1 ) ) ( ( rule__DockerCompose__NetworksAssignment_2_1 )* ) )
            // InternalDockerCompose.g:1305:2: ( ( rule__DockerCompose__NetworksAssignment_2_1 ) ) ( ( rule__DockerCompose__NetworksAssignment_2_1 )* )
            {
            // InternalDockerCompose.g:1305:2: ( ( rule__DockerCompose__NetworksAssignment_2_1 ) )
            // InternalDockerCompose.g:1306:3: ( rule__DockerCompose__NetworksAssignment_2_1 )
            {
             before(grammarAccess.getDockerComposeAccess().getNetworksAssignment_2_1()); 
            // InternalDockerCompose.g:1307:3: ( rule__DockerCompose__NetworksAssignment_2_1 )
            // InternalDockerCompose.g:1307:4: rule__DockerCompose__NetworksAssignment_2_1
            {
            pushFollow(FOLLOW_6);
            rule__DockerCompose__NetworksAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getNetworksAssignment_2_1()); 

            }

            // InternalDockerCompose.g:1310:2: ( ( rule__DockerCompose__NetworksAssignment_2_1 )* )
            // InternalDockerCompose.g:1311:3: ( rule__DockerCompose__NetworksAssignment_2_1 )*
            {
             before(grammarAccess.getDockerComposeAccess().getNetworksAssignment_2_1()); 
            // InternalDockerCompose.g:1312:3: ( rule__DockerCompose__NetworksAssignment_2_1 )*
            loop17:
            do {
                int alt17=2;
                int LA17_0 = input.LA(1);

                if ( ((LA17_0>=RULE_STRING && LA17_0<=RULE_ID)) ) {
                    alt17=1;
                }


                switch (alt17) {
            	case 1 :
            	    // InternalDockerCompose.g:1312:4: rule__DockerCompose__NetworksAssignment_2_1
            	    {
            	    pushFollow(FOLLOW_6);
            	    rule__DockerCompose__NetworksAssignment_2_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop17;
                }
            } while (true);

             after(grammarAccess.getDockerComposeAccess().getNetworksAssignment_2_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_2__1__Impl"


    // $ANTLR start "rule__DockerCompose__Group_3__0"
    // InternalDockerCompose.g:1322:1: rule__DockerCompose__Group_3__0 : rule__DockerCompose__Group_3__0__Impl rule__DockerCompose__Group_3__1 ;
    public final void rule__DockerCompose__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1326:1: ( rule__DockerCompose__Group_3__0__Impl rule__DockerCompose__Group_3__1 )
            // InternalDockerCompose.g:1327:2: rule__DockerCompose__Group_3__0__Impl rule__DockerCompose__Group_3__1
            {
            pushFollow(FOLLOW_5);
            rule__DockerCompose__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_3__0"


    // $ANTLR start "rule__DockerCompose__Group_3__0__Impl"
    // InternalDockerCompose.g:1334:1: rule__DockerCompose__Group_3__0__Impl : ( 'volumes:' ) ;
    public final void rule__DockerCompose__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1338:1: ( ( 'volumes:' ) )
            // InternalDockerCompose.g:1339:1: ( 'volumes:' )
            {
            // InternalDockerCompose.g:1339:1: ( 'volumes:' )
            // InternalDockerCompose.g:1340:2: 'volumes:'
            {
             before(grammarAccess.getDockerComposeAccess().getVolumesKeyword_3_0()); 
            match(input,37,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getVolumesKeyword_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_3__0__Impl"


    // $ANTLR start "rule__DockerCompose__Group_3__1"
    // InternalDockerCompose.g:1349:1: rule__DockerCompose__Group_3__1 : rule__DockerCompose__Group_3__1__Impl ;
    public final void rule__DockerCompose__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1353:1: ( rule__DockerCompose__Group_3__1__Impl )
            // InternalDockerCompose.g:1354:2: rule__DockerCompose__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_3__1"


    // $ANTLR start "rule__DockerCompose__Group_3__1__Impl"
    // InternalDockerCompose.g:1360:1: rule__DockerCompose__Group_3__1__Impl : ( ( ( rule__DockerCompose__VolumesAssignment_3_1 ) ) ( ( rule__DockerCompose__VolumesAssignment_3_1 )* ) ) ;
    public final void rule__DockerCompose__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1364:1: ( ( ( ( rule__DockerCompose__VolumesAssignment_3_1 ) ) ( ( rule__DockerCompose__VolumesAssignment_3_1 )* ) ) )
            // InternalDockerCompose.g:1365:1: ( ( ( rule__DockerCompose__VolumesAssignment_3_1 ) ) ( ( rule__DockerCompose__VolumesAssignment_3_1 )* ) )
            {
            // InternalDockerCompose.g:1365:1: ( ( ( rule__DockerCompose__VolumesAssignment_3_1 ) ) ( ( rule__DockerCompose__VolumesAssignment_3_1 )* ) )
            // InternalDockerCompose.g:1366:2: ( ( rule__DockerCompose__VolumesAssignment_3_1 ) ) ( ( rule__DockerCompose__VolumesAssignment_3_1 )* )
            {
            // InternalDockerCompose.g:1366:2: ( ( rule__DockerCompose__VolumesAssignment_3_1 ) )
            // InternalDockerCompose.g:1367:3: ( rule__DockerCompose__VolumesAssignment_3_1 )
            {
             before(grammarAccess.getDockerComposeAccess().getVolumesAssignment_3_1()); 
            // InternalDockerCompose.g:1368:3: ( rule__DockerCompose__VolumesAssignment_3_1 )
            // InternalDockerCompose.g:1368:4: rule__DockerCompose__VolumesAssignment_3_1
            {
            pushFollow(FOLLOW_6);
            rule__DockerCompose__VolumesAssignment_3_1();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getVolumesAssignment_3_1()); 

            }

            // InternalDockerCompose.g:1371:2: ( ( rule__DockerCompose__VolumesAssignment_3_1 )* )
            // InternalDockerCompose.g:1372:3: ( rule__DockerCompose__VolumesAssignment_3_1 )*
            {
             before(grammarAccess.getDockerComposeAccess().getVolumesAssignment_3_1()); 
            // InternalDockerCompose.g:1373:3: ( rule__DockerCompose__VolumesAssignment_3_1 )*
            loop18:
            do {
                int alt18=2;
                int LA18_0 = input.LA(1);

                if ( ((LA18_0>=RULE_STRING && LA18_0<=RULE_ID)) ) {
                    alt18=1;
                }


                switch (alt18) {
            	case 1 :
            	    // InternalDockerCompose.g:1373:4: rule__DockerCompose__VolumesAssignment_3_1
            	    {
            	    pushFollow(FOLLOW_6);
            	    rule__DockerCompose__VolumesAssignment_3_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop18;
                }
            } while (true);

             after(grammarAccess.getDockerComposeAccess().getVolumesAssignment_3_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_3__1__Impl"


    // $ANTLR start "rule__DockerCompose__Group_4__0"
    // InternalDockerCompose.g:1383:1: rule__DockerCompose__Group_4__0 : rule__DockerCompose__Group_4__0__Impl rule__DockerCompose__Group_4__1 ;
    public final void rule__DockerCompose__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1387:1: ( rule__DockerCompose__Group_4__0__Impl rule__DockerCompose__Group_4__1 )
            // InternalDockerCompose.g:1388:2: rule__DockerCompose__Group_4__0__Impl rule__DockerCompose__Group_4__1
            {
            pushFollow(FOLLOW_5);
            rule__DockerCompose__Group_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_4__0"


    // $ANTLR start "rule__DockerCompose__Group_4__0__Impl"
    // InternalDockerCompose.g:1395:1: rule__DockerCompose__Group_4__0__Impl : ( 'configs:' ) ;
    public final void rule__DockerCompose__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1399:1: ( ( 'configs:' ) )
            // InternalDockerCompose.g:1400:1: ( 'configs:' )
            {
            // InternalDockerCompose.g:1400:1: ( 'configs:' )
            // InternalDockerCompose.g:1401:2: 'configs:'
            {
             before(grammarAccess.getDockerComposeAccess().getConfigsKeyword_4_0()); 
            match(input,38,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getConfigsKeyword_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_4__0__Impl"


    // $ANTLR start "rule__DockerCompose__Group_4__1"
    // InternalDockerCompose.g:1410:1: rule__DockerCompose__Group_4__1 : rule__DockerCompose__Group_4__1__Impl ;
    public final void rule__DockerCompose__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1414:1: ( rule__DockerCompose__Group_4__1__Impl )
            // InternalDockerCompose.g:1415:2: rule__DockerCompose__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_4__1"


    // $ANTLR start "rule__DockerCompose__Group_4__1__Impl"
    // InternalDockerCompose.g:1421:1: rule__DockerCompose__Group_4__1__Impl : ( ( ( rule__DockerCompose__ConfigsAssignment_4_1 ) ) ( ( rule__DockerCompose__ConfigsAssignment_4_1 )* ) ) ;
    public final void rule__DockerCompose__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1425:1: ( ( ( ( rule__DockerCompose__ConfigsAssignment_4_1 ) ) ( ( rule__DockerCompose__ConfigsAssignment_4_1 )* ) ) )
            // InternalDockerCompose.g:1426:1: ( ( ( rule__DockerCompose__ConfigsAssignment_4_1 ) ) ( ( rule__DockerCompose__ConfigsAssignment_4_1 )* ) )
            {
            // InternalDockerCompose.g:1426:1: ( ( ( rule__DockerCompose__ConfigsAssignment_4_1 ) ) ( ( rule__DockerCompose__ConfigsAssignment_4_1 )* ) )
            // InternalDockerCompose.g:1427:2: ( ( rule__DockerCompose__ConfigsAssignment_4_1 ) ) ( ( rule__DockerCompose__ConfigsAssignment_4_1 )* )
            {
            // InternalDockerCompose.g:1427:2: ( ( rule__DockerCompose__ConfigsAssignment_4_1 ) )
            // InternalDockerCompose.g:1428:3: ( rule__DockerCompose__ConfigsAssignment_4_1 )
            {
             before(grammarAccess.getDockerComposeAccess().getConfigsAssignment_4_1()); 
            // InternalDockerCompose.g:1429:3: ( rule__DockerCompose__ConfigsAssignment_4_1 )
            // InternalDockerCompose.g:1429:4: rule__DockerCompose__ConfigsAssignment_4_1
            {
            pushFollow(FOLLOW_6);
            rule__DockerCompose__ConfigsAssignment_4_1();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getConfigsAssignment_4_1()); 

            }

            // InternalDockerCompose.g:1432:2: ( ( rule__DockerCompose__ConfigsAssignment_4_1 )* )
            // InternalDockerCompose.g:1433:3: ( rule__DockerCompose__ConfigsAssignment_4_1 )*
            {
             before(grammarAccess.getDockerComposeAccess().getConfigsAssignment_4_1()); 
            // InternalDockerCompose.g:1434:3: ( rule__DockerCompose__ConfigsAssignment_4_1 )*
            loop19:
            do {
                int alt19=2;
                int LA19_0 = input.LA(1);

                if ( ((LA19_0>=RULE_STRING && LA19_0<=RULE_ID)) ) {
                    alt19=1;
                }


                switch (alt19) {
            	case 1 :
            	    // InternalDockerCompose.g:1434:4: rule__DockerCompose__ConfigsAssignment_4_1
            	    {
            	    pushFollow(FOLLOW_6);
            	    rule__DockerCompose__ConfigsAssignment_4_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop19;
                }
            } while (true);

             after(grammarAccess.getDockerComposeAccess().getConfigsAssignment_4_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_4__1__Impl"


    // $ANTLR start "rule__DockerCompose__Group_5__0"
    // InternalDockerCompose.g:1444:1: rule__DockerCompose__Group_5__0 : rule__DockerCompose__Group_5__0__Impl rule__DockerCompose__Group_5__1 ;
    public final void rule__DockerCompose__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1448:1: ( rule__DockerCompose__Group_5__0__Impl rule__DockerCompose__Group_5__1 )
            // InternalDockerCompose.g:1449:2: rule__DockerCompose__Group_5__0__Impl rule__DockerCompose__Group_5__1
            {
            pushFollow(FOLLOW_5);
            rule__DockerCompose__Group_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_5__0"


    // $ANTLR start "rule__DockerCompose__Group_5__0__Impl"
    // InternalDockerCompose.g:1456:1: rule__DockerCompose__Group_5__0__Impl : ( 'secrets:' ) ;
    public final void rule__DockerCompose__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1460:1: ( ( 'secrets:' ) )
            // InternalDockerCompose.g:1461:1: ( 'secrets:' )
            {
            // InternalDockerCompose.g:1461:1: ( 'secrets:' )
            // InternalDockerCompose.g:1462:2: 'secrets:'
            {
             before(grammarAccess.getDockerComposeAccess().getSecretsKeyword_5_0()); 
            match(input,39,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getSecretsKeyword_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_5__0__Impl"


    // $ANTLR start "rule__DockerCompose__Group_5__1"
    // InternalDockerCompose.g:1471:1: rule__DockerCompose__Group_5__1 : rule__DockerCompose__Group_5__1__Impl ;
    public final void rule__DockerCompose__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1475:1: ( rule__DockerCompose__Group_5__1__Impl )
            // InternalDockerCompose.g:1476:2: rule__DockerCompose__Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_5__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_5__1"


    // $ANTLR start "rule__DockerCompose__Group_5__1__Impl"
    // InternalDockerCompose.g:1482:1: rule__DockerCompose__Group_5__1__Impl : ( ( ( rule__DockerCompose__SecretsAssignment_5_1 ) ) ( ( rule__DockerCompose__SecretsAssignment_5_1 )* ) ) ;
    public final void rule__DockerCompose__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1486:1: ( ( ( ( rule__DockerCompose__SecretsAssignment_5_1 ) ) ( ( rule__DockerCompose__SecretsAssignment_5_1 )* ) ) )
            // InternalDockerCompose.g:1487:1: ( ( ( rule__DockerCompose__SecretsAssignment_5_1 ) ) ( ( rule__DockerCompose__SecretsAssignment_5_1 )* ) )
            {
            // InternalDockerCompose.g:1487:1: ( ( ( rule__DockerCompose__SecretsAssignment_5_1 ) ) ( ( rule__DockerCompose__SecretsAssignment_5_1 )* ) )
            // InternalDockerCompose.g:1488:2: ( ( rule__DockerCompose__SecretsAssignment_5_1 ) ) ( ( rule__DockerCompose__SecretsAssignment_5_1 )* )
            {
            // InternalDockerCompose.g:1488:2: ( ( rule__DockerCompose__SecretsAssignment_5_1 ) )
            // InternalDockerCompose.g:1489:3: ( rule__DockerCompose__SecretsAssignment_5_1 )
            {
             before(grammarAccess.getDockerComposeAccess().getSecretsAssignment_5_1()); 
            // InternalDockerCompose.g:1490:3: ( rule__DockerCompose__SecretsAssignment_5_1 )
            // InternalDockerCompose.g:1490:4: rule__DockerCompose__SecretsAssignment_5_1
            {
            pushFollow(FOLLOW_6);
            rule__DockerCompose__SecretsAssignment_5_1();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getSecretsAssignment_5_1()); 

            }

            // InternalDockerCompose.g:1493:2: ( ( rule__DockerCompose__SecretsAssignment_5_1 )* )
            // InternalDockerCompose.g:1494:3: ( rule__DockerCompose__SecretsAssignment_5_1 )*
            {
             before(grammarAccess.getDockerComposeAccess().getSecretsAssignment_5_1()); 
            // InternalDockerCompose.g:1495:3: ( rule__DockerCompose__SecretsAssignment_5_1 )*
            loop20:
            do {
                int alt20=2;
                int LA20_0 = input.LA(1);

                if ( ((LA20_0>=RULE_STRING && LA20_0<=RULE_ID)) ) {
                    alt20=1;
                }


                switch (alt20) {
            	case 1 :
            	    // InternalDockerCompose.g:1495:4: rule__DockerCompose__SecretsAssignment_5_1
            	    {
            	    pushFollow(FOLLOW_6);
            	    rule__DockerCompose__SecretsAssignment_5_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop20;
                }
            } while (true);

             after(grammarAccess.getDockerComposeAccess().getSecretsAssignment_5_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_5__1__Impl"


    // $ANTLR start "rule__Service__Group__0"
    // InternalDockerCompose.g:1505:1: rule__Service__Group__0 : rule__Service__Group__0__Impl rule__Service__Group__1 ;
    public final void rule__Service__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1509:1: ( rule__Service__Group__0__Impl rule__Service__Group__1 )
            // InternalDockerCompose.g:1510:2: rule__Service__Group__0__Impl rule__Service__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__Service__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__0"


    // $ANTLR start "rule__Service__Group__0__Impl"
    // InternalDockerCompose.g:1517:1: rule__Service__Group__0__Impl : ( () ) ;
    public final void rule__Service__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1521:1: ( ( () ) )
            // InternalDockerCompose.g:1522:1: ( () )
            {
            // InternalDockerCompose.g:1522:1: ( () )
            // InternalDockerCompose.g:1523:2: ()
            {
             before(grammarAccess.getServiceAccess().getServiceAction_0()); 
            // InternalDockerCompose.g:1524:2: ()
            // InternalDockerCompose.g:1524:3: 
            {
            }

             after(grammarAccess.getServiceAccess().getServiceAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__0__Impl"


    // $ANTLR start "rule__Service__Group__1"
    // InternalDockerCompose.g:1532:1: rule__Service__Group__1 : rule__Service__Group__1__Impl rule__Service__Group__2 ;
    public final void rule__Service__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1536:1: ( rule__Service__Group__1__Impl rule__Service__Group__2 )
            // InternalDockerCompose.g:1537:2: rule__Service__Group__1__Impl rule__Service__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__Service__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__1"


    // $ANTLR start "rule__Service__Group__1__Impl"
    // InternalDockerCompose.g:1544:1: rule__Service__Group__1__Impl : ( ( rule__Service__NameAssignment_1 ) ) ;
    public final void rule__Service__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1548:1: ( ( ( rule__Service__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:1549:1: ( ( rule__Service__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:1549:1: ( ( rule__Service__NameAssignment_1 ) )
            // InternalDockerCompose.g:1550:2: ( rule__Service__NameAssignment_1 )
            {
             before(grammarAccess.getServiceAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:1551:2: ( rule__Service__NameAssignment_1 )
            // InternalDockerCompose.g:1551:3: rule__Service__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__1__Impl"


    // $ANTLR start "rule__Service__Group__2"
    // InternalDockerCompose.g:1559:1: rule__Service__Group__2 : rule__Service__Group__2__Impl rule__Service__Group__3 ;
    public final void rule__Service__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1563:1: ( rule__Service__Group__2__Impl rule__Service__Group__3 )
            // InternalDockerCompose.g:1564:2: rule__Service__Group__2__Impl rule__Service__Group__3
            {
            pushFollow(FOLLOW_8);
            rule__Service__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__2"


    // $ANTLR start "rule__Service__Group__2__Impl"
    // InternalDockerCompose.g:1571:1: rule__Service__Group__2__Impl : ( ':' ) ;
    public final void rule__Service__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1575:1: ( ( ':' ) )
            // InternalDockerCompose.g:1576:1: ( ':' )
            {
            // InternalDockerCompose.g:1576:1: ( ':' )
            // InternalDockerCompose.g:1577:2: ':'
            {
             before(grammarAccess.getServiceAccess().getColonKeyword_2()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__2__Impl"


    // $ANTLR start "rule__Service__Group__3"
    // InternalDockerCompose.g:1586:1: rule__Service__Group__3 : rule__Service__Group__3__Impl ;
    public final void rule__Service__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1590:1: ( rule__Service__Group__3__Impl )
            // InternalDockerCompose.g:1591:2: rule__Service__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__3"


    // $ANTLR start "rule__Service__Group__3__Impl"
    // InternalDockerCompose.g:1597:1: rule__Service__Group__3__Impl : ( ( rule__Service__UnorderedGroup_3 ) ) ;
    public final void rule__Service__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1601:1: ( ( ( rule__Service__UnorderedGroup_3 ) ) )
            // InternalDockerCompose.g:1602:1: ( ( rule__Service__UnorderedGroup_3 ) )
            {
            // InternalDockerCompose.g:1602:1: ( ( rule__Service__UnorderedGroup_3 ) )
            // InternalDockerCompose.g:1603:2: ( rule__Service__UnorderedGroup_3 )
            {
             before(grammarAccess.getServiceAccess().getUnorderedGroup_3()); 
            // InternalDockerCompose.g:1604:2: ( rule__Service__UnorderedGroup_3 )
            // InternalDockerCompose.g:1604:3: rule__Service__UnorderedGroup_3
            {
            pushFollow(FOLLOW_2);
            rule__Service__UnorderedGroup_3();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getUnorderedGroup_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__3__Impl"


    // $ANTLR start "rule__Service__Group_3_0_0__0"
    // InternalDockerCompose.g:1613:1: rule__Service__Group_3_0_0__0 : rule__Service__Group_3_0_0__0__Impl rule__Service__Group_3_0_0__1 ;
    public final void rule__Service__Group_3_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1617:1: ( rule__Service__Group_3_0_0__0__Impl rule__Service__Group_3_0_0__1 )
            // InternalDockerCompose.g:1618:2: rule__Service__Group_3_0_0__0__Impl rule__Service__Group_3_0_0__1
            {
            pushFollow(FOLLOW_9);
            rule__Service__Group_3_0_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_0_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0_0__0"


    // $ANTLR start "rule__Service__Group_3_0_0__0__Impl"
    // InternalDockerCompose.g:1625:1: rule__Service__Group_3_0_0__0__Impl : ( 'build:' ) ;
    public final void rule__Service__Group_3_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1629:1: ( ( 'build:' ) )
            // InternalDockerCompose.g:1630:1: ( 'build:' )
            {
            // InternalDockerCompose.g:1630:1: ( 'build:' )
            // InternalDockerCompose.g:1631:2: 'build:'
            {
             before(grammarAccess.getServiceAccess().getBuildKeyword_3_0_0_0()); 
            match(input,41,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getBuildKeyword_3_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0_0__0__Impl"


    // $ANTLR start "rule__Service__Group_3_0_0__1"
    // InternalDockerCompose.g:1640:1: rule__Service__Group_3_0_0__1 : rule__Service__Group_3_0_0__1__Impl ;
    public final void rule__Service__Group_3_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1644:1: ( rule__Service__Group_3_0_0__1__Impl )
            // InternalDockerCompose.g:1645:2: rule__Service__Group_3_0_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_0_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0_0__1"


    // $ANTLR start "rule__Service__Group_3_0_0__1__Impl"
    // InternalDockerCompose.g:1651:1: rule__Service__Group_3_0_0__1__Impl : ( ( rule__Service__BuildAssignment_3_0_0_1 ) ) ;
    public final void rule__Service__Group_3_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1655:1: ( ( ( rule__Service__BuildAssignment_3_0_0_1 ) ) )
            // InternalDockerCompose.g:1656:1: ( ( rule__Service__BuildAssignment_3_0_0_1 ) )
            {
            // InternalDockerCompose.g:1656:1: ( ( rule__Service__BuildAssignment_3_0_0_1 ) )
            // InternalDockerCompose.g:1657:2: ( rule__Service__BuildAssignment_3_0_0_1 )
            {
             before(grammarAccess.getServiceAccess().getBuildAssignment_3_0_0_1()); 
            // InternalDockerCompose.g:1658:2: ( rule__Service__BuildAssignment_3_0_0_1 )
            // InternalDockerCompose.g:1658:3: rule__Service__BuildAssignment_3_0_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__BuildAssignment_3_0_0_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getBuildAssignment_3_0_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0_0__1__Impl"


    // $ANTLR start "rule__Service__Group_3_0_1__0"
    // InternalDockerCompose.g:1667:1: rule__Service__Group_3_0_1__0 : rule__Service__Group_3_0_1__0__Impl rule__Service__Group_3_0_1__1 ;
    public final void rule__Service__Group_3_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1671:1: ( rule__Service__Group_3_0_1__0__Impl rule__Service__Group_3_0_1__1 )
            // InternalDockerCompose.g:1672:2: rule__Service__Group_3_0_1__0__Impl rule__Service__Group_3_0_1__1
            {
            pushFollow(FOLLOW_5);
            rule__Service__Group_3_0_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_0_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0_1__0"


    // $ANTLR start "rule__Service__Group_3_0_1__0__Impl"
    // InternalDockerCompose.g:1679:1: rule__Service__Group_3_0_1__0__Impl : ( 'image:' ) ;
    public final void rule__Service__Group_3_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1683:1: ( ( 'image:' ) )
            // InternalDockerCompose.g:1684:1: ( 'image:' )
            {
            // InternalDockerCompose.g:1684:1: ( 'image:' )
            // InternalDockerCompose.g:1685:2: 'image:'
            {
             before(grammarAccess.getServiceAccess().getImageKeyword_3_0_1_0()); 
            match(input,42,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getImageKeyword_3_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_0_1__1"
    // InternalDockerCompose.g:1694:1: rule__Service__Group_3_0_1__1 : rule__Service__Group_3_0_1__1__Impl ;
    public final void rule__Service__Group_3_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1698:1: ( rule__Service__Group_3_0_1__1__Impl )
            // InternalDockerCompose.g:1699:2: rule__Service__Group_3_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_0_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0_1__1"


    // $ANTLR start "rule__Service__Group_3_0_1__1__Impl"
    // InternalDockerCompose.g:1705:1: rule__Service__Group_3_0_1__1__Impl : ( ( rule__Service__ImageAssignment_3_0_1_1 ) ) ;
    public final void rule__Service__Group_3_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1709:1: ( ( ( rule__Service__ImageAssignment_3_0_1_1 ) ) )
            // InternalDockerCompose.g:1710:1: ( ( rule__Service__ImageAssignment_3_0_1_1 ) )
            {
            // InternalDockerCompose.g:1710:1: ( ( rule__Service__ImageAssignment_3_0_1_1 ) )
            // InternalDockerCompose.g:1711:2: ( rule__Service__ImageAssignment_3_0_1_1 )
            {
             before(grammarAccess.getServiceAccess().getImageAssignment_3_0_1_1()); 
            // InternalDockerCompose.g:1712:2: ( rule__Service__ImageAssignment_3_0_1_1 )
            // InternalDockerCompose.g:1712:3: rule__Service__ImageAssignment_3_0_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__ImageAssignment_3_0_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getImageAssignment_3_0_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_1__0"
    // InternalDockerCompose.g:1721:1: rule__Service__Group_3_1__0 : rule__Service__Group_3_1__0__Impl rule__Service__Group_3_1__1 ;
    public final void rule__Service__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1725:1: ( rule__Service__Group_3_1__0__Impl rule__Service__Group_3_1__1 )
            // InternalDockerCompose.g:1726:2: rule__Service__Group_3_1__0__Impl rule__Service__Group_3_1__1
            {
            pushFollow(FOLLOW_10);
            rule__Service__Group_3_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_1__0"


    // $ANTLR start "rule__Service__Group_3_1__0__Impl"
    // InternalDockerCompose.g:1733:1: rule__Service__Group_3_1__0__Impl : ( 'cpu_count:' ) ;
    public final void rule__Service__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1737:1: ( ( 'cpu_count:' ) )
            // InternalDockerCompose.g:1738:1: ( 'cpu_count:' )
            {
            // InternalDockerCompose.g:1738:1: ( 'cpu_count:' )
            // InternalDockerCompose.g:1739:2: 'cpu_count:'
            {
             before(grammarAccess.getServiceAccess().getCpu_countKeyword_3_1_0()); 
            match(input,43,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getCpu_countKeyword_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_1__1"
    // InternalDockerCompose.g:1748:1: rule__Service__Group_3_1__1 : rule__Service__Group_3_1__1__Impl ;
    public final void rule__Service__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1752:1: ( rule__Service__Group_3_1__1__Impl )
            // InternalDockerCompose.g:1753:2: rule__Service__Group_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_1__1"


    // $ANTLR start "rule__Service__Group_3_1__1__Impl"
    // InternalDockerCompose.g:1759:1: rule__Service__Group_3_1__1__Impl : ( ( rule__Service__Cpu_countAssignment_3_1_1 ) ) ;
    public final void rule__Service__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1763:1: ( ( ( rule__Service__Cpu_countAssignment_3_1_1 ) ) )
            // InternalDockerCompose.g:1764:1: ( ( rule__Service__Cpu_countAssignment_3_1_1 ) )
            {
            // InternalDockerCompose.g:1764:1: ( ( rule__Service__Cpu_countAssignment_3_1_1 ) )
            // InternalDockerCompose.g:1765:2: ( rule__Service__Cpu_countAssignment_3_1_1 )
            {
             before(grammarAccess.getServiceAccess().getCpu_countAssignment_3_1_1()); 
            // InternalDockerCompose.g:1766:2: ( rule__Service__Cpu_countAssignment_3_1_1 )
            // InternalDockerCompose.g:1766:3: rule__Service__Cpu_countAssignment_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Cpu_countAssignment_3_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getCpu_countAssignment_3_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_2__0"
    // InternalDockerCompose.g:1775:1: rule__Service__Group_3_2__0 : rule__Service__Group_3_2__0__Impl rule__Service__Group_3_2__1 ;
    public final void rule__Service__Group_3_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1779:1: ( rule__Service__Group_3_2__0__Impl rule__Service__Group_3_2__1 )
            // InternalDockerCompose.g:1780:2: rule__Service__Group_3_2__0__Impl rule__Service__Group_3_2__1
            {
            pushFollow(FOLLOW_5);
            rule__Service__Group_3_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_2__0"


    // $ANTLR start "rule__Service__Group_3_2__0__Impl"
    // InternalDockerCompose.g:1787:1: rule__Service__Group_3_2__0__Impl : ( 'command:' ) ;
    public final void rule__Service__Group_3_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1791:1: ( ( 'command:' ) )
            // InternalDockerCompose.g:1792:1: ( 'command:' )
            {
            // InternalDockerCompose.g:1792:1: ( 'command:' )
            // InternalDockerCompose.g:1793:2: 'command:'
            {
             before(grammarAccess.getServiceAccess().getCommandKeyword_3_2_0()); 
            match(input,44,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getCommandKeyword_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_2__0__Impl"


    // $ANTLR start "rule__Service__Group_3_2__1"
    // InternalDockerCompose.g:1802:1: rule__Service__Group_3_2__1 : rule__Service__Group_3_2__1__Impl ;
    public final void rule__Service__Group_3_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1806:1: ( rule__Service__Group_3_2__1__Impl )
            // InternalDockerCompose.g:1807:2: rule__Service__Group_3_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_2__1"


    // $ANTLR start "rule__Service__Group_3_2__1__Impl"
    // InternalDockerCompose.g:1813:1: rule__Service__Group_3_2__1__Impl : ( ( rule__Service__CommandAssignment_3_2_1 ) ) ;
    public final void rule__Service__Group_3_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1817:1: ( ( ( rule__Service__CommandAssignment_3_2_1 ) ) )
            // InternalDockerCompose.g:1818:1: ( ( rule__Service__CommandAssignment_3_2_1 ) )
            {
            // InternalDockerCompose.g:1818:1: ( ( rule__Service__CommandAssignment_3_2_1 ) )
            // InternalDockerCompose.g:1819:2: ( rule__Service__CommandAssignment_3_2_1 )
            {
             before(grammarAccess.getServiceAccess().getCommandAssignment_3_2_1()); 
            // InternalDockerCompose.g:1820:2: ( rule__Service__CommandAssignment_3_2_1 )
            // InternalDockerCompose.g:1820:3: rule__Service__CommandAssignment_3_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__CommandAssignment_3_2_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getCommandAssignment_3_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_2__1__Impl"


    // $ANTLR start "rule__Service__Group_3_3__0"
    // InternalDockerCompose.g:1829:1: rule__Service__Group_3_3__0 : rule__Service__Group_3_3__0__Impl rule__Service__Group_3_3__1 ;
    public final void rule__Service__Group_3_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1833:1: ( rule__Service__Group_3_3__0__Impl rule__Service__Group_3_3__1 )
            // InternalDockerCompose.g:1834:2: rule__Service__Group_3_3__0__Impl rule__Service__Group_3_3__1
            {
            pushFollow(FOLLOW_5);
            rule__Service__Group_3_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_3__0"


    // $ANTLR start "rule__Service__Group_3_3__0__Impl"
    // InternalDockerCompose.g:1841:1: rule__Service__Group_3_3__0__Impl : ( 'container_name:' ) ;
    public final void rule__Service__Group_3_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1845:1: ( ( 'container_name:' ) )
            // InternalDockerCompose.g:1846:1: ( 'container_name:' )
            {
            // InternalDockerCompose.g:1846:1: ( 'container_name:' )
            // InternalDockerCompose.g:1847:2: 'container_name:'
            {
             before(grammarAccess.getServiceAccess().getContainer_nameKeyword_3_3_0()); 
            match(input,45,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getContainer_nameKeyword_3_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_3__0__Impl"


    // $ANTLR start "rule__Service__Group_3_3__1"
    // InternalDockerCompose.g:1856:1: rule__Service__Group_3_3__1 : rule__Service__Group_3_3__1__Impl ;
    public final void rule__Service__Group_3_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1860:1: ( rule__Service__Group_3_3__1__Impl )
            // InternalDockerCompose.g:1861:2: rule__Service__Group_3_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_3__1"


    // $ANTLR start "rule__Service__Group_3_3__1__Impl"
    // InternalDockerCompose.g:1867:1: rule__Service__Group_3_3__1__Impl : ( ( rule__Service__Container_nameAssignment_3_3_1 ) ) ;
    public final void rule__Service__Group_3_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1871:1: ( ( ( rule__Service__Container_nameAssignment_3_3_1 ) ) )
            // InternalDockerCompose.g:1872:1: ( ( rule__Service__Container_nameAssignment_3_3_1 ) )
            {
            // InternalDockerCompose.g:1872:1: ( ( rule__Service__Container_nameAssignment_3_3_1 ) )
            // InternalDockerCompose.g:1873:2: ( rule__Service__Container_nameAssignment_3_3_1 )
            {
             before(grammarAccess.getServiceAccess().getContainer_nameAssignment_3_3_1()); 
            // InternalDockerCompose.g:1874:2: ( rule__Service__Container_nameAssignment_3_3_1 )
            // InternalDockerCompose.g:1874:3: rule__Service__Container_nameAssignment_3_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Container_nameAssignment_3_3_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getContainer_nameAssignment_3_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_3__1__Impl"


    // $ANTLR start "rule__Service__Group_3_4__0"
    // InternalDockerCompose.g:1883:1: rule__Service__Group_3_4__0 : rule__Service__Group_3_4__0__Impl rule__Service__Group_3_4__1 ;
    public final void rule__Service__Group_3_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1887:1: ( rule__Service__Group_3_4__0__Impl rule__Service__Group_3_4__1 )
            // InternalDockerCompose.g:1888:2: rule__Service__Group_3_4__0__Impl rule__Service__Group_3_4__1
            {
            pushFollow(FOLLOW_11);
            rule__Service__Group_3_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_4__0"


    // $ANTLR start "rule__Service__Group_3_4__0__Impl"
    // InternalDockerCompose.g:1895:1: rule__Service__Group_3_4__0__Impl : ( 'restart:' ) ;
    public final void rule__Service__Group_3_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1899:1: ( ( 'restart:' ) )
            // InternalDockerCompose.g:1900:1: ( 'restart:' )
            {
            // InternalDockerCompose.g:1900:1: ( 'restart:' )
            // InternalDockerCompose.g:1901:2: 'restart:'
            {
             before(grammarAccess.getServiceAccess().getRestartKeyword_3_4_0()); 
            match(input,46,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getRestartKeyword_3_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_4__0__Impl"


    // $ANTLR start "rule__Service__Group_3_4__1"
    // InternalDockerCompose.g:1910:1: rule__Service__Group_3_4__1 : rule__Service__Group_3_4__1__Impl ;
    public final void rule__Service__Group_3_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1914:1: ( rule__Service__Group_3_4__1__Impl )
            // InternalDockerCompose.g:1915:2: rule__Service__Group_3_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_4__1"


    // $ANTLR start "rule__Service__Group_3_4__1__Impl"
    // InternalDockerCompose.g:1921:1: rule__Service__Group_3_4__1__Impl : ( ( rule__Service__RestartAssignment_3_4_1 ) ) ;
    public final void rule__Service__Group_3_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1925:1: ( ( ( rule__Service__RestartAssignment_3_4_1 ) ) )
            // InternalDockerCompose.g:1926:1: ( ( rule__Service__RestartAssignment_3_4_1 ) )
            {
            // InternalDockerCompose.g:1926:1: ( ( rule__Service__RestartAssignment_3_4_1 ) )
            // InternalDockerCompose.g:1927:2: ( rule__Service__RestartAssignment_3_4_1 )
            {
             before(grammarAccess.getServiceAccess().getRestartAssignment_3_4_1()); 
            // InternalDockerCompose.g:1928:2: ( rule__Service__RestartAssignment_3_4_1 )
            // InternalDockerCompose.g:1928:3: rule__Service__RestartAssignment_3_4_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__RestartAssignment_3_4_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getRestartAssignment_3_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_4__1__Impl"


    // $ANTLR start "rule__Service__Group_3_5__0"
    // InternalDockerCompose.g:1937:1: rule__Service__Group_3_5__0 : rule__Service__Group_3_5__0__Impl rule__Service__Group_3_5__1 ;
    public final void rule__Service__Group_3_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1941:1: ( rule__Service__Group_3_5__0__Impl rule__Service__Group_3_5__1 )
            // InternalDockerCompose.g:1942:2: rule__Service__Group_3_5__0__Impl rule__Service__Group_3_5__1
            {
            pushFollow(FOLLOW_12);
            rule__Service__Group_3_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_5__0"


    // $ANTLR start "rule__Service__Group_3_5__0__Impl"
    // InternalDockerCompose.g:1949:1: rule__Service__Group_3_5__0__Impl : ( 'init:' ) ;
    public final void rule__Service__Group_3_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1953:1: ( ( 'init:' ) )
            // InternalDockerCompose.g:1954:1: ( 'init:' )
            {
            // InternalDockerCompose.g:1954:1: ( 'init:' )
            // InternalDockerCompose.g:1955:2: 'init:'
            {
             before(grammarAccess.getServiceAccess().getInitKeyword_3_5_0()); 
            match(input,47,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getInitKeyword_3_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_5__0__Impl"


    // $ANTLR start "rule__Service__Group_3_5__1"
    // InternalDockerCompose.g:1964:1: rule__Service__Group_3_5__1 : rule__Service__Group_3_5__1__Impl ;
    public final void rule__Service__Group_3_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1968:1: ( rule__Service__Group_3_5__1__Impl )
            // InternalDockerCompose.g:1969:2: rule__Service__Group_3_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_5__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_5__1"


    // $ANTLR start "rule__Service__Group_3_5__1__Impl"
    // InternalDockerCompose.g:1975:1: rule__Service__Group_3_5__1__Impl : ( ( rule__Service__InitAssignment_3_5_1 ) ) ;
    public final void rule__Service__Group_3_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1979:1: ( ( ( rule__Service__InitAssignment_3_5_1 ) ) )
            // InternalDockerCompose.g:1980:1: ( ( rule__Service__InitAssignment_3_5_1 ) )
            {
            // InternalDockerCompose.g:1980:1: ( ( rule__Service__InitAssignment_3_5_1 ) )
            // InternalDockerCompose.g:1981:2: ( rule__Service__InitAssignment_3_5_1 )
            {
             before(grammarAccess.getServiceAccess().getInitAssignment_3_5_1()); 
            // InternalDockerCompose.g:1982:2: ( rule__Service__InitAssignment_3_5_1 )
            // InternalDockerCompose.g:1982:3: rule__Service__InitAssignment_3_5_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__InitAssignment_3_5_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getInitAssignment_3_5_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_5__1__Impl"


    // $ANTLR start "rule__Service__Group_3_6__0"
    // InternalDockerCompose.g:1991:1: rule__Service__Group_3_6__0 : rule__Service__Group_3_6__0__Impl rule__Service__Group_3_6__1 ;
    public final void rule__Service__Group_3_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1995:1: ( rule__Service__Group_3_6__0__Impl rule__Service__Group_3_6__1 )
            // InternalDockerCompose.g:1996:2: rule__Service__Group_3_6__0__Impl rule__Service__Group_3_6__1
            {
            pushFollow(FOLLOW_12);
            rule__Service__Group_3_6__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_6__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_6__0"


    // $ANTLR start "rule__Service__Group_3_6__0__Impl"
    // InternalDockerCompose.g:2003:1: rule__Service__Group_3_6__0__Impl : ( 'read_only:' ) ;
    public final void rule__Service__Group_3_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2007:1: ( ( 'read_only:' ) )
            // InternalDockerCompose.g:2008:1: ( 'read_only:' )
            {
            // InternalDockerCompose.g:2008:1: ( 'read_only:' )
            // InternalDockerCompose.g:2009:2: 'read_only:'
            {
             before(grammarAccess.getServiceAccess().getRead_onlyKeyword_3_6_0()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getRead_onlyKeyword_3_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_6__0__Impl"


    // $ANTLR start "rule__Service__Group_3_6__1"
    // InternalDockerCompose.g:2018:1: rule__Service__Group_3_6__1 : rule__Service__Group_3_6__1__Impl ;
    public final void rule__Service__Group_3_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2022:1: ( rule__Service__Group_3_6__1__Impl )
            // InternalDockerCompose.g:2023:2: rule__Service__Group_3_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_6__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_6__1"


    // $ANTLR start "rule__Service__Group_3_6__1__Impl"
    // InternalDockerCompose.g:2029:1: rule__Service__Group_3_6__1__Impl : ( ( rule__Service__Read_onlyAssignment_3_6_1 ) ) ;
    public final void rule__Service__Group_3_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2033:1: ( ( ( rule__Service__Read_onlyAssignment_3_6_1 ) ) )
            // InternalDockerCompose.g:2034:1: ( ( rule__Service__Read_onlyAssignment_3_6_1 ) )
            {
            // InternalDockerCompose.g:2034:1: ( ( rule__Service__Read_onlyAssignment_3_6_1 ) )
            // InternalDockerCompose.g:2035:2: ( rule__Service__Read_onlyAssignment_3_6_1 )
            {
             before(grammarAccess.getServiceAccess().getRead_onlyAssignment_3_6_1()); 
            // InternalDockerCompose.g:2036:2: ( rule__Service__Read_onlyAssignment_3_6_1 )
            // InternalDockerCompose.g:2036:3: rule__Service__Read_onlyAssignment_3_6_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Read_onlyAssignment_3_6_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getRead_onlyAssignment_3_6_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_6__1__Impl"


    // $ANTLR start "rule__Service__Group_3_7__0"
    // InternalDockerCompose.g:2045:1: rule__Service__Group_3_7__0 : rule__Service__Group_3_7__0__Impl rule__Service__Group_3_7__1 ;
    public final void rule__Service__Group_3_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2049:1: ( rule__Service__Group_3_7__0__Impl rule__Service__Group_3_7__1 )
            // InternalDockerCompose.g:2050:2: rule__Service__Group_3_7__0__Impl rule__Service__Group_3_7__1
            {
            pushFollow(FOLLOW_13);
            rule__Service__Group_3_7__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_7__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7__0"


    // $ANTLR start "rule__Service__Group_3_7__0__Impl"
    // InternalDockerCompose.g:2057:1: rule__Service__Group_3_7__0__Impl : ( 'depends_on:' ) ;
    public final void rule__Service__Group_3_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2061:1: ( ( 'depends_on:' ) )
            // InternalDockerCompose.g:2062:1: ( 'depends_on:' )
            {
            // InternalDockerCompose.g:2062:1: ( 'depends_on:' )
            // InternalDockerCompose.g:2063:2: 'depends_on:'
            {
             before(grammarAccess.getServiceAccess().getDepends_onKeyword_3_7_0()); 
            match(input,49,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getDepends_onKeyword_3_7_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7__0__Impl"


    // $ANTLR start "rule__Service__Group_3_7__1"
    // InternalDockerCompose.g:2072:1: rule__Service__Group_3_7__1 : rule__Service__Group_3_7__1__Impl ;
    public final void rule__Service__Group_3_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2076:1: ( rule__Service__Group_3_7__1__Impl )
            // InternalDockerCompose.g:2077:2: rule__Service__Group_3_7__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_7__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7__1"


    // $ANTLR start "rule__Service__Group_3_7__1__Impl"
    // InternalDockerCompose.g:2083:1: rule__Service__Group_3_7__1__Impl : ( ( ( rule__Service__Group_3_7_1__0 ) ) ( ( rule__Service__Group_3_7_1__0 )* ) ) ;
    public final void rule__Service__Group_3_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2087:1: ( ( ( ( rule__Service__Group_3_7_1__0 ) ) ( ( rule__Service__Group_3_7_1__0 )* ) ) )
            // InternalDockerCompose.g:2088:1: ( ( ( rule__Service__Group_3_7_1__0 ) ) ( ( rule__Service__Group_3_7_1__0 )* ) )
            {
            // InternalDockerCompose.g:2088:1: ( ( ( rule__Service__Group_3_7_1__0 ) ) ( ( rule__Service__Group_3_7_1__0 )* ) )
            // InternalDockerCompose.g:2089:2: ( ( rule__Service__Group_3_7_1__0 ) ) ( ( rule__Service__Group_3_7_1__0 )* )
            {
            // InternalDockerCompose.g:2089:2: ( ( rule__Service__Group_3_7_1__0 ) )
            // InternalDockerCompose.g:2090:3: ( rule__Service__Group_3_7_1__0 )
            {
             before(grammarAccess.getServiceAccess().getGroup_3_7_1()); 
            // InternalDockerCompose.g:2091:3: ( rule__Service__Group_3_7_1__0 )
            // InternalDockerCompose.g:2091:4: rule__Service__Group_3_7_1__0
            {
            pushFollow(FOLLOW_3);
            rule__Service__Group_3_7_1__0();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getGroup_3_7_1()); 

            }

            // InternalDockerCompose.g:2094:2: ( ( rule__Service__Group_3_7_1__0 )* )
            // InternalDockerCompose.g:2095:3: ( rule__Service__Group_3_7_1__0 )*
            {
             before(grammarAccess.getServiceAccess().getGroup_3_7_1()); 
            // InternalDockerCompose.g:2096:3: ( rule__Service__Group_3_7_1__0 )*
            loop21:
            do {
                int alt21=2;
                int LA21_0 = input.LA(1);

                if ( (LA21_0==50) ) {
                    alt21=1;
                }


                switch (alt21) {
            	case 1 :
            	    // InternalDockerCompose.g:2096:4: rule__Service__Group_3_7_1__0
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Service__Group_3_7_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop21;
                }
            } while (true);

             after(grammarAccess.getServiceAccess().getGroup_3_7_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7__1__Impl"


    // $ANTLR start "rule__Service__Group_3_7_1__0"
    // InternalDockerCompose.g:2106:1: rule__Service__Group_3_7_1__0 : rule__Service__Group_3_7_1__0__Impl rule__Service__Group_3_7_1__1 ;
    public final void rule__Service__Group_3_7_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2110:1: ( rule__Service__Group_3_7_1__0__Impl rule__Service__Group_3_7_1__1 )
            // InternalDockerCompose.g:2111:2: rule__Service__Group_3_7_1__0__Impl rule__Service__Group_3_7_1__1
            {
            pushFollow(FOLLOW_5);
            rule__Service__Group_3_7_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_7_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7_1__0"


    // $ANTLR start "rule__Service__Group_3_7_1__0__Impl"
    // InternalDockerCompose.g:2118:1: rule__Service__Group_3_7_1__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_7_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2122:1: ( ( '-' ) )
            // InternalDockerCompose.g:2123:1: ( '-' )
            {
            // InternalDockerCompose.g:2123:1: ( '-' )
            // InternalDockerCompose.g:2124:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_7_1_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_7_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_7_1__1"
    // InternalDockerCompose.g:2133:1: rule__Service__Group_3_7_1__1 : rule__Service__Group_3_7_1__1__Impl ;
    public final void rule__Service__Group_3_7_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2137:1: ( rule__Service__Group_3_7_1__1__Impl )
            // InternalDockerCompose.g:2138:2: rule__Service__Group_3_7_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_7_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7_1__1"


    // $ANTLR start "rule__Service__Group_3_7_1__1__Impl"
    // InternalDockerCompose.g:2144:1: rule__Service__Group_3_7_1__1__Impl : ( ( rule__Service__Depends_onAssignment_3_7_1_1 ) ) ;
    public final void rule__Service__Group_3_7_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2148:1: ( ( ( rule__Service__Depends_onAssignment_3_7_1_1 ) ) )
            // InternalDockerCompose.g:2149:1: ( ( rule__Service__Depends_onAssignment_3_7_1_1 ) )
            {
            // InternalDockerCompose.g:2149:1: ( ( rule__Service__Depends_onAssignment_3_7_1_1 ) )
            // InternalDockerCompose.g:2150:2: ( rule__Service__Depends_onAssignment_3_7_1_1 )
            {
             before(grammarAccess.getServiceAccess().getDepends_onAssignment_3_7_1_1()); 
            // InternalDockerCompose.g:2151:2: ( rule__Service__Depends_onAssignment_3_7_1_1 )
            // InternalDockerCompose.g:2151:3: rule__Service__Depends_onAssignment_3_7_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Depends_onAssignment_3_7_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getDepends_onAssignment_3_7_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_8__0"
    // InternalDockerCompose.g:2160:1: rule__Service__Group_3_8__0 : rule__Service__Group_3_8__0__Impl rule__Service__Group_3_8__1 ;
    public final void rule__Service__Group_3_8__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2164:1: ( rule__Service__Group_3_8__0__Impl rule__Service__Group_3_8__1 )
            // InternalDockerCompose.g:2165:2: rule__Service__Group_3_8__0__Impl rule__Service__Group_3_8__1
            {
            pushFollow(FOLLOW_14);
            rule__Service__Group_3_8__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_8__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_8__0"


    // $ANTLR start "rule__Service__Group_3_8__0__Impl"
    // InternalDockerCompose.g:2172:1: rule__Service__Group_3_8__0__Impl : ( 'networks:' ) ;
    public final void rule__Service__Group_3_8__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2176:1: ( ( 'networks:' ) )
            // InternalDockerCompose.g:2177:1: ( 'networks:' )
            {
            // InternalDockerCompose.g:2177:1: ( 'networks:' )
            // InternalDockerCompose.g:2178:2: 'networks:'
            {
             before(grammarAccess.getServiceAccess().getNetworksKeyword_3_8_0()); 
            match(input,36,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getNetworksKeyword_3_8_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_8__0__Impl"


    // $ANTLR start "rule__Service__Group_3_8__1"
    // InternalDockerCompose.g:2187:1: rule__Service__Group_3_8__1 : rule__Service__Group_3_8__1__Impl ;
    public final void rule__Service__Group_3_8__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2191:1: ( rule__Service__Group_3_8__1__Impl )
            // InternalDockerCompose.g:2192:2: rule__Service__Group_3_8__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_8__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_8__1"


    // $ANTLR start "rule__Service__Group_3_8__1__Impl"
    // InternalDockerCompose.g:2198:1: rule__Service__Group_3_8__1__Impl : ( ( ( rule__Service__NetworksAssignment_3_8_1 ) ) ( ( rule__Service__NetworksAssignment_3_8_1 )* ) ) ;
    public final void rule__Service__Group_3_8__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2202:1: ( ( ( ( rule__Service__NetworksAssignment_3_8_1 ) ) ( ( rule__Service__NetworksAssignment_3_8_1 )* ) ) )
            // InternalDockerCompose.g:2203:1: ( ( ( rule__Service__NetworksAssignment_3_8_1 ) ) ( ( rule__Service__NetworksAssignment_3_8_1 )* ) )
            {
            // InternalDockerCompose.g:2203:1: ( ( ( rule__Service__NetworksAssignment_3_8_1 ) ) ( ( rule__Service__NetworksAssignment_3_8_1 )* ) )
            // InternalDockerCompose.g:2204:2: ( ( rule__Service__NetworksAssignment_3_8_1 ) ) ( ( rule__Service__NetworksAssignment_3_8_1 )* )
            {
            // InternalDockerCompose.g:2204:2: ( ( rule__Service__NetworksAssignment_3_8_1 ) )
            // InternalDockerCompose.g:2205:3: ( rule__Service__NetworksAssignment_3_8_1 )
            {
             before(grammarAccess.getServiceAccess().getNetworksAssignment_3_8_1()); 
            // InternalDockerCompose.g:2206:3: ( rule__Service__NetworksAssignment_3_8_1 )
            // InternalDockerCompose.g:2206:4: rule__Service__NetworksAssignment_3_8_1
            {
            pushFollow(FOLLOW_15);
            rule__Service__NetworksAssignment_3_8_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getNetworksAssignment_3_8_1()); 

            }

            // InternalDockerCompose.g:2209:2: ( ( rule__Service__NetworksAssignment_3_8_1 )* )
            // InternalDockerCompose.g:2210:3: ( rule__Service__NetworksAssignment_3_8_1 )*
            {
             before(grammarAccess.getServiceAccess().getNetworksAssignment_3_8_1()); 
            // InternalDockerCompose.g:2211:3: ( rule__Service__NetworksAssignment_3_8_1 )*
            loop22:
            do {
                int alt22=2;
                alt22 = dfa22.predict(input);
                switch (alt22) {
            	case 1 :
            	    // InternalDockerCompose.g:2211:4: rule__Service__NetworksAssignment_3_8_1
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__Service__NetworksAssignment_3_8_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop22;
                }
            } while (true);

             after(grammarAccess.getServiceAccess().getNetworksAssignment_3_8_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_8__1__Impl"


    // $ANTLR start "rule__Service__Group_3_9__0"
    // InternalDockerCompose.g:2221:1: rule__Service__Group_3_9__0 : rule__Service__Group_3_9__0__Impl rule__Service__Group_3_9__1 ;
    public final void rule__Service__Group_3_9__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2225:1: ( rule__Service__Group_3_9__0__Impl rule__Service__Group_3_9__1 )
            // InternalDockerCompose.g:2226:2: rule__Service__Group_3_9__0__Impl rule__Service__Group_3_9__1
            {
            pushFollow(FOLLOW_13);
            rule__Service__Group_3_9__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_9__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_9__0"


    // $ANTLR start "rule__Service__Group_3_9__0__Impl"
    // InternalDockerCompose.g:2233:1: rule__Service__Group_3_9__0__Impl : ( 'volumes:' ) ;
    public final void rule__Service__Group_3_9__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2237:1: ( ( 'volumes:' ) )
            // InternalDockerCompose.g:2238:1: ( 'volumes:' )
            {
            // InternalDockerCompose.g:2238:1: ( 'volumes:' )
            // InternalDockerCompose.g:2239:2: 'volumes:'
            {
             before(grammarAccess.getServiceAccess().getVolumesKeyword_3_9_0()); 
            match(input,37,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getVolumesKeyword_3_9_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_9__0__Impl"


    // $ANTLR start "rule__Service__Group_3_9__1"
    // InternalDockerCompose.g:2248:1: rule__Service__Group_3_9__1 : rule__Service__Group_3_9__1__Impl ;
    public final void rule__Service__Group_3_9__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2252:1: ( rule__Service__Group_3_9__1__Impl )
            // InternalDockerCompose.g:2253:2: rule__Service__Group_3_9__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_9__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_9__1"


    // $ANTLR start "rule__Service__Group_3_9__1__Impl"
    // InternalDockerCompose.g:2259:1: rule__Service__Group_3_9__1__Impl : ( ( ( rule__Service__Group_3_9_1__0 ) ) ( ( rule__Service__Group_3_9_1__0 )* ) ) ;
    public final void rule__Service__Group_3_9__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2263:1: ( ( ( ( rule__Service__Group_3_9_1__0 ) ) ( ( rule__Service__Group_3_9_1__0 )* ) ) )
            // InternalDockerCompose.g:2264:1: ( ( ( rule__Service__Group_3_9_1__0 ) ) ( ( rule__Service__Group_3_9_1__0 )* ) )
            {
            // InternalDockerCompose.g:2264:1: ( ( ( rule__Service__Group_3_9_1__0 ) ) ( ( rule__Service__Group_3_9_1__0 )* ) )
            // InternalDockerCompose.g:2265:2: ( ( rule__Service__Group_3_9_1__0 ) ) ( ( rule__Service__Group_3_9_1__0 )* )
            {
            // InternalDockerCompose.g:2265:2: ( ( rule__Service__Group_3_9_1__0 ) )
            // InternalDockerCompose.g:2266:3: ( rule__Service__Group_3_9_1__0 )
            {
             before(grammarAccess.getServiceAccess().getGroup_3_9_1()); 
            // InternalDockerCompose.g:2267:3: ( rule__Service__Group_3_9_1__0 )
            // InternalDockerCompose.g:2267:4: rule__Service__Group_3_9_1__0
            {
            pushFollow(FOLLOW_3);
            rule__Service__Group_3_9_1__0();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getGroup_3_9_1()); 

            }

            // InternalDockerCompose.g:2270:2: ( ( rule__Service__Group_3_9_1__0 )* )
            // InternalDockerCompose.g:2271:3: ( rule__Service__Group_3_9_1__0 )*
            {
             before(grammarAccess.getServiceAccess().getGroup_3_9_1()); 
            // InternalDockerCompose.g:2272:3: ( rule__Service__Group_3_9_1__0 )*
            loop23:
            do {
                int alt23=2;
                int LA23_0 = input.LA(1);

                if ( (LA23_0==50) ) {
                    alt23=1;
                }


                switch (alt23) {
            	case 1 :
            	    // InternalDockerCompose.g:2272:4: rule__Service__Group_3_9_1__0
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Service__Group_3_9_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop23;
                }
            } while (true);

             after(grammarAccess.getServiceAccess().getGroup_3_9_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_9__1__Impl"


    // $ANTLR start "rule__Service__Group_3_9_1__0"
    // InternalDockerCompose.g:2282:1: rule__Service__Group_3_9_1__0 : rule__Service__Group_3_9_1__0__Impl rule__Service__Group_3_9_1__1 ;
    public final void rule__Service__Group_3_9_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2286:1: ( rule__Service__Group_3_9_1__0__Impl rule__Service__Group_3_9_1__1 )
            // InternalDockerCompose.g:2287:2: rule__Service__Group_3_9_1__0__Impl rule__Service__Group_3_9_1__1
            {
            pushFollow(FOLLOW_16);
            rule__Service__Group_3_9_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_9_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_9_1__0"


    // $ANTLR start "rule__Service__Group_3_9_1__0__Impl"
    // InternalDockerCompose.g:2294:1: rule__Service__Group_3_9_1__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_9_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2298:1: ( ( '-' ) )
            // InternalDockerCompose.g:2299:1: ( '-' )
            {
            // InternalDockerCompose.g:2299:1: ( '-' )
            // InternalDockerCompose.g:2300:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_9_1_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_9_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_9_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_9_1__1"
    // InternalDockerCompose.g:2309:1: rule__Service__Group_3_9_1__1 : rule__Service__Group_3_9_1__1__Impl ;
    public final void rule__Service__Group_3_9_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2313:1: ( rule__Service__Group_3_9_1__1__Impl )
            // InternalDockerCompose.g:2314:2: rule__Service__Group_3_9_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_9_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_9_1__1"


    // $ANTLR start "rule__Service__Group_3_9_1__1__Impl"
    // InternalDockerCompose.g:2320:1: rule__Service__Group_3_9_1__1__Impl : ( ( rule__Service__VolumesAssignment_3_9_1_1 ) ) ;
    public final void rule__Service__Group_3_9_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2324:1: ( ( ( rule__Service__VolumesAssignment_3_9_1_1 ) ) )
            // InternalDockerCompose.g:2325:1: ( ( rule__Service__VolumesAssignment_3_9_1_1 ) )
            {
            // InternalDockerCompose.g:2325:1: ( ( rule__Service__VolumesAssignment_3_9_1_1 ) )
            // InternalDockerCompose.g:2326:2: ( rule__Service__VolumesAssignment_3_9_1_1 )
            {
             before(grammarAccess.getServiceAccess().getVolumesAssignment_3_9_1_1()); 
            // InternalDockerCompose.g:2327:2: ( rule__Service__VolumesAssignment_3_9_1_1 )
            // InternalDockerCompose.g:2327:3: rule__Service__VolumesAssignment_3_9_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__VolumesAssignment_3_9_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getVolumesAssignment_3_9_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_9_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_10__0"
    // InternalDockerCompose.g:2336:1: rule__Service__Group_3_10__0 : rule__Service__Group_3_10__0__Impl rule__Service__Group_3_10__1 ;
    public final void rule__Service__Group_3_10__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2340:1: ( rule__Service__Group_3_10__0__Impl rule__Service__Group_3_10__1 )
            // InternalDockerCompose.g:2341:2: rule__Service__Group_3_10__0__Impl rule__Service__Group_3_10__1
            {
            pushFollow(FOLLOW_13);
            rule__Service__Group_3_10__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_10__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10__0"


    // $ANTLR start "rule__Service__Group_3_10__0__Impl"
    // InternalDockerCompose.g:2348:1: rule__Service__Group_3_10__0__Impl : ( 'configs:' ) ;
    public final void rule__Service__Group_3_10__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2352:1: ( ( 'configs:' ) )
            // InternalDockerCompose.g:2353:1: ( 'configs:' )
            {
            // InternalDockerCompose.g:2353:1: ( 'configs:' )
            // InternalDockerCompose.g:2354:2: 'configs:'
            {
             before(grammarAccess.getServiceAccess().getConfigsKeyword_3_10_0()); 
            match(input,38,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getConfigsKeyword_3_10_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10__0__Impl"


    // $ANTLR start "rule__Service__Group_3_10__1"
    // InternalDockerCompose.g:2363:1: rule__Service__Group_3_10__1 : rule__Service__Group_3_10__1__Impl ;
    public final void rule__Service__Group_3_10__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2367:1: ( rule__Service__Group_3_10__1__Impl )
            // InternalDockerCompose.g:2368:2: rule__Service__Group_3_10__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_10__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10__1"


    // $ANTLR start "rule__Service__Group_3_10__1__Impl"
    // InternalDockerCompose.g:2374:1: rule__Service__Group_3_10__1__Impl : ( ( ( rule__Service__Group_3_10_1__0 ) ) ( ( rule__Service__Group_3_10_1__0 )* ) ) ;
    public final void rule__Service__Group_3_10__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2378:1: ( ( ( ( rule__Service__Group_3_10_1__0 ) ) ( ( rule__Service__Group_3_10_1__0 )* ) ) )
            // InternalDockerCompose.g:2379:1: ( ( ( rule__Service__Group_3_10_1__0 ) ) ( ( rule__Service__Group_3_10_1__0 )* ) )
            {
            // InternalDockerCompose.g:2379:1: ( ( ( rule__Service__Group_3_10_1__0 ) ) ( ( rule__Service__Group_3_10_1__0 )* ) )
            // InternalDockerCompose.g:2380:2: ( ( rule__Service__Group_3_10_1__0 ) ) ( ( rule__Service__Group_3_10_1__0 )* )
            {
            // InternalDockerCompose.g:2380:2: ( ( rule__Service__Group_3_10_1__0 ) )
            // InternalDockerCompose.g:2381:3: ( rule__Service__Group_3_10_1__0 )
            {
             before(grammarAccess.getServiceAccess().getGroup_3_10_1()); 
            // InternalDockerCompose.g:2382:3: ( rule__Service__Group_3_10_1__0 )
            // InternalDockerCompose.g:2382:4: rule__Service__Group_3_10_1__0
            {
            pushFollow(FOLLOW_3);
            rule__Service__Group_3_10_1__0();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getGroup_3_10_1()); 

            }

            // InternalDockerCompose.g:2385:2: ( ( rule__Service__Group_3_10_1__0 )* )
            // InternalDockerCompose.g:2386:3: ( rule__Service__Group_3_10_1__0 )*
            {
             before(grammarAccess.getServiceAccess().getGroup_3_10_1()); 
            // InternalDockerCompose.g:2387:3: ( rule__Service__Group_3_10_1__0 )*
            loop24:
            do {
                int alt24=2;
                int LA24_0 = input.LA(1);

                if ( (LA24_0==50) ) {
                    alt24=1;
                }


                switch (alt24) {
            	case 1 :
            	    // InternalDockerCompose.g:2387:4: rule__Service__Group_3_10_1__0
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Service__Group_3_10_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop24;
                }
            } while (true);

             after(grammarAccess.getServiceAccess().getGroup_3_10_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10__1__Impl"


    // $ANTLR start "rule__Service__Group_3_10_1__0"
    // InternalDockerCompose.g:2397:1: rule__Service__Group_3_10_1__0 : rule__Service__Group_3_10_1__0__Impl rule__Service__Group_3_10_1__1 ;
    public final void rule__Service__Group_3_10_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2401:1: ( rule__Service__Group_3_10_1__0__Impl rule__Service__Group_3_10_1__1 )
            // InternalDockerCompose.g:2402:2: rule__Service__Group_3_10_1__0__Impl rule__Service__Group_3_10_1__1
            {
            pushFollow(FOLLOW_17);
            rule__Service__Group_3_10_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_10_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10_1__0"


    // $ANTLR start "rule__Service__Group_3_10_1__0__Impl"
    // InternalDockerCompose.g:2409:1: rule__Service__Group_3_10_1__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_10_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2413:1: ( ( '-' ) )
            // InternalDockerCompose.g:2414:1: ( '-' )
            {
            // InternalDockerCompose.g:2414:1: ( '-' )
            // InternalDockerCompose.g:2415:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_10_1_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_10_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_10_1__1"
    // InternalDockerCompose.g:2424:1: rule__Service__Group_3_10_1__1 : rule__Service__Group_3_10_1__1__Impl ;
    public final void rule__Service__Group_3_10_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2428:1: ( rule__Service__Group_3_10_1__1__Impl )
            // InternalDockerCompose.g:2429:2: rule__Service__Group_3_10_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_10_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10_1__1"


    // $ANTLR start "rule__Service__Group_3_10_1__1__Impl"
    // InternalDockerCompose.g:2435:1: rule__Service__Group_3_10_1__1__Impl : ( ( rule__Service__ConfigsAssignment_3_10_1_1 ) ) ;
    public final void rule__Service__Group_3_10_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2439:1: ( ( ( rule__Service__ConfigsAssignment_3_10_1_1 ) ) )
            // InternalDockerCompose.g:2440:1: ( ( rule__Service__ConfigsAssignment_3_10_1_1 ) )
            {
            // InternalDockerCompose.g:2440:1: ( ( rule__Service__ConfigsAssignment_3_10_1_1 ) )
            // InternalDockerCompose.g:2441:2: ( rule__Service__ConfigsAssignment_3_10_1_1 )
            {
             before(grammarAccess.getServiceAccess().getConfigsAssignment_3_10_1_1()); 
            // InternalDockerCompose.g:2442:2: ( rule__Service__ConfigsAssignment_3_10_1_1 )
            // InternalDockerCompose.g:2442:3: rule__Service__ConfigsAssignment_3_10_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__ConfigsAssignment_3_10_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getConfigsAssignment_3_10_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_11__0"
    // InternalDockerCompose.g:2451:1: rule__Service__Group_3_11__0 : rule__Service__Group_3_11__0__Impl rule__Service__Group_3_11__1 ;
    public final void rule__Service__Group_3_11__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2455:1: ( rule__Service__Group_3_11__0__Impl rule__Service__Group_3_11__1 )
            // InternalDockerCompose.g:2456:2: rule__Service__Group_3_11__0__Impl rule__Service__Group_3_11__1
            {
            pushFollow(FOLLOW_13);
            rule__Service__Group_3_11__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_11__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11__0"


    // $ANTLR start "rule__Service__Group_3_11__0__Impl"
    // InternalDockerCompose.g:2463:1: rule__Service__Group_3_11__0__Impl : ( 'secrets:' ) ;
    public final void rule__Service__Group_3_11__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2467:1: ( ( 'secrets:' ) )
            // InternalDockerCompose.g:2468:1: ( 'secrets:' )
            {
            // InternalDockerCompose.g:2468:1: ( 'secrets:' )
            // InternalDockerCompose.g:2469:2: 'secrets:'
            {
             before(grammarAccess.getServiceAccess().getSecretsKeyword_3_11_0()); 
            match(input,39,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getSecretsKeyword_3_11_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11__0__Impl"


    // $ANTLR start "rule__Service__Group_3_11__1"
    // InternalDockerCompose.g:2478:1: rule__Service__Group_3_11__1 : rule__Service__Group_3_11__1__Impl ;
    public final void rule__Service__Group_3_11__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2482:1: ( rule__Service__Group_3_11__1__Impl )
            // InternalDockerCompose.g:2483:2: rule__Service__Group_3_11__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_11__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11__1"


    // $ANTLR start "rule__Service__Group_3_11__1__Impl"
    // InternalDockerCompose.g:2489:1: rule__Service__Group_3_11__1__Impl : ( ( ( rule__Service__Group_3_11_1__0 ) ) ( ( rule__Service__Group_3_11_1__0 )* ) ) ;
    public final void rule__Service__Group_3_11__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2493:1: ( ( ( ( rule__Service__Group_3_11_1__0 ) ) ( ( rule__Service__Group_3_11_1__0 )* ) ) )
            // InternalDockerCompose.g:2494:1: ( ( ( rule__Service__Group_3_11_1__0 ) ) ( ( rule__Service__Group_3_11_1__0 )* ) )
            {
            // InternalDockerCompose.g:2494:1: ( ( ( rule__Service__Group_3_11_1__0 ) ) ( ( rule__Service__Group_3_11_1__0 )* ) )
            // InternalDockerCompose.g:2495:2: ( ( rule__Service__Group_3_11_1__0 ) ) ( ( rule__Service__Group_3_11_1__0 )* )
            {
            // InternalDockerCompose.g:2495:2: ( ( rule__Service__Group_3_11_1__0 ) )
            // InternalDockerCompose.g:2496:3: ( rule__Service__Group_3_11_1__0 )
            {
             before(grammarAccess.getServiceAccess().getGroup_3_11_1()); 
            // InternalDockerCompose.g:2497:3: ( rule__Service__Group_3_11_1__0 )
            // InternalDockerCompose.g:2497:4: rule__Service__Group_3_11_1__0
            {
            pushFollow(FOLLOW_3);
            rule__Service__Group_3_11_1__0();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getGroup_3_11_1()); 

            }

            // InternalDockerCompose.g:2500:2: ( ( rule__Service__Group_3_11_1__0 )* )
            // InternalDockerCompose.g:2501:3: ( rule__Service__Group_3_11_1__0 )*
            {
             before(grammarAccess.getServiceAccess().getGroup_3_11_1()); 
            // InternalDockerCompose.g:2502:3: ( rule__Service__Group_3_11_1__0 )*
            loop25:
            do {
                int alt25=2;
                int LA25_0 = input.LA(1);

                if ( (LA25_0==50) ) {
                    alt25=1;
                }


                switch (alt25) {
            	case 1 :
            	    // InternalDockerCompose.g:2502:4: rule__Service__Group_3_11_1__0
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Service__Group_3_11_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop25;
                }
            } while (true);

             after(grammarAccess.getServiceAccess().getGroup_3_11_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11__1__Impl"


    // $ANTLR start "rule__Service__Group_3_11_1__0"
    // InternalDockerCompose.g:2512:1: rule__Service__Group_3_11_1__0 : rule__Service__Group_3_11_1__0__Impl rule__Service__Group_3_11_1__1 ;
    public final void rule__Service__Group_3_11_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2516:1: ( rule__Service__Group_3_11_1__0__Impl rule__Service__Group_3_11_1__1 )
            // InternalDockerCompose.g:2517:2: rule__Service__Group_3_11_1__0__Impl rule__Service__Group_3_11_1__1
            {
            pushFollow(FOLLOW_17);
            rule__Service__Group_3_11_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_11_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11_1__0"


    // $ANTLR start "rule__Service__Group_3_11_1__0__Impl"
    // InternalDockerCompose.g:2524:1: rule__Service__Group_3_11_1__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_11_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2528:1: ( ( '-' ) )
            // InternalDockerCompose.g:2529:1: ( '-' )
            {
            // InternalDockerCompose.g:2529:1: ( '-' )
            // InternalDockerCompose.g:2530:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_11_1_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_11_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_11_1__1"
    // InternalDockerCompose.g:2539:1: rule__Service__Group_3_11_1__1 : rule__Service__Group_3_11_1__1__Impl ;
    public final void rule__Service__Group_3_11_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2543:1: ( rule__Service__Group_3_11_1__1__Impl )
            // InternalDockerCompose.g:2544:2: rule__Service__Group_3_11_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_11_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11_1__1"


    // $ANTLR start "rule__Service__Group_3_11_1__1__Impl"
    // InternalDockerCompose.g:2550:1: rule__Service__Group_3_11_1__1__Impl : ( ( rule__Service__SecretsAssignment_3_11_1_1 ) ) ;
    public final void rule__Service__Group_3_11_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2554:1: ( ( ( rule__Service__SecretsAssignment_3_11_1_1 ) ) )
            // InternalDockerCompose.g:2555:1: ( ( rule__Service__SecretsAssignment_3_11_1_1 ) )
            {
            // InternalDockerCompose.g:2555:1: ( ( rule__Service__SecretsAssignment_3_11_1_1 ) )
            // InternalDockerCompose.g:2556:2: ( rule__Service__SecretsAssignment_3_11_1_1 )
            {
             before(grammarAccess.getServiceAccess().getSecretsAssignment_3_11_1_1()); 
            // InternalDockerCompose.g:2557:2: ( rule__Service__SecretsAssignment_3_11_1_1 )
            // InternalDockerCompose.g:2557:3: rule__Service__SecretsAssignment_3_11_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__SecretsAssignment_3_11_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getSecretsAssignment_3_11_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_12__0"
    // InternalDockerCompose.g:2566:1: rule__Service__Group_3_12__0 : rule__Service__Group_3_12__0__Impl rule__Service__Group_3_12__1 ;
    public final void rule__Service__Group_3_12__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2570:1: ( rule__Service__Group_3_12__0__Impl rule__Service__Group_3_12__1 )
            // InternalDockerCompose.g:2571:2: rule__Service__Group_3_12__0__Impl rule__Service__Group_3_12__1
            {
            pushFollow(FOLLOW_13);
            rule__Service__Group_3_12__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_12__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12__0"


    // $ANTLR start "rule__Service__Group_3_12__0__Impl"
    // InternalDockerCompose.g:2578:1: rule__Service__Group_3_12__0__Impl : ( 'devices:' ) ;
    public final void rule__Service__Group_3_12__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2582:1: ( ( 'devices:' ) )
            // InternalDockerCompose.g:2583:1: ( 'devices:' )
            {
            // InternalDockerCompose.g:2583:1: ( 'devices:' )
            // InternalDockerCompose.g:2584:2: 'devices:'
            {
             before(grammarAccess.getServiceAccess().getDevicesKeyword_3_12_0()); 
            match(input,51,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getDevicesKeyword_3_12_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12__0__Impl"


    // $ANTLR start "rule__Service__Group_3_12__1"
    // InternalDockerCompose.g:2593:1: rule__Service__Group_3_12__1 : rule__Service__Group_3_12__1__Impl ;
    public final void rule__Service__Group_3_12__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2597:1: ( rule__Service__Group_3_12__1__Impl )
            // InternalDockerCompose.g:2598:2: rule__Service__Group_3_12__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_12__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12__1"


    // $ANTLR start "rule__Service__Group_3_12__1__Impl"
    // InternalDockerCompose.g:2604:1: rule__Service__Group_3_12__1__Impl : ( ( ( rule__Service__Group_3_12_1__0 ) ) ( ( rule__Service__Group_3_12_1__0 )* ) ) ;
    public final void rule__Service__Group_3_12__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2608:1: ( ( ( ( rule__Service__Group_3_12_1__0 ) ) ( ( rule__Service__Group_3_12_1__0 )* ) ) )
            // InternalDockerCompose.g:2609:1: ( ( ( rule__Service__Group_3_12_1__0 ) ) ( ( rule__Service__Group_3_12_1__0 )* ) )
            {
            // InternalDockerCompose.g:2609:1: ( ( ( rule__Service__Group_3_12_1__0 ) ) ( ( rule__Service__Group_3_12_1__0 )* ) )
            // InternalDockerCompose.g:2610:2: ( ( rule__Service__Group_3_12_1__0 ) ) ( ( rule__Service__Group_3_12_1__0 )* )
            {
            // InternalDockerCompose.g:2610:2: ( ( rule__Service__Group_3_12_1__0 ) )
            // InternalDockerCompose.g:2611:3: ( rule__Service__Group_3_12_1__0 )
            {
             before(grammarAccess.getServiceAccess().getGroup_3_12_1()); 
            // InternalDockerCompose.g:2612:3: ( rule__Service__Group_3_12_1__0 )
            // InternalDockerCompose.g:2612:4: rule__Service__Group_3_12_1__0
            {
            pushFollow(FOLLOW_3);
            rule__Service__Group_3_12_1__0();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getGroup_3_12_1()); 

            }

            // InternalDockerCompose.g:2615:2: ( ( rule__Service__Group_3_12_1__0 )* )
            // InternalDockerCompose.g:2616:3: ( rule__Service__Group_3_12_1__0 )*
            {
             before(grammarAccess.getServiceAccess().getGroup_3_12_1()); 
            // InternalDockerCompose.g:2617:3: ( rule__Service__Group_3_12_1__0 )*
            loop26:
            do {
                int alt26=2;
                int LA26_0 = input.LA(1);

                if ( (LA26_0==50) ) {
                    alt26=1;
                }


                switch (alt26) {
            	case 1 :
            	    // InternalDockerCompose.g:2617:4: rule__Service__Group_3_12_1__0
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Service__Group_3_12_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop26;
                }
            } while (true);

             after(grammarAccess.getServiceAccess().getGroup_3_12_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12__1__Impl"


    // $ANTLR start "rule__Service__Group_3_12_1__0"
    // InternalDockerCompose.g:2627:1: rule__Service__Group_3_12_1__0 : rule__Service__Group_3_12_1__0__Impl rule__Service__Group_3_12_1__1 ;
    public final void rule__Service__Group_3_12_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2631:1: ( rule__Service__Group_3_12_1__0__Impl rule__Service__Group_3_12_1__1 )
            // InternalDockerCompose.g:2632:2: rule__Service__Group_3_12_1__0__Impl rule__Service__Group_3_12_1__1
            {
            pushFollow(FOLLOW_18);
            rule__Service__Group_3_12_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_12_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12_1__0"


    // $ANTLR start "rule__Service__Group_3_12_1__0__Impl"
    // InternalDockerCompose.g:2639:1: rule__Service__Group_3_12_1__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_12_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2643:1: ( ( '-' ) )
            // InternalDockerCompose.g:2644:1: ( '-' )
            {
            // InternalDockerCompose.g:2644:1: ( '-' )
            // InternalDockerCompose.g:2645:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_12_1_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_12_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_12_1__1"
    // InternalDockerCompose.g:2654:1: rule__Service__Group_3_12_1__1 : rule__Service__Group_3_12_1__1__Impl ;
    public final void rule__Service__Group_3_12_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2658:1: ( rule__Service__Group_3_12_1__1__Impl )
            // InternalDockerCompose.g:2659:2: rule__Service__Group_3_12_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_12_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12_1__1"


    // $ANTLR start "rule__Service__Group_3_12_1__1__Impl"
    // InternalDockerCompose.g:2665:1: rule__Service__Group_3_12_1__1__Impl : ( RULE_DEVICE ) ;
    public final void rule__Service__Group_3_12_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2669:1: ( ( RULE_DEVICE ) )
            // InternalDockerCompose.g:2670:1: ( RULE_DEVICE )
            {
            // InternalDockerCompose.g:2670:1: ( RULE_DEVICE )
            // InternalDockerCompose.g:2671:2: RULE_DEVICE
            {
             before(grammarAccess.getServiceAccess().getDEVICETerminalRuleCall_3_12_1_1()); 
            match(input,RULE_DEVICE,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getDEVICETerminalRuleCall_3_12_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_13__0"
    // InternalDockerCompose.g:2681:1: rule__Service__Group_3_13__0 : rule__Service__Group_3_13__0__Impl rule__Service__Group_3_13__1 ;
    public final void rule__Service__Group_3_13__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2685:1: ( rule__Service__Group_3_13__0__Impl rule__Service__Group_3_13__1 )
            // InternalDockerCompose.g:2686:2: rule__Service__Group_3_13__0__Impl rule__Service__Group_3_13__1
            {
            pushFollow(FOLLOW_19);
            rule__Service__Group_3_13__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_13__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13__0"


    // $ANTLR start "rule__Service__Group_3_13__0__Impl"
    // InternalDockerCompose.g:2693:1: rule__Service__Group_3_13__0__Impl : ( 'dns:' ) ;
    public final void rule__Service__Group_3_13__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2697:1: ( ( 'dns:' ) )
            // InternalDockerCompose.g:2698:1: ( 'dns:' )
            {
            // InternalDockerCompose.g:2698:1: ( 'dns:' )
            // InternalDockerCompose.g:2699:2: 'dns:'
            {
             before(grammarAccess.getServiceAccess().getDnsKeyword_3_13_0()); 
            match(input,52,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getDnsKeyword_3_13_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13__0__Impl"


    // $ANTLR start "rule__Service__Group_3_13__1"
    // InternalDockerCompose.g:2708:1: rule__Service__Group_3_13__1 : rule__Service__Group_3_13__1__Impl ;
    public final void rule__Service__Group_3_13__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2712:1: ( rule__Service__Group_3_13__1__Impl )
            // InternalDockerCompose.g:2713:2: rule__Service__Group_3_13__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_13__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13__1"


    // $ANTLR start "rule__Service__Group_3_13__1__Impl"
    // InternalDockerCompose.g:2719:1: rule__Service__Group_3_13__1__Impl : ( ( rule__Service__Alternatives_3_13_1 ) ) ;
    public final void rule__Service__Group_3_13__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2723:1: ( ( ( rule__Service__Alternatives_3_13_1 ) ) )
            // InternalDockerCompose.g:2724:1: ( ( rule__Service__Alternatives_3_13_1 ) )
            {
            // InternalDockerCompose.g:2724:1: ( ( rule__Service__Alternatives_3_13_1 ) )
            // InternalDockerCompose.g:2725:2: ( rule__Service__Alternatives_3_13_1 )
            {
             before(grammarAccess.getServiceAccess().getAlternatives_3_13_1()); 
            // InternalDockerCompose.g:2726:2: ( rule__Service__Alternatives_3_13_1 )
            // InternalDockerCompose.g:2726:3: rule__Service__Alternatives_3_13_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Alternatives_3_13_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getAlternatives_3_13_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13__1__Impl"


    // $ANTLR start "rule__Service__Group_3_13_1_0__0"
    // InternalDockerCompose.g:2735:1: rule__Service__Group_3_13_1_0__0 : rule__Service__Group_3_13_1_0__0__Impl rule__Service__Group_3_13_1_0__1 ;
    public final void rule__Service__Group_3_13_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2739:1: ( rule__Service__Group_3_13_1_0__0__Impl rule__Service__Group_3_13_1_0__1 )
            // InternalDockerCompose.g:2740:2: rule__Service__Group_3_13_1_0__0__Impl rule__Service__Group_3_13_1_0__1
            {
            pushFollow(FOLLOW_19);
            rule__Service__Group_3_13_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_13_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13_1_0__0"


    // $ANTLR start "rule__Service__Group_3_13_1_0__0__Impl"
    // InternalDockerCompose.g:2747:1: rule__Service__Group_3_13_1_0__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_13_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2751:1: ( ( '-' ) )
            // InternalDockerCompose.g:2752:1: ( '-' )
            {
            // InternalDockerCompose.g:2752:1: ( '-' )
            // InternalDockerCompose.g:2753:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_13_1_0_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_13_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13_1_0__0__Impl"


    // $ANTLR start "rule__Service__Group_3_13_1_0__1"
    // InternalDockerCompose.g:2762:1: rule__Service__Group_3_13_1_0__1 : rule__Service__Group_3_13_1_0__1__Impl ;
    public final void rule__Service__Group_3_13_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2766:1: ( rule__Service__Group_3_13_1_0__1__Impl )
            // InternalDockerCompose.g:2767:2: rule__Service__Group_3_13_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_13_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13_1_0__1"


    // $ANTLR start "rule__Service__Group_3_13_1_0__1__Impl"
    // InternalDockerCompose.g:2773:1: rule__Service__Group_3_13_1_0__1__Impl : ( ( rule__Service__DnsAssignment_3_13_1_0_1 ) ) ;
    public final void rule__Service__Group_3_13_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2777:1: ( ( ( rule__Service__DnsAssignment_3_13_1_0_1 ) ) )
            // InternalDockerCompose.g:2778:1: ( ( rule__Service__DnsAssignment_3_13_1_0_1 ) )
            {
            // InternalDockerCompose.g:2778:1: ( ( rule__Service__DnsAssignment_3_13_1_0_1 ) )
            // InternalDockerCompose.g:2779:2: ( rule__Service__DnsAssignment_3_13_1_0_1 )
            {
             before(grammarAccess.getServiceAccess().getDnsAssignment_3_13_1_0_1()); 
            // InternalDockerCompose.g:2780:2: ( rule__Service__DnsAssignment_3_13_1_0_1 )
            // InternalDockerCompose.g:2780:3: rule__Service__DnsAssignment_3_13_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__DnsAssignment_3_13_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getDnsAssignment_3_13_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13_1_0__1__Impl"


    // $ANTLR start "rule__Service__Group_3_14__0"
    // InternalDockerCompose.g:2789:1: rule__Service__Group_3_14__0 : rule__Service__Group_3_14__0__Impl rule__Service__Group_3_14__1 ;
    public final void rule__Service__Group_3_14__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2793:1: ( rule__Service__Group_3_14__0__Impl rule__Service__Group_3_14__1 )
            // InternalDockerCompose.g:2794:2: rule__Service__Group_3_14__0__Impl rule__Service__Group_3_14__1
            {
            pushFollow(FOLLOW_13);
            rule__Service__Group_3_14__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_14__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14__0"


    // $ANTLR start "rule__Service__Group_3_14__0__Impl"
    // InternalDockerCompose.g:2801:1: rule__Service__Group_3_14__0__Impl : ( 'ports:' ) ;
    public final void rule__Service__Group_3_14__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2805:1: ( ( 'ports:' ) )
            // InternalDockerCompose.g:2806:1: ( 'ports:' )
            {
            // InternalDockerCompose.g:2806:1: ( 'ports:' )
            // InternalDockerCompose.g:2807:2: 'ports:'
            {
             before(grammarAccess.getServiceAccess().getPortsKeyword_3_14_0()); 
            match(input,53,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getPortsKeyword_3_14_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14__0__Impl"


    // $ANTLR start "rule__Service__Group_3_14__1"
    // InternalDockerCompose.g:2816:1: rule__Service__Group_3_14__1 : rule__Service__Group_3_14__1__Impl ;
    public final void rule__Service__Group_3_14__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2820:1: ( rule__Service__Group_3_14__1__Impl )
            // InternalDockerCompose.g:2821:2: rule__Service__Group_3_14__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_14__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14__1"


    // $ANTLR start "rule__Service__Group_3_14__1__Impl"
    // InternalDockerCompose.g:2827:1: rule__Service__Group_3_14__1__Impl : ( ( ( rule__Service__Group_3_14_1__0 ) ) ( ( rule__Service__Group_3_14_1__0 )* ) ) ;
    public final void rule__Service__Group_3_14__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2831:1: ( ( ( ( rule__Service__Group_3_14_1__0 ) ) ( ( rule__Service__Group_3_14_1__0 )* ) ) )
            // InternalDockerCompose.g:2832:1: ( ( ( rule__Service__Group_3_14_1__0 ) ) ( ( rule__Service__Group_3_14_1__0 )* ) )
            {
            // InternalDockerCompose.g:2832:1: ( ( ( rule__Service__Group_3_14_1__0 ) ) ( ( rule__Service__Group_3_14_1__0 )* ) )
            // InternalDockerCompose.g:2833:2: ( ( rule__Service__Group_3_14_1__0 ) ) ( ( rule__Service__Group_3_14_1__0 )* )
            {
            // InternalDockerCompose.g:2833:2: ( ( rule__Service__Group_3_14_1__0 ) )
            // InternalDockerCompose.g:2834:3: ( rule__Service__Group_3_14_1__0 )
            {
             before(grammarAccess.getServiceAccess().getGroup_3_14_1()); 
            // InternalDockerCompose.g:2835:3: ( rule__Service__Group_3_14_1__0 )
            // InternalDockerCompose.g:2835:4: rule__Service__Group_3_14_1__0
            {
            pushFollow(FOLLOW_3);
            rule__Service__Group_3_14_1__0();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getGroup_3_14_1()); 

            }

            // InternalDockerCompose.g:2838:2: ( ( rule__Service__Group_3_14_1__0 )* )
            // InternalDockerCompose.g:2839:3: ( rule__Service__Group_3_14_1__0 )*
            {
             before(grammarAccess.getServiceAccess().getGroup_3_14_1()); 
            // InternalDockerCompose.g:2840:3: ( rule__Service__Group_3_14_1__0 )*
            loop27:
            do {
                int alt27=2;
                int LA27_0 = input.LA(1);

                if ( (LA27_0==50) ) {
                    alt27=1;
                }


                switch (alt27) {
            	case 1 :
            	    // InternalDockerCompose.g:2840:4: rule__Service__Group_3_14_1__0
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Service__Group_3_14_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);

             after(grammarAccess.getServiceAccess().getGroup_3_14_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14__1__Impl"


    // $ANTLR start "rule__Service__Group_3_14_1__0"
    // InternalDockerCompose.g:2850:1: rule__Service__Group_3_14_1__0 : rule__Service__Group_3_14_1__0__Impl rule__Service__Group_3_14_1__1 ;
    public final void rule__Service__Group_3_14_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2854:1: ( rule__Service__Group_3_14_1__0__Impl rule__Service__Group_3_14_1__1 )
            // InternalDockerCompose.g:2855:2: rule__Service__Group_3_14_1__0__Impl rule__Service__Group_3_14_1__1
            {
            pushFollow(FOLLOW_20);
            rule__Service__Group_3_14_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_14_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14_1__0"


    // $ANTLR start "rule__Service__Group_3_14_1__0__Impl"
    // InternalDockerCompose.g:2862:1: rule__Service__Group_3_14_1__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_14_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2866:1: ( ( '-' ) )
            // InternalDockerCompose.g:2867:1: ( '-' )
            {
            // InternalDockerCompose.g:2867:1: ( '-' )
            // InternalDockerCompose.g:2868:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_14_1_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_14_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_14_1__1"
    // InternalDockerCompose.g:2877:1: rule__Service__Group_3_14_1__1 : rule__Service__Group_3_14_1__1__Impl ;
    public final void rule__Service__Group_3_14_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2881:1: ( rule__Service__Group_3_14_1__1__Impl )
            // InternalDockerCompose.g:2882:2: rule__Service__Group_3_14_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_14_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14_1__1"


    // $ANTLR start "rule__Service__Group_3_14_1__1__Impl"
    // InternalDockerCompose.g:2888:1: rule__Service__Group_3_14_1__1__Impl : ( RULE_PORT ) ;
    public final void rule__Service__Group_3_14_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2892:1: ( ( RULE_PORT ) )
            // InternalDockerCompose.g:2893:1: ( RULE_PORT )
            {
            // InternalDockerCompose.g:2893:1: ( RULE_PORT )
            // InternalDockerCompose.g:2894:2: RULE_PORT
            {
             before(grammarAccess.getServiceAccess().getPORTTerminalRuleCall_3_14_1_1()); 
            match(input,RULE_PORT,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getPORTTerminalRuleCall_3_14_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14_1__1__Impl"


    // $ANTLR start "rule__Image__Group_1__0"
    // InternalDockerCompose.g:2904:1: rule__Image__Group_1__0 : rule__Image__Group_1__0__Impl rule__Image__Group_1__1 ;
    public final void rule__Image__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2908:1: ( rule__Image__Group_1__0__Impl rule__Image__Group_1__1 )
            // InternalDockerCompose.g:2909:2: rule__Image__Group_1__0__Impl rule__Image__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__Image__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1__0"


    // $ANTLR start "rule__Image__Group_1__0__Impl"
    // InternalDockerCompose.g:2916:1: rule__Image__Group_1__0__Impl : ( RULE_ID ) ;
    public final void rule__Image__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2920:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:2921:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:2921:1: ( RULE_ID )
            // InternalDockerCompose.g:2922:2: RULE_ID
            {
             before(grammarAccess.getImageAccess().getIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getImageAccess().getIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1__0__Impl"


    // $ANTLR start "rule__Image__Group_1__1"
    // InternalDockerCompose.g:2931:1: rule__Image__Group_1__1 : rule__Image__Group_1__1__Impl ;
    public final void rule__Image__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2935:1: ( rule__Image__Group_1__1__Impl )
            // InternalDockerCompose.g:2936:2: rule__Image__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Image__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1__1"


    // $ANTLR start "rule__Image__Group_1__1__Impl"
    // InternalDockerCompose.g:2942:1: rule__Image__Group_1__1__Impl : ( ( ( rule__Image__Group_1_1__0 ) ) ( ( rule__Image__Group_1_1__0 )* ) ) ;
    public final void rule__Image__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2946:1: ( ( ( ( rule__Image__Group_1_1__0 ) ) ( ( rule__Image__Group_1_1__0 )* ) ) )
            // InternalDockerCompose.g:2947:1: ( ( ( rule__Image__Group_1_1__0 ) ) ( ( rule__Image__Group_1_1__0 )* ) )
            {
            // InternalDockerCompose.g:2947:1: ( ( ( rule__Image__Group_1_1__0 ) ) ( ( rule__Image__Group_1_1__0 )* ) )
            // InternalDockerCompose.g:2948:2: ( ( rule__Image__Group_1_1__0 ) ) ( ( rule__Image__Group_1_1__0 )* )
            {
            // InternalDockerCompose.g:2948:2: ( ( rule__Image__Group_1_1__0 ) )
            // InternalDockerCompose.g:2949:3: ( rule__Image__Group_1_1__0 )
            {
             before(grammarAccess.getImageAccess().getGroup_1_1()); 
            // InternalDockerCompose.g:2950:3: ( rule__Image__Group_1_1__0 )
            // InternalDockerCompose.g:2950:4: rule__Image__Group_1_1__0
            {
            pushFollow(FOLLOW_21);
            rule__Image__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getImageAccess().getGroup_1_1()); 

            }

            // InternalDockerCompose.g:2953:2: ( ( rule__Image__Group_1_1__0 )* )
            // InternalDockerCompose.g:2954:3: ( rule__Image__Group_1_1__0 )*
            {
             before(grammarAccess.getImageAccess().getGroup_1_1()); 
            // InternalDockerCompose.g:2955:3: ( rule__Image__Group_1_1__0 )*
            loop28:
            do {
                int alt28=2;
                int LA28_0 = input.LA(1);

                if ( (LA28_0==40) ) {
                    alt28=1;
                }


                switch (alt28) {
            	case 1 :
            	    // InternalDockerCompose.g:2955:4: rule__Image__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_21);
            	    rule__Image__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop28;
                }
            } while (true);

             after(grammarAccess.getImageAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1__1__Impl"


    // $ANTLR start "rule__Image__Group_1_1__0"
    // InternalDockerCompose.g:2965:1: rule__Image__Group_1_1__0 : rule__Image__Group_1_1__0__Impl rule__Image__Group_1_1__1 ;
    public final void rule__Image__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2969:1: ( rule__Image__Group_1_1__0__Impl rule__Image__Group_1_1__1 )
            // InternalDockerCompose.g:2970:2: rule__Image__Group_1_1__0__Impl rule__Image__Group_1_1__1
            {
            pushFollow(FOLLOW_22);
            rule__Image__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1_1__0"


    // $ANTLR start "rule__Image__Group_1_1__0__Impl"
    // InternalDockerCompose.g:2977:1: rule__Image__Group_1_1__0__Impl : ( ':' ) ;
    public final void rule__Image__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2981:1: ( ( ':' ) )
            // InternalDockerCompose.g:2982:1: ( ':' )
            {
            // InternalDockerCompose.g:2982:1: ( ':' )
            // InternalDockerCompose.g:2983:2: ':'
            {
             before(grammarAccess.getImageAccess().getColonKeyword_1_1_0()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getImageAccess().getColonKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1_1__0__Impl"


    // $ANTLR start "rule__Image__Group_1_1__1"
    // InternalDockerCompose.g:2992:1: rule__Image__Group_1_1__1 : rule__Image__Group_1_1__1__Impl ;
    public final void rule__Image__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2996:1: ( rule__Image__Group_1_1__1__Impl )
            // InternalDockerCompose.g:2997:2: rule__Image__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Image__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1_1__1"


    // $ANTLR start "rule__Image__Group_1_1__1__Impl"
    // InternalDockerCompose.g:3003:1: rule__Image__Group_1_1__1__Impl : ( RULE_ID ) ;
    public final void rule__Image__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3007:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:3008:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:3008:1: ( RULE_ID )
            // InternalDockerCompose.g:3009:2: RULE_ID
            {
             before(grammarAccess.getImageAccess().getIDTerminalRuleCall_1_1_1()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getImageAccess().getIDTerminalRuleCall_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1_1__1__Impl"


    // $ANTLR start "rule__Dependency__Group__0"
    // InternalDockerCompose.g:3019:1: rule__Dependency__Group__0 : rule__Dependency__Group__0__Impl rule__Dependency__Group__1 ;
    public final void rule__Dependency__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3023:1: ( rule__Dependency__Group__0__Impl rule__Dependency__Group__1 )
            // InternalDockerCompose.g:3024:2: rule__Dependency__Group__0__Impl rule__Dependency__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__Dependency__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Dependency__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency__Group__0"


    // $ANTLR start "rule__Dependency__Group__0__Impl"
    // InternalDockerCompose.g:3031:1: rule__Dependency__Group__0__Impl : ( () ) ;
    public final void rule__Dependency__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3035:1: ( ( () ) )
            // InternalDockerCompose.g:3036:1: ( () )
            {
            // InternalDockerCompose.g:3036:1: ( () )
            // InternalDockerCompose.g:3037:2: ()
            {
             before(grammarAccess.getDependencyAccess().getDependencyAction_0()); 
            // InternalDockerCompose.g:3038:2: ()
            // InternalDockerCompose.g:3038:3: 
            {
            }

             after(grammarAccess.getDependencyAccess().getDependencyAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency__Group__0__Impl"


    // $ANTLR start "rule__Dependency__Group__1"
    // InternalDockerCompose.g:3046:1: rule__Dependency__Group__1 : rule__Dependency__Group__1__Impl ;
    public final void rule__Dependency__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3050:1: ( rule__Dependency__Group__1__Impl )
            // InternalDockerCompose.g:3051:2: rule__Dependency__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Dependency__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency__Group__1"


    // $ANTLR start "rule__Dependency__Group__1__Impl"
    // InternalDockerCompose.g:3057:1: rule__Dependency__Group__1__Impl : ( ( rule__Dependency__ServiceAssignment_1 ) ) ;
    public final void rule__Dependency__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3061:1: ( ( ( rule__Dependency__ServiceAssignment_1 ) ) )
            // InternalDockerCompose.g:3062:1: ( ( rule__Dependency__ServiceAssignment_1 ) )
            {
            // InternalDockerCompose.g:3062:1: ( ( rule__Dependency__ServiceAssignment_1 ) )
            // InternalDockerCompose.g:3063:2: ( rule__Dependency__ServiceAssignment_1 )
            {
             before(grammarAccess.getDependencyAccess().getServiceAssignment_1()); 
            // InternalDockerCompose.g:3064:2: ( rule__Dependency__ServiceAssignment_1 )
            // InternalDockerCompose.g:3064:3: rule__Dependency__ServiceAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Dependency__ServiceAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getDependencyAccess().getServiceAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency__Group__1__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_0__0"
    // InternalDockerCompose.g:3073:1: rule__NetworkConnector__Group_0__0 : rule__NetworkConnector__Group_0__0__Impl rule__NetworkConnector__Group_0__1 ;
    public final void rule__NetworkConnector__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3077:1: ( rule__NetworkConnector__Group_0__0__Impl rule__NetworkConnector__Group_0__1 )
            // InternalDockerCompose.g:3078:2: rule__NetworkConnector__Group_0__0__Impl rule__NetworkConnector__Group_0__1
            {
            pushFollow(FOLLOW_13);
            rule__NetworkConnector__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_0__0"


    // $ANTLR start "rule__NetworkConnector__Group_0__0__Impl"
    // InternalDockerCompose.g:3085:1: rule__NetworkConnector__Group_0__0__Impl : ( () ) ;
    public final void rule__NetworkConnector__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3089:1: ( ( () ) )
            // InternalDockerCompose.g:3090:1: ( () )
            {
            // InternalDockerCompose.g:3090:1: ( () )
            // InternalDockerCompose.g:3091:2: ()
            {
             before(grammarAccess.getNetworkConnectorAccess().getNetworkConnectorAction_0_0()); 
            // InternalDockerCompose.g:3092:2: ()
            // InternalDockerCompose.g:3092:3: 
            {
            }

             after(grammarAccess.getNetworkConnectorAccess().getNetworkConnectorAction_0_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_0__0__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_0__1"
    // InternalDockerCompose.g:3100:1: rule__NetworkConnector__Group_0__1 : rule__NetworkConnector__Group_0__1__Impl ;
    public final void rule__NetworkConnector__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3104:1: ( rule__NetworkConnector__Group_0__1__Impl )
            // InternalDockerCompose.g:3105:2: rule__NetworkConnector__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_0__1"


    // $ANTLR start "rule__NetworkConnector__Group_0__1__Impl"
    // InternalDockerCompose.g:3111:1: rule__NetworkConnector__Group_0__1__Impl : ( ( rule__NetworkConnector__Group_0_1__0 ) ) ;
    public final void rule__NetworkConnector__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3115:1: ( ( ( rule__NetworkConnector__Group_0_1__0 ) ) )
            // InternalDockerCompose.g:3116:1: ( ( rule__NetworkConnector__Group_0_1__0 ) )
            {
            // InternalDockerCompose.g:3116:1: ( ( rule__NetworkConnector__Group_0_1__0 ) )
            // InternalDockerCompose.g:3117:2: ( rule__NetworkConnector__Group_0_1__0 )
            {
             before(grammarAccess.getNetworkConnectorAccess().getGroup_0_1()); 
            // InternalDockerCompose.g:3118:2: ( rule__NetworkConnector__Group_0_1__0 )
            // InternalDockerCompose.g:3118:3: rule__NetworkConnector__Group_0_1__0
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_0_1__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getGroup_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_0__1__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_0_1__0"
    // InternalDockerCompose.g:3127:1: rule__NetworkConnector__Group_0_1__0 : rule__NetworkConnector__Group_0_1__0__Impl rule__NetworkConnector__Group_0_1__1 ;
    public final void rule__NetworkConnector__Group_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3131:1: ( rule__NetworkConnector__Group_0_1__0__Impl rule__NetworkConnector__Group_0_1__1 )
            // InternalDockerCompose.g:3132:2: rule__NetworkConnector__Group_0_1__0__Impl rule__NetworkConnector__Group_0_1__1
            {
            pushFollow(FOLLOW_5);
            rule__NetworkConnector__Group_0_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_0_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_0_1__0"


    // $ANTLR start "rule__NetworkConnector__Group_0_1__0__Impl"
    // InternalDockerCompose.g:3139:1: rule__NetworkConnector__Group_0_1__0__Impl : ( '-' ) ;
    public final void rule__NetworkConnector__Group_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3143:1: ( ( '-' ) )
            // InternalDockerCompose.g:3144:1: ( '-' )
            {
            // InternalDockerCompose.g:3144:1: ( '-' )
            // InternalDockerCompose.g:3145:2: '-'
            {
             before(grammarAccess.getNetworkConnectorAccess().getHyphenMinusKeyword_0_1_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getNetworkConnectorAccess().getHyphenMinusKeyword_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_0_1__0__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_0_1__1"
    // InternalDockerCompose.g:3154:1: rule__NetworkConnector__Group_0_1__1 : rule__NetworkConnector__Group_0_1__1__Impl ;
    public final void rule__NetworkConnector__Group_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3158:1: ( rule__NetworkConnector__Group_0_1__1__Impl )
            // InternalDockerCompose.g:3159:2: rule__NetworkConnector__Group_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_0_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_0_1__1"


    // $ANTLR start "rule__NetworkConnector__Group_0_1__1__Impl"
    // InternalDockerCompose.g:3165:1: rule__NetworkConnector__Group_0_1__1__Impl : ( ( rule__NetworkConnector__NetworkAssignment_0_1_1 ) ) ;
    public final void rule__NetworkConnector__Group_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3169:1: ( ( ( rule__NetworkConnector__NetworkAssignment_0_1_1 ) ) )
            // InternalDockerCompose.g:3170:1: ( ( rule__NetworkConnector__NetworkAssignment_0_1_1 ) )
            {
            // InternalDockerCompose.g:3170:1: ( ( rule__NetworkConnector__NetworkAssignment_0_1_1 ) )
            // InternalDockerCompose.g:3171:2: ( rule__NetworkConnector__NetworkAssignment_0_1_1 )
            {
             before(grammarAccess.getNetworkConnectorAccess().getNetworkAssignment_0_1_1()); 
            // InternalDockerCompose.g:3172:2: ( rule__NetworkConnector__NetworkAssignment_0_1_1 )
            // InternalDockerCompose.g:3172:3: rule__NetworkConnector__NetworkAssignment_0_1_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__NetworkAssignment_0_1_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getNetworkAssignment_0_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_0_1__1__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1__0"
    // InternalDockerCompose.g:3181:1: rule__NetworkConnector__Group_1__0 : rule__NetworkConnector__Group_1__0__Impl rule__NetworkConnector__Group_1__1 ;
    public final void rule__NetworkConnector__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3185:1: ( rule__NetworkConnector__Group_1__0__Impl rule__NetworkConnector__Group_1__1 )
            // InternalDockerCompose.g:3186:2: rule__NetworkConnector__Group_1__0__Impl rule__NetworkConnector__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__NetworkConnector__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1__0"


    // $ANTLR start "rule__NetworkConnector__Group_1__0__Impl"
    // InternalDockerCompose.g:3193:1: rule__NetworkConnector__Group_1__0__Impl : ( ( rule__NetworkConnector__NetworkAssignment_1_0 ) ) ;
    public final void rule__NetworkConnector__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3197:1: ( ( ( rule__NetworkConnector__NetworkAssignment_1_0 ) ) )
            // InternalDockerCompose.g:3198:1: ( ( rule__NetworkConnector__NetworkAssignment_1_0 ) )
            {
            // InternalDockerCompose.g:3198:1: ( ( rule__NetworkConnector__NetworkAssignment_1_0 ) )
            // InternalDockerCompose.g:3199:2: ( rule__NetworkConnector__NetworkAssignment_1_0 )
            {
             before(grammarAccess.getNetworkConnectorAccess().getNetworkAssignment_1_0()); 
            // InternalDockerCompose.g:3200:2: ( rule__NetworkConnector__NetworkAssignment_1_0 )
            // InternalDockerCompose.g:3200:3: rule__NetworkConnector__NetworkAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__NetworkAssignment_1_0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getNetworkAssignment_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1__0__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1__1"
    // InternalDockerCompose.g:3208:1: rule__NetworkConnector__Group_1__1 : rule__NetworkConnector__Group_1__1__Impl rule__NetworkConnector__Group_1__2 ;
    public final void rule__NetworkConnector__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3212:1: ( rule__NetworkConnector__Group_1__1__Impl rule__NetworkConnector__Group_1__2 )
            // InternalDockerCompose.g:3213:2: rule__NetworkConnector__Group_1__1__Impl rule__NetworkConnector__Group_1__2
            {
            pushFollow(FOLLOW_23);
            rule__NetworkConnector__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1__1"


    // $ANTLR start "rule__NetworkConnector__Group_1__1__Impl"
    // InternalDockerCompose.g:3220:1: rule__NetworkConnector__Group_1__1__Impl : ( ':' ) ;
    public final void rule__NetworkConnector__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3224:1: ( ( ':' ) )
            // InternalDockerCompose.g:3225:1: ( ':' )
            {
            // InternalDockerCompose.g:3225:1: ( ':' )
            // InternalDockerCompose.g:3226:2: ':'
            {
             before(grammarAccess.getNetworkConnectorAccess().getColonKeyword_1_1()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getNetworkConnectorAccess().getColonKeyword_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1__1__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1__2"
    // InternalDockerCompose.g:3235:1: rule__NetworkConnector__Group_1__2 : rule__NetworkConnector__Group_1__2__Impl ;
    public final void rule__NetworkConnector__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3239:1: ( rule__NetworkConnector__Group_1__2__Impl )
            // InternalDockerCompose.g:3240:2: rule__NetworkConnector__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1__2"


    // $ANTLR start "rule__NetworkConnector__Group_1__2__Impl"
    // InternalDockerCompose.g:3246:1: rule__NetworkConnector__Group_1__2__Impl : ( ( rule__NetworkConnector__UnorderedGroup_1_2 ) ) ;
    public final void rule__NetworkConnector__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3250:1: ( ( ( rule__NetworkConnector__UnorderedGroup_1_2 ) ) )
            // InternalDockerCompose.g:3251:1: ( ( rule__NetworkConnector__UnorderedGroup_1_2 ) )
            {
            // InternalDockerCompose.g:3251:1: ( ( rule__NetworkConnector__UnorderedGroup_1_2 ) )
            // InternalDockerCompose.g:3252:2: ( rule__NetworkConnector__UnorderedGroup_1_2 )
            {
             before(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2()); 
            // InternalDockerCompose.g:3253:2: ( rule__NetworkConnector__UnorderedGroup_1_2 )
            // InternalDockerCompose.g:3253:3: rule__NetworkConnector__UnorderedGroup_1_2
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__UnorderedGroup_1_2();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1__2__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_2_0__0"
    // InternalDockerCompose.g:3262:1: rule__NetworkConnector__Group_1_2_0__0 : rule__NetworkConnector__Group_1_2_0__0__Impl rule__NetworkConnector__Group_1_2_0__1 ;
    public final void rule__NetworkConnector__Group_1_2_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3266:1: ( rule__NetworkConnector__Group_1_2_0__0__Impl rule__NetworkConnector__Group_1_2_0__1 )
            // InternalDockerCompose.g:3267:2: rule__NetworkConnector__Group_1_2_0__0__Impl rule__NetworkConnector__Group_1_2_0__1
            {
            pushFollow(FOLLOW_19);
            rule__NetworkConnector__Group_1_2_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_2_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_2_0__0"


    // $ANTLR start "rule__NetworkConnector__Group_1_2_0__0__Impl"
    // InternalDockerCompose.g:3274:1: rule__NetworkConnector__Group_1_2_0__0__Impl : ( 'ipv4_address:' ) ;
    public final void rule__NetworkConnector__Group_1_2_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3278:1: ( ( 'ipv4_address:' ) )
            // InternalDockerCompose.g:3279:1: ( 'ipv4_address:' )
            {
            // InternalDockerCompose.g:3279:1: ( 'ipv4_address:' )
            // InternalDockerCompose.g:3280:2: 'ipv4_address:'
            {
             before(grammarAccess.getNetworkConnectorAccess().getIpv4_addressKeyword_1_2_0_0()); 
            match(input,54,FOLLOW_2); 
             after(grammarAccess.getNetworkConnectorAccess().getIpv4_addressKeyword_1_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_2_0__0__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_2_0__1"
    // InternalDockerCompose.g:3289:1: rule__NetworkConnector__Group_1_2_0__1 : rule__NetworkConnector__Group_1_2_0__1__Impl ;
    public final void rule__NetworkConnector__Group_1_2_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3293:1: ( rule__NetworkConnector__Group_1_2_0__1__Impl )
            // InternalDockerCompose.g:3294:2: rule__NetworkConnector__Group_1_2_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_2_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_2_0__1"


    // $ANTLR start "rule__NetworkConnector__Group_1_2_0__1__Impl"
    // InternalDockerCompose.g:3300:1: rule__NetworkConnector__Group_1_2_0__1__Impl : ( ( rule__NetworkConnector__Ipv4_addressAssignment_1_2_0_1 ) ) ;
    public final void rule__NetworkConnector__Group_1_2_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3304:1: ( ( ( rule__NetworkConnector__Ipv4_addressAssignment_1_2_0_1 ) ) )
            // InternalDockerCompose.g:3305:1: ( ( rule__NetworkConnector__Ipv4_addressAssignment_1_2_0_1 ) )
            {
            // InternalDockerCompose.g:3305:1: ( ( rule__NetworkConnector__Ipv4_addressAssignment_1_2_0_1 ) )
            // InternalDockerCompose.g:3306:2: ( rule__NetworkConnector__Ipv4_addressAssignment_1_2_0_1 )
            {
             before(grammarAccess.getNetworkConnectorAccess().getIpv4_addressAssignment_1_2_0_1()); 
            // InternalDockerCompose.g:3307:2: ( rule__NetworkConnector__Ipv4_addressAssignment_1_2_0_1 )
            // InternalDockerCompose.g:3307:3: rule__NetworkConnector__Ipv4_addressAssignment_1_2_0_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Ipv4_addressAssignment_1_2_0_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getIpv4_addressAssignment_1_2_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_2_0__1__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_2_1__0"
    // InternalDockerCompose.g:3316:1: rule__NetworkConnector__Group_1_2_1__0 : rule__NetworkConnector__Group_1_2_1__0__Impl rule__NetworkConnector__Group_1_2_1__1 ;
    public final void rule__NetworkConnector__Group_1_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3320:1: ( rule__NetworkConnector__Group_1_2_1__0__Impl rule__NetworkConnector__Group_1_2_1__1 )
            // InternalDockerCompose.g:3321:2: rule__NetworkConnector__Group_1_2_1__0__Impl rule__NetworkConnector__Group_1_2_1__1
            {
            pushFollow(FOLLOW_10);
            rule__NetworkConnector__Group_1_2_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_2_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_2_1__0"


    // $ANTLR start "rule__NetworkConnector__Group_1_2_1__0__Impl"
    // InternalDockerCompose.g:3328:1: rule__NetworkConnector__Group_1_2_1__0__Impl : ( 'priority:' ) ;
    public final void rule__NetworkConnector__Group_1_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3332:1: ( ( 'priority:' ) )
            // InternalDockerCompose.g:3333:1: ( 'priority:' )
            {
            // InternalDockerCompose.g:3333:1: ( 'priority:' )
            // InternalDockerCompose.g:3334:2: 'priority:'
            {
             before(grammarAccess.getNetworkConnectorAccess().getPriorityKeyword_1_2_1_0()); 
            match(input,55,FOLLOW_2); 
             after(grammarAccess.getNetworkConnectorAccess().getPriorityKeyword_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_2_1__0__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_2_1__1"
    // InternalDockerCompose.g:3343:1: rule__NetworkConnector__Group_1_2_1__1 : rule__NetworkConnector__Group_1_2_1__1__Impl ;
    public final void rule__NetworkConnector__Group_1_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3347:1: ( rule__NetworkConnector__Group_1_2_1__1__Impl )
            // InternalDockerCompose.g:3348:2: rule__NetworkConnector__Group_1_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_2_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_2_1__1"


    // $ANTLR start "rule__NetworkConnector__Group_1_2_1__1__Impl"
    // InternalDockerCompose.g:3354:1: rule__NetworkConnector__Group_1_2_1__1__Impl : ( ( rule__NetworkConnector__PriorityAssignment_1_2_1_1 ) ) ;
    public final void rule__NetworkConnector__Group_1_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3358:1: ( ( ( rule__NetworkConnector__PriorityAssignment_1_2_1_1 ) ) )
            // InternalDockerCompose.g:3359:1: ( ( rule__NetworkConnector__PriorityAssignment_1_2_1_1 ) )
            {
            // InternalDockerCompose.g:3359:1: ( ( rule__NetworkConnector__PriorityAssignment_1_2_1_1 ) )
            // InternalDockerCompose.g:3360:2: ( rule__NetworkConnector__PriorityAssignment_1_2_1_1 )
            {
             before(grammarAccess.getNetworkConnectorAccess().getPriorityAssignment_1_2_1_1()); 
            // InternalDockerCompose.g:3361:2: ( rule__NetworkConnector__PriorityAssignment_1_2_1_1 )
            // InternalDockerCompose.g:3361:3: rule__NetworkConnector__PriorityAssignment_1_2_1_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__PriorityAssignment_1_2_1_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getPriorityAssignment_1_2_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_2_1__1__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_2_2__0"
    // InternalDockerCompose.g:3370:1: rule__NetworkConnector__Group_1_2_2__0 : rule__NetworkConnector__Group_1_2_2__0__Impl rule__NetworkConnector__Group_1_2_2__1 ;
    public final void rule__NetworkConnector__Group_1_2_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3374:1: ( rule__NetworkConnector__Group_1_2_2__0__Impl rule__NetworkConnector__Group_1_2_2__1 )
            // InternalDockerCompose.g:3375:2: rule__NetworkConnector__Group_1_2_2__0__Impl rule__NetworkConnector__Group_1_2_2__1
            {
            pushFollow(FOLLOW_13);
            rule__NetworkConnector__Group_1_2_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_2_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_2_2__0"


    // $ANTLR start "rule__NetworkConnector__Group_1_2_2__0__Impl"
    // InternalDockerCompose.g:3382:1: rule__NetworkConnector__Group_1_2_2__0__Impl : ( 'aliases:' ) ;
    public final void rule__NetworkConnector__Group_1_2_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3386:1: ( ( 'aliases:' ) )
            // InternalDockerCompose.g:3387:1: ( 'aliases:' )
            {
            // InternalDockerCompose.g:3387:1: ( 'aliases:' )
            // InternalDockerCompose.g:3388:2: 'aliases:'
            {
             before(grammarAccess.getNetworkConnectorAccess().getAliasesKeyword_1_2_2_0()); 
            match(input,56,FOLLOW_2); 
             after(grammarAccess.getNetworkConnectorAccess().getAliasesKeyword_1_2_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_2_2__0__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_2_2__1"
    // InternalDockerCompose.g:3397:1: rule__NetworkConnector__Group_1_2_2__1 : rule__NetworkConnector__Group_1_2_2__1__Impl ;
    public final void rule__NetworkConnector__Group_1_2_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3401:1: ( rule__NetworkConnector__Group_1_2_2__1__Impl )
            // InternalDockerCompose.g:3402:2: rule__NetworkConnector__Group_1_2_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_2_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_2_2__1"


    // $ANTLR start "rule__NetworkConnector__Group_1_2_2__1__Impl"
    // InternalDockerCompose.g:3408:1: rule__NetworkConnector__Group_1_2_2__1__Impl : ( ( ( rule__NetworkConnector__Group_1_2_2_1__0 ) ) ( ( rule__NetworkConnector__Group_1_2_2_1__0 )* ) ) ;
    public final void rule__NetworkConnector__Group_1_2_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3412:1: ( ( ( ( rule__NetworkConnector__Group_1_2_2_1__0 ) ) ( ( rule__NetworkConnector__Group_1_2_2_1__0 )* ) ) )
            // InternalDockerCompose.g:3413:1: ( ( ( rule__NetworkConnector__Group_1_2_2_1__0 ) ) ( ( rule__NetworkConnector__Group_1_2_2_1__0 )* ) )
            {
            // InternalDockerCompose.g:3413:1: ( ( ( rule__NetworkConnector__Group_1_2_2_1__0 ) ) ( ( rule__NetworkConnector__Group_1_2_2_1__0 )* ) )
            // InternalDockerCompose.g:3414:2: ( ( rule__NetworkConnector__Group_1_2_2_1__0 ) ) ( ( rule__NetworkConnector__Group_1_2_2_1__0 )* )
            {
            // InternalDockerCompose.g:3414:2: ( ( rule__NetworkConnector__Group_1_2_2_1__0 ) )
            // InternalDockerCompose.g:3415:3: ( rule__NetworkConnector__Group_1_2_2_1__0 )
            {
             before(grammarAccess.getNetworkConnectorAccess().getGroup_1_2_2_1()); 
            // InternalDockerCompose.g:3416:3: ( rule__NetworkConnector__Group_1_2_2_1__0 )
            // InternalDockerCompose.g:3416:4: rule__NetworkConnector__Group_1_2_2_1__0
            {
            pushFollow(FOLLOW_3);
            rule__NetworkConnector__Group_1_2_2_1__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getGroup_1_2_2_1()); 

            }

            // InternalDockerCompose.g:3419:2: ( ( rule__NetworkConnector__Group_1_2_2_1__0 )* )
            // InternalDockerCompose.g:3420:3: ( rule__NetworkConnector__Group_1_2_2_1__0 )*
            {
             before(grammarAccess.getNetworkConnectorAccess().getGroup_1_2_2_1()); 
            // InternalDockerCompose.g:3421:3: ( rule__NetworkConnector__Group_1_2_2_1__0 )*
            loop29:
            do {
                int alt29=2;
                int LA29_0 = input.LA(1);

                if ( (LA29_0==50) ) {
                    int LA29_2 = input.LA(2);

                    if ( (LA29_2==RULE_STRING) ) {
                        alt29=1;
                    }
                    else if ( (LA29_2==RULE_ID) ) {
                        alt29=1;
                    }


                }


                switch (alt29) {
            	case 1 :
            	    // InternalDockerCompose.g:3421:4: rule__NetworkConnector__Group_1_2_2_1__0
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__NetworkConnector__Group_1_2_2_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop29;
                }
            } while (true);

             after(grammarAccess.getNetworkConnectorAccess().getGroup_1_2_2_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_2_2__1__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_2_2_1__0"
    // InternalDockerCompose.g:3431:1: rule__NetworkConnector__Group_1_2_2_1__0 : rule__NetworkConnector__Group_1_2_2_1__0__Impl rule__NetworkConnector__Group_1_2_2_1__1 ;
    public final void rule__NetworkConnector__Group_1_2_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3435:1: ( rule__NetworkConnector__Group_1_2_2_1__0__Impl rule__NetworkConnector__Group_1_2_2_1__1 )
            // InternalDockerCompose.g:3436:2: rule__NetworkConnector__Group_1_2_2_1__0__Impl rule__NetworkConnector__Group_1_2_2_1__1
            {
            pushFollow(FOLLOW_5);
            rule__NetworkConnector__Group_1_2_2_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_2_2_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_2_2_1__0"


    // $ANTLR start "rule__NetworkConnector__Group_1_2_2_1__0__Impl"
    // InternalDockerCompose.g:3443:1: rule__NetworkConnector__Group_1_2_2_1__0__Impl : ( '-' ) ;
    public final void rule__NetworkConnector__Group_1_2_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3447:1: ( ( '-' ) )
            // InternalDockerCompose.g:3448:1: ( '-' )
            {
            // InternalDockerCompose.g:3448:1: ( '-' )
            // InternalDockerCompose.g:3449:2: '-'
            {
             before(grammarAccess.getNetworkConnectorAccess().getHyphenMinusKeyword_1_2_2_1_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getNetworkConnectorAccess().getHyphenMinusKeyword_1_2_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_2_2_1__0__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_2_2_1__1"
    // InternalDockerCompose.g:3458:1: rule__NetworkConnector__Group_1_2_2_1__1 : rule__NetworkConnector__Group_1_2_2_1__1__Impl ;
    public final void rule__NetworkConnector__Group_1_2_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3462:1: ( rule__NetworkConnector__Group_1_2_2_1__1__Impl )
            // InternalDockerCompose.g:3463:2: rule__NetworkConnector__Group_1_2_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_2_2_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_2_2_1__1"


    // $ANTLR start "rule__NetworkConnector__Group_1_2_2_1__1__Impl"
    // InternalDockerCompose.g:3469:1: rule__NetworkConnector__Group_1_2_2_1__1__Impl : ( ( rule__NetworkConnector__AliasesAssignment_1_2_2_1_1 ) ) ;
    public final void rule__NetworkConnector__Group_1_2_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3473:1: ( ( ( rule__NetworkConnector__AliasesAssignment_1_2_2_1_1 ) ) )
            // InternalDockerCompose.g:3474:1: ( ( rule__NetworkConnector__AliasesAssignment_1_2_2_1_1 ) )
            {
            // InternalDockerCompose.g:3474:1: ( ( rule__NetworkConnector__AliasesAssignment_1_2_2_1_1 ) )
            // InternalDockerCompose.g:3475:2: ( rule__NetworkConnector__AliasesAssignment_1_2_2_1_1 )
            {
             before(grammarAccess.getNetworkConnectorAccess().getAliasesAssignment_1_2_2_1_1()); 
            // InternalDockerCompose.g:3476:2: ( rule__NetworkConnector__AliasesAssignment_1_2_2_1_1 )
            // InternalDockerCompose.g:3476:3: rule__NetworkConnector__AliasesAssignment_1_2_2_1_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__AliasesAssignment_1_2_2_1_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getAliasesAssignment_1_2_2_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_2_2_1__1__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_2_3__0"
    // InternalDockerCompose.g:3485:1: rule__NetworkConnector__Group_1_2_3__0 : rule__NetworkConnector__Group_1_2_3__0__Impl rule__NetworkConnector__Group_1_2_3__1 ;
    public final void rule__NetworkConnector__Group_1_2_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3489:1: ( rule__NetworkConnector__Group_1_2_3__0__Impl rule__NetworkConnector__Group_1_2_3__1 )
            // InternalDockerCompose.g:3490:2: rule__NetworkConnector__Group_1_2_3__0__Impl rule__NetworkConnector__Group_1_2_3__1
            {
            pushFollow(FOLLOW_13);
            rule__NetworkConnector__Group_1_2_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_2_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_2_3__0"


    // $ANTLR start "rule__NetworkConnector__Group_1_2_3__0__Impl"
    // InternalDockerCompose.g:3497:1: rule__NetworkConnector__Group_1_2_3__0__Impl : ( 'link_local_ips:' ) ;
    public final void rule__NetworkConnector__Group_1_2_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3501:1: ( ( 'link_local_ips:' ) )
            // InternalDockerCompose.g:3502:1: ( 'link_local_ips:' )
            {
            // InternalDockerCompose.g:3502:1: ( 'link_local_ips:' )
            // InternalDockerCompose.g:3503:2: 'link_local_ips:'
            {
             before(grammarAccess.getNetworkConnectorAccess().getLink_local_ipsKeyword_1_2_3_0()); 
            match(input,57,FOLLOW_2); 
             after(grammarAccess.getNetworkConnectorAccess().getLink_local_ipsKeyword_1_2_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_2_3__0__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_2_3__1"
    // InternalDockerCompose.g:3512:1: rule__NetworkConnector__Group_1_2_3__1 : rule__NetworkConnector__Group_1_2_3__1__Impl ;
    public final void rule__NetworkConnector__Group_1_2_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3516:1: ( rule__NetworkConnector__Group_1_2_3__1__Impl )
            // InternalDockerCompose.g:3517:2: rule__NetworkConnector__Group_1_2_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_2_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_2_3__1"


    // $ANTLR start "rule__NetworkConnector__Group_1_2_3__1__Impl"
    // InternalDockerCompose.g:3523:1: rule__NetworkConnector__Group_1_2_3__1__Impl : ( ( ( rule__NetworkConnector__Group_1_2_3_1__0 ) ) ( ( rule__NetworkConnector__Group_1_2_3_1__0 )* ) ) ;
    public final void rule__NetworkConnector__Group_1_2_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3527:1: ( ( ( ( rule__NetworkConnector__Group_1_2_3_1__0 ) ) ( ( rule__NetworkConnector__Group_1_2_3_1__0 )* ) ) )
            // InternalDockerCompose.g:3528:1: ( ( ( rule__NetworkConnector__Group_1_2_3_1__0 ) ) ( ( rule__NetworkConnector__Group_1_2_3_1__0 )* ) )
            {
            // InternalDockerCompose.g:3528:1: ( ( ( rule__NetworkConnector__Group_1_2_3_1__0 ) ) ( ( rule__NetworkConnector__Group_1_2_3_1__0 )* ) )
            // InternalDockerCompose.g:3529:2: ( ( rule__NetworkConnector__Group_1_2_3_1__0 ) ) ( ( rule__NetworkConnector__Group_1_2_3_1__0 )* )
            {
            // InternalDockerCompose.g:3529:2: ( ( rule__NetworkConnector__Group_1_2_3_1__0 ) )
            // InternalDockerCompose.g:3530:3: ( rule__NetworkConnector__Group_1_2_3_1__0 )
            {
             before(grammarAccess.getNetworkConnectorAccess().getGroup_1_2_3_1()); 
            // InternalDockerCompose.g:3531:3: ( rule__NetworkConnector__Group_1_2_3_1__0 )
            // InternalDockerCompose.g:3531:4: rule__NetworkConnector__Group_1_2_3_1__0
            {
            pushFollow(FOLLOW_3);
            rule__NetworkConnector__Group_1_2_3_1__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getGroup_1_2_3_1()); 

            }

            // InternalDockerCompose.g:3534:2: ( ( rule__NetworkConnector__Group_1_2_3_1__0 )* )
            // InternalDockerCompose.g:3535:3: ( rule__NetworkConnector__Group_1_2_3_1__0 )*
            {
             before(grammarAccess.getNetworkConnectorAccess().getGroup_1_2_3_1()); 
            // InternalDockerCompose.g:3536:3: ( rule__NetworkConnector__Group_1_2_3_1__0 )*
            loop30:
            do {
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( (LA30_0==50) ) {
                    int LA30_2 = input.LA(2);

                    if ( (LA30_2==RULE_INT) ) {
                        alt30=1;
                    }


                }


                switch (alt30) {
            	case 1 :
            	    // InternalDockerCompose.g:3536:4: rule__NetworkConnector__Group_1_2_3_1__0
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__NetworkConnector__Group_1_2_3_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop30;
                }
            } while (true);

             after(grammarAccess.getNetworkConnectorAccess().getGroup_1_2_3_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_2_3__1__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_2_3_1__0"
    // InternalDockerCompose.g:3546:1: rule__NetworkConnector__Group_1_2_3_1__0 : rule__NetworkConnector__Group_1_2_3_1__0__Impl rule__NetworkConnector__Group_1_2_3_1__1 ;
    public final void rule__NetworkConnector__Group_1_2_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3550:1: ( rule__NetworkConnector__Group_1_2_3_1__0__Impl rule__NetworkConnector__Group_1_2_3_1__1 )
            // InternalDockerCompose.g:3551:2: rule__NetworkConnector__Group_1_2_3_1__0__Impl rule__NetworkConnector__Group_1_2_3_1__1
            {
            pushFollow(FOLLOW_19);
            rule__NetworkConnector__Group_1_2_3_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_2_3_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_2_3_1__0"


    // $ANTLR start "rule__NetworkConnector__Group_1_2_3_1__0__Impl"
    // InternalDockerCompose.g:3558:1: rule__NetworkConnector__Group_1_2_3_1__0__Impl : ( '-' ) ;
    public final void rule__NetworkConnector__Group_1_2_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3562:1: ( ( '-' ) )
            // InternalDockerCompose.g:3563:1: ( '-' )
            {
            // InternalDockerCompose.g:3563:1: ( '-' )
            // InternalDockerCompose.g:3564:2: '-'
            {
             before(grammarAccess.getNetworkConnectorAccess().getHyphenMinusKeyword_1_2_3_1_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getNetworkConnectorAccess().getHyphenMinusKeyword_1_2_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_2_3_1__0__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_2_3_1__1"
    // InternalDockerCompose.g:3573:1: rule__NetworkConnector__Group_1_2_3_1__1 : rule__NetworkConnector__Group_1_2_3_1__1__Impl ;
    public final void rule__NetworkConnector__Group_1_2_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3577:1: ( rule__NetworkConnector__Group_1_2_3_1__1__Impl )
            // InternalDockerCompose.g:3578:2: rule__NetworkConnector__Group_1_2_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_2_3_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_2_3_1__1"


    // $ANTLR start "rule__NetworkConnector__Group_1_2_3_1__1__Impl"
    // InternalDockerCompose.g:3584:1: rule__NetworkConnector__Group_1_2_3_1__1__Impl : ( ( rule__NetworkConnector__Link_local_ipsAssignment_1_2_3_1_1 ) ) ;
    public final void rule__NetworkConnector__Group_1_2_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3588:1: ( ( ( rule__NetworkConnector__Link_local_ipsAssignment_1_2_3_1_1 ) ) )
            // InternalDockerCompose.g:3589:1: ( ( rule__NetworkConnector__Link_local_ipsAssignment_1_2_3_1_1 ) )
            {
            // InternalDockerCompose.g:3589:1: ( ( rule__NetworkConnector__Link_local_ipsAssignment_1_2_3_1_1 ) )
            // InternalDockerCompose.g:3590:2: ( rule__NetworkConnector__Link_local_ipsAssignment_1_2_3_1_1 )
            {
             before(grammarAccess.getNetworkConnectorAccess().getLink_local_ipsAssignment_1_2_3_1_1()); 
            // InternalDockerCompose.g:3591:2: ( rule__NetworkConnector__Link_local_ipsAssignment_1_2_3_1_1 )
            // InternalDockerCompose.g:3591:3: rule__NetworkConnector__Link_local_ipsAssignment_1_2_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Link_local_ipsAssignment_1_2_3_1_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getLink_local_ipsAssignment_1_2_3_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_2_3_1__1__Impl"


    // $ANTLR start "rule__Alias__Group__0"
    // InternalDockerCompose.g:3600:1: rule__Alias__Group__0 : rule__Alias__Group__0__Impl rule__Alias__Group__1 ;
    public final void rule__Alias__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3604:1: ( rule__Alias__Group__0__Impl rule__Alias__Group__1 )
            // InternalDockerCompose.g:3605:2: rule__Alias__Group__0__Impl rule__Alias__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__Alias__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Alias__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Alias__Group__0"


    // $ANTLR start "rule__Alias__Group__0__Impl"
    // InternalDockerCompose.g:3612:1: rule__Alias__Group__0__Impl : ( () ) ;
    public final void rule__Alias__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3616:1: ( ( () ) )
            // InternalDockerCompose.g:3617:1: ( () )
            {
            // InternalDockerCompose.g:3617:1: ( () )
            // InternalDockerCompose.g:3618:2: ()
            {
             before(grammarAccess.getAliasAccess().getAliasAction_0()); 
            // InternalDockerCompose.g:3619:2: ()
            // InternalDockerCompose.g:3619:3: 
            {
            }

             after(grammarAccess.getAliasAccess().getAliasAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Alias__Group__0__Impl"


    // $ANTLR start "rule__Alias__Group__1"
    // InternalDockerCompose.g:3627:1: rule__Alias__Group__1 : rule__Alias__Group__1__Impl ;
    public final void rule__Alias__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3631:1: ( rule__Alias__Group__1__Impl )
            // InternalDockerCompose.g:3632:2: rule__Alias__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Alias__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Alias__Group__1"


    // $ANTLR start "rule__Alias__Group__1__Impl"
    // InternalDockerCompose.g:3638:1: rule__Alias__Group__1__Impl : ( ( rule__Alias__AliasAssignment_1 ) ) ;
    public final void rule__Alias__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3642:1: ( ( ( rule__Alias__AliasAssignment_1 ) ) )
            // InternalDockerCompose.g:3643:1: ( ( rule__Alias__AliasAssignment_1 ) )
            {
            // InternalDockerCompose.g:3643:1: ( ( rule__Alias__AliasAssignment_1 ) )
            // InternalDockerCompose.g:3644:2: ( rule__Alias__AliasAssignment_1 )
            {
             before(grammarAccess.getAliasAccess().getAliasAssignment_1()); 
            // InternalDockerCompose.g:3645:2: ( rule__Alias__AliasAssignment_1 )
            // InternalDockerCompose.g:3645:3: rule__Alias__AliasAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Alias__AliasAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getAliasAccess().getAliasAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Alias__Group__1__Impl"


    // $ANTLR start "rule__VolumeConnector__Group__0"
    // InternalDockerCompose.g:3654:1: rule__VolumeConnector__Group__0 : rule__VolumeConnector__Group__0__Impl rule__VolumeConnector__Group__1 ;
    public final void rule__VolumeConnector__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3658:1: ( rule__VolumeConnector__Group__0__Impl rule__VolumeConnector__Group__1 )
            // InternalDockerCompose.g:3659:2: rule__VolumeConnector__Group__0__Impl rule__VolumeConnector__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__VolumeConnector__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group__0"


    // $ANTLR start "rule__VolumeConnector__Group__0__Impl"
    // InternalDockerCompose.g:3666:1: rule__VolumeConnector__Group__0__Impl : ( () ) ;
    public final void rule__VolumeConnector__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3670:1: ( ( () ) )
            // InternalDockerCompose.g:3671:1: ( () )
            {
            // InternalDockerCompose.g:3671:1: ( () )
            // InternalDockerCompose.g:3672:2: ()
            {
             before(grammarAccess.getVolumeConnectorAccess().getVolumeConnectorAction_0()); 
            // InternalDockerCompose.g:3673:2: ()
            // InternalDockerCompose.g:3673:3: 
            {
            }

             after(grammarAccess.getVolumeConnectorAccess().getVolumeConnectorAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group__0__Impl"


    // $ANTLR start "rule__VolumeConnector__Group__1"
    // InternalDockerCompose.g:3681:1: rule__VolumeConnector__Group__1 : rule__VolumeConnector__Group__1__Impl ;
    public final void rule__VolumeConnector__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3685:1: ( rule__VolumeConnector__Group__1__Impl )
            // InternalDockerCompose.g:3686:2: rule__VolumeConnector__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group__1"


    // $ANTLR start "rule__VolumeConnector__Group__1__Impl"
    // InternalDockerCompose.g:3692:1: rule__VolumeConnector__Group__1__Impl : ( ( rule__VolumeConnector__Alternatives_1 ) ) ;
    public final void rule__VolumeConnector__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3696:1: ( ( ( rule__VolumeConnector__Alternatives_1 ) ) )
            // InternalDockerCompose.g:3697:1: ( ( rule__VolumeConnector__Alternatives_1 ) )
            {
            // InternalDockerCompose.g:3697:1: ( ( rule__VolumeConnector__Alternatives_1 ) )
            // InternalDockerCompose.g:3698:2: ( rule__VolumeConnector__Alternatives_1 )
            {
             before(grammarAccess.getVolumeConnectorAccess().getAlternatives_1()); 
            // InternalDockerCompose.g:3699:2: ( rule__VolumeConnector__Alternatives_1 )
            // InternalDockerCompose.g:3699:3: rule__VolumeConnector__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Alternatives_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnectorAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group__1__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_0__0"
    // InternalDockerCompose.g:3708:1: rule__VolumeConnector__Group_1_0__0 : rule__VolumeConnector__Group_1_0__0__Impl rule__VolumeConnector__Group_1_0__1 ;
    public final void rule__VolumeConnector__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3712:1: ( rule__VolumeConnector__Group_1_0__0__Impl rule__VolumeConnector__Group_1_0__1 )
            // InternalDockerCompose.g:3713:2: rule__VolumeConnector__Group_1_0__0__Impl rule__VolumeConnector__Group_1_0__1
            {
            pushFollow(FOLLOW_7);
            rule__VolumeConnector__Group_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_0__0"


    // $ANTLR start "rule__VolumeConnector__Group_1_0__0__Impl"
    // InternalDockerCompose.g:3720:1: rule__VolumeConnector__Group_1_0__0__Impl : ( ( rule__VolumeConnector__VolumeAssignment_1_0_0 ) ) ;
    public final void rule__VolumeConnector__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3724:1: ( ( ( rule__VolumeConnector__VolumeAssignment_1_0_0 ) ) )
            // InternalDockerCompose.g:3725:1: ( ( rule__VolumeConnector__VolumeAssignment_1_0_0 ) )
            {
            // InternalDockerCompose.g:3725:1: ( ( rule__VolumeConnector__VolumeAssignment_1_0_0 ) )
            // InternalDockerCompose.g:3726:2: ( rule__VolumeConnector__VolumeAssignment_1_0_0 )
            {
             before(grammarAccess.getVolumeConnectorAccess().getVolumeAssignment_1_0_0()); 
            // InternalDockerCompose.g:3727:2: ( rule__VolumeConnector__VolumeAssignment_1_0_0 )
            // InternalDockerCompose.g:3727:3: rule__VolumeConnector__VolumeAssignment_1_0_0
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__VolumeAssignment_1_0_0();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnectorAccess().getVolumeAssignment_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_0__0__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_0__1"
    // InternalDockerCompose.g:3735:1: rule__VolumeConnector__Group_1_0__1 : rule__VolumeConnector__Group_1_0__1__Impl rule__VolumeConnector__Group_1_0__2 ;
    public final void rule__VolumeConnector__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3739:1: ( rule__VolumeConnector__Group_1_0__1__Impl rule__VolumeConnector__Group_1_0__2 )
            // InternalDockerCompose.g:3740:2: rule__VolumeConnector__Group_1_0__1__Impl rule__VolumeConnector__Group_1_0__2
            {
            pushFollow(FOLLOW_9);
            rule__VolumeConnector__Group_1_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_0__1"


    // $ANTLR start "rule__VolumeConnector__Group_1_0__1__Impl"
    // InternalDockerCompose.g:3747:1: rule__VolumeConnector__Group_1_0__1__Impl : ( ':' ) ;
    public final void rule__VolumeConnector__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3751:1: ( ( ':' ) )
            // InternalDockerCompose.g:3752:1: ( ':' )
            {
            // InternalDockerCompose.g:3752:1: ( ':' )
            // InternalDockerCompose.g:3753:2: ':'
            {
             before(grammarAccess.getVolumeConnectorAccess().getColonKeyword_1_0_1()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getVolumeConnectorAccess().getColonKeyword_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_0__1__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_0__2"
    // InternalDockerCompose.g:3762:1: rule__VolumeConnector__Group_1_0__2 : rule__VolumeConnector__Group_1_0__2__Impl rule__VolumeConnector__Group_1_0__3 ;
    public final void rule__VolumeConnector__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3766:1: ( rule__VolumeConnector__Group_1_0__2__Impl rule__VolumeConnector__Group_1_0__3 )
            // InternalDockerCompose.g:3767:2: rule__VolumeConnector__Group_1_0__2__Impl rule__VolumeConnector__Group_1_0__3
            {
            pushFollow(FOLLOW_7);
            rule__VolumeConnector__Group_1_0__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_0__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_0__2"


    // $ANTLR start "rule__VolumeConnector__Group_1_0__2__Impl"
    // InternalDockerCompose.g:3774:1: rule__VolumeConnector__Group_1_0__2__Impl : ( ( rule__VolumeConnector__Container_pathAssignment_1_0_2 ) ) ;
    public final void rule__VolumeConnector__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3778:1: ( ( ( rule__VolumeConnector__Container_pathAssignment_1_0_2 ) ) )
            // InternalDockerCompose.g:3779:1: ( ( rule__VolumeConnector__Container_pathAssignment_1_0_2 ) )
            {
            // InternalDockerCompose.g:3779:1: ( ( rule__VolumeConnector__Container_pathAssignment_1_0_2 ) )
            // InternalDockerCompose.g:3780:2: ( rule__VolumeConnector__Container_pathAssignment_1_0_2 )
            {
             before(grammarAccess.getVolumeConnectorAccess().getContainer_pathAssignment_1_0_2()); 
            // InternalDockerCompose.g:3781:2: ( rule__VolumeConnector__Container_pathAssignment_1_0_2 )
            // InternalDockerCompose.g:3781:3: rule__VolumeConnector__Container_pathAssignment_1_0_2
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Container_pathAssignment_1_0_2();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnectorAccess().getContainer_pathAssignment_1_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_0__2__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_0__3"
    // InternalDockerCompose.g:3789:1: rule__VolumeConnector__Group_1_0__3 : rule__VolumeConnector__Group_1_0__3__Impl ;
    public final void rule__VolumeConnector__Group_1_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3793:1: ( rule__VolumeConnector__Group_1_0__3__Impl )
            // InternalDockerCompose.g:3794:2: rule__VolumeConnector__Group_1_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_0__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_0__3"


    // $ANTLR start "rule__VolumeConnector__Group_1_0__3__Impl"
    // InternalDockerCompose.g:3800:1: rule__VolumeConnector__Group_1_0__3__Impl : ( ( rule__VolumeConnector__Group_1_0_3__0 )? ) ;
    public final void rule__VolumeConnector__Group_1_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3804:1: ( ( ( rule__VolumeConnector__Group_1_0_3__0 )? ) )
            // InternalDockerCompose.g:3805:1: ( ( rule__VolumeConnector__Group_1_0_3__0 )? )
            {
            // InternalDockerCompose.g:3805:1: ( ( rule__VolumeConnector__Group_1_0_3__0 )? )
            // InternalDockerCompose.g:3806:2: ( rule__VolumeConnector__Group_1_0_3__0 )?
            {
             before(grammarAccess.getVolumeConnectorAccess().getGroup_1_0_3()); 
            // InternalDockerCompose.g:3807:2: ( rule__VolumeConnector__Group_1_0_3__0 )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==40) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // InternalDockerCompose.g:3807:3: rule__VolumeConnector__Group_1_0_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector__Group_1_0_3__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getVolumeConnectorAccess().getGroup_1_0_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_0__3__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_0_3__0"
    // InternalDockerCompose.g:3816:1: rule__VolumeConnector__Group_1_0_3__0 : rule__VolumeConnector__Group_1_0_3__0__Impl rule__VolumeConnector__Group_1_0_3__1 ;
    public final void rule__VolumeConnector__Group_1_0_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3820:1: ( rule__VolumeConnector__Group_1_0_3__0__Impl rule__VolumeConnector__Group_1_0_3__1 )
            // InternalDockerCompose.g:3821:2: rule__VolumeConnector__Group_1_0_3__0__Impl rule__VolumeConnector__Group_1_0_3__1
            {
            pushFollow(FOLLOW_24);
            rule__VolumeConnector__Group_1_0_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_0_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_0_3__0"


    // $ANTLR start "rule__VolumeConnector__Group_1_0_3__0__Impl"
    // InternalDockerCompose.g:3828:1: rule__VolumeConnector__Group_1_0_3__0__Impl : ( ':' ) ;
    public final void rule__VolumeConnector__Group_1_0_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3832:1: ( ( ':' ) )
            // InternalDockerCompose.g:3833:1: ( ':' )
            {
            // InternalDockerCompose.g:3833:1: ( ':' )
            // InternalDockerCompose.g:3834:2: ':'
            {
             before(grammarAccess.getVolumeConnectorAccess().getColonKeyword_1_0_3_0()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getVolumeConnectorAccess().getColonKeyword_1_0_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_0_3__0__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_0_3__1"
    // InternalDockerCompose.g:3843:1: rule__VolumeConnector__Group_1_0_3__1 : rule__VolumeConnector__Group_1_0_3__1__Impl ;
    public final void rule__VolumeConnector__Group_1_0_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3847:1: ( rule__VolumeConnector__Group_1_0_3__1__Impl )
            // InternalDockerCompose.g:3848:2: rule__VolumeConnector__Group_1_0_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_0_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_0_3__1"


    // $ANTLR start "rule__VolumeConnector__Group_1_0_3__1__Impl"
    // InternalDockerCompose.g:3854:1: rule__VolumeConnector__Group_1_0_3__1__Impl : ( ( rule__VolumeConnector__Access_modeAssignment_1_0_3_1 ) ) ;
    public final void rule__VolumeConnector__Group_1_0_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3858:1: ( ( ( rule__VolumeConnector__Access_modeAssignment_1_0_3_1 ) ) )
            // InternalDockerCompose.g:3859:1: ( ( rule__VolumeConnector__Access_modeAssignment_1_0_3_1 ) )
            {
            // InternalDockerCompose.g:3859:1: ( ( rule__VolumeConnector__Access_modeAssignment_1_0_3_1 ) )
            // InternalDockerCompose.g:3860:2: ( rule__VolumeConnector__Access_modeAssignment_1_0_3_1 )
            {
             before(grammarAccess.getVolumeConnectorAccess().getAccess_modeAssignment_1_0_3_1()); 
            // InternalDockerCompose.g:3861:2: ( rule__VolumeConnector__Access_modeAssignment_1_0_3_1 )
            // InternalDockerCompose.g:3861:3: rule__VolumeConnector__Access_modeAssignment_1_0_3_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Access_modeAssignment_1_0_3_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnectorAccess().getAccess_modeAssignment_1_0_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_0_3__1__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_0__0"
    // InternalDockerCompose.g:3870:1: rule__VolumeConnector__Group_1_1_0__0 : rule__VolumeConnector__Group_1_1_0__0__Impl rule__VolumeConnector__Group_1_1_0__1 ;
    public final void rule__VolumeConnector__Group_1_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3874:1: ( rule__VolumeConnector__Group_1_1_0__0__Impl rule__VolumeConnector__Group_1_1_0__1 )
            // InternalDockerCompose.g:3875:2: rule__VolumeConnector__Group_1_1_0__0__Impl rule__VolumeConnector__Group_1_1_0__1
            {
            pushFollow(FOLLOW_5);
            rule__VolumeConnector__Group_1_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_0__0"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_0__0__Impl"
    // InternalDockerCompose.g:3882:1: rule__VolumeConnector__Group_1_1_0__0__Impl : ( 'source:' ) ;
    public final void rule__VolumeConnector__Group_1_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3886:1: ( ( 'source:' ) )
            // InternalDockerCompose.g:3887:1: ( 'source:' )
            {
            // InternalDockerCompose.g:3887:1: ( 'source:' )
            // InternalDockerCompose.g:3888:2: 'source:'
            {
             before(grammarAccess.getVolumeConnectorAccess().getSourceKeyword_1_1_0_0()); 
            match(input,58,FOLLOW_2); 
             after(grammarAccess.getVolumeConnectorAccess().getSourceKeyword_1_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_0__0__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_0__1"
    // InternalDockerCompose.g:3897:1: rule__VolumeConnector__Group_1_1_0__1 : rule__VolumeConnector__Group_1_1_0__1__Impl ;
    public final void rule__VolumeConnector__Group_1_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3901:1: ( rule__VolumeConnector__Group_1_1_0__1__Impl )
            // InternalDockerCompose.g:3902:2: rule__VolumeConnector__Group_1_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_0__1"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_0__1__Impl"
    // InternalDockerCompose.g:3908:1: rule__VolumeConnector__Group_1_1_0__1__Impl : ( ( rule__VolumeConnector__VolumeAssignment_1_1_0_1 ) ) ;
    public final void rule__VolumeConnector__Group_1_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3912:1: ( ( ( rule__VolumeConnector__VolumeAssignment_1_1_0_1 ) ) )
            // InternalDockerCompose.g:3913:1: ( ( rule__VolumeConnector__VolumeAssignment_1_1_0_1 ) )
            {
            // InternalDockerCompose.g:3913:1: ( ( rule__VolumeConnector__VolumeAssignment_1_1_0_1 ) )
            // InternalDockerCompose.g:3914:2: ( rule__VolumeConnector__VolumeAssignment_1_1_0_1 )
            {
             before(grammarAccess.getVolumeConnectorAccess().getVolumeAssignment_1_1_0_1()); 
            // InternalDockerCompose.g:3915:2: ( rule__VolumeConnector__VolumeAssignment_1_1_0_1 )
            // InternalDockerCompose.g:3915:3: rule__VolumeConnector__VolumeAssignment_1_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__VolumeAssignment_1_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnectorAccess().getVolumeAssignment_1_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_0__1__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_1__0"
    // InternalDockerCompose.g:3924:1: rule__VolumeConnector__Group_1_1_1__0 : rule__VolumeConnector__Group_1_1_1__0__Impl rule__VolumeConnector__Group_1_1_1__1 ;
    public final void rule__VolumeConnector__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3928:1: ( rule__VolumeConnector__Group_1_1_1__0__Impl rule__VolumeConnector__Group_1_1_1__1 )
            // InternalDockerCompose.g:3929:2: rule__VolumeConnector__Group_1_1_1__0__Impl rule__VolumeConnector__Group_1_1_1__1
            {
            pushFollow(FOLLOW_25);
            rule__VolumeConnector__Group_1_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_1__0"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_1__0__Impl"
    // InternalDockerCompose.g:3936:1: rule__VolumeConnector__Group_1_1_1__0__Impl : ( 'type:' ) ;
    public final void rule__VolumeConnector__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3940:1: ( ( 'type:' ) )
            // InternalDockerCompose.g:3941:1: ( 'type:' )
            {
            // InternalDockerCompose.g:3941:1: ( 'type:' )
            // InternalDockerCompose.g:3942:2: 'type:'
            {
             before(grammarAccess.getVolumeConnectorAccess().getTypeKeyword_1_1_1_0()); 
            match(input,59,FOLLOW_2); 
             after(grammarAccess.getVolumeConnectorAccess().getTypeKeyword_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_1__1"
    // InternalDockerCompose.g:3951:1: rule__VolumeConnector__Group_1_1_1__1 : rule__VolumeConnector__Group_1_1_1__1__Impl ;
    public final void rule__VolumeConnector__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3955:1: ( rule__VolumeConnector__Group_1_1_1__1__Impl )
            // InternalDockerCompose.g:3956:2: rule__VolumeConnector__Group_1_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_1__1"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_1__1__Impl"
    // InternalDockerCompose.g:3962:1: rule__VolumeConnector__Group_1_1_1__1__Impl : ( ( rule__VolumeConnector__TypeAssignment_1_1_1_1 ) ) ;
    public final void rule__VolumeConnector__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3966:1: ( ( ( rule__VolumeConnector__TypeAssignment_1_1_1_1 ) ) )
            // InternalDockerCompose.g:3967:1: ( ( rule__VolumeConnector__TypeAssignment_1_1_1_1 ) )
            {
            // InternalDockerCompose.g:3967:1: ( ( rule__VolumeConnector__TypeAssignment_1_1_1_1 ) )
            // InternalDockerCompose.g:3968:2: ( rule__VolumeConnector__TypeAssignment_1_1_1_1 )
            {
             before(grammarAccess.getVolumeConnectorAccess().getTypeAssignment_1_1_1_1()); 
            // InternalDockerCompose.g:3969:2: ( rule__VolumeConnector__TypeAssignment_1_1_1_1 )
            // InternalDockerCompose.g:3969:3: rule__VolumeConnector__TypeAssignment_1_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__TypeAssignment_1_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnectorAccess().getTypeAssignment_1_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_2__0"
    // InternalDockerCompose.g:3978:1: rule__VolumeConnector__Group_1_1_2__0 : rule__VolumeConnector__Group_1_1_2__0__Impl rule__VolumeConnector__Group_1_1_2__1 ;
    public final void rule__VolumeConnector__Group_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3982:1: ( rule__VolumeConnector__Group_1_1_2__0__Impl rule__VolumeConnector__Group_1_1_2__1 )
            // InternalDockerCompose.g:3983:2: rule__VolumeConnector__Group_1_1_2__0__Impl rule__VolumeConnector__Group_1_1_2__1
            {
            pushFollow(FOLLOW_9);
            rule__VolumeConnector__Group_1_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_2__0"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_2__0__Impl"
    // InternalDockerCompose.g:3990:1: rule__VolumeConnector__Group_1_1_2__0__Impl : ( 'target:' ) ;
    public final void rule__VolumeConnector__Group_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3994:1: ( ( 'target:' ) )
            // InternalDockerCompose.g:3995:1: ( 'target:' )
            {
            // InternalDockerCompose.g:3995:1: ( 'target:' )
            // InternalDockerCompose.g:3996:2: 'target:'
            {
             before(grammarAccess.getVolumeConnectorAccess().getTargetKeyword_1_1_2_0()); 
            match(input,60,FOLLOW_2); 
             after(grammarAccess.getVolumeConnectorAccess().getTargetKeyword_1_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_2__0__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_2__1"
    // InternalDockerCompose.g:4005:1: rule__VolumeConnector__Group_1_1_2__1 : rule__VolumeConnector__Group_1_1_2__1__Impl ;
    public final void rule__VolumeConnector__Group_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4009:1: ( rule__VolumeConnector__Group_1_1_2__1__Impl )
            // InternalDockerCompose.g:4010:2: rule__VolumeConnector__Group_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_2__1"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_2__1__Impl"
    // InternalDockerCompose.g:4016:1: rule__VolumeConnector__Group_1_1_2__1__Impl : ( ( rule__VolumeConnector__Container_pathAssignment_1_1_2_1 ) ) ;
    public final void rule__VolumeConnector__Group_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4020:1: ( ( ( rule__VolumeConnector__Container_pathAssignment_1_1_2_1 ) ) )
            // InternalDockerCompose.g:4021:1: ( ( rule__VolumeConnector__Container_pathAssignment_1_1_2_1 ) )
            {
            // InternalDockerCompose.g:4021:1: ( ( rule__VolumeConnector__Container_pathAssignment_1_1_2_1 ) )
            // InternalDockerCompose.g:4022:2: ( rule__VolumeConnector__Container_pathAssignment_1_1_2_1 )
            {
             before(grammarAccess.getVolumeConnectorAccess().getContainer_pathAssignment_1_1_2_1()); 
            // InternalDockerCompose.g:4023:2: ( rule__VolumeConnector__Container_pathAssignment_1_1_2_1 )
            // InternalDockerCompose.g:4023:3: rule__VolumeConnector__Container_pathAssignment_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Container_pathAssignment_1_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnectorAccess().getContainer_pathAssignment_1_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_2__1__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_3__0"
    // InternalDockerCompose.g:4032:1: rule__VolumeConnector__Group_1_1_3__0 : rule__VolumeConnector__Group_1_1_3__0__Impl rule__VolumeConnector__Group_1_1_3__1 ;
    public final void rule__VolumeConnector__Group_1_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4036:1: ( rule__VolumeConnector__Group_1_1_3__0__Impl rule__VolumeConnector__Group_1_1_3__1 )
            // InternalDockerCompose.g:4037:2: rule__VolumeConnector__Group_1_1_3__0__Impl rule__VolumeConnector__Group_1_1_3__1
            {
            pushFollow(FOLLOW_12);
            rule__VolumeConnector__Group_1_1_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_3__0"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_3__0__Impl"
    // InternalDockerCompose.g:4044:1: rule__VolumeConnector__Group_1_1_3__0__Impl : ( 'read_only:' ) ;
    public final void rule__VolumeConnector__Group_1_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4048:1: ( ( 'read_only:' ) )
            // InternalDockerCompose.g:4049:1: ( 'read_only:' )
            {
            // InternalDockerCompose.g:4049:1: ( 'read_only:' )
            // InternalDockerCompose.g:4050:2: 'read_only:'
            {
             before(grammarAccess.getVolumeConnectorAccess().getRead_onlyKeyword_1_1_3_0()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getVolumeConnectorAccess().getRead_onlyKeyword_1_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_3__0__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_3__1"
    // InternalDockerCompose.g:4059:1: rule__VolumeConnector__Group_1_1_3__1 : rule__VolumeConnector__Group_1_1_3__1__Impl ;
    public final void rule__VolumeConnector__Group_1_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4063:1: ( rule__VolumeConnector__Group_1_1_3__1__Impl )
            // InternalDockerCompose.g:4064:2: rule__VolumeConnector__Group_1_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_3__1"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_3__1__Impl"
    // InternalDockerCompose.g:4070:1: rule__VolumeConnector__Group_1_1_3__1__Impl : ( ( rule__VolumeConnector__Read_onlyAssignment_1_1_3_1 ) ) ;
    public final void rule__VolumeConnector__Group_1_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4074:1: ( ( ( rule__VolumeConnector__Read_onlyAssignment_1_1_3_1 ) ) )
            // InternalDockerCompose.g:4075:1: ( ( rule__VolumeConnector__Read_onlyAssignment_1_1_3_1 ) )
            {
            // InternalDockerCompose.g:4075:1: ( ( rule__VolumeConnector__Read_onlyAssignment_1_1_3_1 ) )
            // InternalDockerCompose.g:4076:2: ( rule__VolumeConnector__Read_onlyAssignment_1_1_3_1 )
            {
             before(grammarAccess.getVolumeConnectorAccess().getRead_onlyAssignment_1_1_3_1()); 
            // InternalDockerCompose.g:4077:2: ( rule__VolumeConnector__Read_onlyAssignment_1_1_3_1 )
            // InternalDockerCompose.g:4077:3: rule__VolumeConnector__Read_onlyAssignment_1_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Read_onlyAssignment_1_1_3_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnectorAccess().getRead_onlyAssignment_1_1_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_3__1__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_4__0"
    // InternalDockerCompose.g:4086:1: rule__VolumeConnector__Group_1_1_4__0 : rule__VolumeConnector__Group_1_1_4__0__Impl rule__VolumeConnector__Group_1_1_4__1 ;
    public final void rule__VolumeConnector__Group_1_1_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4090:1: ( rule__VolumeConnector__Group_1_1_4__0__Impl rule__VolumeConnector__Group_1_1_4__1 )
            // InternalDockerCompose.g:4091:2: rule__VolumeConnector__Group_1_1_4__0__Impl rule__VolumeConnector__Group_1_1_4__1
            {
            pushFollow(FOLLOW_26);
            rule__VolumeConnector__Group_1_1_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_4__0"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_4__0__Impl"
    // InternalDockerCompose.g:4098:1: rule__VolumeConnector__Group_1_1_4__0__Impl : ( 'bind:' ) ;
    public final void rule__VolumeConnector__Group_1_1_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4102:1: ( ( 'bind:' ) )
            // InternalDockerCompose.g:4103:1: ( 'bind:' )
            {
            // InternalDockerCompose.g:4103:1: ( 'bind:' )
            // InternalDockerCompose.g:4104:2: 'bind:'
            {
             before(grammarAccess.getVolumeConnectorAccess().getBindKeyword_1_1_4_0()); 
            match(input,61,FOLLOW_2); 
             after(grammarAccess.getVolumeConnectorAccess().getBindKeyword_1_1_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_4__0__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_4__1"
    // InternalDockerCompose.g:4113:1: rule__VolumeConnector__Group_1_1_4__1 : rule__VolumeConnector__Group_1_1_4__1__Impl rule__VolumeConnector__Group_1_1_4__2 ;
    public final void rule__VolumeConnector__Group_1_1_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4117:1: ( rule__VolumeConnector__Group_1_1_4__1__Impl rule__VolumeConnector__Group_1_1_4__2 )
            // InternalDockerCompose.g:4118:2: rule__VolumeConnector__Group_1_1_4__1__Impl rule__VolumeConnector__Group_1_1_4__2
            {
            pushFollow(FOLLOW_27);
            rule__VolumeConnector__Group_1_1_4__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_4__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_4__1"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_4__1__Impl"
    // InternalDockerCompose.g:4125:1: rule__VolumeConnector__Group_1_1_4__1__Impl : ( 'propagation:' ) ;
    public final void rule__VolumeConnector__Group_1_1_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4129:1: ( ( 'propagation:' ) )
            // InternalDockerCompose.g:4130:1: ( 'propagation:' )
            {
            // InternalDockerCompose.g:4130:1: ( 'propagation:' )
            // InternalDockerCompose.g:4131:2: 'propagation:'
            {
             before(grammarAccess.getVolumeConnectorAccess().getPropagationKeyword_1_1_4_1()); 
            match(input,62,FOLLOW_2); 
             after(grammarAccess.getVolumeConnectorAccess().getPropagationKeyword_1_1_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_4__1__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_4__2"
    // InternalDockerCompose.g:4140:1: rule__VolumeConnector__Group_1_1_4__2 : rule__VolumeConnector__Group_1_1_4__2__Impl ;
    public final void rule__VolumeConnector__Group_1_1_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4144:1: ( rule__VolumeConnector__Group_1_1_4__2__Impl )
            // InternalDockerCompose.g:4145:2: rule__VolumeConnector__Group_1_1_4__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_4__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_4__2"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_4__2__Impl"
    // InternalDockerCompose.g:4151:1: rule__VolumeConnector__Group_1_1_4__2__Impl : ( ( rule__VolumeConnector__PropagationAssignment_1_1_4_2 ) ) ;
    public final void rule__VolumeConnector__Group_1_1_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4155:1: ( ( ( rule__VolumeConnector__PropagationAssignment_1_1_4_2 ) ) )
            // InternalDockerCompose.g:4156:1: ( ( rule__VolumeConnector__PropagationAssignment_1_1_4_2 ) )
            {
            // InternalDockerCompose.g:4156:1: ( ( rule__VolumeConnector__PropagationAssignment_1_1_4_2 ) )
            // InternalDockerCompose.g:4157:2: ( rule__VolumeConnector__PropagationAssignment_1_1_4_2 )
            {
             before(grammarAccess.getVolumeConnectorAccess().getPropagationAssignment_1_1_4_2()); 
            // InternalDockerCompose.g:4158:2: ( rule__VolumeConnector__PropagationAssignment_1_1_4_2 )
            // InternalDockerCompose.g:4158:3: rule__VolumeConnector__PropagationAssignment_1_1_4_2
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__PropagationAssignment_1_1_4_2();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnectorAccess().getPropagationAssignment_1_1_4_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_4__2__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_5__0"
    // InternalDockerCompose.g:4167:1: rule__VolumeConnector__Group_1_1_5__0 : rule__VolumeConnector__Group_1_1_5__0__Impl rule__VolumeConnector__Group_1_1_5__1 ;
    public final void rule__VolumeConnector__Group_1_1_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4171:1: ( rule__VolumeConnector__Group_1_1_5__0__Impl rule__VolumeConnector__Group_1_1_5__1 )
            // InternalDockerCompose.g:4172:2: rule__VolumeConnector__Group_1_1_5__0__Impl rule__VolumeConnector__Group_1_1_5__1
            {
            pushFollow(FOLLOW_28);
            rule__VolumeConnector__Group_1_1_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_5__0"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_5__0__Impl"
    // InternalDockerCompose.g:4179:1: rule__VolumeConnector__Group_1_1_5__0__Impl : ( 'volume:' ) ;
    public final void rule__VolumeConnector__Group_1_1_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4183:1: ( ( 'volume:' ) )
            // InternalDockerCompose.g:4184:1: ( 'volume:' )
            {
            // InternalDockerCompose.g:4184:1: ( 'volume:' )
            // InternalDockerCompose.g:4185:2: 'volume:'
            {
             before(grammarAccess.getVolumeConnectorAccess().getVolumeKeyword_1_1_5_0()); 
            match(input,63,FOLLOW_2); 
             after(grammarAccess.getVolumeConnectorAccess().getVolumeKeyword_1_1_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_5__0__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_5__1"
    // InternalDockerCompose.g:4194:1: rule__VolumeConnector__Group_1_1_5__1 : rule__VolumeConnector__Group_1_1_5__1__Impl rule__VolumeConnector__Group_1_1_5__2 ;
    public final void rule__VolumeConnector__Group_1_1_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4198:1: ( rule__VolumeConnector__Group_1_1_5__1__Impl rule__VolumeConnector__Group_1_1_5__2 )
            // InternalDockerCompose.g:4199:2: rule__VolumeConnector__Group_1_1_5__1__Impl rule__VolumeConnector__Group_1_1_5__2
            {
            pushFollow(FOLLOW_12);
            rule__VolumeConnector__Group_1_1_5__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_5__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_5__1"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_5__1__Impl"
    // InternalDockerCompose.g:4206:1: rule__VolumeConnector__Group_1_1_5__1__Impl : ( 'nocopy:' ) ;
    public final void rule__VolumeConnector__Group_1_1_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4210:1: ( ( 'nocopy:' ) )
            // InternalDockerCompose.g:4211:1: ( 'nocopy:' )
            {
            // InternalDockerCompose.g:4211:1: ( 'nocopy:' )
            // InternalDockerCompose.g:4212:2: 'nocopy:'
            {
             before(grammarAccess.getVolumeConnectorAccess().getNocopyKeyword_1_1_5_1()); 
            match(input,64,FOLLOW_2); 
             after(grammarAccess.getVolumeConnectorAccess().getNocopyKeyword_1_1_5_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_5__1__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_5__2"
    // InternalDockerCompose.g:4221:1: rule__VolumeConnector__Group_1_1_5__2 : rule__VolumeConnector__Group_1_1_5__2__Impl ;
    public final void rule__VolumeConnector__Group_1_1_5__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4225:1: ( rule__VolumeConnector__Group_1_1_5__2__Impl )
            // InternalDockerCompose.g:4226:2: rule__VolumeConnector__Group_1_1_5__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_5__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_5__2"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_5__2__Impl"
    // InternalDockerCompose.g:4232:1: rule__VolumeConnector__Group_1_1_5__2__Impl : ( ( rule__VolumeConnector__NocopyAssignment_1_1_5_2 ) ) ;
    public final void rule__VolumeConnector__Group_1_1_5__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4236:1: ( ( ( rule__VolumeConnector__NocopyAssignment_1_1_5_2 ) ) )
            // InternalDockerCompose.g:4237:1: ( ( rule__VolumeConnector__NocopyAssignment_1_1_5_2 ) )
            {
            // InternalDockerCompose.g:4237:1: ( ( rule__VolumeConnector__NocopyAssignment_1_1_5_2 ) )
            // InternalDockerCompose.g:4238:2: ( rule__VolumeConnector__NocopyAssignment_1_1_5_2 )
            {
             before(grammarAccess.getVolumeConnectorAccess().getNocopyAssignment_1_1_5_2()); 
            // InternalDockerCompose.g:4239:2: ( rule__VolumeConnector__NocopyAssignment_1_1_5_2 )
            // InternalDockerCompose.g:4239:3: rule__VolumeConnector__NocopyAssignment_1_1_5_2
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__NocopyAssignment_1_1_5_2();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnectorAccess().getNocopyAssignment_1_1_5_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_5__2__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_6__0"
    // InternalDockerCompose.g:4248:1: rule__VolumeConnector__Group_1_1_6__0 : rule__VolumeConnector__Group_1_1_6__0__Impl rule__VolumeConnector__Group_1_1_6__1 ;
    public final void rule__VolumeConnector__Group_1_1_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4252:1: ( rule__VolumeConnector__Group_1_1_6__0__Impl rule__VolumeConnector__Group_1_1_6__1 )
            // InternalDockerCompose.g:4253:2: rule__VolumeConnector__Group_1_1_6__0__Impl rule__VolumeConnector__Group_1_1_6__1
            {
            pushFollow(FOLLOW_29);
            rule__VolumeConnector__Group_1_1_6__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_6__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_6__0"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_6__0__Impl"
    // InternalDockerCompose.g:4260:1: rule__VolumeConnector__Group_1_1_6__0__Impl : ( 'tmpfs:' ) ;
    public final void rule__VolumeConnector__Group_1_1_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4264:1: ( ( 'tmpfs:' ) )
            // InternalDockerCompose.g:4265:1: ( 'tmpfs:' )
            {
            // InternalDockerCompose.g:4265:1: ( 'tmpfs:' )
            // InternalDockerCompose.g:4266:2: 'tmpfs:'
            {
             before(grammarAccess.getVolumeConnectorAccess().getTmpfsKeyword_1_1_6_0()); 
            match(input,65,FOLLOW_2); 
             after(grammarAccess.getVolumeConnectorAccess().getTmpfsKeyword_1_1_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_6__0__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_6__1"
    // InternalDockerCompose.g:4275:1: rule__VolumeConnector__Group_1_1_6__1 : rule__VolumeConnector__Group_1_1_6__1__Impl rule__VolumeConnector__Group_1_1_6__2 ;
    public final void rule__VolumeConnector__Group_1_1_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4279:1: ( rule__VolumeConnector__Group_1_1_6__1__Impl rule__VolumeConnector__Group_1_1_6__2 )
            // InternalDockerCompose.g:4280:2: rule__VolumeConnector__Group_1_1_6__1__Impl rule__VolumeConnector__Group_1_1_6__2
            {
            pushFollow(FOLLOW_10);
            rule__VolumeConnector__Group_1_1_6__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_6__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_6__1"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_6__1__Impl"
    // InternalDockerCompose.g:4287:1: rule__VolumeConnector__Group_1_1_6__1__Impl : ( 'size:' ) ;
    public final void rule__VolumeConnector__Group_1_1_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4291:1: ( ( 'size:' ) )
            // InternalDockerCompose.g:4292:1: ( 'size:' )
            {
            // InternalDockerCompose.g:4292:1: ( 'size:' )
            // InternalDockerCompose.g:4293:2: 'size:'
            {
             before(grammarAccess.getVolumeConnectorAccess().getSizeKeyword_1_1_6_1()); 
            match(input,66,FOLLOW_2); 
             after(grammarAccess.getVolumeConnectorAccess().getSizeKeyword_1_1_6_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_6__1__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_6__2"
    // InternalDockerCompose.g:4302:1: rule__VolumeConnector__Group_1_1_6__2 : rule__VolumeConnector__Group_1_1_6__2__Impl ;
    public final void rule__VolumeConnector__Group_1_1_6__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4306:1: ( rule__VolumeConnector__Group_1_1_6__2__Impl )
            // InternalDockerCompose.g:4307:2: rule__VolumeConnector__Group_1_1_6__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_6__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_6__2"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_6__2__Impl"
    // InternalDockerCompose.g:4313:1: rule__VolumeConnector__Group_1_1_6__2__Impl : ( ( rule__VolumeConnector__SizeAssignment_1_1_6_2 ) ) ;
    public final void rule__VolumeConnector__Group_1_1_6__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4317:1: ( ( ( rule__VolumeConnector__SizeAssignment_1_1_6_2 ) ) )
            // InternalDockerCompose.g:4318:1: ( ( rule__VolumeConnector__SizeAssignment_1_1_6_2 ) )
            {
            // InternalDockerCompose.g:4318:1: ( ( rule__VolumeConnector__SizeAssignment_1_1_6_2 ) )
            // InternalDockerCompose.g:4319:2: ( rule__VolumeConnector__SizeAssignment_1_1_6_2 )
            {
             before(grammarAccess.getVolumeConnectorAccess().getSizeAssignment_1_1_6_2()); 
            // InternalDockerCompose.g:4320:2: ( rule__VolumeConnector__SizeAssignment_1_1_6_2 )
            // InternalDockerCompose.g:4320:3: rule__VolumeConnector__SizeAssignment_1_1_6_2
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__SizeAssignment_1_1_6_2();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnectorAccess().getSizeAssignment_1_1_6_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_6__2__Impl"


    // $ANTLR start "rule__ConfigConnector__Group__0"
    // InternalDockerCompose.g:4329:1: rule__ConfigConnector__Group__0 : rule__ConfigConnector__Group__0__Impl rule__ConfigConnector__Group__1 ;
    public final void rule__ConfigConnector__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4333:1: ( rule__ConfigConnector__Group__0__Impl rule__ConfigConnector__Group__1 )
            // InternalDockerCompose.g:4334:2: rule__ConfigConnector__Group__0__Impl rule__ConfigConnector__Group__1
            {
            pushFollow(FOLLOW_17);
            rule__ConfigConnector__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group__0"


    // $ANTLR start "rule__ConfigConnector__Group__0__Impl"
    // InternalDockerCompose.g:4341:1: rule__ConfigConnector__Group__0__Impl : ( () ) ;
    public final void rule__ConfigConnector__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4345:1: ( ( () ) )
            // InternalDockerCompose.g:4346:1: ( () )
            {
            // InternalDockerCompose.g:4346:1: ( () )
            // InternalDockerCompose.g:4347:2: ()
            {
             before(grammarAccess.getConfigConnectorAccess().getConfigConnectorAction_0()); 
            // InternalDockerCompose.g:4348:2: ()
            // InternalDockerCompose.g:4348:3: 
            {
            }

             after(grammarAccess.getConfigConnectorAccess().getConfigConnectorAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group__0__Impl"


    // $ANTLR start "rule__ConfigConnector__Group__1"
    // InternalDockerCompose.g:4356:1: rule__ConfigConnector__Group__1 : rule__ConfigConnector__Group__1__Impl ;
    public final void rule__ConfigConnector__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4360:1: ( rule__ConfigConnector__Group__1__Impl )
            // InternalDockerCompose.g:4361:2: rule__ConfigConnector__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group__1"


    // $ANTLR start "rule__ConfigConnector__Group__1__Impl"
    // InternalDockerCompose.g:4367:1: rule__ConfigConnector__Group__1__Impl : ( ( rule__ConfigConnector__Alternatives_1 ) ) ;
    public final void rule__ConfigConnector__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4371:1: ( ( ( rule__ConfigConnector__Alternatives_1 ) ) )
            // InternalDockerCompose.g:4372:1: ( ( rule__ConfigConnector__Alternatives_1 ) )
            {
            // InternalDockerCompose.g:4372:1: ( ( rule__ConfigConnector__Alternatives_1 ) )
            // InternalDockerCompose.g:4373:2: ( rule__ConfigConnector__Alternatives_1 )
            {
             before(grammarAccess.getConfigConnectorAccess().getAlternatives_1()); 
            // InternalDockerCompose.g:4374:2: ( rule__ConfigConnector__Alternatives_1 )
            // InternalDockerCompose.g:4374:3: rule__ConfigConnector__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector__Alternatives_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnectorAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group__1__Impl"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_0__0"
    // InternalDockerCompose.g:4383:1: rule__ConfigConnector__Group_1_1_0__0 : rule__ConfigConnector__Group_1_1_0__0__Impl rule__ConfigConnector__Group_1_1_0__1 ;
    public final void rule__ConfigConnector__Group_1_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4387:1: ( rule__ConfigConnector__Group_1_1_0__0__Impl rule__ConfigConnector__Group_1_1_0__1 )
            // InternalDockerCompose.g:4388:2: rule__ConfigConnector__Group_1_1_0__0__Impl rule__ConfigConnector__Group_1_1_0__1
            {
            pushFollow(FOLLOW_5);
            rule__ConfigConnector__Group_1_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector__Group_1_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_0__0"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_0__0__Impl"
    // InternalDockerCompose.g:4395:1: rule__ConfigConnector__Group_1_1_0__0__Impl : ( 'source:' ) ;
    public final void rule__ConfigConnector__Group_1_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4399:1: ( ( 'source:' ) )
            // InternalDockerCompose.g:4400:1: ( 'source:' )
            {
            // InternalDockerCompose.g:4400:1: ( 'source:' )
            // InternalDockerCompose.g:4401:2: 'source:'
            {
             before(grammarAccess.getConfigConnectorAccess().getSourceKeyword_1_1_0_0()); 
            match(input,58,FOLLOW_2); 
             after(grammarAccess.getConfigConnectorAccess().getSourceKeyword_1_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_0__0__Impl"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_0__1"
    // InternalDockerCompose.g:4410:1: rule__ConfigConnector__Group_1_1_0__1 : rule__ConfigConnector__Group_1_1_0__1__Impl ;
    public final void rule__ConfigConnector__Group_1_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4414:1: ( rule__ConfigConnector__Group_1_1_0__1__Impl )
            // InternalDockerCompose.g:4415:2: rule__ConfigConnector__Group_1_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector__Group_1_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_0__1"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_0__1__Impl"
    // InternalDockerCompose.g:4421:1: rule__ConfigConnector__Group_1_1_0__1__Impl : ( ( rule__ConfigConnector__ConfigAssignment_1_1_0_1 ) ) ;
    public final void rule__ConfigConnector__Group_1_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4425:1: ( ( ( rule__ConfigConnector__ConfigAssignment_1_1_0_1 ) ) )
            // InternalDockerCompose.g:4426:1: ( ( rule__ConfigConnector__ConfigAssignment_1_1_0_1 ) )
            {
            // InternalDockerCompose.g:4426:1: ( ( rule__ConfigConnector__ConfigAssignment_1_1_0_1 ) )
            // InternalDockerCompose.g:4427:2: ( rule__ConfigConnector__ConfigAssignment_1_1_0_1 )
            {
             before(grammarAccess.getConfigConnectorAccess().getConfigAssignment_1_1_0_1()); 
            // InternalDockerCompose.g:4428:2: ( rule__ConfigConnector__ConfigAssignment_1_1_0_1 )
            // InternalDockerCompose.g:4428:3: rule__ConfigConnector__ConfigAssignment_1_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector__ConfigAssignment_1_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnectorAccess().getConfigAssignment_1_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_0__1__Impl"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_1__0"
    // InternalDockerCompose.g:4437:1: rule__ConfigConnector__Group_1_1_1__0 : rule__ConfigConnector__Group_1_1_1__0__Impl rule__ConfigConnector__Group_1_1_1__1 ;
    public final void rule__ConfigConnector__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4441:1: ( rule__ConfigConnector__Group_1_1_1__0__Impl rule__ConfigConnector__Group_1_1_1__1 )
            // InternalDockerCompose.g:4442:2: rule__ConfigConnector__Group_1_1_1__0__Impl rule__ConfigConnector__Group_1_1_1__1
            {
            pushFollow(FOLLOW_9);
            rule__ConfigConnector__Group_1_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector__Group_1_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_1__0"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_1__0__Impl"
    // InternalDockerCompose.g:4449:1: rule__ConfigConnector__Group_1_1_1__0__Impl : ( 'target:' ) ;
    public final void rule__ConfigConnector__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4453:1: ( ( 'target:' ) )
            // InternalDockerCompose.g:4454:1: ( 'target:' )
            {
            // InternalDockerCompose.g:4454:1: ( 'target:' )
            // InternalDockerCompose.g:4455:2: 'target:'
            {
             before(grammarAccess.getConfigConnectorAccess().getTargetKeyword_1_1_1_0()); 
            match(input,60,FOLLOW_2); 
             after(grammarAccess.getConfigConnectorAccess().getTargetKeyword_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_1__1"
    // InternalDockerCompose.g:4464:1: rule__ConfigConnector__Group_1_1_1__1 : rule__ConfigConnector__Group_1_1_1__1__Impl ;
    public final void rule__ConfigConnector__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4468:1: ( rule__ConfigConnector__Group_1_1_1__1__Impl )
            // InternalDockerCompose.g:4469:2: rule__ConfigConnector__Group_1_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector__Group_1_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_1__1"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_1__1__Impl"
    // InternalDockerCompose.g:4475:1: rule__ConfigConnector__Group_1_1_1__1__Impl : ( ( rule__ConfigConnector__TargetAssignment_1_1_1_1 ) ) ;
    public final void rule__ConfigConnector__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4479:1: ( ( ( rule__ConfigConnector__TargetAssignment_1_1_1_1 ) ) )
            // InternalDockerCompose.g:4480:1: ( ( rule__ConfigConnector__TargetAssignment_1_1_1_1 ) )
            {
            // InternalDockerCompose.g:4480:1: ( ( rule__ConfigConnector__TargetAssignment_1_1_1_1 ) )
            // InternalDockerCompose.g:4481:2: ( rule__ConfigConnector__TargetAssignment_1_1_1_1 )
            {
             before(grammarAccess.getConfigConnectorAccess().getTargetAssignment_1_1_1_1()); 
            // InternalDockerCompose.g:4482:2: ( rule__ConfigConnector__TargetAssignment_1_1_1_1 )
            // InternalDockerCompose.g:4482:3: rule__ConfigConnector__TargetAssignment_1_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector__TargetAssignment_1_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnectorAccess().getTargetAssignment_1_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_2__0"
    // InternalDockerCompose.g:4491:1: rule__ConfigConnector__Group_1_1_2__0 : rule__ConfigConnector__Group_1_1_2__0__Impl rule__ConfigConnector__Group_1_1_2__1 ;
    public final void rule__ConfigConnector__Group_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4495:1: ( rule__ConfigConnector__Group_1_1_2__0__Impl rule__ConfigConnector__Group_1_1_2__1 )
            // InternalDockerCompose.g:4496:2: rule__ConfigConnector__Group_1_1_2__0__Impl rule__ConfigConnector__Group_1_1_2__1
            {
            pushFollow(FOLLOW_30);
            rule__ConfigConnector__Group_1_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector__Group_1_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_2__0"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_2__0__Impl"
    // InternalDockerCompose.g:4503:1: rule__ConfigConnector__Group_1_1_2__0__Impl : ( 'uid:' ) ;
    public final void rule__ConfigConnector__Group_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4507:1: ( ( 'uid:' ) )
            // InternalDockerCompose.g:4508:1: ( 'uid:' )
            {
            // InternalDockerCompose.g:4508:1: ( 'uid:' )
            // InternalDockerCompose.g:4509:2: 'uid:'
            {
             before(grammarAccess.getConfigConnectorAccess().getUidKeyword_1_1_2_0()); 
            match(input,67,FOLLOW_2); 
             after(grammarAccess.getConfigConnectorAccess().getUidKeyword_1_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_2__0__Impl"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_2__1"
    // InternalDockerCompose.g:4518:1: rule__ConfigConnector__Group_1_1_2__1 : rule__ConfigConnector__Group_1_1_2__1__Impl ;
    public final void rule__ConfigConnector__Group_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4522:1: ( rule__ConfigConnector__Group_1_1_2__1__Impl )
            // InternalDockerCompose.g:4523:2: rule__ConfigConnector__Group_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector__Group_1_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_2__1"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_2__1__Impl"
    // InternalDockerCompose.g:4529:1: rule__ConfigConnector__Group_1_1_2__1__Impl : ( ( rule__ConfigConnector__UidAssignment_1_1_2_1 ) ) ;
    public final void rule__ConfigConnector__Group_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4533:1: ( ( ( rule__ConfigConnector__UidAssignment_1_1_2_1 ) ) )
            // InternalDockerCompose.g:4534:1: ( ( rule__ConfigConnector__UidAssignment_1_1_2_1 ) )
            {
            // InternalDockerCompose.g:4534:1: ( ( rule__ConfigConnector__UidAssignment_1_1_2_1 ) )
            // InternalDockerCompose.g:4535:2: ( rule__ConfigConnector__UidAssignment_1_1_2_1 )
            {
             before(grammarAccess.getConfigConnectorAccess().getUidAssignment_1_1_2_1()); 
            // InternalDockerCompose.g:4536:2: ( rule__ConfigConnector__UidAssignment_1_1_2_1 )
            // InternalDockerCompose.g:4536:3: rule__ConfigConnector__UidAssignment_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector__UidAssignment_1_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnectorAccess().getUidAssignment_1_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_2__1__Impl"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_3__0"
    // InternalDockerCompose.g:4545:1: rule__ConfigConnector__Group_1_1_3__0 : rule__ConfigConnector__Group_1_1_3__0__Impl rule__ConfigConnector__Group_1_1_3__1 ;
    public final void rule__ConfigConnector__Group_1_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4549:1: ( rule__ConfigConnector__Group_1_1_3__0__Impl rule__ConfigConnector__Group_1_1_3__1 )
            // InternalDockerCompose.g:4550:2: rule__ConfigConnector__Group_1_1_3__0__Impl rule__ConfigConnector__Group_1_1_3__1
            {
            pushFollow(FOLLOW_30);
            rule__ConfigConnector__Group_1_1_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector__Group_1_1_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_3__0"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_3__0__Impl"
    // InternalDockerCompose.g:4557:1: rule__ConfigConnector__Group_1_1_3__0__Impl : ( 'gid:' ) ;
    public final void rule__ConfigConnector__Group_1_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4561:1: ( ( 'gid:' ) )
            // InternalDockerCompose.g:4562:1: ( 'gid:' )
            {
            // InternalDockerCompose.g:4562:1: ( 'gid:' )
            // InternalDockerCompose.g:4563:2: 'gid:'
            {
             before(grammarAccess.getConfigConnectorAccess().getGidKeyword_1_1_3_0()); 
            match(input,68,FOLLOW_2); 
             after(grammarAccess.getConfigConnectorAccess().getGidKeyword_1_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_3__0__Impl"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_3__1"
    // InternalDockerCompose.g:4572:1: rule__ConfigConnector__Group_1_1_3__1 : rule__ConfigConnector__Group_1_1_3__1__Impl ;
    public final void rule__ConfigConnector__Group_1_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4576:1: ( rule__ConfigConnector__Group_1_1_3__1__Impl )
            // InternalDockerCompose.g:4577:2: rule__ConfigConnector__Group_1_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector__Group_1_1_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_3__1"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_3__1__Impl"
    // InternalDockerCompose.g:4583:1: rule__ConfigConnector__Group_1_1_3__1__Impl : ( ( rule__ConfigConnector__GidAssignment_1_1_3_1 ) ) ;
    public final void rule__ConfigConnector__Group_1_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4587:1: ( ( ( rule__ConfigConnector__GidAssignment_1_1_3_1 ) ) )
            // InternalDockerCompose.g:4588:1: ( ( rule__ConfigConnector__GidAssignment_1_1_3_1 ) )
            {
            // InternalDockerCompose.g:4588:1: ( ( rule__ConfigConnector__GidAssignment_1_1_3_1 ) )
            // InternalDockerCompose.g:4589:2: ( rule__ConfigConnector__GidAssignment_1_1_3_1 )
            {
             before(grammarAccess.getConfigConnectorAccess().getGidAssignment_1_1_3_1()); 
            // InternalDockerCompose.g:4590:2: ( rule__ConfigConnector__GidAssignment_1_1_3_1 )
            // InternalDockerCompose.g:4590:3: rule__ConfigConnector__GidAssignment_1_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector__GidAssignment_1_1_3_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnectorAccess().getGidAssignment_1_1_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_3__1__Impl"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_4__0"
    // InternalDockerCompose.g:4599:1: rule__ConfigConnector__Group_1_1_4__0 : rule__ConfigConnector__Group_1_1_4__0__Impl rule__ConfigConnector__Group_1_1_4__1 ;
    public final void rule__ConfigConnector__Group_1_1_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4603:1: ( rule__ConfigConnector__Group_1_1_4__0__Impl rule__ConfigConnector__Group_1_1_4__1 )
            // InternalDockerCompose.g:4604:2: rule__ConfigConnector__Group_1_1_4__0__Impl rule__ConfigConnector__Group_1_1_4__1
            {
            pushFollow(FOLLOW_10);
            rule__ConfigConnector__Group_1_1_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector__Group_1_1_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_4__0"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_4__0__Impl"
    // InternalDockerCompose.g:4611:1: rule__ConfigConnector__Group_1_1_4__0__Impl : ( 'mode:' ) ;
    public final void rule__ConfigConnector__Group_1_1_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4615:1: ( ( 'mode:' ) )
            // InternalDockerCompose.g:4616:1: ( 'mode:' )
            {
            // InternalDockerCompose.g:4616:1: ( 'mode:' )
            // InternalDockerCompose.g:4617:2: 'mode:'
            {
             before(grammarAccess.getConfigConnectorAccess().getModeKeyword_1_1_4_0()); 
            match(input,69,FOLLOW_2); 
             after(grammarAccess.getConfigConnectorAccess().getModeKeyword_1_1_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_4__0__Impl"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_4__1"
    // InternalDockerCompose.g:4626:1: rule__ConfigConnector__Group_1_1_4__1 : rule__ConfigConnector__Group_1_1_4__1__Impl ;
    public final void rule__ConfigConnector__Group_1_1_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4630:1: ( rule__ConfigConnector__Group_1_1_4__1__Impl )
            // InternalDockerCompose.g:4631:2: rule__ConfigConnector__Group_1_1_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector__Group_1_1_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_4__1"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_4__1__Impl"
    // InternalDockerCompose.g:4637:1: rule__ConfigConnector__Group_1_1_4__1__Impl : ( ( rule__ConfigConnector__ModeAssignment_1_1_4_1 ) ) ;
    public final void rule__ConfigConnector__Group_1_1_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4641:1: ( ( ( rule__ConfigConnector__ModeAssignment_1_1_4_1 ) ) )
            // InternalDockerCompose.g:4642:1: ( ( rule__ConfigConnector__ModeAssignment_1_1_4_1 ) )
            {
            // InternalDockerCompose.g:4642:1: ( ( rule__ConfigConnector__ModeAssignment_1_1_4_1 ) )
            // InternalDockerCompose.g:4643:2: ( rule__ConfigConnector__ModeAssignment_1_1_4_1 )
            {
             before(grammarAccess.getConfigConnectorAccess().getModeAssignment_1_1_4_1()); 
            // InternalDockerCompose.g:4644:2: ( rule__ConfigConnector__ModeAssignment_1_1_4_1 )
            // InternalDockerCompose.g:4644:3: rule__ConfigConnector__ModeAssignment_1_1_4_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector__ModeAssignment_1_1_4_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnectorAccess().getModeAssignment_1_1_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_4__1__Impl"


    // $ANTLR start "rule__SecretConnector__Group__0"
    // InternalDockerCompose.g:4653:1: rule__SecretConnector__Group__0 : rule__SecretConnector__Group__0__Impl rule__SecretConnector__Group__1 ;
    public final void rule__SecretConnector__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4657:1: ( rule__SecretConnector__Group__0__Impl rule__SecretConnector__Group__1 )
            // InternalDockerCompose.g:4658:2: rule__SecretConnector__Group__0__Impl rule__SecretConnector__Group__1
            {
            pushFollow(FOLLOW_17);
            rule__SecretConnector__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group__0"


    // $ANTLR start "rule__SecretConnector__Group__0__Impl"
    // InternalDockerCompose.g:4665:1: rule__SecretConnector__Group__0__Impl : ( () ) ;
    public final void rule__SecretConnector__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4669:1: ( ( () ) )
            // InternalDockerCompose.g:4670:1: ( () )
            {
            // InternalDockerCompose.g:4670:1: ( () )
            // InternalDockerCompose.g:4671:2: ()
            {
             before(grammarAccess.getSecretConnectorAccess().getSecretConnectorAction_0()); 
            // InternalDockerCompose.g:4672:2: ()
            // InternalDockerCompose.g:4672:3: 
            {
            }

             after(grammarAccess.getSecretConnectorAccess().getSecretConnectorAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group__0__Impl"


    // $ANTLR start "rule__SecretConnector__Group__1"
    // InternalDockerCompose.g:4680:1: rule__SecretConnector__Group__1 : rule__SecretConnector__Group__1__Impl ;
    public final void rule__SecretConnector__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4684:1: ( rule__SecretConnector__Group__1__Impl )
            // InternalDockerCompose.g:4685:2: rule__SecretConnector__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group__1"


    // $ANTLR start "rule__SecretConnector__Group__1__Impl"
    // InternalDockerCompose.g:4691:1: rule__SecretConnector__Group__1__Impl : ( ( rule__SecretConnector__Alternatives_1 ) ) ;
    public final void rule__SecretConnector__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4695:1: ( ( ( rule__SecretConnector__Alternatives_1 ) ) )
            // InternalDockerCompose.g:4696:1: ( ( rule__SecretConnector__Alternatives_1 ) )
            {
            // InternalDockerCompose.g:4696:1: ( ( rule__SecretConnector__Alternatives_1 ) )
            // InternalDockerCompose.g:4697:2: ( rule__SecretConnector__Alternatives_1 )
            {
             before(grammarAccess.getSecretConnectorAccess().getAlternatives_1()); 
            // InternalDockerCompose.g:4698:2: ( rule__SecretConnector__Alternatives_1 )
            // InternalDockerCompose.g:4698:3: rule__SecretConnector__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector__Alternatives_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnectorAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group__1__Impl"


    // $ANTLR start "rule__SecretConnector__Group_1_1_0__0"
    // InternalDockerCompose.g:4707:1: rule__SecretConnector__Group_1_1_0__0 : rule__SecretConnector__Group_1_1_0__0__Impl rule__SecretConnector__Group_1_1_0__1 ;
    public final void rule__SecretConnector__Group_1_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4711:1: ( rule__SecretConnector__Group_1_1_0__0__Impl rule__SecretConnector__Group_1_1_0__1 )
            // InternalDockerCompose.g:4712:2: rule__SecretConnector__Group_1_1_0__0__Impl rule__SecretConnector__Group_1_1_0__1
            {
            pushFollow(FOLLOW_5);
            rule__SecretConnector__Group_1_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector__Group_1_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_0__0"


    // $ANTLR start "rule__SecretConnector__Group_1_1_0__0__Impl"
    // InternalDockerCompose.g:4719:1: rule__SecretConnector__Group_1_1_0__0__Impl : ( 'source:' ) ;
    public final void rule__SecretConnector__Group_1_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4723:1: ( ( 'source:' ) )
            // InternalDockerCompose.g:4724:1: ( 'source:' )
            {
            // InternalDockerCompose.g:4724:1: ( 'source:' )
            // InternalDockerCompose.g:4725:2: 'source:'
            {
             before(grammarAccess.getSecretConnectorAccess().getSourceKeyword_1_1_0_0()); 
            match(input,58,FOLLOW_2); 
             after(grammarAccess.getSecretConnectorAccess().getSourceKeyword_1_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_0__0__Impl"


    // $ANTLR start "rule__SecretConnector__Group_1_1_0__1"
    // InternalDockerCompose.g:4734:1: rule__SecretConnector__Group_1_1_0__1 : rule__SecretConnector__Group_1_1_0__1__Impl ;
    public final void rule__SecretConnector__Group_1_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4738:1: ( rule__SecretConnector__Group_1_1_0__1__Impl )
            // InternalDockerCompose.g:4739:2: rule__SecretConnector__Group_1_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector__Group_1_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_0__1"


    // $ANTLR start "rule__SecretConnector__Group_1_1_0__1__Impl"
    // InternalDockerCompose.g:4745:1: rule__SecretConnector__Group_1_1_0__1__Impl : ( ( rule__SecretConnector__SecretAssignment_1_1_0_1 ) ) ;
    public final void rule__SecretConnector__Group_1_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4749:1: ( ( ( rule__SecretConnector__SecretAssignment_1_1_0_1 ) ) )
            // InternalDockerCompose.g:4750:1: ( ( rule__SecretConnector__SecretAssignment_1_1_0_1 ) )
            {
            // InternalDockerCompose.g:4750:1: ( ( rule__SecretConnector__SecretAssignment_1_1_0_1 ) )
            // InternalDockerCompose.g:4751:2: ( rule__SecretConnector__SecretAssignment_1_1_0_1 )
            {
             before(grammarAccess.getSecretConnectorAccess().getSecretAssignment_1_1_0_1()); 
            // InternalDockerCompose.g:4752:2: ( rule__SecretConnector__SecretAssignment_1_1_0_1 )
            // InternalDockerCompose.g:4752:3: rule__SecretConnector__SecretAssignment_1_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector__SecretAssignment_1_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnectorAccess().getSecretAssignment_1_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_0__1__Impl"


    // $ANTLR start "rule__SecretConnector__Group_1_1_1__0"
    // InternalDockerCompose.g:4761:1: rule__SecretConnector__Group_1_1_1__0 : rule__SecretConnector__Group_1_1_1__0__Impl rule__SecretConnector__Group_1_1_1__1 ;
    public final void rule__SecretConnector__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4765:1: ( rule__SecretConnector__Group_1_1_1__0__Impl rule__SecretConnector__Group_1_1_1__1 )
            // InternalDockerCompose.g:4766:2: rule__SecretConnector__Group_1_1_1__0__Impl rule__SecretConnector__Group_1_1_1__1
            {
            pushFollow(FOLLOW_9);
            rule__SecretConnector__Group_1_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector__Group_1_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_1__0"


    // $ANTLR start "rule__SecretConnector__Group_1_1_1__0__Impl"
    // InternalDockerCompose.g:4773:1: rule__SecretConnector__Group_1_1_1__0__Impl : ( 'target:' ) ;
    public final void rule__SecretConnector__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4777:1: ( ( 'target:' ) )
            // InternalDockerCompose.g:4778:1: ( 'target:' )
            {
            // InternalDockerCompose.g:4778:1: ( 'target:' )
            // InternalDockerCompose.g:4779:2: 'target:'
            {
             before(grammarAccess.getSecretConnectorAccess().getTargetKeyword_1_1_1_0()); 
            match(input,60,FOLLOW_2); 
             after(grammarAccess.getSecretConnectorAccess().getTargetKeyword_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__SecretConnector__Group_1_1_1__1"
    // InternalDockerCompose.g:4788:1: rule__SecretConnector__Group_1_1_1__1 : rule__SecretConnector__Group_1_1_1__1__Impl ;
    public final void rule__SecretConnector__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4792:1: ( rule__SecretConnector__Group_1_1_1__1__Impl )
            // InternalDockerCompose.g:4793:2: rule__SecretConnector__Group_1_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector__Group_1_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_1__1"


    // $ANTLR start "rule__SecretConnector__Group_1_1_1__1__Impl"
    // InternalDockerCompose.g:4799:1: rule__SecretConnector__Group_1_1_1__1__Impl : ( ( rule__SecretConnector__TargetAssignment_1_1_1_1 ) ) ;
    public final void rule__SecretConnector__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4803:1: ( ( ( rule__SecretConnector__TargetAssignment_1_1_1_1 ) ) )
            // InternalDockerCompose.g:4804:1: ( ( rule__SecretConnector__TargetAssignment_1_1_1_1 ) )
            {
            // InternalDockerCompose.g:4804:1: ( ( rule__SecretConnector__TargetAssignment_1_1_1_1 ) )
            // InternalDockerCompose.g:4805:2: ( rule__SecretConnector__TargetAssignment_1_1_1_1 )
            {
             before(grammarAccess.getSecretConnectorAccess().getTargetAssignment_1_1_1_1()); 
            // InternalDockerCompose.g:4806:2: ( rule__SecretConnector__TargetAssignment_1_1_1_1 )
            // InternalDockerCompose.g:4806:3: rule__SecretConnector__TargetAssignment_1_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector__TargetAssignment_1_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnectorAccess().getTargetAssignment_1_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__SecretConnector__Group_1_1_2__0"
    // InternalDockerCompose.g:4815:1: rule__SecretConnector__Group_1_1_2__0 : rule__SecretConnector__Group_1_1_2__0__Impl rule__SecretConnector__Group_1_1_2__1 ;
    public final void rule__SecretConnector__Group_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4819:1: ( rule__SecretConnector__Group_1_1_2__0__Impl rule__SecretConnector__Group_1_1_2__1 )
            // InternalDockerCompose.g:4820:2: rule__SecretConnector__Group_1_1_2__0__Impl rule__SecretConnector__Group_1_1_2__1
            {
            pushFollow(FOLLOW_30);
            rule__SecretConnector__Group_1_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector__Group_1_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_2__0"


    // $ANTLR start "rule__SecretConnector__Group_1_1_2__0__Impl"
    // InternalDockerCompose.g:4827:1: rule__SecretConnector__Group_1_1_2__0__Impl : ( 'uid:' ) ;
    public final void rule__SecretConnector__Group_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4831:1: ( ( 'uid:' ) )
            // InternalDockerCompose.g:4832:1: ( 'uid:' )
            {
            // InternalDockerCompose.g:4832:1: ( 'uid:' )
            // InternalDockerCompose.g:4833:2: 'uid:'
            {
             before(grammarAccess.getSecretConnectorAccess().getUidKeyword_1_1_2_0()); 
            match(input,67,FOLLOW_2); 
             after(grammarAccess.getSecretConnectorAccess().getUidKeyword_1_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_2__0__Impl"


    // $ANTLR start "rule__SecretConnector__Group_1_1_2__1"
    // InternalDockerCompose.g:4842:1: rule__SecretConnector__Group_1_1_2__1 : rule__SecretConnector__Group_1_1_2__1__Impl ;
    public final void rule__SecretConnector__Group_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4846:1: ( rule__SecretConnector__Group_1_1_2__1__Impl )
            // InternalDockerCompose.g:4847:2: rule__SecretConnector__Group_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector__Group_1_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_2__1"


    // $ANTLR start "rule__SecretConnector__Group_1_1_2__1__Impl"
    // InternalDockerCompose.g:4853:1: rule__SecretConnector__Group_1_1_2__1__Impl : ( ( rule__SecretConnector__UidAssignment_1_1_2_1 ) ) ;
    public final void rule__SecretConnector__Group_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4857:1: ( ( ( rule__SecretConnector__UidAssignment_1_1_2_1 ) ) )
            // InternalDockerCompose.g:4858:1: ( ( rule__SecretConnector__UidAssignment_1_1_2_1 ) )
            {
            // InternalDockerCompose.g:4858:1: ( ( rule__SecretConnector__UidAssignment_1_1_2_1 ) )
            // InternalDockerCompose.g:4859:2: ( rule__SecretConnector__UidAssignment_1_1_2_1 )
            {
             before(grammarAccess.getSecretConnectorAccess().getUidAssignment_1_1_2_1()); 
            // InternalDockerCompose.g:4860:2: ( rule__SecretConnector__UidAssignment_1_1_2_1 )
            // InternalDockerCompose.g:4860:3: rule__SecretConnector__UidAssignment_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector__UidAssignment_1_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnectorAccess().getUidAssignment_1_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_2__1__Impl"


    // $ANTLR start "rule__SecretConnector__Group_1_1_3__0"
    // InternalDockerCompose.g:4869:1: rule__SecretConnector__Group_1_1_3__0 : rule__SecretConnector__Group_1_1_3__0__Impl rule__SecretConnector__Group_1_1_3__1 ;
    public final void rule__SecretConnector__Group_1_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4873:1: ( rule__SecretConnector__Group_1_1_3__0__Impl rule__SecretConnector__Group_1_1_3__1 )
            // InternalDockerCompose.g:4874:2: rule__SecretConnector__Group_1_1_3__0__Impl rule__SecretConnector__Group_1_1_3__1
            {
            pushFollow(FOLLOW_30);
            rule__SecretConnector__Group_1_1_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector__Group_1_1_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_3__0"


    // $ANTLR start "rule__SecretConnector__Group_1_1_3__0__Impl"
    // InternalDockerCompose.g:4881:1: rule__SecretConnector__Group_1_1_3__0__Impl : ( 'gid:' ) ;
    public final void rule__SecretConnector__Group_1_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4885:1: ( ( 'gid:' ) )
            // InternalDockerCompose.g:4886:1: ( 'gid:' )
            {
            // InternalDockerCompose.g:4886:1: ( 'gid:' )
            // InternalDockerCompose.g:4887:2: 'gid:'
            {
             before(grammarAccess.getSecretConnectorAccess().getGidKeyword_1_1_3_0()); 
            match(input,68,FOLLOW_2); 
             after(grammarAccess.getSecretConnectorAccess().getGidKeyword_1_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_3__0__Impl"


    // $ANTLR start "rule__SecretConnector__Group_1_1_3__1"
    // InternalDockerCompose.g:4896:1: rule__SecretConnector__Group_1_1_3__1 : rule__SecretConnector__Group_1_1_3__1__Impl ;
    public final void rule__SecretConnector__Group_1_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4900:1: ( rule__SecretConnector__Group_1_1_3__1__Impl )
            // InternalDockerCompose.g:4901:2: rule__SecretConnector__Group_1_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector__Group_1_1_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_3__1"


    // $ANTLR start "rule__SecretConnector__Group_1_1_3__1__Impl"
    // InternalDockerCompose.g:4907:1: rule__SecretConnector__Group_1_1_3__1__Impl : ( ( rule__SecretConnector__GidAssignment_1_1_3_1 ) ) ;
    public final void rule__SecretConnector__Group_1_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4911:1: ( ( ( rule__SecretConnector__GidAssignment_1_1_3_1 ) ) )
            // InternalDockerCompose.g:4912:1: ( ( rule__SecretConnector__GidAssignment_1_1_3_1 ) )
            {
            // InternalDockerCompose.g:4912:1: ( ( rule__SecretConnector__GidAssignment_1_1_3_1 ) )
            // InternalDockerCompose.g:4913:2: ( rule__SecretConnector__GidAssignment_1_1_3_1 )
            {
             before(grammarAccess.getSecretConnectorAccess().getGidAssignment_1_1_3_1()); 
            // InternalDockerCompose.g:4914:2: ( rule__SecretConnector__GidAssignment_1_1_3_1 )
            // InternalDockerCompose.g:4914:3: rule__SecretConnector__GidAssignment_1_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector__GidAssignment_1_1_3_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnectorAccess().getGidAssignment_1_1_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_3__1__Impl"


    // $ANTLR start "rule__SecretConnector__Group_1_1_4__0"
    // InternalDockerCompose.g:4923:1: rule__SecretConnector__Group_1_1_4__0 : rule__SecretConnector__Group_1_1_4__0__Impl rule__SecretConnector__Group_1_1_4__1 ;
    public final void rule__SecretConnector__Group_1_1_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4927:1: ( rule__SecretConnector__Group_1_1_4__0__Impl rule__SecretConnector__Group_1_1_4__1 )
            // InternalDockerCompose.g:4928:2: rule__SecretConnector__Group_1_1_4__0__Impl rule__SecretConnector__Group_1_1_4__1
            {
            pushFollow(FOLLOW_10);
            rule__SecretConnector__Group_1_1_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector__Group_1_1_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_4__0"


    // $ANTLR start "rule__SecretConnector__Group_1_1_4__0__Impl"
    // InternalDockerCompose.g:4935:1: rule__SecretConnector__Group_1_1_4__0__Impl : ( 'mode:' ) ;
    public final void rule__SecretConnector__Group_1_1_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4939:1: ( ( 'mode:' ) )
            // InternalDockerCompose.g:4940:1: ( 'mode:' )
            {
            // InternalDockerCompose.g:4940:1: ( 'mode:' )
            // InternalDockerCompose.g:4941:2: 'mode:'
            {
             before(grammarAccess.getSecretConnectorAccess().getModeKeyword_1_1_4_0()); 
            match(input,69,FOLLOW_2); 
             after(grammarAccess.getSecretConnectorAccess().getModeKeyword_1_1_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_4__0__Impl"


    // $ANTLR start "rule__SecretConnector__Group_1_1_4__1"
    // InternalDockerCompose.g:4950:1: rule__SecretConnector__Group_1_1_4__1 : rule__SecretConnector__Group_1_1_4__1__Impl ;
    public final void rule__SecretConnector__Group_1_1_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4954:1: ( rule__SecretConnector__Group_1_1_4__1__Impl )
            // InternalDockerCompose.g:4955:2: rule__SecretConnector__Group_1_1_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector__Group_1_1_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_4__1"


    // $ANTLR start "rule__SecretConnector__Group_1_1_4__1__Impl"
    // InternalDockerCompose.g:4961:1: rule__SecretConnector__Group_1_1_4__1__Impl : ( ( rule__SecretConnector__ModeAssignment_1_1_4_1 ) ) ;
    public final void rule__SecretConnector__Group_1_1_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4965:1: ( ( ( rule__SecretConnector__ModeAssignment_1_1_4_1 ) ) )
            // InternalDockerCompose.g:4966:1: ( ( rule__SecretConnector__ModeAssignment_1_1_4_1 ) )
            {
            // InternalDockerCompose.g:4966:1: ( ( rule__SecretConnector__ModeAssignment_1_1_4_1 ) )
            // InternalDockerCompose.g:4967:2: ( rule__SecretConnector__ModeAssignment_1_1_4_1 )
            {
             before(grammarAccess.getSecretConnectorAccess().getModeAssignment_1_1_4_1()); 
            // InternalDockerCompose.g:4968:2: ( rule__SecretConnector__ModeAssignment_1_1_4_1 )
            // InternalDockerCompose.g:4968:3: rule__SecretConnector__ModeAssignment_1_1_4_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector__ModeAssignment_1_1_4_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnectorAccess().getModeAssignment_1_1_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_4__1__Impl"


    // $ANTLR start "rule__Network__Group__0"
    // InternalDockerCompose.g:4977:1: rule__Network__Group__0 : rule__Network__Group__0__Impl rule__Network__Group__1 ;
    public final void rule__Network__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4981:1: ( rule__Network__Group__0__Impl rule__Network__Group__1 )
            // InternalDockerCompose.g:4982:2: rule__Network__Group__0__Impl rule__Network__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__Network__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__0"


    // $ANTLR start "rule__Network__Group__0__Impl"
    // InternalDockerCompose.g:4989:1: rule__Network__Group__0__Impl : ( () ) ;
    public final void rule__Network__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4993:1: ( ( () ) )
            // InternalDockerCompose.g:4994:1: ( () )
            {
            // InternalDockerCompose.g:4994:1: ( () )
            // InternalDockerCompose.g:4995:2: ()
            {
             before(grammarAccess.getNetworkAccess().getNetworkAction_0()); 
            // InternalDockerCompose.g:4996:2: ()
            // InternalDockerCompose.g:4996:3: 
            {
            }

             after(grammarAccess.getNetworkAccess().getNetworkAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__0__Impl"


    // $ANTLR start "rule__Network__Group__1"
    // InternalDockerCompose.g:5004:1: rule__Network__Group__1 : rule__Network__Group__1__Impl rule__Network__Group__2 ;
    public final void rule__Network__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5008:1: ( rule__Network__Group__1__Impl rule__Network__Group__2 )
            // InternalDockerCompose.g:5009:2: rule__Network__Group__1__Impl rule__Network__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__Network__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__1"


    // $ANTLR start "rule__Network__Group__1__Impl"
    // InternalDockerCompose.g:5016:1: rule__Network__Group__1__Impl : ( ( rule__Network__NameAssignment_1 ) ) ;
    public final void rule__Network__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5020:1: ( ( ( rule__Network__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:5021:1: ( ( rule__Network__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:5021:1: ( ( rule__Network__NameAssignment_1 ) )
            // InternalDockerCompose.g:5022:2: ( rule__Network__NameAssignment_1 )
            {
             before(grammarAccess.getNetworkAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:5023:2: ( rule__Network__NameAssignment_1 )
            // InternalDockerCompose.g:5023:3: rule__Network__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__1__Impl"


    // $ANTLR start "rule__Network__Group__2"
    // InternalDockerCompose.g:5031:1: rule__Network__Group__2 : rule__Network__Group__2__Impl rule__Network__Group__3 ;
    public final void rule__Network__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5035:1: ( rule__Network__Group__2__Impl rule__Network__Group__3 )
            // InternalDockerCompose.g:5036:2: rule__Network__Group__2__Impl rule__Network__Group__3
            {
            pushFollow(FOLLOW_31);
            rule__Network__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__2"


    // $ANTLR start "rule__Network__Group__2__Impl"
    // InternalDockerCompose.g:5043:1: rule__Network__Group__2__Impl : ( ':' ) ;
    public final void rule__Network__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5047:1: ( ( ':' ) )
            // InternalDockerCompose.g:5048:1: ( ':' )
            {
            // InternalDockerCompose.g:5048:1: ( ':' )
            // InternalDockerCompose.g:5049:2: ':'
            {
             before(grammarAccess.getNetworkAccess().getColonKeyword_2()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__2__Impl"


    // $ANTLR start "rule__Network__Group__3"
    // InternalDockerCompose.g:5058:1: rule__Network__Group__3 : rule__Network__Group__3__Impl ;
    public final void rule__Network__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5062:1: ( rule__Network__Group__3__Impl )
            // InternalDockerCompose.g:5063:2: rule__Network__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__3"


    // $ANTLR start "rule__Network__Group__3__Impl"
    // InternalDockerCompose.g:5069:1: rule__Network__Group__3__Impl : ( ( rule__Network__Alternatives_3 ) ) ;
    public final void rule__Network__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5073:1: ( ( ( rule__Network__Alternatives_3 ) ) )
            // InternalDockerCompose.g:5074:1: ( ( rule__Network__Alternatives_3 ) )
            {
            // InternalDockerCompose.g:5074:1: ( ( rule__Network__Alternatives_3 ) )
            // InternalDockerCompose.g:5075:2: ( rule__Network__Alternatives_3 )
            {
             before(grammarAccess.getNetworkAccess().getAlternatives_3()); 
            // InternalDockerCompose.g:5076:2: ( rule__Network__Alternatives_3 )
            // InternalDockerCompose.g:5076:3: rule__Network__Alternatives_3
            {
            pushFollow(FOLLOW_2);
            rule__Network__Alternatives_3();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getAlternatives_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__3__Impl"


    // $ANTLR start "rule__Network__Group_3_0__0"
    // InternalDockerCompose.g:5085:1: rule__Network__Group_3_0__0 : rule__Network__Group_3_0__0__Impl rule__Network__Group_3_0__1 ;
    public final void rule__Network__Group_3_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5089:1: ( rule__Network__Group_3_0__0__Impl rule__Network__Group_3_0__1 )
            // InternalDockerCompose.g:5090:2: rule__Network__Group_3_0__0__Impl rule__Network__Group_3_0__1
            {
            pushFollow(FOLLOW_32);
            rule__Network__Group_3_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_0__0"


    // $ANTLR start "rule__Network__Group_3_0__0__Impl"
    // InternalDockerCompose.g:5097:1: rule__Network__Group_3_0__0__Impl : ( '{' ) ;
    public final void rule__Network__Group_3_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5101:1: ( ( '{' ) )
            // InternalDockerCompose.g:5102:1: ( '{' )
            {
            // InternalDockerCompose.g:5102:1: ( '{' )
            // InternalDockerCompose.g:5103:2: '{'
            {
             before(grammarAccess.getNetworkAccess().getLeftCurlyBracketKeyword_3_0_0()); 
            match(input,70,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getLeftCurlyBracketKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_0__0__Impl"


    // $ANTLR start "rule__Network__Group_3_0__1"
    // InternalDockerCompose.g:5112:1: rule__Network__Group_3_0__1 : rule__Network__Group_3_0__1__Impl ;
    public final void rule__Network__Group_3_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5116:1: ( rule__Network__Group_3_0__1__Impl )
            // InternalDockerCompose.g:5117:2: rule__Network__Group_3_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_0__1"


    // $ANTLR start "rule__Network__Group_3_0__1__Impl"
    // InternalDockerCompose.g:5123:1: rule__Network__Group_3_0__1__Impl : ( '}' ) ;
    public final void rule__Network__Group_3_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5127:1: ( ( '}' ) )
            // InternalDockerCompose.g:5128:1: ( '}' )
            {
            // InternalDockerCompose.g:5128:1: ( '}' )
            // InternalDockerCompose.g:5129:2: '}'
            {
             before(grammarAccess.getNetworkAccess().getRightCurlyBracketKeyword_3_0_1()); 
            match(input,71,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getRightCurlyBracketKeyword_3_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_0__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_0__0"
    // InternalDockerCompose.g:5139:1: rule__Network__Group_3_1_0__0 : rule__Network__Group_3_1_0__0__Impl rule__Network__Group_3_1_0__1 ;
    public final void rule__Network__Group_3_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5143:1: ( rule__Network__Group_3_1_0__0__Impl rule__Network__Group_3_1_0__1 )
            // InternalDockerCompose.g:5144:2: rule__Network__Group_3_1_0__0__Impl rule__Network__Group_3_1_0__1
            {
            pushFollow(FOLLOW_5);
            rule__Network__Group_3_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_0__0"


    // $ANTLR start "rule__Network__Group_3_1_0__0__Impl"
    // InternalDockerCompose.g:5151:1: rule__Network__Group_3_1_0__0__Impl : ( 'driver:' ) ;
    public final void rule__Network__Group_3_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5155:1: ( ( 'driver:' ) )
            // InternalDockerCompose.g:5156:1: ( 'driver:' )
            {
            // InternalDockerCompose.g:5156:1: ( 'driver:' )
            // InternalDockerCompose.g:5157:2: 'driver:'
            {
             before(grammarAccess.getNetworkAccess().getDriverKeyword_3_1_0_0()); 
            match(input,72,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getDriverKeyword_3_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_0__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_0__1"
    // InternalDockerCompose.g:5166:1: rule__Network__Group_3_1_0__1 : rule__Network__Group_3_1_0__1__Impl ;
    public final void rule__Network__Group_3_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5170:1: ( rule__Network__Group_3_1_0__1__Impl )
            // InternalDockerCompose.g:5171:2: rule__Network__Group_3_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_0__1"


    // $ANTLR start "rule__Network__Group_3_1_0__1__Impl"
    // InternalDockerCompose.g:5177:1: rule__Network__Group_3_1_0__1__Impl : ( ( rule__Network__DriverAssignment_3_1_0_1 ) ) ;
    public final void rule__Network__Group_3_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5181:1: ( ( ( rule__Network__DriverAssignment_3_1_0_1 ) ) )
            // InternalDockerCompose.g:5182:1: ( ( rule__Network__DriverAssignment_3_1_0_1 ) )
            {
            // InternalDockerCompose.g:5182:1: ( ( rule__Network__DriverAssignment_3_1_0_1 ) )
            // InternalDockerCompose.g:5183:2: ( rule__Network__DriverAssignment_3_1_0_1 )
            {
             before(grammarAccess.getNetworkAccess().getDriverAssignment_3_1_0_1()); 
            // InternalDockerCompose.g:5184:2: ( rule__Network__DriverAssignment_3_1_0_1 )
            // InternalDockerCompose.g:5184:3: rule__Network__DriverAssignment_3_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__DriverAssignment_3_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getDriverAssignment_3_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_0__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_1__0"
    // InternalDockerCompose.g:5193:1: rule__Network__Group_3_1_1__0 : rule__Network__Group_3_1_1__0__Impl rule__Network__Group_3_1_1__1 ;
    public final void rule__Network__Group_3_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5197:1: ( rule__Network__Group_3_1_1__0__Impl rule__Network__Group_3_1_1__1 )
            // InternalDockerCompose.g:5198:2: rule__Network__Group_3_1_1__0__Impl rule__Network__Group_3_1_1__1
            {
            pushFollow(FOLLOW_12);
            rule__Network__Group_3_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_1__0"


    // $ANTLR start "rule__Network__Group_3_1_1__0__Impl"
    // InternalDockerCompose.g:5205:1: rule__Network__Group_3_1_1__0__Impl : ( 'attachable:' ) ;
    public final void rule__Network__Group_3_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5209:1: ( ( 'attachable:' ) )
            // InternalDockerCompose.g:5210:1: ( 'attachable:' )
            {
            // InternalDockerCompose.g:5210:1: ( 'attachable:' )
            // InternalDockerCompose.g:5211:2: 'attachable:'
            {
             before(grammarAccess.getNetworkAccess().getAttachableKeyword_3_1_1_0()); 
            match(input,73,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getAttachableKeyword_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_1__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_1__1"
    // InternalDockerCompose.g:5220:1: rule__Network__Group_3_1_1__1 : rule__Network__Group_3_1_1__1__Impl ;
    public final void rule__Network__Group_3_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5224:1: ( rule__Network__Group_3_1_1__1__Impl )
            // InternalDockerCompose.g:5225:2: rule__Network__Group_3_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_1__1"


    // $ANTLR start "rule__Network__Group_3_1_1__1__Impl"
    // InternalDockerCompose.g:5231:1: rule__Network__Group_3_1_1__1__Impl : ( ( rule__Network__AttachableAssignment_3_1_1_1 ) ) ;
    public final void rule__Network__Group_3_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5235:1: ( ( ( rule__Network__AttachableAssignment_3_1_1_1 ) ) )
            // InternalDockerCompose.g:5236:1: ( ( rule__Network__AttachableAssignment_3_1_1_1 ) )
            {
            // InternalDockerCompose.g:5236:1: ( ( rule__Network__AttachableAssignment_3_1_1_1 ) )
            // InternalDockerCompose.g:5237:2: ( rule__Network__AttachableAssignment_3_1_1_1 )
            {
             before(grammarAccess.getNetworkAccess().getAttachableAssignment_3_1_1_1()); 
            // InternalDockerCompose.g:5238:2: ( rule__Network__AttachableAssignment_3_1_1_1 )
            // InternalDockerCompose.g:5238:3: rule__Network__AttachableAssignment_3_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__AttachableAssignment_3_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getAttachableAssignment_3_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_1__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_2__0"
    // InternalDockerCompose.g:5247:1: rule__Network__Group_3_1_2__0 : rule__Network__Group_3_1_2__0__Impl rule__Network__Group_3_1_2__1 ;
    public final void rule__Network__Group_3_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5251:1: ( rule__Network__Group_3_1_2__0__Impl rule__Network__Group_3_1_2__1 )
            // InternalDockerCompose.g:5252:2: rule__Network__Group_3_1_2__0__Impl rule__Network__Group_3_1_2__1
            {
            pushFollow(FOLLOW_12);
            rule__Network__Group_3_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_2__0"


    // $ANTLR start "rule__Network__Group_3_1_2__0__Impl"
    // InternalDockerCompose.g:5259:1: rule__Network__Group_3_1_2__0__Impl : ( 'enable_ipv6:' ) ;
    public final void rule__Network__Group_3_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5263:1: ( ( 'enable_ipv6:' ) )
            // InternalDockerCompose.g:5264:1: ( 'enable_ipv6:' )
            {
            // InternalDockerCompose.g:5264:1: ( 'enable_ipv6:' )
            // InternalDockerCompose.g:5265:2: 'enable_ipv6:'
            {
             before(grammarAccess.getNetworkAccess().getEnable_ipv6Keyword_3_1_2_0()); 
            match(input,74,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getEnable_ipv6Keyword_3_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_2__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_2__1"
    // InternalDockerCompose.g:5274:1: rule__Network__Group_3_1_2__1 : rule__Network__Group_3_1_2__1__Impl ;
    public final void rule__Network__Group_3_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5278:1: ( rule__Network__Group_3_1_2__1__Impl )
            // InternalDockerCompose.g:5279:2: rule__Network__Group_3_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_2__1"


    // $ANTLR start "rule__Network__Group_3_1_2__1__Impl"
    // InternalDockerCompose.g:5285:1: rule__Network__Group_3_1_2__1__Impl : ( ( rule__Network__Enable_ipv6Assignment_3_1_2_1 ) ) ;
    public final void rule__Network__Group_3_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5289:1: ( ( ( rule__Network__Enable_ipv6Assignment_3_1_2_1 ) ) )
            // InternalDockerCompose.g:5290:1: ( ( rule__Network__Enable_ipv6Assignment_3_1_2_1 ) )
            {
            // InternalDockerCompose.g:5290:1: ( ( rule__Network__Enable_ipv6Assignment_3_1_2_1 ) )
            // InternalDockerCompose.g:5291:2: ( rule__Network__Enable_ipv6Assignment_3_1_2_1 )
            {
             before(grammarAccess.getNetworkAccess().getEnable_ipv6Assignment_3_1_2_1()); 
            // InternalDockerCompose.g:5292:2: ( rule__Network__Enable_ipv6Assignment_3_1_2_1 )
            // InternalDockerCompose.g:5292:3: rule__Network__Enable_ipv6Assignment_3_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__Enable_ipv6Assignment_3_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getEnable_ipv6Assignment_3_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_2__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_3__0"
    // InternalDockerCompose.g:5301:1: rule__Network__Group_3_1_3__0 : rule__Network__Group_3_1_3__0__Impl rule__Network__Group_3_1_3__1 ;
    public final void rule__Network__Group_3_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5305:1: ( rule__Network__Group_3_1_3__0__Impl rule__Network__Group_3_1_3__1 )
            // InternalDockerCompose.g:5306:2: rule__Network__Group_3_1_3__0__Impl rule__Network__Group_3_1_3__1
            {
            pushFollow(FOLLOW_12);
            rule__Network__Group_3_1_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_3__0"


    // $ANTLR start "rule__Network__Group_3_1_3__0__Impl"
    // InternalDockerCompose.g:5313:1: rule__Network__Group_3_1_3__0__Impl : ( 'internal:' ) ;
    public final void rule__Network__Group_3_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5317:1: ( ( 'internal:' ) )
            // InternalDockerCompose.g:5318:1: ( 'internal:' )
            {
            // InternalDockerCompose.g:5318:1: ( 'internal:' )
            // InternalDockerCompose.g:5319:2: 'internal:'
            {
             before(grammarAccess.getNetworkAccess().getInternalKeyword_3_1_3_0()); 
            match(input,75,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getInternalKeyword_3_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_3__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_3__1"
    // InternalDockerCompose.g:5328:1: rule__Network__Group_3_1_3__1 : rule__Network__Group_3_1_3__1__Impl ;
    public final void rule__Network__Group_3_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5332:1: ( rule__Network__Group_3_1_3__1__Impl )
            // InternalDockerCompose.g:5333:2: rule__Network__Group_3_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_3__1"


    // $ANTLR start "rule__Network__Group_3_1_3__1__Impl"
    // InternalDockerCompose.g:5339:1: rule__Network__Group_3_1_3__1__Impl : ( ( rule__Network__InternalAssignment_3_1_3_1 ) ) ;
    public final void rule__Network__Group_3_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5343:1: ( ( ( rule__Network__InternalAssignment_3_1_3_1 ) ) )
            // InternalDockerCompose.g:5344:1: ( ( rule__Network__InternalAssignment_3_1_3_1 ) )
            {
            // InternalDockerCompose.g:5344:1: ( ( rule__Network__InternalAssignment_3_1_3_1 ) )
            // InternalDockerCompose.g:5345:2: ( rule__Network__InternalAssignment_3_1_3_1 )
            {
             before(grammarAccess.getNetworkAccess().getInternalAssignment_3_1_3_1()); 
            // InternalDockerCompose.g:5346:2: ( rule__Network__InternalAssignment_3_1_3_1 )
            // InternalDockerCompose.g:5346:3: rule__Network__InternalAssignment_3_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__InternalAssignment_3_1_3_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getInternalAssignment_3_1_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_3__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_4__0"
    // InternalDockerCompose.g:5355:1: rule__Network__Group_3_1_4__0 : rule__Network__Group_3_1_4__0__Impl rule__Network__Group_3_1_4__1 ;
    public final void rule__Network__Group_3_1_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5359:1: ( rule__Network__Group_3_1_4__0__Impl rule__Network__Group_3_1_4__1 )
            // InternalDockerCompose.g:5360:2: rule__Network__Group_3_1_4__0__Impl rule__Network__Group_3_1_4__1
            {
            pushFollow(FOLLOW_12);
            rule__Network__Group_3_1_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_4__0"


    // $ANTLR start "rule__Network__Group_3_1_4__0__Impl"
    // InternalDockerCompose.g:5367:1: rule__Network__Group_3_1_4__0__Impl : ( 'external:' ) ;
    public final void rule__Network__Group_3_1_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5371:1: ( ( 'external:' ) )
            // InternalDockerCompose.g:5372:1: ( 'external:' )
            {
            // InternalDockerCompose.g:5372:1: ( 'external:' )
            // InternalDockerCompose.g:5373:2: 'external:'
            {
             before(grammarAccess.getNetworkAccess().getExternalKeyword_3_1_4_0()); 
            match(input,76,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getExternalKeyword_3_1_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_4__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_4__1"
    // InternalDockerCompose.g:5382:1: rule__Network__Group_3_1_4__1 : rule__Network__Group_3_1_4__1__Impl ;
    public final void rule__Network__Group_3_1_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5386:1: ( rule__Network__Group_3_1_4__1__Impl )
            // InternalDockerCompose.g:5387:2: rule__Network__Group_3_1_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_4__1"


    // $ANTLR start "rule__Network__Group_3_1_4__1__Impl"
    // InternalDockerCompose.g:5393:1: rule__Network__Group_3_1_4__1__Impl : ( ( rule__Network__ExternalAssignment_3_1_4_1 ) ) ;
    public final void rule__Network__Group_3_1_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5397:1: ( ( ( rule__Network__ExternalAssignment_3_1_4_1 ) ) )
            // InternalDockerCompose.g:5398:1: ( ( rule__Network__ExternalAssignment_3_1_4_1 ) )
            {
            // InternalDockerCompose.g:5398:1: ( ( rule__Network__ExternalAssignment_3_1_4_1 ) )
            // InternalDockerCompose.g:5399:2: ( rule__Network__ExternalAssignment_3_1_4_1 )
            {
             before(grammarAccess.getNetworkAccess().getExternalAssignment_3_1_4_1()); 
            // InternalDockerCompose.g:5400:2: ( rule__Network__ExternalAssignment_3_1_4_1 )
            // InternalDockerCompose.g:5400:3: rule__Network__ExternalAssignment_3_1_4_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__ExternalAssignment_3_1_4_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getExternalAssignment_3_1_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_4__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_5__0"
    // InternalDockerCompose.g:5409:1: rule__Network__Group_3_1_5__0 : rule__Network__Group_3_1_5__0__Impl rule__Network__Group_3_1_5__1 ;
    public final void rule__Network__Group_3_1_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5413:1: ( rule__Network__Group_3_1_5__0__Impl rule__Network__Group_3_1_5__1 )
            // InternalDockerCompose.g:5414:2: rule__Network__Group_3_1_5__0__Impl rule__Network__Group_3_1_5__1
            {
            pushFollow(FOLLOW_5);
            rule__Network__Group_3_1_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_5__0"


    // $ANTLR start "rule__Network__Group_3_1_5__0__Impl"
    // InternalDockerCompose.g:5421:1: rule__Network__Group_3_1_5__0__Impl : ( 'name:' ) ;
    public final void rule__Network__Group_3_1_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5425:1: ( ( 'name:' ) )
            // InternalDockerCompose.g:5426:1: ( 'name:' )
            {
            // InternalDockerCompose.g:5426:1: ( 'name:' )
            // InternalDockerCompose.g:5427:2: 'name:'
            {
             before(grammarAccess.getNetworkAccess().getNameKeyword_3_1_5_0()); 
            match(input,77,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getNameKeyword_3_1_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_5__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_5__1"
    // InternalDockerCompose.g:5436:1: rule__Network__Group_3_1_5__1 : rule__Network__Group_3_1_5__1__Impl ;
    public final void rule__Network__Group_3_1_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5440:1: ( rule__Network__Group_3_1_5__1__Impl )
            // InternalDockerCompose.g:5441:2: rule__Network__Group_3_1_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_5__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_5__1"


    // $ANTLR start "rule__Network__Group_3_1_5__1__Impl"
    // InternalDockerCompose.g:5447:1: rule__Network__Group_3_1_5__1__Impl : ( ( rule__Network__Network_nameAssignment_3_1_5_1 ) ) ;
    public final void rule__Network__Group_3_1_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5451:1: ( ( ( rule__Network__Network_nameAssignment_3_1_5_1 ) ) )
            // InternalDockerCompose.g:5452:1: ( ( rule__Network__Network_nameAssignment_3_1_5_1 ) )
            {
            // InternalDockerCompose.g:5452:1: ( ( rule__Network__Network_nameAssignment_3_1_5_1 ) )
            // InternalDockerCompose.g:5453:2: ( rule__Network__Network_nameAssignment_3_1_5_1 )
            {
             before(grammarAccess.getNetworkAccess().getNetwork_nameAssignment_3_1_5_1()); 
            // InternalDockerCompose.g:5454:2: ( rule__Network__Network_nameAssignment_3_1_5_1 )
            // InternalDockerCompose.g:5454:3: rule__Network__Network_nameAssignment_3_1_5_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__Network_nameAssignment_3_1_5_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getNetwork_nameAssignment_3_1_5_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_5__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_6__0"
    // InternalDockerCompose.g:5463:1: rule__Network__Group_3_1_6__0 : rule__Network__Group_3_1_6__0__Impl rule__Network__Group_3_1_6__1 ;
    public final void rule__Network__Group_3_1_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5467:1: ( rule__Network__Group_3_1_6__0__Impl rule__Network__Group_3_1_6__1 )
            // InternalDockerCompose.g:5468:2: rule__Network__Group_3_1_6__0__Impl rule__Network__Group_3_1_6__1
            {
            pushFollow(FOLLOW_5);
            rule__Network__Group_3_1_6__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_6__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_6__0"


    // $ANTLR start "rule__Network__Group_3_1_6__0__Impl"
    // InternalDockerCompose.g:5475:1: rule__Network__Group_3_1_6__0__Impl : ( 'labels:' ) ;
    public final void rule__Network__Group_3_1_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5479:1: ( ( 'labels:' ) )
            // InternalDockerCompose.g:5480:1: ( 'labels:' )
            {
            // InternalDockerCompose.g:5480:1: ( 'labels:' )
            // InternalDockerCompose.g:5481:2: 'labels:'
            {
             before(grammarAccess.getNetworkAccess().getLabelsKeyword_3_1_6_0()); 
            match(input,78,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getLabelsKeyword_3_1_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_6__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_6__1"
    // InternalDockerCompose.g:5490:1: rule__Network__Group_3_1_6__1 : rule__Network__Group_3_1_6__1__Impl ;
    public final void rule__Network__Group_3_1_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5494:1: ( rule__Network__Group_3_1_6__1__Impl )
            // InternalDockerCompose.g:5495:2: rule__Network__Group_3_1_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_6__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_6__1"


    // $ANTLR start "rule__Network__Group_3_1_6__1__Impl"
    // InternalDockerCompose.g:5501:1: rule__Network__Group_3_1_6__1__Impl : ( ( ( rule__Network__LabelsAssignment_3_1_6_1 ) ) ( ( rule__Network__LabelsAssignment_3_1_6_1 )* ) ) ;
    public final void rule__Network__Group_3_1_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5505:1: ( ( ( ( rule__Network__LabelsAssignment_3_1_6_1 ) ) ( ( rule__Network__LabelsAssignment_3_1_6_1 )* ) ) )
            // InternalDockerCompose.g:5506:1: ( ( ( rule__Network__LabelsAssignment_3_1_6_1 ) ) ( ( rule__Network__LabelsAssignment_3_1_6_1 )* ) )
            {
            // InternalDockerCompose.g:5506:1: ( ( ( rule__Network__LabelsAssignment_3_1_6_1 ) ) ( ( rule__Network__LabelsAssignment_3_1_6_1 )* ) )
            // InternalDockerCompose.g:5507:2: ( ( rule__Network__LabelsAssignment_3_1_6_1 ) ) ( ( rule__Network__LabelsAssignment_3_1_6_1 )* )
            {
            // InternalDockerCompose.g:5507:2: ( ( rule__Network__LabelsAssignment_3_1_6_1 ) )
            // InternalDockerCompose.g:5508:3: ( rule__Network__LabelsAssignment_3_1_6_1 )
            {
             before(grammarAccess.getNetworkAccess().getLabelsAssignment_3_1_6_1()); 
            // InternalDockerCompose.g:5509:3: ( rule__Network__LabelsAssignment_3_1_6_1 )
            // InternalDockerCompose.g:5509:4: rule__Network__LabelsAssignment_3_1_6_1
            {
            pushFollow(FOLLOW_6);
            rule__Network__LabelsAssignment_3_1_6_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getLabelsAssignment_3_1_6_1()); 

            }

            // InternalDockerCompose.g:5512:2: ( ( rule__Network__LabelsAssignment_3_1_6_1 )* )
            // InternalDockerCompose.g:5513:3: ( rule__Network__LabelsAssignment_3_1_6_1 )*
            {
             before(grammarAccess.getNetworkAccess().getLabelsAssignment_3_1_6_1()); 
            // InternalDockerCompose.g:5514:3: ( rule__Network__LabelsAssignment_3_1_6_1 )*
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==RULE_STRING) ) {
                    int LA32_2 = input.LA(2);

                    if ( (LA32_2==40) ) {
                        int LA32_4 = input.LA(3);

                        if ( (LA32_4==RULE_STRING) ) {
                            int LA32_5 = input.LA(4);

                            if ( (LA32_5==EOF||(LA32_5>=RULE_STRING && LA32_5<=RULE_ID)||(LA32_5>=34 && LA32_5<=39)||(LA32_5>=72 && LA32_5<=80)) ) {
                                alt32=1;
                            }


                        }
                        else if ( (LA32_4==RULE_ID) ) {
                            int LA32_6 = input.LA(4);

                            if ( (LA32_6==EOF||(LA32_6>=RULE_STRING && LA32_6<=RULE_ID)||(LA32_6>=34 && LA32_6<=39)||(LA32_6>=72 && LA32_6<=80)) ) {
                                alt32=1;
                            }


                        }


                    }


                }
                else if ( (LA32_0==RULE_ID) ) {
                    int LA32_3 = input.LA(2);

                    if ( (LA32_3==40) ) {
                        int LA32_4 = input.LA(3);

                        if ( (LA32_4==RULE_STRING) ) {
                            int LA32_5 = input.LA(4);

                            if ( (LA32_5==EOF||(LA32_5>=RULE_STRING && LA32_5<=RULE_ID)||(LA32_5>=34 && LA32_5<=39)||(LA32_5>=72 && LA32_5<=80)) ) {
                                alt32=1;
                            }


                        }
                        else if ( (LA32_4==RULE_ID) ) {
                            int LA32_6 = input.LA(4);

                            if ( (LA32_6==EOF||(LA32_6>=RULE_STRING && LA32_6<=RULE_ID)||(LA32_6>=34 && LA32_6<=39)||(LA32_6>=72 && LA32_6<=80)) ) {
                                alt32=1;
                            }


                        }


                    }


                }


                switch (alt32) {
            	case 1 :
            	    // InternalDockerCompose.g:5514:4: rule__Network__LabelsAssignment_3_1_6_1
            	    {
            	    pushFollow(FOLLOW_6);
            	    rule__Network__LabelsAssignment_3_1_6_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);

             after(grammarAccess.getNetworkAccess().getLabelsAssignment_3_1_6_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_6__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_7__0"
    // InternalDockerCompose.g:5524:1: rule__Network__Group_3_1_7__0 : rule__Network__Group_3_1_7__0__Impl rule__Network__Group_3_1_7__1 ;
    public final void rule__Network__Group_3_1_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5528:1: ( rule__Network__Group_3_1_7__0__Impl rule__Network__Group_3_1_7__1 )
            // InternalDockerCompose.g:5529:2: rule__Network__Group_3_1_7__0__Impl rule__Network__Group_3_1_7__1
            {
            pushFollow(FOLLOW_5);
            rule__Network__Group_3_1_7__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_7__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_7__0"


    // $ANTLR start "rule__Network__Group_3_1_7__0__Impl"
    // InternalDockerCompose.g:5536:1: rule__Network__Group_3_1_7__0__Impl : ( 'driver_opts:' ) ;
    public final void rule__Network__Group_3_1_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5540:1: ( ( 'driver_opts:' ) )
            // InternalDockerCompose.g:5541:1: ( 'driver_opts:' )
            {
            // InternalDockerCompose.g:5541:1: ( 'driver_opts:' )
            // InternalDockerCompose.g:5542:2: 'driver_opts:'
            {
             before(grammarAccess.getNetworkAccess().getDriver_optsKeyword_3_1_7_0()); 
            match(input,79,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getDriver_optsKeyword_3_1_7_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_7__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_7__1"
    // InternalDockerCompose.g:5551:1: rule__Network__Group_3_1_7__1 : rule__Network__Group_3_1_7__1__Impl ;
    public final void rule__Network__Group_3_1_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5555:1: ( rule__Network__Group_3_1_7__1__Impl )
            // InternalDockerCompose.g:5556:2: rule__Network__Group_3_1_7__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_7__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_7__1"


    // $ANTLR start "rule__Network__Group_3_1_7__1__Impl"
    // InternalDockerCompose.g:5562:1: rule__Network__Group_3_1_7__1__Impl : ( ( ( rule__Network__Driver_optsAssignment_3_1_7_1 ) ) ( ( rule__Network__Driver_optsAssignment_3_1_7_1 )* ) ) ;
    public final void rule__Network__Group_3_1_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5566:1: ( ( ( ( rule__Network__Driver_optsAssignment_3_1_7_1 ) ) ( ( rule__Network__Driver_optsAssignment_3_1_7_1 )* ) ) )
            // InternalDockerCompose.g:5567:1: ( ( ( rule__Network__Driver_optsAssignment_3_1_7_1 ) ) ( ( rule__Network__Driver_optsAssignment_3_1_7_1 )* ) )
            {
            // InternalDockerCompose.g:5567:1: ( ( ( rule__Network__Driver_optsAssignment_3_1_7_1 ) ) ( ( rule__Network__Driver_optsAssignment_3_1_7_1 )* ) )
            // InternalDockerCompose.g:5568:2: ( ( rule__Network__Driver_optsAssignment_3_1_7_1 ) ) ( ( rule__Network__Driver_optsAssignment_3_1_7_1 )* )
            {
            // InternalDockerCompose.g:5568:2: ( ( rule__Network__Driver_optsAssignment_3_1_7_1 ) )
            // InternalDockerCompose.g:5569:3: ( rule__Network__Driver_optsAssignment_3_1_7_1 )
            {
             before(grammarAccess.getNetworkAccess().getDriver_optsAssignment_3_1_7_1()); 
            // InternalDockerCompose.g:5570:3: ( rule__Network__Driver_optsAssignment_3_1_7_1 )
            // InternalDockerCompose.g:5570:4: rule__Network__Driver_optsAssignment_3_1_7_1
            {
            pushFollow(FOLLOW_6);
            rule__Network__Driver_optsAssignment_3_1_7_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getDriver_optsAssignment_3_1_7_1()); 

            }

            // InternalDockerCompose.g:5573:2: ( ( rule__Network__Driver_optsAssignment_3_1_7_1 )* )
            // InternalDockerCompose.g:5574:3: ( rule__Network__Driver_optsAssignment_3_1_7_1 )*
            {
             before(grammarAccess.getNetworkAccess().getDriver_optsAssignment_3_1_7_1()); 
            // InternalDockerCompose.g:5575:3: ( rule__Network__Driver_optsAssignment_3_1_7_1 )*
            loop33:
            do {
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( (LA33_0==RULE_STRING) ) {
                    int LA33_2 = input.LA(2);

                    if ( (LA33_2==40) ) {
                        int LA33_4 = input.LA(3);

                        if ( (LA33_4==RULE_STRING) ) {
                            int LA33_5 = input.LA(4);

                            if ( (LA33_5==EOF||(LA33_5>=RULE_STRING && LA33_5<=RULE_ID)||(LA33_5>=34 && LA33_5<=39)||(LA33_5>=72 && LA33_5<=80)) ) {
                                alt33=1;
                            }


                        }
                        else if ( (LA33_4==RULE_ID) ) {
                            int LA33_6 = input.LA(4);

                            if ( (LA33_6==EOF||(LA33_6>=RULE_STRING && LA33_6<=RULE_ID)||(LA33_6>=34 && LA33_6<=39)||(LA33_6>=72 && LA33_6<=80)) ) {
                                alt33=1;
                            }


                        }


                    }


                }
                else if ( (LA33_0==RULE_ID) ) {
                    int LA33_3 = input.LA(2);

                    if ( (LA33_3==40) ) {
                        int LA33_4 = input.LA(3);

                        if ( (LA33_4==RULE_STRING) ) {
                            int LA33_5 = input.LA(4);

                            if ( (LA33_5==EOF||(LA33_5>=RULE_STRING && LA33_5<=RULE_ID)||(LA33_5>=34 && LA33_5<=39)||(LA33_5>=72 && LA33_5<=80)) ) {
                                alt33=1;
                            }


                        }
                        else if ( (LA33_4==RULE_ID) ) {
                            int LA33_6 = input.LA(4);

                            if ( (LA33_6==EOF||(LA33_6>=RULE_STRING && LA33_6<=RULE_ID)||(LA33_6>=34 && LA33_6<=39)||(LA33_6>=72 && LA33_6<=80)) ) {
                                alt33=1;
                            }


                        }


                    }


                }


                switch (alt33) {
            	case 1 :
            	    // InternalDockerCompose.g:5575:4: rule__Network__Driver_optsAssignment_3_1_7_1
            	    {
            	    pushFollow(FOLLOW_6);
            	    rule__Network__Driver_optsAssignment_3_1_7_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop33;
                }
            } while (true);

             after(grammarAccess.getNetworkAccess().getDriver_optsAssignment_3_1_7_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_7__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_8__0"
    // InternalDockerCompose.g:5585:1: rule__Network__Group_3_1_8__0 : rule__Network__Group_3_1_8__0__Impl rule__Network__Group_3_1_8__1 ;
    public final void rule__Network__Group_3_1_8__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5589:1: ( rule__Network__Group_3_1_8__0__Impl rule__Network__Group_3_1_8__1 )
            // InternalDockerCompose.g:5590:2: rule__Network__Group_3_1_8__0__Impl rule__Network__Group_3_1_8__1
            {
            pushFollow(FOLLOW_33);
            rule__Network__Group_3_1_8__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_8__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_8__0"


    // $ANTLR start "rule__Network__Group_3_1_8__0__Impl"
    // InternalDockerCompose.g:5597:1: rule__Network__Group_3_1_8__0__Impl : ( 'ipam:' ) ;
    public final void rule__Network__Group_3_1_8__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5601:1: ( ( 'ipam:' ) )
            // InternalDockerCompose.g:5602:1: ( 'ipam:' )
            {
            // InternalDockerCompose.g:5602:1: ( 'ipam:' )
            // InternalDockerCompose.g:5603:2: 'ipam:'
            {
             before(grammarAccess.getNetworkAccess().getIpamKeyword_3_1_8_0()); 
            match(input,80,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getIpamKeyword_3_1_8_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_8__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_8__1"
    // InternalDockerCompose.g:5612:1: rule__Network__Group_3_1_8__1 : rule__Network__Group_3_1_8__1__Impl ;
    public final void rule__Network__Group_3_1_8__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5616:1: ( rule__Network__Group_3_1_8__1__Impl )
            // InternalDockerCompose.g:5617:2: rule__Network__Group_3_1_8__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_8__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_8__1"


    // $ANTLR start "rule__Network__Group_3_1_8__1__Impl"
    // InternalDockerCompose.g:5623:1: rule__Network__Group_3_1_8__1__Impl : ( ( rule__Network__IpamAssignment_3_1_8_1 ) ) ;
    public final void rule__Network__Group_3_1_8__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5627:1: ( ( ( rule__Network__IpamAssignment_3_1_8_1 ) ) )
            // InternalDockerCompose.g:5628:1: ( ( rule__Network__IpamAssignment_3_1_8_1 ) )
            {
            // InternalDockerCompose.g:5628:1: ( ( rule__Network__IpamAssignment_3_1_8_1 ) )
            // InternalDockerCompose.g:5629:2: ( rule__Network__IpamAssignment_3_1_8_1 )
            {
             before(grammarAccess.getNetworkAccess().getIpamAssignment_3_1_8_1()); 
            // InternalDockerCompose.g:5630:2: ( rule__Network__IpamAssignment_3_1_8_1 )
            // InternalDockerCompose.g:5630:3: rule__Network__IpamAssignment_3_1_8_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__IpamAssignment_3_1_8_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getIpamAssignment_3_1_8_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_8__1__Impl"


    // $ANTLR start "rule__Volume__Group__0"
    // InternalDockerCompose.g:5639:1: rule__Volume__Group__0 : rule__Volume__Group__0__Impl rule__Volume__Group__1 ;
    public final void rule__Volume__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5643:1: ( rule__Volume__Group__0__Impl rule__Volume__Group__1 )
            // InternalDockerCompose.g:5644:2: rule__Volume__Group__0__Impl rule__Volume__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__Volume__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__0"


    // $ANTLR start "rule__Volume__Group__0__Impl"
    // InternalDockerCompose.g:5651:1: rule__Volume__Group__0__Impl : ( () ) ;
    public final void rule__Volume__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5655:1: ( ( () ) )
            // InternalDockerCompose.g:5656:1: ( () )
            {
            // InternalDockerCompose.g:5656:1: ( () )
            // InternalDockerCompose.g:5657:2: ()
            {
             before(grammarAccess.getVolumeAccess().getVolumeAction_0()); 
            // InternalDockerCompose.g:5658:2: ()
            // InternalDockerCompose.g:5658:3: 
            {
            }

             after(grammarAccess.getVolumeAccess().getVolumeAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__0__Impl"


    // $ANTLR start "rule__Volume__Group__1"
    // InternalDockerCompose.g:5666:1: rule__Volume__Group__1 : rule__Volume__Group__1__Impl rule__Volume__Group__2 ;
    public final void rule__Volume__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5670:1: ( rule__Volume__Group__1__Impl rule__Volume__Group__2 )
            // InternalDockerCompose.g:5671:2: rule__Volume__Group__1__Impl rule__Volume__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__Volume__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__1"


    // $ANTLR start "rule__Volume__Group__1__Impl"
    // InternalDockerCompose.g:5678:1: rule__Volume__Group__1__Impl : ( ( rule__Volume__NameAssignment_1 ) ) ;
    public final void rule__Volume__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5682:1: ( ( ( rule__Volume__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:5683:1: ( ( rule__Volume__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:5683:1: ( ( rule__Volume__NameAssignment_1 ) )
            // InternalDockerCompose.g:5684:2: ( rule__Volume__NameAssignment_1 )
            {
             before(grammarAccess.getVolumeAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:5685:2: ( rule__Volume__NameAssignment_1 )
            // InternalDockerCompose.g:5685:3: rule__Volume__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Volume__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__1__Impl"


    // $ANTLR start "rule__Volume__Group__2"
    // InternalDockerCompose.g:5693:1: rule__Volume__Group__2 : rule__Volume__Group__2__Impl rule__Volume__Group__3 ;
    public final void rule__Volume__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5697:1: ( rule__Volume__Group__2__Impl rule__Volume__Group__3 )
            // InternalDockerCompose.g:5698:2: rule__Volume__Group__2__Impl rule__Volume__Group__3
            {
            pushFollow(FOLLOW_34);
            rule__Volume__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__2"


    // $ANTLR start "rule__Volume__Group__2__Impl"
    // InternalDockerCompose.g:5705:1: rule__Volume__Group__2__Impl : ( ':' ) ;
    public final void rule__Volume__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5709:1: ( ( ':' ) )
            // InternalDockerCompose.g:5710:1: ( ':' )
            {
            // InternalDockerCompose.g:5710:1: ( ':' )
            // InternalDockerCompose.g:5711:2: ':'
            {
             before(grammarAccess.getVolumeAccess().getColonKeyword_2()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getVolumeAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__2__Impl"


    // $ANTLR start "rule__Volume__Group__3"
    // InternalDockerCompose.g:5720:1: rule__Volume__Group__3 : rule__Volume__Group__3__Impl ;
    public final void rule__Volume__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5724:1: ( rule__Volume__Group__3__Impl )
            // InternalDockerCompose.g:5725:2: rule__Volume__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__3"


    // $ANTLR start "rule__Volume__Group__3__Impl"
    // InternalDockerCompose.g:5731:1: rule__Volume__Group__3__Impl : ( ( rule__Volume__UnorderedGroup_3 ) ) ;
    public final void rule__Volume__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5735:1: ( ( ( rule__Volume__UnorderedGroup_3 ) ) )
            // InternalDockerCompose.g:5736:1: ( ( rule__Volume__UnorderedGroup_3 ) )
            {
            // InternalDockerCompose.g:5736:1: ( ( rule__Volume__UnorderedGroup_3 ) )
            // InternalDockerCompose.g:5737:2: ( rule__Volume__UnorderedGroup_3 )
            {
             before(grammarAccess.getVolumeAccess().getUnorderedGroup_3()); 
            // InternalDockerCompose.g:5738:2: ( rule__Volume__UnorderedGroup_3 )
            // InternalDockerCompose.g:5738:3: rule__Volume__UnorderedGroup_3
            {
            pushFollow(FOLLOW_2);
            rule__Volume__UnorderedGroup_3();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getUnorderedGroup_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__3__Impl"


    // $ANTLR start "rule__Volume__Group_3_0__0"
    // InternalDockerCompose.g:5747:1: rule__Volume__Group_3_0__0 : rule__Volume__Group_3_0__0__Impl rule__Volume__Group_3_0__1 ;
    public final void rule__Volume__Group_3_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5751:1: ( rule__Volume__Group_3_0__0__Impl rule__Volume__Group_3_0__1 )
            // InternalDockerCompose.g:5752:2: rule__Volume__Group_3_0__0__Impl rule__Volume__Group_3_0__1
            {
            pushFollow(FOLLOW_12);
            rule__Volume__Group_3_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_0__0"


    // $ANTLR start "rule__Volume__Group_3_0__0__Impl"
    // InternalDockerCompose.g:5759:1: rule__Volume__Group_3_0__0__Impl : ( 'external:' ) ;
    public final void rule__Volume__Group_3_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5763:1: ( ( 'external:' ) )
            // InternalDockerCompose.g:5764:1: ( 'external:' )
            {
            // InternalDockerCompose.g:5764:1: ( 'external:' )
            // InternalDockerCompose.g:5765:2: 'external:'
            {
             before(grammarAccess.getVolumeAccess().getExternalKeyword_3_0_0()); 
            match(input,76,FOLLOW_2); 
             after(grammarAccess.getVolumeAccess().getExternalKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_0__0__Impl"


    // $ANTLR start "rule__Volume__Group_3_0__1"
    // InternalDockerCompose.g:5774:1: rule__Volume__Group_3_0__1 : rule__Volume__Group_3_0__1__Impl ;
    public final void rule__Volume__Group_3_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5778:1: ( rule__Volume__Group_3_0__1__Impl )
            // InternalDockerCompose.g:5779:2: rule__Volume__Group_3_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_0__1"


    // $ANTLR start "rule__Volume__Group_3_0__1__Impl"
    // InternalDockerCompose.g:5785:1: rule__Volume__Group_3_0__1__Impl : ( ( rule__Volume__ExternalAssignment_3_0_1 ) ) ;
    public final void rule__Volume__Group_3_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5789:1: ( ( ( rule__Volume__ExternalAssignment_3_0_1 ) ) )
            // InternalDockerCompose.g:5790:1: ( ( rule__Volume__ExternalAssignment_3_0_1 ) )
            {
            // InternalDockerCompose.g:5790:1: ( ( rule__Volume__ExternalAssignment_3_0_1 ) )
            // InternalDockerCompose.g:5791:2: ( rule__Volume__ExternalAssignment_3_0_1 )
            {
             before(grammarAccess.getVolumeAccess().getExternalAssignment_3_0_1()); 
            // InternalDockerCompose.g:5792:2: ( rule__Volume__ExternalAssignment_3_0_1 )
            // InternalDockerCompose.g:5792:3: rule__Volume__ExternalAssignment_3_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Volume__ExternalAssignment_3_0_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getExternalAssignment_3_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_0__1__Impl"


    // $ANTLR start "rule__Volume__Group_3_1__0"
    // InternalDockerCompose.g:5801:1: rule__Volume__Group_3_1__0 : rule__Volume__Group_3_1__0__Impl rule__Volume__Group_3_1__1 ;
    public final void rule__Volume__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5805:1: ( rule__Volume__Group_3_1__0__Impl rule__Volume__Group_3_1__1 )
            // InternalDockerCompose.g:5806:2: rule__Volume__Group_3_1__0__Impl rule__Volume__Group_3_1__1
            {
            pushFollow(FOLLOW_5);
            rule__Volume__Group_3_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_1__0"


    // $ANTLR start "rule__Volume__Group_3_1__0__Impl"
    // InternalDockerCompose.g:5813:1: rule__Volume__Group_3_1__0__Impl : ( 'driver:' ) ;
    public final void rule__Volume__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5817:1: ( ( 'driver:' ) )
            // InternalDockerCompose.g:5818:1: ( 'driver:' )
            {
            // InternalDockerCompose.g:5818:1: ( 'driver:' )
            // InternalDockerCompose.g:5819:2: 'driver:'
            {
             before(grammarAccess.getVolumeAccess().getDriverKeyword_3_1_0()); 
            match(input,72,FOLLOW_2); 
             after(grammarAccess.getVolumeAccess().getDriverKeyword_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_1__0__Impl"


    // $ANTLR start "rule__Volume__Group_3_1__1"
    // InternalDockerCompose.g:5828:1: rule__Volume__Group_3_1__1 : rule__Volume__Group_3_1__1__Impl ;
    public final void rule__Volume__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5832:1: ( rule__Volume__Group_3_1__1__Impl )
            // InternalDockerCompose.g:5833:2: rule__Volume__Group_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_1__1"


    // $ANTLR start "rule__Volume__Group_3_1__1__Impl"
    // InternalDockerCompose.g:5839:1: rule__Volume__Group_3_1__1__Impl : ( ( rule__Volume__DriverAssignment_3_1_1 ) ) ;
    public final void rule__Volume__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5843:1: ( ( ( rule__Volume__DriverAssignment_3_1_1 ) ) )
            // InternalDockerCompose.g:5844:1: ( ( rule__Volume__DriverAssignment_3_1_1 ) )
            {
            // InternalDockerCompose.g:5844:1: ( ( rule__Volume__DriverAssignment_3_1_1 ) )
            // InternalDockerCompose.g:5845:2: ( rule__Volume__DriverAssignment_3_1_1 )
            {
             before(grammarAccess.getVolumeAccess().getDriverAssignment_3_1_1()); 
            // InternalDockerCompose.g:5846:2: ( rule__Volume__DriverAssignment_3_1_1 )
            // InternalDockerCompose.g:5846:3: rule__Volume__DriverAssignment_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Volume__DriverAssignment_3_1_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getDriverAssignment_3_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_1__1__Impl"


    // $ANTLR start "rule__Volume__Group_3_2__0"
    // InternalDockerCompose.g:5855:1: rule__Volume__Group_3_2__0 : rule__Volume__Group_3_2__0__Impl rule__Volume__Group_3_2__1 ;
    public final void rule__Volume__Group_3_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5859:1: ( rule__Volume__Group_3_2__0__Impl rule__Volume__Group_3_2__1 )
            // InternalDockerCompose.g:5860:2: rule__Volume__Group_3_2__0__Impl rule__Volume__Group_3_2__1
            {
            pushFollow(FOLLOW_5);
            rule__Volume__Group_3_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_2__0"


    // $ANTLR start "rule__Volume__Group_3_2__0__Impl"
    // InternalDockerCompose.g:5867:1: rule__Volume__Group_3_2__0__Impl : ( 'name:' ) ;
    public final void rule__Volume__Group_3_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5871:1: ( ( 'name:' ) )
            // InternalDockerCompose.g:5872:1: ( 'name:' )
            {
            // InternalDockerCompose.g:5872:1: ( 'name:' )
            // InternalDockerCompose.g:5873:2: 'name:'
            {
             before(grammarAccess.getVolumeAccess().getNameKeyword_3_2_0()); 
            match(input,77,FOLLOW_2); 
             after(grammarAccess.getVolumeAccess().getNameKeyword_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_2__0__Impl"


    // $ANTLR start "rule__Volume__Group_3_2__1"
    // InternalDockerCompose.g:5882:1: rule__Volume__Group_3_2__1 : rule__Volume__Group_3_2__1__Impl ;
    public final void rule__Volume__Group_3_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5886:1: ( rule__Volume__Group_3_2__1__Impl )
            // InternalDockerCompose.g:5887:2: rule__Volume__Group_3_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_2__1"


    // $ANTLR start "rule__Volume__Group_3_2__1__Impl"
    // InternalDockerCompose.g:5893:1: rule__Volume__Group_3_2__1__Impl : ( ( rule__Volume__Volume_nameAssignment_3_2_1 ) ) ;
    public final void rule__Volume__Group_3_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5897:1: ( ( ( rule__Volume__Volume_nameAssignment_3_2_1 ) ) )
            // InternalDockerCompose.g:5898:1: ( ( rule__Volume__Volume_nameAssignment_3_2_1 ) )
            {
            // InternalDockerCompose.g:5898:1: ( ( rule__Volume__Volume_nameAssignment_3_2_1 ) )
            // InternalDockerCompose.g:5899:2: ( rule__Volume__Volume_nameAssignment_3_2_1 )
            {
             before(grammarAccess.getVolumeAccess().getVolume_nameAssignment_3_2_1()); 
            // InternalDockerCompose.g:5900:2: ( rule__Volume__Volume_nameAssignment_3_2_1 )
            // InternalDockerCompose.g:5900:3: rule__Volume__Volume_nameAssignment_3_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Volume_nameAssignment_3_2_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getVolume_nameAssignment_3_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_2__1__Impl"


    // $ANTLR start "rule__Volume__Group_3_3__0"
    // InternalDockerCompose.g:5909:1: rule__Volume__Group_3_3__0 : rule__Volume__Group_3_3__0__Impl rule__Volume__Group_3_3__1 ;
    public final void rule__Volume__Group_3_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5913:1: ( rule__Volume__Group_3_3__0__Impl rule__Volume__Group_3_3__1 )
            // InternalDockerCompose.g:5914:2: rule__Volume__Group_3_3__0__Impl rule__Volume__Group_3_3__1
            {
            pushFollow(FOLLOW_5);
            rule__Volume__Group_3_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_3__0"


    // $ANTLR start "rule__Volume__Group_3_3__0__Impl"
    // InternalDockerCompose.g:5921:1: rule__Volume__Group_3_3__0__Impl : ( 'labels:' ) ;
    public final void rule__Volume__Group_3_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5925:1: ( ( 'labels:' ) )
            // InternalDockerCompose.g:5926:1: ( 'labels:' )
            {
            // InternalDockerCompose.g:5926:1: ( 'labels:' )
            // InternalDockerCompose.g:5927:2: 'labels:'
            {
             before(grammarAccess.getVolumeAccess().getLabelsKeyword_3_3_0()); 
            match(input,78,FOLLOW_2); 
             after(grammarAccess.getVolumeAccess().getLabelsKeyword_3_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_3__0__Impl"


    // $ANTLR start "rule__Volume__Group_3_3__1"
    // InternalDockerCompose.g:5936:1: rule__Volume__Group_3_3__1 : rule__Volume__Group_3_3__1__Impl ;
    public final void rule__Volume__Group_3_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5940:1: ( rule__Volume__Group_3_3__1__Impl )
            // InternalDockerCompose.g:5941:2: rule__Volume__Group_3_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_3__1"


    // $ANTLR start "rule__Volume__Group_3_3__1__Impl"
    // InternalDockerCompose.g:5947:1: rule__Volume__Group_3_3__1__Impl : ( ( ( rule__Volume__LabelsAssignment_3_3_1 ) ) ( ( rule__Volume__LabelsAssignment_3_3_1 )* ) ) ;
    public final void rule__Volume__Group_3_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5951:1: ( ( ( ( rule__Volume__LabelsAssignment_3_3_1 ) ) ( ( rule__Volume__LabelsAssignment_3_3_1 )* ) ) )
            // InternalDockerCompose.g:5952:1: ( ( ( rule__Volume__LabelsAssignment_3_3_1 ) ) ( ( rule__Volume__LabelsAssignment_3_3_1 )* ) )
            {
            // InternalDockerCompose.g:5952:1: ( ( ( rule__Volume__LabelsAssignment_3_3_1 ) ) ( ( rule__Volume__LabelsAssignment_3_3_1 )* ) )
            // InternalDockerCompose.g:5953:2: ( ( rule__Volume__LabelsAssignment_3_3_1 ) ) ( ( rule__Volume__LabelsAssignment_3_3_1 )* )
            {
            // InternalDockerCompose.g:5953:2: ( ( rule__Volume__LabelsAssignment_3_3_1 ) )
            // InternalDockerCompose.g:5954:3: ( rule__Volume__LabelsAssignment_3_3_1 )
            {
             before(grammarAccess.getVolumeAccess().getLabelsAssignment_3_3_1()); 
            // InternalDockerCompose.g:5955:3: ( rule__Volume__LabelsAssignment_3_3_1 )
            // InternalDockerCompose.g:5955:4: rule__Volume__LabelsAssignment_3_3_1
            {
            pushFollow(FOLLOW_6);
            rule__Volume__LabelsAssignment_3_3_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getLabelsAssignment_3_3_1()); 

            }

            // InternalDockerCompose.g:5958:2: ( ( rule__Volume__LabelsAssignment_3_3_1 )* )
            // InternalDockerCompose.g:5959:3: ( rule__Volume__LabelsAssignment_3_3_1 )*
            {
             before(grammarAccess.getVolumeAccess().getLabelsAssignment_3_3_1()); 
            // InternalDockerCompose.g:5960:3: ( rule__Volume__LabelsAssignment_3_3_1 )*
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==RULE_STRING) ) {
                    int LA34_2 = input.LA(2);

                    if ( (LA34_2==40) ) {
                        int LA34_4 = input.LA(3);

                        if ( (LA34_4==RULE_STRING) ) {
                            int LA34_5 = input.LA(4);

                            if ( (LA34_5==EOF||(LA34_5>=RULE_STRING && LA34_5<=RULE_ID)||(LA34_5>=34 && LA34_5<=39)||LA34_5==72||(LA34_5>=76 && LA34_5<=79)) ) {
                                alt34=1;
                            }


                        }
                        else if ( (LA34_4==RULE_ID) ) {
                            int LA34_6 = input.LA(4);

                            if ( (LA34_6==EOF||(LA34_6>=RULE_STRING && LA34_6<=RULE_ID)||(LA34_6>=34 && LA34_6<=39)||LA34_6==72||(LA34_6>=76 && LA34_6<=79)) ) {
                                alt34=1;
                            }


                        }


                    }


                }
                else if ( (LA34_0==RULE_ID) ) {
                    int LA34_3 = input.LA(2);

                    if ( (LA34_3==40) ) {
                        int LA34_4 = input.LA(3);

                        if ( (LA34_4==RULE_STRING) ) {
                            int LA34_5 = input.LA(4);

                            if ( (LA34_5==EOF||(LA34_5>=RULE_STRING && LA34_5<=RULE_ID)||(LA34_5>=34 && LA34_5<=39)||LA34_5==72||(LA34_5>=76 && LA34_5<=79)) ) {
                                alt34=1;
                            }


                        }
                        else if ( (LA34_4==RULE_ID) ) {
                            int LA34_6 = input.LA(4);

                            if ( (LA34_6==EOF||(LA34_6>=RULE_STRING && LA34_6<=RULE_ID)||(LA34_6>=34 && LA34_6<=39)||LA34_6==72||(LA34_6>=76 && LA34_6<=79)) ) {
                                alt34=1;
                            }


                        }


                    }


                }


                switch (alt34) {
            	case 1 :
            	    // InternalDockerCompose.g:5960:4: rule__Volume__LabelsAssignment_3_3_1
            	    {
            	    pushFollow(FOLLOW_6);
            	    rule__Volume__LabelsAssignment_3_3_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);

             after(grammarAccess.getVolumeAccess().getLabelsAssignment_3_3_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_3__1__Impl"


    // $ANTLR start "rule__Volume__Group_3_4__0"
    // InternalDockerCompose.g:5970:1: rule__Volume__Group_3_4__0 : rule__Volume__Group_3_4__0__Impl rule__Volume__Group_3_4__1 ;
    public final void rule__Volume__Group_3_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5974:1: ( rule__Volume__Group_3_4__0__Impl rule__Volume__Group_3_4__1 )
            // InternalDockerCompose.g:5975:2: rule__Volume__Group_3_4__0__Impl rule__Volume__Group_3_4__1
            {
            pushFollow(FOLLOW_5);
            rule__Volume__Group_3_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_4__0"


    // $ANTLR start "rule__Volume__Group_3_4__0__Impl"
    // InternalDockerCompose.g:5982:1: rule__Volume__Group_3_4__0__Impl : ( 'driver_opts:' ) ;
    public final void rule__Volume__Group_3_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5986:1: ( ( 'driver_opts:' ) )
            // InternalDockerCompose.g:5987:1: ( 'driver_opts:' )
            {
            // InternalDockerCompose.g:5987:1: ( 'driver_opts:' )
            // InternalDockerCompose.g:5988:2: 'driver_opts:'
            {
             before(grammarAccess.getVolumeAccess().getDriver_optsKeyword_3_4_0()); 
            match(input,79,FOLLOW_2); 
             after(grammarAccess.getVolumeAccess().getDriver_optsKeyword_3_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_4__0__Impl"


    // $ANTLR start "rule__Volume__Group_3_4__1"
    // InternalDockerCompose.g:5997:1: rule__Volume__Group_3_4__1 : rule__Volume__Group_3_4__1__Impl ;
    public final void rule__Volume__Group_3_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6001:1: ( rule__Volume__Group_3_4__1__Impl )
            // InternalDockerCompose.g:6002:2: rule__Volume__Group_3_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_4__1"


    // $ANTLR start "rule__Volume__Group_3_4__1__Impl"
    // InternalDockerCompose.g:6008:1: rule__Volume__Group_3_4__1__Impl : ( ( ( rule__Volume__Driver_optsAssignment_3_4_1 ) ) ( ( rule__Volume__Driver_optsAssignment_3_4_1 )* ) ) ;
    public final void rule__Volume__Group_3_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6012:1: ( ( ( ( rule__Volume__Driver_optsAssignment_3_4_1 ) ) ( ( rule__Volume__Driver_optsAssignment_3_4_1 )* ) ) )
            // InternalDockerCompose.g:6013:1: ( ( ( rule__Volume__Driver_optsAssignment_3_4_1 ) ) ( ( rule__Volume__Driver_optsAssignment_3_4_1 )* ) )
            {
            // InternalDockerCompose.g:6013:1: ( ( ( rule__Volume__Driver_optsAssignment_3_4_1 ) ) ( ( rule__Volume__Driver_optsAssignment_3_4_1 )* ) )
            // InternalDockerCompose.g:6014:2: ( ( rule__Volume__Driver_optsAssignment_3_4_1 ) ) ( ( rule__Volume__Driver_optsAssignment_3_4_1 )* )
            {
            // InternalDockerCompose.g:6014:2: ( ( rule__Volume__Driver_optsAssignment_3_4_1 ) )
            // InternalDockerCompose.g:6015:3: ( rule__Volume__Driver_optsAssignment_3_4_1 )
            {
             before(grammarAccess.getVolumeAccess().getDriver_optsAssignment_3_4_1()); 
            // InternalDockerCompose.g:6016:3: ( rule__Volume__Driver_optsAssignment_3_4_1 )
            // InternalDockerCompose.g:6016:4: rule__Volume__Driver_optsAssignment_3_4_1
            {
            pushFollow(FOLLOW_6);
            rule__Volume__Driver_optsAssignment_3_4_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getDriver_optsAssignment_3_4_1()); 

            }

            // InternalDockerCompose.g:6019:2: ( ( rule__Volume__Driver_optsAssignment_3_4_1 )* )
            // InternalDockerCompose.g:6020:3: ( rule__Volume__Driver_optsAssignment_3_4_1 )*
            {
             before(grammarAccess.getVolumeAccess().getDriver_optsAssignment_3_4_1()); 
            // InternalDockerCompose.g:6021:3: ( rule__Volume__Driver_optsAssignment_3_4_1 )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( (LA35_0==RULE_STRING) ) {
                    int LA35_2 = input.LA(2);

                    if ( (LA35_2==40) ) {
                        int LA35_4 = input.LA(3);

                        if ( (LA35_4==RULE_STRING) ) {
                            int LA35_5 = input.LA(4);

                            if ( (LA35_5==EOF||(LA35_5>=RULE_STRING && LA35_5<=RULE_ID)||(LA35_5>=34 && LA35_5<=39)||LA35_5==72||(LA35_5>=76 && LA35_5<=79)) ) {
                                alt35=1;
                            }


                        }
                        else if ( (LA35_4==RULE_ID) ) {
                            int LA35_6 = input.LA(4);

                            if ( (LA35_6==EOF||(LA35_6>=RULE_STRING && LA35_6<=RULE_ID)||(LA35_6>=34 && LA35_6<=39)||LA35_6==72||(LA35_6>=76 && LA35_6<=79)) ) {
                                alt35=1;
                            }


                        }


                    }


                }
                else if ( (LA35_0==RULE_ID) ) {
                    int LA35_3 = input.LA(2);

                    if ( (LA35_3==40) ) {
                        int LA35_4 = input.LA(3);

                        if ( (LA35_4==RULE_STRING) ) {
                            int LA35_5 = input.LA(4);

                            if ( (LA35_5==EOF||(LA35_5>=RULE_STRING && LA35_5<=RULE_ID)||(LA35_5>=34 && LA35_5<=39)||LA35_5==72||(LA35_5>=76 && LA35_5<=79)) ) {
                                alt35=1;
                            }


                        }
                        else if ( (LA35_4==RULE_ID) ) {
                            int LA35_6 = input.LA(4);

                            if ( (LA35_6==EOF||(LA35_6>=RULE_STRING && LA35_6<=RULE_ID)||(LA35_6>=34 && LA35_6<=39)||LA35_6==72||(LA35_6>=76 && LA35_6<=79)) ) {
                                alt35=1;
                            }


                        }


                    }


                }


                switch (alt35) {
            	case 1 :
            	    // InternalDockerCompose.g:6021:4: rule__Volume__Driver_optsAssignment_3_4_1
            	    {
            	    pushFollow(FOLLOW_6);
            	    rule__Volume__Driver_optsAssignment_3_4_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);

             after(grammarAccess.getVolumeAccess().getDriver_optsAssignment_3_4_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_4__1__Impl"


    // $ANTLR start "rule__Config__Group__0"
    // InternalDockerCompose.g:6031:1: rule__Config__Group__0 : rule__Config__Group__0__Impl rule__Config__Group__1 ;
    public final void rule__Config__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6035:1: ( rule__Config__Group__0__Impl rule__Config__Group__1 )
            // InternalDockerCompose.g:6036:2: rule__Config__Group__0__Impl rule__Config__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__Config__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Config__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__0"


    // $ANTLR start "rule__Config__Group__0__Impl"
    // InternalDockerCompose.g:6043:1: rule__Config__Group__0__Impl : ( () ) ;
    public final void rule__Config__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6047:1: ( ( () ) )
            // InternalDockerCompose.g:6048:1: ( () )
            {
            // InternalDockerCompose.g:6048:1: ( () )
            // InternalDockerCompose.g:6049:2: ()
            {
             before(grammarAccess.getConfigAccess().getConfigAction_0()); 
            // InternalDockerCompose.g:6050:2: ()
            // InternalDockerCompose.g:6050:3: 
            {
            }

             after(grammarAccess.getConfigAccess().getConfigAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__0__Impl"


    // $ANTLR start "rule__Config__Group__1"
    // InternalDockerCompose.g:6058:1: rule__Config__Group__1 : rule__Config__Group__1__Impl rule__Config__Group__2 ;
    public final void rule__Config__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6062:1: ( rule__Config__Group__1__Impl rule__Config__Group__2 )
            // InternalDockerCompose.g:6063:2: rule__Config__Group__1__Impl rule__Config__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__Config__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Config__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__1"


    // $ANTLR start "rule__Config__Group__1__Impl"
    // InternalDockerCompose.g:6070:1: rule__Config__Group__1__Impl : ( ( rule__Config__NameAssignment_1 ) ) ;
    public final void rule__Config__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6074:1: ( ( ( rule__Config__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:6075:1: ( ( rule__Config__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:6075:1: ( ( rule__Config__NameAssignment_1 ) )
            // InternalDockerCompose.g:6076:2: ( rule__Config__NameAssignment_1 )
            {
             before(grammarAccess.getConfigAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:6077:2: ( rule__Config__NameAssignment_1 )
            // InternalDockerCompose.g:6077:3: rule__Config__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Config__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__1__Impl"


    // $ANTLR start "rule__Config__Group__2"
    // InternalDockerCompose.g:6085:1: rule__Config__Group__2 : rule__Config__Group__2__Impl rule__Config__Group__3 ;
    public final void rule__Config__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6089:1: ( rule__Config__Group__2__Impl rule__Config__Group__3 )
            // InternalDockerCompose.g:6090:2: rule__Config__Group__2__Impl rule__Config__Group__3
            {
            pushFollow(FOLLOW_35);
            rule__Config__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Config__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__2"


    // $ANTLR start "rule__Config__Group__2__Impl"
    // InternalDockerCompose.g:6097:1: rule__Config__Group__2__Impl : ( ':' ) ;
    public final void rule__Config__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6101:1: ( ( ':' ) )
            // InternalDockerCompose.g:6102:1: ( ':' )
            {
            // InternalDockerCompose.g:6102:1: ( ':' )
            // InternalDockerCompose.g:6103:2: ':'
            {
             before(grammarAccess.getConfigAccess().getColonKeyword_2()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getConfigAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__2__Impl"


    // $ANTLR start "rule__Config__Group__3"
    // InternalDockerCompose.g:6112:1: rule__Config__Group__3 : rule__Config__Group__3__Impl ;
    public final void rule__Config__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6116:1: ( rule__Config__Group__3__Impl )
            // InternalDockerCompose.g:6117:2: rule__Config__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Config__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__3"


    // $ANTLR start "rule__Config__Group__3__Impl"
    // InternalDockerCompose.g:6123:1: rule__Config__Group__3__Impl : ( ( rule__Config__UnorderedGroup_3 ) ) ;
    public final void rule__Config__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6127:1: ( ( ( rule__Config__UnorderedGroup_3 ) ) )
            // InternalDockerCompose.g:6128:1: ( ( rule__Config__UnorderedGroup_3 ) )
            {
            // InternalDockerCompose.g:6128:1: ( ( rule__Config__UnorderedGroup_3 ) )
            // InternalDockerCompose.g:6129:2: ( rule__Config__UnorderedGroup_3 )
            {
             before(grammarAccess.getConfigAccess().getUnorderedGroup_3()); 
            // InternalDockerCompose.g:6130:2: ( rule__Config__UnorderedGroup_3 )
            // InternalDockerCompose.g:6130:3: rule__Config__UnorderedGroup_3
            {
            pushFollow(FOLLOW_2);
            rule__Config__UnorderedGroup_3();

            state._fsp--;


            }

             after(grammarAccess.getConfigAccess().getUnorderedGroup_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__3__Impl"


    // $ANTLR start "rule__Config__Group_3_0__0"
    // InternalDockerCompose.g:6139:1: rule__Config__Group_3_0__0 : rule__Config__Group_3_0__0__Impl rule__Config__Group_3_0__1 ;
    public final void rule__Config__Group_3_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6143:1: ( rule__Config__Group_3_0__0__Impl rule__Config__Group_3_0__1 )
            // InternalDockerCompose.g:6144:2: rule__Config__Group_3_0__0__Impl rule__Config__Group_3_0__1
            {
            pushFollow(FOLLOW_12);
            rule__Config__Group_3_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Config__Group_3_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_0__0"


    // $ANTLR start "rule__Config__Group_3_0__0__Impl"
    // InternalDockerCompose.g:6151:1: rule__Config__Group_3_0__0__Impl : ( 'external:' ) ;
    public final void rule__Config__Group_3_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6155:1: ( ( 'external:' ) )
            // InternalDockerCompose.g:6156:1: ( 'external:' )
            {
            // InternalDockerCompose.g:6156:1: ( 'external:' )
            // InternalDockerCompose.g:6157:2: 'external:'
            {
             before(grammarAccess.getConfigAccess().getExternalKeyword_3_0_0()); 
            match(input,76,FOLLOW_2); 
             after(grammarAccess.getConfigAccess().getExternalKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_0__0__Impl"


    // $ANTLR start "rule__Config__Group_3_0__1"
    // InternalDockerCompose.g:6166:1: rule__Config__Group_3_0__1 : rule__Config__Group_3_0__1__Impl ;
    public final void rule__Config__Group_3_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6170:1: ( rule__Config__Group_3_0__1__Impl )
            // InternalDockerCompose.g:6171:2: rule__Config__Group_3_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Config__Group_3_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_0__1"


    // $ANTLR start "rule__Config__Group_3_0__1__Impl"
    // InternalDockerCompose.g:6177:1: rule__Config__Group_3_0__1__Impl : ( ( rule__Config__ExternalAssignment_3_0_1 ) ) ;
    public final void rule__Config__Group_3_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6181:1: ( ( ( rule__Config__ExternalAssignment_3_0_1 ) ) )
            // InternalDockerCompose.g:6182:1: ( ( rule__Config__ExternalAssignment_3_0_1 ) )
            {
            // InternalDockerCompose.g:6182:1: ( ( rule__Config__ExternalAssignment_3_0_1 ) )
            // InternalDockerCompose.g:6183:2: ( rule__Config__ExternalAssignment_3_0_1 )
            {
             before(grammarAccess.getConfigAccess().getExternalAssignment_3_0_1()); 
            // InternalDockerCompose.g:6184:2: ( rule__Config__ExternalAssignment_3_0_1 )
            // InternalDockerCompose.g:6184:3: rule__Config__ExternalAssignment_3_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Config__ExternalAssignment_3_0_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigAccess().getExternalAssignment_3_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_0__1__Impl"


    // $ANTLR start "rule__Config__Group_3_1__0"
    // InternalDockerCompose.g:6193:1: rule__Config__Group_3_1__0 : rule__Config__Group_3_1__0__Impl rule__Config__Group_3_1__1 ;
    public final void rule__Config__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6197:1: ( rule__Config__Group_3_1__0__Impl rule__Config__Group_3_1__1 )
            // InternalDockerCompose.g:6198:2: rule__Config__Group_3_1__0__Impl rule__Config__Group_3_1__1
            {
            pushFollow(FOLLOW_5);
            rule__Config__Group_3_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Config__Group_3_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_1__0"


    // $ANTLR start "rule__Config__Group_3_1__0__Impl"
    // InternalDockerCompose.g:6205:1: rule__Config__Group_3_1__0__Impl : ( 'file:' ) ;
    public final void rule__Config__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6209:1: ( ( 'file:' ) )
            // InternalDockerCompose.g:6210:1: ( 'file:' )
            {
            // InternalDockerCompose.g:6210:1: ( 'file:' )
            // InternalDockerCompose.g:6211:2: 'file:'
            {
             before(grammarAccess.getConfigAccess().getFileKeyword_3_1_0()); 
            match(input,81,FOLLOW_2); 
             after(grammarAccess.getConfigAccess().getFileKeyword_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_1__0__Impl"


    // $ANTLR start "rule__Config__Group_3_1__1"
    // InternalDockerCompose.g:6220:1: rule__Config__Group_3_1__1 : rule__Config__Group_3_1__1__Impl ;
    public final void rule__Config__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6224:1: ( rule__Config__Group_3_1__1__Impl )
            // InternalDockerCompose.g:6225:2: rule__Config__Group_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Config__Group_3_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_1__1"


    // $ANTLR start "rule__Config__Group_3_1__1__Impl"
    // InternalDockerCompose.g:6231:1: rule__Config__Group_3_1__1__Impl : ( ( rule__Config__FileAssignment_3_1_1 ) ) ;
    public final void rule__Config__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6235:1: ( ( ( rule__Config__FileAssignment_3_1_1 ) ) )
            // InternalDockerCompose.g:6236:1: ( ( rule__Config__FileAssignment_3_1_1 ) )
            {
            // InternalDockerCompose.g:6236:1: ( ( rule__Config__FileAssignment_3_1_1 ) )
            // InternalDockerCompose.g:6237:2: ( rule__Config__FileAssignment_3_1_1 )
            {
             before(grammarAccess.getConfigAccess().getFileAssignment_3_1_1()); 
            // InternalDockerCompose.g:6238:2: ( rule__Config__FileAssignment_3_1_1 )
            // InternalDockerCompose.g:6238:3: rule__Config__FileAssignment_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Config__FileAssignment_3_1_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigAccess().getFileAssignment_3_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_1__1__Impl"


    // $ANTLR start "rule__Config__Group_3_2__0"
    // InternalDockerCompose.g:6247:1: rule__Config__Group_3_2__0 : rule__Config__Group_3_2__0__Impl rule__Config__Group_3_2__1 ;
    public final void rule__Config__Group_3_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6251:1: ( rule__Config__Group_3_2__0__Impl rule__Config__Group_3_2__1 )
            // InternalDockerCompose.g:6252:2: rule__Config__Group_3_2__0__Impl rule__Config__Group_3_2__1
            {
            pushFollow(FOLLOW_5);
            rule__Config__Group_3_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Config__Group_3_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_2__0"


    // $ANTLR start "rule__Config__Group_3_2__0__Impl"
    // InternalDockerCompose.g:6259:1: rule__Config__Group_3_2__0__Impl : ( 'name:' ) ;
    public final void rule__Config__Group_3_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6263:1: ( ( 'name:' ) )
            // InternalDockerCompose.g:6264:1: ( 'name:' )
            {
            // InternalDockerCompose.g:6264:1: ( 'name:' )
            // InternalDockerCompose.g:6265:2: 'name:'
            {
             before(grammarAccess.getConfigAccess().getNameKeyword_3_2_0()); 
            match(input,77,FOLLOW_2); 
             after(grammarAccess.getConfigAccess().getNameKeyword_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_2__0__Impl"


    // $ANTLR start "rule__Config__Group_3_2__1"
    // InternalDockerCompose.g:6274:1: rule__Config__Group_3_2__1 : rule__Config__Group_3_2__1__Impl ;
    public final void rule__Config__Group_3_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6278:1: ( rule__Config__Group_3_2__1__Impl )
            // InternalDockerCompose.g:6279:2: rule__Config__Group_3_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Config__Group_3_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_2__1"


    // $ANTLR start "rule__Config__Group_3_2__1__Impl"
    // InternalDockerCompose.g:6285:1: rule__Config__Group_3_2__1__Impl : ( ( rule__Config__Config_nameAssignment_3_2_1 ) ) ;
    public final void rule__Config__Group_3_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6289:1: ( ( ( rule__Config__Config_nameAssignment_3_2_1 ) ) )
            // InternalDockerCompose.g:6290:1: ( ( rule__Config__Config_nameAssignment_3_2_1 ) )
            {
            // InternalDockerCompose.g:6290:1: ( ( rule__Config__Config_nameAssignment_3_2_1 ) )
            // InternalDockerCompose.g:6291:2: ( rule__Config__Config_nameAssignment_3_2_1 )
            {
             before(grammarAccess.getConfigAccess().getConfig_nameAssignment_3_2_1()); 
            // InternalDockerCompose.g:6292:2: ( rule__Config__Config_nameAssignment_3_2_1 )
            // InternalDockerCompose.g:6292:3: rule__Config__Config_nameAssignment_3_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Config__Config_nameAssignment_3_2_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigAccess().getConfig_nameAssignment_3_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_2__1__Impl"


    // $ANTLR start "rule__Secret__Group__0"
    // InternalDockerCompose.g:6301:1: rule__Secret__Group__0 : rule__Secret__Group__0__Impl rule__Secret__Group__1 ;
    public final void rule__Secret__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6305:1: ( rule__Secret__Group__0__Impl rule__Secret__Group__1 )
            // InternalDockerCompose.g:6306:2: rule__Secret__Group__0__Impl rule__Secret__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__Secret__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__0"


    // $ANTLR start "rule__Secret__Group__0__Impl"
    // InternalDockerCompose.g:6313:1: rule__Secret__Group__0__Impl : ( () ) ;
    public final void rule__Secret__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6317:1: ( ( () ) )
            // InternalDockerCompose.g:6318:1: ( () )
            {
            // InternalDockerCompose.g:6318:1: ( () )
            // InternalDockerCompose.g:6319:2: ()
            {
             before(grammarAccess.getSecretAccess().getSecretAction_0()); 
            // InternalDockerCompose.g:6320:2: ()
            // InternalDockerCompose.g:6320:3: 
            {
            }

             after(grammarAccess.getSecretAccess().getSecretAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__0__Impl"


    // $ANTLR start "rule__Secret__Group__1"
    // InternalDockerCompose.g:6328:1: rule__Secret__Group__1 : rule__Secret__Group__1__Impl rule__Secret__Group__2 ;
    public final void rule__Secret__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6332:1: ( rule__Secret__Group__1__Impl rule__Secret__Group__2 )
            // InternalDockerCompose.g:6333:2: rule__Secret__Group__1__Impl rule__Secret__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__Secret__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__1"


    // $ANTLR start "rule__Secret__Group__1__Impl"
    // InternalDockerCompose.g:6340:1: rule__Secret__Group__1__Impl : ( ( rule__Secret__NameAssignment_1 ) ) ;
    public final void rule__Secret__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6344:1: ( ( ( rule__Secret__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:6345:1: ( ( rule__Secret__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:6345:1: ( ( rule__Secret__NameAssignment_1 ) )
            // InternalDockerCompose.g:6346:2: ( rule__Secret__NameAssignment_1 )
            {
             before(grammarAccess.getSecretAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:6347:2: ( rule__Secret__NameAssignment_1 )
            // InternalDockerCompose.g:6347:3: rule__Secret__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Secret__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__1__Impl"


    // $ANTLR start "rule__Secret__Group__2"
    // InternalDockerCompose.g:6355:1: rule__Secret__Group__2 : rule__Secret__Group__2__Impl rule__Secret__Group__3 ;
    public final void rule__Secret__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6359:1: ( rule__Secret__Group__2__Impl rule__Secret__Group__3 )
            // InternalDockerCompose.g:6360:2: rule__Secret__Group__2__Impl rule__Secret__Group__3
            {
            pushFollow(FOLLOW_36);
            rule__Secret__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__2"


    // $ANTLR start "rule__Secret__Group__2__Impl"
    // InternalDockerCompose.g:6367:1: rule__Secret__Group__2__Impl : ( ':' ) ;
    public final void rule__Secret__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6371:1: ( ( ':' ) )
            // InternalDockerCompose.g:6372:1: ( ':' )
            {
            // InternalDockerCompose.g:6372:1: ( ':' )
            // InternalDockerCompose.g:6373:2: ':'
            {
             before(grammarAccess.getSecretAccess().getColonKeyword_2()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getSecretAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__2__Impl"


    // $ANTLR start "rule__Secret__Group__3"
    // InternalDockerCompose.g:6382:1: rule__Secret__Group__3 : rule__Secret__Group__3__Impl ;
    public final void rule__Secret__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6386:1: ( rule__Secret__Group__3__Impl )
            // InternalDockerCompose.g:6387:2: rule__Secret__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__3"


    // $ANTLR start "rule__Secret__Group__3__Impl"
    // InternalDockerCompose.g:6393:1: rule__Secret__Group__3__Impl : ( ( rule__Secret__UnorderedGroup_3 ) ) ;
    public final void rule__Secret__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6397:1: ( ( ( rule__Secret__UnorderedGroup_3 ) ) )
            // InternalDockerCompose.g:6398:1: ( ( rule__Secret__UnorderedGroup_3 ) )
            {
            // InternalDockerCompose.g:6398:1: ( ( rule__Secret__UnorderedGroup_3 ) )
            // InternalDockerCompose.g:6399:2: ( rule__Secret__UnorderedGroup_3 )
            {
             before(grammarAccess.getSecretAccess().getUnorderedGroup_3()); 
            // InternalDockerCompose.g:6400:2: ( rule__Secret__UnorderedGroup_3 )
            // InternalDockerCompose.g:6400:3: rule__Secret__UnorderedGroup_3
            {
            pushFollow(FOLLOW_2);
            rule__Secret__UnorderedGroup_3();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getUnorderedGroup_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__3__Impl"


    // $ANTLR start "rule__Secret__Group_3_0__0"
    // InternalDockerCompose.g:6409:1: rule__Secret__Group_3_0__0 : rule__Secret__Group_3_0__0__Impl rule__Secret__Group_3_0__1 ;
    public final void rule__Secret__Group_3_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6413:1: ( rule__Secret__Group_3_0__0__Impl rule__Secret__Group_3_0__1 )
            // InternalDockerCompose.g:6414:2: rule__Secret__Group_3_0__0__Impl rule__Secret__Group_3_0__1
            {
            pushFollow(FOLLOW_12);
            rule__Secret__Group_3_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_0__0"


    // $ANTLR start "rule__Secret__Group_3_0__0__Impl"
    // InternalDockerCompose.g:6421:1: rule__Secret__Group_3_0__0__Impl : ( 'external:' ) ;
    public final void rule__Secret__Group_3_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6425:1: ( ( 'external:' ) )
            // InternalDockerCompose.g:6426:1: ( 'external:' )
            {
            // InternalDockerCompose.g:6426:1: ( 'external:' )
            // InternalDockerCompose.g:6427:2: 'external:'
            {
             before(grammarAccess.getSecretAccess().getExternalKeyword_3_0_0()); 
            match(input,76,FOLLOW_2); 
             after(grammarAccess.getSecretAccess().getExternalKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_0__0__Impl"


    // $ANTLR start "rule__Secret__Group_3_0__1"
    // InternalDockerCompose.g:6436:1: rule__Secret__Group_3_0__1 : rule__Secret__Group_3_0__1__Impl ;
    public final void rule__Secret__Group_3_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6440:1: ( rule__Secret__Group_3_0__1__Impl )
            // InternalDockerCompose.g:6441:2: rule__Secret__Group_3_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_0__1"


    // $ANTLR start "rule__Secret__Group_3_0__1__Impl"
    // InternalDockerCompose.g:6447:1: rule__Secret__Group_3_0__1__Impl : ( ( rule__Secret__ExternalAssignment_3_0_1 ) ) ;
    public final void rule__Secret__Group_3_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6451:1: ( ( ( rule__Secret__ExternalAssignment_3_0_1 ) ) )
            // InternalDockerCompose.g:6452:1: ( ( rule__Secret__ExternalAssignment_3_0_1 ) )
            {
            // InternalDockerCompose.g:6452:1: ( ( rule__Secret__ExternalAssignment_3_0_1 ) )
            // InternalDockerCompose.g:6453:2: ( rule__Secret__ExternalAssignment_3_0_1 )
            {
             before(grammarAccess.getSecretAccess().getExternalAssignment_3_0_1()); 
            // InternalDockerCompose.g:6454:2: ( rule__Secret__ExternalAssignment_3_0_1 )
            // InternalDockerCompose.g:6454:3: rule__Secret__ExternalAssignment_3_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Secret__ExternalAssignment_3_0_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getExternalAssignment_3_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_0__1__Impl"


    // $ANTLR start "rule__Secret__Group_3_1__0"
    // InternalDockerCompose.g:6463:1: rule__Secret__Group_3_1__0 : rule__Secret__Group_3_1__0__Impl rule__Secret__Group_3_1__1 ;
    public final void rule__Secret__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6467:1: ( rule__Secret__Group_3_1__0__Impl rule__Secret__Group_3_1__1 )
            // InternalDockerCompose.g:6468:2: rule__Secret__Group_3_1__0__Impl rule__Secret__Group_3_1__1
            {
            pushFollow(FOLLOW_5);
            rule__Secret__Group_3_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_1__0"


    // $ANTLR start "rule__Secret__Group_3_1__0__Impl"
    // InternalDockerCompose.g:6475:1: rule__Secret__Group_3_1__0__Impl : ( 'file:' ) ;
    public final void rule__Secret__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6479:1: ( ( 'file:' ) )
            // InternalDockerCompose.g:6480:1: ( 'file:' )
            {
            // InternalDockerCompose.g:6480:1: ( 'file:' )
            // InternalDockerCompose.g:6481:2: 'file:'
            {
             before(grammarAccess.getSecretAccess().getFileKeyword_3_1_0()); 
            match(input,81,FOLLOW_2); 
             after(grammarAccess.getSecretAccess().getFileKeyword_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_1__0__Impl"


    // $ANTLR start "rule__Secret__Group_3_1__1"
    // InternalDockerCompose.g:6490:1: rule__Secret__Group_3_1__1 : rule__Secret__Group_3_1__1__Impl ;
    public final void rule__Secret__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6494:1: ( rule__Secret__Group_3_1__1__Impl )
            // InternalDockerCompose.g:6495:2: rule__Secret__Group_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_1__1"


    // $ANTLR start "rule__Secret__Group_3_1__1__Impl"
    // InternalDockerCompose.g:6501:1: rule__Secret__Group_3_1__1__Impl : ( ( rule__Secret__FileAssignment_3_1_1 ) ) ;
    public final void rule__Secret__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6505:1: ( ( ( rule__Secret__FileAssignment_3_1_1 ) ) )
            // InternalDockerCompose.g:6506:1: ( ( rule__Secret__FileAssignment_3_1_1 ) )
            {
            // InternalDockerCompose.g:6506:1: ( ( rule__Secret__FileAssignment_3_1_1 ) )
            // InternalDockerCompose.g:6507:2: ( rule__Secret__FileAssignment_3_1_1 )
            {
             before(grammarAccess.getSecretAccess().getFileAssignment_3_1_1()); 
            // InternalDockerCompose.g:6508:2: ( rule__Secret__FileAssignment_3_1_1 )
            // InternalDockerCompose.g:6508:3: rule__Secret__FileAssignment_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Secret__FileAssignment_3_1_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getFileAssignment_3_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_1__1__Impl"


    // $ANTLR start "rule__Secret__Group_3_2__0"
    // InternalDockerCompose.g:6517:1: rule__Secret__Group_3_2__0 : rule__Secret__Group_3_2__0__Impl rule__Secret__Group_3_2__1 ;
    public final void rule__Secret__Group_3_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6521:1: ( rule__Secret__Group_3_2__0__Impl rule__Secret__Group_3_2__1 )
            // InternalDockerCompose.g:6522:2: rule__Secret__Group_3_2__0__Impl rule__Secret__Group_3_2__1
            {
            pushFollow(FOLLOW_5);
            rule__Secret__Group_3_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_2__0"


    // $ANTLR start "rule__Secret__Group_3_2__0__Impl"
    // InternalDockerCompose.g:6529:1: rule__Secret__Group_3_2__0__Impl : ( 'environment:' ) ;
    public final void rule__Secret__Group_3_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6533:1: ( ( 'environment:' ) )
            // InternalDockerCompose.g:6534:1: ( 'environment:' )
            {
            // InternalDockerCompose.g:6534:1: ( 'environment:' )
            // InternalDockerCompose.g:6535:2: 'environment:'
            {
             before(grammarAccess.getSecretAccess().getEnvironmentKeyword_3_2_0()); 
            match(input,82,FOLLOW_2); 
             after(grammarAccess.getSecretAccess().getEnvironmentKeyword_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_2__0__Impl"


    // $ANTLR start "rule__Secret__Group_3_2__1"
    // InternalDockerCompose.g:6544:1: rule__Secret__Group_3_2__1 : rule__Secret__Group_3_2__1__Impl ;
    public final void rule__Secret__Group_3_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6548:1: ( rule__Secret__Group_3_2__1__Impl )
            // InternalDockerCompose.g:6549:2: rule__Secret__Group_3_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_2__1"


    // $ANTLR start "rule__Secret__Group_3_2__1__Impl"
    // InternalDockerCompose.g:6555:1: rule__Secret__Group_3_2__1__Impl : ( ( rule__Secret__EnvironmentAssignment_3_2_1 ) ) ;
    public final void rule__Secret__Group_3_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6559:1: ( ( ( rule__Secret__EnvironmentAssignment_3_2_1 ) ) )
            // InternalDockerCompose.g:6560:1: ( ( rule__Secret__EnvironmentAssignment_3_2_1 ) )
            {
            // InternalDockerCompose.g:6560:1: ( ( rule__Secret__EnvironmentAssignment_3_2_1 ) )
            // InternalDockerCompose.g:6561:2: ( rule__Secret__EnvironmentAssignment_3_2_1 )
            {
             before(grammarAccess.getSecretAccess().getEnvironmentAssignment_3_2_1()); 
            // InternalDockerCompose.g:6562:2: ( rule__Secret__EnvironmentAssignment_3_2_1 )
            // InternalDockerCompose.g:6562:3: rule__Secret__EnvironmentAssignment_3_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Secret__EnvironmentAssignment_3_2_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getEnvironmentAssignment_3_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_2__1__Impl"


    // $ANTLR start "rule__Secret__Group_3_3__0"
    // InternalDockerCompose.g:6571:1: rule__Secret__Group_3_3__0 : rule__Secret__Group_3_3__0__Impl rule__Secret__Group_3_3__1 ;
    public final void rule__Secret__Group_3_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6575:1: ( rule__Secret__Group_3_3__0__Impl rule__Secret__Group_3_3__1 )
            // InternalDockerCompose.g:6576:2: rule__Secret__Group_3_3__0__Impl rule__Secret__Group_3_3__1
            {
            pushFollow(FOLLOW_5);
            rule__Secret__Group_3_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_3__0"


    // $ANTLR start "rule__Secret__Group_3_3__0__Impl"
    // InternalDockerCompose.g:6583:1: rule__Secret__Group_3_3__0__Impl : ( 'name:' ) ;
    public final void rule__Secret__Group_3_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6587:1: ( ( 'name:' ) )
            // InternalDockerCompose.g:6588:1: ( 'name:' )
            {
            // InternalDockerCompose.g:6588:1: ( 'name:' )
            // InternalDockerCompose.g:6589:2: 'name:'
            {
             before(grammarAccess.getSecretAccess().getNameKeyword_3_3_0()); 
            match(input,77,FOLLOW_2); 
             after(grammarAccess.getSecretAccess().getNameKeyword_3_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_3__0__Impl"


    // $ANTLR start "rule__Secret__Group_3_3__1"
    // InternalDockerCompose.g:6598:1: rule__Secret__Group_3_3__1 : rule__Secret__Group_3_3__1__Impl ;
    public final void rule__Secret__Group_3_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6602:1: ( rule__Secret__Group_3_3__1__Impl )
            // InternalDockerCompose.g:6603:2: rule__Secret__Group_3_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_3__1"


    // $ANTLR start "rule__Secret__Group_3_3__1__Impl"
    // InternalDockerCompose.g:6609:1: rule__Secret__Group_3_3__1__Impl : ( ( rule__Secret__Secret_nameAssignment_3_3_1 ) ) ;
    public final void rule__Secret__Group_3_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6613:1: ( ( ( rule__Secret__Secret_nameAssignment_3_3_1 ) ) )
            // InternalDockerCompose.g:6614:1: ( ( rule__Secret__Secret_nameAssignment_3_3_1 ) )
            {
            // InternalDockerCompose.g:6614:1: ( ( rule__Secret__Secret_nameAssignment_3_3_1 ) )
            // InternalDockerCompose.g:6615:2: ( rule__Secret__Secret_nameAssignment_3_3_1 )
            {
             before(grammarAccess.getSecretAccess().getSecret_nameAssignment_3_3_1()); 
            // InternalDockerCompose.g:6616:2: ( rule__Secret__Secret_nameAssignment_3_3_1 )
            // InternalDockerCompose.g:6616:3: rule__Secret__Secret_nameAssignment_3_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Secret_nameAssignment_3_3_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getSecret_nameAssignment_3_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_3__1__Impl"


    // $ANTLR start "rule__VolumeLabel__Group__0"
    // InternalDockerCompose.g:6625:1: rule__VolumeLabel__Group__0 : rule__VolumeLabel__Group__0__Impl rule__VolumeLabel__Group__1 ;
    public final void rule__VolumeLabel__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6629:1: ( rule__VolumeLabel__Group__0__Impl rule__VolumeLabel__Group__1 )
            // InternalDockerCompose.g:6630:2: rule__VolumeLabel__Group__0__Impl rule__VolumeLabel__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__VolumeLabel__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeLabel__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__0"


    // $ANTLR start "rule__VolumeLabel__Group__0__Impl"
    // InternalDockerCompose.g:6637:1: rule__VolumeLabel__Group__0__Impl : ( () ) ;
    public final void rule__VolumeLabel__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6641:1: ( ( () ) )
            // InternalDockerCompose.g:6642:1: ( () )
            {
            // InternalDockerCompose.g:6642:1: ( () )
            // InternalDockerCompose.g:6643:2: ()
            {
             before(grammarAccess.getVolumeLabelAccess().getVolumeLabelAction_0()); 
            // InternalDockerCompose.g:6644:2: ()
            // InternalDockerCompose.g:6644:3: 
            {
            }

             after(grammarAccess.getVolumeLabelAccess().getVolumeLabelAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__0__Impl"


    // $ANTLR start "rule__VolumeLabel__Group__1"
    // InternalDockerCompose.g:6652:1: rule__VolumeLabel__Group__1 : rule__VolumeLabel__Group__1__Impl rule__VolumeLabel__Group__2 ;
    public final void rule__VolumeLabel__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6656:1: ( rule__VolumeLabel__Group__1__Impl rule__VolumeLabel__Group__2 )
            // InternalDockerCompose.g:6657:2: rule__VolumeLabel__Group__1__Impl rule__VolumeLabel__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__VolumeLabel__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeLabel__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__1"


    // $ANTLR start "rule__VolumeLabel__Group__1__Impl"
    // InternalDockerCompose.g:6664:1: rule__VolumeLabel__Group__1__Impl : ( ( rule__VolumeLabel__NameAssignment_1 ) ) ;
    public final void rule__VolumeLabel__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6668:1: ( ( ( rule__VolumeLabel__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:6669:1: ( ( rule__VolumeLabel__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:6669:1: ( ( rule__VolumeLabel__NameAssignment_1 ) )
            // InternalDockerCompose.g:6670:2: ( rule__VolumeLabel__NameAssignment_1 )
            {
             before(grammarAccess.getVolumeLabelAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:6671:2: ( rule__VolumeLabel__NameAssignment_1 )
            // InternalDockerCompose.g:6671:3: rule__VolumeLabel__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeLabel__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeLabelAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__1__Impl"


    // $ANTLR start "rule__VolumeLabel__Group__2"
    // InternalDockerCompose.g:6679:1: rule__VolumeLabel__Group__2 : rule__VolumeLabel__Group__2__Impl rule__VolumeLabel__Group__3 ;
    public final void rule__VolumeLabel__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6683:1: ( rule__VolumeLabel__Group__2__Impl rule__VolumeLabel__Group__3 )
            // InternalDockerCompose.g:6684:2: rule__VolumeLabel__Group__2__Impl rule__VolumeLabel__Group__3
            {
            pushFollow(FOLLOW_5);
            rule__VolumeLabel__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeLabel__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__2"


    // $ANTLR start "rule__VolumeLabel__Group__2__Impl"
    // InternalDockerCompose.g:6691:1: rule__VolumeLabel__Group__2__Impl : ( ':' ) ;
    public final void rule__VolumeLabel__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6695:1: ( ( ':' ) )
            // InternalDockerCompose.g:6696:1: ( ':' )
            {
            // InternalDockerCompose.g:6696:1: ( ':' )
            // InternalDockerCompose.g:6697:2: ':'
            {
             before(grammarAccess.getVolumeLabelAccess().getColonKeyword_2()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getVolumeLabelAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__2__Impl"


    // $ANTLR start "rule__VolumeLabel__Group__3"
    // InternalDockerCompose.g:6706:1: rule__VolumeLabel__Group__3 : rule__VolumeLabel__Group__3__Impl ;
    public final void rule__VolumeLabel__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6710:1: ( rule__VolumeLabel__Group__3__Impl )
            // InternalDockerCompose.g:6711:2: rule__VolumeLabel__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeLabel__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__3"


    // $ANTLR start "rule__VolumeLabel__Group__3__Impl"
    // InternalDockerCompose.g:6717:1: rule__VolumeLabel__Group__3__Impl : ( ( rule__VolumeLabel__ValueAssignment_3 ) ) ;
    public final void rule__VolumeLabel__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6721:1: ( ( ( rule__VolumeLabel__ValueAssignment_3 ) ) )
            // InternalDockerCompose.g:6722:1: ( ( rule__VolumeLabel__ValueAssignment_3 ) )
            {
            // InternalDockerCompose.g:6722:1: ( ( rule__VolumeLabel__ValueAssignment_3 ) )
            // InternalDockerCompose.g:6723:2: ( rule__VolumeLabel__ValueAssignment_3 )
            {
             before(grammarAccess.getVolumeLabelAccess().getValueAssignment_3()); 
            // InternalDockerCompose.g:6724:2: ( rule__VolumeLabel__ValueAssignment_3 )
            // InternalDockerCompose.g:6724:3: rule__VolumeLabel__ValueAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__VolumeLabel__ValueAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getVolumeLabelAccess().getValueAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__3__Impl"


    // $ANTLR start "rule__VolumeDriverOpt__Group__0"
    // InternalDockerCompose.g:6733:1: rule__VolumeDriverOpt__Group__0 : rule__VolumeDriverOpt__Group__0__Impl rule__VolumeDriverOpt__Group__1 ;
    public final void rule__VolumeDriverOpt__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6737:1: ( rule__VolumeDriverOpt__Group__0__Impl rule__VolumeDriverOpt__Group__1 )
            // InternalDockerCompose.g:6738:2: rule__VolumeDriverOpt__Group__0__Impl rule__VolumeDriverOpt__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__VolumeDriverOpt__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__0"


    // $ANTLR start "rule__VolumeDriverOpt__Group__0__Impl"
    // InternalDockerCompose.g:6745:1: rule__VolumeDriverOpt__Group__0__Impl : ( () ) ;
    public final void rule__VolumeDriverOpt__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6749:1: ( ( () ) )
            // InternalDockerCompose.g:6750:1: ( () )
            {
            // InternalDockerCompose.g:6750:1: ( () )
            // InternalDockerCompose.g:6751:2: ()
            {
             before(grammarAccess.getVolumeDriverOptAccess().getVolumeDriverOptAction_0()); 
            // InternalDockerCompose.g:6752:2: ()
            // InternalDockerCompose.g:6752:3: 
            {
            }

             after(grammarAccess.getVolumeDriverOptAccess().getVolumeDriverOptAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__0__Impl"


    // $ANTLR start "rule__VolumeDriverOpt__Group__1"
    // InternalDockerCompose.g:6760:1: rule__VolumeDriverOpt__Group__1 : rule__VolumeDriverOpt__Group__1__Impl rule__VolumeDriverOpt__Group__2 ;
    public final void rule__VolumeDriverOpt__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6764:1: ( rule__VolumeDriverOpt__Group__1__Impl rule__VolumeDriverOpt__Group__2 )
            // InternalDockerCompose.g:6765:2: rule__VolumeDriverOpt__Group__1__Impl rule__VolumeDriverOpt__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__VolumeDriverOpt__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__1"


    // $ANTLR start "rule__VolumeDriverOpt__Group__1__Impl"
    // InternalDockerCompose.g:6772:1: rule__VolumeDriverOpt__Group__1__Impl : ( ( rule__VolumeDriverOpt__NameAssignment_1 ) ) ;
    public final void rule__VolumeDriverOpt__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6776:1: ( ( ( rule__VolumeDriverOpt__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:6777:1: ( ( rule__VolumeDriverOpt__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:6777:1: ( ( rule__VolumeDriverOpt__NameAssignment_1 ) )
            // InternalDockerCompose.g:6778:2: ( rule__VolumeDriverOpt__NameAssignment_1 )
            {
             before(grammarAccess.getVolumeDriverOptAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:6779:2: ( rule__VolumeDriverOpt__NameAssignment_1 )
            // InternalDockerCompose.g:6779:3: rule__VolumeDriverOpt__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeDriverOptAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__1__Impl"


    // $ANTLR start "rule__VolumeDriverOpt__Group__2"
    // InternalDockerCompose.g:6787:1: rule__VolumeDriverOpt__Group__2 : rule__VolumeDriverOpt__Group__2__Impl rule__VolumeDriverOpt__Group__3 ;
    public final void rule__VolumeDriverOpt__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6791:1: ( rule__VolumeDriverOpt__Group__2__Impl rule__VolumeDriverOpt__Group__3 )
            // InternalDockerCompose.g:6792:2: rule__VolumeDriverOpt__Group__2__Impl rule__VolumeDriverOpt__Group__3
            {
            pushFollow(FOLLOW_5);
            rule__VolumeDriverOpt__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__2"


    // $ANTLR start "rule__VolumeDriverOpt__Group__2__Impl"
    // InternalDockerCompose.g:6799:1: rule__VolumeDriverOpt__Group__2__Impl : ( ':' ) ;
    public final void rule__VolumeDriverOpt__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6803:1: ( ( ':' ) )
            // InternalDockerCompose.g:6804:1: ( ':' )
            {
            // InternalDockerCompose.g:6804:1: ( ':' )
            // InternalDockerCompose.g:6805:2: ':'
            {
             before(grammarAccess.getVolumeDriverOptAccess().getColonKeyword_2()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getVolumeDriverOptAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__2__Impl"


    // $ANTLR start "rule__VolumeDriverOpt__Group__3"
    // InternalDockerCompose.g:6814:1: rule__VolumeDriverOpt__Group__3 : rule__VolumeDriverOpt__Group__3__Impl ;
    public final void rule__VolumeDriverOpt__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6818:1: ( rule__VolumeDriverOpt__Group__3__Impl )
            // InternalDockerCompose.g:6819:2: rule__VolumeDriverOpt__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__3"


    // $ANTLR start "rule__VolumeDriverOpt__Group__3__Impl"
    // InternalDockerCompose.g:6825:1: rule__VolumeDriverOpt__Group__3__Impl : ( ( rule__VolumeDriverOpt__ValueAssignment_3 ) ) ;
    public final void rule__VolumeDriverOpt__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6829:1: ( ( ( rule__VolumeDriverOpt__ValueAssignment_3 ) ) )
            // InternalDockerCompose.g:6830:1: ( ( rule__VolumeDriverOpt__ValueAssignment_3 ) )
            {
            // InternalDockerCompose.g:6830:1: ( ( rule__VolumeDriverOpt__ValueAssignment_3 ) )
            // InternalDockerCompose.g:6831:2: ( rule__VolumeDriverOpt__ValueAssignment_3 )
            {
             before(grammarAccess.getVolumeDriverOptAccess().getValueAssignment_3()); 
            // InternalDockerCompose.g:6832:2: ( rule__VolumeDriverOpt__ValueAssignment_3 )
            // InternalDockerCompose.g:6832:3: rule__VolumeDriverOpt__ValueAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__ValueAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getVolumeDriverOptAccess().getValueAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__3__Impl"


    // $ANTLR start "rule__NetworkLabel__Group__0"
    // InternalDockerCompose.g:6841:1: rule__NetworkLabel__Group__0 : rule__NetworkLabel__Group__0__Impl rule__NetworkLabel__Group__1 ;
    public final void rule__NetworkLabel__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6845:1: ( rule__NetworkLabel__Group__0__Impl rule__NetworkLabel__Group__1 )
            // InternalDockerCompose.g:6846:2: rule__NetworkLabel__Group__0__Impl rule__NetworkLabel__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__NetworkLabel__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkLabel__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__0"


    // $ANTLR start "rule__NetworkLabel__Group__0__Impl"
    // InternalDockerCompose.g:6853:1: rule__NetworkLabel__Group__0__Impl : ( () ) ;
    public final void rule__NetworkLabel__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6857:1: ( ( () ) )
            // InternalDockerCompose.g:6858:1: ( () )
            {
            // InternalDockerCompose.g:6858:1: ( () )
            // InternalDockerCompose.g:6859:2: ()
            {
             before(grammarAccess.getNetworkLabelAccess().getNetworkLabelAction_0()); 
            // InternalDockerCompose.g:6860:2: ()
            // InternalDockerCompose.g:6860:3: 
            {
            }

             after(grammarAccess.getNetworkLabelAccess().getNetworkLabelAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__0__Impl"


    // $ANTLR start "rule__NetworkLabel__Group__1"
    // InternalDockerCompose.g:6868:1: rule__NetworkLabel__Group__1 : rule__NetworkLabel__Group__1__Impl rule__NetworkLabel__Group__2 ;
    public final void rule__NetworkLabel__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6872:1: ( rule__NetworkLabel__Group__1__Impl rule__NetworkLabel__Group__2 )
            // InternalDockerCompose.g:6873:2: rule__NetworkLabel__Group__1__Impl rule__NetworkLabel__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__NetworkLabel__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkLabel__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__1"


    // $ANTLR start "rule__NetworkLabel__Group__1__Impl"
    // InternalDockerCompose.g:6880:1: rule__NetworkLabel__Group__1__Impl : ( ( rule__NetworkLabel__NameAssignment_1 ) ) ;
    public final void rule__NetworkLabel__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6884:1: ( ( ( rule__NetworkLabel__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:6885:1: ( ( rule__NetworkLabel__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:6885:1: ( ( rule__NetworkLabel__NameAssignment_1 ) )
            // InternalDockerCompose.g:6886:2: ( rule__NetworkLabel__NameAssignment_1 )
            {
             before(grammarAccess.getNetworkLabelAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:6887:2: ( rule__NetworkLabel__NameAssignment_1 )
            // InternalDockerCompose.g:6887:3: rule__NetworkLabel__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkLabel__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkLabelAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__1__Impl"


    // $ANTLR start "rule__NetworkLabel__Group__2"
    // InternalDockerCompose.g:6895:1: rule__NetworkLabel__Group__2 : rule__NetworkLabel__Group__2__Impl rule__NetworkLabel__Group__3 ;
    public final void rule__NetworkLabel__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6899:1: ( rule__NetworkLabel__Group__2__Impl rule__NetworkLabel__Group__3 )
            // InternalDockerCompose.g:6900:2: rule__NetworkLabel__Group__2__Impl rule__NetworkLabel__Group__3
            {
            pushFollow(FOLLOW_5);
            rule__NetworkLabel__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkLabel__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__2"


    // $ANTLR start "rule__NetworkLabel__Group__2__Impl"
    // InternalDockerCompose.g:6907:1: rule__NetworkLabel__Group__2__Impl : ( ':' ) ;
    public final void rule__NetworkLabel__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6911:1: ( ( ':' ) )
            // InternalDockerCompose.g:6912:1: ( ':' )
            {
            // InternalDockerCompose.g:6912:1: ( ':' )
            // InternalDockerCompose.g:6913:2: ':'
            {
             before(grammarAccess.getNetworkLabelAccess().getColonKeyword_2()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getNetworkLabelAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__2__Impl"


    // $ANTLR start "rule__NetworkLabel__Group__3"
    // InternalDockerCompose.g:6922:1: rule__NetworkLabel__Group__3 : rule__NetworkLabel__Group__3__Impl ;
    public final void rule__NetworkLabel__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6926:1: ( rule__NetworkLabel__Group__3__Impl )
            // InternalDockerCompose.g:6927:2: rule__NetworkLabel__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkLabel__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__3"


    // $ANTLR start "rule__NetworkLabel__Group__3__Impl"
    // InternalDockerCompose.g:6933:1: rule__NetworkLabel__Group__3__Impl : ( ( rule__NetworkLabel__ValueAssignment_3 ) ) ;
    public final void rule__NetworkLabel__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6937:1: ( ( ( rule__NetworkLabel__ValueAssignment_3 ) ) )
            // InternalDockerCompose.g:6938:1: ( ( rule__NetworkLabel__ValueAssignment_3 ) )
            {
            // InternalDockerCompose.g:6938:1: ( ( rule__NetworkLabel__ValueAssignment_3 ) )
            // InternalDockerCompose.g:6939:2: ( rule__NetworkLabel__ValueAssignment_3 )
            {
             before(grammarAccess.getNetworkLabelAccess().getValueAssignment_3()); 
            // InternalDockerCompose.g:6940:2: ( rule__NetworkLabel__ValueAssignment_3 )
            // InternalDockerCompose.g:6940:3: rule__NetworkLabel__ValueAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__NetworkLabel__ValueAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getNetworkLabelAccess().getValueAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__3__Impl"


    // $ANTLR start "rule__NetworkDriverOpt__Group__0"
    // InternalDockerCompose.g:6949:1: rule__NetworkDriverOpt__Group__0 : rule__NetworkDriverOpt__Group__0__Impl rule__NetworkDriverOpt__Group__1 ;
    public final void rule__NetworkDriverOpt__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6953:1: ( rule__NetworkDriverOpt__Group__0__Impl rule__NetworkDriverOpt__Group__1 )
            // InternalDockerCompose.g:6954:2: rule__NetworkDriverOpt__Group__0__Impl rule__NetworkDriverOpt__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__NetworkDriverOpt__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__0"


    // $ANTLR start "rule__NetworkDriverOpt__Group__0__Impl"
    // InternalDockerCompose.g:6961:1: rule__NetworkDriverOpt__Group__0__Impl : ( () ) ;
    public final void rule__NetworkDriverOpt__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6965:1: ( ( () ) )
            // InternalDockerCompose.g:6966:1: ( () )
            {
            // InternalDockerCompose.g:6966:1: ( () )
            // InternalDockerCompose.g:6967:2: ()
            {
             before(grammarAccess.getNetworkDriverOptAccess().getNetworkDriverOptAction_0()); 
            // InternalDockerCompose.g:6968:2: ()
            // InternalDockerCompose.g:6968:3: 
            {
            }

             after(grammarAccess.getNetworkDriverOptAccess().getNetworkDriverOptAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__0__Impl"


    // $ANTLR start "rule__NetworkDriverOpt__Group__1"
    // InternalDockerCompose.g:6976:1: rule__NetworkDriverOpt__Group__1 : rule__NetworkDriverOpt__Group__1__Impl rule__NetworkDriverOpt__Group__2 ;
    public final void rule__NetworkDriverOpt__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6980:1: ( rule__NetworkDriverOpt__Group__1__Impl rule__NetworkDriverOpt__Group__2 )
            // InternalDockerCompose.g:6981:2: rule__NetworkDriverOpt__Group__1__Impl rule__NetworkDriverOpt__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__NetworkDriverOpt__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__1"


    // $ANTLR start "rule__NetworkDriverOpt__Group__1__Impl"
    // InternalDockerCompose.g:6988:1: rule__NetworkDriverOpt__Group__1__Impl : ( ( rule__NetworkDriverOpt__NameAssignment_1 ) ) ;
    public final void rule__NetworkDriverOpt__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6992:1: ( ( ( rule__NetworkDriverOpt__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:6993:1: ( ( rule__NetworkDriverOpt__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:6993:1: ( ( rule__NetworkDriverOpt__NameAssignment_1 ) )
            // InternalDockerCompose.g:6994:2: ( rule__NetworkDriverOpt__NameAssignment_1 )
            {
             before(grammarAccess.getNetworkDriverOptAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:6995:2: ( rule__NetworkDriverOpt__NameAssignment_1 )
            // InternalDockerCompose.g:6995:3: rule__NetworkDriverOpt__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkDriverOptAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__1__Impl"


    // $ANTLR start "rule__NetworkDriverOpt__Group__2"
    // InternalDockerCompose.g:7003:1: rule__NetworkDriverOpt__Group__2 : rule__NetworkDriverOpt__Group__2__Impl rule__NetworkDriverOpt__Group__3 ;
    public final void rule__NetworkDriverOpt__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7007:1: ( rule__NetworkDriverOpt__Group__2__Impl rule__NetworkDriverOpt__Group__3 )
            // InternalDockerCompose.g:7008:2: rule__NetworkDriverOpt__Group__2__Impl rule__NetworkDriverOpt__Group__3
            {
            pushFollow(FOLLOW_5);
            rule__NetworkDriverOpt__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__2"


    // $ANTLR start "rule__NetworkDriverOpt__Group__2__Impl"
    // InternalDockerCompose.g:7015:1: rule__NetworkDriverOpt__Group__2__Impl : ( ':' ) ;
    public final void rule__NetworkDriverOpt__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7019:1: ( ( ':' ) )
            // InternalDockerCompose.g:7020:1: ( ':' )
            {
            // InternalDockerCompose.g:7020:1: ( ':' )
            // InternalDockerCompose.g:7021:2: ':'
            {
             before(grammarAccess.getNetworkDriverOptAccess().getColonKeyword_2()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getNetworkDriverOptAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__2__Impl"


    // $ANTLR start "rule__NetworkDriverOpt__Group__3"
    // InternalDockerCompose.g:7030:1: rule__NetworkDriverOpt__Group__3 : rule__NetworkDriverOpt__Group__3__Impl ;
    public final void rule__NetworkDriverOpt__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7034:1: ( rule__NetworkDriverOpt__Group__3__Impl )
            // InternalDockerCompose.g:7035:2: rule__NetworkDriverOpt__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__3"


    // $ANTLR start "rule__NetworkDriverOpt__Group__3__Impl"
    // InternalDockerCompose.g:7041:1: rule__NetworkDriverOpt__Group__3__Impl : ( ( rule__NetworkDriverOpt__ValueAssignment_3 ) ) ;
    public final void rule__NetworkDriverOpt__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7045:1: ( ( ( rule__NetworkDriverOpt__ValueAssignment_3 ) ) )
            // InternalDockerCompose.g:7046:1: ( ( rule__NetworkDriverOpt__ValueAssignment_3 ) )
            {
            // InternalDockerCompose.g:7046:1: ( ( rule__NetworkDriverOpt__ValueAssignment_3 ) )
            // InternalDockerCompose.g:7047:2: ( rule__NetworkDriverOpt__ValueAssignment_3 )
            {
             before(grammarAccess.getNetworkDriverOptAccess().getValueAssignment_3()); 
            // InternalDockerCompose.g:7048:2: ( rule__NetworkDriverOpt__ValueAssignment_3 )
            // InternalDockerCompose.g:7048:3: rule__NetworkDriverOpt__ValueAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__ValueAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getNetworkDriverOptAccess().getValueAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__3__Impl"


    // $ANTLR start "rule__IPAM__Group__0"
    // InternalDockerCompose.g:7057:1: rule__IPAM__Group__0 : rule__IPAM__Group__0__Impl rule__IPAM__Group__1 ;
    public final void rule__IPAM__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7061:1: ( rule__IPAM__Group__0__Impl rule__IPAM__Group__1 )
            // InternalDockerCompose.g:7062:2: rule__IPAM__Group__0__Impl rule__IPAM__Group__1
            {
            pushFollow(FOLLOW_33);
            rule__IPAM__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAM__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group__0"


    // $ANTLR start "rule__IPAM__Group__0__Impl"
    // InternalDockerCompose.g:7069:1: rule__IPAM__Group__0__Impl : ( () ) ;
    public final void rule__IPAM__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7073:1: ( ( () ) )
            // InternalDockerCompose.g:7074:1: ( () )
            {
            // InternalDockerCompose.g:7074:1: ( () )
            // InternalDockerCompose.g:7075:2: ()
            {
             before(grammarAccess.getIPAMAccess().getIPAMAction_0()); 
            // InternalDockerCompose.g:7076:2: ()
            // InternalDockerCompose.g:7076:3: 
            {
            }

             after(grammarAccess.getIPAMAccess().getIPAMAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group__0__Impl"


    // $ANTLR start "rule__IPAM__Group__1"
    // InternalDockerCompose.g:7084:1: rule__IPAM__Group__1 : rule__IPAM__Group__1__Impl ;
    public final void rule__IPAM__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7088:1: ( rule__IPAM__Group__1__Impl )
            // InternalDockerCompose.g:7089:2: rule__IPAM__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group__1"


    // $ANTLR start "rule__IPAM__Group__1__Impl"
    // InternalDockerCompose.g:7095:1: rule__IPAM__Group__1__Impl : ( ( rule__IPAM__UnorderedGroup_1 ) ) ;
    public final void rule__IPAM__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7099:1: ( ( ( rule__IPAM__UnorderedGroup_1 ) ) )
            // InternalDockerCompose.g:7100:1: ( ( rule__IPAM__UnorderedGroup_1 ) )
            {
            // InternalDockerCompose.g:7100:1: ( ( rule__IPAM__UnorderedGroup_1 ) )
            // InternalDockerCompose.g:7101:2: ( rule__IPAM__UnorderedGroup_1 )
            {
             before(grammarAccess.getIPAMAccess().getUnorderedGroup_1()); 
            // InternalDockerCompose.g:7102:2: ( rule__IPAM__UnorderedGroup_1 )
            // InternalDockerCompose.g:7102:3: rule__IPAM__UnorderedGroup_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__UnorderedGroup_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAccess().getUnorderedGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group__1__Impl"


    // $ANTLR start "rule__IPAM__Group_1_0__0"
    // InternalDockerCompose.g:7111:1: rule__IPAM__Group_1_0__0 : rule__IPAM__Group_1_0__0__Impl rule__IPAM__Group_1_0__1 ;
    public final void rule__IPAM__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7115:1: ( rule__IPAM__Group_1_0__0__Impl rule__IPAM__Group_1_0__1 )
            // InternalDockerCompose.g:7116:2: rule__IPAM__Group_1_0__0__Impl rule__IPAM__Group_1_0__1
            {
            pushFollow(FOLLOW_5);
            rule__IPAM__Group_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_0__0"


    // $ANTLR start "rule__IPAM__Group_1_0__0__Impl"
    // InternalDockerCompose.g:7123:1: rule__IPAM__Group_1_0__0__Impl : ( 'driver:' ) ;
    public final void rule__IPAM__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7127:1: ( ( 'driver:' ) )
            // InternalDockerCompose.g:7128:1: ( 'driver:' )
            {
            // InternalDockerCompose.g:7128:1: ( 'driver:' )
            // InternalDockerCompose.g:7129:2: 'driver:'
            {
             before(grammarAccess.getIPAMAccess().getDriverKeyword_1_0_0()); 
            match(input,72,FOLLOW_2); 
             after(grammarAccess.getIPAMAccess().getDriverKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_0__0__Impl"


    // $ANTLR start "rule__IPAM__Group_1_0__1"
    // InternalDockerCompose.g:7138:1: rule__IPAM__Group_1_0__1 : rule__IPAM__Group_1_0__1__Impl ;
    public final void rule__IPAM__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7142:1: ( rule__IPAM__Group_1_0__1__Impl )
            // InternalDockerCompose.g:7143:2: rule__IPAM__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_0__1"


    // $ANTLR start "rule__IPAM__Group_1_0__1__Impl"
    // InternalDockerCompose.g:7149:1: rule__IPAM__Group_1_0__1__Impl : ( ( rule__IPAM__DriverAssignment_1_0_1 ) ) ;
    public final void rule__IPAM__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7153:1: ( ( ( rule__IPAM__DriverAssignment_1_0_1 ) ) )
            // InternalDockerCompose.g:7154:1: ( ( rule__IPAM__DriverAssignment_1_0_1 ) )
            {
            // InternalDockerCompose.g:7154:1: ( ( rule__IPAM__DriverAssignment_1_0_1 ) )
            // InternalDockerCompose.g:7155:2: ( rule__IPAM__DriverAssignment_1_0_1 )
            {
             before(grammarAccess.getIPAMAccess().getDriverAssignment_1_0_1()); 
            // InternalDockerCompose.g:7156:2: ( rule__IPAM__DriverAssignment_1_0_1 )
            // InternalDockerCompose.g:7156:3: rule__IPAM__DriverAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__DriverAssignment_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAccess().getDriverAssignment_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_0__1__Impl"


    // $ANTLR start "rule__IPAM__Group_1_1__0"
    // InternalDockerCompose.g:7165:1: rule__IPAM__Group_1_1__0 : rule__IPAM__Group_1_1__0__Impl rule__IPAM__Group_1_1__1 ;
    public final void rule__IPAM__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7169:1: ( rule__IPAM__Group_1_1__0__Impl rule__IPAM__Group_1_1__1 )
            // InternalDockerCompose.g:7170:2: rule__IPAM__Group_1_1__0__Impl rule__IPAM__Group_1_1__1
            {
            pushFollow(FOLLOW_13);
            rule__IPAM__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1__0"


    // $ANTLR start "rule__IPAM__Group_1_1__0__Impl"
    // InternalDockerCompose.g:7177:1: rule__IPAM__Group_1_1__0__Impl : ( 'config:' ) ;
    public final void rule__IPAM__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7181:1: ( ( 'config:' ) )
            // InternalDockerCompose.g:7182:1: ( 'config:' )
            {
            // InternalDockerCompose.g:7182:1: ( 'config:' )
            // InternalDockerCompose.g:7183:2: 'config:'
            {
             before(grammarAccess.getIPAMAccess().getConfigKeyword_1_1_0()); 
            match(input,83,FOLLOW_2); 
             after(grammarAccess.getIPAMAccess().getConfigKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1__0__Impl"


    // $ANTLR start "rule__IPAM__Group_1_1__1"
    // InternalDockerCompose.g:7192:1: rule__IPAM__Group_1_1__1 : rule__IPAM__Group_1_1__1__Impl ;
    public final void rule__IPAM__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7196:1: ( rule__IPAM__Group_1_1__1__Impl )
            // InternalDockerCompose.g:7197:2: rule__IPAM__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1__1"


    // $ANTLR start "rule__IPAM__Group_1_1__1__Impl"
    // InternalDockerCompose.g:7203:1: rule__IPAM__Group_1_1__1__Impl : ( ( ( rule__IPAM__Group_1_1_1__0 ) ) ( ( rule__IPAM__Group_1_1_1__0 )* ) ) ;
    public final void rule__IPAM__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7207:1: ( ( ( ( rule__IPAM__Group_1_1_1__0 ) ) ( ( rule__IPAM__Group_1_1_1__0 )* ) ) )
            // InternalDockerCompose.g:7208:1: ( ( ( rule__IPAM__Group_1_1_1__0 ) ) ( ( rule__IPAM__Group_1_1_1__0 )* ) )
            {
            // InternalDockerCompose.g:7208:1: ( ( ( rule__IPAM__Group_1_1_1__0 ) ) ( ( rule__IPAM__Group_1_1_1__0 )* ) )
            // InternalDockerCompose.g:7209:2: ( ( rule__IPAM__Group_1_1_1__0 ) ) ( ( rule__IPAM__Group_1_1_1__0 )* )
            {
            // InternalDockerCompose.g:7209:2: ( ( rule__IPAM__Group_1_1_1__0 ) )
            // InternalDockerCompose.g:7210:3: ( rule__IPAM__Group_1_1_1__0 )
            {
             before(grammarAccess.getIPAMAccess().getGroup_1_1_1()); 
            // InternalDockerCompose.g:7211:3: ( rule__IPAM__Group_1_1_1__0 )
            // InternalDockerCompose.g:7211:4: rule__IPAM__Group_1_1_1__0
            {
            pushFollow(FOLLOW_3);
            rule__IPAM__Group_1_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAccess().getGroup_1_1_1()); 

            }

            // InternalDockerCompose.g:7214:2: ( ( rule__IPAM__Group_1_1_1__0 )* )
            // InternalDockerCompose.g:7215:3: ( rule__IPAM__Group_1_1_1__0 )*
            {
             before(grammarAccess.getIPAMAccess().getGroup_1_1_1()); 
            // InternalDockerCompose.g:7216:3: ( rule__IPAM__Group_1_1_1__0 )*
            loop36:
            do {
                int alt36=2;
                int LA36_0 = input.LA(1);

                if ( (LA36_0==50) ) {
                    alt36=1;
                }


                switch (alt36) {
            	case 1 :
            	    // InternalDockerCompose.g:7216:4: rule__IPAM__Group_1_1_1__0
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__IPAM__Group_1_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop36;
                }
            } while (true);

             after(grammarAccess.getIPAMAccess().getGroup_1_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1__1__Impl"


    // $ANTLR start "rule__IPAM__Group_1_1_1__0"
    // InternalDockerCompose.g:7226:1: rule__IPAM__Group_1_1_1__0 : rule__IPAM__Group_1_1_1__0__Impl rule__IPAM__Group_1_1_1__1 ;
    public final void rule__IPAM__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7230:1: ( rule__IPAM__Group_1_1_1__0__Impl rule__IPAM__Group_1_1_1__1 )
            // InternalDockerCompose.g:7231:2: rule__IPAM__Group_1_1_1__0__Impl rule__IPAM__Group_1_1_1__1
            {
            pushFollow(FOLLOW_37);
            rule__IPAM__Group_1_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1_1__0"


    // $ANTLR start "rule__IPAM__Group_1_1_1__0__Impl"
    // InternalDockerCompose.g:7238:1: rule__IPAM__Group_1_1_1__0__Impl : ( '-' ) ;
    public final void rule__IPAM__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7242:1: ( ( '-' ) )
            // InternalDockerCompose.g:7243:1: ( '-' )
            {
            // InternalDockerCompose.g:7243:1: ( '-' )
            // InternalDockerCompose.g:7244:2: '-'
            {
             before(grammarAccess.getIPAMAccess().getHyphenMinusKeyword_1_1_1_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getIPAMAccess().getHyphenMinusKeyword_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__IPAM__Group_1_1_1__1"
    // InternalDockerCompose.g:7253:1: rule__IPAM__Group_1_1_1__1 : rule__IPAM__Group_1_1_1__1__Impl ;
    public final void rule__IPAM__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7257:1: ( rule__IPAM__Group_1_1_1__1__Impl )
            // InternalDockerCompose.g:7258:2: rule__IPAM__Group_1_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1_1__1"


    // $ANTLR start "rule__IPAM__Group_1_1_1__1__Impl"
    // InternalDockerCompose.g:7264:1: rule__IPAM__Group_1_1_1__1__Impl : ( ( rule__IPAM__ConfigsAssignment_1_1_1_1 ) ) ;
    public final void rule__IPAM__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7268:1: ( ( ( rule__IPAM__ConfigsAssignment_1_1_1_1 ) ) )
            // InternalDockerCompose.g:7269:1: ( ( rule__IPAM__ConfigsAssignment_1_1_1_1 ) )
            {
            // InternalDockerCompose.g:7269:1: ( ( rule__IPAM__ConfigsAssignment_1_1_1_1 ) )
            // InternalDockerCompose.g:7270:2: ( rule__IPAM__ConfigsAssignment_1_1_1_1 )
            {
             before(grammarAccess.getIPAMAccess().getConfigsAssignment_1_1_1_1()); 
            // InternalDockerCompose.g:7271:2: ( rule__IPAM__ConfigsAssignment_1_1_1_1 )
            // InternalDockerCompose.g:7271:3: rule__IPAM__ConfigsAssignment_1_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__ConfigsAssignment_1_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAccess().getConfigsAssignment_1_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__IPAM__Group_1_2__0"
    // InternalDockerCompose.g:7280:1: rule__IPAM__Group_1_2__0 : rule__IPAM__Group_1_2__0__Impl rule__IPAM__Group_1_2__1 ;
    public final void rule__IPAM__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7284:1: ( rule__IPAM__Group_1_2__0__Impl rule__IPAM__Group_1_2__1 )
            // InternalDockerCompose.g:7285:2: rule__IPAM__Group_1_2__0__Impl rule__IPAM__Group_1_2__1
            {
            pushFollow(FOLLOW_5);
            rule__IPAM__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_2__0"


    // $ANTLR start "rule__IPAM__Group_1_2__0__Impl"
    // InternalDockerCompose.g:7292:1: rule__IPAM__Group_1_2__0__Impl : ( 'options:' ) ;
    public final void rule__IPAM__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7296:1: ( ( 'options:' ) )
            // InternalDockerCompose.g:7297:1: ( 'options:' )
            {
            // InternalDockerCompose.g:7297:1: ( 'options:' )
            // InternalDockerCompose.g:7298:2: 'options:'
            {
             before(grammarAccess.getIPAMAccess().getOptionsKeyword_1_2_0()); 
            match(input,84,FOLLOW_2); 
             after(grammarAccess.getIPAMAccess().getOptionsKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_2__0__Impl"


    // $ANTLR start "rule__IPAM__Group_1_2__1"
    // InternalDockerCompose.g:7307:1: rule__IPAM__Group_1_2__1 : rule__IPAM__Group_1_2__1__Impl ;
    public final void rule__IPAM__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7311:1: ( rule__IPAM__Group_1_2__1__Impl )
            // InternalDockerCompose.g:7312:2: rule__IPAM__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_2__1"


    // $ANTLR start "rule__IPAM__Group_1_2__1__Impl"
    // InternalDockerCompose.g:7318:1: rule__IPAM__Group_1_2__1__Impl : ( ( ( rule__IPAM__OptionsAssignment_1_2_1 ) ) ( ( rule__IPAM__OptionsAssignment_1_2_1 )* ) ) ;
    public final void rule__IPAM__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7322:1: ( ( ( ( rule__IPAM__OptionsAssignment_1_2_1 ) ) ( ( rule__IPAM__OptionsAssignment_1_2_1 )* ) ) )
            // InternalDockerCompose.g:7323:1: ( ( ( rule__IPAM__OptionsAssignment_1_2_1 ) ) ( ( rule__IPAM__OptionsAssignment_1_2_1 )* ) )
            {
            // InternalDockerCompose.g:7323:1: ( ( ( rule__IPAM__OptionsAssignment_1_2_1 ) ) ( ( rule__IPAM__OptionsAssignment_1_2_1 )* ) )
            // InternalDockerCompose.g:7324:2: ( ( rule__IPAM__OptionsAssignment_1_2_1 ) ) ( ( rule__IPAM__OptionsAssignment_1_2_1 )* )
            {
            // InternalDockerCompose.g:7324:2: ( ( rule__IPAM__OptionsAssignment_1_2_1 ) )
            // InternalDockerCompose.g:7325:3: ( rule__IPAM__OptionsAssignment_1_2_1 )
            {
             before(grammarAccess.getIPAMAccess().getOptionsAssignment_1_2_1()); 
            // InternalDockerCompose.g:7326:3: ( rule__IPAM__OptionsAssignment_1_2_1 )
            // InternalDockerCompose.g:7326:4: rule__IPAM__OptionsAssignment_1_2_1
            {
            pushFollow(FOLLOW_6);
            rule__IPAM__OptionsAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAccess().getOptionsAssignment_1_2_1()); 

            }

            // InternalDockerCompose.g:7329:2: ( ( rule__IPAM__OptionsAssignment_1_2_1 )* )
            // InternalDockerCompose.g:7330:3: ( rule__IPAM__OptionsAssignment_1_2_1 )*
            {
             before(grammarAccess.getIPAMAccess().getOptionsAssignment_1_2_1()); 
            // InternalDockerCompose.g:7331:3: ( rule__IPAM__OptionsAssignment_1_2_1 )*
            loop37:
            do {
                int alt37=2;
                int LA37_0 = input.LA(1);

                if ( (LA37_0==RULE_STRING) ) {
                    int LA37_2 = input.LA(2);

                    if ( (LA37_2==40) ) {
                        int LA37_4 = input.LA(3);

                        if ( (LA37_4==RULE_STRING) ) {
                            int LA37_5 = input.LA(4);

                            if ( (LA37_5==EOF||(LA37_5>=RULE_STRING && LA37_5<=RULE_ID)||(LA37_5>=34 && LA37_5<=39)||(LA37_5>=72 && LA37_5<=80)||(LA37_5>=83 && LA37_5<=84)) ) {
                                alt37=1;
                            }


                        }
                        else if ( (LA37_4==RULE_ID) ) {
                            int LA37_6 = input.LA(4);

                            if ( (LA37_6==EOF||(LA37_6>=RULE_STRING && LA37_6<=RULE_ID)||(LA37_6>=34 && LA37_6<=39)||(LA37_6>=72 && LA37_6<=80)||(LA37_6>=83 && LA37_6<=84)) ) {
                                alt37=1;
                            }


                        }


                    }


                }
                else if ( (LA37_0==RULE_ID) ) {
                    int LA37_3 = input.LA(2);

                    if ( (LA37_3==40) ) {
                        int LA37_4 = input.LA(3);

                        if ( (LA37_4==RULE_STRING) ) {
                            int LA37_5 = input.LA(4);

                            if ( (LA37_5==EOF||(LA37_5>=RULE_STRING && LA37_5<=RULE_ID)||(LA37_5>=34 && LA37_5<=39)||(LA37_5>=72 && LA37_5<=80)||(LA37_5>=83 && LA37_5<=84)) ) {
                                alt37=1;
                            }


                        }
                        else if ( (LA37_4==RULE_ID) ) {
                            int LA37_6 = input.LA(4);

                            if ( (LA37_6==EOF||(LA37_6>=RULE_STRING && LA37_6<=RULE_ID)||(LA37_6>=34 && LA37_6<=39)||(LA37_6>=72 && LA37_6<=80)||(LA37_6>=83 && LA37_6<=84)) ) {
                                alt37=1;
                            }


                        }


                    }


                }


                switch (alt37) {
            	case 1 :
            	    // InternalDockerCompose.g:7331:4: rule__IPAM__OptionsAssignment_1_2_1
            	    {
            	    pushFollow(FOLLOW_6);
            	    rule__IPAM__OptionsAssignment_1_2_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop37;
                }
            } while (true);

             after(grammarAccess.getIPAMAccess().getOptionsAssignment_1_2_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_2__1__Impl"


    // $ANTLR start "rule__IPAMConfig__Group__0"
    // InternalDockerCompose.g:7341:1: rule__IPAMConfig__Group__0 : rule__IPAMConfig__Group__0__Impl rule__IPAMConfig__Group__1 ;
    public final void rule__IPAMConfig__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7345:1: ( rule__IPAMConfig__Group__0__Impl rule__IPAMConfig__Group__1 )
            // InternalDockerCompose.g:7346:2: rule__IPAMConfig__Group__0__Impl rule__IPAMConfig__Group__1
            {
            pushFollow(FOLLOW_37);
            rule__IPAMConfig__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group__0"


    // $ANTLR start "rule__IPAMConfig__Group__0__Impl"
    // InternalDockerCompose.g:7353:1: rule__IPAMConfig__Group__0__Impl : ( () ) ;
    public final void rule__IPAMConfig__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7357:1: ( ( () ) )
            // InternalDockerCompose.g:7358:1: ( () )
            {
            // InternalDockerCompose.g:7358:1: ( () )
            // InternalDockerCompose.g:7359:2: ()
            {
             before(grammarAccess.getIPAMConfigAccess().getIPAMConfigAction_0()); 
            // InternalDockerCompose.g:7360:2: ()
            // InternalDockerCompose.g:7360:3: 
            {
            }

             after(grammarAccess.getIPAMConfigAccess().getIPAMConfigAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group__0__Impl"


    // $ANTLR start "rule__IPAMConfig__Group__1"
    // InternalDockerCompose.g:7368:1: rule__IPAMConfig__Group__1 : rule__IPAMConfig__Group__1__Impl ;
    public final void rule__IPAMConfig__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7372:1: ( rule__IPAMConfig__Group__1__Impl )
            // InternalDockerCompose.g:7373:2: rule__IPAMConfig__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group__1"


    // $ANTLR start "rule__IPAMConfig__Group__1__Impl"
    // InternalDockerCompose.g:7379:1: rule__IPAMConfig__Group__1__Impl : ( ( rule__IPAMConfig__UnorderedGroup_1 ) ) ;
    public final void rule__IPAMConfig__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7383:1: ( ( ( rule__IPAMConfig__UnorderedGroup_1 ) ) )
            // InternalDockerCompose.g:7384:1: ( ( rule__IPAMConfig__UnorderedGroup_1 ) )
            {
            // InternalDockerCompose.g:7384:1: ( ( rule__IPAMConfig__UnorderedGroup_1 ) )
            // InternalDockerCompose.g:7385:2: ( rule__IPAMConfig__UnorderedGroup_1 )
            {
             before(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1()); 
            // InternalDockerCompose.g:7386:2: ( rule__IPAMConfig__UnorderedGroup_1 )
            // InternalDockerCompose.g:7386:3: rule__IPAMConfig__UnorderedGroup_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__UnorderedGroup_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group__1__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_0__0"
    // InternalDockerCompose.g:7395:1: rule__IPAMConfig__Group_1_0__0 : rule__IPAMConfig__Group_1_0__0__Impl rule__IPAMConfig__Group_1_0__1 ;
    public final void rule__IPAMConfig__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7399:1: ( rule__IPAMConfig__Group_1_0__0__Impl rule__IPAMConfig__Group_1_0__1 )
            // InternalDockerCompose.g:7400:2: rule__IPAMConfig__Group_1_0__0__Impl rule__IPAMConfig__Group_1_0__1
            {
            pushFollow(FOLLOW_10);
            rule__IPAMConfig__Group_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_0__0"


    // $ANTLR start "rule__IPAMConfig__Group_1_0__0__Impl"
    // InternalDockerCompose.g:7407:1: rule__IPAMConfig__Group_1_0__0__Impl : ( 'subnet:' ) ;
    public final void rule__IPAMConfig__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7411:1: ( ( 'subnet:' ) )
            // InternalDockerCompose.g:7412:1: ( 'subnet:' )
            {
            // InternalDockerCompose.g:7412:1: ( 'subnet:' )
            // InternalDockerCompose.g:7413:2: 'subnet:'
            {
             before(grammarAccess.getIPAMConfigAccess().getSubnetKeyword_1_0_0()); 
            match(input,85,FOLLOW_2); 
             after(grammarAccess.getIPAMConfigAccess().getSubnetKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_0__0__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_0__1"
    // InternalDockerCompose.g:7422:1: rule__IPAMConfig__Group_1_0__1 : rule__IPAMConfig__Group_1_0__1__Impl ;
    public final void rule__IPAMConfig__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7426:1: ( rule__IPAMConfig__Group_1_0__1__Impl )
            // InternalDockerCompose.g:7427:2: rule__IPAMConfig__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_0__1"


    // $ANTLR start "rule__IPAMConfig__Group_1_0__1__Impl"
    // InternalDockerCompose.g:7433:1: rule__IPAMConfig__Group_1_0__1__Impl : ( ( rule__IPAMConfig__SubnetAssignment_1_0_1 ) ) ;
    public final void rule__IPAMConfig__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7437:1: ( ( ( rule__IPAMConfig__SubnetAssignment_1_0_1 ) ) )
            // InternalDockerCompose.g:7438:1: ( ( rule__IPAMConfig__SubnetAssignment_1_0_1 ) )
            {
            // InternalDockerCompose.g:7438:1: ( ( rule__IPAMConfig__SubnetAssignment_1_0_1 ) )
            // InternalDockerCompose.g:7439:2: ( rule__IPAMConfig__SubnetAssignment_1_0_1 )
            {
             before(grammarAccess.getIPAMConfigAccess().getSubnetAssignment_1_0_1()); 
            // InternalDockerCompose.g:7440:2: ( rule__IPAMConfig__SubnetAssignment_1_0_1 )
            // InternalDockerCompose.g:7440:3: rule__IPAMConfig__SubnetAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__SubnetAssignment_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMConfigAccess().getSubnetAssignment_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_0__1__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_1__0"
    // InternalDockerCompose.g:7449:1: rule__IPAMConfig__Group_1_1__0 : rule__IPAMConfig__Group_1_1__0__Impl rule__IPAMConfig__Group_1_1__1 ;
    public final void rule__IPAMConfig__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7453:1: ( rule__IPAMConfig__Group_1_1__0__Impl rule__IPAMConfig__Group_1_1__1 )
            // InternalDockerCompose.g:7454:2: rule__IPAMConfig__Group_1_1__0__Impl rule__IPAMConfig__Group_1_1__1
            {
            pushFollow(FOLLOW_10);
            rule__IPAMConfig__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_1__0"


    // $ANTLR start "rule__IPAMConfig__Group_1_1__0__Impl"
    // InternalDockerCompose.g:7461:1: rule__IPAMConfig__Group_1_1__0__Impl : ( 'ip_range:' ) ;
    public final void rule__IPAMConfig__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7465:1: ( ( 'ip_range:' ) )
            // InternalDockerCompose.g:7466:1: ( 'ip_range:' )
            {
            // InternalDockerCompose.g:7466:1: ( 'ip_range:' )
            // InternalDockerCompose.g:7467:2: 'ip_range:'
            {
             before(grammarAccess.getIPAMConfigAccess().getIp_rangeKeyword_1_1_0()); 
            match(input,86,FOLLOW_2); 
             after(grammarAccess.getIPAMConfigAccess().getIp_rangeKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_1__0__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_1__1"
    // InternalDockerCompose.g:7476:1: rule__IPAMConfig__Group_1_1__1 : rule__IPAMConfig__Group_1_1__1__Impl ;
    public final void rule__IPAMConfig__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7480:1: ( rule__IPAMConfig__Group_1_1__1__Impl )
            // InternalDockerCompose.g:7481:2: rule__IPAMConfig__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_1__1"


    // $ANTLR start "rule__IPAMConfig__Group_1_1__1__Impl"
    // InternalDockerCompose.g:7487:1: rule__IPAMConfig__Group_1_1__1__Impl : ( ( rule__IPAMConfig__Ip_rangeAssignment_1_1_1 ) ) ;
    public final void rule__IPAMConfig__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7491:1: ( ( ( rule__IPAMConfig__Ip_rangeAssignment_1_1_1 ) ) )
            // InternalDockerCompose.g:7492:1: ( ( rule__IPAMConfig__Ip_rangeAssignment_1_1_1 ) )
            {
            // InternalDockerCompose.g:7492:1: ( ( rule__IPAMConfig__Ip_rangeAssignment_1_1_1 ) )
            // InternalDockerCompose.g:7493:2: ( rule__IPAMConfig__Ip_rangeAssignment_1_1_1 )
            {
             before(grammarAccess.getIPAMConfigAccess().getIp_rangeAssignment_1_1_1()); 
            // InternalDockerCompose.g:7494:2: ( rule__IPAMConfig__Ip_rangeAssignment_1_1_1 )
            // InternalDockerCompose.g:7494:3: rule__IPAMConfig__Ip_rangeAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Ip_rangeAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMConfigAccess().getIp_rangeAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_1__1__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_2__0"
    // InternalDockerCompose.g:7503:1: rule__IPAMConfig__Group_1_2__0 : rule__IPAMConfig__Group_1_2__0__Impl rule__IPAMConfig__Group_1_2__1 ;
    public final void rule__IPAMConfig__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7507:1: ( rule__IPAMConfig__Group_1_2__0__Impl rule__IPAMConfig__Group_1_2__1 )
            // InternalDockerCompose.g:7508:2: rule__IPAMConfig__Group_1_2__0__Impl rule__IPAMConfig__Group_1_2__1
            {
            pushFollow(FOLLOW_19);
            rule__IPAMConfig__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_2__0"


    // $ANTLR start "rule__IPAMConfig__Group_1_2__0__Impl"
    // InternalDockerCompose.g:7515:1: rule__IPAMConfig__Group_1_2__0__Impl : ( 'gateway:' ) ;
    public final void rule__IPAMConfig__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7519:1: ( ( 'gateway:' ) )
            // InternalDockerCompose.g:7520:1: ( 'gateway:' )
            {
            // InternalDockerCompose.g:7520:1: ( 'gateway:' )
            // InternalDockerCompose.g:7521:2: 'gateway:'
            {
             before(grammarAccess.getIPAMConfigAccess().getGatewayKeyword_1_2_0()); 
            match(input,87,FOLLOW_2); 
             after(grammarAccess.getIPAMConfigAccess().getGatewayKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_2__0__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_2__1"
    // InternalDockerCompose.g:7530:1: rule__IPAMConfig__Group_1_2__1 : rule__IPAMConfig__Group_1_2__1__Impl ;
    public final void rule__IPAMConfig__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7534:1: ( rule__IPAMConfig__Group_1_2__1__Impl )
            // InternalDockerCompose.g:7535:2: rule__IPAMConfig__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_2__1"


    // $ANTLR start "rule__IPAMConfig__Group_1_2__1__Impl"
    // InternalDockerCompose.g:7541:1: rule__IPAMConfig__Group_1_2__1__Impl : ( ( rule__IPAMConfig__GatewayAssignment_1_2_1 ) ) ;
    public final void rule__IPAMConfig__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7545:1: ( ( ( rule__IPAMConfig__GatewayAssignment_1_2_1 ) ) )
            // InternalDockerCompose.g:7546:1: ( ( rule__IPAMConfig__GatewayAssignment_1_2_1 ) )
            {
            // InternalDockerCompose.g:7546:1: ( ( rule__IPAMConfig__GatewayAssignment_1_2_1 ) )
            // InternalDockerCompose.g:7547:2: ( rule__IPAMConfig__GatewayAssignment_1_2_1 )
            {
             before(grammarAccess.getIPAMConfigAccess().getGatewayAssignment_1_2_1()); 
            // InternalDockerCompose.g:7548:2: ( rule__IPAMConfig__GatewayAssignment_1_2_1 )
            // InternalDockerCompose.g:7548:3: rule__IPAMConfig__GatewayAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__GatewayAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMConfigAccess().getGatewayAssignment_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_2__1__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_3__0"
    // InternalDockerCompose.g:7557:1: rule__IPAMConfig__Group_1_3__0 : rule__IPAMConfig__Group_1_3__0__Impl rule__IPAMConfig__Group_1_3__1 ;
    public final void rule__IPAMConfig__Group_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7561:1: ( rule__IPAMConfig__Group_1_3__0__Impl rule__IPAMConfig__Group_1_3__1 )
            // InternalDockerCompose.g:7562:2: rule__IPAMConfig__Group_1_3__0__Impl rule__IPAMConfig__Group_1_3__1
            {
            pushFollow(FOLLOW_5);
            rule__IPAMConfig__Group_1_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_3__0"


    // $ANTLR start "rule__IPAMConfig__Group_1_3__0__Impl"
    // InternalDockerCompose.g:7569:1: rule__IPAMConfig__Group_1_3__0__Impl : ( 'aux_addresses:' ) ;
    public final void rule__IPAMConfig__Group_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7573:1: ( ( 'aux_addresses:' ) )
            // InternalDockerCompose.g:7574:1: ( 'aux_addresses:' )
            {
            // InternalDockerCompose.g:7574:1: ( 'aux_addresses:' )
            // InternalDockerCompose.g:7575:2: 'aux_addresses:'
            {
             before(grammarAccess.getIPAMConfigAccess().getAux_addressesKeyword_1_3_0()); 
            match(input,88,FOLLOW_2); 
             after(grammarAccess.getIPAMConfigAccess().getAux_addressesKeyword_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_3__0__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_3__1"
    // InternalDockerCompose.g:7584:1: rule__IPAMConfig__Group_1_3__1 : rule__IPAMConfig__Group_1_3__1__Impl ;
    public final void rule__IPAMConfig__Group_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7588:1: ( rule__IPAMConfig__Group_1_3__1__Impl )
            // InternalDockerCompose.g:7589:2: rule__IPAMConfig__Group_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_3__1"


    // $ANTLR start "rule__IPAMConfig__Group_1_3__1__Impl"
    // InternalDockerCompose.g:7595:1: rule__IPAMConfig__Group_1_3__1__Impl : ( ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 ) ) ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )* ) ) ;
    public final void rule__IPAMConfig__Group_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7599:1: ( ( ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 ) ) ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )* ) ) )
            // InternalDockerCompose.g:7600:1: ( ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 ) ) ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )* ) )
            {
            // InternalDockerCompose.g:7600:1: ( ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 ) ) ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )* ) )
            // InternalDockerCompose.g:7601:2: ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 ) ) ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )* )
            {
            // InternalDockerCompose.g:7601:2: ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 ) )
            // InternalDockerCompose.g:7602:3: ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )
            {
             before(grammarAccess.getIPAMConfigAccess().getAux_addressesAssignment_1_3_1()); 
            // InternalDockerCompose.g:7603:3: ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )
            // InternalDockerCompose.g:7603:4: rule__IPAMConfig__Aux_addressesAssignment_1_3_1
            {
            pushFollow(FOLLOW_6);
            rule__IPAMConfig__Aux_addressesAssignment_1_3_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMConfigAccess().getAux_addressesAssignment_1_3_1()); 

            }

            // InternalDockerCompose.g:7606:2: ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )* )
            // InternalDockerCompose.g:7607:3: ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )*
            {
             before(grammarAccess.getIPAMConfigAccess().getAux_addressesAssignment_1_3_1()); 
            // InternalDockerCompose.g:7608:3: ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==RULE_STRING) ) {
                    int LA38_2 = input.LA(2);

                    if ( (LA38_2==40) ) {
                        int LA38_4 = input.LA(3);

                        if ( (LA38_4==RULE_INT) ) {
                            alt38=1;
                        }


                    }


                }
                else if ( (LA38_0==RULE_ID) ) {
                    int LA38_3 = input.LA(2);

                    if ( (LA38_3==40) ) {
                        int LA38_4 = input.LA(3);

                        if ( (LA38_4==RULE_INT) ) {
                            alt38=1;
                        }


                    }


                }


                switch (alt38) {
            	case 1 :
            	    // InternalDockerCompose.g:7608:4: rule__IPAMConfig__Aux_addressesAssignment_1_3_1
            	    {
            	    pushFollow(FOLLOW_6);
            	    rule__IPAMConfig__Aux_addressesAssignment_1_3_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);

             after(grammarAccess.getIPAMConfigAccess().getAux_addressesAssignment_1_3_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_3__1__Impl"


    // $ANTLR start "rule__IPAMOption__Group__0"
    // InternalDockerCompose.g:7618:1: rule__IPAMOption__Group__0 : rule__IPAMOption__Group__0__Impl rule__IPAMOption__Group__1 ;
    public final void rule__IPAMOption__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7622:1: ( rule__IPAMOption__Group__0__Impl rule__IPAMOption__Group__1 )
            // InternalDockerCompose.g:7623:2: rule__IPAMOption__Group__0__Impl rule__IPAMOption__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__IPAMOption__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMOption__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__0"


    // $ANTLR start "rule__IPAMOption__Group__0__Impl"
    // InternalDockerCompose.g:7630:1: rule__IPAMOption__Group__0__Impl : ( () ) ;
    public final void rule__IPAMOption__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7634:1: ( ( () ) )
            // InternalDockerCompose.g:7635:1: ( () )
            {
            // InternalDockerCompose.g:7635:1: ( () )
            // InternalDockerCompose.g:7636:2: ()
            {
             before(grammarAccess.getIPAMOptionAccess().getIPAMOptionAction_0()); 
            // InternalDockerCompose.g:7637:2: ()
            // InternalDockerCompose.g:7637:3: 
            {
            }

             after(grammarAccess.getIPAMOptionAccess().getIPAMOptionAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__0__Impl"


    // $ANTLR start "rule__IPAMOption__Group__1"
    // InternalDockerCompose.g:7645:1: rule__IPAMOption__Group__1 : rule__IPAMOption__Group__1__Impl rule__IPAMOption__Group__2 ;
    public final void rule__IPAMOption__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7649:1: ( rule__IPAMOption__Group__1__Impl rule__IPAMOption__Group__2 )
            // InternalDockerCompose.g:7650:2: rule__IPAMOption__Group__1__Impl rule__IPAMOption__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__IPAMOption__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMOption__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__1"


    // $ANTLR start "rule__IPAMOption__Group__1__Impl"
    // InternalDockerCompose.g:7657:1: rule__IPAMOption__Group__1__Impl : ( ( rule__IPAMOption__NameAssignment_1 ) ) ;
    public final void rule__IPAMOption__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7661:1: ( ( ( rule__IPAMOption__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:7662:1: ( ( rule__IPAMOption__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:7662:1: ( ( rule__IPAMOption__NameAssignment_1 ) )
            // InternalDockerCompose.g:7663:2: ( rule__IPAMOption__NameAssignment_1 )
            {
             before(grammarAccess.getIPAMOptionAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:7664:2: ( rule__IPAMOption__NameAssignment_1 )
            // InternalDockerCompose.g:7664:3: rule__IPAMOption__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAMOption__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMOptionAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__1__Impl"


    // $ANTLR start "rule__IPAMOption__Group__2"
    // InternalDockerCompose.g:7672:1: rule__IPAMOption__Group__2 : rule__IPAMOption__Group__2__Impl rule__IPAMOption__Group__3 ;
    public final void rule__IPAMOption__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7676:1: ( rule__IPAMOption__Group__2__Impl rule__IPAMOption__Group__3 )
            // InternalDockerCompose.g:7677:2: rule__IPAMOption__Group__2__Impl rule__IPAMOption__Group__3
            {
            pushFollow(FOLLOW_5);
            rule__IPAMOption__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMOption__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__2"


    // $ANTLR start "rule__IPAMOption__Group__2__Impl"
    // InternalDockerCompose.g:7684:1: rule__IPAMOption__Group__2__Impl : ( ':' ) ;
    public final void rule__IPAMOption__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7688:1: ( ( ':' ) )
            // InternalDockerCompose.g:7689:1: ( ':' )
            {
            // InternalDockerCompose.g:7689:1: ( ':' )
            // InternalDockerCompose.g:7690:2: ':'
            {
             before(grammarAccess.getIPAMOptionAccess().getColonKeyword_2()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getIPAMOptionAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__2__Impl"


    // $ANTLR start "rule__IPAMOption__Group__3"
    // InternalDockerCompose.g:7699:1: rule__IPAMOption__Group__3 : rule__IPAMOption__Group__3__Impl ;
    public final void rule__IPAMOption__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7703:1: ( rule__IPAMOption__Group__3__Impl )
            // InternalDockerCompose.g:7704:2: rule__IPAMOption__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMOption__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__3"


    // $ANTLR start "rule__IPAMOption__Group__3__Impl"
    // InternalDockerCompose.g:7710:1: rule__IPAMOption__Group__3__Impl : ( ( rule__IPAMOption__ValueAssignment_3 ) ) ;
    public final void rule__IPAMOption__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7714:1: ( ( ( rule__IPAMOption__ValueAssignment_3 ) ) )
            // InternalDockerCompose.g:7715:1: ( ( rule__IPAMOption__ValueAssignment_3 ) )
            {
            // InternalDockerCompose.g:7715:1: ( ( rule__IPAMOption__ValueAssignment_3 ) )
            // InternalDockerCompose.g:7716:2: ( rule__IPAMOption__ValueAssignment_3 )
            {
             before(grammarAccess.getIPAMOptionAccess().getValueAssignment_3()); 
            // InternalDockerCompose.g:7717:2: ( rule__IPAMOption__ValueAssignment_3 )
            // InternalDockerCompose.g:7717:3: rule__IPAMOption__ValueAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__IPAMOption__ValueAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getIPAMOptionAccess().getValueAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__3__Impl"


    // $ANTLR start "rule__IPAMAddress__Group__0"
    // InternalDockerCompose.g:7726:1: rule__IPAMAddress__Group__0 : rule__IPAMAddress__Group__0__Impl rule__IPAMAddress__Group__1 ;
    public final void rule__IPAMAddress__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7730:1: ( rule__IPAMAddress__Group__0__Impl rule__IPAMAddress__Group__1 )
            // InternalDockerCompose.g:7731:2: rule__IPAMAddress__Group__0__Impl rule__IPAMAddress__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__IPAMAddress__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMAddress__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__0"


    // $ANTLR start "rule__IPAMAddress__Group__0__Impl"
    // InternalDockerCompose.g:7738:1: rule__IPAMAddress__Group__0__Impl : ( () ) ;
    public final void rule__IPAMAddress__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7742:1: ( ( () ) )
            // InternalDockerCompose.g:7743:1: ( () )
            {
            // InternalDockerCompose.g:7743:1: ( () )
            // InternalDockerCompose.g:7744:2: ()
            {
             before(grammarAccess.getIPAMAddressAccess().getIPAMAddressAction_0()); 
            // InternalDockerCompose.g:7745:2: ()
            // InternalDockerCompose.g:7745:3: 
            {
            }

             after(grammarAccess.getIPAMAddressAccess().getIPAMAddressAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__0__Impl"


    // $ANTLR start "rule__IPAMAddress__Group__1"
    // InternalDockerCompose.g:7753:1: rule__IPAMAddress__Group__1 : rule__IPAMAddress__Group__1__Impl rule__IPAMAddress__Group__2 ;
    public final void rule__IPAMAddress__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7757:1: ( rule__IPAMAddress__Group__1__Impl rule__IPAMAddress__Group__2 )
            // InternalDockerCompose.g:7758:2: rule__IPAMAddress__Group__1__Impl rule__IPAMAddress__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__IPAMAddress__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMAddress__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__1"


    // $ANTLR start "rule__IPAMAddress__Group__1__Impl"
    // InternalDockerCompose.g:7765:1: rule__IPAMAddress__Group__1__Impl : ( ( rule__IPAMAddress__NameAssignment_1 ) ) ;
    public final void rule__IPAMAddress__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7769:1: ( ( ( rule__IPAMAddress__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:7770:1: ( ( rule__IPAMAddress__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:7770:1: ( ( rule__IPAMAddress__NameAssignment_1 ) )
            // InternalDockerCompose.g:7771:2: ( rule__IPAMAddress__NameAssignment_1 )
            {
             before(grammarAccess.getIPAMAddressAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:7772:2: ( rule__IPAMAddress__NameAssignment_1 )
            // InternalDockerCompose.g:7772:3: rule__IPAMAddress__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAMAddress__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAddressAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__1__Impl"


    // $ANTLR start "rule__IPAMAddress__Group__2"
    // InternalDockerCompose.g:7780:1: rule__IPAMAddress__Group__2 : rule__IPAMAddress__Group__2__Impl rule__IPAMAddress__Group__3 ;
    public final void rule__IPAMAddress__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7784:1: ( rule__IPAMAddress__Group__2__Impl rule__IPAMAddress__Group__3 )
            // InternalDockerCompose.g:7785:2: rule__IPAMAddress__Group__2__Impl rule__IPAMAddress__Group__3
            {
            pushFollow(FOLLOW_19);
            rule__IPAMAddress__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMAddress__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__2"


    // $ANTLR start "rule__IPAMAddress__Group__2__Impl"
    // InternalDockerCompose.g:7792:1: rule__IPAMAddress__Group__2__Impl : ( ':' ) ;
    public final void rule__IPAMAddress__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7796:1: ( ( ':' ) )
            // InternalDockerCompose.g:7797:1: ( ':' )
            {
            // InternalDockerCompose.g:7797:1: ( ':' )
            // InternalDockerCompose.g:7798:2: ':'
            {
             before(grammarAccess.getIPAMAddressAccess().getColonKeyword_2()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getIPAMAddressAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__2__Impl"


    // $ANTLR start "rule__IPAMAddress__Group__3"
    // InternalDockerCompose.g:7807:1: rule__IPAMAddress__Group__3 : rule__IPAMAddress__Group__3__Impl ;
    public final void rule__IPAMAddress__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7811:1: ( rule__IPAMAddress__Group__3__Impl )
            // InternalDockerCompose.g:7812:2: rule__IPAMAddress__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMAddress__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__3"


    // $ANTLR start "rule__IPAMAddress__Group__3__Impl"
    // InternalDockerCompose.g:7818:1: rule__IPAMAddress__Group__3__Impl : ( ( rule__IPAMAddress__DnsAssignment_3 ) ) ;
    public final void rule__IPAMAddress__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7822:1: ( ( ( rule__IPAMAddress__DnsAssignment_3 ) ) )
            // InternalDockerCompose.g:7823:1: ( ( rule__IPAMAddress__DnsAssignment_3 ) )
            {
            // InternalDockerCompose.g:7823:1: ( ( rule__IPAMAddress__DnsAssignment_3 ) )
            // InternalDockerCompose.g:7824:2: ( rule__IPAMAddress__DnsAssignment_3 )
            {
             before(grammarAccess.getIPAMAddressAccess().getDnsAssignment_3()); 
            // InternalDockerCompose.g:7825:2: ( rule__IPAMAddress__DnsAssignment_3 )
            // InternalDockerCompose.g:7825:3: rule__IPAMAddress__DnsAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__IPAMAddress__DnsAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAddressAccess().getDnsAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__3__Impl"


    // $ANTLR start "rule__PATH__Group__0"
    // InternalDockerCompose.g:7834:1: rule__PATH__Group__0 : rule__PATH__Group__0__Impl rule__PATH__Group__1 ;
    public final void rule__PATH__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7838:1: ( rule__PATH__Group__0__Impl rule__PATH__Group__1 )
            // InternalDockerCompose.g:7839:2: rule__PATH__Group__0__Impl rule__PATH__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__PATH__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group__0"


    // $ANTLR start "rule__PATH__Group__0__Impl"
    // InternalDockerCompose.g:7846:1: rule__PATH__Group__0__Impl : ( ( '.' )? ) ;
    public final void rule__PATH__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7850:1: ( ( ( '.' )? ) )
            // InternalDockerCompose.g:7851:1: ( ( '.' )? )
            {
            // InternalDockerCompose.g:7851:1: ( ( '.' )? )
            // InternalDockerCompose.g:7852:2: ( '.' )?
            {
             before(grammarAccess.getPATHAccess().getFullStopKeyword_0()); 
            // InternalDockerCompose.g:7853:2: ( '.' )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==89) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalDockerCompose.g:7853:3: '.'
                    {
                    match(input,89,FOLLOW_2); 

                    }
                    break;

            }

             after(grammarAccess.getPATHAccess().getFullStopKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group__0__Impl"


    // $ANTLR start "rule__PATH__Group__1"
    // InternalDockerCompose.g:7861:1: rule__PATH__Group__1 : rule__PATH__Group__1__Impl rule__PATH__Group__2 ;
    public final void rule__PATH__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7865:1: ( rule__PATH__Group__1__Impl rule__PATH__Group__2 )
            // InternalDockerCompose.g:7866:2: rule__PATH__Group__1__Impl rule__PATH__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__PATH__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group__1"


    // $ANTLR start "rule__PATH__Group__1__Impl"
    // InternalDockerCompose.g:7873:1: rule__PATH__Group__1__Impl : ( ( '/' )? ) ;
    public final void rule__PATH__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7877:1: ( ( ( '/' )? ) )
            // InternalDockerCompose.g:7878:1: ( ( '/' )? )
            {
            // InternalDockerCompose.g:7878:1: ( ( '/' )? )
            // InternalDockerCompose.g:7879:2: ( '/' )?
            {
             before(grammarAccess.getPATHAccess().getSolidusKeyword_1()); 
            // InternalDockerCompose.g:7880:2: ( '/' )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==90) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalDockerCompose.g:7880:3: '/'
                    {
                    match(input,90,FOLLOW_2); 

                    }
                    break;

            }

             after(grammarAccess.getPATHAccess().getSolidusKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group__1__Impl"


    // $ANTLR start "rule__PATH__Group__2"
    // InternalDockerCompose.g:7888:1: rule__PATH__Group__2 : rule__PATH__Group__2__Impl ;
    public final void rule__PATH__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7892:1: ( rule__PATH__Group__2__Impl )
            // InternalDockerCompose.g:7893:2: rule__PATH__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group__2"


    // $ANTLR start "rule__PATH__Group__2__Impl"
    // InternalDockerCompose.g:7899:1: rule__PATH__Group__2__Impl : ( ( RULE_ID )* ) ;
    public final void rule__PATH__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7903:1: ( ( ( RULE_ID )* ) )
            // InternalDockerCompose.g:7904:1: ( ( RULE_ID )* )
            {
            // InternalDockerCompose.g:7904:1: ( ( RULE_ID )* )
            // InternalDockerCompose.g:7905:2: ( RULE_ID )*
            {
             before(grammarAccess.getPATHAccess().getIDTerminalRuleCall_2()); 
            // InternalDockerCompose.g:7906:2: ( RULE_ID )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==RULE_ID) ) {
                    int LA41_2 = input.LA(2);

                    if ( (LA41_2==40) ) {
                        int LA41_3 = input.LA(3);

                        if ( ((LA41_3>=21 && LA41_3<=23)) ) {
                            alt41=1;
                        }


                    }
                    else if ( (LA41_2==EOF||(LA41_2>=RULE_STRING && LA41_2<=RULE_ID)||(LA41_2>=34 && LA41_2<=39)||(LA41_2>=41 && LA41_2<=53)||(LA41_2>=58 && LA41_2<=61)||LA41_2==63||LA41_2==65||(LA41_2>=67 && LA41_2<=69)) ) {
                        alt41=1;
                    }


                }


                switch (alt41) {
            	case 1 :
            	    // InternalDockerCompose.g:7906:3: RULE_ID
            	    {
            	    match(input,RULE_ID,FOLLOW_38); 

            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);

             after(grammarAccess.getPATHAccess().getIDTerminalRuleCall_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group__2__Impl"


    // $ANTLR start "rule__DNS__Group__0"
    // InternalDockerCompose.g:7915:1: rule__DNS__Group__0 : rule__DNS__Group__0__Impl rule__DNS__Group__1 ;
    public final void rule__DNS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7919:1: ( rule__DNS__Group__0__Impl rule__DNS__Group__1 )
            // InternalDockerCompose.g:7920:2: rule__DNS__Group__0__Impl rule__DNS__Group__1
            {
            pushFollow(FOLLOW_39);
            rule__DNS__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DNS__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__0"


    // $ANTLR start "rule__DNS__Group__0__Impl"
    // InternalDockerCompose.g:7927:1: rule__DNS__Group__0__Impl : ( ( rule__DNS__Dns1Assignment_0 ) ) ;
    public final void rule__DNS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7931:1: ( ( ( rule__DNS__Dns1Assignment_0 ) ) )
            // InternalDockerCompose.g:7932:1: ( ( rule__DNS__Dns1Assignment_0 ) )
            {
            // InternalDockerCompose.g:7932:1: ( ( rule__DNS__Dns1Assignment_0 ) )
            // InternalDockerCompose.g:7933:2: ( rule__DNS__Dns1Assignment_0 )
            {
             before(grammarAccess.getDNSAccess().getDns1Assignment_0()); 
            // InternalDockerCompose.g:7934:2: ( rule__DNS__Dns1Assignment_0 )
            // InternalDockerCompose.g:7934:3: rule__DNS__Dns1Assignment_0
            {
            pushFollow(FOLLOW_2);
            rule__DNS__Dns1Assignment_0();

            state._fsp--;


            }

             after(grammarAccess.getDNSAccess().getDns1Assignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__0__Impl"


    // $ANTLR start "rule__DNS__Group__1"
    // InternalDockerCompose.g:7942:1: rule__DNS__Group__1 : rule__DNS__Group__1__Impl rule__DNS__Group__2 ;
    public final void rule__DNS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7946:1: ( rule__DNS__Group__1__Impl rule__DNS__Group__2 )
            // InternalDockerCompose.g:7947:2: rule__DNS__Group__1__Impl rule__DNS__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__DNS__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DNS__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__1"


    // $ANTLR start "rule__DNS__Group__1__Impl"
    // InternalDockerCompose.g:7954:1: rule__DNS__Group__1__Impl : ( '.' ) ;
    public final void rule__DNS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7958:1: ( ( '.' ) )
            // InternalDockerCompose.g:7959:1: ( '.' )
            {
            // InternalDockerCompose.g:7959:1: ( '.' )
            // InternalDockerCompose.g:7960:2: '.'
            {
             before(grammarAccess.getDNSAccess().getFullStopKeyword_1()); 
            match(input,89,FOLLOW_2); 
             after(grammarAccess.getDNSAccess().getFullStopKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__1__Impl"


    // $ANTLR start "rule__DNS__Group__2"
    // InternalDockerCompose.g:7969:1: rule__DNS__Group__2 : rule__DNS__Group__2__Impl rule__DNS__Group__3 ;
    public final void rule__DNS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7973:1: ( rule__DNS__Group__2__Impl rule__DNS__Group__3 )
            // InternalDockerCompose.g:7974:2: rule__DNS__Group__2__Impl rule__DNS__Group__3
            {
            pushFollow(FOLLOW_39);
            rule__DNS__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DNS__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__2"


    // $ANTLR start "rule__DNS__Group__2__Impl"
    // InternalDockerCompose.g:7981:1: rule__DNS__Group__2__Impl : ( ( rule__DNS__Dns2Assignment_2 ) ) ;
    public final void rule__DNS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7985:1: ( ( ( rule__DNS__Dns2Assignment_2 ) ) )
            // InternalDockerCompose.g:7986:1: ( ( rule__DNS__Dns2Assignment_2 ) )
            {
            // InternalDockerCompose.g:7986:1: ( ( rule__DNS__Dns2Assignment_2 ) )
            // InternalDockerCompose.g:7987:2: ( rule__DNS__Dns2Assignment_2 )
            {
             before(grammarAccess.getDNSAccess().getDns2Assignment_2()); 
            // InternalDockerCompose.g:7988:2: ( rule__DNS__Dns2Assignment_2 )
            // InternalDockerCompose.g:7988:3: rule__DNS__Dns2Assignment_2
            {
            pushFollow(FOLLOW_2);
            rule__DNS__Dns2Assignment_2();

            state._fsp--;


            }

             after(grammarAccess.getDNSAccess().getDns2Assignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__2__Impl"


    // $ANTLR start "rule__DNS__Group__3"
    // InternalDockerCompose.g:7996:1: rule__DNS__Group__3 : rule__DNS__Group__3__Impl rule__DNS__Group__4 ;
    public final void rule__DNS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8000:1: ( rule__DNS__Group__3__Impl rule__DNS__Group__4 )
            // InternalDockerCompose.g:8001:2: rule__DNS__Group__3__Impl rule__DNS__Group__4
            {
            pushFollow(FOLLOW_10);
            rule__DNS__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DNS__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__3"


    // $ANTLR start "rule__DNS__Group__3__Impl"
    // InternalDockerCompose.g:8008:1: rule__DNS__Group__3__Impl : ( '.' ) ;
    public final void rule__DNS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8012:1: ( ( '.' ) )
            // InternalDockerCompose.g:8013:1: ( '.' )
            {
            // InternalDockerCompose.g:8013:1: ( '.' )
            // InternalDockerCompose.g:8014:2: '.'
            {
             before(grammarAccess.getDNSAccess().getFullStopKeyword_3()); 
            match(input,89,FOLLOW_2); 
             after(grammarAccess.getDNSAccess().getFullStopKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__3__Impl"


    // $ANTLR start "rule__DNS__Group__4"
    // InternalDockerCompose.g:8023:1: rule__DNS__Group__4 : rule__DNS__Group__4__Impl rule__DNS__Group__5 ;
    public final void rule__DNS__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8027:1: ( rule__DNS__Group__4__Impl rule__DNS__Group__5 )
            // InternalDockerCompose.g:8028:2: rule__DNS__Group__4__Impl rule__DNS__Group__5
            {
            pushFollow(FOLLOW_39);
            rule__DNS__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DNS__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__4"


    // $ANTLR start "rule__DNS__Group__4__Impl"
    // InternalDockerCompose.g:8035:1: rule__DNS__Group__4__Impl : ( ( rule__DNS__Dns3Assignment_4 ) ) ;
    public final void rule__DNS__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8039:1: ( ( ( rule__DNS__Dns3Assignment_4 ) ) )
            // InternalDockerCompose.g:8040:1: ( ( rule__DNS__Dns3Assignment_4 ) )
            {
            // InternalDockerCompose.g:8040:1: ( ( rule__DNS__Dns3Assignment_4 ) )
            // InternalDockerCompose.g:8041:2: ( rule__DNS__Dns3Assignment_4 )
            {
             before(grammarAccess.getDNSAccess().getDns3Assignment_4()); 
            // InternalDockerCompose.g:8042:2: ( rule__DNS__Dns3Assignment_4 )
            // InternalDockerCompose.g:8042:3: rule__DNS__Dns3Assignment_4
            {
            pushFollow(FOLLOW_2);
            rule__DNS__Dns3Assignment_4();

            state._fsp--;


            }

             after(grammarAccess.getDNSAccess().getDns3Assignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__4__Impl"


    // $ANTLR start "rule__DNS__Group__5"
    // InternalDockerCompose.g:8050:1: rule__DNS__Group__5 : rule__DNS__Group__5__Impl rule__DNS__Group__6 ;
    public final void rule__DNS__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8054:1: ( rule__DNS__Group__5__Impl rule__DNS__Group__6 )
            // InternalDockerCompose.g:8055:2: rule__DNS__Group__5__Impl rule__DNS__Group__6
            {
            pushFollow(FOLLOW_10);
            rule__DNS__Group__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DNS__Group__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__5"


    // $ANTLR start "rule__DNS__Group__5__Impl"
    // InternalDockerCompose.g:8062:1: rule__DNS__Group__5__Impl : ( '.' ) ;
    public final void rule__DNS__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8066:1: ( ( '.' ) )
            // InternalDockerCompose.g:8067:1: ( '.' )
            {
            // InternalDockerCompose.g:8067:1: ( '.' )
            // InternalDockerCompose.g:8068:2: '.'
            {
             before(grammarAccess.getDNSAccess().getFullStopKeyword_5()); 
            match(input,89,FOLLOW_2); 
             after(grammarAccess.getDNSAccess().getFullStopKeyword_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__5__Impl"


    // $ANTLR start "rule__DNS__Group__6"
    // InternalDockerCompose.g:8077:1: rule__DNS__Group__6 : rule__DNS__Group__6__Impl ;
    public final void rule__DNS__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8081:1: ( rule__DNS__Group__6__Impl )
            // InternalDockerCompose.g:8082:2: rule__DNS__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DNS__Group__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__6"


    // $ANTLR start "rule__DNS__Group__6__Impl"
    // InternalDockerCompose.g:8088:1: rule__DNS__Group__6__Impl : ( ( rule__DNS__Dns4Assignment_6 ) ) ;
    public final void rule__DNS__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8092:1: ( ( ( rule__DNS__Dns4Assignment_6 ) ) )
            // InternalDockerCompose.g:8093:1: ( ( rule__DNS__Dns4Assignment_6 ) )
            {
            // InternalDockerCompose.g:8093:1: ( ( rule__DNS__Dns4Assignment_6 ) )
            // InternalDockerCompose.g:8094:2: ( rule__DNS__Dns4Assignment_6 )
            {
             before(grammarAccess.getDNSAccess().getDns4Assignment_6()); 
            // InternalDockerCompose.g:8095:2: ( rule__DNS__Dns4Assignment_6 )
            // InternalDockerCompose.g:8095:3: rule__DNS__Dns4Assignment_6
            {
            pushFollow(FOLLOW_2);
            rule__DNS__Dns4Assignment_6();

            state._fsp--;


            }

             after(grammarAccess.getDNSAccess().getDns4Assignment_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__6__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__0"
    // InternalDockerCompose.g:8104:1: rule__NetworkAddress__Group__0 : rule__NetworkAddress__Group__0__Impl rule__NetworkAddress__Group__1 ;
    public final void rule__NetworkAddress__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8108:1: ( rule__NetworkAddress__Group__0__Impl rule__NetworkAddress__Group__1 )
            // InternalDockerCompose.g:8109:2: rule__NetworkAddress__Group__0__Impl rule__NetworkAddress__Group__1
            {
            pushFollow(FOLLOW_39);
            rule__NetworkAddress__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__0"


    // $ANTLR start "rule__NetworkAddress__Group__0__Impl"
    // InternalDockerCompose.g:8116:1: rule__NetworkAddress__Group__0__Impl : ( ( rule__NetworkAddress__Dns1Assignment_0 ) ) ;
    public final void rule__NetworkAddress__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8120:1: ( ( ( rule__NetworkAddress__Dns1Assignment_0 ) ) )
            // InternalDockerCompose.g:8121:1: ( ( rule__NetworkAddress__Dns1Assignment_0 ) )
            {
            // InternalDockerCompose.g:8121:1: ( ( rule__NetworkAddress__Dns1Assignment_0 ) )
            // InternalDockerCompose.g:8122:2: ( rule__NetworkAddress__Dns1Assignment_0 )
            {
             before(grammarAccess.getNetworkAddressAccess().getDns1Assignment_0()); 
            // InternalDockerCompose.g:8123:2: ( rule__NetworkAddress__Dns1Assignment_0 )
            // InternalDockerCompose.g:8123:3: rule__NetworkAddress__Dns1Assignment_0
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Dns1Assignment_0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAddressAccess().getDns1Assignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__0__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__1"
    // InternalDockerCompose.g:8131:1: rule__NetworkAddress__Group__1 : rule__NetworkAddress__Group__1__Impl rule__NetworkAddress__Group__2 ;
    public final void rule__NetworkAddress__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8135:1: ( rule__NetworkAddress__Group__1__Impl rule__NetworkAddress__Group__2 )
            // InternalDockerCompose.g:8136:2: rule__NetworkAddress__Group__1__Impl rule__NetworkAddress__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__NetworkAddress__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__1"


    // $ANTLR start "rule__NetworkAddress__Group__1__Impl"
    // InternalDockerCompose.g:8143:1: rule__NetworkAddress__Group__1__Impl : ( '.' ) ;
    public final void rule__NetworkAddress__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8147:1: ( ( '.' ) )
            // InternalDockerCompose.g:8148:1: ( '.' )
            {
            // InternalDockerCompose.g:8148:1: ( '.' )
            // InternalDockerCompose.g:8149:2: '.'
            {
             before(grammarAccess.getNetworkAddressAccess().getFullStopKeyword_1()); 
            match(input,89,FOLLOW_2); 
             after(grammarAccess.getNetworkAddressAccess().getFullStopKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__1__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__2"
    // InternalDockerCompose.g:8158:1: rule__NetworkAddress__Group__2 : rule__NetworkAddress__Group__2__Impl rule__NetworkAddress__Group__3 ;
    public final void rule__NetworkAddress__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8162:1: ( rule__NetworkAddress__Group__2__Impl rule__NetworkAddress__Group__3 )
            // InternalDockerCompose.g:8163:2: rule__NetworkAddress__Group__2__Impl rule__NetworkAddress__Group__3
            {
            pushFollow(FOLLOW_39);
            rule__NetworkAddress__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__2"


    // $ANTLR start "rule__NetworkAddress__Group__2__Impl"
    // InternalDockerCompose.g:8170:1: rule__NetworkAddress__Group__2__Impl : ( ( rule__NetworkAddress__Dns2Assignment_2 ) ) ;
    public final void rule__NetworkAddress__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8174:1: ( ( ( rule__NetworkAddress__Dns2Assignment_2 ) ) )
            // InternalDockerCompose.g:8175:1: ( ( rule__NetworkAddress__Dns2Assignment_2 ) )
            {
            // InternalDockerCompose.g:8175:1: ( ( rule__NetworkAddress__Dns2Assignment_2 ) )
            // InternalDockerCompose.g:8176:2: ( rule__NetworkAddress__Dns2Assignment_2 )
            {
             before(grammarAccess.getNetworkAddressAccess().getDns2Assignment_2()); 
            // InternalDockerCompose.g:8177:2: ( rule__NetworkAddress__Dns2Assignment_2 )
            // InternalDockerCompose.g:8177:3: rule__NetworkAddress__Dns2Assignment_2
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Dns2Assignment_2();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAddressAccess().getDns2Assignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__2__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__3"
    // InternalDockerCompose.g:8185:1: rule__NetworkAddress__Group__3 : rule__NetworkAddress__Group__3__Impl rule__NetworkAddress__Group__4 ;
    public final void rule__NetworkAddress__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8189:1: ( rule__NetworkAddress__Group__3__Impl rule__NetworkAddress__Group__4 )
            // InternalDockerCompose.g:8190:2: rule__NetworkAddress__Group__3__Impl rule__NetworkAddress__Group__4
            {
            pushFollow(FOLLOW_10);
            rule__NetworkAddress__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__3"


    // $ANTLR start "rule__NetworkAddress__Group__3__Impl"
    // InternalDockerCompose.g:8197:1: rule__NetworkAddress__Group__3__Impl : ( '.' ) ;
    public final void rule__NetworkAddress__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8201:1: ( ( '.' ) )
            // InternalDockerCompose.g:8202:1: ( '.' )
            {
            // InternalDockerCompose.g:8202:1: ( '.' )
            // InternalDockerCompose.g:8203:2: '.'
            {
             before(grammarAccess.getNetworkAddressAccess().getFullStopKeyword_3()); 
            match(input,89,FOLLOW_2); 
             after(grammarAccess.getNetworkAddressAccess().getFullStopKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__3__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__4"
    // InternalDockerCompose.g:8212:1: rule__NetworkAddress__Group__4 : rule__NetworkAddress__Group__4__Impl rule__NetworkAddress__Group__5 ;
    public final void rule__NetworkAddress__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8216:1: ( rule__NetworkAddress__Group__4__Impl rule__NetworkAddress__Group__5 )
            // InternalDockerCompose.g:8217:2: rule__NetworkAddress__Group__4__Impl rule__NetworkAddress__Group__5
            {
            pushFollow(FOLLOW_39);
            rule__NetworkAddress__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__4"


    // $ANTLR start "rule__NetworkAddress__Group__4__Impl"
    // InternalDockerCompose.g:8224:1: rule__NetworkAddress__Group__4__Impl : ( ( rule__NetworkAddress__Dns3Assignment_4 ) ) ;
    public final void rule__NetworkAddress__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8228:1: ( ( ( rule__NetworkAddress__Dns3Assignment_4 ) ) )
            // InternalDockerCompose.g:8229:1: ( ( rule__NetworkAddress__Dns3Assignment_4 ) )
            {
            // InternalDockerCompose.g:8229:1: ( ( rule__NetworkAddress__Dns3Assignment_4 ) )
            // InternalDockerCompose.g:8230:2: ( rule__NetworkAddress__Dns3Assignment_4 )
            {
             before(grammarAccess.getNetworkAddressAccess().getDns3Assignment_4()); 
            // InternalDockerCompose.g:8231:2: ( rule__NetworkAddress__Dns3Assignment_4 )
            // InternalDockerCompose.g:8231:3: rule__NetworkAddress__Dns3Assignment_4
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Dns3Assignment_4();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAddressAccess().getDns3Assignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__4__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__5"
    // InternalDockerCompose.g:8239:1: rule__NetworkAddress__Group__5 : rule__NetworkAddress__Group__5__Impl rule__NetworkAddress__Group__6 ;
    public final void rule__NetworkAddress__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8243:1: ( rule__NetworkAddress__Group__5__Impl rule__NetworkAddress__Group__6 )
            // InternalDockerCompose.g:8244:2: rule__NetworkAddress__Group__5__Impl rule__NetworkAddress__Group__6
            {
            pushFollow(FOLLOW_10);
            rule__NetworkAddress__Group__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__5"


    // $ANTLR start "rule__NetworkAddress__Group__5__Impl"
    // InternalDockerCompose.g:8251:1: rule__NetworkAddress__Group__5__Impl : ( '.' ) ;
    public final void rule__NetworkAddress__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8255:1: ( ( '.' ) )
            // InternalDockerCompose.g:8256:1: ( '.' )
            {
            // InternalDockerCompose.g:8256:1: ( '.' )
            // InternalDockerCompose.g:8257:2: '.'
            {
             before(grammarAccess.getNetworkAddressAccess().getFullStopKeyword_5()); 
            match(input,89,FOLLOW_2); 
             after(grammarAccess.getNetworkAddressAccess().getFullStopKeyword_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__5__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__6"
    // InternalDockerCompose.g:8266:1: rule__NetworkAddress__Group__6 : rule__NetworkAddress__Group__6__Impl rule__NetworkAddress__Group__7 ;
    public final void rule__NetworkAddress__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8270:1: ( rule__NetworkAddress__Group__6__Impl rule__NetworkAddress__Group__7 )
            // InternalDockerCompose.g:8271:2: rule__NetworkAddress__Group__6__Impl rule__NetworkAddress__Group__7
            {
            pushFollow(FOLLOW_40);
            rule__NetworkAddress__Group__6__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__7();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__6"


    // $ANTLR start "rule__NetworkAddress__Group__6__Impl"
    // InternalDockerCompose.g:8278:1: rule__NetworkAddress__Group__6__Impl : ( ( rule__NetworkAddress__Dns4Assignment_6 ) ) ;
    public final void rule__NetworkAddress__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8282:1: ( ( ( rule__NetworkAddress__Dns4Assignment_6 ) ) )
            // InternalDockerCompose.g:8283:1: ( ( rule__NetworkAddress__Dns4Assignment_6 ) )
            {
            // InternalDockerCompose.g:8283:1: ( ( rule__NetworkAddress__Dns4Assignment_6 ) )
            // InternalDockerCompose.g:8284:2: ( rule__NetworkAddress__Dns4Assignment_6 )
            {
             before(grammarAccess.getNetworkAddressAccess().getDns4Assignment_6()); 
            // InternalDockerCompose.g:8285:2: ( rule__NetworkAddress__Dns4Assignment_6 )
            // InternalDockerCompose.g:8285:3: rule__NetworkAddress__Dns4Assignment_6
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Dns4Assignment_6();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAddressAccess().getDns4Assignment_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__6__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__7"
    // InternalDockerCompose.g:8293:1: rule__NetworkAddress__Group__7 : rule__NetworkAddress__Group__7__Impl rule__NetworkAddress__Group__8 ;
    public final void rule__NetworkAddress__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8297:1: ( rule__NetworkAddress__Group__7__Impl rule__NetworkAddress__Group__8 )
            // InternalDockerCompose.g:8298:2: rule__NetworkAddress__Group__7__Impl rule__NetworkAddress__Group__8
            {
            pushFollow(FOLLOW_10);
            rule__NetworkAddress__Group__7__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__8();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__7"


    // $ANTLR start "rule__NetworkAddress__Group__7__Impl"
    // InternalDockerCompose.g:8305:1: rule__NetworkAddress__Group__7__Impl : ( '/' ) ;
    public final void rule__NetworkAddress__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8309:1: ( ( '/' ) )
            // InternalDockerCompose.g:8310:1: ( '/' )
            {
            // InternalDockerCompose.g:8310:1: ( '/' )
            // InternalDockerCompose.g:8311:2: '/'
            {
             before(grammarAccess.getNetworkAddressAccess().getSolidusKeyword_7()); 
            match(input,90,FOLLOW_2); 
             after(grammarAccess.getNetworkAddressAccess().getSolidusKeyword_7()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__7__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__8"
    // InternalDockerCompose.g:8320:1: rule__NetworkAddress__Group__8 : rule__NetworkAddress__Group__8__Impl ;
    public final void rule__NetworkAddress__Group__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8324:1: ( rule__NetworkAddress__Group__8__Impl )
            // InternalDockerCompose.g:8325:2: rule__NetworkAddress__Group__8__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__8__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__8"


    // $ANTLR start "rule__NetworkAddress__Group__8__Impl"
    // InternalDockerCompose.g:8331:1: rule__NetworkAddress__Group__8__Impl : ( ( rule__NetworkAddress__NetIdAssignment_8 ) ) ;
    public final void rule__NetworkAddress__Group__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8335:1: ( ( ( rule__NetworkAddress__NetIdAssignment_8 ) ) )
            // InternalDockerCompose.g:8336:1: ( ( rule__NetworkAddress__NetIdAssignment_8 ) )
            {
            // InternalDockerCompose.g:8336:1: ( ( rule__NetworkAddress__NetIdAssignment_8 ) )
            // InternalDockerCompose.g:8337:2: ( rule__NetworkAddress__NetIdAssignment_8 )
            {
             before(grammarAccess.getNetworkAddressAccess().getNetIdAssignment_8()); 
            // InternalDockerCompose.g:8338:2: ( rule__NetworkAddress__NetIdAssignment_8 )
            // InternalDockerCompose.g:8338:3: rule__NetworkAddress__NetIdAssignment_8
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__NetIdAssignment_8();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAddressAccess().getNetIdAssignment_8()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__8__Impl"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup"
    // InternalDockerCompose.g:8347:1: rule__DockerCompose__UnorderedGroup : rule__DockerCompose__UnorderedGroup__0 {...}?;
    public final void rule__DockerCompose__UnorderedGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getDockerComposeAccess().getUnorderedGroup());
        	
        try {
            // InternalDockerCompose.g:8352:1: ( rule__DockerCompose__UnorderedGroup__0 {...}?)
            // InternalDockerCompose.g:8353:2: rule__DockerCompose__UnorderedGroup__0 {...}?
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__UnorderedGroup__0();

            state._fsp--;

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getDockerComposeAccess().getUnorderedGroup()) ) {
                throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup", "getUnorderedGroupHelper().canLeave(grammarAccess.getDockerComposeAccess().getUnorderedGroup())");
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getDockerComposeAccess().getUnorderedGroup());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__Impl"
    // InternalDockerCompose.g:8361:1: rule__DockerCompose__UnorderedGroup__Impl : ( ({...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) ) ) ) ;
    public final void rule__DockerCompose__UnorderedGroup__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:8366:1: ( ( ({...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) ) ) ) )
            // InternalDockerCompose.g:8367:3: ( ({...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:8367:3: ( ({...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) ) ) )
            int alt42=6;
            int LA42_0 = input.LA(1);

            if ( LA42_0 == 34 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                alt42=1;
            }
            else if ( LA42_0 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                alt42=2;
            }
            else if ( LA42_0 == 36 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                alt42=3;
            }
            else if ( LA42_0 == 37 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                alt42=4;
            }
            else if ( LA42_0 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                alt42=5;
            }
            else if ( LA42_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                alt42=6;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;
            }
            switch (alt42) {
                case 1 :
                    // InternalDockerCompose.g:8368:3: ({...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:8368:3: ({...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) ) )
                    // InternalDockerCompose.g:8369:4: {...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                        throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0)");
                    }
                    // InternalDockerCompose.g:8369:107: ( ( ( rule__DockerCompose__Group_0__0 ) ) )
                    // InternalDockerCompose.g:8370:5: ( ( rule__DockerCompose__Group_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:8376:5: ( ( rule__DockerCompose__Group_0__0 ) )
                    // InternalDockerCompose.g:8377:6: ( rule__DockerCompose__Group_0__0 )
                    {
                     before(grammarAccess.getDockerComposeAccess().getGroup_0()); 
                    // InternalDockerCompose.g:8378:6: ( rule__DockerCompose__Group_0__0 )
                    // InternalDockerCompose.g:8378:7: rule__DockerCompose__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDockerComposeAccess().getGroup_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:8383:3: ({...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:8383:3: ({...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) ) )
                    // InternalDockerCompose.g:8384:4: {...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                        throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1)");
                    }
                    // InternalDockerCompose.g:8384:107: ( ( ( rule__DockerCompose__Group_1__0 ) ) )
                    // InternalDockerCompose.g:8385:5: ( ( rule__DockerCompose__Group_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:8391:5: ( ( rule__DockerCompose__Group_1__0 ) )
                    // InternalDockerCompose.g:8392:6: ( rule__DockerCompose__Group_1__0 )
                    {
                     before(grammarAccess.getDockerComposeAccess().getGroup_1()); 
                    // InternalDockerCompose.g:8393:6: ( rule__DockerCompose__Group_1__0 )
                    // InternalDockerCompose.g:8393:7: rule__DockerCompose__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDockerComposeAccess().getGroup_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:8398:3: ({...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:8398:3: ({...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) ) )
                    // InternalDockerCompose.g:8399:4: {...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                        throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2)");
                    }
                    // InternalDockerCompose.g:8399:107: ( ( ( rule__DockerCompose__Group_2__0 ) ) )
                    // InternalDockerCompose.g:8400:5: ( ( rule__DockerCompose__Group_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:8406:5: ( ( rule__DockerCompose__Group_2__0 ) )
                    // InternalDockerCompose.g:8407:6: ( rule__DockerCompose__Group_2__0 )
                    {
                     before(grammarAccess.getDockerComposeAccess().getGroup_2()); 
                    // InternalDockerCompose.g:8408:6: ( rule__DockerCompose__Group_2__0 )
                    // InternalDockerCompose.g:8408:7: rule__DockerCompose__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDockerComposeAccess().getGroup_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:8413:3: ({...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:8413:3: ({...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) ) )
                    // InternalDockerCompose.g:8414:4: {...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                        throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3)");
                    }
                    // InternalDockerCompose.g:8414:107: ( ( ( rule__DockerCompose__Group_3__0 ) ) )
                    // InternalDockerCompose.g:8415:5: ( ( rule__DockerCompose__Group_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:8421:5: ( ( rule__DockerCompose__Group_3__0 ) )
                    // InternalDockerCompose.g:8422:6: ( rule__DockerCompose__Group_3__0 )
                    {
                     before(grammarAccess.getDockerComposeAccess().getGroup_3()); 
                    // InternalDockerCompose.g:8423:6: ( rule__DockerCompose__Group_3__0 )
                    // InternalDockerCompose.g:8423:7: rule__DockerCompose__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__Group_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDockerComposeAccess().getGroup_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:8428:3: ({...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:8428:3: ({...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) ) )
                    // InternalDockerCompose.g:8429:4: {...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                        throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4)");
                    }
                    // InternalDockerCompose.g:8429:107: ( ( ( rule__DockerCompose__Group_4__0 ) ) )
                    // InternalDockerCompose.g:8430:5: ( ( rule__DockerCompose__Group_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:8436:5: ( ( rule__DockerCompose__Group_4__0 ) )
                    // InternalDockerCompose.g:8437:6: ( rule__DockerCompose__Group_4__0 )
                    {
                     before(grammarAccess.getDockerComposeAccess().getGroup_4()); 
                    // InternalDockerCompose.g:8438:6: ( rule__DockerCompose__Group_4__0 )
                    // InternalDockerCompose.g:8438:7: rule__DockerCompose__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__Group_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDockerComposeAccess().getGroup_4()); 

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDockerCompose.g:8443:3: ({...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:8443:3: ({...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) ) )
                    // InternalDockerCompose.g:8444:4: {...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                        throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5)");
                    }
                    // InternalDockerCompose.g:8444:107: ( ( ( rule__DockerCompose__Group_5__0 ) ) )
                    // InternalDockerCompose.g:8445:5: ( ( rule__DockerCompose__Group_5__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:8451:5: ( ( rule__DockerCompose__Group_5__0 ) )
                    // InternalDockerCompose.g:8452:6: ( rule__DockerCompose__Group_5__0 )
                    {
                     before(grammarAccess.getDockerComposeAccess().getGroup_5()); 
                    // InternalDockerCompose.g:8453:6: ( rule__DockerCompose__Group_5__0 )
                    // InternalDockerCompose.g:8453:7: rule__DockerCompose__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__Group_5__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDockerComposeAccess().getGroup_5()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDockerComposeAccess().getUnorderedGroup());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__Impl"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__0"
    // InternalDockerCompose.g:8466:1: rule__DockerCompose__UnorderedGroup__0 : rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__1 )? ;
    public final void rule__DockerCompose__UnorderedGroup__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8470:1: ( rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__1 )? )
            // InternalDockerCompose.g:8471:2: rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__1 )?
            {
            pushFollow(FOLLOW_41);
            rule__DockerCompose__UnorderedGroup__Impl();

            state._fsp--;

            // InternalDockerCompose.g:8472:2: ( rule__DockerCompose__UnorderedGroup__1 )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( LA43_0 == 34 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                alt43=1;
            }
            else if ( LA43_0 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                alt43=1;
            }
            else if ( LA43_0 == 36 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                alt43=1;
            }
            else if ( LA43_0 == 37 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                alt43=1;
            }
            else if ( LA43_0 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                alt43=1;
            }
            else if ( LA43_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // InternalDockerCompose.g:8472:2: rule__DockerCompose__UnorderedGroup__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__UnorderedGroup__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__0"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__1"
    // InternalDockerCompose.g:8478:1: rule__DockerCompose__UnorderedGroup__1 : rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__2 )? ;
    public final void rule__DockerCompose__UnorderedGroup__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8482:1: ( rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__2 )? )
            // InternalDockerCompose.g:8483:2: rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__2 )?
            {
            pushFollow(FOLLOW_41);
            rule__DockerCompose__UnorderedGroup__Impl();

            state._fsp--;

            // InternalDockerCompose.g:8484:2: ( rule__DockerCompose__UnorderedGroup__2 )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( LA44_0 == 34 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                alt44=1;
            }
            else if ( LA44_0 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                alt44=1;
            }
            else if ( LA44_0 == 36 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                alt44=1;
            }
            else if ( LA44_0 == 37 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                alt44=1;
            }
            else if ( LA44_0 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                alt44=1;
            }
            else if ( LA44_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalDockerCompose.g:8484:2: rule__DockerCompose__UnorderedGroup__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__UnorderedGroup__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__1"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__2"
    // InternalDockerCompose.g:8490:1: rule__DockerCompose__UnorderedGroup__2 : rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__3 )? ;
    public final void rule__DockerCompose__UnorderedGroup__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8494:1: ( rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__3 )? )
            // InternalDockerCompose.g:8495:2: rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__3 )?
            {
            pushFollow(FOLLOW_41);
            rule__DockerCompose__UnorderedGroup__Impl();

            state._fsp--;

            // InternalDockerCompose.g:8496:2: ( rule__DockerCompose__UnorderedGroup__3 )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( LA45_0 == 34 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                alt45=1;
            }
            else if ( LA45_0 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                alt45=1;
            }
            else if ( LA45_0 == 36 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                alt45=1;
            }
            else if ( LA45_0 == 37 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                alt45=1;
            }
            else if ( LA45_0 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                alt45=1;
            }
            else if ( LA45_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // InternalDockerCompose.g:8496:2: rule__DockerCompose__UnorderedGroup__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__UnorderedGroup__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__2"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__3"
    // InternalDockerCompose.g:8502:1: rule__DockerCompose__UnorderedGroup__3 : rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__4 )? ;
    public final void rule__DockerCompose__UnorderedGroup__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8506:1: ( rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__4 )? )
            // InternalDockerCompose.g:8507:2: rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__4 )?
            {
            pushFollow(FOLLOW_41);
            rule__DockerCompose__UnorderedGroup__Impl();

            state._fsp--;

            // InternalDockerCompose.g:8508:2: ( rule__DockerCompose__UnorderedGroup__4 )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( LA46_0 == 34 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                alt46=1;
            }
            else if ( LA46_0 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                alt46=1;
            }
            else if ( LA46_0 == 36 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                alt46=1;
            }
            else if ( LA46_0 == 37 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                alt46=1;
            }
            else if ( LA46_0 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                alt46=1;
            }
            else if ( LA46_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalDockerCompose.g:8508:2: rule__DockerCompose__UnorderedGroup__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__UnorderedGroup__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__3"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__4"
    // InternalDockerCompose.g:8514:1: rule__DockerCompose__UnorderedGroup__4 : rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__5 )? ;
    public final void rule__DockerCompose__UnorderedGroup__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8518:1: ( rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__5 )? )
            // InternalDockerCompose.g:8519:2: rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__5 )?
            {
            pushFollow(FOLLOW_41);
            rule__DockerCompose__UnorderedGroup__Impl();

            state._fsp--;

            // InternalDockerCompose.g:8520:2: ( rule__DockerCompose__UnorderedGroup__5 )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( LA47_0 == 34 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                alt47=1;
            }
            else if ( LA47_0 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                alt47=1;
            }
            else if ( LA47_0 == 36 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                alt47=1;
            }
            else if ( LA47_0 == 37 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                alt47=1;
            }
            else if ( LA47_0 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                alt47=1;
            }
            else if ( LA47_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalDockerCompose.g:8520:2: rule__DockerCompose__UnorderedGroup__5
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__UnorderedGroup__5();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__4"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__5"
    // InternalDockerCompose.g:8526:1: rule__DockerCompose__UnorderedGroup__5 : rule__DockerCompose__UnorderedGroup__Impl ;
    public final void rule__DockerCompose__UnorderedGroup__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8530:1: ( rule__DockerCompose__UnorderedGroup__Impl )
            // InternalDockerCompose.g:8531:2: rule__DockerCompose__UnorderedGroup__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__UnorderedGroup__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__5"


    // $ANTLR start "rule__Service__UnorderedGroup_3"
    // InternalDockerCompose.g:8538:1: rule__Service__UnorderedGroup_3 : rule__Service__UnorderedGroup_3__0 {...}?;
    public final void rule__Service__UnorderedGroup_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getServiceAccess().getUnorderedGroup_3());
        	
        try {
            // InternalDockerCompose.g:8543:1: ( rule__Service__UnorderedGroup_3__0 {...}?)
            // InternalDockerCompose.g:8544:2: rule__Service__UnorderedGroup_3__0 {...}?
            {
            pushFollow(FOLLOW_2);
            rule__Service__UnorderedGroup_3__0();

            state._fsp--;

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {
                throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3", "getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3())");
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getServiceAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3"


    // $ANTLR start "rule__Service__UnorderedGroup_3__Impl"
    // InternalDockerCompose.g:8552:1: rule__Service__UnorderedGroup_3__Impl : ( ({...}? => ( ( ( rule__Service__Alternatives_3_0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) ) ) ;
    public final void rule__Service__UnorderedGroup_3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:8557:1: ( ( ({...}? => ( ( ( rule__Service__Alternatives_3_0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) ) ) )
            // InternalDockerCompose.g:8558:3: ( ({...}? => ( ( ( rule__Service__Alternatives_3_0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:8558:3: ( ({...}? => ( ( ( rule__Service__Alternatives_3_0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) ) )
            int alt48=15;
            alt48 = dfa48.predict(input);
            switch (alt48) {
                case 1 :
                    // InternalDockerCompose.g:8559:3: ({...}? => ( ( ( rule__Service__Alternatives_3_0 ) ) ) )
                    {
                    // InternalDockerCompose.g:8559:3: ({...}? => ( ( ( rule__Service__Alternatives_3_0 ) ) ) )
                    // InternalDockerCompose.g:8560:4: {...}? => ( ( ( rule__Service__Alternatives_3_0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0)");
                    }
                    // InternalDockerCompose.g:8560:103: ( ( ( rule__Service__Alternatives_3_0 ) ) )
                    // InternalDockerCompose.g:8561:5: ( ( rule__Service__Alternatives_3_0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:8567:5: ( ( rule__Service__Alternatives_3_0 ) )
                    // InternalDockerCompose.g:8568:6: ( rule__Service__Alternatives_3_0 )
                    {
                     before(grammarAccess.getServiceAccess().getAlternatives_3_0()); 
                    // InternalDockerCompose.g:8569:6: ( rule__Service__Alternatives_3_0 )
                    // InternalDockerCompose.g:8569:7: rule__Service__Alternatives_3_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Alternatives_3_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getAlternatives_3_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:8574:3: ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:8574:3: ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) )
                    // InternalDockerCompose.g:8575:4: {...}? => ( ( ( rule__Service__Group_3_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1)");
                    }
                    // InternalDockerCompose.g:8575:103: ( ( ( rule__Service__Group_3_1__0 ) ) )
                    // InternalDockerCompose.g:8576:5: ( ( rule__Service__Group_3_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:8582:5: ( ( rule__Service__Group_3_1__0 ) )
                    // InternalDockerCompose.g:8583:6: ( rule__Service__Group_3_1__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_1()); 
                    // InternalDockerCompose.g:8584:6: ( rule__Service__Group_3_1__0 )
                    // InternalDockerCompose.g:8584:7: rule__Service__Group_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:8589:3: ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:8589:3: ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) )
                    // InternalDockerCompose.g:8590:4: {...}? => ( ( ( rule__Service__Group_3_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2)");
                    }
                    // InternalDockerCompose.g:8590:103: ( ( ( rule__Service__Group_3_2__0 ) ) )
                    // InternalDockerCompose.g:8591:5: ( ( rule__Service__Group_3_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:8597:5: ( ( rule__Service__Group_3_2__0 ) )
                    // InternalDockerCompose.g:8598:6: ( rule__Service__Group_3_2__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_2()); 
                    // InternalDockerCompose.g:8599:6: ( rule__Service__Group_3_2__0 )
                    // InternalDockerCompose.g:8599:7: rule__Service__Group_3_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:8604:3: ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:8604:3: ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) )
                    // InternalDockerCompose.g:8605:4: {...}? => ( ( ( rule__Service__Group_3_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3)");
                    }
                    // InternalDockerCompose.g:8605:103: ( ( ( rule__Service__Group_3_3__0 ) ) )
                    // InternalDockerCompose.g:8606:5: ( ( rule__Service__Group_3_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:8612:5: ( ( rule__Service__Group_3_3__0 ) )
                    // InternalDockerCompose.g:8613:6: ( rule__Service__Group_3_3__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_3()); 
                    // InternalDockerCompose.g:8614:6: ( rule__Service__Group_3_3__0 )
                    // InternalDockerCompose.g:8614:7: rule__Service__Group_3_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:8619:3: ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:8619:3: ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) )
                    // InternalDockerCompose.g:8620:4: {...}? => ( ( ( rule__Service__Group_3_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4)");
                    }
                    // InternalDockerCompose.g:8620:103: ( ( ( rule__Service__Group_3_4__0 ) ) )
                    // InternalDockerCompose.g:8621:5: ( ( rule__Service__Group_3_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:8627:5: ( ( rule__Service__Group_3_4__0 ) )
                    // InternalDockerCompose.g:8628:6: ( rule__Service__Group_3_4__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_4()); 
                    // InternalDockerCompose.g:8629:6: ( rule__Service__Group_3_4__0 )
                    // InternalDockerCompose.g:8629:7: rule__Service__Group_3_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_4()); 

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDockerCompose.g:8634:3: ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:8634:3: ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) )
                    // InternalDockerCompose.g:8635:4: {...}? => ( ( ( rule__Service__Group_3_5__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5)");
                    }
                    // InternalDockerCompose.g:8635:103: ( ( ( rule__Service__Group_3_5__0 ) ) )
                    // InternalDockerCompose.g:8636:5: ( ( rule__Service__Group_3_5__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:8642:5: ( ( rule__Service__Group_3_5__0 ) )
                    // InternalDockerCompose.g:8643:6: ( rule__Service__Group_3_5__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_5()); 
                    // InternalDockerCompose.g:8644:6: ( rule__Service__Group_3_5__0 )
                    // InternalDockerCompose.g:8644:7: rule__Service__Group_3_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_5__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_5()); 

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalDockerCompose.g:8649:3: ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:8649:3: ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) )
                    // InternalDockerCompose.g:8650:4: {...}? => ( ( ( rule__Service__Group_3_6__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6)");
                    }
                    // InternalDockerCompose.g:8650:103: ( ( ( rule__Service__Group_3_6__0 ) ) )
                    // InternalDockerCompose.g:8651:5: ( ( rule__Service__Group_3_6__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:8657:5: ( ( rule__Service__Group_3_6__0 ) )
                    // InternalDockerCompose.g:8658:6: ( rule__Service__Group_3_6__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_6()); 
                    // InternalDockerCompose.g:8659:6: ( rule__Service__Group_3_6__0 )
                    // InternalDockerCompose.g:8659:7: rule__Service__Group_3_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_6__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_6()); 

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalDockerCompose.g:8664:3: ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:8664:3: ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) )
                    // InternalDockerCompose.g:8665:4: {...}? => ( ( ( rule__Service__Group_3_7__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7)");
                    }
                    // InternalDockerCompose.g:8665:103: ( ( ( rule__Service__Group_3_7__0 ) ) )
                    // InternalDockerCompose.g:8666:5: ( ( rule__Service__Group_3_7__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:8672:5: ( ( rule__Service__Group_3_7__0 ) )
                    // InternalDockerCompose.g:8673:6: ( rule__Service__Group_3_7__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_7()); 
                    // InternalDockerCompose.g:8674:6: ( rule__Service__Group_3_7__0 )
                    // InternalDockerCompose.g:8674:7: rule__Service__Group_3_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_7__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_7()); 

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalDockerCompose.g:8679:3: ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:8679:3: ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) )
                    // InternalDockerCompose.g:8680:4: {...}? => ( ( ( rule__Service__Group_3_8__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8)");
                    }
                    // InternalDockerCompose.g:8680:103: ( ( ( rule__Service__Group_3_8__0 ) ) )
                    // InternalDockerCompose.g:8681:5: ( ( rule__Service__Group_3_8__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:8687:5: ( ( rule__Service__Group_3_8__0 ) )
                    // InternalDockerCompose.g:8688:6: ( rule__Service__Group_3_8__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_8()); 
                    // InternalDockerCompose.g:8689:6: ( rule__Service__Group_3_8__0 )
                    // InternalDockerCompose.g:8689:7: rule__Service__Group_3_8__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_8__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_8()); 

                    }


                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalDockerCompose.g:8694:3: ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:8694:3: ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) )
                    // InternalDockerCompose.g:8695:4: {...}? => ( ( ( rule__Service__Group_3_9__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9)");
                    }
                    // InternalDockerCompose.g:8695:103: ( ( ( rule__Service__Group_3_9__0 ) ) )
                    // InternalDockerCompose.g:8696:5: ( ( rule__Service__Group_3_9__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:8702:5: ( ( rule__Service__Group_3_9__0 ) )
                    // InternalDockerCompose.g:8703:6: ( rule__Service__Group_3_9__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_9()); 
                    // InternalDockerCompose.g:8704:6: ( rule__Service__Group_3_9__0 )
                    // InternalDockerCompose.g:8704:7: rule__Service__Group_3_9__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_9__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_9()); 

                    }


                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalDockerCompose.g:8709:3: ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:8709:3: ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) )
                    // InternalDockerCompose.g:8710:4: {...}? => ( ( ( rule__Service__Group_3_10__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10)");
                    }
                    // InternalDockerCompose.g:8710:104: ( ( ( rule__Service__Group_3_10__0 ) ) )
                    // InternalDockerCompose.g:8711:5: ( ( rule__Service__Group_3_10__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:8717:5: ( ( rule__Service__Group_3_10__0 ) )
                    // InternalDockerCompose.g:8718:6: ( rule__Service__Group_3_10__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_10()); 
                    // InternalDockerCompose.g:8719:6: ( rule__Service__Group_3_10__0 )
                    // InternalDockerCompose.g:8719:7: rule__Service__Group_3_10__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_10__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_10()); 

                    }


                    }


                    }


                    }
                    break;
                case 12 :
                    // InternalDockerCompose.g:8724:3: ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:8724:3: ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) )
                    // InternalDockerCompose.g:8725:4: {...}? => ( ( ( rule__Service__Group_3_11__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11)");
                    }
                    // InternalDockerCompose.g:8725:104: ( ( ( rule__Service__Group_3_11__0 ) ) )
                    // InternalDockerCompose.g:8726:5: ( ( rule__Service__Group_3_11__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:8732:5: ( ( rule__Service__Group_3_11__0 ) )
                    // InternalDockerCompose.g:8733:6: ( rule__Service__Group_3_11__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_11()); 
                    // InternalDockerCompose.g:8734:6: ( rule__Service__Group_3_11__0 )
                    // InternalDockerCompose.g:8734:7: rule__Service__Group_3_11__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_11__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_11()); 

                    }


                    }


                    }


                    }
                    break;
                case 13 :
                    // InternalDockerCompose.g:8739:3: ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:8739:3: ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) )
                    // InternalDockerCompose.g:8740:4: {...}? => ( ( ( rule__Service__Group_3_12__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12)");
                    }
                    // InternalDockerCompose.g:8740:104: ( ( ( rule__Service__Group_3_12__0 ) ) )
                    // InternalDockerCompose.g:8741:5: ( ( rule__Service__Group_3_12__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:8747:5: ( ( rule__Service__Group_3_12__0 ) )
                    // InternalDockerCompose.g:8748:6: ( rule__Service__Group_3_12__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_12()); 
                    // InternalDockerCompose.g:8749:6: ( rule__Service__Group_3_12__0 )
                    // InternalDockerCompose.g:8749:7: rule__Service__Group_3_12__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_12__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_12()); 

                    }


                    }


                    }


                    }
                    break;
                case 14 :
                    // InternalDockerCompose.g:8754:3: ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:8754:3: ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) )
                    // InternalDockerCompose.g:8755:4: {...}? => ( ( ( rule__Service__Group_3_13__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13)");
                    }
                    // InternalDockerCompose.g:8755:104: ( ( ( rule__Service__Group_3_13__0 ) ) )
                    // InternalDockerCompose.g:8756:5: ( ( rule__Service__Group_3_13__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:8762:5: ( ( rule__Service__Group_3_13__0 ) )
                    // InternalDockerCompose.g:8763:6: ( rule__Service__Group_3_13__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_13()); 
                    // InternalDockerCompose.g:8764:6: ( rule__Service__Group_3_13__0 )
                    // InternalDockerCompose.g:8764:7: rule__Service__Group_3_13__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_13__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_13()); 

                    }


                    }


                    }


                    }
                    break;
                case 15 :
                    // InternalDockerCompose.g:8769:3: ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:8769:3: ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) )
                    // InternalDockerCompose.g:8770:4: {...}? => ( ( ( rule__Service__Group_3_14__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14)");
                    }
                    // InternalDockerCompose.g:8770:104: ( ( ( rule__Service__Group_3_14__0 ) ) )
                    // InternalDockerCompose.g:8771:5: ( ( rule__Service__Group_3_14__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:8777:5: ( ( rule__Service__Group_3_14__0 ) )
                    // InternalDockerCompose.g:8778:6: ( rule__Service__Group_3_14__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_14()); 
                    // InternalDockerCompose.g:8779:6: ( rule__Service__Group_3_14__0 )
                    // InternalDockerCompose.g:8779:7: rule__Service__Group_3_14__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_14__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_14()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getServiceAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__Impl"


    // $ANTLR start "rule__Service__UnorderedGroup_3__0"
    // InternalDockerCompose.g:8792:1: rule__Service__UnorderedGroup_3__0 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__1 )? ;
    public final void rule__Service__UnorderedGroup_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8796:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__1 )? )
            // InternalDockerCompose.g:8797:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__1 )?
            {
            pushFollow(FOLLOW_42);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:8798:2: ( rule__Service__UnorderedGroup_3__1 )?
            int alt49=2;
            alt49 = dfa49.predict(input);
            switch (alt49) {
                case 1 :
                    // InternalDockerCompose.g:8798:2: rule__Service__UnorderedGroup_3__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__0"


    // $ANTLR start "rule__Service__UnorderedGroup_3__1"
    // InternalDockerCompose.g:8804:1: rule__Service__UnorderedGroup_3__1 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__2 )? ;
    public final void rule__Service__UnorderedGroup_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8808:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__2 )? )
            // InternalDockerCompose.g:8809:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__2 )?
            {
            pushFollow(FOLLOW_42);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:8810:2: ( rule__Service__UnorderedGroup_3__2 )?
            int alt50=2;
            alt50 = dfa50.predict(input);
            switch (alt50) {
                case 1 :
                    // InternalDockerCompose.g:8810:2: rule__Service__UnorderedGroup_3__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__1"


    // $ANTLR start "rule__Service__UnorderedGroup_3__2"
    // InternalDockerCompose.g:8816:1: rule__Service__UnorderedGroup_3__2 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__3 )? ;
    public final void rule__Service__UnorderedGroup_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8820:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__3 )? )
            // InternalDockerCompose.g:8821:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__3 )?
            {
            pushFollow(FOLLOW_42);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:8822:2: ( rule__Service__UnorderedGroup_3__3 )?
            int alt51=2;
            alt51 = dfa51.predict(input);
            switch (alt51) {
                case 1 :
                    // InternalDockerCompose.g:8822:2: rule__Service__UnorderedGroup_3__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__2"


    // $ANTLR start "rule__Service__UnorderedGroup_3__3"
    // InternalDockerCompose.g:8828:1: rule__Service__UnorderedGroup_3__3 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__4 )? ;
    public final void rule__Service__UnorderedGroup_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8832:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__4 )? )
            // InternalDockerCompose.g:8833:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__4 )?
            {
            pushFollow(FOLLOW_42);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:8834:2: ( rule__Service__UnorderedGroup_3__4 )?
            int alt52=2;
            alt52 = dfa52.predict(input);
            switch (alt52) {
                case 1 :
                    // InternalDockerCompose.g:8834:2: rule__Service__UnorderedGroup_3__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__3"


    // $ANTLR start "rule__Service__UnorderedGroup_3__4"
    // InternalDockerCompose.g:8840:1: rule__Service__UnorderedGroup_3__4 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__5 )? ;
    public final void rule__Service__UnorderedGroup_3__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8844:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__5 )? )
            // InternalDockerCompose.g:8845:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__5 )?
            {
            pushFollow(FOLLOW_42);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:8846:2: ( rule__Service__UnorderedGroup_3__5 )?
            int alt53=2;
            alt53 = dfa53.predict(input);
            switch (alt53) {
                case 1 :
                    // InternalDockerCompose.g:8846:2: rule__Service__UnorderedGroup_3__5
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__5();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__4"


    // $ANTLR start "rule__Service__UnorderedGroup_3__5"
    // InternalDockerCompose.g:8852:1: rule__Service__UnorderedGroup_3__5 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__6 )? ;
    public final void rule__Service__UnorderedGroup_3__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8856:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__6 )? )
            // InternalDockerCompose.g:8857:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__6 )?
            {
            pushFollow(FOLLOW_42);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:8858:2: ( rule__Service__UnorderedGroup_3__6 )?
            int alt54=2;
            alt54 = dfa54.predict(input);
            switch (alt54) {
                case 1 :
                    // InternalDockerCompose.g:8858:2: rule__Service__UnorderedGroup_3__6
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__6();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__5"


    // $ANTLR start "rule__Service__UnorderedGroup_3__6"
    // InternalDockerCompose.g:8864:1: rule__Service__UnorderedGroup_3__6 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__7 )? ;
    public final void rule__Service__UnorderedGroup_3__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8868:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__7 )? )
            // InternalDockerCompose.g:8869:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__7 )?
            {
            pushFollow(FOLLOW_42);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:8870:2: ( rule__Service__UnorderedGroup_3__7 )?
            int alt55=2;
            alt55 = dfa55.predict(input);
            switch (alt55) {
                case 1 :
                    // InternalDockerCompose.g:8870:2: rule__Service__UnorderedGroup_3__7
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__7();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__6"


    // $ANTLR start "rule__Service__UnorderedGroup_3__7"
    // InternalDockerCompose.g:8876:1: rule__Service__UnorderedGroup_3__7 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__8 )? ;
    public final void rule__Service__UnorderedGroup_3__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8880:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__8 )? )
            // InternalDockerCompose.g:8881:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__8 )?
            {
            pushFollow(FOLLOW_42);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:8882:2: ( rule__Service__UnorderedGroup_3__8 )?
            int alt56=2;
            alt56 = dfa56.predict(input);
            switch (alt56) {
                case 1 :
                    // InternalDockerCompose.g:8882:2: rule__Service__UnorderedGroup_3__8
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__8();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__7"


    // $ANTLR start "rule__Service__UnorderedGroup_3__8"
    // InternalDockerCompose.g:8888:1: rule__Service__UnorderedGroup_3__8 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__9 )? ;
    public final void rule__Service__UnorderedGroup_3__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8892:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__9 )? )
            // InternalDockerCompose.g:8893:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__9 )?
            {
            pushFollow(FOLLOW_42);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:8894:2: ( rule__Service__UnorderedGroup_3__9 )?
            int alt57=2;
            alt57 = dfa57.predict(input);
            switch (alt57) {
                case 1 :
                    // InternalDockerCompose.g:8894:2: rule__Service__UnorderedGroup_3__9
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__9();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__8"


    // $ANTLR start "rule__Service__UnorderedGroup_3__9"
    // InternalDockerCompose.g:8900:1: rule__Service__UnorderedGroup_3__9 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__10 )? ;
    public final void rule__Service__UnorderedGroup_3__9() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8904:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__10 )? )
            // InternalDockerCompose.g:8905:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__10 )?
            {
            pushFollow(FOLLOW_42);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:8906:2: ( rule__Service__UnorderedGroup_3__10 )?
            int alt58=2;
            alt58 = dfa58.predict(input);
            switch (alt58) {
                case 1 :
                    // InternalDockerCompose.g:8906:2: rule__Service__UnorderedGroup_3__10
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__10();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__9"


    // $ANTLR start "rule__Service__UnorderedGroup_3__10"
    // InternalDockerCompose.g:8912:1: rule__Service__UnorderedGroup_3__10 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__11 )? ;
    public final void rule__Service__UnorderedGroup_3__10() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8916:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__11 )? )
            // InternalDockerCompose.g:8917:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__11 )?
            {
            pushFollow(FOLLOW_42);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:8918:2: ( rule__Service__UnorderedGroup_3__11 )?
            int alt59=2;
            alt59 = dfa59.predict(input);
            switch (alt59) {
                case 1 :
                    // InternalDockerCompose.g:8918:2: rule__Service__UnorderedGroup_3__11
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__11();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__10"


    // $ANTLR start "rule__Service__UnorderedGroup_3__11"
    // InternalDockerCompose.g:8924:1: rule__Service__UnorderedGroup_3__11 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__12 )? ;
    public final void rule__Service__UnorderedGroup_3__11() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8928:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__12 )? )
            // InternalDockerCompose.g:8929:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__12 )?
            {
            pushFollow(FOLLOW_42);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:8930:2: ( rule__Service__UnorderedGroup_3__12 )?
            int alt60=2;
            alt60 = dfa60.predict(input);
            switch (alt60) {
                case 1 :
                    // InternalDockerCompose.g:8930:2: rule__Service__UnorderedGroup_3__12
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__12();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__11"


    // $ANTLR start "rule__Service__UnorderedGroup_3__12"
    // InternalDockerCompose.g:8936:1: rule__Service__UnorderedGroup_3__12 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__13 )? ;
    public final void rule__Service__UnorderedGroup_3__12() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8940:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__13 )? )
            // InternalDockerCompose.g:8941:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__13 )?
            {
            pushFollow(FOLLOW_42);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:8942:2: ( rule__Service__UnorderedGroup_3__13 )?
            int alt61=2;
            alt61 = dfa61.predict(input);
            switch (alt61) {
                case 1 :
                    // InternalDockerCompose.g:8942:2: rule__Service__UnorderedGroup_3__13
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__13();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__12"


    // $ANTLR start "rule__Service__UnorderedGroup_3__13"
    // InternalDockerCompose.g:8948:1: rule__Service__UnorderedGroup_3__13 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__14 )? ;
    public final void rule__Service__UnorderedGroup_3__13() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8952:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__14 )? )
            // InternalDockerCompose.g:8953:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__14 )?
            {
            pushFollow(FOLLOW_42);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:8954:2: ( rule__Service__UnorderedGroup_3__14 )?
            int alt62=2;
            alt62 = dfa62.predict(input);
            switch (alt62) {
                case 1 :
                    // InternalDockerCompose.g:8954:2: rule__Service__UnorderedGroup_3__14
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__14();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__13"


    // $ANTLR start "rule__Service__UnorderedGroup_3__14"
    // InternalDockerCompose.g:8960:1: rule__Service__UnorderedGroup_3__14 : rule__Service__UnorderedGroup_3__Impl ;
    public final void rule__Service__UnorderedGroup_3__14() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8964:1: ( rule__Service__UnorderedGroup_3__Impl )
            // InternalDockerCompose.g:8965:2: rule__Service__UnorderedGroup_3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__14"


    // $ANTLR start "rule__NetworkConnector__UnorderedGroup_1_2"
    // InternalDockerCompose.g:8972:1: rule__NetworkConnector__UnorderedGroup_1_2 : ( rule__NetworkConnector__UnorderedGroup_1_2__0 )? ;
    public final void rule__NetworkConnector__UnorderedGroup_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2());
        	
        try {
            // InternalDockerCompose.g:8977:1: ( ( rule__NetworkConnector__UnorderedGroup_1_2__0 )? )
            // InternalDockerCompose.g:8978:2: ( rule__NetworkConnector__UnorderedGroup_1_2__0 )?
            {
            // InternalDockerCompose.g:8978:2: ( rule__NetworkConnector__UnorderedGroup_1_2__0 )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( LA63_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2(), 0) ) {
                alt63=1;
            }
            else if ( LA63_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2(), 1) ) {
                alt63=1;
            }
            else if ( LA63_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2(), 2) ) {
                alt63=1;
            }
            else if ( LA63_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2(), 3) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalDockerCompose.g:8978:2: rule__NetworkConnector__UnorderedGroup_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector__UnorderedGroup_1_2__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__UnorderedGroup_1_2"


    // $ANTLR start "rule__NetworkConnector__UnorderedGroup_1_2__Impl"
    // InternalDockerCompose.g:8986:1: rule__NetworkConnector__UnorderedGroup_1_2__Impl : ( ({...}? => ( ( ( rule__NetworkConnector__Group_1_2_0__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_2_1__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_2_2__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_2_3__0 ) ) ) ) ) ;
    public final void rule__NetworkConnector__UnorderedGroup_1_2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:8991:1: ( ( ({...}? => ( ( ( rule__NetworkConnector__Group_1_2_0__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_2_1__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_2_2__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_2_3__0 ) ) ) ) ) )
            // InternalDockerCompose.g:8992:3: ( ({...}? => ( ( ( rule__NetworkConnector__Group_1_2_0__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_2_1__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_2_2__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_2_3__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:8992:3: ( ({...}? => ( ( ( rule__NetworkConnector__Group_1_2_0__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_2_1__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_2_2__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_2_3__0 ) ) ) ) )
            int alt64=4;
            int LA64_0 = input.LA(1);

            if ( LA64_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2(), 0) ) {
                alt64=1;
            }
            else if ( LA64_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2(), 1) ) {
                alt64=2;
            }
            else if ( LA64_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2(), 2) ) {
                alt64=3;
            }
            else if ( LA64_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2(), 3) ) {
                alt64=4;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 64, 0, input);

                throw nvae;
            }
            switch (alt64) {
                case 1 :
                    // InternalDockerCompose.g:8993:3: ({...}? => ( ( ( rule__NetworkConnector__Group_1_2_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:8993:3: ({...}? => ( ( ( rule__NetworkConnector__Group_1_2_0__0 ) ) ) )
                    // InternalDockerCompose.g:8994:4: {...}? => ( ( ( rule__NetworkConnector__Group_1_2_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2(), 0) ) {
                        throw new FailedPredicateException(input, "rule__NetworkConnector__UnorderedGroup_1_2__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2(), 0)");
                    }
                    // InternalDockerCompose.g:8994:114: ( ( ( rule__NetworkConnector__Group_1_2_0__0 ) ) )
                    // InternalDockerCompose.g:8995:5: ( ( rule__NetworkConnector__Group_1_2_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9001:5: ( ( rule__NetworkConnector__Group_1_2_0__0 ) )
                    // InternalDockerCompose.g:9002:6: ( rule__NetworkConnector__Group_1_2_0__0 )
                    {
                     before(grammarAccess.getNetworkConnectorAccess().getGroup_1_2_0()); 
                    // InternalDockerCompose.g:9003:6: ( rule__NetworkConnector__Group_1_2_0__0 )
                    // InternalDockerCompose.g:9003:7: rule__NetworkConnector__Group_1_2_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector__Group_1_2_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkConnectorAccess().getGroup_1_2_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:9008:3: ({...}? => ( ( ( rule__NetworkConnector__Group_1_2_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9008:3: ({...}? => ( ( ( rule__NetworkConnector__Group_1_2_1__0 ) ) ) )
                    // InternalDockerCompose.g:9009:4: {...}? => ( ( ( rule__NetworkConnector__Group_1_2_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2(), 1) ) {
                        throw new FailedPredicateException(input, "rule__NetworkConnector__UnorderedGroup_1_2__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2(), 1)");
                    }
                    // InternalDockerCompose.g:9009:114: ( ( ( rule__NetworkConnector__Group_1_2_1__0 ) ) )
                    // InternalDockerCompose.g:9010:5: ( ( rule__NetworkConnector__Group_1_2_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9016:5: ( ( rule__NetworkConnector__Group_1_2_1__0 ) )
                    // InternalDockerCompose.g:9017:6: ( rule__NetworkConnector__Group_1_2_1__0 )
                    {
                     before(grammarAccess.getNetworkConnectorAccess().getGroup_1_2_1()); 
                    // InternalDockerCompose.g:9018:6: ( rule__NetworkConnector__Group_1_2_1__0 )
                    // InternalDockerCompose.g:9018:7: rule__NetworkConnector__Group_1_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector__Group_1_2_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkConnectorAccess().getGroup_1_2_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:9023:3: ({...}? => ( ( ( rule__NetworkConnector__Group_1_2_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9023:3: ({...}? => ( ( ( rule__NetworkConnector__Group_1_2_2__0 ) ) ) )
                    // InternalDockerCompose.g:9024:4: {...}? => ( ( ( rule__NetworkConnector__Group_1_2_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2(), 2) ) {
                        throw new FailedPredicateException(input, "rule__NetworkConnector__UnorderedGroup_1_2__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2(), 2)");
                    }
                    // InternalDockerCompose.g:9024:114: ( ( ( rule__NetworkConnector__Group_1_2_2__0 ) ) )
                    // InternalDockerCompose.g:9025:5: ( ( rule__NetworkConnector__Group_1_2_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9031:5: ( ( rule__NetworkConnector__Group_1_2_2__0 ) )
                    // InternalDockerCompose.g:9032:6: ( rule__NetworkConnector__Group_1_2_2__0 )
                    {
                     before(grammarAccess.getNetworkConnectorAccess().getGroup_1_2_2()); 
                    // InternalDockerCompose.g:9033:6: ( rule__NetworkConnector__Group_1_2_2__0 )
                    // InternalDockerCompose.g:9033:7: rule__NetworkConnector__Group_1_2_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector__Group_1_2_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkConnectorAccess().getGroup_1_2_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:9038:3: ({...}? => ( ( ( rule__NetworkConnector__Group_1_2_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9038:3: ({...}? => ( ( ( rule__NetworkConnector__Group_1_2_3__0 ) ) ) )
                    // InternalDockerCompose.g:9039:4: {...}? => ( ( ( rule__NetworkConnector__Group_1_2_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2(), 3) ) {
                        throw new FailedPredicateException(input, "rule__NetworkConnector__UnorderedGroup_1_2__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2(), 3)");
                    }
                    // InternalDockerCompose.g:9039:114: ( ( ( rule__NetworkConnector__Group_1_2_3__0 ) ) )
                    // InternalDockerCompose.g:9040:5: ( ( rule__NetworkConnector__Group_1_2_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9046:5: ( ( rule__NetworkConnector__Group_1_2_3__0 ) )
                    // InternalDockerCompose.g:9047:6: ( rule__NetworkConnector__Group_1_2_3__0 )
                    {
                     before(grammarAccess.getNetworkConnectorAccess().getGroup_1_2_3()); 
                    // InternalDockerCompose.g:9048:6: ( rule__NetworkConnector__Group_1_2_3__0 )
                    // InternalDockerCompose.g:9048:7: rule__NetworkConnector__Group_1_2_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector__Group_1_2_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkConnectorAccess().getGroup_1_2_3()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__UnorderedGroup_1_2__Impl"


    // $ANTLR start "rule__NetworkConnector__UnorderedGroup_1_2__0"
    // InternalDockerCompose.g:9061:1: rule__NetworkConnector__UnorderedGroup_1_2__0 : rule__NetworkConnector__UnorderedGroup_1_2__Impl ( rule__NetworkConnector__UnorderedGroup_1_2__1 )? ;
    public final void rule__NetworkConnector__UnorderedGroup_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9065:1: ( rule__NetworkConnector__UnorderedGroup_1_2__Impl ( rule__NetworkConnector__UnorderedGroup_1_2__1 )? )
            // InternalDockerCompose.g:9066:2: rule__NetworkConnector__UnorderedGroup_1_2__Impl ( rule__NetworkConnector__UnorderedGroup_1_2__1 )?
            {
            pushFollow(FOLLOW_43);
            rule__NetworkConnector__UnorderedGroup_1_2__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9067:2: ( rule__NetworkConnector__UnorderedGroup_1_2__1 )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( LA65_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2(), 0) ) {
                alt65=1;
            }
            else if ( LA65_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2(), 1) ) {
                alt65=1;
            }
            else if ( LA65_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2(), 2) ) {
                alt65=1;
            }
            else if ( LA65_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2(), 3) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // InternalDockerCompose.g:9067:2: rule__NetworkConnector__UnorderedGroup_1_2__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector__UnorderedGroup_1_2__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__UnorderedGroup_1_2__0"


    // $ANTLR start "rule__NetworkConnector__UnorderedGroup_1_2__1"
    // InternalDockerCompose.g:9073:1: rule__NetworkConnector__UnorderedGroup_1_2__1 : rule__NetworkConnector__UnorderedGroup_1_2__Impl ( rule__NetworkConnector__UnorderedGroup_1_2__2 )? ;
    public final void rule__NetworkConnector__UnorderedGroup_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9077:1: ( rule__NetworkConnector__UnorderedGroup_1_2__Impl ( rule__NetworkConnector__UnorderedGroup_1_2__2 )? )
            // InternalDockerCompose.g:9078:2: rule__NetworkConnector__UnorderedGroup_1_2__Impl ( rule__NetworkConnector__UnorderedGroup_1_2__2 )?
            {
            pushFollow(FOLLOW_43);
            rule__NetworkConnector__UnorderedGroup_1_2__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9079:2: ( rule__NetworkConnector__UnorderedGroup_1_2__2 )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( LA66_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2(), 0) ) {
                alt66=1;
            }
            else if ( LA66_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2(), 1) ) {
                alt66=1;
            }
            else if ( LA66_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2(), 2) ) {
                alt66=1;
            }
            else if ( LA66_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2(), 3) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalDockerCompose.g:9079:2: rule__NetworkConnector__UnorderedGroup_1_2__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector__UnorderedGroup_1_2__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__UnorderedGroup_1_2__1"


    // $ANTLR start "rule__NetworkConnector__UnorderedGroup_1_2__2"
    // InternalDockerCompose.g:9085:1: rule__NetworkConnector__UnorderedGroup_1_2__2 : rule__NetworkConnector__UnorderedGroup_1_2__Impl ( rule__NetworkConnector__UnorderedGroup_1_2__3 )? ;
    public final void rule__NetworkConnector__UnorderedGroup_1_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9089:1: ( rule__NetworkConnector__UnorderedGroup_1_2__Impl ( rule__NetworkConnector__UnorderedGroup_1_2__3 )? )
            // InternalDockerCompose.g:9090:2: rule__NetworkConnector__UnorderedGroup_1_2__Impl ( rule__NetworkConnector__UnorderedGroup_1_2__3 )?
            {
            pushFollow(FOLLOW_43);
            rule__NetworkConnector__UnorderedGroup_1_2__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9091:2: ( rule__NetworkConnector__UnorderedGroup_1_2__3 )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( LA67_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2(), 0) ) {
                alt67=1;
            }
            else if ( LA67_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2(), 1) ) {
                alt67=1;
            }
            else if ( LA67_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2(), 2) ) {
                alt67=1;
            }
            else if ( LA67_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_2(), 3) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalDockerCompose.g:9091:2: rule__NetworkConnector__UnorderedGroup_1_2__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector__UnorderedGroup_1_2__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__UnorderedGroup_1_2__2"


    // $ANTLR start "rule__NetworkConnector__UnorderedGroup_1_2__3"
    // InternalDockerCompose.g:9097:1: rule__NetworkConnector__UnorderedGroup_1_2__3 : rule__NetworkConnector__UnorderedGroup_1_2__Impl ;
    public final void rule__NetworkConnector__UnorderedGroup_1_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9101:1: ( rule__NetworkConnector__UnorderedGroup_1_2__Impl )
            // InternalDockerCompose.g:9102:2: rule__NetworkConnector__UnorderedGroup_1_2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__UnorderedGroup_1_2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__UnorderedGroup_1_2__3"


    // $ANTLR start "rule__VolumeConnector__UnorderedGroup_1_1"
    // InternalDockerCompose.g:9109:1: rule__VolumeConnector__UnorderedGroup_1_1 : rule__VolumeConnector__UnorderedGroup_1_1__0 {...}?;
    public final void rule__VolumeConnector__UnorderedGroup_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1());
        	
        try {
            // InternalDockerCompose.g:9114:1: ( rule__VolumeConnector__UnorderedGroup_1_1__0 {...}?)
            // InternalDockerCompose.g:9115:2: rule__VolumeConnector__UnorderedGroup_1_1__0 {...}?
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__UnorderedGroup_1_1__0();

            state._fsp--;

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1()) ) {
                throw new FailedPredicateException(input, "rule__VolumeConnector__UnorderedGroup_1_1", "getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1())");
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__UnorderedGroup_1_1"


    // $ANTLR start "rule__VolumeConnector__UnorderedGroup_1_1__Impl"
    // InternalDockerCompose.g:9123:1: rule__VolumeConnector__UnorderedGroup_1_1__Impl : ( ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_6__0 ) ) ) ) ) ;
    public final void rule__VolumeConnector__UnorderedGroup_1_1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:9128:1: ( ( ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_6__0 ) ) ) ) ) )
            // InternalDockerCompose.g:9129:3: ( ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_6__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:9129:3: ( ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_6__0 ) ) ) ) )
            int alt68=7;
            int LA68_0 = input.LA(1);

            if ( LA68_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 0) ) {
                alt68=1;
            }
            else if ( LA68_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 1) ) {
                alt68=2;
            }
            else if ( LA68_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 2) ) {
                alt68=3;
            }
            else if ( LA68_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 3) ) {
                alt68=4;
            }
            else if ( LA68_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 4) ) {
                alt68=5;
            }
            else if ( LA68_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 5) ) {
                alt68=6;
            }
            else if ( LA68_0 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 6) ) {
                alt68=7;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 68, 0, input);

                throw nvae;
            }
            switch (alt68) {
                case 1 :
                    // InternalDockerCompose.g:9130:3: ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9130:3: ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_0__0 ) ) ) )
                    // InternalDockerCompose.g:9131:4: {...}? => ( ( ( rule__VolumeConnector__Group_1_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 0) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 0)");
                    }
                    // InternalDockerCompose.g:9131:113: ( ( ( rule__VolumeConnector__Group_1_1_0__0 ) ) )
                    // InternalDockerCompose.g:9132:5: ( ( rule__VolumeConnector__Group_1_1_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9138:5: ( ( rule__VolumeConnector__Group_1_1_0__0 ) )
                    // InternalDockerCompose.g:9139:6: ( rule__VolumeConnector__Group_1_1_0__0 )
                    {
                     before(grammarAccess.getVolumeConnectorAccess().getGroup_1_1_0()); 
                    // InternalDockerCompose.g:9140:6: ( rule__VolumeConnector__Group_1_1_0__0 )
                    // InternalDockerCompose.g:9140:7: rule__VolumeConnector__Group_1_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector__Group_1_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnectorAccess().getGroup_1_1_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:9145:3: ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9145:3: ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_1__0 ) ) ) )
                    // InternalDockerCompose.g:9146:4: {...}? => ( ( ( rule__VolumeConnector__Group_1_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 1) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 1)");
                    }
                    // InternalDockerCompose.g:9146:113: ( ( ( rule__VolumeConnector__Group_1_1_1__0 ) ) )
                    // InternalDockerCompose.g:9147:5: ( ( rule__VolumeConnector__Group_1_1_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9153:5: ( ( rule__VolumeConnector__Group_1_1_1__0 ) )
                    // InternalDockerCompose.g:9154:6: ( rule__VolumeConnector__Group_1_1_1__0 )
                    {
                     before(grammarAccess.getVolumeConnectorAccess().getGroup_1_1_1()); 
                    // InternalDockerCompose.g:9155:6: ( rule__VolumeConnector__Group_1_1_1__0 )
                    // InternalDockerCompose.g:9155:7: rule__VolumeConnector__Group_1_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector__Group_1_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnectorAccess().getGroup_1_1_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:9160:3: ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9160:3: ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_2__0 ) ) ) )
                    // InternalDockerCompose.g:9161:4: {...}? => ( ( ( rule__VolumeConnector__Group_1_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 2) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 2)");
                    }
                    // InternalDockerCompose.g:9161:113: ( ( ( rule__VolumeConnector__Group_1_1_2__0 ) ) )
                    // InternalDockerCompose.g:9162:5: ( ( rule__VolumeConnector__Group_1_1_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9168:5: ( ( rule__VolumeConnector__Group_1_1_2__0 ) )
                    // InternalDockerCompose.g:9169:6: ( rule__VolumeConnector__Group_1_1_2__0 )
                    {
                     before(grammarAccess.getVolumeConnectorAccess().getGroup_1_1_2()); 
                    // InternalDockerCompose.g:9170:6: ( rule__VolumeConnector__Group_1_1_2__0 )
                    // InternalDockerCompose.g:9170:7: rule__VolumeConnector__Group_1_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector__Group_1_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnectorAccess().getGroup_1_1_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:9175:3: ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9175:3: ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_3__0 ) ) ) )
                    // InternalDockerCompose.g:9176:4: {...}? => ( ( ( rule__VolumeConnector__Group_1_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 3) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 3)");
                    }
                    // InternalDockerCompose.g:9176:113: ( ( ( rule__VolumeConnector__Group_1_1_3__0 ) ) )
                    // InternalDockerCompose.g:9177:5: ( ( rule__VolumeConnector__Group_1_1_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9183:5: ( ( rule__VolumeConnector__Group_1_1_3__0 ) )
                    // InternalDockerCompose.g:9184:6: ( rule__VolumeConnector__Group_1_1_3__0 )
                    {
                     before(grammarAccess.getVolumeConnectorAccess().getGroup_1_1_3()); 
                    // InternalDockerCompose.g:9185:6: ( rule__VolumeConnector__Group_1_1_3__0 )
                    // InternalDockerCompose.g:9185:7: rule__VolumeConnector__Group_1_1_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector__Group_1_1_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnectorAccess().getGroup_1_1_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:9190:3: ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9190:3: ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_4__0 ) ) ) )
                    // InternalDockerCompose.g:9191:4: {...}? => ( ( ( rule__VolumeConnector__Group_1_1_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 4) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 4)");
                    }
                    // InternalDockerCompose.g:9191:113: ( ( ( rule__VolumeConnector__Group_1_1_4__0 ) ) )
                    // InternalDockerCompose.g:9192:5: ( ( rule__VolumeConnector__Group_1_1_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9198:5: ( ( rule__VolumeConnector__Group_1_1_4__0 ) )
                    // InternalDockerCompose.g:9199:6: ( rule__VolumeConnector__Group_1_1_4__0 )
                    {
                     before(grammarAccess.getVolumeConnectorAccess().getGroup_1_1_4()); 
                    // InternalDockerCompose.g:9200:6: ( rule__VolumeConnector__Group_1_1_4__0 )
                    // InternalDockerCompose.g:9200:7: rule__VolumeConnector__Group_1_1_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector__Group_1_1_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnectorAccess().getGroup_1_1_4()); 

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDockerCompose.g:9205:3: ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_5__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9205:3: ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_5__0 ) ) ) )
                    // InternalDockerCompose.g:9206:4: {...}? => ( ( ( rule__VolumeConnector__Group_1_1_5__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 5) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 5)");
                    }
                    // InternalDockerCompose.g:9206:113: ( ( ( rule__VolumeConnector__Group_1_1_5__0 ) ) )
                    // InternalDockerCompose.g:9207:5: ( ( rule__VolumeConnector__Group_1_1_5__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 5);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9213:5: ( ( rule__VolumeConnector__Group_1_1_5__0 ) )
                    // InternalDockerCompose.g:9214:6: ( rule__VolumeConnector__Group_1_1_5__0 )
                    {
                     before(grammarAccess.getVolumeConnectorAccess().getGroup_1_1_5()); 
                    // InternalDockerCompose.g:9215:6: ( rule__VolumeConnector__Group_1_1_5__0 )
                    // InternalDockerCompose.g:9215:7: rule__VolumeConnector__Group_1_1_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector__Group_1_1_5__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnectorAccess().getGroup_1_1_5()); 

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalDockerCompose.g:9220:3: ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_6__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9220:3: ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_6__0 ) ) ) )
                    // InternalDockerCompose.g:9221:4: {...}? => ( ( ( rule__VolumeConnector__Group_1_1_6__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 6) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 6)");
                    }
                    // InternalDockerCompose.g:9221:113: ( ( ( rule__VolumeConnector__Group_1_1_6__0 ) ) )
                    // InternalDockerCompose.g:9222:5: ( ( rule__VolumeConnector__Group_1_1_6__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 6);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9228:5: ( ( rule__VolumeConnector__Group_1_1_6__0 ) )
                    // InternalDockerCompose.g:9229:6: ( rule__VolumeConnector__Group_1_1_6__0 )
                    {
                     before(grammarAccess.getVolumeConnectorAccess().getGroup_1_1_6()); 
                    // InternalDockerCompose.g:9230:6: ( rule__VolumeConnector__Group_1_1_6__0 )
                    // InternalDockerCompose.g:9230:7: rule__VolumeConnector__Group_1_1_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector__Group_1_1_6__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnectorAccess().getGroup_1_1_6()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__UnorderedGroup_1_1__Impl"


    // $ANTLR start "rule__VolumeConnector__UnorderedGroup_1_1__0"
    // InternalDockerCompose.g:9243:1: rule__VolumeConnector__UnorderedGroup_1_1__0 : rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__1 )? ;
    public final void rule__VolumeConnector__UnorderedGroup_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9247:1: ( rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__1 )? )
            // InternalDockerCompose.g:9248:2: rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__1 )?
            {
            pushFollow(FOLLOW_44);
            rule__VolumeConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9249:2: ( rule__VolumeConnector__UnorderedGroup_1_1__1 )?
            int alt69=2;
            alt69 = dfa69.predict(input);
            switch (alt69) {
                case 1 :
                    // InternalDockerCompose.g:9249:2: rule__VolumeConnector__UnorderedGroup_1_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector__UnorderedGroup_1_1__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__UnorderedGroup_1_1__0"


    // $ANTLR start "rule__VolumeConnector__UnorderedGroup_1_1__1"
    // InternalDockerCompose.g:9255:1: rule__VolumeConnector__UnorderedGroup_1_1__1 : rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__2 )? ;
    public final void rule__VolumeConnector__UnorderedGroup_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9259:1: ( rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__2 )? )
            // InternalDockerCompose.g:9260:2: rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__2 )?
            {
            pushFollow(FOLLOW_44);
            rule__VolumeConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9261:2: ( rule__VolumeConnector__UnorderedGroup_1_1__2 )?
            int alt70=2;
            alt70 = dfa70.predict(input);
            switch (alt70) {
                case 1 :
                    // InternalDockerCompose.g:9261:2: rule__VolumeConnector__UnorderedGroup_1_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector__UnorderedGroup_1_1__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__UnorderedGroup_1_1__1"


    // $ANTLR start "rule__VolumeConnector__UnorderedGroup_1_1__2"
    // InternalDockerCompose.g:9267:1: rule__VolumeConnector__UnorderedGroup_1_1__2 : rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__3 )? ;
    public final void rule__VolumeConnector__UnorderedGroup_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9271:1: ( rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__3 )? )
            // InternalDockerCompose.g:9272:2: rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__3 )?
            {
            pushFollow(FOLLOW_44);
            rule__VolumeConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9273:2: ( rule__VolumeConnector__UnorderedGroup_1_1__3 )?
            int alt71=2;
            alt71 = dfa71.predict(input);
            switch (alt71) {
                case 1 :
                    // InternalDockerCompose.g:9273:2: rule__VolumeConnector__UnorderedGroup_1_1__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector__UnorderedGroup_1_1__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__UnorderedGroup_1_1__2"


    // $ANTLR start "rule__VolumeConnector__UnorderedGroup_1_1__3"
    // InternalDockerCompose.g:9279:1: rule__VolumeConnector__UnorderedGroup_1_1__3 : rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__4 )? ;
    public final void rule__VolumeConnector__UnorderedGroup_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9283:1: ( rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__4 )? )
            // InternalDockerCompose.g:9284:2: rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__4 )?
            {
            pushFollow(FOLLOW_44);
            rule__VolumeConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9285:2: ( rule__VolumeConnector__UnorderedGroup_1_1__4 )?
            int alt72=2;
            alt72 = dfa72.predict(input);
            switch (alt72) {
                case 1 :
                    // InternalDockerCompose.g:9285:2: rule__VolumeConnector__UnorderedGroup_1_1__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector__UnorderedGroup_1_1__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__UnorderedGroup_1_1__3"


    // $ANTLR start "rule__VolumeConnector__UnorderedGroup_1_1__4"
    // InternalDockerCompose.g:9291:1: rule__VolumeConnector__UnorderedGroup_1_1__4 : rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__5 )? ;
    public final void rule__VolumeConnector__UnorderedGroup_1_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9295:1: ( rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__5 )? )
            // InternalDockerCompose.g:9296:2: rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__5 )?
            {
            pushFollow(FOLLOW_44);
            rule__VolumeConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9297:2: ( rule__VolumeConnector__UnorderedGroup_1_1__5 )?
            int alt73=2;
            alt73 = dfa73.predict(input);
            switch (alt73) {
                case 1 :
                    // InternalDockerCompose.g:9297:2: rule__VolumeConnector__UnorderedGroup_1_1__5
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector__UnorderedGroup_1_1__5();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__UnorderedGroup_1_1__4"


    // $ANTLR start "rule__VolumeConnector__UnorderedGroup_1_1__5"
    // InternalDockerCompose.g:9303:1: rule__VolumeConnector__UnorderedGroup_1_1__5 : rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__6 )? ;
    public final void rule__VolumeConnector__UnorderedGroup_1_1__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9307:1: ( rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__6 )? )
            // InternalDockerCompose.g:9308:2: rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__6 )?
            {
            pushFollow(FOLLOW_44);
            rule__VolumeConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9309:2: ( rule__VolumeConnector__UnorderedGroup_1_1__6 )?
            int alt74=2;
            alt74 = dfa74.predict(input);
            switch (alt74) {
                case 1 :
                    // InternalDockerCompose.g:9309:2: rule__VolumeConnector__UnorderedGroup_1_1__6
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector__UnorderedGroup_1_1__6();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__UnorderedGroup_1_1__5"


    // $ANTLR start "rule__VolumeConnector__UnorderedGroup_1_1__6"
    // InternalDockerCompose.g:9315:1: rule__VolumeConnector__UnorderedGroup_1_1__6 : rule__VolumeConnector__UnorderedGroup_1_1__Impl ;
    public final void rule__VolumeConnector__UnorderedGroup_1_1__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9319:1: ( rule__VolumeConnector__UnorderedGroup_1_1__Impl )
            // InternalDockerCompose.g:9320:2: rule__VolumeConnector__UnorderedGroup_1_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__UnorderedGroup_1_1__6"


    // $ANTLR start "rule__ConfigConnector__UnorderedGroup_1_1"
    // InternalDockerCompose.g:9327:1: rule__ConfigConnector__UnorderedGroup_1_1 : rule__ConfigConnector__UnorderedGroup_1_1__0 {...}?;
    public final void rule__ConfigConnector__UnorderedGroup_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1());
        	
        try {
            // InternalDockerCompose.g:9332:1: ( rule__ConfigConnector__UnorderedGroup_1_1__0 {...}?)
            // InternalDockerCompose.g:9333:2: rule__ConfigConnector__UnorderedGroup_1_1__0 {...}?
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector__UnorderedGroup_1_1__0();

            state._fsp--;

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1()) ) {
                throw new FailedPredicateException(input, "rule__ConfigConnector__UnorderedGroup_1_1", "getUnorderedGroupHelper().canLeave(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1())");
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__UnorderedGroup_1_1"


    // $ANTLR start "rule__ConfigConnector__UnorderedGroup_1_1__Impl"
    // InternalDockerCompose.g:9341:1: rule__ConfigConnector__UnorderedGroup_1_1__Impl : ( ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_4__0 ) ) ) ) ) ;
    public final void rule__ConfigConnector__UnorderedGroup_1_1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:9346:1: ( ( ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_4__0 ) ) ) ) ) )
            // InternalDockerCompose.g:9347:3: ( ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_4__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:9347:3: ( ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_4__0 ) ) ) ) )
            int alt75=5;
            int LA75_0 = input.LA(1);

            if ( LA75_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 0) ) {
                alt75=1;
            }
            else if ( LA75_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 1) ) {
                alt75=2;
            }
            else if ( LA75_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 2) ) {
                alt75=3;
            }
            else if ( LA75_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 3) ) {
                alt75=4;
            }
            else if ( LA75_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 4) ) {
                alt75=5;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 75, 0, input);

                throw nvae;
            }
            switch (alt75) {
                case 1 :
                    // InternalDockerCompose.g:9348:3: ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9348:3: ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_0__0 ) ) ) )
                    // InternalDockerCompose.g:9349:4: {...}? => ( ( ( rule__ConfigConnector__Group_1_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 0) ) {
                        throw new FailedPredicateException(input, "rule__ConfigConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 0)");
                    }
                    // InternalDockerCompose.g:9349:113: ( ( ( rule__ConfigConnector__Group_1_1_0__0 ) ) )
                    // InternalDockerCompose.g:9350:5: ( ( rule__ConfigConnector__Group_1_1_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9356:5: ( ( rule__ConfigConnector__Group_1_1_0__0 ) )
                    // InternalDockerCompose.g:9357:6: ( rule__ConfigConnector__Group_1_1_0__0 )
                    {
                     before(grammarAccess.getConfigConnectorAccess().getGroup_1_1_0()); 
                    // InternalDockerCompose.g:9358:6: ( rule__ConfigConnector__Group_1_1_0__0 )
                    // InternalDockerCompose.g:9358:7: rule__ConfigConnector__Group_1_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector__Group_1_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigConnectorAccess().getGroup_1_1_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:9363:3: ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9363:3: ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_1__0 ) ) ) )
                    // InternalDockerCompose.g:9364:4: {...}? => ( ( ( rule__ConfigConnector__Group_1_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 1) ) {
                        throw new FailedPredicateException(input, "rule__ConfigConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 1)");
                    }
                    // InternalDockerCompose.g:9364:113: ( ( ( rule__ConfigConnector__Group_1_1_1__0 ) ) )
                    // InternalDockerCompose.g:9365:5: ( ( rule__ConfigConnector__Group_1_1_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9371:5: ( ( rule__ConfigConnector__Group_1_1_1__0 ) )
                    // InternalDockerCompose.g:9372:6: ( rule__ConfigConnector__Group_1_1_1__0 )
                    {
                     before(grammarAccess.getConfigConnectorAccess().getGroup_1_1_1()); 
                    // InternalDockerCompose.g:9373:6: ( rule__ConfigConnector__Group_1_1_1__0 )
                    // InternalDockerCompose.g:9373:7: rule__ConfigConnector__Group_1_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector__Group_1_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigConnectorAccess().getGroup_1_1_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:9378:3: ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9378:3: ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_2__0 ) ) ) )
                    // InternalDockerCompose.g:9379:4: {...}? => ( ( ( rule__ConfigConnector__Group_1_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 2) ) {
                        throw new FailedPredicateException(input, "rule__ConfigConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 2)");
                    }
                    // InternalDockerCompose.g:9379:113: ( ( ( rule__ConfigConnector__Group_1_1_2__0 ) ) )
                    // InternalDockerCompose.g:9380:5: ( ( rule__ConfigConnector__Group_1_1_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9386:5: ( ( rule__ConfigConnector__Group_1_1_2__0 ) )
                    // InternalDockerCompose.g:9387:6: ( rule__ConfigConnector__Group_1_1_2__0 )
                    {
                     before(grammarAccess.getConfigConnectorAccess().getGroup_1_1_2()); 
                    // InternalDockerCompose.g:9388:6: ( rule__ConfigConnector__Group_1_1_2__0 )
                    // InternalDockerCompose.g:9388:7: rule__ConfigConnector__Group_1_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector__Group_1_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigConnectorAccess().getGroup_1_1_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:9393:3: ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9393:3: ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_3__0 ) ) ) )
                    // InternalDockerCompose.g:9394:4: {...}? => ( ( ( rule__ConfigConnector__Group_1_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 3) ) {
                        throw new FailedPredicateException(input, "rule__ConfigConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 3)");
                    }
                    // InternalDockerCompose.g:9394:113: ( ( ( rule__ConfigConnector__Group_1_1_3__0 ) ) )
                    // InternalDockerCompose.g:9395:5: ( ( rule__ConfigConnector__Group_1_1_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9401:5: ( ( rule__ConfigConnector__Group_1_1_3__0 ) )
                    // InternalDockerCompose.g:9402:6: ( rule__ConfigConnector__Group_1_1_3__0 )
                    {
                     before(grammarAccess.getConfigConnectorAccess().getGroup_1_1_3()); 
                    // InternalDockerCompose.g:9403:6: ( rule__ConfigConnector__Group_1_1_3__0 )
                    // InternalDockerCompose.g:9403:7: rule__ConfigConnector__Group_1_1_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector__Group_1_1_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigConnectorAccess().getGroup_1_1_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:9408:3: ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9408:3: ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_4__0 ) ) ) )
                    // InternalDockerCompose.g:9409:4: {...}? => ( ( ( rule__ConfigConnector__Group_1_1_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 4) ) {
                        throw new FailedPredicateException(input, "rule__ConfigConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 4)");
                    }
                    // InternalDockerCompose.g:9409:113: ( ( ( rule__ConfigConnector__Group_1_1_4__0 ) ) )
                    // InternalDockerCompose.g:9410:5: ( ( rule__ConfigConnector__Group_1_1_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9416:5: ( ( rule__ConfigConnector__Group_1_1_4__0 ) )
                    // InternalDockerCompose.g:9417:6: ( rule__ConfigConnector__Group_1_1_4__0 )
                    {
                     before(grammarAccess.getConfigConnectorAccess().getGroup_1_1_4()); 
                    // InternalDockerCompose.g:9418:6: ( rule__ConfigConnector__Group_1_1_4__0 )
                    // InternalDockerCompose.g:9418:7: rule__ConfigConnector__Group_1_1_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector__Group_1_1_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigConnectorAccess().getGroup_1_1_4()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__UnorderedGroup_1_1__Impl"


    // $ANTLR start "rule__ConfigConnector__UnorderedGroup_1_1__0"
    // InternalDockerCompose.g:9431:1: rule__ConfigConnector__UnorderedGroup_1_1__0 : rule__ConfigConnector__UnorderedGroup_1_1__Impl ( rule__ConfigConnector__UnorderedGroup_1_1__1 )? ;
    public final void rule__ConfigConnector__UnorderedGroup_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9435:1: ( rule__ConfigConnector__UnorderedGroup_1_1__Impl ( rule__ConfigConnector__UnorderedGroup_1_1__1 )? )
            // InternalDockerCompose.g:9436:2: rule__ConfigConnector__UnorderedGroup_1_1__Impl ( rule__ConfigConnector__UnorderedGroup_1_1__1 )?
            {
            pushFollow(FOLLOW_45);
            rule__ConfigConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9437:2: ( rule__ConfigConnector__UnorderedGroup_1_1__1 )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( LA76_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 0) ) {
                alt76=1;
            }
            else if ( LA76_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 1) ) {
                alt76=1;
            }
            else if ( LA76_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 2) ) {
                alt76=1;
            }
            else if ( LA76_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 3) ) {
                alt76=1;
            }
            else if ( LA76_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 4) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalDockerCompose.g:9437:2: rule__ConfigConnector__UnorderedGroup_1_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector__UnorderedGroup_1_1__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__UnorderedGroup_1_1__0"


    // $ANTLR start "rule__ConfigConnector__UnorderedGroup_1_1__1"
    // InternalDockerCompose.g:9443:1: rule__ConfigConnector__UnorderedGroup_1_1__1 : rule__ConfigConnector__UnorderedGroup_1_1__Impl ( rule__ConfigConnector__UnorderedGroup_1_1__2 )? ;
    public final void rule__ConfigConnector__UnorderedGroup_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9447:1: ( rule__ConfigConnector__UnorderedGroup_1_1__Impl ( rule__ConfigConnector__UnorderedGroup_1_1__2 )? )
            // InternalDockerCompose.g:9448:2: rule__ConfigConnector__UnorderedGroup_1_1__Impl ( rule__ConfigConnector__UnorderedGroup_1_1__2 )?
            {
            pushFollow(FOLLOW_45);
            rule__ConfigConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9449:2: ( rule__ConfigConnector__UnorderedGroup_1_1__2 )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( LA77_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 0) ) {
                alt77=1;
            }
            else if ( LA77_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 1) ) {
                alt77=1;
            }
            else if ( LA77_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 2) ) {
                alt77=1;
            }
            else if ( LA77_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 3) ) {
                alt77=1;
            }
            else if ( LA77_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 4) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalDockerCompose.g:9449:2: rule__ConfigConnector__UnorderedGroup_1_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector__UnorderedGroup_1_1__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__UnorderedGroup_1_1__1"


    // $ANTLR start "rule__ConfigConnector__UnorderedGroup_1_1__2"
    // InternalDockerCompose.g:9455:1: rule__ConfigConnector__UnorderedGroup_1_1__2 : rule__ConfigConnector__UnorderedGroup_1_1__Impl ( rule__ConfigConnector__UnorderedGroup_1_1__3 )? ;
    public final void rule__ConfigConnector__UnorderedGroup_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9459:1: ( rule__ConfigConnector__UnorderedGroup_1_1__Impl ( rule__ConfigConnector__UnorderedGroup_1_1__3 )? )
            // InternalDockerCompose.g:9460:2: rule__ConfigConnector__UnorderedGroup_1_1__Impl ( rule__ConfigConnector__UnorderedGroup_1_1__3 )?
            {
            pushFollow(FOLLOW_45);
            rule__ConfigConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9461:2: ( rule__ConfigConnector__UnorderedGroup_1_1__3 )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( LA78_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 0) ) {
                alt78=1;
            }
            else if ( LA78_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 1) ) {
                alt78=1;
            }
            else if ( LA78_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 2) ) {
                alt78=1;
            }
            else if ( LA78_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 3) ) {
                alt78=1;
            }
            else if ( LA78_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 4) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalDockerCompose.g:9461:2: rule__ConfigConnector__UnorderedGroup_1_1__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector__UnorderedGroup_1_1__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__UnorderedGroup_1_1__2"


    // $ANTLR start "rule__ConfigConnector__UnorderedGroup_1_1__3"
    // InternalDockerCompose.g:9467:1: rule__ConfigConnector__UnorderedGroup_1_1__3 : rule__ConfigConnector__UnorderedGroup_1_1__Impl ( rule__ConfigConnector__UnorderedGroup_1_1__4 )? ;
    public final void rule__ConfigConnector__UnorderedGroup_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9471:1: ( rule__ConfigConnector__UnorderedGroup_1_1__Impl ( rule__ConfigConnector__UnorderedGroup_1_1__4 )? )
            // InternalDockerCompose.g:9472:2: rule__ConfigConnector__UnorderedGroup_1_1__Impl ( rule__ConfigConnector__UnorderedGroup_1_1__4 )?
            {
            pushFollow(FOLLOW_45);
            rule__ConfigConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9473:2: ( rule__ConfigConnector__UnorderedGroup_1_1__4 )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( LA79_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 0) ) {
                alt79=1;
            }
            else if ( LA79_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 1) ) {
                alt79=1;
            }
            else if ( LA79_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 2) ) {
                alt79=1;
            }
            else if ( LA79_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 3) ) {
                alt79=1;
            }
            else if ( LA79_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 4) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalDockerCompose.g:9473:2: rule__ConfigConnector__UnorderedGroup_1_1__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector__UnorderedGroup_1_1__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__UnorderedGroup_1_1__3"


    // $ANTLR start "rule__ConfigConnector__UnorderedGroup_1_1__4"
    // InternalDockerCompose.g:9479:1: rule__ConfigConnector__UnorderedGroup_1_1__4 : rule__ConfigConnector__UnorderedGroup_1_1__Impl ;
    public final void rule__ConfigConnector__UnorderedGroup_1_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9483:1: ( rule__ConfigConnector__UnorderedGroup_1_1__Impl )
            // InternalDockerCompose.g:9484:2: rule__ConfigConnector__UnorderedGroup_1_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__UnorderedGroup_1_1__4"


    // $ANTLR start "rule__SecretConnector__UnorderedGroup_1_1"
    // InternalDockerCompose.g:9491:1: rule__SecretConnector__UnorderedGroup_1_1 : rule__SecretConnector__UnorderedGroup_1_1__0 {...}?;
    public final void rule__SecretConnector__UnorderedGroup_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1());
        	
        try {
            // InternalDockerCompose.g:9496:1: ( rule__SecretConnector__UnorderedGroup_1_1__0 {...}?)
            // InternalDockerCompose.g:9497:2: rule__SecretConnector__UnorderedGroup_1_1__0 {...}?
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector__UnorderedGroup_1_1__0();

            state._fsp--;

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1()) ) {
                throw new FailedPredicateException(input, "rule__SecretConnector__UnorderedGroup_1_1", "getUnorderedGroupHelper().canLeave(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1())");
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__UnorderedGroup_1_1"


    // $ANTLR start "rule__SecretConnector__UnorderedGroup_1_1__Impl"
    // InternalDockerCompose.g:9505:1: rule__SecretConnector__UnorderedGroup_1_1__Impl : ( ({...}? => ( ( ( rule__SecretConnector__Group_1_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector__Group_1_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector__Group_1_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector__Group_1_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector__Group_1_1_4__0 ) ) ) ) ) ;
    public final void rule__SecretConnector__UnorderedGroup_1_1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:9510:1: ( ( ({...}? => ( ( ( rule__SecretConnector__Group_1_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector__Group_1_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector__Group_1_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector__Group_1_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector__Group_1_1_4__0 ) ) ) ) ) )
            // InternalDockerCompose.g:9511:3: ( ({...}? => ( ( ( rule__SecretConnector__Group_1_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector__Group_1_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector__Group_1_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector__Group_1_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector__Group_1_1_4__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:9511:3: ( ({...}? => ( ( ( rule__SecretConnector__Group_1_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector__Group_1_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector__Group_1_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector__Group_1_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector__Group_1_1_4__0 ) ) ) ) )
            int alt80=5;
            int LA80_0 = input.LA(1);

            if ( LA80_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 0) ) {
                alt80=1;
            }
            else if ( LA80_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 1) ) {
                alt80=2;
            }
            else if ( LA80_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 2) ) {
                alt80=3;
            }
            else if ( LA80_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 3) ) {
                alt80=4;
            }
            else if ( LA80_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 4) ) {
                alt80=5;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 80, 0, input);

                throw nvae;
            }
            switch (alt80) {
                case 1 :
                    // InternalDockerCompose.g:9512:3: ({...}? => ( ( ( rule__SecretConnector__Group_1_1_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9512:3: ({...}? => ( ( ( rule__SecretConnector__Group_1_1_0__0 ) ) ) )
                    // InternalDockerCompose.g:9513:4: {...}? => ( ( ( rule__SecretConnector__Group_1_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 0) ) {
                        throw new FailedPredicateException(input, "rule__SecretConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 0)");
                    }
                    // InternalDockerCompose.g:9513:113: ( ( ( rule__SecretConnector__Group_1_1_0__0 ) ) )
                    // InternalDockerCompose.g:9514:5: ( ( rule__SecretConnector__Group_1_1_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9520:5: ( ( rule__SecretConnector__Group_1_1_0__0 ) )
                    // InternalDockerCompose.g:9521:6: ( rule__SecretConnector__Group_1_1_0__0 )
                    {
                     before(grammarAccess.getSecretConnectorAccess().getGroup_1_1_0()); 
                    // InternalDockerCompose.g:9522:6: ( rule__SecretConnector__Group_1_1_0__0 )
                    // InternalDockerCompose.g:9522:7: rule__SecretConnector__Group_1_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector__Group_1_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretConnectorAccess().getGroup_1_1_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:9527:3: ({...}? => ( ( ( rule__SecretConnector__Group_1_1_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9527:3: ({...}? => ( ( ( rule__SecretConnector__Group_1_1_1__0 ) ) ) )
                    // InternalDockerCompose.g:9528:4: {...}? => ( ( ( rule__SecretConnector__Group_1_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 1) ) {
                        throw new FailedPredicateException(input, "rule__SecretConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 1)");
                    }
                    // InternalDockerCompose.g:9528:113: ( ( ( rule__SecretConnector__Group_1_1_1__0 ) ) )
                    // InternalDockerCompose.g:9529:5: ( ( rule__SecretConnector__Group_1_1_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9535:5: ( ( rule__SecretConnector__Group_1_1_1__0 ) )
                    // InternalDockerCompose.g:9536:6: ( rule__SecretConnector__Group_1_1_1__0 )
                    {
                     before(grammarAccess.getSecretConnectorAccess().getGroup_1_1_1()); 
                    // InternalDockerCompose.g:9537:6: ( rule__SecretConnector__Group_1_1_1__0 )
                    // InternalDockerCompose.g:9537:7: rule__SecretConnector__Group_1_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector__Group_1_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretConnectorAccess().getGroup_1_1_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:9542:3: ({...}? => ( ( ( rule__SecretConnector__Group_1_1_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9542:3: ({...}? => ( ( ( rule__SecretConnector__Group_1_1_2__0 ) ) ) )
                    // InternalDockerCompose.g:9543:4: {...}? => ( ( ( rule__SecretConnector__Group_1_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 2) ) {
                        throw new FailedPredicateException(input, "rule__SecretConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 2)");
                    }
                    // InternalDockerCompose.g:9543:113: ( ( ( rule__SecretConnector__Group_1_1_2__0 ) ) )
                    // InternalDockerCompose.g:9544:5: ( ( rule__SecretConnector__Group_1_1_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9550:5: ( ( rule__SecretConnector__Group_1_1_2__0 ) )
                    // InternalDockerCompose.g:9551:6: ( rule__SecretConnector__Group_1_1_2__0 )
                    {
                     before(grammarAccess.getSecretConnectorAccess().getGroup_1_1_2()); 
                    // InternalDockerCompose.g:9552:6: ( rule__SecretConnector__Group_1_1_2__0 )
                    // InternalDockerCompose.g:9552:7: rule__SecretConnector__Group_1_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector__Group_1_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretConnectorAccess().getGroup_1_1_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:9557:3: ({...}? => ( ( ( rule__SecretConnector__Group_1_1_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9557:3: ({...}? => ( ( ( rule__SecretConnector__Group_1_1_3__0 ) ) ) )
                    // InternalDockerCompose.g:9558:4: {...}? => ( ( ( rule__SecretConnector__Group_1_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 3) ) {
                        throw new FailedPredicateException(input, "rule__SecretConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 3)");
                    }
                    // InternalDockerCompose.g:9558:113: ( ( ( rule__SecretConnector__Group_1_1_3__0 ) ) )
                    // InternalDockerCompose.g:9559:5: ( ( rule__SecretConnector__Group_1_1_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9565:5: ( ( rule__SecretConnector__Group_1_1_3__0 ) )
                    // InternalDockerCompose.g:9566:6: ( rule__SecretConnector__Group_1_1_3__0 )
                    {
                     before(grammarAccess.getSecretConnectorAccess().getGroup_1_1_3()); 
                    // InternalDockerCompose.g:9567:6: ( rule__SecretConnector__Group_1_1_3__0 )
                    // InternalDockerCompose.g:9567:7: rule__SecretConnector__Group_1_1_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector__Group_1_1_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretConnectorAccess().getGroup_1_1_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:9572:3: ({...}? => ( ( ( rule__SecretConnector__Group_1_1_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9572:3: ({...}? => ( ( ( rule__SecretConnector__Group_1_1_4__0 ) ) ) )
                    // InternalDockerCompose.g:9573:4: {...}? => ( ( ( rule__SecretConnector__Group_1_1_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 4) ) {
                        throw new FailedPredicateException(input, "rule__SecretConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 4)");
                    }
                    // InternalDockerCompose.g:9573:113: ( ( ( rule__SecretConnector__Group_1_1_4__0 ) ) )
                    // InternalDockerCompose.g:9574:5: ( ( rule__SecretConnector__Group_1_1_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9580:5: ( ( rule__SecretConnector__Group_1_1_4__0 ) )
                    // InternalDockerCompose.g:9581:6: ( rule__SecretConnector__Group_1_1_4__0 )
                    {
                     before(grammarAccess.getSecretConnectorAccess().getGroup_1_1_4()); 
                    // InternalDockerCompose.g:9582:6: ( rule__SecretConnector__Group_1_1_4__0 )
                    // InternalDockerCompose.g:9582:7: rule__SecretConnector__Group_1_1_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector__Group_1_1_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretConnectorAccess().getGroup_1_1_4()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__UnorderedGroup_1_1__Impl"


    // $ANTLR start "rule__SecretConnector__UnorderedGroup_1_1__0"
    // InternalDockerCompose.g:9595:1: rule__SecretConnector__UnorderedGroup_1_1__0 : rule__SecretConnector__UnorderedGroup_1_1__Impl ( rule__SecretConnector__UnorderedGroup_1_1__1 )? ;
    public final void rule__SecretConnector__UnorderedGroup_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9599:1: ( rule__SecretConnector__UnorderedGroup_1_1__Impl ( rule__SecretConnector__UnorderedGroup_1_1__1 )? )
            // InternalDockerCompose.g:9600:2: rule__SecretConnector__UnorderedGroup_1_1__Impl ( rule__SecretConnector__UnorderedGroup_1_1__1 )?
            {
            pushFollow(FOLLOW_45);
            rule__SecretConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9601:2: ( rule__SecretConnector__UnorderedGroup_1_1__1 )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( LA81_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 0) ) {
                alt81=1;
            }
            else if ( LA81_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 1) ) {
                alt81=1;
            }
            else if ( LA81_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 2) ) {
                alt81=1;
            }
            else if ( LA81_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 3) ) {
                alt81=1;
            }
            else if ( LA81_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 4) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalDockerCompose.g:9601:2: rule__SecretConnector__UnorderedGroup_1_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector__UnorderedGroup_1_1__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__UnorderedGroup_1_1__0"


    // $ANTLR start "rule__SecretConnector__UnorderedGroup_1_1__1"
    // InternalDockerCompose.g:9607:1: rule__SecretConnector__UnorderedGroup_1_1__1 : rule__SecretConnector__UnorderedGroup_1_1__Impl ( rule__SecretConnector__UnorderedGroup_1_1__2 )? ;
    public final void rule__SecretConnector__UnorderedGroup_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9611:1: ( rule__SecretConnector__UnorderedGroup_1_1__Impl ( rule__SecretConnector__UnorderedGroup_1_1__2 )? )
            // InternalDockerCompose.g:9612:2: rule__SecretConnector__UnorderedGroup_1_1__Impl ( rule__SecretConnector__UnorderedGroup_1_1__2 )?
            {
            pushFollow(FOLLOW_45);
            rule__SecretConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9613:2: ( rule__SecretConnector__UnorderedGroup_1_1__2 )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( LA82_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 0) ) {
                alt82=1;
            }
            else if ( LA82_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 1) ) {
                alt82=1;
            }
            else if ( LA82_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 2) ) {
                alt82=1;
            }
            else if ( LA82_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 3) ) {
                alt82=1;
            }
            else if ( LA82_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 4) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalDockerCompose.g:9613:2: rule__SecretConnector__UnorderedGroup_1_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector__UnorderedGroup_1_1__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__UnorderedGroup_1_1__1"


    // $ANTLR start "rule__SecretConnector__UnorderedGroup_1_1__2"
    // InternalDockerCompose.g:9619:1: rule__SecretConnector__UnorderedGroup_1_1__2 : rule__SecretConnector__UnorderedGroup_1_1__Impl ( rule__SecretConnector__UnorderedGroup_1_1__3 )? ;
    public final void rule__SecretConnector__UnorderedGroup_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9623:1: ( rule__SecretConnector__UnorderedGroup_1_1__Impl ( rule__SecretConnector__UnorderedGroup_1_1__3 )? )
            // InternalDockerCompose.g:9624:2: rule__SecretConnector__UnorderedGroup_1_1__Impl ( rule__SecretConnector__UnorderedGroup_1_1__3 )?
            {
            pushFollow(FOLLOW_45);
            rule__SecretConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9625:2: ( rule__SecretConnector__UnorderedGroup_1_1__3 )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( LA83_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 0) ) {
                alt83=1;
            }
            else if ( LA83_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 1) ) {
                alt83=1;
            }
            else if ( LA83_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 2) ) {
                alt83=1;
            }
            else if ( LA83_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 3) ) {
                alt83=1;
            }
            else if ( LA83_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 4) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalDockerCompose.g:9625:2: rule__SecretConnector__UnorderedGroup_1_1__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector__UnorderedGroup_1_1__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__UnorderedGroup_1_1__2"


    // $ANTLR start "rule__SecretConnector__UnorderedGroup_1_1__3"
    // InternalDockerCompose.g:9631:1: rule__SecretConnector__UnorderedGroup_1_1__3 : rule__SecretConnector__UnorderedGroup_1_1__Impl ( rule__SecretConnector__UnorderedGroup_1_1__4 )? ;
    public final void rule__SecretConnector__UnorderedGroup_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9635:1: ( rule__SecretConnector__UnorderedGroup_1_1__Impl ( rule__SecretConnector__UnorderedGroup_1_1__4 )? )
            // InternalDockerCompose.g:9636:2: rule__SecretConnector__UnorderedGroup_1_1__Impl ( rule__SecretConnector__UnorderedGroup_1_1__4 )?
            {
            pushFollow(FOLLOW_45);
            rule__SecretConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9637:2: ( rule__SecretConnector__UnorderedGroup_1_1__4 )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( LA84_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 0) ) {
                alt84=1;
            }
            else if ( LA84_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 1) ) {
                alt84=1;
            }
            else if ( LA84_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 2) ) {
                alt84=1;
            }
            else if ( LA84_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 3) ) {
                alt84=1;
            }
            else if ( LA84_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 4) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalDockerCompose.g:9637:2: rule__SecretConnector__UnorderedGroup_1_1__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector__UnorderedGroup_1_1__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__UnorderedGroup_1_1__3"


    // $ANTLR start "rule__SecretConnector__UnorderedGroup_1_1__4"
    // InternalDockerCompose.g:9643:1: rule__SecretConnector__UnorderedGroup_1_1__4 : rule__SecretConnector__UnorderedGroup_1_1__Impl ;
    public final void rule__SecretConnector__UnorderedGroup_1_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9647:1: ( rule__SecretConnector__UnorderedGroup_1_1__Impl )
            // InternalDockerCompose.g:9648:2: rule__SecretConnector__UnorderedGroup_1_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__UnorderedGroup_1_1__4"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1"
    // InternalDockerCompose.g:9655:1: rule__Network__UnorderedGroup_3_1 : ( rule__Network__UnorderedGroup_3_1__0 )? ;
    public final void rule__Network__UnorderedGroup_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1());
        	
        try {
            // InternalDockerCompose.g:9660:1: ( ( rule__Network__UnorderedGroup_3_1__0 )? )
            // InternalDockerCompose.g:9661:2: ( rule__Network__UnorderedGroup_3_1__0 )?
            {
            // InternalDockerCompose.g:9661:2: ( rule__Network__UnorderedGroup_3_1__0 )?
            int alt85=2;
            alt85 = dfa85.predict(input);
            switch (alt85) {
                case 1 :
                    // InternalDockerCompose.g:9661:2: rule__Network__UnorderedGroup_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__Impl"
    // InternalDockerCompose.g:9669:1: rule__Network__UnorderedGroup_3_1__Impl : ( ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) ) ) ;
    public final void rule__Network__UnorderedGroup_3_1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:9674:1: ( ( ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) ) ) )
            // InternalDockerCompose.g:9675:3: ( ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:9675:3: ( ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) ) )
            int alt86=9;
            alt86 = dfa86.predict(input);
            switch (alt86) {
                case 1 :
                    // InternalDockerCompose.g:9676:3: ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9676:3: ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) )
                    // InternalDockerCompose.g:9677:4: {...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0)");
                    }
                    // InternalDockerCompose.g:9677:105: ( ( ( rule__Network__Group_3_1_0__0 ) ) )
                    // InternalDockerCompose.g:9678:5: ( ( rule__Network__Group_3_1_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9684:5: ( ( rule__Network__Group_3_1_0__0 ) )
                    // InternalDockerCompose.g:9685:6: ( rule__Network__Group_3_1_0__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_0()); 
                    // InternalDockerCompose.g:9686:6: ( rule__Network__Group_3_1_0__0 )
                    // InternalDockerCompose.g:9686:7: rule__Network__Group_3_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:9691:3: ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9691:3: ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) )
                    // InternalDockerCompose.g:9692:4: {...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1)");
                    }
                    // InternalDockerCompose.g:9692:105: ( ( ( rule__Network__Group_3_1_1__0 ) ) )
                    // InternalDockerCompose.g:9693:5: ( ( rule__Network__Group_3_1_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9699:5: ( ( rule__Network__Group_3_1_1__0 ) )
                    // InternalDockerCompose.g:9700:6: ( rule__Network__Group_3_1_1__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_1()); 
                    // InternalDockerCompose.g:9701:6: ( rule__Network__Group_3_1_1__0 )
                    // InternalDockerCompose.g:9701:7: rule__Network__Group_3_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:9706:3: ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9706:3: ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) )
                    // InternalDockerCompose.g:9707:4: {...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2)");
                    }
                    // InternalDockerCompose.g:9707:105: ( ( ( rule__Network__Group_3_1_2__0 ) ) )
                    // InternalDockerCompose.g:9708:5: ( ( rule__Network__Group_3_1_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9714:5: ( ( rule__Network__Group_3_1_2__0 ) )
                    // InternalDockerCompose.g:9715:6: ( rule__Network__Group_3_1_2__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_2()); 
                    // InternalDockerCompose.g:9716:6: ( rule__Network__Group_3_1_2__0 )
                    // InternalDockerCompose.g:9716:7: rule__Network__Group_3_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:9721:3: ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9721:3: ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) )
                    // InternalDockerCompose.g:9722:4: {...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3)");
                    }
                    // InternalDockerCompose.g:9722:105: ( ( ( rule__Network__Group_3_1_3__0 ) ) )
                    // InternalDockerCompose.g:9723:5: ( ( rule__Network__Group_3_1_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9729:5: ( ( rule__Network__Group_3_1_3__0 ) )
                    // InternalDockerCompose.g:9730:6: ( rule__Network__Group_3_1_3__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_3()); 
                    // InternalDockerCompose.g:9731:6: ( rule__Network__Group_3_1_3__0 )
                    // InternalDockerCompose.g:9731:7: rule__Network__Group_3_1_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:9736:3: ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9736:3: ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) )
                    // InternalDockerCompose.g:9737:4: {...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4)");
                    }
                    // InternalDockerCompose.g:9737:105: ( ( ( rule__Network__Group_3_1_4__0 ) ) )
                    // InternalDockerCompose.g:9738:5: ( ( rule__Network__Group_3_1_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9744:5: ( ( rule__Network__Group_3_1_4__0 ) )
                    // InternalDockerCompose.g:9745:6: ( rule__Network__Group_3_1_4__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_4()); 
                    // InternalDockerCompose.g:9746:6: ( rule__Network__Group_3_1_4__0 )
                    // InternalDockerCompose.g:9746:7: rule__Network__Group_3_1_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_4()); 

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDockerCompose.g:9751:3: ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9751:3: ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) )
                    // InternalDockerCompose.g:9752:4: {...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5)");
                    }
                    // InternalDockerCompose.g:9752:105: ( ( ( rule__Network__Group_3_1_5__0 ) ) )
                    // InternalDockerCompose.g:9753:5: ( ( rule__Network__Group_3_1_5__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9759:5: ( ( rule__Network__Group_3_1_5__0 ) )
                    // InternalDockerCompose.g:9760:6: ( rule__Network__Group_3_1_5__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_5()); 
                    // InternalDockerCompose.g:9761:6: ( rule__Network__Group_3_1_5__0 )
                    // InternalDockerCompose.g:9761:7: rule__Network__Group_3_1_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_5__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_5()); 

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalDockerCompose.g:9766:3: ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9766:3: ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) )
                    // InternalDockerCompose.g:9767:4: {...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6)");
                    }
                    // InternalDockerCompose.g:9767:105: ( ( ( rule__Network__Group_3_1_6__0 ) ) )
                    // InternalDockerCompose.g:9768:5: ( ( rule__Network__Group_3_1_6__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9774:5: ( ( rule__Network__Group_3_1_6__0 ) )
                    // InternalDockerCompose.g:9775:6: ( rule__Network__Group_3_1_6__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_6()); 
                    // InternalDockerCompose.g:9776:6: ( rule__Network__Group_3_1_6__0 )
                    // InternalDockerCompose.g:9776:7: rule__Network__Group_3_1_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_6__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_6()); 

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalDockerCompose.g:9781:3: ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9781:3: ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) )
                    // InternalDockerCompose.g:9782:4: {...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7)");
                    }
                    // InternalDockerCompose.g:9782:105: ( ( ( rule__Network__Group_3_1_7__0 ) ) )
                    // InternalDockerCompose.g:9783:5: ( ( rule__Network__Group_3_1_7__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9789:5: ( ( rule__Network__Group_3_1_7__0 ) )
                    // InternalDockerCompose.g:9790:6: ( rule__Network__Group_3_1_7__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_7()); 
                    // InternalDockerCompose.g:9791:6: ( rule__Network__Group_3_1_7__0 )
                    // InternalDockerCompose.g:9791:7: rule__Network__Group_3_1_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_7__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_7()); 

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalDockerCompose.g:9796:3: ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9796:3: ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) )
                    // InternalDockerCompose.g:9797:4: {...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8)");
                    }
                    // InternalDockerCompose.g:9797:105: ( ( ( rule__Network__Group_3_1_8__0 ) ) )
                    // InternalDockerCompose.g:9798:5: ( ( rule__Network__Group_3_1_8__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9804:5: ( ( rule__Network__Group_3_1_8__0 ) )
                    // InternalDockerCompose.g:9805:6: ( rule__Network__Group_3_1_8__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_8()); 
                    // InternalDockerCompose.g:9806:6: ( rule__Network__Group_3_1_8__0 )
                    // InternalDockerCompose.g:9806:7: rule__Network__Group_3_1_8__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_8__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_8()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__Impl"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__0"
    // InternalDockerCompose.g:9819:1: rule__Network__UnorderedGroup_3_1__0 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__1 )? ;
    public final void rule__Network__UnorderedGroup_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9823:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__1 )? )
            // InternalDockerCompose.g:9824:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__1 )?
            {
            pushFollow(FOLLOW_46);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9825:2: ( rule__Network__UnorderedGroup_3_1__1 )?
            int alt87=2;
            alt87 = dfa87.predict(input);
            switch (alt87) {
                case 1 :
                    // InternalDockerCompose.g:9825:2: rule__Network__UnorderedGroup_3_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__0"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__1"
    // InternalDockerCompose.g:9831:1: rule__Network__UnorderedGroup_3_1__1 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__2 )? ;
    public final void rule__Network__UnorderedGroup_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9835:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__2 )? )
            // InternalDockerCompose.g:9836:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__2 )?
            {
            pushFollow(FOLLOW_46);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9837:2: ( rule__Network__UnorderedGroup_3_1__2 )?
            int alt88=2;
            alt88 = dfa88.predict(input);
            switch (alt88) {
                case 1 :
                    // InternalDockerCompose.g:9837:2: rule__Network__UnorderedGroup_3_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__1"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__2"
    // InternalDockerCompose.g:9843:1: rule__Network__UnorderedGroup_3_1__2 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__3 )? ;
    public final void rule__Network__UnorderedGroup_3_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9847:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__3 )? )
            // InternalDockerCompose.g:9848:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__3 )?
            {
            pushFollow(FOLLOW_46);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9849:2: ( rule__Network__UnorderedGroup_3_1__3 )?
            int alt89=2;
            alt89 = dfa89.predict(input);
            switch (alt89) {
                case 1 :
                    // InternalDockerCompose.g:9849:2: rule__Network__UnorderedGroup_3_1__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__2"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__3"
    // InternalDockerCompose.g:9855:1: rule__Network__UnorderedGroup_3_1__3 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__4 )? ;
    public final void rule__Network__UnorderedGroup_3_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9859:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__4 )? )
            // InternalDockerCompose.g:9860:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__4 )?
            {
            pushFollow(FOLLOW_46);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9861:2: ( rule__Network__UnorderedGroup_3_1__4 )?
            int alt90=2;
            alt90 = dfa90.predict(input);
            switch (alt90) {
                case 1 :
                    // InternalDockerCompose.g:9861:2: rule__Network__UnorderedGroup_3_1__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__3"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__4"
    // InternalDockerCompose.g:9867:1: rule__Network__UnorderedGroup_3_1__4 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__5 )? ;
    public final void rule__Network__UnorderedGroup_3_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9871:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__5 )? )
            // InternalDockerCompose.g:9872:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__5 )?
            {
            pushFollow(FOLLOW_46);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9873:2: ( rule__Network__UnorderedGroup_3_1__5 )?
            int alt91=2;
            alt91 = dfa91.predict(input);
            switch (alt91) {
                case 1 :
                    // InternalDockerCompose.g:9873:2: rule__Network__UnorderedGroup_3_1__5
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__5();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__4"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__5"
    // InternalDockerCompose.g:9879:1: rule__Network__UnorderedGroup_3_1__5 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__6 )? ;
    public final void rule__Network__UnorderedGroup_3_1__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9883:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__6 )? )
            // InternalDockerCompose.g:9884:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__6 )?
            {
            pushFollow(FOLLOW_46);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9885:2: ( rule__Network__UnorderedGroup_3_1__6 )?
            int alt92=2;
            alt92 = dfa92.predict(input);
            switch (alt92) {
                case 1 :
                    // InternalDockerCompose.g:9885:2: rule__Network__UnorderedGroup_3_1__6
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__6();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__5"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__6"
    // InternalDockerCompose.g:9891:1: rule__Network__UnorderedGroup_3_1__6 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__7 )? ;
    public final void rule__Network__UnorderedGroup_3_1__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9895:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__7 )? )
            // InternalDockerCompose.g:9896:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__7 )?
            {
            pushFollow(FOLLOW_46);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9897:2: ( rule__Network__UnorderedGroup_3_1__7 )?
            int alt93=2;
            alt93 = dfa93.predict(input);
            switch (alt93) {
                case 1 :
                    // InternalDockerCompose.g:9897:2: rule__Network__UnorderedGroup_3_1__7
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__7();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__6"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__7"
    // InternalDockerCompose.g:9903:1: rule__Network__UnorderedGroup_3_1__7 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__8 )? ;
    public final void rule__Network__UnorderedGroup_3_1__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9907:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__8 )? )
            // InternalDockerCompose.g:9908:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__8 )?
            {
            pushFollow(FOLLOW_46);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9909:2: ( rule__Network__UnorderedGroup_3_1__8 )?
            int alt94=2;
            alt94 = dfa94.predict(input);
            switch (alt94) {
                case 1 :
                    // InternalDockerCompose.g:9909:2: rule__Network__UnorderedGroup_3_1__8
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__8();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__7"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__8"
    // InternalDockerCompose.g:9915:1: rule__Network__UnorderedGroup_3_1__8 : rule__Network__UnorderedGroup_3_1__Impl ;
    public final void rule__Network__UnorderedGroup_3_1__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9919:1: ( rule__Network__UnorderedGroup_3_1__Impl )
            // InternalDockerCompose.g:9920:2: rule__Network__UnorderedGroup_3_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__8"


    // $ANTLR start "rule__Volume__UnorderedGroup_3"
    // InternalDockerCompose.g:9927:1: rule__Volume__UnorderedGroup_3 : ( rule__Volume__UnorderedGroup_3__0 )? ;
    public final void rule__Volume__UnorderedGroup_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getVolumeAccess().getUnorderedGroup_3());
        	
        try {
            // InternalDockerCompose.g:9932:1: ( ( rule__Volume__UnorderedGroup_3__0 )? )
            // InternalDockerCompose.g:9933:2: ( rule__Volume__UnorderedGroup_3__0 )?
            {
            // InternalDockerCompose.g:9933:2: ( rule__Volume__UnorderedGroup_3__0 )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( LA95_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                alt95=1;
            }
            else if ( LA95_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                alt95=1;
            }
            else if ( LA95_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                alt95=1;
            }
            else if ( LA95_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                alt95=1;
            }
            else if ( LA95_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // InternalDockerCompose.g:9933:2: rule__Volume__UnorderedGroup_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__UnorderedGroup_3__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getVolumeAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3"


    // $ANTLR start "rule__Volume__UnorderedGroup_3__Impl"
    // InternalDockerCompose.g:9941:1: rule__Volume__UnorderedGroup_3__Impl : ( ({...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) ) ) ) ;
    public final void rule__Volume__UnorderedGroup_3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:9946:1: ( ( ({...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) ) ) ) )
            // InternalDockerCompose.g:9947:3: ( ({...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:9947:3: ( ({...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) ) ) )
            int alt96=5;
            int LA96_0 = input.LA(1);

            if ( LA96_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                alt96=1;
            }
            else if ( LA96_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                alt96=2;
            }
            else if ( LA96_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                alt96=3;
            }
            else if ( LA96_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                alt96=4;
            }
            else if ( LA96_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                alt96=5;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 96, 0, input);

                throw nvae;
            }
            switch (alt96) {
                case 1 :
                    // InternalDockerCompose.g:9948:3: ({...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9948:3: ({...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) ) )
                    // InternalDockerCompose.g:9949:4: {...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                        throw new FailedPredicateException(input, "rule__Volume__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0)");
                    }
                    // InternalDockerCompose.g:9949:102: ( ( ( rule__Volume__Group_3_0__0 ) ) )
                    // InternalDockerCompose.g:9950:5: ( ( rule__Volume__Group_3_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9956:5: ( ( rule__Volume__Group_3_0__0 ) )
                    // InternalDockerCompose.g:9957:6: ( rule__Volume__Group_3_0__0 )
                    {
                     before(grammarAccess.getVolumeAccess().getGroup_3_0()); 
                    // InternalDockerCompose.g:9958:6: ( rule__Volume__Group_3_0__0 )
                    // InternalDockerCompose.g:9958:7: rule__Volume__Group_3_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__Group_3_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeAccess().getGroup_3_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:9963:3: ({...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9963:3: ({...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) ) )
                    // InternalDockerCompose.g:9964:4: {...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                        throw new FailedPredicateException(input, "rule__Volume__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1)");
                    }
                    // InternalDockerCompose.g:9964:102: ( ( ( rule__Volume__Group_3_1__0 ) ) )
                    // InternalDockerCompose.g:9965:5: ( ( rule__Volume__Group_3_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9971:5: ( ( rule__Volume__Group_3_1__0 ) )
                    // InternalDockerCompose.g:9972:6: ( rule__Volume__Group_3_1__0 )
                    {
                     before(grammarAccess.getVolumeAccess().getGroup_3_1()); 
                    // InternalDockerCompose.g:9973:6: ( rule__Volume__Group_3_1__0 )
                    // InternalDockerCompose.g:9973:7: rule__Volume__Group_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__Group_3_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeAccess().getGroup_3_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:9978:3: ({...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9978:3: ({...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) ) )
                    // InternalDockerCompose.g:9979:4: {...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                        throw new FailedPredicateException(input, "rule__Volume__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2)");
                    }
                    // InternalDockerCompose.g:9979:102: ( ( ( rule__Volume__Group_3_2__0 ) ) )
                    // InternalDockerCompose.g:9980:5: ( ( rule__Volume__Group_3_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9986:5: ( ( rule__Volume__Group_3_2__0 ) )
                    // InternalDockerCompose.g:9987:6: ( rule__Volume__Group_3_2__0 )
                    {
                     before(grammarAccess.getVolumeAccess().getGroup_3_2()); 
                    // InternalDockerCompose.g:9988:6: ( rule__Volume__Group_3_2__0 )
                    // InternalDockerCompose.g:9988:7: rule__Volume__Group_3_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__Group_3_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeAccess().getGroup_3_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:9993:3: ({...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9993:3: ({...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) ) )
                    // InternalDockerCompose.g:9994:4: {...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                        throw new FailedPredicateException(input, "rule__Volume__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3)");
                    }
                    // InternalDockerCompose.g:9994:102: ( ( ( rule__Volume__Group_3_3__0 ) ) )
                    // InternalDockerCompose.g:9995:5: ( ( rule__Volume__Group_3_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10001:5: ( ( rule__Volume__Group_3_3__0 ) )
                    // InternalDockerCompose.g:10002:6: ( rule__Volume__Group_3_3__0 )
                    {
                     before(grammarAccess.getVolumeAccess().getGroup_3_3()); 
                    // InternalDockerCompose.g:10003:6: ( rule__Volume__Group_3_3__0 )
                    // InternalDockerCompose.g:10003:7: rule__Volume__Group_3_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__Group_3_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeAccess().getGroup_3_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:10008:3: ({...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10008:3: ({...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) ) )
                    // InternalDockerCompose.g:10009:4: {...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                        throw new FailedPredicateException(input, "rule__Volume__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4)");
                    }
                    // InternalDockerCompose.g:10009:102: ( ( ( rule__Volume__Group_3_4__0 ) ) )
                    // InternalDockerCompose.g:10010:5: ( ( rule__Volume__Group_3_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10016:5: ( ( rule__Volume__Group_3_4__0 ) )
                    // InternalDockerCompose.g:10017:6: ( rule__Volume__Group_3_4__0 )
                    {
                     before(grammarAccess.getVolumeAccess().getGroup_3_4()); 
                    // InternalDockerCompose.g:10018:6: ( rule__Volume__Group_3_4__0 )
                    // InternalDockerCompose.g:10018:7: rule__Volume__Group_3_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__Group_3_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeAccess().getGroup_3_4()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVolumeAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3__Impl"


    // $ANTLR start "rule__Volume__UnorderedGroup_3__0"
    // InternalDockerCompose.g:10031:1: rule__Volume__UnorderedGroup_3__0 : rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__1 )? ;
    public final void rule__Volume__UnorderedGroup_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10035:1: ( rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__1 )? )
            // InternalDockerCompose.g:10036:2: rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__1 )?
            {
            pushFollow(FOLLOW_47);
            rule__Volume__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10037:2: ( rule__Volume__UnorderedGroup_3__1 )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( LA97_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                alt97=1;
            }
            else if ( LA97_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                alt97=1;
            }
            else if ( LA97_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                alt97=1;
            }
            else if ( LA97_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                alt97=1;
            }
            else if ( LA97_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // InternalDockerCompose.g:10037:2: rule__Volume__UnorderedGroup_3__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__UnorderedGroup_3__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3__0"


    // $ANTLR start "rule__Volume__UnorderedGroup_3__1"
    // InternalDockerCompose.g:10043:1: rule__Volume__UnorderedGroup_3__1 : rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__2 )? ;
    public final void rule__Volume__UnorderedGroup_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10047:1: ( rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__2 )? )
            // InternalDockerCompose.g:10048:2: rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__2 )?
            {
            pushFollow(FOLLOW_47);
            rule__Volume__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10049:2: ( rule__Volume__UnorderedGroup_3__2 )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( LA98_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                alt98=1;
            }
            else if ( LA98_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                alt98=1;
            }
            else if ( LA98_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                alt98=1;
            }
            else if ( LA98_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                alt98=1;
            }
            else if ( LA98_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalDockerCompose.g:10049:2: rule__Volume__UnorderedGroup_3__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__UnorderedGroup_3__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3__1"


    // $ANTLR start "rule__Volume__UnorderedGroup_3__2"
    // InternalDockerCompose.g:10055:1: rule__Volume__UnorderedGroup_3__2 : rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__3 )? ;
    public final void rule__Volume__UnorderedGroup_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10059:1: ( rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__3 )? )
            // InternalDockerCompose.g:10060:2: rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__3 )?
            {
            pushFollow(FOLLOW_47);
            rule__Volume__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10061:2: ( rule__Volume__UnorderedGroup_3__3 )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( LA99_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                alt99=1;
            }
            else if ( LA99_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                alt99=1;
            }
            else if ( LA99_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                alt99=1;
            }
            else if ( LA99_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                alt99=1;
            }
            else if ( LA99_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                alt99=1;
            }
            switch (alt99) {
                case 1 :
                    // InternalDockerCompose.g:10061:2: rule__Volume__UnorderedGroup_3__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__UnorderedGroup_3__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3__2"


    // $ANTLR start "rule__Volume__UnorderedGroup_3__3"
    // InternalDockerCompose.g:10067:1: rule__Volume__UnorderedGroup_3__3 : rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__4 )? ;
    public final void rule__Volume__UnorderedGroup_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10071:1: ( rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__4 )? )
            // InternalDockerCompose.g:10072:2: rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__4 )?
            {
            pushFollow(FOLLOW_47);
            rule__Volume__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10073:2: ( rule__Volume__UnorderedGroup_3__4 )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( LA100_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                alt100=1;
            }
            else if ( LA100_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                alt100=1;
            }
            else if ( LA100_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                alt100=1;
            }
            else if ( LA100_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                alt100=1;
            }
            else if ( LA100_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // InternalDockerCompose.g:10073:2: rule__Volume__UnorderedGroup_3__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__UnorderedGroup_3__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3__3"


    // $ANTLR start "rule__Volume__UnorderedGroup_3__4"
    // InternalDockerCompose.g:10079:1: rule__Volume__UnorderedGroup_3__4 : rule__Volume__UnorderedGroup_3__Impl ;
    public final void rule__Volume__UnorderedGroup_3__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10083:1: ( rule__Volume__UnorderedGroup_3__Impl )
            // InternalDockerCompose.g:10084:2: rule__Volume__UnorderedGroup_3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__UnorderedGroup_3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3__4"


    // $ANTLR start "rule__Config__UnorderedGroup_3"
    // InternalDockerCompose.g:10091:1: rule__Config__UnorderedGroup_3 : ( rule__Config__UnorderedGroup_3__0 )? ;
    public final void rule__Config__UnorderedGroup_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getConfigAccess().getUnorderedGroup_3());
        	
        try {
            // InternalDockerCompose.g:10096:1: ( ( rule__Config__UnorderedGroup_3__0 )? )
            // InternalDockerCompose.g:10097:2: ( rule__Config__UnorderedGroup_3__0 )?
            {
            // InternalDockerCompose.g:10097:2: ( rule__Config__UnorderedGroup_3__0 )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( LA101_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0) ) {
                alt101=1;
            }
            else if ( LA101_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1) ) {
                alt101=1;
            }
            else if ( LA101_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2) ) {
                alt101=1;
            }
            switch (alt101) {
                case 1 :
                    // InternalDockerCompose.g:10097:2: rule__Config__UnorderedGroup_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Config__UnorderedGroup_3__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getConfigAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__UnorderedGroup_3"


    // $ANTLR start "rule__Config__UnorderedGroup_3__Impl"
    // InternalDockerCompose.g:10105:1: rule__Config__UnorderedGroup_3__Impl : ( ({...}? => ( ( ( rule__Config__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_2__0 ) ) ) ) ) ;
    public final void rule__Config__UnorderedGroup_3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:10110:1: ( ( ({...}? => ( ( ( rule__Config__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_2__0 ) ) ) ) ) )
            // InternalDockerCompose.g:10111:3: ( ({...}? => ( ( ( rule__Config__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_2__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:10111:3: ( ({...}? => ( ( ( rule__Config__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_2__0 ) ) ) ) )
            int alt102=3;
            int LA102_0 = input.LA(1);

            if ( LA102_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0) ) {
                alt102=1;
            }
            else if ( LA102_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1) ) {
                alt102=2;
            }
            else if ( LA102_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2) ) {
                alt102=3;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 102, 0, input);

                throw nvae;
            }
            switch (alt102) {
                case 1 :
                    // InternalDockerCompose.g:10112:3: ({...}? => ( ( ( rule__Config__Group_3_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10112:3: ({...}? => ( ( ( rule__Config__Group_3_0__0 ) ) ) )
                    // InternalDockerCompose.g:10113:4: {...}? => ( ( ( rule__Config__Group_3_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0) ) {
                        throw new FailedPredicateException(input, "rule__Config__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0)");
                    }
                    // InternalDockerCompose.g:10113:102: ( ( ( rule__Config__Group_3_0__0 ) ) )
                    // InternalDockerCompose.g:10114:5: ( ( rule__Config__Group_3_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10120:5: ( ( rule__Config__Group_3_0__0 ) )
                    // InternalDockerCompose.g:10121:6: ( rule__Config__Group_3_0__0 )
                    {
                     before(grammarAccess.getConfigAccess().getGroup_3_0()); 
                    // InternalDockerCompose.g:10122:6: ( rule__Config__Group_3_0__0 )
                    // InternalDockerCompose.g:10122:7: rule__Config__Group_3_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Config__Group_3_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigAccess().getGroup_3_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:10127:3: ({...}? => ( ( ( rule__Config__Group_3_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10127:3: ({...}? => ( ( ( rule__Config__Group_3_1__0 ) ) ) )
                    // InternalDockerCompose.g:10128:4: {...}? => ( ( ( rule__Config__Group_3_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1) ) {
                        throw new FailedPredicateException(input, "rule__Config__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1)");
                    }
                    // InternalDockerCompose.g:10128:102: ( ( ( rule__Config__Group_3_1__0 ) ) )
                    // InternalDockerCompose.g:10129:5: ( ( rule__Config__Group_3_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10135:5: ( ( rule__Config__Group_3_1__0 ) )
                    // InternalDockerCompose.g:10136:6: ( rule__Config__Group_3_1__0 )
                    {
                     before(grammarAccess.getConfigAccess().getGroup_3_1()); 
                    // InternalDockerCompose.g:10137:6: ( rule__Config__Group_3_1__0 )
                    // InternalDockerCompose.g:10137:7: rule__Config__Group_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Config__Group_3_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigAccess().getGroup_3_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:10142:3: ({...}? => ( ( ( rule__Config__Group_3_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10142:3: ({...}? => ( ( ( rule__Config__Group_3_2__0 ) ) ) )
                    // InternalDockerCompose.g:10143:4: {...}? => ( ( ( rule__Config__Group_3_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2) ) {
                        throw new FailedPredicateException(input, "rule__Config__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2)");
                    }
                    // InternalDockerCompose.g:10143:102: ( ( ( rule__Config__Group_3_2__0 ) ) )
                    // InternalDockerCompose.g:10144:5: ( ( rule__Config__Group_3_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10150:5: ( ( rule__Config__Group_3_2__0 ) )
                    // InternalDockerCompose.g:10151:6: ( rule__Config__Group_3_2__0 )
                    {
                     before(grammarAccess.getConfigAccess().getGroup_3_2()); 
                    // InternalDockerCompose.g:10152:6: ( rule__Config__Group_3_2__0 )
                    // InternalDockerCompose.g:10152:7: rule__Config__Group_3_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Config__Group_3_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigAccess().getGroup_3_2()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConfigAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__UnorderedGroup_3__Impl"


    // $ANTLR start "rule__Config__UnorderedGroup_3__0"
    // InternalDockerCompose.g:10165:1: rule__Config__UnorderedGroup_3__0 : rule__Config__UnorderedGroup_3__Impl ( rule__Config__UnorderedGroup_3__1 )? ;
    public final void rule__Config__UnorderedGroup_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10169:1: ( rule__Config__UnorderedGroup_3__Impl ( rule__Config__UnorderedGroup_3__1 )? )
            // InternalDockerCompose.g:10170:2: rule__Config__UnorderedGroup_3__Impl ( rule__Config__UnorderedGroup_3__1 )?
            {
            pushFollow(FOLLOW_48);
            rule__Config__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10171:2: ( rule__Config__UnorderedGroup_3__1 )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( LA103_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0) ) {
                alt103=1;
            }
            else if ( LA103_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1) ) {
                alt103=1;
            }
            else if ( LA103_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalDockerCompose.g:10171:2: rule__Config__UnorderedGroup_3__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Config__UnorderedGroup_3__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__UnorderedGroup_3__0"


    // $ANTLR start "rule__Config__UnorderedGroup_3__1"
    // InternalDockerCompose.g:10177:1: rule__Config__UnorderedGroup_3__1 : rule__Config__UnorderedGroup_3__Impl ( rule__Config__UnorderedGroup_3__2 )? ;
    public final void rule__Config__UnorderedGroup_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10181:1: ( rule__Config__UnorderedGroup_3__Impl ( rule__Config__UnorderedGroup_3__2 )? )
            // InternalDockerCompose.g:10182:2: rule__Config__UnorderedGroup_3__Impl ( rule__Config__UnorderedGroup_3__2 )?
            {
            pushFollow(FOLLOW_48);
            rule__Config__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10183:2: ( rule__Config__UnorderedGroup_3__2 )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( LA104_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0) ) {
                alt104=1;
            }
            else if ( LA104_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1) ) {
                alt104=1;
            }
            else if ( LA104_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalDockerCompose.g:10183:2: rule__Config__UnorderedGroup_3__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Config__UnorderedGroup_3__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__UnorderedGroup_3__1"


    // $ANTLR start "rule__Config__UnorderedGroup_3__2"
    // InternalDockerCompose.g:10189:1: rule__Config__UnorderedGroup_3__2 : rule__Config__UnorderedGroup_3__Impl ;
    public final void rule__Config__UnorderedGroup_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10193:1: ( rule__Config__UnorderedGroup_3__Impl )
            // InternalDockerCompose.g:10194:2: rule__Config__UnorderedGroup_3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Config__UnorderedGroup_3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__UnorderedGroup_3__2"


    // $ANTLR start "rule__Secret__UnorderedGroup_3"
    // InternalDockerCompose.g:10201:1: rule__Secret__UnorderedGroup_3 : ( rule__Secret__UnorderedGroup_3__0 )? ;
    public final void rule__Secret__UnorderedGroup_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getSecretAccess().getUnorderedGroup_3());
        	
        try {
            // InternalDockerCompose.g:10206:1: ( ( rule__Secret__UnorderedGroup_3__0 )? )
            // InternalDockerCompose.g:10207:2: ( rule__Secret__UnorderedGroup_3__0 )?
            {
            // InternalDockerCompose.g:10207:2: ( rule__Secret__UnorderedGroup_3__0 )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( LA105_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0) ) {
                alt105=1;
            }
            else if ( LA105_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1) ) {
                alt105=1;
            }
            else if ( LA105_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2) ) {
                alt105=1;
            }
            else if ( LA105_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // InternalDockerCompose.g:10207:2: rule__Secret__UnorderedGroup_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__UnorderedGroup_3__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getSecretAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__UnorderedGroup_3"


    // $ANTLR start "rule__Secret__UnorderedGroup_3__Impl"
    // InternalDockerCompose.g:10215:1: rule__Secret__UnorderedGroup_3__Impl : ( ({...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) ) ) ) ;
    public final void rule__Secret__UnorderedGroup_3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:10220:1: ( ( ({...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) ) ) ) )
            // InternalDockerCompose.g:10221:3: ( ({...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:10221:3: ( ({...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) ) ) )
            int alt106=4;
            int LA106_0 = input.LA(1);

            if ( LA106_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0) ) {
                alt106=1;
            }
            else if ( LA106_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1) ) {
                alt106=2;
            }
            else if ( LA106_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2) ) {
                alt106=3;
            }
            else if ( LA106_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3) ) {
                alt106=4;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 106, 0, input);

                throw nvae;
            }
            switch (alt106) {
                case 1 :
                    // InternalDockerCompose.g:10222:3: ({...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10222:3: ({...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) ) )
                    // InternalDockerCompose.g:10223:4: {...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0) ) {
                        throw new FailedPredicateException(input, "rule__Secret__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0)");
                    }
                    // InternalDockerCompose.g:10223:102: ( ( ( rule__Secret__Group_3_0__0 ) ) )
                    // InternalDockerCompose.g:10224:5: ( ( rule__Secret__Group_3_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10230:5: ( ( rule__Secret__Group_3_0__0 ) )
                    // InternalDockerCompose.g:10231:6: ( rule__Secret__Group_3_0__0 )
                    {
                     before(grammarAccess.getSecretAccess().getGroup_3_0()); 
                    // InternalDockerCompose.g:10232:6: ( rule__Secret__Group_3_0__0 )
                    // InternalDockerCompose.g:10232:7: rule__Secret__Group_3_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__Group_3_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretAccess().getGroup_3_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:10237:3: ({...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10237:3: ({...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) ) )
                    // InternalDockerCompose.g:10238:4: {...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1) ) {
                        throw new FailedPredicateException(input, "rule__Secret__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1)");
                    }
                    // InternalDockerCompose.g:10238:102: ( ( ( rule__Secret__Group_3_1__0 ) ) )
                    // InternalDockerCompose.g:10239:5: ( ( rule__Secret__Group_3_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10245:5: ( ( rule__Secret__Group_3_1__0 ) )
                    // InternalDockerCompose.g:10246:6: ( rule__Secret__Group_3_1__0 )
                    {
                     before(grammarAccess.getSecretAccess().getGroup_3_1()); 
                    // InternalDockerCompose.g:10247:6: ( rule__Secret__Group_3_1__0 )
                    // InternalDockerCompose.g:10247:7: rule__Secret__Group_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__Group_3_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretAccess().getGroup_3_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:10252:3: ({...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10252:3: ({...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) ) )
                    // InternalDockerCompose.g:10253:4: {...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2) ) {
                        throw new FailedPredicateException(input, "rule__Secret__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2)");
                    }
                    // InternalDockerCompose.g:10253:102: ( ( ( rule__Secret__Group_3_2__0 ) ) )
                    // InternalDockerCompose.g:10254:5: ( ( rule__Secret__Group_3_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10260:5: ( ( rule__Secret__Group_3_2__0 ) )
                    // InternalDockerCompose.g:10261:6: ( rule__Secret__Group_3_2__0 )
                    {
                     before(grammarAccess.getSecretAccess().getGroup_3_2()); 
                    // InternalDockerCompose.g:10262:6: ( rule__Secret__Group_3_2__0 )
                    // InternalDockerCompose.g:10262:7: rule__Secret__Group_3_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__Group_3_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretAccess().getGroup_3_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:10267:3: ({...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10267:3: ({...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) ) )
                    // InternalDockerCompose.g:10268:4: {...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3) ) {
                        throw new FailedPredicateException(input, "rule__Secret__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3)");
                    }
                    // InternalDockerCompose.g:10268:102: ( ( ( rule__Secret__Group_3_3__0 ) ) )
                    // InternalDockerCompose.g:10269:5: ( ( rule__Secret__Group_3_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10275:5: ( ( rule__Secret__Group_3_3__0 ) )
                    // InternalDockerCompose.g:10276:6: ( rule__Secret__Group_3_3__0 )
                    {
                     before(grammarAccess.getSecretAccess().getGroup_3_3()); 
                    // InternalDockerCompose.g:10277:6: ( rule__Secret__Group_3_3__0 )
                    // InternalDockerCompose.g:10277:7: rule__Secret__Group_3_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__Group_3_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretAccess().getGroup_3_3()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSecretAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__UnorderedGroup_3__Impl"


    // $ANTLR start "rule__Secret__UnorderedGroup_3__0"
    // InternalDockerCompose.g:10290:1: rule__Secret__UnorderedGroup_3__0 : rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__1 )? ;
    public final void rule__Secret__UnorderedGroup_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10294:1: ( rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__1 )? )
            // InternalDockerCompose.g:10295:2: rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__1 )?
            {
            pushFollow(FOLLOW_49);
            rule__Secret__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10296:2: ( rule__Secret__UnorderedGroup_3__1 )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( LA107_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0) ) {
                alt107=1;
            }
            else if ( LA107_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1) ) {
                alt107=1;
            }
            else if ( LA107_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2) ) {
                alt107=1;
            }
            else if ( LA107_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalDockerCompose.g:10296:2: rule__Secret__UnorderedGroup_3__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__UnorderedGroup_3__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__UnorderedGroup_3__0"


    // $ANTLR start "rule__Secret__UnorderedGroup_3__1"
    // InternalDockerCompose.g:10302:1: rule__Secret__UnorderedGroup_3__1 : rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__2 )? ;
    public final void rule__Secret__UnorderedGroup_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10306:1: ( rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__2 )? )
            // InternalDockerCompose.g:10307:2: rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__2 )?
            {
            pushFollow(FOLLOW_49);
            rule__Secret__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10308:2: ( rule__Secret__UnorderedGroup_3__2 )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( LA108_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0) ) {
                alt108=1;
            }
            else if ( LA108_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1) ) {
                alt108=1;
            }
            else if ( LA108_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2) ) {
                alt108=1;
            }
            else if ( LA108_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalDockerCompose.g:10308:2: rule__Secret__UnorderedGroup_3__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__UnorderedGroup_3__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__UnorderedGroup_3__1"


    // $ANTLR start "rule__Secret__UnorderedGroup_3__2"
    // InternalDockerCompose.g:10314:1: rule__Secret__UnorderedGroup_3__2 : rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__3 )? ;
    public final void rule__Secret__UnorderedGroup_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10318:1: ( rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__3 )? )
            // InternalDockerCompose.g:10319:2: rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__3 )?
            {
            pushFollow(FOLLOW_49);
            rule__Secret__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10320:2: ( rule__Secret__UnorderedGroup_3__3 )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( LA109_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0) ) {
                alt109=1;
            }
            else if ( LA109_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1) ) {
                alt109=1;
            }
            else if ( LA109_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2) ) {
                alt109=1;
            }
            else if ( LA109_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // InternalDockerCompose.g:10320:2: rule__Secret__UnorderedGroup_3__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__UnorderedGroup_3__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__UnorderedGroup_3__2"


    // $ANTLR start "rule__Secret__UnorderedGroup_3__3"
    // InternalDockerCompose.g:10326:1: rule__Secret__UnorderedGroup_3__3 : rule__Secret__UnorderedGroup_3__Impl ;
    public final void rule__Secret__UnorderedGroup_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10330:1: ( rule__Secret__UnorderedGroup_3__Impl )
            // InternalDockerCompose.g:10331:2: rule__Secret__UnorderedGroup_3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Secret__UnorderedGroup_3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__UnorderedGroup_3__3"


    // $ANTLR start "rule__IPAM__UnorderedGroup_1"
    // InternalDockerCompose.g:10338:1: rule__IPAM__UnorderedGroup_1 : ( rule__IPAM__UnorderedGroup_1__0 )? ;
    public final void rule__IPAM__UnorderedGroup_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getIPAMAccess().getUnorderedGroup_1());
        	
        try {
            // InternalDockerCompose.g:10343:1: ( ( rule__IPAM__UnorderedGroup_1__0 )? )
            // InternalDockerCompose.g:10344:2: ( rule__IPAM__UnorderedGroup_1__0 )?
            {
            // InternalDockerCompose.g:10344:2: ( rule__IPAM__UnorderedGroup_1__0 )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==72) ) {
                int LA110_1 = input.LA(2);

                if ( (LA110_1==RULE_STRING) ) {
                    int LA110_5 = input.LA(3);

                    if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                        alt110=1;
                    }
                }
                else if ( (LA110_1==RULE_ID) ) {
                    int LA110_6 = input.LA(3);

                    if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                        alt110=1;
                    }
                }
            }
            else if ( LA110_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1) ) {
                alt110=1;
            }
            else if ( LA110_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // InternalDockerCompose.g:10344:2: rule__IPAM__UnorderedGroup_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAM__UnorderedGroup_1__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getIPAMAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__UnorderedGroup_1"


    // $ANTLR start "rule__IPAM__UnorderedGroup_1__Impl"
    // InternalDockerCompose.g:10352:1: rule__IPAM__UnorderedGroup_1__Impl : ( ({...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) ) ) ) ;
    public final void rule__IPAM__UnorderedGroup_1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:10357:1: ( ( ({...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) ) ) ) )
            // InternalDockerCompose.g:10358:3: ( ({...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:10358:3: ( ({...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) ) ) )
            int alt111=3;
            int LA111_0 = input.LA(1);

            if ( LA111_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                alt111=1;
            }
            else if ( LA111_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1) ) {
                alt111=2;
            }
            else if ( LA111_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2) ) {
                alt111=3;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 111, 0, input);

                throw nvae;
            }
            switch (alt111) {
                case 1 :
                    // InternalDockerCompose.g:10359:3: ({...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10359:3: ({...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) ) )
                    // InternalDockerCompose.g:10360:4: {...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                        throw new FailedPredicateException(input, "rule__IPAM__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0)");
                    }
                    // InternalDockerCompose.g:10360:100: ( ( ( rule__IPAM__Group_1_0__0 ) ) )
                    // InternalDockerCompose.g:10361:5: ( ( rule__IPAM__Group_1_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10367:5: ( ( rule__IPAM__Group_1_0__0 ) )
                    // InternalDockerCompose.g:10368:6: ( rule__IPAM__Group_1_0__0 )
                    {
                     before(grammarAccess.getIPAMAccess().getGroup_1_0()); 
                    // InternalDockerCompose.g:10369:6: ( rule__IPAM__Group_1_0__0 )
                    // InternalDockerCompose.g:10369:7: rule__IPAM__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAM__Group_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMAccess().getGroup_1_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:10374:3: ({...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10374:3: ({...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) ) )
                    // InternalDockerCompose.g:10375:4: {...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1) ) {
                        throw new FailedPredicateException(input, "rule__IPAM__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1)");
                    }
                    // InternalDockerCompose.g:10375:100: ( ( ( rule__IPAM__Group_1_1__0 ) ) )
                    // InternalDockerCompose.g:10376:5: ( ( rule__IPAM__Group_1_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10382:5: ( ( rule__IPAM__Group_1_1__0 ) )
                    // InternalDockerCompose.g:10383:6: ( rule__IPAM__Group_1_1__0 )
                    {
                     before(grammarAccess.getIPAMAccess().getGroup_1_1()); 
                    // InternalDockerCompose.g:10384:6: ( rule__IPAM__Group_1_1__0 )
                    // InternalDockerCompose.g:10384:7: rule__IPAM__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAM__Group_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMAccess().getGroup_1_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:10389:3: ({...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10389:3: ({...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) ) )
                    // InternalDockerCompose.g:10390:4: {...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2) ) {
                        throw new FailedPredicateException(input, "rule__IPAM__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2)");
                    }
                    // InternalDockerCompose.g:10390:100: ( ( ( rule__IPAM__Group_1_2__0 ) ) )
                    // InternalDockerCompose.g:10391:5: ( ( rule__IPAM__Group_1_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10397:5: ( ( rule__IPAM__Group_1_2__0 ) )
                    // InternalDockerCompose.g:10398:6: ( rule__IPAM__Group_1_2__0 )
                    {
                     before(grammarAccess.getIPAMAccess().getGroup_1_2()); 
                    // InternalDockerCompose.g:10399:6: ( rule__IPAM__Group_1_2__0 )
                    // InternalDockerCompose.g:10399:7: rule__IPAM__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAM__Group_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMAccess().getGroup_1_2()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIPAMAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__UnorderedGroup_1__Impl"


    // $ANTLR start "rule__IPAM__UnorderedGroup_1__0"
    // InternalDockerCompose.g:10412:1: rule__IPAM__UnorderedGroup_1__0 : rule__IPAM__UnorderedGroup_1__Impl ( rule__IPAM__UnorderedGroup_1__1 )? ;
    public final void rule__IPAM__UnorderedGroup_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10416:1: ( rule__IPAM__UnorderedGroup_1__Impl ( rule__IPAM__UnorderedGroup_1__1 )? )
            // InternalDockerCompose.g:10417:2: rule__IPAM__UnorderedGroup_1__Impl ( rule__IPAM__UnorderedGroup_1__1 )?
            {
            pushFollow(FOLLOW_50);
            rule__IPAM__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10418:2: ( rule__IPAM__UnorderedGroup_1__1 )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==72) ) {
                int LA112_1 = input.LA(2);

                if ( (LA112_1==RULE_STRING) ) {
                    int LA112_5 = input.LA(3);

                    if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                        alt112=1;
                    }
                }
                else if ( (LA112_1==RULE_ID) ) {
                    int LA112_6 = input.LA(3);

                    if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                        alt112=1;
                    }
                }
            }
            else if ( LA112_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1) ) {
                alt112=1;
            }
            else if ( LA112_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // InternalDockerCompose.g:10418:2: rule__IPAM__UnorderedGroup_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAM__UnorderedGroup_1__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__UnorderedGroup_1__0"


    // $ANTLR start "rule__IPAM__UnorderedGroup_1__1"
    // InternalDockerCompose.g:10424:1: rule__IPAM__UnorderedGroup_1__1 : rule__IPAM__UnorderedGroup_1__Impl ( rule__IPAM__UnorderedGroup_1__2 )? ;
    public final void rule__IPAM__UnorderedGroup_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10428:1: ( rule__IPAM__UnorderedGroup_1__Impl ( rule__IPAM__UnorderedGroup_1__2 )? )
            // InternalDockerCompose.g:10429:2: rule__IPAM__UnorderedGroup_1__Impl ( rule__IPAM__UnorderedGroup_1__2 )?
            {
            pushFollow(FOLLOW_50);
            rule__IPAM__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10430:2: ( rule__IPAM__UnorderedGroup_1__2 )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==72) ) {
                int LA113_1 = input.LA(2);

                if ( (LA113_1==RULE_STRING) ) {
                    int LA113_5 = input.LA(3);

                    if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                        alt113=1;
                    }
                }
                else if ( (LA113_1==RULE_ID) ) {
                    int LA113_6 = input.LA(3);

                    if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                        alt113=1;
                    }
                }
            }
            else if ( LA113_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1) ) {
                alt113=1;
            }
            else if ( LA113_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalDockerCompose.g:10430:2: rule__IPAM__UnorderedGroup_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAM__UnorderedGroup_1__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__UnorderedGroup_1__1"


    // $ANTLR start "rule__IPAM__UnorderedGroup_1__2"
    // InternalDockerCompose.g:10436:1: rule__IPAM__UnorderedGroup_1__2 : rule__IPAM__UnorderedGroup_1__Impl ;
    public final void rule__IPAM__UnorderedGroup_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10440:1: ( rule__IPAM__UnorderedGroup_1__Impl )
            // InternalDockerCompose.g:10441:2: rule__IPAM__UnorderedGroup_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__UnorderedGroup_1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__UnorderedGroup_1__2"


    // $ANTLR start "rule__IPAMConfig__UnorderedGroup_1"
    // InternalDockerCompose.g:10448:1: rule__IPAMConfig__UnorderedGroup_1 : ( rule__IPAMConfig__UnorderedGroup_1__0 )? ;
    public final void rule__IPAMConfig__UnorderedGroup_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1());
        	
        try {
            // InternalDockerCompose.g:10453:1: ( ( rule__IPAMConfig__UnorderedGroup_1__0 )? )
            // InternalDockerCompose.g:10454:2: ( rule__IPAMConfig__UnorderedGroup_1__0 )?
            {
            // InternalDockerCompose.g:10454:2: ( rule__IPAMConfig__UnorderedGroup_1__0 )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( LA114_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0) ) {
                alt114=1;
            }
            else if ( LA114_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1) ) {
                alt114=1;
            }
            else if ( LA114_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2) ) {
                alt114=1;
            }
            else if ( LA114_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalDockerCompose.g:10454:2: rule__IPAMConfig__UnorderedGroup_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__UnorderedGroup_1__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__UnorderedGroup_1"


    // $ANTLR start "rule__IPAMConfig__UnorderedGroup_1__Impl"
    // InternalDockerCompose.g:10462:1: rule__IPAMConfig__UnorderedGroup_1__Impl : ( ({...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) ) ) ) ;
    public final void rule__IPAMConfig__UnorderedGroup_1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:10467:1: ( ( ({...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) ) ) ) )
            // InternalDockerCompose.g:10468:3: ( ({...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:10468:3: ( ({...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) ) ) )
            int alt115=4;
            int LA115_0 = input.LA(1);

            if ( LA115_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0) ) {
                alt115=1;
            }
            else if ( LA115_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1) ) {
                alt115=2;
            }
            else if ( LA115_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2) ) {
                alt115=3;
            }
            else if ( LA115_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3) ) {
                alt115=4;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 115, 0, input);

                throw nvae;
            }
            switch (alt115) {
                case 1 :
                    // InternalDockerCompose.g:10469:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10469:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) ) )
                    // InternalDockerCompose.g:10470:4: {...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0) ) {
                        throw new FailedPredicateException(input, "rule__IPAMConfig__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0)");
                    }
                    // InternalDockerCompose.g:10470:106: ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) )
                    // InternalDockerCompose.g:10471:5: ( ( rule__IPAMConfig__Group_1_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10477:5: ( ( rule__IPAMConfig__Group_1_0__0 ) )
                    // InternalDockerCompose.g:10478:6: ( rule__IPAMConfig__Group_1_0__0 )
                    {
                     before(grammarAccess.getIPAMConfigAccess().getGroup_1_0()); 
                    // InternalDockerCompose.g:10479:6: ( rule__IPAMConfig__Group_1_0__0 )
                    // InternalDockerCompose.g:10479:7: rule__IPAMConfig__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__Group_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMConfigAccess().getGroup_1_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:10484:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10484:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) ) )
                    // InternalDockerCompose.g:10485:4: {...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1) ) {
                        throw new FailedPredicateException(input, "rule__IPAMConfig__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1)");
                    }
                    // InternalDockerCompose.g:10485:106: ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) )
                    // InternalDockerCompose.g:10486:5: ( ( rule__IPAMConfig__Group_1_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10492:5: ( ( rule__IPAMConfig__Group_1_1__0 ) )
                    // InternalDockerCompose.g:10493:6: ( rule__IPAMConfig__Group_1_1__0 )
                    {
                     before(grammarAccess.getIPAMConfigAccess().getGroup_1_1()); 
                    // InternalDockerCompose.g:10494:6: ( rule__IPAMConfig__Group_1_1__0 )
                    // InternalDockerCompose.g:10494:7: rule__IPAMConfig__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__Group_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMConfigAccess().getGroup_1_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:10499:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10499:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) ) )
                    // InternalDockerCompose.g:10500:4: {...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2) ) {
                        throw new FailedPredicateException(input, "rule__IPAMConfig__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2)");
                    }
                    // InternalDockerCompose.g:10500:106: ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) )
                    // InternalDockerCompose.g:10501:5: ( ( rule__IPAMConfig__Group_1_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10507:5: ( ( rule__IPAMConfig__Group_1_2__0 ) )
                    // InternalDockerCompose.g:10508:6: ( rule__IPAMConfig__Group_1_2__0 )
                    {
                     before(grammarAccess.getIPAMConfigAccess().getGroup_1_2()); 
                    // InternalDockerCompose.g:10509:6: ( rule__IPAMConfig__Group_1_2__0 )
                    // InternalDockerCompose.g:10509:7: rule__IPAMConfig__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__Group_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMConfigAccess().getGroup_1_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:10514:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10514:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) ) )
                    // InternalDockerCompose.g:10515:4: {...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3) ) {
                        throw new FailedPredicateException(input, "rule__IPAMConfig__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3)");
                    }
                    // InternalDockerCompose.g:10515:106: ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) )
                    // InternalDockerCompose.g:10516:5: ( ( rule__IPAMConfig__Group_1_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10522:5: ( ( rule__IPAMConfig__Group_1_3__0 ) )
                    // InternalDockerCompose.g:10523:6: ( rule__IPAMConfig__Group_1_3__0 )
                    {
                     before(grammarAccess.getIPAMConfigAccess().getGroup_1_3()); 
                    // InternalDockerCompose.g:10524:6: ( rule__IPAMConfig__Group_1_3__0 )
                    // InternalDockerCompose.g:10524:7: rule__IPAMConfig__Group_1_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__Group_1_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMConfigAccess().getGroup_1_3()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__UnorderedGroup_1__Impl"


    // $ANTLR start "rule__IPAMConfig__UnorderedGroup_1__0"
    // InternalDockerCompose.g:10537:1: rule__IPAMConfig__UnorderedGroup_1__0 : rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__1 )? ;
    public final void rule__IPAMConfig__UnorderedGroup_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10541:1: ( rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__1 )? )
            // InternalDockerCompose.g:10542:2: rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__1 )?
            {
            pushFollow(FOLLOW_51);
            rule__IPAMConfig__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10543:2: ( rule__IPAMConfig__UnorderedGroup_1__1 )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( LA116_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0) ) {
                alt116=1;
            }
            else if ( LA116_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1) ) {
                alt116=1;
            }
            else if ( LA116_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2) ) {
                alt116=1;
            }
            else if ( LA116_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalDockerCompose.g:10543:2: rule__IPAMConfig__UnorderedGroup_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__UnorderedGroup_1__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__UnorderedGroup_1__0"


    // $ANTLR start "rule__IPAMConfig__UnorderedGroup_1__1"
    // InternalDockerCompose.g:10549:1: rule__IPAMConfig__UnorderedGroup_1__1 : rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__2 )? ;
    public final void rule__IPAMConfig__UnorderedGroup_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10553:1: ( rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__2 )? )
            // InternalDockerCompose.g:10554:2: rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__2 )?
            {
            pushFollow(FOLLOW_51);
            rule__IPAMConfig__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10555:2: ( rule__IPAMConfig__UnorderedGroup_1__2 )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( LA117_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0) ) {
                alt117=1;
            }
            else if ( LA117_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1) ) {
                alt117=1;
            }
            else if ( LA117_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2) ) {
                alt117=1;
            }
            else if ( LA117_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalDockerCompose.g:10555:2: rule__IPAMConfig__UnorderedGroup_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__UnorderedGroup_1__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__UnorderedGroup_1__1"


    // $ANTLR start "rule__IPAMConfig__UnorderedGroup_1__2"
    // InternalDockerCompose.g:10561:1: rule__IPAMConfig__UnorderedGroup_1__2 : rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__3 )? ;
    public final void rule__IPAMConfig__UnorderedGroup_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10565:1: ( rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__3 )? )
            // InternalDockerCompose.g:10566:2: rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__3 )?
            {
            pushFollow(FOLLOW_51);
            rule__IPAMConfig__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10567:2: ( rule__IPAMConfig__UnorderedGroup_1__3 )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( LA118_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0) ) {
                alt118=1;
            }
            else if ( LA118_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1) ) {
                alt118=1;
            }
            else if ( LA118_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2) ) {
                alt118=1;
            }
            else if ( LA118_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalDockerCompose.g:10567:2: rule__IPAMConfig__UnorderedGroup_1__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__UnorderedGroup_1__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__UnorderedGroup_1__2"


    // $ANTLR start "rule__IPAMConfig__UnorderedGroup_1__3"
    // InternalDockerCompose.g:10573:1: rule__IPAMConfig__UnorderedGroup_1__3 : rule__IPAMConfig__UnorderedGroup_1__Impl ;
    public final void rule__IPAMConfig__UnorderedGroup_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10577:1: ( rule__IPAMConfig__UnorderedGroup_1__Impl )
            // InternalDockerCompose.g:10578:2: rule__IPAMConfig__UnorderedGroup_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__UnorderedGroup_1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__UnorderedGroup_1__3"


    // $ANTLR start "rule__DockerCompose__ServicesAssignment_1_1"
    // InternalDockerCompose.g:10585:1: rule__DockerCompose__ServicesAssignment_1_1 : ( ruleService ) ;
    public final void rule__DockerCompose__ServicesAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10589:1: ( ( ruleService ) )
            // InternalDockerCompose.g:10590:2: ( ruleService )
            {
            // InternalDockerCompose.g:10590:2: ( ruleService )
            // InternalDockerCompose.g:10591:3: ruleService
            {
             before(grammarAccess.getDockerComposeAccess().getServicesServiceParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleService();

            state._fsp--;

             after(grammarAccess.getDockerComposeAccess().getServicesServiceParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__ServicesAssignment_1_1"


    // $ANTLR start "rule__DockerCompose__NetworksAssignment_2_1"
    // InternalDockerCompose.g:10600:1: rule__DockerCompose__NetworksAssignment_2_1 : ( ruleNetwork ) ;
    public final void rule__DockerCompose__NetworksAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10604:1: ( ( ruleNetwork ) )
            // InternalDockerCompose.g:10605:2: ( ruleNetwork )
            {
            // InternalDockerCompose.g:10605:2: ( ruleNetwork )
            // InternalDockerCompose.g:10606:3: ruleNetwork
            {
             before(grammarAccess.getDockerComposeAccess().getNetworksNetworkParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNetwork();

            state._fsp--;

             after(grammarAccess.getDockerComposeAccess().getNetworksNetworkParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__NetworksAssignment_2_1"


    // $ANTLR start "rule__DockerCompose__VolumesAssignment_3_1"
    // InternalDockerCompose.g:10615:1: rule__DockerCompose__VolumesAssignment_3_1 : ( ruleVolume ) ;
    public final void rule__DockerCompose__VolumesAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10619:1: ( ( ruleVolume ) )
            // InternalDockerCompose.g:10620:2: ( ruleVolume )
            {
            // InternalDockerCompose.g:10620:2: ( ruleVolume )
            // InternalDockerCompose.g:10621:3: ruleVolume
            {
             before(grammarAccess.getDockerComposeAccess().getVolumesVolumeParserRuleCall_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleVolume();

            state._fsp--;

             after(grammarAccess.getDockerComposeAccess().getVolumesVolumeParserRuleCall_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__VolumesAssignment_3_1"


    // $ANTLR start "rule__DockerCompose__ConfigsAssignment_4_1"
    // InternalDockerCompose.g:10630:1: rule__DockerCompose__ConfigsAssignment_4_1 : ( ruleConfig ) ;
    public final void rule__DockerCompose__ConfigsAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10634:1: ( ( ruleConfig ) )
            // InternalDockerCompose.g:10635:2: ( ruleConfig )
            {
            // InternalDockerCompose.g:10635:2: ( ruleConfig )
            // InternalDockerCompose.g:10636:3: ruleConfig
            {
             before(grammarAccess.getDockerComposeAccess().getConfigsConfigParserRuleCall_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleConfig();

            state._fsp--;

             after(grammarAccess.getDockerComposeAccess().getConfigsConfigParserRuleCall_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__ConfigsAssignment_4_1"


    // $ANTLR start "rule__DockerCompose__SecretsAssignment_5_1"
    // InternalDockerCompose.g:10645:1: rule__DockerCompose__SecretsAssignment_5_1 : ( ruleSecret ) ;
    public final void rule__DockerCompose__SecretsAssignment_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10649:1: ( ( ruleSecret ) )
            // InternalDockerCompose.g:10650:2: ( ruleSecret )
            {
            // InternalDockerCompose.g:10650:2: ( ruleSecret )
            // InternalDockerCompose.g:10651:3: ruleSecret
            {
             before(grammarAccess.getDockerComposeAccess().getSecretsSecretParserRuleCall_5_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSecret();

            state._fsp--;

             after(grammarAccess.getDockerComposeAccess().getSecretsSecretParserRuleCall_5_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__SecretsAssignment_5_1"


    // $ANTLR start "rule__Service__NameAssignment_1"
    // InternalDockerCompose.g:10660:1: rule__Service__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__Service__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10664:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:10665:2: ( ruleEString )
            {
            // InternalDockerCompose.g:10665:2: ( ruleEString )
            // InternalDockerCompose.g:10666:3: ruleEString
            {
             before(grammarAccess.getServiceAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__NameAssignment_1"


    // $ANTLR start "rule__Service__BuildAssignment_3_0_0_1"
    // InternalDockerCompose.g:10675:1: rule__Service__BuildAssignment_3_0_0_1 : ( rulePATH ) ;
    public final void rule__Service__BuildAssignment_3_0_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10679:1: ( ( rulePATH ) )
            // InternalDockerCompose.g:10680:2: ( rulePATH )
            {
            // InternalDockerCompose.g:10680:2: ( rulePATH )
            // InternalDockerCompose.g:10681:3: rulePATH
            {
             before(grammarAccess.getServiceAccess().getBuildPATHParserRuleCall_3_0_0_1_0()); 
            pushFollow(FOLLOW_2);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getBuildPATHParserRuleCall_3_0_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__BuildAssignment_3_0_0_1"


    // $ANTLR start "rule__Service__ImageAssignment_3_0_1_1"
    // InternalDockerCompose.g:10690:1: rule__Service__ImageAssignment_3_0_1_1 : ( ruleImage ) ;
    public final void rule__Service__ImageAssignment_3_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10694:1: ( ( ruleImage ) )
            // InternalDockerCompose.g:10695:2: ( ruleImage )
            {
            // InternalDockerCompose.g:10695:2: ( ruleImage )
            // InternalDockerCompose.g:10696:3: ruleImage
            {
             before(grammarAccess.getServiceAccess().getImageImageParserRuleCall_3_0_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleImage();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getImageImageParserRuleCall_3_0_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__ImageAssignment_3_0_1_1"


    // $ANTLR start "rule__Service__Cpu_countAssignment_3_1_1"
    // InternalDockerCompose.g:10705:1: rule__Service__Cpu_countAssignment_3_1_1 : ( ruleEInt ) ;
    public final void rule__Service__Cpu_countAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10709:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:10710:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:10710:2: ( ruleEInt )
            // InternalDockerCompose.g:10711:3: ruleEInt
            {
             before(grammarAccess.getServiceAccess().getCpu_countEIntParserRuleCall_3_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getCpu_countEIntParserRuleCall_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Cpu_countAssignment_3_1_1"


    // $ANTLR start "rule__Service__CommandAssignment_3_2_1"
    // InternalDockerCompose.g:10720:1: rule__Service__CommandAssignment_3_2_1 : ( ruleEString ) ;
    public final void rule__Service__CommandAssignment_3_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10724:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:10725:2: ( ruleEString )
            {
            // InternalDockerCompose.g:10725:2: ( ruleEString )
            // InternalDockerCompose.g:10726:3: ruleEString
            {
             before(grammarAccess.getServiceAccess().getCommandEStringParserRuleCall_3_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getCommandEStringParserRuleCall_3_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__CommandAssignment_3_2_1"


    // $ANTLR start "rule__Service__Container_nameAssignment_3_3_1"
    // InternalDockerCompose.g:10735:1: rule__Service__Container_nameAssignment_3_3_1 : ( ruleEString ) ;
    public final void rule__Service__Container_nameAssignment_3_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10739:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:10740:2: ( ruleEString )
            {
            // InternalDockerCompose.g:10740:2: ( ruleEString )
            // InternalDockerCompose.g:10741:3: ruleEString
            {
             before(grammarAccess.getServiceAccess().getContainer_nameEStringParserRuleCall_3_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getContainer_nameEStringParserRuleCall_3_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Container_nameAssignment_3_3_1"


    // $ANTLR start "rule__Service__RestartAssignment_3_4_1"
    // InternalDockerCompose.g:10750:1: rule__Service__RestartAssignment_3_4_1 : ( ruleRestartPolicy ) ;
    public final void rule__Service__RestartAssignment_3_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10754:1: ( ( ruleRestartPolicy ) )
            // InternalDockerCompose.g:10755:2: ( ruleRestartPolicy )
            {
            // InternalDockerCompose.g:10755:2: ( ruleRestartPolicy )
            // InternalDockerCompose.g:10756:3: ruleRestartPolicy
            {
             before(grammarAccess.getServiceAccess().getRestartRestartPolicyEnumRuleCall_3_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleRestartPolicy();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getRestartRestartPolicyEnumRuleCall_3_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__RestartAssignment_3_4_1"


    // $ANTLR start "rule__Service__InitAssignment_3_5_1"
    // InternalDockerCompose.g:10765:1: rule__Service__InitAssignment_3_5_1 : ( ruleEBoolean ) ;
    public final void rule__Service__InitAssignment_3_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10769:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:10770:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:10770:2: ( ruleEBoolean )
            // InternalDockerCompose.g:10771:3: ruleEBoolean
            {
             before(grammarAccess.getServiceAccess().getInitEBooleanParserRuleCall_3_5_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getInitEBooleanParserRuleCall_3_5_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__InitAssignment_3_5_1"


    // $ANTLR start "rule__Service__Read_onlyAssignment_3_6_1"
    // InternalDockerCompose.g:10780:1: rule__Service__Read_onlyAssignment_3_6_1 : ( ruleEBoolean ) ;
    public final void rule__Service__Read_onlyAssignment_3_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10784:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:10785:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:10785:2: ( ruleEBoolean )
            // InternalDockerCompose.g:10786:3: ruleEBoolean
            {
             before(grammarAccess.getServiceAccess().getRead_onlyEBooleanParserRuleCall_3_6_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getRead_onlyEBooleanParserRuleCall_3_6_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Read_onlyAssignment_3_6_1"


    // $ANTLR start "rule__Service__Depends_onAssignment_3_7_1_1"
    // InternalDockerCompose.g:10795:1: rule__Service__Depends_onAssignment_3_7_1_1 : ( ruleDependency ) ;
    public final void rule__Service__Depends_onAssignment_3_7_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10799:1: ( ( ruleDependency ) )
            // InternalDockerCompose.g:10800:2: ( ruleDependency )
            {
            // InternalDockerCompose.g:10800:2: ( ruleDependency )
            // InternalDockerCompose.g:10801:3: ruleDependency
            {
             before(grammarAccess.getServiceAccess().getDepends_onDependencyParserRuleCall_3_7_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDependency();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getDepends_onDependencyParserRuleCall_3_7_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Depends_onAssignment_3_7_1_1"


    // $ANTLR start "rule__Service__NetworksAssignment_3_8_1"
    // InternalDockerCompose.g:10810:1: rule__Service__NetworksAssignment_3_8_1 : ( ruleNetworkConnector ) ;
    public final void rule__Service__NetworksAssignment_3_8_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10814:1: ( ( ruleNetworkConnector ) )
            // InternalDockerCompose.g:10815:2: ( ruleNetworkConnector )
            {
            // InternalDockerCompose.g:10815:2: ( ruleNetworkConnector )
            // InternalDockerCompose.g:10816:3: ruleNetworkConnector
            {
             before(grammarAccess.getServiceAccess().getNetworksNetworkConnectorParserRuleCall_3_8_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNetworkConnector();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getNetworksNetworkConnectorParserRuleCall_3_8_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__NetworksAssignment_3_8_1"


    // $ANTLR start "rule__Service__VolumesAssignment_3_9_1_1"
    // InternalDockerCompose.g:10825:1: rule__Service__VolumesAssignment_3_9_1_1 : ( ruleVolumeConnector ) ;
    public final void rule__Service__VolumesAssignment_3_9_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10829:1: ( ( ruleVolumeConnector ) )
            // InternalDockerCompose.g:10830:2: ( ruleVolumeConnector )
            {
            // InternalDockerCompose.g:10830:2: ( ruleVolumeConnector )
            // InternalDockerCompose.g:10831:3: ruleVolumeConnector
            {
             before(grammarAccess.getServiceAccess().getVolumesVolumeConnectorParserRuleCall_3_9_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleVolumeConnector();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getVolumesVolumeConnectorParserRuleCall_3_9_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__VolumesAssignment_3_9_1_1"


    // $ANTLR start "rule__Service__ConfigsAssignment_3_10_1_1"
    // InternalDockerCompose.g:10840:1: rule__Service__ConfigsAssignment_3_10_1_1 : ( ruleConfigConnector ) ;
    public final void rule__Service__ConfigsAssignment_3_10_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10844:1: ( ( ruleConfigConnector ) )
            // InternalDockerCompose.g:10845:2: ( ruleConfigConnector )
            {
            // InternalDockerCompose.g:10845:2: ( ruleConfigConnector )
            // InternalDockerCompose.g:10846:3: ruleConfigConnector
            {
             before(grammarAccess.getServiceAccess().getConfigsConfigConnectorParserRuleCall_3_10_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleConfigConnector();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getConfigsConfigConnectorParserRuleCall_3_10_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__ConfigsAssignment_3_10_1_1"


    // $ANTLR start "rule__Service__SecretsAssignment_3_11_1_1"
    // InternalDockerCompose.g:10855:1: rule__Service__SecretsAssignment_3_11_1_1 : ( ruleSecretConnector ) ;
    public final void rule__Service__SecretsAssignment_3_11_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10859:1: ( ( ruleSecretConnector ) )
            // InternalDockerCompose.g:10860:2: ( ruleSecretConnector )
            {
            // InternalDockerCompose.g:10860:2: ( ruleSecretConnector )
            // InternalDockerCompose.g:10861:3: ruleSecretConnector
            {
             before(grammarAccess.getServiceAccess().getSecretsSecretConnectorParserRuleCall_3_11_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSecretConnector();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getSecretsSecretConnectorParserRuleCall_3_11_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__SecretsAssignment_3_11_1_1"


    // $ANTLR start "rule__Service__DnsAssignment_3_13_1_0_1"
    // InternalDockerCompose.g:10870:1: rule__Service__DnsAssignment_3_13_1_0_1 : ( ruleDNS ) ;
    public final void rule__Service__DnsAssignment_3_13_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10874:1: ( ( ruleDNS ) )
            // InternalDockerCompose.g:10875:2: ( ruleDNS )
            {
            // InternalDockerCompose.g:10875:2: ( ruleDNS )
            // InternalDockerCompose.g:10876:3: ruleDNS
            {
             before(grammarAccess.getServiceAccess().getDnsDNSParserRuleCall_3_13_1_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getDnsDNSParserRuleCall_3_13_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__DnsAssignment_3_13_1_0_1"


    // $ANTLR start "rule__Service__DnsAssignment_3_13_1_1"
    // InternalDockerCompose.g:10885:1: rule__Service__DnsAssignment_3_13_1_1 : ( ruleDNS ) ;
    public final void rule__Service__DnsAssignment_3_13_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10889:1: ( ( ruleDNS ) )
            // InternalDockerCompose.g:10890:2: ( ruleDNS )
            {
            // InternalDockerCompose.g:10890:2: ( ruleDNS )
            // InternalDockerCompose.g:10891:3: ruleDNS
            {
             before(grammarAccess.getServiceAccess().getDnsDNSParserRuleCall_3_13_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getDnsDNSParserRuleCall_3_13_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__DnsAssignment_3_13_1_1"


    // $ANTLR start "rule__Dependency__ServiceAssignment_1"
    // InternalDockerCompose.g:10900:1: rule__Dependency__ServiceAssignment_1 : ( ( ruleEString ) ) ;
    public final void rule__Dependency__ServiceAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10904:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:10905:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:10905:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:10906:3: ( ruleEString )
            {
             before(grammarAccess.getDependencyAccess().getServiceServiceCrossReference_1_0()); 
            // InternalDockerCompose.g:10907:3: ( ruleEString )
            // InternalDockerCompose.g:10908:4: ruleEString
            {
             before(grammarAccess.getDependencyAccess().getServiceServiceEStringParserRuleCall_1_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getDependencyAccess().getServiceServiceEStringParserRuleCall_1_0_1()); 

            }

             after(grammarAccess.getDependencyAccess().getServiceServiceCrossReference_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency__ServiceAssignment_1"


    // $ANTLR start "rule__NetworkConnector__NetworkAssignment_0_1_1"
    // InternalDockerCompose.g:10919:1: rule__NetworkConnector__NetworkAssignment_0_1_1 : ( ( ruleEString ) ) ;
    public final void rule__NetworkConnector__NetworkAssignment_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10923:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:10924:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:10924:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:10925:3: ( ruleEString )
            {
             before(grammarAccess.getNetworkConnectorAccess().getNetworkNetworkCrossReference_0_1_1_0()); 
            // InternalDockerCompose.g:10926:3: ( ruleEString )
            // InternalDockerCompose.g:10927:4: ruleEString
            {
             before(grammarAccess.getNetworkConnectorAccess().getNetworkNetworkEStringParserRuleCall_0_1_1_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkConnectorAccess().getNetworkNetworkEStringParserRuleCall_0_1_1_0_1()); 

            }

             after(grammarAccess.getNetworkConnectorAccess().getNetworkNetworkCrossReference_0_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__NetworkAssignment_0_1_1"


    // $ANTLR start "rule__NetworkConnector__NetworkAssignment_1_0"
    // InternalDockerCompose.g:10938:1: rule__NetworkConnector__NetworkAssignment_1_0 : ( ( ruleEString ) ) ;
    public final void rule__NetworkConnector__NetworkAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10942:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:10943:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:10943:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:10944:3: ( ruleEString )
            {
             before(grammarAccess.getNetworkConnectorAccess().getNetworkNetworkCrossReference_1_0_0()); 
            // InternalDockerCompose.g:10945:3: ( ruleEString )
            // InternalDockerCompose.g:10946:4: ruleEString
            {
             before(grammarAccess.getNetworkConnectorAccess().getNetworkNetworkEStringParserRuleCall_1_0_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkConnectorAccess().getNetworkNetworkEStringParserRuleCall_1_0_0_1()); 

            }

             after(grammarAccess.getNetworkConnectorAccess().getNetworkNetworkCrossReference_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__NetworkAssignment_1_0"


    // $ANTLR start "rule__NetworkConnector__Ipv4_addressAssignment_1_2_0_1"
    // InternalDockerCompose.g:10957:1: rule__NetworkConnector__Ipv4_addressAssignment_1_2_0_1 : ( ruleDNS ) ;
    public final void rule__NetworkConnector__Ipv4_addressAssignment_1_2_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10961:1: ( ( ruleDNS ) )
            // InternalDockerCompose.g:10962:2: ( ruleDNS )
            {
            // InternalDockerCompose.g:10962:2: ( ruleDNS )
            // InternalDockerCompose.g:10963:3: ruleDNS
            {
             before(grammarAccess.getNetworkConnectorAccess().getIpv4_addressDNSParserRuleCall_1_2_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getNetworkConnectorAccess().getIpv4_addressDNSParserRuleCall_1_2_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Ipv4_addressAssignment_1_2_0_1"


    // $ANTLR start "rule__NetworkConnector__PriorityAssignment_1_2_1_1"
    // InternalDockerCompose.g:10972:1: rule__NetworkConnector__PriorityAssignment_1_2_1_1 : ( ruleEInt ) ;
    public final void rule__NetworkConnector__PriorityAssignment_1_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10976:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:10977:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:10977:2: ( ruleEInt )
            // InternalDockerCompose.g:10978:3: ruleEInt
            {
             before(grammarAccess.getNetworkConnectorAccess().getPriorityEIntParserRuleCall_1_2_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getNetworkConnectorAccess().getPriorityEIntParserRuleCall_1_2_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__PriorityAssignment_1_2_1_1"


    // $ANTLR start "rule__NetworkConnector__AliasesAssignment_1_2_2_1_1"
    // InternalDockerCompose.g:10987:1: rule__NetworkConnector__AliasesAssignment_1_2_2_1_1 : ( ruleAlias ) ;
    public final void rule__NetworkConnector__AliasesAssignment_1_2_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10991:1: ( ( ruleAlias ) )
            // InternalDockerCompose.g:10992:2: ( ruleAlias )
            {
            // InternalDockerCompose.g:10992:2: ( ruleAlias )
            // InternalDockerCompose.g:10993:3: ruleAlias
            {
             before(grammarAccess.getNetworkConnectorAccess().getAliasesAliasParserRuleCall_1_2_2_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleAlias();

            state._fsp--;

             after(grammarAccess.getNetworkConnectorAccess().getAliasesAliasParserRuleCall_1_2_2_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__AliasesAssignment_1_2_2_1_1"


    // $ANTLR start "rule__NetworkConnector__Link_local_ipsAssignment_1_2_3_1_1"
    // InternalDockerCompose.g:11002:1: rule__NetworkConnector__Link_local_ipsAssignment_1_2_3_1_1 : ( ruleDNS ) ;
    public final void rule__NetworkConnector__Link_local_ipsAssignment_1_2_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11006:1: ( ( ruleDNS ) )
            // InternalDockerCompose.g:11007:2: ( ruleDNS )
            {
            // InternalDockerCompose.g:11007:2: ( ruleDNS )
            // InternalDockerCompose.g:11008:3: ruleDNS
            {
             before(grammarAccess.getNetworkConnectorAccess().getLink_local_ipsDNSParserRuleCall_1_2_3_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getNetworkConnectorAccess().getLink_local_ipsDNSParserRuleCall_1_2_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Link_local_ipsAssignment_1_2_3_1_1"


    // $ANTLR start "rule__Alias__AliasAssignment_1"
    // InternalDockerCompose.g:11017:1: rule__Alias__AliasAssignment_1 : ( ruleEString ) ;
    public final void rule__Alias__AliasAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11021:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:11022:2: ( ruleEString )
            {
            // InternalDockerCompose.g:11022:2: ( ruleEString )
            // InternalDockerCompose.g:11023:3: ruleEString
            {
             before(grammarAccess.getAliasAccess().getAliasEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getAliasAccess().getAliasEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Alias__AliasAssignment_1"


    // $ANTLR start "rule__VolumeConnector__VolumeAssignment_1_0_0"
    // InternalDockerCompose.g:11032:1: rule__VolumeConnector__VolumeAssignment_1_0_0 : ( ( ruleEString ) ) ;
    public final void rule__VolumeConnector__VolumeAssignment_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11036:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:11037:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:11037:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:11038:3: ( ruleEString )
            {
             before(grammarAccess.getVolumeConnectorAccess().getVolumeVolumeCrossReference_1_0_0_0()); 
            // InternalDockerCompose.g:11039:3: ( ruleEString )
            // InternalDockerCompose.g:11040:4: ruleEString
            {
             before(grammarAccess.getVolumeConnectorAccess().getVolumeVolumeEStringParserRuleCall_1_0_0_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeConnectorAccess().getVolumeVolumeEStringParserRuleCall_1_0_0_0_1()); 

            }

             after(grammarAccess.getVolumeConnectorAccess().getVolumeVolumeCrossReference_1_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__VolumeAssignment_1_0_0"


    // $ANTLR start "rule__VolumeConnector__Container_pathAssignment_1_0_2"
    // InternalDockerCompose.g:11051:1: rule__VolumeConnector__Container_pathAssignment_1_0_2 : ( rulePATH ) ;
    public final void rule__VolumeConnector__Container_pathAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11055:1: ( ( rulePATH ) )
            // InternalDockerCompose.g:11056:2: ( rulePATH )
            {
            // InternalDockerCompose.g:11056:2: ( rulePATH )
            // InternalDockerCompose.g:11057:3: rulePATH
            {
             before(grammarAccess.getVolumeConnectorAccess().getContainer_pathPATHParserRuleCall_1_0_2_0()); 
            pushFollow(FOLLOW_2);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getVolumeConnectorAccess().getContainer_pathPATHParserRuleCall_1_0_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Container_pathAssignment_1_0_2"


    // $ANTLR start "rule__VolumeConnector__Access_modeAssignment_1_0_3_1"
    // InternalDockerCompose.g:11066:1: rule__VolumeConnector__Access_modeAssignment_1_0_3_1 : ( ruleAccessMode ) ;
    public final void rule__VolumeConnector__Access_modeAssignment_1_0_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11070:1: ( ( ruleAccessMode ) )
            // InternalDockerCompose.g:11071:2: ( ruleAccessMode )
            {
            // InternalDockerCompose.g:11071:2: ( ruleAccessMode )
            // InternalDockerCompose.g:11072:3: ruleAccessMode
            {
             before(grammarAccess.getVolumeConnectorAccess().getAccess_modeAccessModeEnumRuleCall_1_0_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleAccessMode();

            state._fsp--;

             after(grammarAccess.getVolumeConnectorAccess().getAccess_modeAccessModeEnumRuleCall_1_0_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Access_modeAssignment_1_0_3_1"


    // $ANTLR start "rule__VolumeConnector__VolumeAssignment_1_1_0_1"
    // InternalDockerCompose.g:11081:1: rule__VolumeConnector__VolumeAssignment_1_1_0_1 : ( ( ruleEString ) ) ;
    public final void rule__VolumeConnector__VolumeAssignment_1_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11085:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:11086:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:11086:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:11087:3: ( ruleEString )
            {
             before(grammarAccess.getVolumeConnectorAccess().getVolumeVolumeCrossReference_1_1_0_1_0()); 
            // InternalDockerCompose.g:11088:3: ( ruleEString )
            // InternalDockerCompose.g:11089:4: ruleEString
            {
             before(grammarAccess.getVolumeConnectorAccess().getVolumeVolumeEStringParserRuleCall_1_1_0_1_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeConnectorAccess().getVolumeVolumeEStringParserRuleCall_1_1_0_1_0_1()); 

            }

             after(grammarAccess.getVolumeConnectorAccess().getVolumeVolumeCrossReference_1_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__VolumeAssignment_1_1_0_1"


    // $ANTLR start "rule__VolumeConnector__TypeAssignment_1_1_1_1"
    // InternalDockerCompose.g:11100:1: rule__VolumeConnector__TypeAssignment_1_1_1_1 : ( ruleMountType ) ;
    public final void rule__VolumeConnector__TypeAssignment_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11104:1: ( ( ruleMountType ) )
            // InternalDockerCompose.g:11105:2: ( ruleMountType )
            {
            // InternalDockerCompose.g:11105:2: ( ruleMountType )
            // InternalDockerCompose.g:11106:3: ruleMountType
            {
             before(grammarAccess.getVolumeConnectorAccess().getTypeMountTypeEnumRuleCall_1_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleMountType();

            state._fsp--;

             after(grammarAccess.getVolumeConnectorAccess().getTypeMountTypeEnumRuleCall_1_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__TypeAssignment_1_1_1_1"


    // $ANTLR start "rule__VolumeConnector__Container_pathAssignment_1_1_2_1"
    // InternalDockerCompose.g:11115:1: rule__VolumeConnector__Container_pathAssignment_1_1_2_1 : ( rulePATH ) ;
    public final void rule__VolumeConnector__Container_pathAssignment_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11119:1: ( ( rulePATH ) )
            // InternalDockerCompose.g:11120:2: ( rulePATH )
            {
            // InternalDockerCompose.g:11120:2: ( rulePATH )
            // InternalDockerCompose.g:11121:3: rulePATH
            {
             before(grammarAccess.getVolumeConnectorAccess().getContainer_pathPATHParserRuleCall_1_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getVolumeConnectorAccess().getContainer_pathPATHParserRuleCall_1_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Container_pathAssignment_1_1_2_1"


    // $ANTLR start "rule__VolumeConnector__Read_onlyAssignment_1_1_3_1"
    // InternalDockerCompose.g:11130:1: rule__VolumeConnector__Read_onlyAssignment_1_1_3_1 : ( ruleEBoolean ) ;
    public final void rule__VolumeConnector__Read_onlyAssignment_1_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11134:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:11135:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:11135:2: ( ruleEBoolean )
            // InternalDockerCompose.g:11136:3: ruleEBoolean
            {
             before(grammarAccess.getVolumeConnectorAccess().getRead_onlyEBooleanParserRuleCall_1_1_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getVolumeConnectorAccess().getRead_onlyEBooleanParserRuleCall_1_1_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Read_onlyAssignment_1_1_3_1"


    // $ANTLR start "rule__VolumeConnector__PropagationAssignment_1_1_4_2"
    // InternalDockerCompose.g:11145:1: rule__VolumeConnector__PropagationAssignment_1_1_4_2 : ( rulePropagationType ) ;
    public final void rule__VolumeConnector__PropagationAssignment_1_1_4_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11149:1: ( ( rulePropagationType ) )
            // InternalDockerCompose.g:11150:2: ( rulePropagationType )
            {
            // InternalDockerCompose.g:11150:2: ( rulePropagationType )
            // InternalDockerCompose.g:11151:3: rulePropagationType
            {
             before(grammarAccess.getVolumeConnectorAccess().getPropagationPropagationTypeEnumRuleCall_1_1_4_2_0()); 
            pushFollow(FOLLOW_2);
            rulePropagationType();

            state._fsp--;

             after(grammarAccess.getVolumeConnectorAccess().getPropagationPropagationTypeEnumRuleCall_1_1_4_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__PropagationAssignment_1_1_4_2"


    // $ANTLR start "rule__VolumeConnector__NocopyAssignment_1_1_5_2"
    // InternalDockerCompose.g:11160:1: rule__VolumeConnector__NocopyAssignment_1_1_5_2 : ( ruleEBoolean ) ;
    public final void rule__VolumeConnector__NocopyAssignment_1_1_5_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11164:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:11165:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:11165:2: ( ruleEBoolean )
            // InternalDockerCompose.g:11166:3: ruleEBoolean
            {
             before(grammarAccess.getVolumeConnectorAccess().getNocopyEBooleanParserRuleCall_1_1_5_2_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getVolumeConnectorAccess().getNocopyEBooleanParserRuleCall_1_1_5_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__NocopyAssignment_1_1_5_2"


    // $ANTLR start "rule__VolumeConnector__SizeAssignment_1_1_6_2"
    // InternalDockerCompose.g:11175:1: rule__VolumeConnector__SizeAssignment_1_1_6_2 : ( ruleEInt ) ;
    public final void rule__VolumeConnector__SizeAssignment_1_1_6_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11179:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:11180:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:11180:2: ( ruleEInt )
            // InternalDockerCompose.g:11181:3: ruleEInt
            {
             before(grammarAccess.getVolumeConnectorAccess().getSizeEIntParserRuleCall_1_1_6_2_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getVolumeConnectorAccess().getSizeEIntParserRuleCall_1_1_6_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__SizeAssignment_1_1_6_2"


    // $ANTLR start "rule__ConfigConnector__ConfigAssignment_1_0"
    // InternalDockerCompose.g:11190:1: rule__ConfigConnector__ConfigAssignment_1_0 : ( ( ruleEString ) ) ;
    public final void rule__ConfigConnector__ConfigAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11194:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:11195:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:11195:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:11196:3: ( ruleEString )
            {
             before(grammarAccess.getConfigConnectorAccess().getConfigConfigCrossReference_1_0_0()); 
            // InternalDockerCompose.g:11197:3: ( ruleEString )
            // InternalDockerCompose.g:11198:4: ruleEString
            {
             before(grammarAccess.getConfigConnectorAccess().getConfigConfigEStringParserRuleCall_1_0_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getConfigConnectorAccess().getConfigConfigEStringParserRuleCall_1_0_0_1()); 

            }

             after(grammarAccess.getConfigConnectorAccess().getConfigConfigCrossReference_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__ConfigAssignment_1_0"


    // $ANTLR start "rule__ConfigConnector__ConfigAssignment_1_1_0_1"
    // InternalDockerCompose.g:11209:1: rule__ConfigConnector__ConfigAssignment_1_1_0_1 : ( ( ruleEString ) ) ;
    public final void rule__ConfigConnector__ConfigAssignment_1_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11213:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:11214:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:11214:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:11215:3: ( ruleEString )
            {
             before(grammarAccess.getConfigConnectorAccess().getConfigConfigCrossReference_1_1_0_1_0()); 
            // InternalDockerCompose.g:11216:3: ( ruleEString )
            // InternalDockerCompose.g:11217:4: ruleEString
            {
             before(grammarAccess.getConfigConnectorAccess().getConfigConfigEStringParserRuleCall_1_1_0_1_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getConfigConnectorAccess().getConfigConfigEStringParserRuleCall_1_1_0_1_0_1()); 

            }

             after(grammarAccess.getConfigConnectorAccess().getConfigConfigCrossReference_1_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__ConfigAssignment_1_1_0_1"


    // $ANTLR start "rule__ConfigConnector__TargetAssignment_1_1_1_1"
    // InternalDockerCompose.g:11228:1: rule__ConfigConnector__TargetAssignment_1_1_1_1 : ( rulePATH ) ;
    public final void rule__ConfigConnector__TargetAssignment_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11232:1: ( ( rulePATH ) )
            // InternalDockerCompose.g:11233:2: ( rulePATH )
            {
            // InternalDockerCompose.g:11233:2: ( rulePATH )
            // InternalDockerCompose.g:11234:3: rulePATH
            {
             before(grammarAccess.getConfigConnectorAccess().getTargetPATHParserRuleCall_1_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getConfigConnectorAccess().getTargetPATHParserRuleCall_1_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__TargetAssignment_1_1_1_1"


    // $ANTLR start "rule__ConfigConnector__UidAssignment_1_1_2_1"
    // InternalDockerCompose.g:11243:1: rule__ConfigConnector__UidAssignment_1_1_2_1 : ( RULE_QUOTED_INT ) ;
    public final void rule__ConfigConnector__UidAssignment_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11247:1: ( ( RULE_QUOTED_INT ) )
            // InternalDockerCompose.g:11248:2: ( RULE_QUOTED_INT )
            {
            // InternalDockerCompose.g:11248:2: ( RULE_QUOTED_INT )
            // InternalDockerCompose.g:11249:3: RULE_QUOTED_INT
            {
             before(grammarAccess.getConfigConnectorAccess().getUidQUOTED_INTTerminalRuleCall_1_1_2_1_0()); 
            match(input,RULE_QUOTED_INT,FOLLOW_2); 
             after(grammarAccess.getConfigConnectorAccess().getUidQUOTED_INTTerminalRuleCall_1_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__UidAssignment_1_1_2_1"


    // $ANTLR start "rule__ConfigConnector__GidAssignment_1_1_3_1"
    // InternalDockerCompose.g:11258:1: rule__ConfigConnector__GidAssignment_1_1_3_1 : ( RULE_QUOTED_INT ) ;
    public final void rule__ConfigConnector__GidAssignment_1_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11262:1: ( ( RULE_QUOTED_INT ) )
            // InternalDockerCompose.g:11263:2: ( RULE_QUOTED_INT )
            {
            // InternalDockerCompose.g:11263:2: ( RULE_QUOTED_INT )
            // InternalDockerCompose.g:11264:3: RULE_QUOTED_INT
            {
             before(grammarAccess.getConfigConnectorAccess().getGidQUOTED_INTTerminalRuleCall_1_1_3_1_0()); 
            match(input,RULE_QUOTED_INT,FOLLOW_2); 
             after(grammarAccess.getConfigConnectorAccess().getGidQUOTED_INTTerminalRuleCall_1_1_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__GidAssignment_1_1_3_1"


    // $ANTLR start "rule__ConfigConnector__ModeAssignment_1_1_4_1"
    // InternalDockerCompose.g:11273:1: rule__ConfigConnector__ModeAssignment_1_1_4_1 : ( ruleEInt ) ;
    public final void rule__ConfigConnector__ModeAssignment_1_1_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11277:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:11278:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:11278:2: ( ruleEInt )
            // InternalDockerCompose.g:11279:3: ruleEInt
            {
             before(grammarAccess.getConfigConnectorAccess().getModeEIntParserRuleCall_1_1_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getConfigConnectorAccess().getModeEIntParserRuleCall_1_1_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__ModeAssignment_1_1_4_1"


    // $ANTLR start "rule__SecretConnector__SecretAssignment_1_0"
    // InternalDockerCompose.g:11288:1: rule__SecretConnector__SecretAssignment_1_0 : ( ( ruleEString ) ) ;
    public final void rule__SecretConnector__SecretAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11292:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:11293:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:11293:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:11294:3: ( ruleEString )
            {
             before(grammarAccess.getSecretConnectorAccess().getSecretSecretCrossReference_1_0_0()); 
            // InternalDockerCompose.g:11295:3: ( ruleEString )
            // InternalDockerCompose.g:11296:4: ruleEString
            {
             before(grammarAccess.getSecretConnectorAccess().getSecretSecretEStringParserRuleCall_1_0_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getSecretConnectorAccess().getSecretSecretEStringParserRuleCall_1_0_0_1()); 

            }

             after(grammarAccess.getSecretConnectorAccess().getSecretSecretCrossReference_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__SecretAssignment_1_0"


    // $ANTLR start "rule__SecretConnector__SecretAssignment_1_1_0_1"
    // InternalDockerCompose.g:11307:1: rule__SecretConnector__SecretAssignment_1_1_0_1 : ( ( ruleEString ) ) ;
    public final void rule__SecretConnector__SecretAssignment_1_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11311:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:11312:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:11312:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:11313:3: ( ruleEString )
            {
             before(grammarAccess.getSecretConnectorAccess().getSecretSecretCrossReference_1_1_0_1_0()); 
            // InternalDockerCompose.g:11314:3: ( ruleEString )
            // InternalDockerCompose.g:11315:4: ruleEString
            {
             before(grammarAccess.getSecretConnectorAccess().getSecretSecretEStringParserRuleCall_1_1_0_1_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getSecretConnectorAccess().getSecretSecretEStringParserRuleCall_1_1_0_1_0_1()); 

            }

             after(grammarAccess.getSecretConnectorAccess().getSecretSecretCrossReference_1_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__SecretAssignment_1_1_0_1"


    // $ANTLR start "rule__SecretConnector__TargetAssignment_1_1_1_1"
    // InternalDockerCompose.g:11326:1: rule__SecretConnector__TargetAssignment_1_1_1_1 : ( rulePATH ) ;
    public final void rule__SecretConnector__TargetAssignment_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11330:1: ( ( rulePATH ) )
            // InternalDockerCompose.g:11331:2: ( rulePATH )
            {
            // InternalDockerCompose.g:11331:2: ( rulePATH )
            // InternalDockerCompose.g:11332:3: rulePATH
            {
             before(grammarAccess.getSecretConnectorAccess().getTargetPATHParserRuleCall_1_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getSecretConnectorAccess().getTargetPATHParserRuleCall_1_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__TargetAssignment_1_1_1_1"


    // $ANTLR start "rule__SecretConnector__UidAssignment_1_1_2_1"
    // InternalDockerCompose.g:11341:1: rule__SecretConnector__UidAssignment_1_1_2_1 : ( RULE_QUOTED_INT ) ;
    public final void rule__SecretConnector__UidAssignment_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11345:1: ( ( RULE_QUOTED_INT ) )
            // InternalDockerCompose.g:11346:2: ( RULE_QUOTED_INT )
            {
            // InternalDockerCompose.g:11346:2: ( RULE_QUOTED_INT )
            // InternalDockerCompose.g:11347:3: RULE_QUOTED_INT
            {
             before(grammarAccess.getSecretConnectorAccess().getUidQUOTED_INTTerminalRuleCall_1_1_2_1_0()); 
            match(input,RULE_QUOTED_INT,FOLLOW_2); 
             after(grammarAccess.getSecretConnectorAccess().getUidQUOTED_INTTerminalRuleCall_1_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__UidAssignment_1_1_2_1"


    // $ANTLR start "rule__SecretConnector__GidAssignment_1_1_3_1"
    // InternalDockerCompose.g:11356:1: rule__SecretConnector__GidAssignment_1_1_3_1 : ( RULE_QUOTED_INT ) ;
    public final void rule__SecretConnector__GidAssignment_1_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11360:1: ( ( RULE_QUOTED_INT ) )
            // InternalDockerCompose.g:11361:2: ( RULE_QUOTED_INT )
            {
            // InternalDockerCompose.g:11361:2: ( RULE_QUOTED_INT )
            // InternalDockerCompose.g:11362:3: RULE_QUOTED_INT
            {
             before(grammarAccess.getSecretConnectorAccess().getGidQUOTED_INTTerminalRuleCall_1_1_3_1_0()); 
            match(input,RULE_QUOTED_INT,FOLLOW_2); 
             after(grammarAccess.getSecretConnectorAccess().getGidQUOTED_INTTerminalRuleCall_1_1_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__GidAssignment_1_1_3_1"


    // $ANTLR start "rule__SecretConnector__ModeAssignment_1_1_4_1"
    // InternalDockerCompose.g:11371:1: rule__SecretConnector__ModeAssignment_1_1_4_1 : ( ruleEInt ) ;
    public final void rule__SecretConnector__ModeAssignment_1_1_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11375:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:11376:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:11376:2: ( ruleEInt )
            // InternalDockerCompose.g:11377:3: ruleEInt
            {
             before(grammarAccess.getSecretConnectorAccess().getModeEIntParserRuleCall_1_1_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getSecretConnectorAccess().getModeEIntParserRuleCall_1_1_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__ModeAssignment_1_1_4_1"


    // $ANTLR start "rule__Network__NameAssignment_1"
    // InternalDockerCompose.g:11386:1: rule__Network__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__Network__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11390:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:11391:2: ( ruleEString )
            {
            // InternalDockerCompose.g:11391:2: ( ruleEString )
            // InternalDockerCompose.g:11392:3: ruleEString
            {
             before(grammarAccess.getNetworkAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__NameAssignment_1"


    // $ANTLR start "rule__Network__DriverAssignment_3_1_0_1"
    // InternalDockerCompose.g:11401:1: rule__Network__DriverAssignment_3_1_0_1 : ( ruleEString ) ;
    public final void rule__Network__DriverAssignment_3_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11405:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:11406:2: ( ruleEString )
            {
            // InternalDockerCompose.g:11406:2: ( ruleEString )
            // InternalDockerCompose.g:11407:3: ruleEString
            {
             before(grammarAccess.getNetworkAccess().getDriverEStringParserRuleCall_3_1_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getDriverEStringParserRuleCall_3_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__DriverAssignment_3_1_0_1"


    // $ANTLR start "rule__Network__AttachableAssignment_3_1_1_1"
    // InternalDockerCompose.g:11416:1: rule__Network__AttachableAssignment_3_1_1_1 : ( ruleEBoolean ) ;
    public final void rule__Network__AttachableAssignment_3_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11420:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:11421:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:11421:2: ( ruleEBoolean )
            // InternalDockerCompose.g:11422:3: ruleEBoolean
            {
             before(grammarAccess.getNetworkAccess().getAttachableEBooleanParserRuleCall_3_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getAttachableEBooleanParserRuleCall_3_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__AttachableAssignment_3_1_1_1"


    // $ANTLR start "rule__Network__Enable_ipv6Assignment_3_1_2_1"
    // InternalDockerCompose.g:11431:1: rule__Network__Enable_ipv6Assignment_3_1_2_1 : ( ruleEBoolean ) ;
    public final void rule__Network__Enable_ipv6Assignment_3_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11435:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:11436:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:11436:2: ( ruleEBoolean )
            // InternalDockerCompose.g:11437:3: ruleEBoolean
            {
             before(grammarAccess.getNetworkAccess().getEnable_ipv6EBooleanParserRuleCall_3_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getEnable_ipv6EBooleanParserRuleCall_3_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Enable_ipv6Assignment_3_1_2_1"


    // $ANTLR start "rule__Network__InternalAssignment_3_1_3_1"
    // InternalDockerCompose.g:11446:1: rule__Network__InternalAssignment_3_1_3_1 : ( ruleEBoolean ) ;
    public final void rule__Network__InternalAssignment_3_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11450:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:11451:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:11451:2: ( ruleEBoolean )
            // InternalDockerCompose.g:11452:3: ruleEBoolean
            {
             before(grammarAccess.getNetworkAccess().getInternalEBooleanParserRuleCall_3_1_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getInternalEBooleanParserRuleCall_3_1_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__InternalAssignment_3_1_3_1"


    // $ANTLR start "rule__Network__ExternalAssignment_3_1_4_1"
    // InternalDockerCompose.g:11461:1: rule__Network__ExternalAssignment_3_1_4_1 : ( ruleEBoolean ) ;
    public final void rule__Network__ExternalAssignment_3_1_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11465:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:11466:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:11466:2: ( ruleEBoolean )
            // InternalDockerCompose.g:11467:3: ruleEBoolean
            {
             before(grammarAccess.getNetworkAccess().getExternalEBooleanParserRuleCall_3_1_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getExternalEBooleanParserRuleCall_3_1_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__ExternalAssignment_3_1_4_1"


    // $ANTLR start "rule__Network__Network_nameAssignment_3_1_5_1"
    // InternalDockerCompose.g:11476:1: rule__Network__Network_nameAssignment_3_1_5_1 : ( ruleEString ) ;
    public final void rule__Network__Network_nameAssignment_3_1_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11480:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:11481:2: ( ruleEString )
            {
            // InternalDockerCompose.g:11481:2: ( ruleEString )
            // InternalDockerCompose.g:11482:3: ruleEString
            {
             before(grammarAccess.getNetworkAccess().getNetwork_nameEStringParserRuleCall_3_1_5_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getNetwork_nameEStringParserRuleCall_3_1_5_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Network_nameAssignment_3_1_5_1"


    // $ANTLR start "rule__Network__LabelsAssignment_3_1_6_1"
    // InternalDockerCompose.g:11491:1: rule__Network__LabelsAssignment_3_1_6_1 : ( ruleNetworkLabel ) ;
    public final void rule__Network__LabelsAssignment_3_1_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11495:1: ( ( ruleNetworkLabel ) )
            // InternalDockerCompose.g:11496:2: ( ruleNetworkLabel )
            {
            // InternalDockerCompose.g:11496:2: ( ruleNetworkLabel )
            // InternalDockerCompose.g:11497:3: ruleNetworkLabel
            {
             before(grammarAccess.getNetworkAccess().getLabelsNetworkLabelParserRuleCall_3_1_6_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNetworkLabel();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getLabelsNetworkLabelParserRuleCall_3_1_6_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__LabelsAssignment_3_1_6_1"


    // $ANTLR start "rule__Network__Driver_optsAssignment_3_1_7_1"
    // InternalDockerCompose.g:11506:1: rule__Network__Driver_optsAssignment_3_1_7_1 : ( ruleNetworkDriverOpt ) ;
    public final void rule__Network__Driver_optsAssignment_3_1_7_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11510:1: ( ( ruleNetworkDriverOpt ) )
            // InternalDockerCompose.g:11511:2: ( ruleNetworkDriverOpt )
            {
            // InternalDockerCompose.g:11511:2: ( ruleNetworkDriverOpt )
            // InternalDockerCompose.g:11512:3: ruleNetworkDriverOpt
            {
             before(grammarAccess.getNetworkAccess().getDriver_optsNetworkDriverOptParserRuleCall_3_1_7_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNetworkDriverOpt();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getDriver_optsNetworkDriverOptParserRuleCall_3_1_7_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Driver_optsAssignment_3_1_7_1"


    // $ANTLR start "rule__Network__IpamAssignment_3_1_8_1"
    // InternalDockerCompose.g:11521:1: rule__Network__IpamAssignment_3_1_8_1 : ( ruleIPAM ) ;
    public final void rule__Network__IpamAssignment_3_1_8_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11525:1: ( ( ruleIPAM ) )
            // InternalDockerCompose.g:11526:2: ( ruleIPAM )
            {
            // InternalDockerCompose.g:11526:2: ( ruleIPAM )
            // InternalDockerCompose.g:11527:3: ruleIPAM
            {
             before(grammarAccess.getNetworkAccess().getIpamIPAMParserRuleCall_3_1_8_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIPAM();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getIpamIPAMParserRuleCall_3_1_8_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__IpamAssignment_3_1_8_1"


    // $ANTLR start "rule__Volume__NameAssignment_1"
    // InternalDockerCompose.g:11536:1: rule__Volume__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__Volume__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11540:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:11541:2: ( ruleEString )
            {
            // InternalDockerCompose.g:11541:2: ( ruleEString )
            // InternalDockerCompose.g:11542:3: ruleEString
            {
             before(grammarAccess.getVolumeAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__NameAssignment_1"


    // $ANTLR start "rule__Volume__ExternalAssignment_3_0_1"
    // InternalDockerCompose.g:11551:1: rule__Volume__ExternalAssignment_3_0_1 : ( ruleEBoolean ) ;
    public final void rule__Volume__ExternalAssignment_3_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11555:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:11556:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:11556:2: ( ruleEBoolean )
            // InternalDockerCompose.g:11557:3: ruleEBoolean
            {
             before(grammarAccess.getVolumeAccess().getExternalEBooleanParserRuleCall_3_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getVolumeAccess().getExternalEBooleanParserRuleCall_3_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__ExternalAssignment_3_0_1"


    // $ANTLR start "rule__Volume__DriverAssignment_3_1_1"
    // InternalDockerCompose.g:11566:1: rule__Volume__DriverAssignment_3_1_1 : ( ruleEString ) ;
    public final void rule__Volume__DriverAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11570:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:11571:2: ( ruleEString )
            {
            // InternalDockerCompose.g:11571:2: ( ruleEString )
            // InternalDockerCompose.g:11572:3: ruleEString
            {
             before(grammarAccess.getVolumeAccess().getDriverEStringParserRuleCall_3_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeAccess().getDriverEStringParserRuleCall_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__DriverAssignment_3_1_1"


    // $ANTLR start "rule__Volume__Volume_nameAssignment_3_2_1"
    // InternalDockerCompose.g:11581:1: rule__Volume__Volume_nameAssignment_3_2_1 : ( ruleEString ) ;
    public final void rule__Volume__Volume_nameAssignment_3_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11585:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:11586:2: ( ruleEString )
            {
            // InternalDockerCompose.g:11586:2: ( ruleEString )
            // InternalDockerCompose.g:11587:3: ruleEString
            {
             before(grammarAccess.getVolumeAccess().getVolume_nameEStringParserRuleCall_3_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeAccess().getVolume_nameEStringParserRuleCall_3_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Volume_nameAssignment_3_2_1"


    // $ANTLR start "rule__Volume__LabelsAssignment_3_3_1"
    // InternalDockerCompose.g:11596:1: rule__Volume__LabelsAssignment_3_3_1 : ( ruleVolumeLabel ) ;
    public final void rule__Volume__LabelsAssignment_3_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11600:1: ( ( ruleVolumeLabel ) )
            // InternalDockerCompose.g:11601:2: ( ruleVolumeLabel )
            {
            // InternalDockerCompose.g:11601:2: ( ruleVolumeLabel )
            // InternalDockerCompose.g:11602:3: ruleVolumeLabel
            {
             before(grammarAccess.getVolumeAccess().getLabelsVolumeLabelParserRuleCall_3_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleVolumeLabel();

            state._fsp--;

             after(grammarAccess.getVolumeAccess().getLabelsVolumeLabelParserRuleCall_3_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__LabelsAssignment_3_3_1"


    // $ANTLR start "rule__Volume__Driver_optsAssignment_3_4_1"
    // InternalDockerCompose.g:11611:1: rule__Volume__Driver_optsAssignment_3_4_1 : ( ruleVolumeDriverOpt ) ;
    public final void rule__Volume__Driver_optsAssignment_3_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11615:1: ( ( ruleVolumeDriverOpt ) )
            // InternalDockerCompose.g:11616:2: ( ruleVolumeDriverOpt )
            {
            // InternalDockerCompose.g:11616:2: ( ruleVolumeDriverOpt )
            // InternalDockerCompose.g:11617:3: ruleVolumeDriverOpt
            {
             before(grammarAccess.getVolumeAccess().getDriver_optsVolumeDriverOptParserRuleCall_3_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleVolumeDriverOpt();

            state._fsp--;

             after(grammarAccess.getVolumeAccess().getDriver_optsVolumeDriverOptParserRuleCall_3_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Driver_optsAssignment_3_4_1"


    // $ANTLR start "rule__Config__NameAssignment_1"
    // InternalDockerCompose.g:11626:1: rule__Config__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__Config__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11630:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:11631:2: ( ruleEString )
            {
            // InternalDockerCompose.g:11631:2: ( ruleEString )
            // InternalDockerCompose.g:11632:3: ruleEString
            {
             before(grammarAccess.getConfigAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getConfigAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__NameAssignment_1"


    // $ANTLR start "rule__Config__ExternalAssignment_3_0_1"
    // InternalDockerCompose.g:11641:1: rule__Config__ExternalAssignment_3_0_1 : ( ruleEBoolean ) ;
    public final void rule__Config__ExternalAssignment_3_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11645:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:11646:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:11646:2: ( ruleEBoolean )
            // InternalDockerCompose.g:11647:3: ruleEBoolean
            {
             before(grammarAccess.getConfigAccess().getExternalEBooleanParserRuleCall_3_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getConfigAccess().getExternalEBooleanParserRuleCall_3_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__ExternalAssignment_3_0_1"


    // $ANTLR start "rule__Config__FileAssignment_3_1_1"
    // InternalDockerCompose.g:11656:1: rule__Config__FileAssignment_3_1_1 : ( ruleEString ) ;
    public final void rule__Config__FileAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11660:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:11661:2: ( ruleEString )
            {
            // InternalDockerCompose.g:11661:2: ( ruleEString )
            // InternalDockerCompose.g:11662:3: ruleEString
            {
             before(grammarAccess.getConfigAccess().getFileEStringParserRuleCall_3_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getConfigAccess().getFileEStringParserRuleCall_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__FileAssignment_3_1_1"


    // $ANTLR start "rule__Config__Config_nameAssignment_3_2_1"
    // InternalDockerCompose.g:11671:1: rule__Config__Config_nameAssignment_3_2_1 : ( ruleEString ) ;
    public final void rule__Config__Config_nameAssignment_3_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11675:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:11676:2: ( ruleEString )
            {
            // InternalDockerCompose.g:11676:2: ( ruleEString )
            // InternalDockerCompose.g:11677:3: ruleEString
            {
             before(grammarAccess.getConfigAccess().getConfig_nameEStringParserRuleCall_3_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getConfigAccess().getConfig_nameEStringParserRuleCall_3_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Config_nameAssignment_3_2_1"


    // $ANTLR start "rule__Secret__NameAssignment_1"
    // InternalDockerCompose.g:11686:1: rule__Secret__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__Secret__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11690:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:11691:2: ( ruleEString )
            {
            // InternalDockerCompose.g:11691:2: ( ruleEString )
            // InternalDockerCompose.g:11692:3: ruleEString
            {
             before(grammarAccess.getSecretAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getSecretAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__NameAssignment_1"


    // $ANTLR start "rule__Secret__ExternalAssignment_3_0_1"
    // InternalDockerCompose.g:11701:1: rule__Secret__ExternalAssignment_3_0_1 : ( ruleEBoolean ) ;
    public final void rule__Secret__ExternalAssignment_3_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11705:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:11706:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:11706:2: ( ruleEBoolean )
            // InternalDockerCompose.g:11707:3: ruleEBoolean
            {
             before(grammarAccess.getSecretAccess().getExternalEBooleanParserRuleCall_3_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getSecretAccess().getExternalEBooleanParserRuleCall_3_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__ExternalAssignment_3_0_1"


    // $ANTLR start "rule__Secret__FileAssignment_3_1_1"
    // InternalDockerCompose.g:11716:1: rule__Secret__FileAssignment_3_1_1 : ( ruleEString ) ;
    public final void rule__Secret__FileAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11720:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:11721:2: ( ruleEString )
            {
            // InternalDockerCompose.g:11721:2: ( ruleEString )
            // InternalDockerCompose.g:11722:3: ruleEString
            {
             before(grammarAccess.getSecretAccess().getFileEStringParserRuleCall_3_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getSecretAccess().getFileEStringParserRuleCall_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__FileAssignment_3_1_1"


    // $ANTLR start "rule__Secret__EnvironmentAssignment_3_2_1"
    // InternalDockerCompose.g:11731:1: rule__Secret__EnvironmentAssignment_3_2_1 : ( ruleEString ) ;
    public final void rule__Secret__EnvironmentAssignment_3_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11735:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:11736:2: ( ruleEString )
            {
            // InternalDockerCompose.g:11736:2: ( ruleEString )
            // InternalDockerCompose.g:11737:3: ruleEString
            {
             before(grammarAccess.getSecretAccess().getEnvironmentEStringParserRuleCall_3_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getSecretAccess().getEnvironmentEStringParserRuleCall_3_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__EnvironmentAssignment_3_2_1"


    // $ANTLR start "rule__Secret__Secret_nameAssignment_3_3_1"
    // InternalDockerCompose.g:11746:1: rule__Secret__Secret_nameAssignment_3_3_1 : ( ruleEString ) ;
    public final void rule__Secret__Secret_nameAssignment_3_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11750:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:11751:2: ( ruleEString )
            {
            // InternalDockerCompose.g:11751:2: ( ruleEString )
            // InternalDockerCompose.g:11752:3: ruleEString
            {
             before(grammarAccess.getSecretAccess().getSecret_nameEStringParserRuleCall_3_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getSecretAccess().getSecret_nameEStringParserRuleCall_3_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Secret_nameAssignment_3_3_1"


    // $ANTLR start "rule__VolumeLabel__NameAssignment_1"
    // InternalDockerCompose.g:11761:1: rule__VolumeLabel__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__VolumeLabel__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11765:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:11766:2: ( ruleEString )
            {
            // InternalDockerCompose.g:11766:2: ( ruleEString )
            // InternalDockerCompose.g:11767:3: ruleEString
            {
             before(grammarAccess.getVolumeLabelAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeLabelAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__NameAssignment_1"


    // $ANTLR start "rule__VolumeLabel__ValueAssignment_3"
    // InternalDockerCompose.g:11776:1: rule__VolumeLabel__ValueAssignment_3 : ( ruleEString ) ;
    public final void rule__VolumeLabel__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11780:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:11781:2: ( ruleEString )
            {
            // InternalDockerCompose.g:11781:2: ( ruleEString )
            // InternalDockerCompose.g:11782:3: ruleEString
            {
             before(grammarAccess.getVolumeLabelAccess().getValueEStringParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeLabelAccess().getValueEStringParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__ValueAssignment_3"


    // $ANTLR start "rule__VolumeDriverOpt__NameAssignment_1"
    // InternalDockerCompose.g:11791:1: rule__VolumeDriverOpt__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__VolumeDriverOpt__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11795:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:11796:2: ( ruleEString )
            {
            // InternalDockerCompose.g:11796:2: ( ruleEString )
            // InternalDockerCompose.g:11797:3: ruleEString
            {
             before(grammarAccess.getVolumeDriverOptAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeDriverOptAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__NameAssignment_1"


    // $ANTLR start "rule__VolumeDriverOpt__ValueAssignment_3"
    // InternalDockerCompose.g:11806:1: rule__VolumeDriverOpt__ValueAssignment_3 : ( ruleEString ) ;
    public final void rule__VolumeDriverOpt__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11810:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:11811:2: ( ruleEString )
            {
            // InternalDockerCompose.g:11811:2: ( ruleEString )
            // InternalDockerCompose.g:11812:3: ruleEString
            {
             before(grammarAccess.getVolumeDriverOptAccess().getValueEStringParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeDriverOptAccess().getValueEStringParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__ValueAssignment_3"


    // $ANTLR start "rule__NetworkLabel__NameAssignment_1"
    // InternalDockerCompose.g:11821:1: rule__NetworkLabel__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__NetworkLabel__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11825:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:11826:2: ( ruleEString )
            {
            // InternalDockerCompose.g:11826:2: ( ruleEString )
            // InternalDockerCompose.g:11827:3: ruleEString
            {
             before(grammarAccess.getNetworkLabelAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkLabelAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__NameAssignment_1"


    // $ANTLR start "rule__NetworkLabel__ValueAssignment_3"
    // InternalDockerCompose.g:11836:1: rule__NetworkLabel__ValueAssignment_3 : ( ruleEString ) ;
    public final void rule__NetworkLabel__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11840:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:11841:2: ( ruleEString )
            {
            // InternalDockerCompose.g:11841:2: ( ruleEString )
            // InternalDockerCompose.g:11842:3: ruleEString
            {
             before(grammarAccess.getNetworkLabelAccess().getValueEStringParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkLabelAccess().getValueEStringParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__ValueAssignment_3"


    // $ANTLR start "rule__NetworkDriverOpt__NameAssignment_1"
    // InternalDockerCompose.g:11851:1: rule__NetworkDriverOpt__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__NetworkDriverOpt__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11855:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:11856:2: ( ruleEString )
            {
            // InternalDockerCompose.g:11856:2: ( ruleEString )
            // InternalDockerCompose.g:11857:3: ruleEString
            {
             before(grammarAccess.getNetworkDriverOptAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkDriverOptAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__NameAssignment_1"


    // $ANTLR start "rule__NetworkDriverOpt__ValueAssignment_3"
    // InternalDockerCompose.g:11866:1: rule__NetworkDriverOpt__ValueAssignment_3 : ( ruleEString ) ;
    public final void rule__NetworkDriverOpt__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11870:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:11871:2: ( ruleEString )
            {
            // InternalDockerCompose.g:11871:2: ( ruleEString )
            // InternalDockerCompose.g:11872:3: ruleEString
            {
             before(grammarAccess.getNetworkDriverOptAccess().getValueEStringParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkDriverOptAccess().getValueEStringParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__ValueAssignment_3"


    // $ANTLR start "rule__IPAM__DriverAssignment_1_0_1"
    // InternalDockerCompose.g:11881:1: rule__IPAM__DriverAssignment_1_0_1 : ( ruleEString ) ;
    public final void rule__IPAM__DriverAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11885:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:11886:2: ( ruleEString )
            {
            // InternalDockerCompose.g:11886:2: ( ruleEString )
            // InternalDockerCompose.g:11887:3: ruleEString
            {
             before(grammarAccess.getIPAMAccess().getDriverEStringParserRuleCall_1_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getIPAMAccess().getDriverEStringParserRuleCall_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__DriverAssignment_1_0_1"


    // $ANTLR start "rule__IPAM__ConfigsAssignment_1_1_1_1"
    // InternalDockerCompose.g:11896:1: rule__IPAM__ConfigsAssignment_1_1_1_1 : ( ruleIPAMConfig ) ;
    public final void rule__IPAM__ConfigsAssignment_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11900:1: ( ( ruleIPAMConfig ) )
            // InternalDockerCompose.g:11901:2: ( ruleIPAMConfig )
            {
            // InternalDockerCompose.g:11901:2: ( ruleIPAMConfig )
            // InternalDockerCompose.g:11902:3: ruleIPAMConfig
            {
             before(grammarAccess.getIPAMAccess().getConfigsIPAMConfigParserRuleCall_1_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIPAMConfig();

            state._fsp--;

             after(grammarAccess.getIPAMAccess().getConfigsIPAMConfigParserRuleCall_1_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__ConfigsAssignment_1_1_1_1"


    // $ANTLR start "rule__IPAM__OptionsAssignment_1_2_1"
    // InternalDockerCompose.g:11911:1: rule__IPAM__OptionsAssignment_1_2_1 : ( ruleIPAMOption ) ;
    public final void rule__IPAM__OptionsAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11915:1: ( ( ruleIPAMOption ) )
            // InternalDockerCompose.g:11916:2: ( ruleIPAMOption )
            {
            // InternalDockerCompose.g:11916:2: ( ruleIPAMOption )
            // InternalDockerCompose.g:11917:3: ruleIPAMOption
            {
             before(grammarAccess.getIPAMAccess().getOptionsIPAMOptionParserRuleCall_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIPAMOption();

            state._fsp--;

             after(grammarAccess.getIPAMAccess().getOptionsIPAMOptionParserRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__OptionsAssignment_1_2_1"


    // $ANTLR start "rule__IPAMConfig__SubnetAssignment_1_0_1"
    // InternalDockerCompose.g:11926:1: rule__IPAMConfig__SubnetAssignment_1_0_1 : ( ruleNetworkAddress ) ;
    public final void rule__IPAMConfig__SubnetAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11930:1: ( ( ruleNetworkAddress ) )
            // InternalDockerCompose.g:11931:2: ( ruleNetworkAddress )
            {
            // InternalDockerCompose.g:11931:2: ( ruleNetworkAddress )
            // InternalDockerCompose.g:11932:3: ruleNetworkAddress
            {
             before(grammarAccess.getIPAMConfigAccess().getSubnetNetworkAddressParserRuleCall_1_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNetworkAddress();

            state._fsp--;

             after(grammarAccess.getIPAMConfigAccess().getSubnetNetworkAddressParserRuleCall_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__SubnetAssignment_1_0_1"


    // $ANTLR start "rule__IPAMConfig__Ip_rangeAssignment_1_1_1"
    // InternalDockerCompose.g:11941:1: rule__IPAMConfig__Ip_rangeAssignment_1_1_1 : ( ruleNetworkAddress ) ;
    public final void rule__IPAMConfig__Ip_rangeAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11945:1: ( ( ruleNetworkAddress ) )
            // InternalDockerCompose.g:11946:2: ( ruleNetworkAddress )
            {
            // InternalDockerCompose.g:11946:2: ( ruleNetworkAddress )
            // InternalDockerCompose.g:11947:3: ruleNetworkAddress
            {
             before(grammarAccess.getIPAMConfigAccess().getIp_rangeNetworkAddressParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNetworkAddress();

            state._fsp--;

             after(grammarAccess.getIPAMConfigAccess().getIp_rangeNetworkAddressParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Ip_rangeAssignment_1_1_1"


    // $ANTLR start "rule__IPAMConfig__GatewayAssignment_1_2_1"
    // InternalDockerCompose.g:11956:1: rule__IPAMConfig__GatewayAssignment_1_2_1 : ( ruleDNS ) ;
    public final void rule__IPAMConfig__GatewayAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11960:1: ( ( ruleDNS ) )
            // InternalDockerCompose.g:11961:2: ( ruleDNS )
            {
            // InternalDockerCompose.g:11961:2: ( ruleDNS )
            // InternalDockerCompose.g:11962:3: ruleDNS
            {
             before(grammarAccess.getIPAMConfigAccess().getGatewayDNSParserRuleCall_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getIPAMConfigAccess().getGatewayDNSParserRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__GatewayAssignment_1_2_1"


    // $ANTLR start "rule__IPAMConfig__Aux_addressesAssignment_1_3_1"
    // InternalDockerCompose.g:11971:1: rule__IPAMConfig__Aux_addressesAssignment_1_3_1 : ( ruleIPAMAddress ) ;
    public final void rule__IPAMConfig__Aux_addressesAssignment_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11975:1: ( ( ruleIPAMAddress ) )
            // InternalDockerCompose.g:11976:2: ( ruleIPAMAddress )
            {
            // InternalDockerCompose.g:11976:2: ( ruleIPAMAddress )
            // InternalDockerCompose.g:11977:3: ruleIPAMAddress
            {
             before(grammarAccess.getIPAMConfigAccess().getAux_addressesIPAMAddressParserRuleCall_1_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIPAMAddress();

            state._fsp--;

             after(grammarAccess.getIPAMConfigAccess().getAux_addressesIPAMAddressParserRuleCall_1_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Aux_addressesAssignment_1_3_1"


    // $ANTLR start "rule__IPAMOption__NameAssignment_1"
    // InternalDockerCompose.g:11986:1: rule__IPAMOption__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__IPAMOption__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11990:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:11991:2: ( ruleEString )
            {
            // InternalDockerCompose.g:11991:2: ( ruleEString )
            // InternalDockerCompose.g:11992:3: ruleEString
            {
             before(grammarAccess.getIPAMOptionAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getIPAMOptionAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__NameAssignment_1"


    // $ANTLR start "rule__IPAMOption__ValueAssignment_3"
    // InternalDockerCompose.g:12001:1: rule__IPAMOption__ValueAssignment_3 : ( ruleEString ) ;
    public final void rule__IPAMOption__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12005:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12006:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12006:2: ( ruleEString )
            // InternalDockerCompose.g:12007:3: ruleEString
            {
             before(grammarAccess.getIPAMOptionAccess().getValueEStringParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getIPAMOptionAccess().getValueEStringParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__ValueAssignment_3"


    // $ANTLR start "rule__IPAMAddress__NameAssignment_1"
    // InternalDockerCompose.g:12016:1: rule__IPAMAddress__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__IPAMAddress__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12020:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12021:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12021:2: ( ruleEString )
            // InternalDockerCompose.g:12022:3: ruleEString
            {
             before(grammarAccess.getIPAMAddressAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getIPAMAddressAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__NameAssignment_1"


    // $ANTLR start "rule__IPAMAddress__DnsAssignment_3"
    // InternalDockerCompose.g:12031:1: rule__IPAMAddress__DnsAssignment_3 : ( ruleDNS ) ;
    public final void rule__IPAMAddress__DnsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12035:1: ( ( ruleDNS ) )
            // InternalDockerCompose.g:12036:2: ( ruleDNS )
            {
            // InternalDockerCompose.g:12036:2: ( ruleDNS )
            // InternalDockerCompose.g:12037:3: ruleDNS
            {
             before(grammarAccess.getIPAMAddressAccess().getDnsDNSParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getIPAMAddressAccess().getDnsDNSParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__DnsAssignment_3"


    // $ANTLR start "rule__DNS__Dns1Assignment_0"
    // InternalDockerCompose.g:12046:1: rule__DNS__Dns1Assignment_0 : ( ruleEInt ) ;
    public final void rule__DNS__Dns1Assignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12050:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:12051:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:12051:2: ( ruleEInt )
            // InternalDockerCompose.g:12052:3: ruleEInt
            {
             before(grammarAccess.getDNSAccess().getDns1EIntParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getDNSAccess().getDns1EIntParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Dns1Assignment_0"


    // $ANTLR start "rule__DNS__Dns2Assignment_2"
    // InternalDockerCompose.g:12061:1: rule__DNS__Dns2Assignment_2 : ( ruleEInt ) ;
    public final void rule__DNS__Dns2Assignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12065:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:12066:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:12066:2: ( ruleEInt )
            // InternalDockerCompose.g:12067:3: ruleEInt
            {
             before(grammarAccess.getDNSAccess().getDns2EIntParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getDNSAccess().getDns2EIntParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Dns2Assignment_2"


    // $ANTLR start "rule__DNS__Dns3Assignment_4"
    // InternalDockerCompose.g:12076:1: rule__DNS__Dns3Assignment_4 : ( ruleEInt ) ;
    public final void rule__DNS__Dns3Assignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12080:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:12081:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:12081:2: ( ruleEInt )
            // InternalDockerCompose.g:12082:3: ruleEInt
            {
             before(grammarAccess.getDNSAccess().getDns3EIntParserRuleCall_4_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getDNSAccess().getDns3EIntParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Dns3Assignment_4"


    // $ANTLR start "rule__DNS__Dns4Assignment_6"
    // InternalDockerCompose.g:12091:1: rule__DNS__Dns4Assignment_6 : ( ruleEInt ) ;
    public final void rule__DNS__Dns4Assignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12095:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:12096:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:12096:2: ( ruleEInt )
            // InternalDockerCompose.g:12097:3: ruleEInt
            {
             before(grammarAccess.getDNSAccess().getDns4EIntParserRuleCall_6_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getDNSAccess().getDns4EIntParserRuleCall_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Dns4Assignment_6"


    // $ANTLR start "rule__NetworkAddress__Dns1Assignment_0"
    // InternalDockerCompose.g:12106:1: rule__NetworkAddress__Dns1Assignment_0 : ( ruleEInt ) ;
    public final void rule__NetworkAddress__Dns1Assignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12110:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:12111:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:12111:2: ( ruleEInt )
            // InternalDockerCompose.g:12112:3: ruleEInt
            {
             before(grammarAccess.getNetworkAddressAccess().getDns1EIntParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getNetworkAddressAccess().getDns1EIntParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Dns1Assignment_0"


    // $ANTLR start "rule__NetworkAddress__Dns2Assignment_2"
    // InternalDockerCompose.g:12121:1: rule__NetworkAddress__Dns2Assignment_2 : ( ruleEInt ) ;
    public final void rule__NetworkAddress__Dns2Assignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12125:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:12126:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:12126:2: ( ruleEInt )
            // InternalDockerCompose.g:12127:3: ruleEInt
            {
             before(grammarAccess.getNetworkAddressAccess().getDns2EIntParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getNetworkAddressAccess().getDns2EIntParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Dns2Assignment_2"


    // $ANTLR start "rule__NetworkAddress__Dns3Assignment_4"
    // InternalDockerCompose.g:12136:1: rule__NetworkAddress__Dns3Assignment_4 : ( ruleEInt ) ;
    public final void rule__NetworkAddress__Dns3Assignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12140:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:12141:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:12141:2: ( ruleEInt )
            // InternalDockerCompose.g:12142:3: ruleEInt
            {
             before(grammarAccess.getNetworkAddressAccess().getDns3EIntParserRuleCall_4_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getNetworkAddressAccess().getDns3EIntParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Dns3Assignment_4"


    // $ANTLR start "rule__NetworkAddress__Dns4Assignment_6"
    // InternalDockerCompose.g:12151:1: rule__NetworkAddress__Dns4Assignment_6 : ( ruleEInt ) ;
    public final void rule__NetworkAddress__Dns4Assignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12155:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:12156:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:12156:2: ( ruleEInt )
            // InternalDockerCompose.g:12157:3: ruleEInt
            {
             before(grammarAccess.getNetworkAddressAccess().getDns4EIntParserRuleCall_6_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getNetworkAddressAccess().getDns4EIntParserRuleCall_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Dns4Assignment_6"


    // $ANTLR start "rule__NetworkAddress__NetIdAssignment_8"
    // InternalDockerCompose.g:12166:1: rule__NetworkAddress__NetIdAssignment_8 : ( ruleEInt ) ;
    public final void rule__NetworkAddress__NetIdAssignment_8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12170:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:12171:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:12171:2: ( ruleEInt )
            // InternalDockerCompose.g:12172:3: ruleEInt
            {
             before(grammarAccess.getNetworkAddressAccess().getNetIdEIntParserRuleCall_8_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getNetworkAddressAccess().getNetIdEIntParserRuleCall_8_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__NetIdAssignment_8"

    // Delegated rules


    protected DFA22 dfa22 = new DFA22(this);
    protected DFA48 dfa48 = new DFA48(this);
    protected DFA49 dfa49 = new DFA49(this);
    protected DFA50 dfa50 = new DFA50(this);
    protected DFA51 dfa51 = new DFA51(this);
    protected DFA52 dfa52 = new DFA52(this);
    protected DFA53 dfa53 = new DFA53(this);
    protected DFA54 dfa54 = new DFA54(this);
    protected DFA55 dfa55 = new DFA55(this);
    protected DFA56 dfa56 = new DFA56(this);
    protected DFA57 dfa57 = new DFA57(this);
    protected DFA58 dfa58 = new DFA58(this);
    protected DFA59 dfa59 = new DFA59(this);
    protected DFA60 dfa60 = new DFA60(this);
    protected DFA61 dfa61 = new DFA61(this);
    protected DFA62 dfa62 = new DFA62(this);
    protected DFA69 dfa69 = new DFA69(this);
    protected DFA70 dfa70 = new DFA70(this);
    protected DFA71 dfa71 = new DFA71(this);
    protected DFA72 dfa72 = new DFA72(this);
    protected DFA73 dfa73 = new DFA73(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA85 dfa85 = new DFA85(this);
    protected DFA86 dfa86 = new DFA86(this);
    protected DFA87 dfa87 = new DFA87(this);
    protected DFA88 dfa88 = new DFA88(this);
    protected DFA89 dfa89 = new DFA89(this);
    protected DFA90 dfa90 = new DFA90(this);
    protected DFA91 dfa91 = new DFA91(this);
    protected DFA92 dfa92 = new DFA92(this);
    protected DFA93 dfa93 = new DFA93(this);
    protected DFA94 dfa94 = new DFA94(this);
    static final String dfa_1s = "\172\uffff";
    static final String dfa_2s = "\1\1\4\uffff\1\6\164\uffff";
    static final String dfa_3s = "\1\5\1\uffff\2\50\1\uffff\1\5\1\uffff\1\5\1\4\2\5\1\21\2\17\1\62\4\5\1\62\1\4\1\62\17\uffff\2\5\2\50\3\5\1\10\1\4\1\131\1\11\5\uffff\2\50\1\5\1\30\1\uffff\1\17\1\76\1\100\1\102\2\uffff\1\5\1\uffff\2\12\1\4\2\uffff\1\5\1\uffff\2\12\1\4\1\uffff\1\131\1\4\12\uffff\1\34\1\17\1\4\12\uffff\1\4\1\131\11\uffff\1\131\2\4\2\131\2\4\2\uffff";
    static final String dfa_4s = "\1\65\1\uffff\2\50\1\uffff\1\71\1\uffff\1\6\1\4\2\6\1\24\2\20\10\62\17\uffff\2\6\2\50\1\101\2\105\1\10\1\4\1\131\1\11\5\uffff\2\50\1\6\1\33\1\uffff\1\20\1\76\1\100\1\102\2\uffff\1\6\1\uffff\2\12\1\4\2\uffff\1\6\1\uffff\2\12\1\4\1\uffff\1\131\1\4\12\uffff\1\41\1\20\1\4\12\uffff\1\4\1\131\11\uffff\1\131\2\4\2\131\2\4\2\uffff";
    static final String dfa_5s = "\1\uffff\1\2\2\uffff\1\1\1\uffff\1\1\17\uffff\17\1\13\uffff\5\1\4\uffff\1\1\4\uffff\2\1\1\uffff\1\1\3\uffff\2\1\1\uffff\1\1\3\uffff\1\1\2\uffff\12\1\3\uffff\12\1\2\uffff\11\1\7\uffff\2\1";
    static final String dfa_6s = "\172\uffff}>";
    static final String[] dfa_7s = {
            "\1\2\1\3\33\uffff\6\1\1\uffff\11\1\1\4\3\1",
            "",
            "\1\5",
            "\1\5",
            "",
            "\2\6\33\uffff\2\6\1\17\1\20\1\21\1\22\1\uffff\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\4\1\23\1\24\1\25\4\6",
            "",
            "\1\26\1\27",
            "\1\30",
            "\1\31\1\32",
            "\1\33\1\34",
            "\1\35\1\36\1\37\1\40",
            "\1\41\1\42",
            "\1\43\1\44",
            "\1\45",
            "\1\47\1\50\53\uffff\1\46",
            "\2\44\53\uffff\1\51",
            "\2\44\53\uffff\1\52",
            "\2\44\53\uffff\1\53",
            "\1\54",
            "\1\56\55\uffff\1\55",
            "\1\57",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\60\1\61",
            "\1\62\1\63",
            "\1\64",
            "\1\64",
            "\1\65\1\66\51\uffff\1\72\11\uffff\1\67\1\70\1\71\1\73\1\uffff\1\74\1\uffff\1\75",
            "\1\76\1\77\63\uffff\1\100\1\uffff\1\101\6\uffff\1\102\1\103\1\104",
            "\1\105\1\106\63\uffff\1\107\1\uffff\1\110\6\uffff\1\111\1\112\1\113",
            "\1\114",
            "\1\115",
            "\1\116",
            "\1\117",
            "",
            "",
            "",
            "",
            "",
            "\1\120",
            "\1\120",
            "\1\121\1\122",
            "\1\123\1\124\1\125\1\126",
            "",
            "\1\127\1\130",
            "\1\131",
            "\1\132",
            "\1\133",
            "",
            "",
            "\1\134\1\135",
            "",
            "\1\136",
            "\1\137",
            "\1\140",
            "",
            "",
            "\1\141\1\142",
            "",
            "\1\143",
            "\1\144",
            "\1\145",
            "",
            "\1\146",
            "\1\147",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\150\1\151\1\152\1\153\1\154\1\155",
            "\1\156\1\157",
            "\1\160",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\161",
            "\1\162",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\163",
            "\1\164",
            "\1\165",
            "\1\166",
            "\1\167",
            "\1\170",
            "\1\171",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA22 extends DFA {

        public DFA22(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 22;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "()* loopback of 2211:3: ( rule__Service__NetworksAssignment_3_8_1 )*";
        }
    }
    static final String dfa_8s = "\20\uffff";
    static final String dfa_9s = "\1\44\17\uffff";
    static final String dfa_10s = "\1\65\17\uffff";
    static final String dfa_11s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17";
    static final String dfa_12s = "\1\0\17\uffff}>";
    static final String[] dfa_13s = {
            "\1\11\1\12\1\13\1\14\1\uffff\2\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\15\1\16\1\17",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA48 extends DFA {

        public DFA48(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 48;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "8558:3: ( ({...}? => ( ( ( rule__Service__Alternatives_3_0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA48_0 = input.LA(1);

                         
                        int index48_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA48_0 >= 41 && LA48_0 <= 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA48_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA48_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA48_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA48_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA48_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA48_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA48_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA48_0 == 36 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( LA48_0 == 37 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 10;}

                        else if ( LA48_0 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 11;}

                        else if ( LA48_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 12;}

                        else if ( LA48_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA48_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA48_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                         
                        input.seek(index48_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 48, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_14s = "\30\uffff";
    static final String dfa_15s = "\1\20\27\uffff";
    static final String dfa_16s = "\1\5\10\uffff\4\5\5\uffff\2\50\3\uffff\1\0";
    static final String dfa_17s = "\1\65\10\uffff\4\62\5\uffff\2\50\3\uffff\1\0";
    static final String dfa_18s = "\1\uffff\10\1\4\uffff\3\1\1\2\1\1\2\uffff\3\1\1\uffff";
    static final String dfa_19s = "\1\2\10\uffff\1\0\1\1\1\4\1\3\12\uffff\1\5}>";
    static final String[] dfa_20s = {
            "\2\20\33\uffff\2\20\1\11\1\12\1\13\1\14\1\uffff\2\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\15\1\16\1\17",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\22\1\23\53\uffff\1\21",
            "\2\20\53\uffff\1\24",
            "\2\20\53\uffff\1\25",
            "\2\20\53\uffff\1\26",
            "",
            "",
            "",
            "",
            "",
            "\1\27",
            "\1\27",
            "",
            "",
            "",
            "\1\uffff"
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[][] dfa_20 = unpackEncodedStringArray(dfa_20s);

    class DFA49 extends DFA {

        public DFA49(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 49;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "8798:2: ( rule__Service__UnorderedGroup_3__1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA49_9 = input.LA(1);

                         
                        int index49_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA49_9 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 17;}

                        else if ( (LA49_9==RULE_STRING) ) {s = 18;}

                        else if ( (LA49_9==RULE_ID) ) {s = 19;}

                         
                        input.seek(index49_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA49_10 = input.LA(1);

                         
                        int index49_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA49_10 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                        else if ( ((LA49_10>=RULE_STRING && LA49_10<=RULE_ID)) ) {s = 16;}

                         
                        input.seek(index49_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA49_0 = input.LA(1);

                         
                        int index49_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA49_0 >= 41 && LA49_0 <= 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA49_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA49_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA49_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA49_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA49_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA49_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA49_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( (LA49_0==36) ) {s = 9;}

                        else if ( (LA49_0==37) ) {s = 10;}

                        else if ( (LA49_0==38) ) {s = 11;}

                        else if ( (LA49_0==39) ) {s = 12;}

                        else if ( LA49_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA49_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA49_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( (LA49_0==EOF||(LA49_0>=RULE_STRING && LA49_0<=RULE_ID)||(LA49_0>=34 && LA49_0<=35)) ) {s = 16;}

                         
                        input.seek(index49_0);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA49_12 = input.LA(1);

                         
                        int index49_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA49_12>=RULE_STRING && LA49_12<=RULE_ID)) ) {s = 16;}

                        else if ( LA49_12 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index49_12);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA49_11 = input.LA(1);

                         
                        int index49_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA49_11>=RULE_STRING && LA49_11<=RULE_ID)) ) {s = 16;}

                        else if ( LA49_11 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index49_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA49_23 = input.LA(1);

                         
                        int index49_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 22;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 16;}

                         
                        input.seek(index49_23);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 49, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_21s = "\1\5\10\uffff\4\5\4\uffff\2\50\4\uffff\1\0";
    static final String dfa_22s = "\1\65\10\uffff\4\62\4\uffff\2\50\4\uffff\1\0";
    static final String dfa_23s = "\1\uffff\10\1\4\uffff\3\1\1\2\2\uffff\4\1\1\uffff";
    static final String dfa_24s = "\1\2\10\uffff\1\0\1\1\1\5\1\4\12\uffff\1\3}>";
    static final String[] dfa_25s = {
            "\2\20\33\uffff\2\20\1\11\1\12\1\13\1\14\1\uffff\2\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\15\1\16\1\17",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\21\1\22\53\uffff\1\23",
            "\2\20\53\uffff\1\24",
            "\2\20\53\uffff\1\25",
            "\2\20\53\uffff\1\26",
            "",
            "",
            "",
            "",
            "\1\27",
            "\1\27",
            "",
            "",
            "",
            "",
            "\1\uffff"
    };
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[][] dfa_25 = unpackEncodedStringArray(dfa_25s);

    class DFA50 extends DFA {

        public DFA50(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 50;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "8810:2: ( rule__Service__UnorderedGroup_3__2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA50_9 = input.LA(1);

                         
                        int index50_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA50_9==RULE_STRING) ) {s = 17;}

                        else if ( (LA50_9==RULE_ID) ) {s = 18;}

                        else if ( LA50_9 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 19;}

                         
                        input.seek(index50_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA50_10 = input.LA(1);

                         
                        int index50_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA50_10>=RULE_STRING && LA50_10<=RULE_ID)) ) {s = 16;}

                        else if ( LA50_10 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index50_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA50_0 = input.LA(1);

                         
                        int index50_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA50_0 >= 41 && LA50_0 <= 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA50_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA50_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA50_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA50_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA50_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA50_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA50_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( (LA50_0==36) ) {s = 9;}

                        else if ( (LA50_0==37) ) {s = 10;}

                        else if ( (LA50_0==38) ) {s = 11;}

                        else if ( (LA50_0==39) ) {s = 12;}

                        else if ( LA50_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA50_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA50_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( (LA50_0==EOF||(LA50_0>=RULE_STRING && LA50_0<=RULE_ID)||(LA50_0>=34 && LA50_0<=35)) ) {s = 16;}

                         
                        input.seek(index50_0);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA50_23 = input.LA(1);

                         
                        int index50_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 22;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 16;}

                         
                        input.seek(index50_23);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA50_12 = input.LA(1);

                         
                        int index50_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA50_12>=RULE_STRING && LA50_12<=RULE_ID)) ) {s = 16;}

                        else if ( LA50_12 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index50_12);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA50_11 = input.LA(1);

                         
                        int index50_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA50_11 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                        else if ( ((LA50_11>=RULE_STRING && LA50_11<=RULE_ID)) ) {s = 16;}

                         
                        input.seek(index50_11);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 50, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_26s = "\1\1\10\uffff\1\0\1\2\1\5\1\3\12\uffff\1\4}>";
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);

    class DFA51 extends DFA {

        public DFA51(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 51;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_26;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "8822:2: ( rule__Service__UnorderedGroup_3__3 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA51_9 = input.LA(1);

                         
                        int index51_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA51_9==RULE_STRING) ) {s = 17;}

                        else if ( (LA51_9==RULE_ID) ) {s = 18;}

                        else if ( LA51_9 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 19;}

                         
                        input.seek(index51_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA51_0 = input.LA(1);

                         
                        int index51_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA51_0 >= 41 && LA51_0 <= 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA51_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA51_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA51_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA51_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA51_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA51_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA51_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( (LA51_0==36) ) {s = 9;}

                        else if ( (LA51_0==37) ) {s = 10;}

                        else if ( (LA51_0==38) ) {s = 11;}

                        else if ( (LA51_0==39) ) {s = 12;}

                        else if ( LA51_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA51_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA51_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( (LA51_0==EOF||(LA51_0>=RULE_STRING && LA51_0<=RULE_ID)||(LA51_0>=34 && LA51_0<=35)) ) {s = 16;}

                         
                        input.seek(index51_0);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA51_10 = input.LA(1);

                         
                        int index51_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA51_10>=RULE_STRING && LA51_10<=RULE_ID)) ) {s = 16;}

                        else if ( LA51_10 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index51_10);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA51_12 = input.LA(1);

                         
                        int index51_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA51_12 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                        else if ( ((LA51_12>=RULE_STRING && LA51_12<=RULE_ID)) ) {s = 16;}

                         
                        input.seek(index51_12);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA51_23 = input.LA(1);

                         
                        int index51_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 22;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 16;}

                         
                        input.seek(index51_23);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA51_11 = input.LA(1);

                         
                        int index51_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA51_11>=RULE_STRING && LA51_11<=RULE_ID)) ) {s = 16;}

                        else if ( LA51_11 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index51_11);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 51, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_27s = "\1\2\10\uffff\1\0\1\1\1\5\1\3\12\uffff\1\4}>";
    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);

    class DFA52 extends DFA {

        public DFA52(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 52;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_27;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "8834:2: ( rule__Service__UnorderedGroup_3__4 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA52_9 = input.LA(1);

                         
                        int index52_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA52_9==RULE_STRING) ) {s = 17;}

                        else if ( (LA52_9==RULE_ID) ) {s = 18;}

                        else if ( LA52_9 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 19;}

                         
                        input.seek(index52_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA52_10 = input.LA(1);

                         
                        int index52_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA52_10>=RULE_STRING && LA52_10<=RULE_ID)) ) {s = 16;}

                        else if ( LA52_10 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index52_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA52_0 = input.LA(1);

                         
                        int index52_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA52_0 >= 41 && LA52_0 <= 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA52_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA52_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA52_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA52_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA52_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA52_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA52_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( (LA52_0==36) ) {s = 9;}

                        else if ( (LA52_0==37) ) {s = 10;}

                        else if ( (LA52_0==38) ) {s = 11;}

                        else if ( (LA52_0==39) ) {s = 12;}

                        else if ( LA52_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA52_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA52_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( (LA52_0==EOF||(LA52_0>=RULE_STRING && LA52_0<=RULE_ID)||(LA52_0>=34 && LA52_0<=35)) ) {s = 16;}

                         
                        input.seek(index52_0);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA52_12 = input.LA(1);

                         
                        int index52_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA52_12>=RULE_STRING && LA52_12<=RULE_ID)) ) {s = 16;}

                        else if ( LA52_12 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index52_12);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA52_23 = input.LA(1);

                         
                        int index52_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 22;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 16;}

                         
                        input.seek(index52_23);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA52_11 = input.LA(1);

                         
                        int index52_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA52_11>=RULE_STRING && LA52_11<=RULE_ID)) ) {s = 16;}

                        else if ( LA52_11 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index52_11);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 52, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_28s = "\1\1\10\uffff\1\0\1\2\1\4\1\3\12\uffff\1\5}>";
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);

    class DFA53 extends DFA {

        public DFA53(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 53;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_28;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "8846:2: ( rule__Service__UnorderedGroup_3__5 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA53_9 = input.LA(1);

                         
                        int index53_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA53_9==RULE_STRING) ) {s = 17;}

                        else if ( (LA53_9==RULE_ID) ) {s = 18;}

                        else if ( LA53_9 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 19;}

                         
                        input.seek(index53_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA53_0 = input.LA(1);

                         
                        int index53_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA53_0 >= 41 && LA53_0 <= 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA53_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA53_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA53_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA53_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA53_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA53_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA53_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( (LA53_0==36) ) {s = 9;}

                        else if ( (LA53_0==37) ) {s = 10;}

                        else if ( (LA53_0==38) ) {s = 11;}

                        else if ( (LA53_0==39) ) {s = 12;}

                        else if ( LA53_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA53_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA53_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( (LA53_0==EOF||(LA53_0>=RULE_STRING && LA53_0<=RULE_ID)||(LA53_0>=34 && LA53_0<=35)) ) {s = 16;}

                         
                        input.seek(index53_0);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA53_10 = input.LA(1);

                         
                        int index53_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA53_10>=RULE_STRING && LA53_10<=RULE_ID)) ) {s = 16;}

                        else if ( LA53_10 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index53_10);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA53_12 = input.LA(1);

                         
                        int index53_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA53_12>=RULE_STRING && LA53_12<=RULE_ID)) ) {s = 16;}

                        else if ( LA53_12 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index53_12);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA53_11 = input.LA(1);

                         
                        int index53_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA53_11>=RULE_STRING && LA53_11<=RULE_ID)) ) {s = 16;}

                        else if ( LA53_11 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index53_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA53_23 = input.LA(1);

                         
                        int index53_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 22;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 16;}

                         
                        input.seek(index53_23);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 53, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA54 extends DFA {

        public DFA54(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 54;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_27;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "8858:2: ( rule__Service__UnorderedGroup_3__6 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA54_9 = input.LA(1);

                         
                        int index54_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA54_9==RULE_STRING) ) {s = 17;}

                        else if ( (LA54_9==RULE_ID) ) {s = 18;}

                        else if ( LA54_9 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 19;}

                         
                        input.seek(index54_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA54_10 = input.LA(1);

                         
                        int index54_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA54_10>=RULE_STRING && LA54_10<=RULE_ID)) ) {s = 16;}

                        else if ( LA54_10 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index54_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA54_0 = input.LA(1);

                         
                        int index54_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA54_0 >= 41 && LA54_0 <= 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA54_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA54_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA54_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA54_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA54_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA54_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA54_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( (LA54_0==36) ) {s = 9;}

                        else if ( (LA54_0==37) ) {s = 10;}

                        else if ( (LA54_0==38) ) {s = 11;}

                        else if ( (LA54_0==39) ) {s = 12;}

                        else if ( LA54_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA54_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA54_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( (LA54_0==EOF||(LA54_0>=RULE_STRING && LA54_0<=RULE_ID)||(LA54_0>=34 && LA54_0<=35)) ) {s = 16;}

                         
                        input.seek(index54_0);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA54_12 = input.LA(1);

                         
                        int index54_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA54_12>=RULE_STRING && LA54_12<=RULE_ID)) ) {s = 16;}

                        else if ( LA54_12 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index54_12);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA54_23 = input.LA(1);

                         
                        int index54_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 22;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 16;}

                         
                        input.seek(index54_23);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA54_11 = input.LA(1);

                         
                        int index54_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA54_11>=RULE_STRING && LA54_11<=RULE_ID)) ) {s = 16;}

                        else if ( LA54_11 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index54_11);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 54, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA55 extends DFA {

        public DFA55(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 55;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_27;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "8870:2: ( rule__Service__UnorderedGroup_3__7 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA55_9 = input.LA(1);

                         
                        int index55_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA55_9 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 17;}

                        else if ( (LA55_9==RULE_STRING) ) {s = 18;}

                        else if ( (LA55_9==RULE_ID) ) {s = 19;}

                         
                        input.seek(index55_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA55_10 = input.LA(1);

                         
                        int index55_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA55_10>=RULE_STRING && LA55_10<=RULE_ID)) ) {s = 16;}

                        else if ( LA55_10 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index55_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA55_0 = input.LA(1);

                         
                        int index55_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA55_0 >= 41 && LA55_0 <= 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA55_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA55_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA55_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA55_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA55_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA55_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA55_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( (LA55_0==36) ) {s = 9;}

                        else if ( (LA55_0==37) ) {s = 10;}

                        else if ( (LA55_0==38) ) {s = 11;}

                        else if ( (LA55_0==39) ) {s = 12;}

                        else if ( LA55_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA55_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA55_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( (LA55_0==EOF||(LA55_0>=RULE_STRING && LA55_0<=RULE_ID)||(LA55_0>=34 && LA55_0<=35)) ) {s = 16;}

                         
                        input.seek(index55_0);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA55_12 = input.LA(1);

                         
                        int index55_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA55_12>=RULE_STRING && LA55_12<=RULE_ID)) ) {s = 16;}

                        else if ( LA55_12 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index55_12);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA55_23 = input.LA(1);

                         
                        int index55_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 22;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 16;}

                         
                        input.seek(index55_23);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA55_11 = input.LA(1);

                         
                        int index55_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA55_11>=RULE_STRING && LA55_11<=RULE_ID)) ) {s = 16;}

                        else if ( LA55_11 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index55_11);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 55, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_29s = "\1\3\10\uffff\1\0\1\1\1\5\1\4\12\uffff\1\2}>";
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);

    class DFA56 extends DFA {

        public DFA56(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 56;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_29;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "8882:2: ( rule__Service__UnorderedGroup_3__8 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA56_9 = input.LA(1);

                         
                        int index56_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA56_9 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 17;}

                        else if ( (LA56_9==RULE_STRING) ) {s = 18;}

                        else if ( (LA56_9==RULE_ID) ) {s = 19;}

                         
                        input.seek(index56_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA56_10 = input.LA(1);

                         
                        int index56_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA56_10>=RULE_STRING && LA56_10<=RULE_ID)) ) {s = 16;}

                        else if ( LA56_10 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index56_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA56_23 = input.LA(1);

                         
                        int index56_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 22;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 16;}

                         
                        input.seek(index56_23);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA56_0 = input.LA(1);

                         
                        int index56_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA56_0 >= 41 && LA56_0 <= 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA56_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA56_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA56_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA56_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA56_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA56_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA56_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( (LA56_0==36) ) {s = 9;}

                        else if ( (LA56_0==37) ) {s = 10;}

                        else if ( (LA56_0==38) ) {s = 11;}

                        else if ( (LA56_0==39) ) {s = 12;}

                        else if ( LA56_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA56_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA56_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( (LA56_0==EOF||(LA56_0>=RULE_STRING && LA56_0<=RULE_ID)||(LA56_0>=34 && LA56_0<=35)) ) {s = 16;}

                         
                        input.seek(index56_0);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA56_12 = input.LA(1);

                         
                        int index56_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA56_12>=RULE_STRING && LA56_12<=RULE_ID)) ) {s = 16;}

                        else if ( LA56_12 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index56_12);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA56_11 = input.LA(1);

                         
                        int index56_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA56_11>=RULE_STRING && LA56_11<=RULE_ID)) ) {s = 16;}

                        else if ( LA56_11 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index56_11);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 56, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA57 extends DFA {

        public DFA57(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 57;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "8894:2: ( rule__Service__UnorderedGroup_3__9 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA57_9 = input.LA(1);

                         
                        int index57_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA57_9 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 17;}

                        else if ( (LA57_9==RULE_STRING) ) {s = 18;}

                        else if ( (LA57_9==RULE_ID) ) {s = 19;}

                         
                        input.seek(index57_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA57_10 = input.LA(1);

                         
                        int index57_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA57_10 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                        else if ( ((LA57_10>=RULE_STRING && LA57_10<=RULE_ID)) ) {s = 16;}

                         
                        input.seek(index57_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA57_0 = input.LA(1);

                         
                        int index57_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA57_0 >= 41 && LA57_0 <= 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA57_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA57_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA57_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA57_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA57_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA57_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA57_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( (LA57_0==36) ) {s = 9;}

                        else if ( (LA57_0==37) ) {s = 10;}

                        else if ( (LA57_0==38) ) {s = 11;}

                        else if ( (LA57_0==39) ) {s = 12;}

                        else if ( LA57_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA57_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA57_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( (LA57_0==EOF||(LA57_0>=RULE_STRING && LA57_0<=RULE_ID)||(LA57_0>=34 && LA57_0<=35)) ) {s = 16;}

                         
                        input.seek(index57_0);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA57_12 = input.LA(1);

                         
                        int index57_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA57_12>=RULE_STRING && LA57_12<=RULE_ID)) ) {s = 16;}

                        else if ( LA57_12 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index57_12);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA57_11 = input.LA(1);

                         
                        int index57_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA57_11>=RULE_STRING && LA57_11<=RULE_ID)) ) {s = 16;}

                        else if ( LA57_11 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index57_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA57_23 = input.LA(1);

                         
                        int index57_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 22;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 16;}

                         
                        input.seek(index57_23);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 57, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA58 extends DFA {

        public DFA58(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 58;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "8906:2: ( rule__Service__UnorderedGroup_3__10 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA58_9 = input.LA(1);

                         
                        int index58_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA58_9==RULE_STRING) ) {s = 17;}

                        else if ( (LA58_9==RULE_ID) ) {s = 18;}

                        else if ( LA58_9 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 19;}

                         
                        input.seek(index58_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA58_10 = input.LA(1);

                         
                        int index58_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA58_10>=RULE_STRING && LA58_10<=RULE_ID)) ) {s = 16;}

                        else if ( LA58_10 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index58_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA58_0 = input.LA(1);

                         
                        int index58_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA58_0 >= 41 && LA58_0 <= 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA58_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA58_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA58_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA58_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA58_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA58_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA58_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( (LA58_0==36) ) {s = 9;}

                        else if ( (LA58_0==37) ) {s = 10;}

                        else if ( (LA58_0==38) ) {s = 11;}

                        else if ( (LA58_0==39) ) {s = 12;}

                        else if ( LA58_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA58_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA58_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( (LA58_0==EOF||(LA58_0>=RULE_STRING && LA58_0<=RULE_ID)||(LA58_0>=34 && LA58_0<=35)) ) {s = 16;}

                         
                        input.seek(index58_0);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA58_23 = input.LA(1);

                         
                        int index58_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 22;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 16;}

                         
                        input.seek(index58_23);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA58_12 = input.LA(1);

                         
                        int index58_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA58_12>=RULE_STRING && LA58_12<=RULE_ID)) ) {s = 16;}

                        else if ( LA58_12 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index58_12);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA58_11 = input.LA(1);

                         
                        int index58_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA58_11 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                        else if ( ((LA58_11>=RULE_STRING && LA58_11<=RULE_ID)) ) {s = 16;}

                         
                        input.seek(index58_11);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 58, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA59 extends DFA {

        public DFA59(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 59;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_27;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "8918:2: ( rule__Service__UnorderedGroup_3__11 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA59_9 = input.LA(1);

                         
                        int index59_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA59_9==RULE_STRING) ) {s = 17;}

                        else if ( (LA59_9==RULE_ID) ) {s = 18;}

                        else if ( LA59_9 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 19;}

                         
                        input.seek(index59_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA59_10 = input.LA(1);

                         
                        int index59_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA59_10>=RULE_STRING && LA59_10<=RULE_ID)) ) {s = 16;}

                        else if ( LA59_10 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index59_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA59_0 = input.LA(1);

                         
                        int index59_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA59_0 >= 41 && LA59_0 <= 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA59_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA59_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA59_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA59_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA59_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA59_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA59_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( (LA59_0==36) ) {s = 9;}

                        else if ( (LA59_0==37) ) {s = 10;}

                        else if ( (LA59_0==38) ) {s = 11;}

                        else if ( (LA59_0==39) ) {s = 12;}

                        else if ( LA59_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA59_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA59_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( (LA59_0==EOF||(LA59_0>=RULE_STRING && LA59_0<=RULE_ID)||(LA59_0>=34 && LA59_0<=35)) ) {s = 16;}

                         
                        input.seek(index59_0);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA59_12 = input.LA(1);

                         
                        int index59_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA59_12 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                        else if ( ((LA59_12>=RULE_STRING && LA59_12<=RULE_ID)) ) {s = 16;}

                         
                        input.seek(index59_12);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA59_23 = input.LA(1);

                         
                        int index59_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 22;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 16;}

                         
                        input.seek(index59_23);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA59_11 = input.LA(1);

                         
                        int index59_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA59_11>=RULE_STRING && LA59_11<=RULE_ID)) ) {s = 16;}

                        else if ( LA59_11 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index59_11);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 59, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA60 extends DFA {

        public DFA60(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 60;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "8930:2: ( rule__Service__UnorderedGroup_3__12 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA60_9 = input.LA(1);

                         
                        int index60_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA60_9==RULE_STRING) ) {s = 17;}

                        else if ( (LA60_9==RULE_ID) ) {s = 18;}

                        else if ( LA60_9 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 19;}

                         
                        input.seek(index60_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA60_10 = input.LA(1);

                         
                        int index60_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA60_10>=RULE_STRING && LA60_10<=RULE_ID)) ) {s = 16;}

                        else if ( LA60_10 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index60_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA60_0 = input.LA(1);

                         
                        int index60_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA60_0 >= 41 && LA60_0 <= 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA60_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA60_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA60_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA60_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA60_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA60_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA60_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( (LA60_0==36) ) {s = 9;}

                        else if ( (LA60_0==37) ) {s = 10;}

                        else if ( (LA60_0==38) ) {s = 11;}

                        else if ( (LA60_0==39) ) {s = 12;}

                        else if ( LA60_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA60_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA60_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( (LA60_0==EOF||(LA60_0>=RULE_STRING && LA60_0<=RULE_ID)||(LA60_0>=34 && LA60_0<=35)) ) {s = 16;}

                         
                        input.seek(index60_0);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA60_23 = input.LA(1);

                         
                        int index60_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 22;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 16;}

                         
                        input.seek(index60_23);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA60_12 = input.LA(1);

                         
                        int index60_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA60_12>=RULE_STRING && LA60_12<=RULE_ID)) ) {s = 16;}

                        else if ( LA60_12 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index60_12);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA60_11 = input.LA(1);

                         
                        int index60_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA60_11>=RULE_STRING && LA60_11<=RULE_ID)) ) {s = 16;}

                        else if ( LA60_11 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index60_11);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 60, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA61 extends DFA {

        public DFA61(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 61;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "8942:2: ( rule__Service__UnorderedGroup_3__13 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA61_9 = input.LA(1);

                         
                        int index61_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA61_9==RULE_STRING) ) {s = 17;}

                        else if ( (LA61_9==RULE_ID) ) {s = 18;}

                        else if ( LA61_9 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 19;}

                         
                        input.seek(index61_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA61_10 = input.LA(1);

                         
                        int index61_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA61_10>=RULE_STRING && LA61_10<=RULE_ID)) ) {s = 16;}

                        else if ( LA61_10 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index61_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA61_0 = input.LA(1);

                         
                        int index61_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA61_0 >= 41 && LA61_0 <= 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA61_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA61_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA61_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA61_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA61_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA61_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA61_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( (LA61_0==36) ) {s = 9;}

                        else if ( (LA61_0==37) ) {s = 10;}

                        else if ( (LA61_0==38) ) {s = 11;}

                        else if ( (LA61_0==39) ) {s = 12;}

                        else if ( LA61_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA61_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA61_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( (LA61_0==EOF||(LA61_0>=RULE_STRING && LA61_0<=RULE_ID)||(LA61_0>=34 && LA61_0<=35)) ) {s = 16;}

                         
                        input.seek(index61_0);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA61_23 = input.LA(1);

                         
                        int index61_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 22;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 16;}

                         
                        input.seek(index61_23);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA61_12 = input.LA(1);

                         
                        int index61_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA61_12>=RULE_STRING && LA61_12<=RULE_ID)) ) {s = 16;}

                        else if ( LA61_12 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index61_12);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA61_11 = input.LA(1);

                         
                        int index61_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA61_11>=RULE_STRING && LA61_11<=RULE_ID)) ) {s = 16;}

                        else if ( LA61_11 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index61_11);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 61, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA62 extends DFA {

        public DFA62(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 62;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_27;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "8954:2: ( rule__Service__UnorderedGroup_3__14 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA62_9 = input.LA(1);

                         
                        int index62_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA62_9==RULE_STRING) ) {s = 17;}

                        else if ( (LA62_9==RULE_ID) ) {s = 18;}

                        else if ( LA62_9 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 19;}

                         
                        input.seek(index62_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA62_10 = input.LA(1);

                         
                        int index62_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA62_10>=RULE_STRING && LA62_10<=RULE_ID)) ) {s = 16;}

                        else if ( LA62_10 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index62_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA62_0 = input.LA(1);

                         
                        int index62_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA62_0 >= 41 && LA62_0 <= 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA62_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA62_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA62_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA62_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA62_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA62_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA62_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( (LA62_0==36) ) {s = 9;}

                        else if ( (LA62_0==37) ) {s = 10;}

                        else if ( (LA62_0==38) ) {s = 11;}

                        else if ( (LA62_0==39) ) {s = 12;}

                        else if ( LA62_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA62_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA62_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( (LA62_0==EOF||(LA62_0>=RULE_STRING && LA62_0<=RULE_ID)||(LA62_0>=34 && LA62_0<=35)) ) {s = 16;}

                         
                        input.seek(index62_0);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA62_12 = input.LA(1);

                         
                        int index62_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA62_12>=RULE_STRING && LA62_12<=RULE_ID)) ) {s = 16;}

                        else if ( LA62_12 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index62_12);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA62_23 = input.LA(1);

                         
                        int index62_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 22;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 16;}

                         
                        input.seek(index62_23);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA62_11 = input.LA(1);

                         
                        int index62_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA62_11>=RULE_STRING && LA62_11<=RULE_ID)) ) {s = 16;}

                        else if ( LA62_11 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index62_11);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 62, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_30s = "\13\uffff";
    static final String dfa_31s = "\1\10\12\uffff";
    static final String dfa_32s = "\1\5\3\uffff\1\17\4\uffff\2\0";
    static final String dfa_33s = "\1\101\3\uffff\1\20\4\uffff\2\0";
    static final String dfa_34s = "\1\uffff\3\1\1\uffff\3\1\1\2\2\uffff";
    static final String dfa_35s = "\1\0\10\uffff\1\2\1\1}>";
    static final String[] dfa_36s = {
            "\2\10\33\uffff\6\10\1\uffff\7\10\1\4\5\10\4\uffff\1\1\1\2\1\3\1\5\1\uffff\1\6\1\uffff\1\7",
            "",
            "",
            "",
            "\1\11\1\12",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff"
    };

    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final char[] dfa_32 = DFA.unpackEncodedStringToUnsignedChars(dfa_32s);
    static final char[] dfa_33 = DFA.unpackEncodedStringToUnsignedChars(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final short[][] dfa_36 = unpackEncodedStringArray(dfa_36s);

    class DFA69 extends DFA {

        public DFA69(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 69;
            this.eot = dfa_30;
            this.eof = dfa_31;
            this.min = dfa_32;
            this.max = dfa_33;
            this.accept = dfa_34;
            this.special = dfa_35;
            this.transition = dfa_36;
        }
        public String getDescription() {
            return "9249:2: ( rule__VolumeConnector__UnorderedGroup_1_1__1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA69_0 = input.LA(1);

                         
                        int index69_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA69_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 0) ) {s = 1;}

                        else if ( LA69_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 1) ) {s = 2;}

                        else if ( LA69_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 2) ) {s = 3;}

                        else if ( (LA69_0==48) ) {s = 4;}

                        else if ( LA69_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 4) ) {s = 5;}

                        else if ( LA69_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 5) ) {s = 6;}

                        else if ( LA69_0 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 6) ) {s = 7;}

                        else if ( (LA69_0==EOF||(LA69_0>=RULE_STRING && LA69_0<=RULE_ID)||(LA69_0>=34 && LA69_0<=39)||(LA69_0>=41 && LA69_0<=47)||(LA69_0>=49 && LA69_0<=53)) ) {s = 8;}

                         
                        input.seek(index69_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA69_10 = input.LA(1);

                         
                        int index69_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1()) ) {s = 8;}

                         
                        input.seek(index69_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA69_9 = input.LA(1);

                         
                        int index69_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1()) ) {s = 8;}

                         
                        input.seek(index69_9);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 69, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_37s = "\1\2\10\uffff\1\0\1\1}>";
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);

    class DFA70 extends DFA {

        public DFA70(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 70;
            this.eot = dfa_30;
            this.eof = dfa_31;
            this.min = dfa_32;
            this.max = dfa_33;
            this.accept = dfa_34;
            this.special = dfa_37;
            this.transition = dfa_36;
        }
        public String getDescription() {
            return "9261:2: ( rule__VolumeConnector__UnorderedGroup_1_1__2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA70_9 = input.LA(1);

                         
                        int index70_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1()) ) {s = 8;}

                         
                        input.seek(index70_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA70_10 = input.LA(1);

                         
                        int index70_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1()) ) {s = 8;}

                         
                        input.seek(index70_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA70_0 = input.LA(1);

                         
                        int index70_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA70_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 0) ) {s = 1;}

                        else if ( LA70_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 1) ) {s = 2;}

                        else if ( LA70_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 2) ) {s = 3;}

                        else if ( (LA70_0==48) ) {s = 4;}

                        else if ( LA70_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 4) ) {s = 5;}

                        else if ( LA70_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 5) ) {s = 6;}

                        else if ( LA70_0 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 6) ) {s = 7;}

                        else if ( (LA70_0==EOF||(LA70_0>=RULE_STRING && LA70_0<=RULE_ID)||(LA70_0>=34 && LA70_0<=39)||(LA70_0>=41 && LA70_0<=47)||(LA70_0>=49 && LA70_0<=53)) ) {s = 8;}

                         
                        input.seek(index70_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 70, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_38s = "\1\2\10\uffff\1\1\1\0}>";
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);

    class DFA71 extends DFA {

        public DFA71(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 71;
            this.eot = dfa_30;
            this.eof = dfa_31;
            this.min = dfa_32;
            this.max = dfa_33;
            this.accept = dfa_34;
            this.special = dfa_38;
            this.transition = dfa_36;
        }
        public String getDescription() {
            return "9273:2: ( rule__VolumeConnector__UnorderedGroup_1_1__3 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA71_10 = input.LA(1);

                         
                        int index71_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1()) ) {s = 8;}

                         
                        input.seek(index71_10);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA71_9 = input.LA(1);

                         
                        int index71_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1()) ) {s = 8;}

                         
                        input.seek(index71_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA71_0 = input.LA(1);

                         
                        int index71_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA71_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 0) ) {s = 1;}

                        else if ( LA71_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 1) ) {s = 2;}

                        else if ( LA71_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 2) ) {s = 3;}

                        else if ( (LA71_0==48) ) {s = 4;}

                        else if ( LA71_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 4) ) {s = 5;}

                        else if ( LA71_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 5) ) {s = 6;}

                        else if ( LA71_0 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 6) ) {s = 7;}

                        else if ( (LA71_0==EOF||(LA71_0>=RULE_STRING && LA71_0<=RULE_ID)||(LA71_0>=34 && LA71_0<=39)||(LA71_0>=41 && LA71_0<=47)||(LA71_0>=49 && LA71_0<=53)) ) {s = 8;}

                         
                        input.seek(index71_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 71, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_39s = "\1\1\10\uffff\1\0\1\2}>";
    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);

    class DFA72 extends DFA {

        public DFA72(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 72;
            this.eot = dfa_30;
            this.eof = dfa_31;
            this.min = dfa_32;
            this.max = dfa_33;
            this.accept = dfa_34;
            this.special = dfa_39;
            this.transition = dfa_36;
        }
        public String getDescription() {
            return "9285:2: ( rule__VolumeConnector__UnorderedGroup_1_1__4 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA72_9 = input.LA(1);

                         
                        int index72_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1()) ) {s = 8;}

                         
                        input.seek(index72_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA72_0 = input.LA(1);

                         
                        int index72_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA72_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 0) ) {s = 1;}

                        else if ( LA72_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 1) ) {s = 2;}

                        else if ( LA72_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 2) ) {s = 3;}

                        else if ( (LA72_0==48) ) {s = 4;}

                        else if ( LA72_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 4) ) {s = 5;}

                        else if ( LA72_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 5) ) {s = 6;}

                        else if ( LA72_0 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 6) ) {s = 7;}

                        else if ( (LA72_0==EOF||(LA72_0>=RULE_STRING && LA72_0<=RULE_ID)||(LA72_0>=34 && LA72_0<=39)||(LA72_0>=41 && LA72_0<=47)||(LA72_0>=49 && LA72_0<=53)) ) {s = 8;}

                         
                        input.seek(index72_0);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA72_10 = input.LA(1);

                         
                        int index72_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1()) ) {s = 8;}

                         
                        input.seek(index72_10);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 72, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA73 extends DFA {

        public DFA73(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 73;
            this.eot = dfa_30;
            this.eof = dfa_31;
            this.min = dfa_32;
            this.max = dfa_33;
            this.accept = dfa_34;
            this.special = dfa_39;
            this.transition = dfa_36;
        }
        public String getDescription() {
            return "9297:2: ( rule__VolumeConnector__UnorderedGroup_1_1__5 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA73_9 = input.LA(1);

                         
                        int index73_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1()) ) {s = 8;}

                         
                        input.seek(index73_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA73_0 = input.LA(1);

                         
                        int index73_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA73_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 0) ) {s = 1;}

                        else if ( LA73_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 1) ) {s = 2;}

                        else if ( LA73_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 2) ) {s = 3;}

                        else if ( (LA73_0==48) ) {s = 4;}

                        else if ( LA73_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 4) ) {s = 5;}

                        else if ( LA73_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 5) ) {s = 6;}

                        else if ( LA73_0 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 6) ) {s = 7;}

                        else if ( (LA73_0==EOF||(LA73_0>=RULE_STRING && LA73_0<=RULE_ID)||(LA73_0>=34 && LA73_0<=39)||(LA73_0>=41 && LA73_0<=47)||(LA73_0>=49 && LA73_0<=53)) ) {s = 8;}

                         
                        input.seek(index73_0);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA73_10 = input.LA(1);

                         
                        int index73_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1()) ) {s = 8;}

                         
                        input.seek(index73_10);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 73, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = dfa_30;
            this.eof = dfa_31;
            this.min = dfa_32;
            this.max = dfa_33;
            this.accept = dfa_34;
            this.special = dfa_39;
            this.transition = dfa_36;
        }
        public String getDescription() {
            return "9309:2: ( rule__VolumeConnector__UnorderedGroup_1_1__6 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA74_9 = input.LA(1);

                         
                        int index74_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1()) ) {s = 8;}

                         
                        input.seek(index74_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA74_0 = input.LA(1);

                         
                        int index74_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA74_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 0) ) {s = 1;}

                        else if ( LA74_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 1) ) {s = 2;}

                        else if ( LA74_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 2) ) {s = 3;}

                        else if ( (LA74_0==48) ) {s = 4;}

                        else if ( LA74_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 4) ) {s = 5;}

                        else if ( LA74_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 5) ) {s = 6;}

                        else if ( LA74_0 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 6) ) {s = 7;}

                        else if ( (LA74_0==EOF||(LA74_0>=RULE_STRING && LA74_0<=RULE_ID)||(LA74_0>=34 && LA74_0<=39)||(LA74_0>=41 && LA74_0<=47)||(LA74_0>=49 && LA74_0<=53)) ) {s = 8;}

                         
                        input.seek(index74_0);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA74_10 = input.LA(1);

                         
                        int index74_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1()) ) {s = 8;}

                         
                        input.seek(index74_10);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 74, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_40s = "\1\12\12\uffff";
    static final String dfa_41s = "\1\5\12\uffff";
    static final String dfa_42s = "\1\120\12\uffff";
    static final String dfa_43s = "\1\uffff\11\1\1\2";
    static final String dfa_44s = "\1\0\12\uffff}>";
    static final String[] dfa_45s = {
            "\2\12\33\uffff\6\12\40\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[][] dfa_45 = unpackEncodedStringArray(dfa_45s);

    class DFA85 extends DFA {

        public DFA85(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 85;
            this.eot = dfa_30;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "9661:2: ( rule__Network__UnorderedGroup_3_1__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA85_0 = input.LA(1);

                         
                        int index85_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA85_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA85_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA85_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA85_0 == 75 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA85_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA85_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA85_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA85_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA85_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA85_0==EOF||(LA85_0>=RULE_STRING && LA85_0<=RULE_ID)||(LA85_0>=34 && LA85_0<=39)) ) {s = 10;}

                         
                        input.seek(index85_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 85, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_46s = "\12\uffff";
    static final String dfa_47s = "\1\110\11\uffff";
    static final String dfa_48s = "\1\120\11\uffff";
    static final String dfa_49s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11";
    static final String dfa_50s = "\1\0\11\uffff}>";
    static final String[] dfa_51s = {
            "\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final char[] dfa_48 = DFA.unpackEncodedStringToUnsignedChars(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[][] dfa_51 = unpackEncodedStringArray(dfa_51s);

    class DFA86 extends DFA {

        public DFA86(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 86;
            this.eot = dfa_46;
            this.eof = dfa_46;
            this.min = dfa_47;
            this.max = dfa_48;
            this.accept = dfa_49;
            this.special = dfa_50;
            this.transition = dfa_51;
        }
        public String getDescription() {
            return "9675:3: ( ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA86_0 = input.LA(1);

                         
                        int index86_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA86_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA86_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA86_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA86_0 == 75 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA86_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA86_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA86_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA86_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA86_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                         
                        input.seek(index86_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 86, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA87 extends DFA {

        public DFA87(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 87;
            this.eot = dfa_30;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "9825:2: ( rule__Network__UnorderedGroup_3_1__1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA87_0 = input.LA(1);

                         
                        int index87_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA87_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA87_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA87_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA87_0 == 75 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA87_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA87_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA87_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA87_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA87_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA87_0==EOF||(LA87_0>=RULE_STRING && LA87_0<=RULE_ID)||(LA87_0>=34 && LA87_0<=39)) ) {s = 10;}

                         
                        input.seek(index87_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 87, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA88 extends DFA {

        public DFA88(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 88;
            this.eot = dfa_30;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "9837:2: ( rule__Network__UnorderedGroup_3_1__2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA88_0 = input.LA(1);

                         
                        int index88_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA88_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA88_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA88_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA88_0 == 75 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA88_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA88_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA88_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA88_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA88_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA88_0==EOF||(LA88_0>=RULE_STRING && LA88_0<=RULE_ID)||(LA88_0>=34 && LA88_0<=39)) ) {s = 10;}

                         
                        input.seek(index88_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 88, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA89 extends DFA {

        public DFA89(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 89;
            this.eot = dfa_30;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "9849:2: ( rule__Network__UnorderedGroup_3_1__3 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA89_0 = input.LA(1);

                         
                        int index89_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA89_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA89_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA89_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA89_0 == 75 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA89_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA89_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA89_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA89_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA89_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA89_0==EOF||(LA89_0>=RULE_STRING && LA89_0<=RULE_ID)||(LA89_0>=34 && LA89_0<=39)) ) {s = 10;}

                         
                        input.seek(index89_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 89, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA90 extends DFA {

        public DFA90(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 90;
            this.eot = dfa_30;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "9861:2: ( rule__Network__UnorderedGroup_3_1__4 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA90_0 = input.LA(1);

                         
                        int index90_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA90_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA90_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA90_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA90_0 == 75 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA90_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA90_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA90_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA90_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA90_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA90_0==EOF||(LA90_0>=RULE_STRING && LA90_0<=RULE_ID)||(LA90_0>=34 && LA90_0<=39)) ) {s = 10;}

                         
                        input.seek(index90_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 90, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA91 extends DFA {

        public DFA91(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 91;
            this.eot = dfa_30;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "9873:2: ( rule__Network__UnorderedGroup_3_1__5 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA91_0 = input.LA(1);

                         
                        int index91_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA91_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA91_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA91_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA91_0 == 75 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA91_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA91_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA91_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA91_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA91_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA91_0==EOF||(LA91_0>=RULE_STRING && LA91_0<=RULE_ID)||(LA91_0>=34 && LA91_0<=39)) ) {s = 10;}

                         
                        input.seek(index91_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 91, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA92 extends DFA {

        public DFA92(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 92;
            this.eot = dfa_30;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "9885:2: ( rule__Network__UnorderedGroup_3_1__6 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA92_0 = input.LA(1);

                         
                        int index92_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA92_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA92_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA92_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA92_0 == 75 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA92_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA92_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA92_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA92_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA92_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA92_0==EOF||(LA92_0>=RULE_STRING && LA92_0<=RULE_ID)||(LA92_0>=34 && LA92_0<=39)) ) {s = 10;}

                         
                        input.seek(index92_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 92, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA93 extends DFA {

        public DFA93(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 93;
            this.eot = dfa_30;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "9897:2: ( rule__Network__UnorderedGroup_3_1__7 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA93_0 = input.LA(1);

                         
                        int index93_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA93_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA93_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA93_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA93_0 == 75 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA93_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA93_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA93_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA93_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA93_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA93_0==EOF||(LA93_0>=RULE_STRING && LA93_0<=RULE_ID)||(LA93_0>=34 && LA93_0<=39)) ) {s = 10;}

                         
                        input.seek(index93_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 93, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA94 extends DFA {

        public DFA94(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 94;
            this.eot = dfa_30;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "9909:2: ( rule__Network__UnorderedGroup_3_1__8 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA94_0 = input.LA(1);

                         
                        int index94_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA94_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA94_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA94_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA94_0 == 75 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA94_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA94_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA94_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA94_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA94_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA94_0==EOF||(LA94_0>=RULE_STRING && LA94_0<=RULE_ID)||(LA94_0>=34 && LA94_0<=39)) ) {s = 10;}

                         
                        input.seek(index94_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 94, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0004000000000002L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000060L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000062L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x003BFEF000000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000040L,0x0000000006000000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x00000000001E0000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000018000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0004000000000060L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0004000000000062L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0xBC01000000000060L,0x0000000000000002L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x1400000000000060L,0x0000000000000038L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0004000000000010L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x03C0000000000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000E00000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x000000000F000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x00000003F0000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000000L,0x000000000001FF40L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000000000L,0x0000000000180100L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000000L,0x000000000000F100L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000000L,0x0000000000023000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000000L,0x0000000000063000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000000L,0x0000000001E00000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x000000FC00000002L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x003BFEF000000002L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x03C0000000000002L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0xBC01000000000062L,0x0000000000000002L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x1400000000000062L,0x0000000000000038L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000002L,0x000000000001FF00L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000002L,0x000000000000F100L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000002L,0x0000000000023000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000002L,0x0000000000063000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000002L,0x0000000000180100L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000002L,0x0000000001E00000L});

}
