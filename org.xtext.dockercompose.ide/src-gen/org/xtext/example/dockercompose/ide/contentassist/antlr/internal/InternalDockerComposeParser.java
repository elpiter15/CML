package org.xtext.example.dockercompose.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.dockercompose.services.DockerComposeGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings("all")
public class InternalDockerComposeParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_INT", "RULE_STRING", "RULE_ID", "RULE_VERSION", "RULE_PORT_DEF", "RULE_DEVICE_DEF", "RULE_QUOTED_INT", "RULE_PERMISSION", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'.'", "'..'", "'true'", "'false'", "'\"no\"'", "'always'", "'on-failure'", "'unless-stopped'", "'rw'", "'ro'", "'z'", "'volume'", "'bind'", "'tmpfs'", "'npipe'", "'rprivate'", "'private'", "'rshared'", "'shared'", "'rslave'", "'slave'", "'service_started'", "'service_healthy'", "'service_completed_successfully'", "'version:'", "'services:'", "'volumes:'", "'configs:'", "'secrets:'", "'networks:'", "':'", "'build:'", "'image:'", "'cpu_count:'", "'command:'", "'container_name:'", "'restart:'", "'init:'", "'read_only:'", "'links:'", "'-'", "'depends_on:'", "'environment:'", "'devices:'", "'dns:'", "'ports:'", "'='", "'/'", "'@'", "'condition:'", "'ipv4_address:'", "'priority:'", "'aliases:'", "'link_local_ips:'", "'source:'", "'type:'", "'target:'", "'bind:'", "'propagation:'", "'volume:'", "'nocopy:'", "'tmpfs:'", "'size:'", "'uid:'", "'gid:'", "'mode:'", "'{'", "'}'", "'driver:'", "'attachable:'", "'enable_ipv6:'", "'internal:'", "'external:'", "'name:'", "'labels:'", "'driver_opts:'", "'ipam:'", "'file:'", "'config:'", "'options:'", "'subnet:'", "'ip_range:'", "'gateway:'", "'aux_addresses:'"
    };
    public static final int T__50=50;
    public static final int RULE_VERSION=7;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=6;
    public static final int RULE_PORT_DEF=8;
    public static final int RULE_INT=4;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=12;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int RULE_PERMISSION=11;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__92=92;
    public static final int RULE_DEVICE_DEF=9;
    public static final int T__93=93;
    public static final int T__94=94;
    public static final int T__90=90;
    public static final int T__19=19;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int RULE_QUOTED_INT=10;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=5;
    public static final int RULE_SL_COMMENT=13;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int RULE_WS=14;
    public static final int RULE_ANY_OTHER=15;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int T__84=84;
    public static final int T__85=85;
    public static final int T__86=86;
    public static final int T__87=87;

    // delegates
    // delegators


        public InternalDockerComposeParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalDockerComposeParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalDockerComposeParser.tokenNames; }
    public String getGrammarFileName() { return "InternalDockerCompose.g"; }


    	private DockerComposeGrammarAccess grammarAccess;

    	public void setGrammarAccess(DockerComposeGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		return tokenName;
    	}



    // $ANTLR start "entryRuleDockerCompose"
    // InternalDockerCompose.g:53:1: entryRuleDockerCompose : ruleDockerCompose EOF ;
    public final void entryRuleDockerCompose() throws RecognitionException {
        try {
            // InternalDockerCompose.g:54:1: ( ruleDockerCompose EOF )
            // InternalDockerCompose.g:55:1: ruleDockerCompose EOF
            {
             before(grammarAccess.getDockerComposeRule()); 
            pushFollow(FOLLOW_1);
            ruleDockerCompose();

            state._fsp--;

             after(grammarAccess.getDockerComposeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDockerCompose"


    // $ANTLR start "ruleDockerCompose"
    // InternalDockerCompose.g:62:1: ruleDockerCompose : ( ( rule__DockerCompose__UnorderedGroup ) ) ;
    public final void ruleDockerCompose() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:66:2: ( ( ( rule__DockerCompose__UnorderedGroup ) ) )
            // InternalDockerCompose.g:67:2: ( ( rule__DockerCompose__UnorderedGroup ) )
            {
            // InternalDockerCompose.g:67:2: ( ( rule__DockerCompose__UnorderedGroup ) )
            // InternalDockerCompose.g:68:3: ( rule__DockerCompose__UnorderedGroup )
            {
             before(grammarAccess.getDockerComposeAccess().getUnorderedGroup()); 
            // InternalDockerCompose.g:69:3: ( rule__DockerCompose__UnorderedGroup )
            // InternalDockerCompose.g:69:4: rule__DockerCompose__UnorderedGroup
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__UnorderedGroup();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getUnorderedGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDockerCompose"


    // $ANTLR start "entryRuleService"
    // InternalDockerCompose.g:78:1: entryRuleService : ruleService EOF ;
    public final void entryRuleService() throws RecognitionException {
        try {
            // InternalDockerCompose.g:79:1: ( ruleService EOF )
            // InternalDockerCompose.g:80:1: ruleService EOF
            {
             before(grammarAccess.getServiceRule()); 
            pushFollow(FOLLOW_1);
            ruleService();

            state._fsp--;

             after(grammarAccess.getServiceRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleService"


    // $ANTLR start "ruleService"
    // InternalDockerCompose.g:87:1: ruleService : ( ( rule__Service__Group__0 ) ) ;
    public final void ruleService() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:91:2: ( ( ( rule__Service__Group__0 ) ) )
            // InternalDockerCompose.g:92:2: ( ( rule__Service__Group__0 ) )
            {
            // InternalDockerCompose.g:92:2: ( ( rule__Service__Group__0 ) )
            // InternalDockerCompose.g:93:3: ( rule__Service__Group__0 )
            {
             before(grammarAccess.getServiceAccess().getGroup()); 
            // InternalDockerCompose.g:94:3: ( rule__Service__Group__0 )
            // InternalDockerCompose.g:94:4: rule__Service__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleService"


    // $ANTLR start "entryRuleEnvironmentVariableMap"
    // InternalDockerCompose.g:103:1: entryRuleEnvironmentVariableMap : ruleEnvironmentVariableMap EOF ;
    public final void entryRuleEnvironmentVariableMap() throws RecognitionException {
        try {
            // InternalDockerCompose.g:104:1: ( ruleEnvironmentVariableMap EOF )
            // InternalDockerCompose.g:105:1: ruleEnvironmentVariableMap EOF
            {
             before(grammarAccess.getEnvironmentVariableMapRule()); 
            pushFollow(FOLLOW_1);
            ruleEnvironmentVariableMap();

            state._fsp--;

             after(grammarAccess.getEnvironmentVariableMapRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEnvironmentVariableMap"


    // $ANTLR start "ruleEnvironmentVariableMap"
    // InternalDockerCompose.g:112:1: ruleEnvironmentVariableMap : ( ( rule__EnvironmentVariableMap__Group__0 ) ) ;
    public final void ruleEnvironmentVariableMap() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:116:2: ( ( ( rule__EnvironmentVariableMap__Group__0 ) ) )
            // InternalDockerCompose.g:117:2: ( ( rule__EnvironmentVariableMap__Group__0 ) )
            {
            // InternalDockerCompose.g:117:2: ( ( rule__EnvironmentVariableMap__Group__0 ) )
            // InternalDockerCompose.g:118:3: ( rule__EnvironmentVariableMap__Group__0 )
            {
             before(grammarAccess.getEnvironmentVariableMapAccess().getGroup()); 
            // InternalDockerCompose.g:119:3: ( rule__EnvironmentVariableMap__Group__0 )
            // InternalDockerCompose.g:119:4: rule__EnvironmentVariableMap__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__EnvironmentVariableMap__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getEnvironmentVariableMapAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEnvironmentVariableMap"


    // $ANTLR start "entryRuleEnvironmentVariableList"
    // InternalDockerCompose.g:128:1: entryRuleEnvironmentVariableList : ruleEnvironmentVariableList EOF ;
    public final void entryRuleEnvironmentVariableList() throws RecognitionException {
        try {
            // InternalDockerCompose.g:129:1: ( ruleEnvironmentVariableList EOF )
            // InternalDockerCompose.g:130:1: ruleEnvironmentVariableList EOF
            {
             before(grammarAccess.getEnvironmentVariableListRule()); 
            pushFollow(FOLLOW_1);
            ruleEnvironmentVariableList();

            state._fsp--;

             after(grammarAccess.getEnvironmentVariableListRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEnvironmentVariableList"


    // $ANTLR start "ruleEnvironmentVariableList"
    // InternalDockerCompose.g:137:1: ruleEnvironmentVariableList : ( ( rule__EnvironmentVariableList__Group__0 ) ) ;
    public final void ruleEnvironmentVariableList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:141:2: ( ( ( rule__EnvironmentVariableList__Group__0 ) ) )
            // InternalDockerCompose.g:142:2: ( ( rule__EnvironmentVariableList__Group__0 ) )
            {
            // InternalDockerCompose.g:142:2: ( ( rule__EnvironmentVariableList__Group__0 ) )
            // InternalDockerCompose.g:143:3: ( rule__EnvironmentVariableList__Group__0 )
            {
             before(grammarAccess.getEnvironmentVariableListAccess().getGroup()); 
            // InternalDockerCompose.g:144:3: ( rule__EnvironmentVariableList__Group__0 )
            // InternalDockerCompose.g:144:4: rule__EnvironmentVariableList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__EnvironmentVariableList__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getEnvironmentVariableListAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEnvironmentVariableList"


    // $ANTLR start "entryRulePort"
    // InternalDockerCompose.g:153:1: entryRulePort : rulePort EOF ;
    public final void entryRulePort() throws RecognitionException {
        try {
            // InternalDockerCompose.g:154:1: ( rulePort EOF )
            // InternalDockerCompose.g:155:1: rulePort EOF
            {
             before(grammarAccess.getPortRule()); 
            pushFollow(FOLLOW_1);
            rulePort();

            state._fsp--;

             after(grammarAccess.getPortRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePort"


    // $ANTLR start "rulePort"
    // InternalDockerCompose.g:162:1: rulePort : ( ( rule__Port__Group__0 ) ) ;
    public final void rulePort() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:166:2: ( ( ( rule__Port__Group__0 ) ) )
            // InternalDockerCompose.g:167:2: ( ( rule__Port__Group__0 ) )
            {
            // InternalDockerCompose.g:167:2: ( ( rule__Port__Group__0 ) )
            // InternalDockerCompose.g:168:3: ( rule__Port__Group__0 )
            {
             before(grammarAccess.getPortAccess().getGroup()); 
            // InternalDockerCompose.g:169:3: ( rule__Port__Group__0 )
            // InternalDockerCompose.g:169:4: rule__Port__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Port__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getPortAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePort"


    // $ANTLR start "entryRuleDevice"
    // InternalDockerCompose.g:178:1: entryRuleDevice : ruleDevice EOF ;
    public final void entryRuleDevice() throws RecognitionException {
        try {
            // InternalDockerCompose.g:179:1: ( ruleDevice EOF )
            // InternalDockerCompose.g:180:1: ruleDevice EOF
            {
             before(grammarAccess.getDeviceRule()); 
            pushFollow(FOLLOW_1);
            ruleDevice();

            state._fsp--;

             after(grammarAccess.getDeviceRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDevice"


    // $ANTLR start "ruleDevice"
    // InternalDockerCompose.g:187:1: ruleDevice : ( ( rule__Device__Group__0 ) ) ;
    public final void ruleDevice() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:191:2: ( ( ( rule__Device__Group__0 ) ) )
            // InternalDockerCompose.g:192:2: ( ( rule__Device__Group__0 ) )
            {
            // InternalDockerCompose.g:192:2: ( ( rule__Device__Group__0 ) )
            // InternalDockerCompose.g:193:3: ( rule__Device__Group__0 )
            {
             before(grammarAccess.getDeviceAccess().getGroup()); 
            // InternalDockerCompose.g:194:3: ( rule__Device__Group__0 )
            // InternalDockerCompose.g:194:4: rule__Device__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Device__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDeviceAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDevice"


    // $ANTLR start "entryRuleImage"
    // InternalDockerCompose.g:203:1: entryRuleImage : ruleImage EOF ;
    public final void entryRuleImage() throws RecognitionException {
        try {
            // InternalDockerCompose.g:204:1: ( ruleImage EOF )
            // InternalDockerCompose.g:205:1: ruleImage EOF
            {
             before(grammarAccess.getImageRule()); 
            pushFollow(FOLLOW_1);
            ruleImage();

            state._fsp--;

             after(grammarAccess.getImageRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleImage"


    // $ANTLR start "ruleImage"
    // InternalDockerCompose.g:212:1: ruleImage : ( ( rule__Image__Group__0 ) ) ;
    public final void ruleImage() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:216:2: ( ( ( rule__Image__Group__0 ) ) )
            // InternalDockerCompose.g:217:2: ( ( rule__Image__Group__0 ) )
            {
            // InternalDockerCompose.g:217:2: ( ( rule__Image__Group__0 ) )
            // InternalDockerCompose.g:218:3: ( rule__Image__Group__0 )
            {
             before(grammarAccess.getImageAccess().getGroup()); 
            // InternalDockerCompose.g:219:3: ( rule__Image__Group__0 )
            // InternalDockerCompose.g:219:4: rule__Image__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Image__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getImageAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleImage"


    // $ANTLR start "entryRuleLink"
    // InternalDockerCompose.g:228:1: entryRuleLink : ruleLink EOF ;
    public final void entryRuleLink() throws RecognitionException {
        try {
            // InternalDockerCompose.g:229:1: ( ruleLink EOF )
            // InternalDockerCompose.g:230:1: ruleLink EOF
            {
             before(grammarAccess.getLinkRule()); 
            pushFollow(FOLLOW_1);
            ruleLink();

            state._fsp--;

             after(grammarAccess.getLinkRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLink"


    // $ANTLR start "ruleLink"
    // InternalDockerCompose.g:237:1: ruleLink : ( ( rule__Link__Group__0 ) ) ;
    public final void ruleLink() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:241:2: ( ( ( rule__Link__Group__0 ) ) )
            // InternalDockerCompose.g:242:2: ( ( rule__Link__Group__0 ) )
            {
            // InternalDockerCompose.g:242:2: ( ( rule__Link__Group__0 ) )
            // InternalDockerCompose.g:243:3: ( rule__Link__Group__0 )
            {
             before(grammarAccess.getLinkAccess().getGroup()); 
            // InternalDockerCompose.g:244:3: ( rule__Link__Group__0 )
            // InternalDockerCompose.g:244:4: rule__Link__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Link__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getLinkAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLink"


    // $ANTLR start "entryRuleDependency_short"
    // InternalDockerCompose.g:253:1: entryRuleDependency_short : ruleDependency_short EOF ;
    public final void entryRuleDependency_short() throws RecognitionException {
        try {
            // InternalDockerCompose.g:254:1: ( ruleDependency_short EOF )
            // InternalDockerCompose.g:255:1: ruleDependency_short EOF
            {
             before(grammarAccess.getDependency_shortRule()); 
            pushFollow(FOLLOW_1);
            ruleDependency_short();

            state._fsp--;

             after(grammarAccess.getDependency_shortRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDependency_short"


    // $ANTLR start "ruleDependency_short"
    // InternalDockerCompose.g:262:1: ruleDependency_short : ( ( rule__Dependency_short__Group__0 ) ) ;
    public final void ruleDependency_short() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:266:2: ( ( ( rule__Dependency_short__Group__0 ) ) )
            // InternalDockerCompose.g:267:2: ( ( rule__Dependency_short__Group__0 ) )
            {
            // InternalDockerCompose.g:267:2: ( ( rule__Dependency_short__Group__0 ) )
            // InternalDockerCompose.g:268:3: ( rule__Dependency_short__Group__0 )
            {
             before(grammarAccess.getDependency_shortAccess().getGroup()); 
            // InternalDockerCompose.g:269:3: ( rule__Dependency_short__Group__0 )
            // InternalDockerCompose.g:269:4: rule__Dependency_short__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Dependency_short__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDependency_shortAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDependency_short"


    // $ANTLR start "entryRuleDependency_long"
    // InternalDockerCompose.g:278:1: entryRuleDependency_long : ruleDependency_long EOF ;
    public final void entryRuleDependency_long() throws RecognitionException {
        try {
            // InternalDockerCompose.g:279:1: ( ruleDependency_long EOF )
            // InternalDockerCompose.g:280:1: ruleDependency_long EOF
            {
             before(grammarAccess.getDependency_longRule()); 
            pushFollow(FOLLOW_1);
            ruleDependency_long();

            state._fsp--;

             after(grammarAccess.getDependency_longRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDependency_long"


    // $ANTLR start "ruleDependency_long"
    // InternalDockerCompose.g:287:1: ruleDependency_long : ( ( rule__Dependency_long__Group__0 ) ) ;
    public final void ruleDependency_long() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:291:2: ( ( ( rule__Dependency_long__Group__0 ) ) )
            // InternalDockerCompose.g:292:2: ( ( rule__Dependency_long__Group__0 ) )
            {
            // InternalDockerCompose.g:292:2: ( ( rule__Dependency_long__Group__0 ) )
            // InternalDockerCompose.g:293:3: ( rule__Dependency_long__Group__0 )
            {
             before(grammarAccess.getDependency_longAccess().getGroup()); 
            // InternalDockerCompose.g:294:3: ( rule__Dependency_long__Group__0 )
            // InternalDockerCompose.g:294:4: rule__Dependency_long__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Dependency_long__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDependency_longAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDependency_long"


    // $ANTLR start "entryRuleNetworkConnector"
    // InternalDockerCompose.g:303:1: entryRuleNetworkConnector : ruleNetworkConnector EOF ;
    public final void entryRuleNetworkConnector() throws RecognitionException {
        try {
            // InternalDockerCompose.g:304:1: ( ruleNetworkConnector EOF )
            // InternalDockerCompose.g:305:1: ruleNetworkConnector EOF
            {
             before(grammarAccess.getNetworkConnectorRule()); 
            pushFollow(FOLLOW_1);
            ruleNetworkConnector();

            state._fsp--;

             after(grammarAccess.getNetworkConnectorRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNetworkConnector"


    // $ANTLR start "ruleNetworkConnector"
    // InternalDockerCompose.g:312:1: ruleNetworkConnector : ( ( rule__NetworkConnector__Group__0 ) ) ;
    public final void ruleNetworkConnector() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:316:2: ( ( ( rule__NetworkConnector__Group__0 ) ) )
            // InternalDockerCompose.g:317:2: ( ( rule__NetworkConnector__Group__0 ) )
            {
            // InternalDockerCompose.g:317:2: ( ( rule__NetworkConnector__Group__0 ) )
            // InternalDockerCompose.g:318:3: ( rule__NetworkConnector__Group__0 )
            {
             before(grammarAccess.getNetworkConnectorAccess().getGroup()); 
            // InternalDockerCompose.g:319:3: ( rule__NetworkConnector__Group__0 )
            // InternalDockerCompose.g:319:4: rule__NetworkConnector__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNetworkConnector"


    // $ANTLR start "entryRuleAlias"
    // InternalDockerCompose.g:328:1: entryRuleAlias : ruleAlias EOF ;
    public final void entryRuleAlias() throws RecognitionException {
        try {
            // InternalDockerCompose.g:329:1: ( ruleAlias EOF )
            // InternalDockerCompose.g:330:1: ruleAlias EOF
            {
             before(grammarAccess.getAliasRule()); 
            pushFollow(FOLLOW_1);
            ruleAlias();

            state._fsp--;

             after(grammarAccess.getAliasRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAlias"


    // $ANTLR start "ruleAlias"
    // InternalDockerCompose.g:337:1: ruleAlias : ( ( rule__Alias__Group__0 ) ) ;
    public final void ruleAlias() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:341:2: ( ( ( rule__Alias__Group__0 ) ) )
            // InternalDockerCompose.g:342:2: ( ( rule__Alias__Group__0 ) )
            {
            // InternalDockerCompose.g:342:2: ( ( rule__Alias__Group__0 ) )
            // InternalDockerCompose.g:343:3: ( rule__Alias__Group__0 )
            {
             before(grammarAccess.getAliasAccess().getGroup()); 
            // InternalDockerCompose.g:344:3: ( rule__Alias__Group__0 )
            // InternalDockerCompose.g:344:4: rule__Alias__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Alias__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAliasAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAlias"


    // $ANTLR start "entryRuleVolumeConnector_long"
    // InternalDockerCompose.g:353:1: entryRuleVolumeConnector_long : ruleVolumeConnector_long EOF ;
    public final void entryRuleVolumeConnector_long() throws RecognitionException {
        try {
            // InternalDockerCompose.g:354:1: ( ruleVolumeConnector_long EOF )
            // InternalDockerCompose.g:355:1: ruleVolumeConnector_long EOF
            {
             before(grammarAccess.getVolumeConnector_longRule()); 
            pushFollow(FOLLOW_1);
            ruleVolumeConnector_long();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_longRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVolumeConnector_long"


    // $ANTLR start "ruleVolumeConnector_long"
    // InternalDockerCompose.g:362:1: ruleVolumeConnector_long : ( ( rule__VolumeConnector_long__Group__0 ) ) ;
    public final void ruleVolumeConnector_long() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:366:2: ( ( ( rule__VolumeConnector_long__Group__0 ) ) )
            // InternalDockerCompose.g:367:2: ( ( rule__VolumeConnector_long__Group__0 ) )
            {
            // InternalDockerCompose.g:367:2: ( ( rule__VolumeConnector_long__Group__0 ) )
            // InternalDockerCompose.g:368:3: ( rule__VolumeConnector_long__Group__0 )
            {
             before(grammarAccess.getVolumeConnector_longAccess().getGroup()); 
            // InternalDockerCompose.g:369:3: ( rule__VolumeConnector_long__Group__0 )
            // InternalDockerCompose.g:369:4: rule__VolumeConnector_long__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_longAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVolumeConnector_long"


    // $ANTLR start "entryRuleVolumeConnector_short"
    // InternalDockerCompose.g:378:1: entryRuleVolumeConnector_short : ruleVolumeConnector_short EOF ;
    public final void entryRuleVolumeConnector_short() throws RecognitionException {
        try {
            // InternalDockerCompose.g:379:1: ( ruleVolumeConnector_short EOF )
            // InternalDockerCompose.g:380:1: ruleVolumeConnector_short EOF
            {
             before(grammarAccess.getVolumeConnector_shortRule()); 
            pushFollow(FOLLOW_1);
            ruleVolumeConnector_short();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_shortRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVolumeConnector_short"


    // $ANTLR start "ruleVolumeConnector_short"
    // InternalDockerCompose.g:387:1: ruleVolumeConnector_short : ( ( rule__VolumeConnector_short__Group__0 ) ) ;
    public final void ruleVolumeConnector_short() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:391:2: ( ( ( rule__VolumeConnector_short__Group__0 ) ) )
            // InternalDockerCompose.g:392:2: ( ( rule__VolumeConnector_short__Group__0 ) )
            {
            // InternalDockerCompose.g:392:2: ( ( rule__VolumeConnector_short__Group__0 ) )
            // InternalDockerCompose.g:393:3: ( rule__VolumeConnector_short__Group__0 )
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getGroup()); 
            // InternalDockerCompose.g:394:3: ( rule__VolumeConnector_short__Group__0 )
            // InternalDockerCompose.g:394:4: rule__VolumeConnector_short__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_shortAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVolumeConnector_short"


    // $ANTLR start "entryRuleConfigConnector_long"
    // InternalDockerCompose.g:403:1: entryRuleConfigConnector_long : ruleConfigConnector_long EOF ;
    public final void entryRuleConfigConnector_long() throws RecognitionException {
        try {
            // InternalDockerCompose.g:404:1: ( ruleConfigConnector_long EOF )
            // InternalDockerCompose.g:405:1: ruleConfigConnector_long EOF
            {
             before(grammarAccess.getConfigConnector_longRule()); 
            pushFollow(FOLLOW_1);
            ruleConfigConnector_long();

            state._fsp--;

             after(grammarAccess.getConfigConnector_longRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConfigConnector_long"


    // $ANTLR start "ruleConfigConnector_long"
    // InternalDockerCompose.g:412:1: ruleConfigConnector_long : ( ( rule__ConfigConnector_long__Group__0 ) ) ;
    public final void ruleConfigConnector_long() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:416:2: ( ( ( rule__ConfigConnector_long__Group__0 ) ) )
            // InternalDockerCompose.g:417:2: ( ( rule__ConfigConnector_long__Group__0 ) )
            {
            // InternalDockerCompose.g:417:2: ( ( rule__ConfigConnector_long__Group__0 ) )
            // InternalDockerCompose.g:418:3: ( rule__ConfigConnector_long__Group__0 )
            {
             before(grammarAccess.getConfigConnector_longAccess().getGroup()); 
            // InternalDockerCompose.g:419:3: ( rule__ConfigConnector_long__Group__0 )
            // InternalDockerCompose.g:419:4: rule__ConfigConnector_long__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnector_longAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConfigConnector_long"


    // $ANTLR start "entryRuleConfigConnector_short"
    // InternalDockerCompose.g:428:1: entryRuleConfigConnector_short : ruleConfigConnector_short EOF ;
    public final void entryRuleConfigConnector_short() throws RecognitionException {
        try {
            // InternalDockerCompose.g:429:1: ( ruleConfigConnector_short EOF )
            // InternalDockerCompose.g:430:1: ruleConfigConnector_short EOF
            {
             before(grammarAccess.getConfigConnector_shortRule()); 
            pushFollow(FOLLOW_1);
            ruleConfigConnector_short();

            state._fsp--;

             after(grammarAccess.getConfigConnector_shortRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConfigConnector_short"


    // $ANTLR start "ruleConfigConnector_short"
    // InternalDockerCompose.g:437:1: ruleConfigConnector_short : ( ( rule__ConfigConnector_short__Group__0 ) ) ;
    public final void ruleConfigConnector_short() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:441:2: ( ( ( rule__ConfigConnector_short__Group__0 ) ) )
            // InternalDockerCompose.g:442:2: ( ( rule__ConfigConnector_short__Group__0 ) )
            {
            // InternalDockerCompose.g:442:2: ( ( rule__ConfigConnector_short__Group__0 ) )
            // InternalDockerCompose.g:443:3: ( rule__ConfigConnector_short__Group__0 )
            {
             before(grammarAccess.getConfigConnector_shortAccess().getGroup()); 
            // InternalDockerCompose.g:444:3: ( rule__ConfigConnector_short__Group__0 )
            // InternalDockerCompose.g:444:4: rule__ConfigConnector_short__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_short__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnector_shortAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConfigConnector_short"


    // $ANTLR start "entryRuleSecretConnector_long"
    // InternalDockerCompose.g:453:1: entryRuleSecretConnector_long : ruleSecretConnector_long EOF ;
    public final void entryRuleSecretConnector_long() throws RecognitionException {
        try {
            // InternalDockerCompose.g:454:1: ( ruleSecretConnector_long EOF )
            // InternalDockerCompose.g:455:1: ruleSecretConnector_long EOF
            {
             before(grammarAccess.getSecretConnector_longRule()); 
            pushFollow(FOLLOW_1);
            ruleSecretConnector_long();

            state._fsp--;

             after(grammarAccess.getSecretConnector_longRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSecretConnector_long"


    // $ANTLR start "ruleSecretConnector_long"
    // InternalDockerCompose.g:462:1: ruleSecretConnector_long : ( ( rule__SecretConnector_long__Group__0 ) ) ;
    public final void ruleSecretConnector_long() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:466:2: ( ( ( rule__SecretConnector_long__Group__0 ) ) )
            // InternalDockerCompose.g:467:2: ( ( rule__SecretConnector_long__Group__0 ) )
            {
            // InternalDockerCompose.g:467:2: ( ( rule__SecretConnector_long__Group__0 ) )
            // InternalDockerCompose.g:468:3: ( rule__SecretConnector_long__Group__0 )
            {
             before(grammarAccess.getSecretConnector_longAccess().getGroup()); 
            // InternalDockerCompose.g:469:3: ( rule__SecretConnector_long__Group__0 )
            // InternalDockerCompose.g:469:4: rule__SecretConnector_long__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnector_longAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSecretConnector_long"


    // $ANTLR start "entryRuleSecretConnector_short"
    // InternalDockerCompose.g:478:1: entryRuleSecretConnector_short : ruleSecretConnector_short EOF ;
    public final void entryRuleSecretConnector_short() throws RecognitionException {
        try {
            // InternalDockerCompose.g:479:1: ( ruleSecretConnector_short EOF )
            // InternalDockerCompose.g:480:1: ruleSecretConnector_short EOF
            {
             before(grammarAccess.getSecretConnector_shortRule()); 
            pushFollow(FOLLOW_1);
            ruleSecretConnector_short();

            state._fsp--;

             after(grammarAccess.getSecretConnector_shortRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSecretConnector_short"


    // $ANTLR start "ruleSecretConnector_short"
    // InternalDockerCompose.g:487:1: ruleSecretConnector_short : ( ( rule__SecretConnector_short__Group__0 ) ) ;
    public final void ruleSecretConnector_short() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:491:2: ( ( ( rule__SecretConnector_short__Group__0 ) ) )
            // InternalDockerCompose.g:492:2: ( ( rule__SecretConnector_short__Group__0 ) )
            {
            // InternalDockerCompose.g:492:2: ( ( rule__SecretConnector_short__Group__0 ) )
            // InternalDockerCompose.g:493:3: ( rule__SecretConnector_short__Group__0 )
            {
             before(grammarAccess.getSecretConnector_shortAccess().getGroup()); 
            // InternalDockerCompose.g:494:3: ( rule__SecretConnector_short__Group__0 )
            // InternalDockerCompose.g:494:4: rule__SecretConnector_short__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_short__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnector_shortAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSecretConnector_short"


    // $ANTLR start "entryRuleNetwork"
    // InternalDockerCompose.g:503:1: entryRuleNetwork : ruleNetwork EOF ;
    public final void entryRuleNetwork() throws RecognitionException {
        try {
            // InternalDockerCompose.g:504:1: ( ruleNetwork EOF )
            // InternalDockerCompose.g:505:1: ruleNetwork EOF
            {
             before(grammarAccess.getNetworkRule()); 
            pushFollow(FOLLOW_1);
            ruleNetwork();

            state._fsp--;

             after(grammarAccess.getNetworkRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNetwork"


    // $ANTLR start "ruleNetwork"
    // InternalDockerCompose.g:512:1: ruleNetwork : ( ( rule__Network__Group__0 ) ) ;
    public final void ruleNetwork() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:516:2: ( ( ( rule__Network__Group__0 ) ) )
            // InternalDockerCompose.g:517:2: ( ( rule__Network__Group__0 ) )
            {
            // InternalDockerCompose.g:517:2: ( ( rule__Network__Group__0 ) )
            // InternalDockerCompose.g:518:3: ( rule__Network__Group__0 )
            {
             before(grammarAccess.getNetworkAccess().getGroup()); 
            // InternalDockerCompose.g:519:3: ( rule__Network__Group__0 )
            // InternalDockerCompose.g:519:4: rule__Network__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNetwork"


    // $ANTLR start "entryRuleVolume"
    // InternalDockerCompose.g:528:1: entryRuleVolume : ruleVolume EOF ;
    public final void entryRuleVolume() throws RecognitionException {
        try {
            // InternalDockerCompose.g:529:1: ( ruleVolume EOF )
            // InternalDockerCompose.g:530:1: ruleVolume EOF
            {
             before(grammarAccess.getVolumeRule()); 
            pushFollow(FOLLOW_1);
            ruleVolume();

            state._fsp--;

             after(grammarAccess.getVolumeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVolume"


    // $ANTLR start "ruleVolume"
    // InternalDockerCompose.g:537:1: ruleVolume : ( ( rule__Volume__Group__0 ) ) ;
    public final void ruleVolume() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:541:2: ( ( ( rule__Volume__Group__0 ) ) )
            // InternalDockerCompose.g:542:2: ( ( rule__Volume__Group__0 ) )
            {
            // InternalDockerCompose.g:542:2: ( ( rule__Volume__Group__0 ) )
            // InternalDockerCompose.g:543:3: ( rule__Volume__Group__0 )
            {
             before(grammarAccess.getVolumeAccess().getGroup()); 
            // InternalDockerCompose.g:544:3: ( rule__Volume__Group__0 )
            // InternalDockerCompose.g:544:4: rule__Volume__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVolume"


    // $ANTLR start "entryRuleConfig"
    // InternalDockerCompose.g:553:1: entryRuleConfig : ruleConfig EOF ;
    public final void entryRuleConfig() throws RecognitionException {
        try {
            // InternalDockerCompose.g:554:1: ( ruleConfig EOF )
            // InternalDockerCompose.g:555:1: ruleConfig EOF
            {
             before(grammarAccess.getConfigRule()); 
            pushFollow(FOLLOW_1);
            ruleConfig();

            state._fsp--;

             after(grammarAccess.getConfigRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConfig"


    // $ANTLR start "ruleConfig"
    // InternalDockerCompose.g:562:1: ruleConfig : ( ( rule__Config__Group__0 ) ) ;
    public final void ruleConfig() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:566:2: ( ( ( rule__Config__Group__0 ) ) )
            // InternalDockerCompose.g:567:2: ( ( rule__Config__Group__0 ) )
            {
            // InternalDockerCompose.g:567:2: ( ( rule__Config__Group__0 ) )
            // InternalDockerCompose.g:568:3: ( rule__Config__Group__0 )
            {
             before(grammarAccess.getConfigAccess().getGroup()); 
            // InternalDockerCompose.g:569:3: ( rule__Config__Group__0 )
            // InternalDockerCompose.g:569:4: rule__Config__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Config__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getConfigAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConfig"


    // $ANTLR start "entryRuleSecret"
    // InternalDockerCompose.g:578:1: entryRuleSecret : ruleSecret EOF ;
    public final void entryRuleSecret() throws RecognitionException {
        try {
            // InternalDockerCompose.g:579:1: ( ruleSecret EOF )
            // InternalDockerCompose.g:580:1: ruleSecret EOF
            {
             before(grammarAccess.getSecretRule()); 
            pushFollow(FOLLOW_1);
            ruleSecret();

            state._fsp--;

             after(grammarAccess.getSecretRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSecret"


    // $ANTLR start "ruleSecret"
    // InternalDockerCompose.g:587:1: ruleSecret : ( ( rule__Secret__Group__0 ) ) ;
    public final void ruleSecret() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:591:2: ( ( ( rule__Secret__Group__0 ) ) )
            // InternalDockerCompose.g:592:2: ( ( rule__Secret__Group__0 ) )
            {
            // InternalDockerCompose.g:592:2: ( ( rule__Secret__Group__0 ) )
            // InternalDockerCompose.g:593:3: ( rule__Secret__Group__0 )
            {
             before(grammarAccess.getSecretAccess().getGroup()); 
            // InternalDockerCompose.g:594:3: ( rule__Secret__Group__0 )
            // InternalDockerCompose.g:594:4: rule__Secret__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSecret"


    // $ANTLR start "entryRuleVolumeLabel"
    // InternalDockerCompose.g:603:1: entryRuleVolumeLabel : ruleVolumeLabel EOF ;
    public final void entryRuleVolumeLabel() throws RecognitionException {
        try {
            // InternalDockerCompose.g:604:1: ( ruleVolumeLabel EOF )
            // InternalDockerCompose.g:605:1: ruleVolumeLabel EOF
            {
             before(grammarAccess.getVolumeLabelRule()); 
            pushFollow(FOLLOW_1);
            ruleVolumeLabel();

            state._fsp--;

             after(grammarAccess.getVolumeLabelRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVolumeLabel"


    // $ANTLR start "ruleVolumeLabel"
    // InternalDockerCompose.g:612:1: ruleVolumeLabel : ( ( rule__VolumeLabel__Group__0 ) ) ;
    public final void ruleVolumeLabel() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:616:2: ( ( ( rule__VolumeLabel__Group__0 ) ) )
            // InternalDockerCompose.g:617:2: ( ( rule__VolumeLabel__Group__0 ) )
            {
            // InternalDockerCompose.g:617:2: ( ( rule__VolumeLabel__Group__0 ) )
            // InternalDockerCompose.g:618:3: ( rule__VolumeLabel__Group__0 )
            {
             before(grammarAccess.getVolumeLabelAccess().getGroup()); 
            // InternalDockerCompose.g:619:3: ( rule__VolumeLabel__Group__0 )
            // InternalDockerCompose.g:619:4: rule__VolumeLabel__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VolumeLabel__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getVolumeLabelAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVolumeLabel"


    // $ANTLR start "entryRuleVolumeDriverOpt"
    // InternalDockerCompose.g:628:1: entryRuleVolumeDriverOpt : ruleVolumeDriverOpt EOF ;
    public final void entryRuleVolumeDriverOpt() throws RecognitionException {
        try {
            // InternalDockerCompose.g:629:1: ( ruleVolumeDriverOpt EOF )
            // InternalDockerCompose.g:630:1: ruleVolumeDriverOpt EOF
            {
             before(grammarAccess.getVolumeDriverOptRule()); 
            pushFollow(FOLLOW_1);
            ruleVolumeDriverOpt();

            state._fsp--;

             after(grammarAccess.getVolumeDriverOptRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVolumeDriverOpt"


    // $ANTLR start "ruleVolumeDriverOpt"
    // InternalDockerCompose.g:637:1: ruleVolumeDriverOpt : ( ( rule__VolumeDriverOpt__Group__0 ) ) ;
    public final void ruleVolumeDriverOpt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:641:2: ( ( ( rule__VolumeDriverOpt__Group__0 ) ) )
            // InternalDockerCompose.g:642:2: ( ( rule__VolumeDriverOpt__Group__0 ) )
            {
            // InternalDockerCompose.g:642:2: ( ( rule__VolumeDriverOpt__Group__0 ) )
            // InternalDockerCompose.g:643:3: ( rule__VolumeDriverOpt__Group__0 )
            {
             before(grammarAccess.getVolumeDriverOptAccess().getGroup()); 
            // InternalDockerCompose.g:644:3: ( rule__VolumeDriverOpt__Group__0 )
            // InternalDockerCompose.g:644:4: rule__VolumeDriverOpt__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getVolumeDriverOptAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVolumeDriverOpt"


    // $ANTLR start "entryRuleNetworkLabel"
    // InternalDockerCompose.g:653:1: entryRuleNetworkLabel : ruleNetworkLabel EOF ;
    public final void entryRuleNetworkLabel() throws RecognitionException {
        try {
            // InternalDockerCompose.g:654:1: ( ruleNetworkLabel EOF )
            // InternalDockerCompose.g:655:1: ruleNetworkLabel EOF
            {
             before(grammarAccess.getNetworkLabelRule()); 
            pushFollow(FOLLOW_1);
            ruleNetworkLabel();

            state._fsp--;

             after(grammarAccess.getNetworkLabelRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNetworkLabel"


    // $ANTLR start "ruleNetworkLabel"
    // InternalDockerCompose.g:662:1: ruleNetworkLabel : ( ( rule__NetworkLabel__Group__0 ) ) ;
    public final void ruleNetworkLabel() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:666:2: ( ( ( rule__NetworkLabel__Group__0 ) ) )
            // InternalDockerCompose.g:667:2: ( ( rule__NetworkLabel__Group__0 ) )
            {
            // InternalDockerCompose.g:667:2: ( ( rule__NetworkLabel__Group__0 ) )
            // InternalDockerCompose.g:668:3: ( rule__NetworkLabel__Group__0 )
            {
             before(grammarAccess.getNetworkLabelAccess().getGroup()); 
            // InternalDockerCompose.g:669:3: ( rule__NetworkLabel__Group__0 )
            // InternalDockerCompose.g:669:4: rule__NetworkLabel__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NetworkLabel__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkLabelAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNetworkLabel"


    // $ANTLR start "entryRuleNetworkDriverOpt"
    // InternalDockerCompose.g:678:1: entryRuleNetworkDriverOpt : ruleNetworkDriverOpt EOF ;
    public final void entryRuleNetworkDriverOpt() throws RecognitionException {
        try {
            // InternalDockerCompose.g:679:1: ( ruleNetworkDriverOpt EOF )
            // InternalDockerCompose.g:680:1: ruleNetworkDriverOpt EOF
            {
             before(grammarAccess.getNetworkDriverOptRule()); 
            pushFollow(FOLLOW_1);
            ruleNetworkDriverOpt();

            state._fsp--;

             after(grammarAccess.getNetworkDriverOptRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNetworkDriverOpt"


    // $ANTLR start "ruleNetworkDriverOpt"
    // InternalDockerCompose.g:687:1: ruleNetworkDriverOpt : ( ( rule__NetworkDriverOpt__Group__0 ) ) ;
    public final void ruleNetworkDriverOpt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:691:2: ( ( ( rule__NetworkDriverOpt__Group__0 ) ) )
            // InternalDockerCompose.g:692:2: ( ( rule__NetworkDriverOpt__Group__0 ) )
            {
            // InternalDockerCompose.g:692:2: ( ( rule__NetworkDriverOpt__Group__0 ) )
            // InternalDockerCompose.g:693:3: ( rule__NetworkDriverOpt__Group__0 )
            {
             before(grammarAccess.getNetworkDriverOptAccess().getGroup()); 
            // InternalDockerCompose.g:694:3: ( rule__NetworkDriverOpt__Group__0 )
            // InternalDockerCompose.g:694:4: rule__NetworkDriverOpt__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkDriverOptAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNetworkDriverOpt"


    // $ANTLR start "entryRuleIPAM"
    // InternalDockerCompose.g:703:1: entryRuleIPAM : ruleIPAM EOF ;
    public final void entryRuleIPAM() throws RecognitionException {
        try {
            // InternalDockerCompose.g:704:1: ( ruleIPAM EOF )
            // InternalDockerCompose.g:705:1: ruleIPAM EOF
            {
             before(grammarAccess.getIPAMRule()); 
            pushFollow(FOLLOW_1);
            ruleIPAM();

            state._fsp--;

             after(grammarAccess.getIPAMRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIPAM"


    // $ANTLR start "ruleIPAM"
    // InternalDockerCompose.g:712:1: ruleIPAM : ( ( rule__IPAM__Group__0 ) ) ;
    public final void ruleIPAM() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:716:2: ( ( ( rule__IPAM__Group__0 ) ) )
            // InternalDockerCompose.g:717:2: ( ( rule__IPAM__Group__0 ) )
            {
            // InternalDockerCompose.g:717:2: ( ( rule__IPAM__Group__0 ) )
            // InternalDockerCompose.g:718:3: ( rule__IPAM__Group__0 )
            {
             before(grammarAccess.getIPAMAccess().getGroup()); 
            // InternalDockerCompose.g:719:3: ( rule__IPAM__Group__0 )
            // InternalDockerCompose.g:719:4: rule__IPAM__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIPAM"


    // $ANTLR start "entryRuleIPAMConfig"
    // InternalDockerCompose.g:728:1: entryRuleIPAMConfig : ruleIPAMConfig EOF ;
    public final void entryRuleIPAMConfig() throws RecognitionException {
        try {
            // InternalDockerCompose.g:729:1: ( ruleIPAMConfig EOF )
            // InternalDockerCompose.g:730:1: ruleIPAMConfig EOF
            {
             before(grammarAccess.getIPAMConfigRule()); 
            pushFollow(FOLLOW_1);
            ruleIPAMConfig();

            state._fsp--;

             after(grammarAccess.getIPAMConfigRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIPAMConfig"


    // $ANTLR start "ruleIPAMConfig"
    // InternalDockerCompose.g:737:1: ruleIPAMConfig : ( ( rule__IPAMConfig__Group__0 ) ) ;
    public final void ruleIPAMConfig() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:741:2: ( ( ( rule__IPAMConfig__Group__0 ) ) )
            // InternalDockerCompose.g:742:2: ( ( rule__IPAMConfig__Group__0 ) )
            {
            // InternalDockerCompose.g:742:2: ( ( rule__IPAMConfig__Group__0 ) )
            // InternalDockerCompose.g:743:3: ( rule__IPAMConfig__Group__0 )
            {
             before(grammarAccess.getIPAMConfigAccess().getGroup()); 
            // InternalDockerCompose.g:744:3: ( rule__IPAMConfig__Group__0 )
            // InternalDockerCompose.g:744:4: rule__IPAMConfig__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIPAMConfigAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIPAMConfig"


    // $ANTLR start "entryRuleIPAMOption"
    // InternalDockerCompose.g:753:1: entryRuleIPAMOption : ruleIPAMOption EOF ;
    public final void entryRuleIPAMOption() throws RecognitionException {
        try {
            // InternalDockerCompose.g:754:1: ( ruleIPAMOption EOF )
            // InternalDockerCompose.g:755:1: ruleIPAMOption EOF
            {
             before(grammarAccess.getIPAMOptionRule()); 
            pushFollow(FOLLOW_1);
            ruleIPAMOption();

            state._fsp--;

             after(grammarAccess.getIPAMOptionRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIPAMOption"


    // $ANTLR start "ruleIPAMOption"
    // InternalDockerCompose.g:762:1: ruleIPAMOption : ( ( rule__IPAMOption__Group__0 ) ) ;
    public final void ruleIPAMOption() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:766:2: ( ( ( rule__IPAMOption__Group__0 ) ) )
            // InternalDockerCompose.g:767:2: ( ( rule__IPAMOption__Group__0 ) )
            {
            // InternalDockerCompose.g:767:2: ( ( rule__IPAMOption__Group__0 ) )
            // InternalDockerCompose.g:768:3: ( rule__IPAMOption__Group__0 )
            {
             before(grammarAccess.getIPAMOptionAccess().getGroup()); 
            // InternalDockerCompose.g:769:3: ( rule__IPAMOption__Group__0 )
            // InternalDockerCompose.g:769:4: rule__IPAMOption__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IPAMOption__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIPAMOptionAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIPAMOption"


    // $ANTLR start "entryRuleIPAMAddress"
    // InternalDockerCompose.g:778:1: entryRuleIPAMAddress : ruleIPAMAddress EOF ;
    public final void entryRuleIPAMAddress() throws RecognitionException {
        try {
            // InternalDockerCompose.g:779:1: ( ruleIPAMAddress EOF )
            // InternalDockerCompose.g:780:1: ruleIPAMAddress EOF
            {
             before(grammarAccess.getIPAMAddressRule()); 
            pushFollow(FOLLOW_1);
            ruleIPAMAddress();

            state._fsp--;

             after(grammarAccess.getIPAMAddressRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIPAMAddress"


    // $ANTLR start "ruleIPAMAddress"
    // InternalDockerCompose.g:787:1: ruleIPAMAddress : ( ( rule__IPAMAddress__Group__0 ) ) ;
    public final void ruleIPAMAddress() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:791:2: ( ( ( rule__IPAMAddress__Group__0 ) ) )
            // InternalDockerCompose.g:792:2: ( ( rule__IPAMAddress__Group__0 ) )
            {
            // InternalDockerCompose.g:792:2: ( ( rule__IPAMAddress__Group__0 ) )
            // InternalDockerCompose.g:793:3: ( rule__IPAMAddress__Group__0 )
            {
             before(grammarAccess.getIPAMAddressAccess().getGroup()); 
            // InternalDockerCompose.g:794:3: ( rule__IPAMAddress__Group__0 )
            // InternalDockerCompose.g:794:4: rule__IPAMAddress__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IPAMAddress__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAddressAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIPAMAddress"


    // $ANTLR start "entryRulePATH"
    // InternalDockerCompose.g:803:1: entryRulePATH : rulePATH EOF ;
    public final void entryRulePATH() throws RecognitionException {
        try {
            // InternalDockerCompose.g:804:1: ( rulePATH EOF )
            // InternalDockerCompose.g:805:1: rulePATH EOF
            {
             before(grammarAccess.getPATHRule()); 
            pushFollow(FOLLOW_1);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getPATHRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePATH"


    // $ANTLR start "rulePATH"
    // InternalDockerCompose.g:812:1: rulePATH : ( ( rule__PATH__Alternatives ) ) ;
    public final void rulePATH() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:816:2: ( ( ( rule__PATH__Alternatives ) ) )
            // InternalDockerCompose.g:817:2: ( ( rule__PATH__Alternatives ) )
            {
            // InternalDockerCompose.g:817:2: ( ( rule__PATH__Alternatives ) )
            // InternalDockerCompose.g:818:3: ( rule__PATH__Alternatives )
            {
             before(grammarAccess.getPATHAccess().getAlternatives()); 
            // InternalDockerCompose.g:819:3: ( rule__PATH__Alternatives )
            // InternalDockerCompose.g:819:4: rule__PATH__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getPATHAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePATH"


    // $ANTLR start "entryRuleEString"
    // InternalDockerCompose.g:828:1: entryRuleEString : ruleEString EOF ;
    public final void entryRuleEString() throws RecognitionException {
        try {
            // InternalDockerCompose.g:829:1: ( ruleEString EOF )
            // InternalDockerCompose.g:830:1: ruleEString EOF
            {
             before(grammarAccess.getEStringRule()); 
            pushFollow(FOLLOW_1);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getEStringRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEString"


    // $ANTLR start "ruleEString"
    // InternalDockerCompose.g:837:1: ruleEString : ( ( rule__EString__Alternatives ) ) ;
    public final void ruleEString() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:841:2: ( ( ( rule__EString__Alternatives ) ) )
            // InternalDockerCompose.g:842:2: ( ( rule__EString__Alternatives ) )
            {
            // InternalDockerCompose.g:842:2: ( ( rule__EString__Alternatives ) )
            // InternalDockerCompose.g:843:3: ( rule__EString__Alternatives )
            {
             before(grammarAccess.getEStringAccess().getAlternatives()); 
            // InternalDockerCompose.g:844:3: ( rule__EString__Alternatives )
            // InternalDockerCompose.g:844:4: rule__EString__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EString__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getEStringAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEString"


    // $ANTLR start "entryRuleEInt"
    // InternalDockerCompose.g:853:1: entryRuleEInt : ruleEInt EOF ;
    public final void entryRuleEInt() throws RecognitionException {
        try {
            // InternalDockerCompose.g:854:1: ( ruleEInt EOF )
            // InternalDockerCompose.g:855:1: ruleEInt EOF
            {
             before(grammarAccess.getEIntRule()); 
            pushFollow(FOLLOW_1);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getEIntRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEInt"


    // $ANTLR start "ruleEInt"
    // InternalDockerCompose.g:862:1: ruleEInt : ( RULE_INT ) ;
    public final void ruleEInt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:866:2: ( ( RULE_INT ) )
            // InternalDockerCompose.g:867:2: ( RULE_INT )
            {
            // InternalDockerCompose.g:867:2: ( RULE_INT )
            // InternalDockerCompose.g:868:3: RULE_INT
            {
             before(grammarAccess.getEIntAccess().getINTTerminalRuleCall()); 
            match(input,RULE_INT,FOLLOW_2); 
             after(grammarAccess.getEIntAccess().getINTTerminalRuleCall()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEInt"


    // $ANTLR start "entryRuleDNS"
    // InternalDockerCompose.g:878:1: entryRuleDNS : ruleDNS EOF ;
    public final void entryRuleDNS() throws RecognitionException {
        try {
            // InternalDockerCompose.g:879:1: ( ruleDNS EOF )
            // InternalDockerCompose.g:880:1: ruleDNS EOF
            {
             before(grammarAccess.getDNSRule()); 
            pushFollow(FOLLOW_1);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getDNSRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDNS"


    // $ANTLR start "ruleDNS"
    // InternalDockerCompose.g:887:1: ruleDNS : ( ( rule__DNS__Group__0 ) ) ;
    public final void ruleDNS() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:891:2: ( ( ( rule__DNS__Group__0 ) ) )
            // InternalDockerCompose.g:892:2: ( ( rule__DNS__Group__0 ) )
            {
            // InternalDockerCompose.g:892:2: ( ( rule__DNS__Group__0 ) )
            // InternalDockerCompose.g:893:3: ( rule__DNS__Group__0 )
            {
             before(grammarAccess.getDNSAccess().getGroup()); 
            // InternalDockerCompose.g:894:3: ( rule__DNS__Group__0 )
            // InternalDockerCompose.g:894:4: rule__DNS__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DNS__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDNSAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDNS"


    // $ANTLR start "entryRuleNetworkAddress"
    // InternalDockerCompose.g:903:1: entryRuleNetworkAddress : ruleNetworkAddress EOF ;
    public final void entryRuleNetworkAddress() throws RecognitionException {
        try {
            // InternalDockerCompose.g:904:1: ( ruleNetworkAddress EOF )
            // InternalDockerCompose.g:905:1: ruleNetworkAddress EOF
            {
             before(grammarAccess.getNetworkAddressRule()); 
            pushFollow(FOLLOW_1);
            ruleNetworkAddress();

            state._fsp--;

             after(grammarAccess.getNetworkAddressRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNetworkAddress"


    // $ANTLR start "ruleNetworkAddress"
    // InternalDockerCompose.g:912:1: ruleNetworkAddress : ( ( rule__NetworkAddress__Group__0 ) ) ;
    public final void ruleNetworkAddress() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:916:2: ( ( ( rule__NetworkAddress__Group__0 ) ) )
            // InternalDockerCompose.g:917:2: ( ( rule__NetworkAddress__Group__0 ) )
            {
            // InternalDockerCompose.g:917:2: ( ( rule__NetworkAddress__Group__0 ) )
            // InternalDockerCompose.g:918:3: ( rule__NetworkAddress__Group__0 )
            {
             before(grammarAccess.getNetworkAddressAccess().getGroup()); 
            // InternalDockerCompose.g:919:3: ( rule__NetworkAddress__Group__0 )
            // InternalDockerCompose.g:919:4: rule__NetworkAddress__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAddressAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNetworkAddress"


    // $ANTLR start "entryRuleEBoolean"
    // InternalDockerCompose.g:928:1: entryRuleEBoolean : ruleEBoolean EOF ;
    public final void entryRuleEBoolean() throws RecognitionException {
        try {
            // InternalDockerCompose.g:929:1: ( ruleEBoolean EOF )
            // InternalDockerCompose.g:930:1: ruleEBoolean EOF
            {
             before(grammarAccess.getEBooleanRule()); 
            pushFollow(FOLLOW_1);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getEBooleanRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEBoolean"


    // $ANTLR start "ruleEBoolean"
    // InternalDockerCompose.g:937:1: ruleEBoolean : ( ( rule__EBoolean__Alternatives ) ) ;
    public final void ruleEBoolean() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:941:2: ( ( ( rule__EBoolean__Alternatives ) ) )
            // InternalDockerCompose.g:942:2: ( ( rule__EBoolean__Alternatives ) )
            {
            // InternalDockerCompose.g:942:2: ( ( rule__EBoolean__Alternatives ) )
            // InternalDockerCompose.g:943:3: ( rule__EBoolean__Alternatives )
            {
             before(grammarAccess.getEBooleanAccess().getAlternatives()); 
            // InternalDockerCompose.g:944:3: ( rule__EBoolean__Alternatives )
            // InternalDockerCompose.g:944:4: rule__EBoolean__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EBoolean__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getEBooleanAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEBoolean"


    // $ANTLR start "ruleRestartPolicy"
    // InternalDockerCompose.g:953:1: ruleRestartPolicy : ( ( rule__RestartPolicy__Alternatives ) ) ;
    public final void ruleRestartPolicy() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:957:1: ( ( ( rule__RestartPolicy__Alternatives ) ) )
            // InternalDockerCompose.g:958:2: ( ( rule__RestartPolicy__Alternatives ) )
            {
            // InternalDockerCompose.g:958:2: ( ( rule__RestartPolicy__Alternatives ) )
            // InternalDockerCompose.g:959:3: ( rule__RestartPolicy__Alternatives )
            {
             before(grammarAccess.getRestartPolicyAccess().getAlternatives()); 
            // InternalDockerCompose.g:960:3: ( rule__RestartPolicy__Alternatives )
            // InternalDockerCompose.g:960:4: rule__RestartPolicy__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__RestartPolicy__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getRestartPolicyAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRestartPolicy"


    // $ANTLR start "ruleAccessMode"
    // InternalDockerCompose.g:969:1: ruleAccessMode : ( ( rule__AccessMode__Alternatives ) ) ;
    public final void ruleAccessMode() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:973:1: ( ( ( rule__AccessMode__Alternatives ) ) )
            // InternalDockerCompose.g:974:2: ( ( rule__AccessMode__Alternatives ) )
            {
            // InternalDockerCompose.g:974:2: ( ( rule__AccessMode__Alternatives ) )
            // InternalDockerCompose.g:975:3: ( rule__AccessMode__Alternatives )
            {
             before(grammarAccess.getAccessModeAccess().getAlternatives()); 
            // InternalDockerCompose.g:976:3: ( rule__AccessMode__Alternatives )
            // InternalDockerCompose.g:976:4: rule__AccessMode__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AccessMode__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getAccessModeAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAccessMode"


    // $ANTLR start "ruleMountType"
    // InternalDockerCompose.g:985:1: ruleMountType : ( ( rule__MountType__Alternatives ) ) ;
    public final void ruleMountType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:989:1: ( ( ( rule__MountType__Alternatives ) ) )
            // InternalDockerCompose.g:990:2: ( ( rule__MountType__Alternatives ) )
            {
            // InternalDockerCompose.g:990:2: ( ( rule__MountType__Alternatives ) )
            // InternalDockerCompose.g:991:3: ( rule__MountType__Alternatives )
            {
             before(grammarAccess.getMountTypeAccess().getAlternatives()); 
            // InternalDockerCompose.g:992:3: ( rule__MountType__Alternatives )
            // InternalDockerCompose.g:992:4: rule__MountType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__MountType__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getMountTypeAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMountType"


    // $ANTLR start "rulePropagationType"
    // InternalDockerCompose.g:1001:1: rulePropagationType : ( ( rule__PropagationType__Alternatives ) ) ;
    public final void rulePropagationType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1005:1: ( ( ( rule__PropagationType__Alternatives ) ) )
            // InternalDockerCompose.g:1006:2: ( ( rule__PropagationType__Alternatives ) )
            {
            // InternalDockerCompose.g:1006:2: ( ( rule__PropagationType__Alternatives ) )
            // InternalDockerCompose.g:1007:3: ( rule__PropagationType__Alternatives )
            {
             before(grammarAccess.getPropagationTypeAccess().getAlternatives()); 
            // InternalDockerCompose.g:1008:3: ( rule__PropagationType__Alternatives )
            // InternalDockerCompose.g:1008:4: rule__PropagationType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__PropagationType__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getPropagationTypeAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePropagationType"


    // $ANTLR start "ruleCondition"
    // InternalDockerCompose.g:1017:1: ruleCondition : ( ( rule__Condition__Alternatives ) ) ;
    public final void ruleCondition() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1021:1: ( ( ( rule__Condition__Alternatives ) ) )
            // InternalDockerCompose.g:1022:2: ( ( rule__Condition__Alternatives ) )
            {
            // InternalDockerCompose.g:1022:2: ( ( rule__Condition__Alternatives ) )
            // InternalDockerCompose.g:1023:3: ( rule__Condition__Alternatives )
            {
             before(grammarAccess.getConditionAccess().getAlternatives()); 
            // InternalDockerCompose.g:1024:3: ( rule__Condition__Alternatives )
            // InternalDockerCompose.g:1024:4: rule__Condition__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Condition__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getConditionAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCondition"


    // $ANTLR start "rule__Service__Alternatives_3_0"
    // InternalDockerCompose.g:1032:1: rule__Service__Alternatives_3_0 : ( ( ( rule__Service__Group_3_0_0__0 ) ) | ( ( rule__Service__Group_3_0_1__0 ) ) );
    public final void rule__Service__Alternatives_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1036:1: ( ( ( rule__Service__Group_3_0_0__0 ) ) | ( ( rule__Service__Group_3_0_1__0 ) ) )
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==47) ) {
                alt1=1;
            }
            else if ( (LA1_0==48) ) {
                alt1=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 1, 0, input);

                throw nvae;
            }
            switch (alt1) {
                case 1 :
                    // InternalDockerCompose.g:1037:2: ( ( rule__Service__Group_3_0_0__0 ) )
                    {
                    // InternalDockerCompose.g:1037:2: ( ( rule__Service__Group_3_0_0__0 ) )
                    // InternalDockerCompose.g:1038:3: ( rule__Service__Group_3_0_0__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_0_0()); 
                    // InternalDockerCompose.g:1039:3: ( rule__Service__Group_3_0_0__0 )
                    // InternalDockerCompose.g:1039:4: rule__Service__Group_3_0_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_0_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1043:2: ( ( rule__Service__Group_3_0_1__0 ) )
                    {
                    // InternalDockerCompose.g:1043:2: ( ( rule__Service__Group_3_0_1__0 ) )
                    // InternalDockerCompose.g:1044:3: ( rule__Service__Group_3_0_1__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_0_1()); 
                    // InternalDockerCompose.g:1045:3: ( rule__Service__Group_3_0_1__0 )
                    // InternalDockerCompose.g:1045:4: rule__Service__Group_3_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_0_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Alternatives_3_0"


    // $ANTLR start "rule__Service__Alternatives_3_8_1"
    // InternalDockerCompose.g:1053:1: rule__Service__Alternatives_3_8_1 : ( ( ( ( rule__Service__Depends_onAssignment_3_8_1_0 ) ) ( ( rule__Service__Depends_onAssignment_3_8_1_0 )* ) ) | ( ( ( rule__Service__Depends_onAssignment_3_8_1_1 ) ) ( ( rule__Service__Depends_onAssignment_3_8_1_1 )* ) ) );
    public final void rule__Service__Alternatives_3_8_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1057:1: ( ( ( ( rule__Service__Depends_onAssignment_3_8_1_0 ) ) ( ( rule__Service__Depends_onAssignment_3_8_1_0 )* ) ) | ( ( ( rule__Service__Depends_onAssignment_3_8_1_1 ) ) ( ( rule__Service__Depends_onAssignment_3_8_1_1 )* ) ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==56) ) {
                alt4=1;
            }
            else if ( ((LA4_0>=RULE_STRING && LA4_0<=RULE_ID)) ) {
                alt4=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalDockerCompose.g:1058:2: ( ( ( rule__Service__Depends_onAssignment_3_8_1_0 ) ) ( ( rule__Service__Depends_onAssignment_3_8_1_0 )* ) )
                    {
                    // InternalDockerCompose.g:1058:2: ( ( ( rule__Service__Depends_onAssignment_3_8_1_0 ) ) ( ( rule__Service__Depends_onAssignment_3_8_1_0 )* ) )
                    // InternalDockerCompose.g:1059:3: ( ( rule__Service__Depends_onAssignment_3_8_1_0 ) ) ( ( rule__Service__Depends_onAssignment_3_8_1_0 )* )
                    {
                    // InternalDockerCompose.g:1059:3: ( ( rule__Service__Depends_onAssignment_3_8_1_0 ) )
                    // InternalDockerCompose.g:1060:4: ( rule__Service__Depends_onAssignment_3_8_1_0 )
                    {
                     before(grammarAccess.getServiceAccess().getDepends_onAssignment_3_8_1_0()); 
                    // InternalDockerCompose.g:1061:4: ( rule__Service__Depends_onAssignment_3_8_1_0 )
                    // InternalDockerCompose.g:1061:5: rule__Service__Depends_onAssignment_3_8_1_0
                    {
                    pushFollow(FOLLOW_3);
                    rule__Service__Depends_onAssignment_3_8_1_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getDepends_onAssignment_3_8_1_0()); 

                    }

                    // InternalDockerCompose.g:1064:3: ( ( rule__Service__Depends_onAssignment_3_8_1_0 )* )
                    // InternalDockerCompose.g:1065:4: ( rule__Service__Depends_onAssignment_3_8_1_0 )*
                    {
                     before(grammarAccess.getServiceAccess().getDepends_onAssignment_3_8_1_0()); 
                    // InternalDockerCompose.g:1066:4: ( rule__Service__Depends_onAssignment_3_8_1_0 )*
                    loop2:
                    do {
                        int alt2=2;
                        int LA2_0 = input.LA(1);

                        if ( (LA2_0==56) ) {
                            alt2=1;
                        }


                        switch (alt2) {
                    	case 1 :
                    	    // InternalDockerCompose.g:1066:5: rule__Service__Depends_onAssignment_3_8_1_0
                    	    {
                    	    pushFollow(FOLLOW_3);
                    	    rule__Service__Depends_onAssignment_3_8_1_0();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop2;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getDepends_onAssignment_3_8_1_0()); 

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1071:2: ( ( ( rule__Service__Depends_onAssignment_3_8_1_1 ) ) ( ( rule__Service__Depends_onAssignment_3_8_1_1 )* ) )
                    {
                    // InternalDockerCompose.g:1071:2: ( ( ( rule__Service__Depends_onAssignment_3_8_1_1 ) ) ( ( rule__Service__Depends_onAssignment_3_8_1_1 )* ) )
                    // InternalDockerCompose.g:1072:3: ( ( rule__Service__Depends_onAssignment_3_8_1_1 ) ) ( ( rule__Service__Depends_onAssignment_3_8_1_1 )* )
                    {
                    // InternalDockerCompose.g:1072:3: ( ( rule__Service__Depends_onAssignment_3_8_1_1 ) )
                    // InternalDockerCompose.g:1073:4: ( rule__Service__Depends_onAssignment_3_8_1_1 )
                    {
                     before(grammarAccess.getServiceAccess().getDepends_onAssignment_3_8_1_1()); 
                    // InternalDockerCompose.g:1074:4: ( rule__Service__Depends_onAssignment_3_8_1_1 )
                    // InternalDockerCompose.g:1074:5: rule__Service__Depends_onAssignment_3_8_1_1
                    {
                    pushFollow(FOLLOW_4);
                    rule__Service__Depends_onAssignment_3_8_1_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getDepends_onAssignment_3_8_1_1()); 

                    }

                    // InternalDockerCompose.g:1077:3: ( ( rule__Service__Depends_onAssignment_3_8_1_1 )* )
                    // InternalDockerCompose.g:1078:4: ( rule__Service__Depends_onAssignment_3_8_1_1 )*
                    {
                     before(grammarAccess.getServiceAccess().getDepends_onAssignment_3_8_1_1()); 
                    // InternalDockerCompose.g:1079:4: ( rule__Service__Depends_onAssignment_3_8_1_1 )*
                    loop3:
                    do {
                        int alt3=2;
                        int LA3_0 = input.LA(1);

                        if ( (LA3_0==RULE_STRING) ) {
                            int LA3_2 = input.LA(2);

                            if ( (LA3_2==46) ) {
                                int LA3_4 = input.LA(3);

                                if ( (LA3_4==65) ) {
                                    alt3=1;
                                }


                            }


                        }
                        else if ( (LA3_0==RULE_ID) ) {
                            int LA3_3 = input.LA(2);

                            if ( (LA3_3==46) ) {
                                int LA3_4 = input.LA(3);

                                if ( (LA3_4==65) ) {
                                    alt3=1;
                                }


                            }


                        }


                        switch (alt3) {
                    	case 1 :
                    	    // InternalDockerCompose.g:1079:5: rule__Service__Depends_onAssignment_3_8_1_1
                    	    {
                    	    pushFollow(FOLLOW_4);
                    	    rule__Service__Depends_onAssignment_3_8_1_1();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop3;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getDepends_onAssignment_3_8_1_1()); 

                    }


                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Alternatives_3_8_1"


    // $ANTLR start "rule__Service__Alternatives_3_10_1"
    // InternalDockerCompose.g:1088:1: rule__Service__Alternatives_3_10_1 : ( ( ( ( rule__Service__Group_3_10_1_0__0 ) ) ( ( rule__Service__Group_3_10_1_0__0 )* ) ) | ( ( ( rule__Service__Group_3_10_1_1__0 ) ) ( ( rule__Service__Group_3_10_1_1__0 )* ) ) );
    public final void rule__Service__Alternatives_3_10_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1092:1: ( ( ( ( rule__Service__Group_3_10_1_0__0 ) ) ( ( rule__Service__Group_3_10_1_0__0 )* ) ) | ( ( ( rule__Service__Group_3_10_1_1__0 ) ) ( ( rule__Service__Group_3_10_1_1__0 )* ) ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==56) ) {
                int LA7_1 = input.LA(2);

                if ( (LA7_1==54||(LA7_1>=70 && LA7_1<=73)||LA7_1==75||LA7_1==77) ) {
                    alt7=2;
                }
                else if ( ((LA7_1>=RULE_STRING && LA7_1<=RULE_ID)) ) {
                    alt7=1;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 7, 1, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalDockerCompose.g:1093:2: ( ( ( rule__Service__Group_3_10_1_0__0 ) ) ( ( rule__Service__Group_3_10_1_0__0 )* ) )
                    {
                    // InternalDockerCompose.g:1093:2: ( ( ( rule__Service__Group_3_10_1_0__0 ) ) ( ( rule__Service__Group_3_10_1_0__0 )* ) )
                    // InternalDockerCompose.g:1094:3: ( ( rule__Service__Group_3_10_1_0__0 ) ) ( ( rule__Service__Group_3_10_1_0__0 )* )
                    {
                    // InternalDockerCompose.g:1094:3: ( ( rule__Service__Group_3_10_1_0__0 ) )
                    // InternalDockerCompose.g:1095:4: ( rule__Service__Group_3_10_1_0__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_10_1_0()); 
                    // InternalDockerCompose.g:1096:4: ( rule__Service__Group_3_10_1_0__0 )
                    // InternalDockerCompose.g:1096:5: rule__Service__Group_3_10_1_0__0
                    {
                    pushFollow(FOLLOW_3);
                    rule__Service__Group_3_10_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_10_1_0()); 

                    }

                    // InternalDockerCompose.g:1099:3: ( ( rule__Service__Group_3_10_1_0__0 )* )
                    // InternalDockerCompose.g:1100:4: ( rule__Service__Group_3_10_1_0__0 )*
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_10_1_0()); 
                    // InternalDockerCompose.g:1101:4: ( rule__Service__Group_3_10_1_0__0 )*
                    loop5:
                    do {
                        int alt5=2;
                        int LA5_0 = input.LA(1);

                        if ( (LA5_0==56) ) {
                            alt5=1;
                        }


                        switch (alt5) {
                    	case 1 :
                    	    // InternalDockerCompose.g:1101:5: rule__Service__Group_3_10_1_0__0
                    	    {
                    	    pushFollow(FOLLOW_3);
                    	    rule__Service__Group_3_10_1_0__0();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop5;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getGroup_3_10_1_0()); 

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1106:2: ( ( ( rule__Service__Group_3_10_1_1__0 ) ) ( ( rule__Service__Group_3_10_1_1__0 )* ) )
                    {
                    // InternalDockerCompose.g:1106:2: ( ( ( rule__Service__Group_3_10_1_1__0 ) ) ( ( rule__Service__Group_3_10_1_1__0 )* ) )
                    // InternalDockerCompose.g:1107:3: ( ( rule__Service__Group_3_10_1_1__0 ) ) ( ( rule__Service__Group_3_10_1_1__0 )* )
                    {
                    // InternalDockerCompose.g:1107:3: ( ( rule__Service__Group_3_10_1_1__0 ) )
                    // InternalDockerCompose.g:1108:4: ( rule__Service__Group_3_10_1_1__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_10_1_1()); 
                    // InternalDockerCompose.g:1109:4: ( rule__Service__Group_3_10_1_1__0 )
                    // InternalDockerCompose.g:1109:5: rule__Service__Group_3_10_1_1__0
                    {
                    pushFollow(FOLLOW_3);
                    rule__Service__Group_3_10_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_10_1_1()); 

                    }

                    // InternalDockerCompose.g:1112:3: ( ( rule__Service__Group_3_10_1_1__0 )* )
                    // InternalDockerCompose.g:1113:4: ( rule__Service__Group_3_10_1_1__0 )*
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_10_1_1()); 
                    // InternalDockerCompose.g:1114:4: ( rule__Service__Group_3_10_1_1__0 )*
                    loop6:
                    do {
                        int alt6=2;
                        int LA6_0 = input.LA(1);

                        if ( (LA6_0==56) ) {
                            alt6=1;
                        }


                        switch (alt6) {
                    	case 1 :
                    	    // InternalDockerCompose.g:1114:5: rule__Service__Group_3_10_1_1__0
                    	    {
                    	    pushFollow(FOLLOW_3);
                    	    rule__Service__Group_3_10_1_1__0();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop6;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getGroup_3_10_1_1()); 

                    }


                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Alternatives_3_10_1"


    // $ANTLR start "rule__Service__Alternatives_3_11_1"
    // InternalDockerCompose.g:1123:1: rule__Service__Alternatives_3_11_1 : ( ( ( ( rule__Service__Group_3_11_1_0__0 ) ) ( ( rule__Service__Group_3_11_1_0__0 )* ) ) | ( ( ( rule__Service__Group_3_11_1_1__0 ) ) ( ( rule__Service__Group_3_11_1_1__0 )* ) ) );
    public final void rule__Service__Alternatives_3_11_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1127:1: ( ( ( ( rule__Service__Group_3_11_1_0__0 ) ) ( ( rule__Service__Group_3_11_1_0__0 )* ) ) | ( ( ( rule__Service__Group_3_11_1_1__0 ) ) ( ( rule__Service__Group_3_11_1_1__0 )* ) ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==56) ) {
                int LA10_1 = input.LA(2);

                if ( (LA10_1==70||LA10_1==72||(LA10_1>=79 && LA10_1<=81)) ) {
                    alt10=2;
                }
                else if ( ((LA10_1>=RULE_STRING && LA10_1<=RULE_ID)) ) {
                    alt10=1;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 1, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalDockerCompose.g:1128:2: ( ( ( rule__Service__Group_3_11_1_0__0 ) ) ( ( rule__Service__Group_3_11_1_0__0 )* ) )
                    {
                    // InternalDockerCompose.g:1128:2: ( ( ( rule__Service__Group_3_11_1_0__0 ) ) ( ( rule__Service__Group_3_11_1_0__0 )* ) )
                    // InternalDockerCompose.g:1129:3: ( ( rule__Service__Group_3_11_1_0__0 ) ) ( ( rule__Service__Group_3_11_1_0__0 )* )
                    {
                    // InternalDockerCompose.g:1129:3: ( ( rule__Service__Group_3_11_1_0__0 ) )
                    // InternalDockerCompose.g:1130:4: ( rule__Service__Group_3_11_1_0__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_11_1_0()); 
                    // InternalDockerCompose.g:1131:4: ( rule__Service__Group_3_11_1_0__0 )
                    // InternalDockerCompose.g:1131:5: rule__Service__Group_3_11_1_0__0
                    {
                    pushFollow(FOLLOW_3);
                    rule__Service__Group_3_11_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_11_1_0()); 

                    }

                    // InternalDockerCompose.g:1134:3: ( ( rule__Service__Group_3_11_1_0__0 )* )
                    // InternalDockerCompose.g:1135:4: ( rule__Service__Group_3_11_1_0__0 )*
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_11_1_0()); 
                    // InternalDockerCompose.g:1136:4: ( rule__Service__Group_3_11_1_0__0 )*
                    loop8:
                    do {
                        int alt8=2;
                        int LA8_0 = input.LA(1);

                        if ( (LA8_0==56) ) {
                            alt8=1;
                        }


                        switch (alt8) {
                    	case 1 :
                    	    // InternalDockerCompose.g:1136:5: rule__Service__Group_3_11_1_0__0
                    	    {
                    	    pushFollow(FOLLOW_3);
                    	    rule__Service__Group_3_11_1_0__0();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop8;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getGroup_3_11_1_0()); 

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1141:2: ( ( ( rule__Service__Group_3_11_1_1__0 ) ) ( ( rule__Service__Group_3_11_1_1__0 )* ) )
                    {
                    // InternalDockerCompose.g:1141:2: ( ( ( rule__Service__Group_3_11_1_1__0 ) ) ( ( rule__Service__Group_3_11_1_1__0 )* ) )
                    // InternalDockerCompose.g:1142:3: ( ( rule__Service__Group_3_11_1_1__0 ) ) ( ( rule__Service__Group_3_11_1_1__0 )* )
                    {
                    // InternalDockerCompose.g:1142:3: ( ( rule__Service__Group_3_11_1_1__0 ) )
                    // InternalDockerCompose.g:1143:4: ( rule__Service__Group_3_11_1_1__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_11_1_1()); 
                    // InternalDockerCompose.g:1144:4: ( rule__Service__Group_3_11_1_1__0 )
                    // InternalDockerCompose.g:1144:5: rule__Service__Group_3_11_1_1__0
                    {
                    pushFollow(FOLLOW_3);
                    rule__Service__Group_3_11_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_11_1_1()); 

                    }

                    // InternalDockerCompose.g:1147:3: ( ( rule__Service__Group_3_11_1_1__0 )* )
                    // InternalDockerCompose.g:1148:4: ( rule__Service__Group_3_11_1_1__0 )*
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_11_1_1()); 
                    // InternalDockerCompose.g:1149:4: ( rule__Service__Group_3_11_1_1__0 )*
                    loop9:
                    do {
                        int alt9=2;
                        int LA9_0 = input.LA(1);

                        if ( (LA9_0==56) ) {
                            alt9=1;
                        }


                        switch (alt9) {
                    	case 1 :
                    	    // InternalDockerCompose.g:1149:5: rule__Service__Group_3_11_1_1__0
                    	    {
                    	    pushFollow(FOLLOW_3);
                    	    rule__Service__Group_3_11_1_1__0();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop9;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getGroup_3_11_1_1()); 

                    }


                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Alternatives_3_11_1"


    // $ANTLR start "rule__Service__Alternatives_3_12_1"
    // InternalDockerCompose.g:1158:1: rule__Service__Alternatives_3_12_1 : ( ( ( ( rule__Service__Group_3_12_1_0__0 ) ) ( ( rule__Service__Group_3_12_1_0__0 )* ) ) | ( ( ( rule__Service__Group_3_12_1_1__0 ) ) ( ( rule__Service__Group_3_12_1_1__0 )* ) ) );
    public final void rule__Service__Alternatives_3_12_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1162:1: ( ( ( ( rule__Service__Group_3_12_1_0__0 ) ) ( ( rule__Service__Group_3_12_1_0__0 )* ) ) | ( ( ( rule__Service__Group_3_12_1_1__0 ) ) ( ( rule__Service__Group_3_12_1_1__0 )* ) ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==56) ) {
                int LA13_1 = input.LA(2);

                if ( (LA13_1==70||LA13_1==72||(LA13_1>=79 && LA13_1<=81)) ) {
                    alt13=2;
                }
                else if ( ((LA13_1>=RULE_STRING && LA13_1<=RULE_ID)) ) {
                    alt13=1;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 13, 1, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalDockerCompose.g:1163:2: ( ( ( rule__Service__Group_3_12_1_0__0 ) ) ( ( rule__Service__Group_3_12_1_0__0 )* ) )
                    {
                    // InternalDockerCompose.g:1163:2: ( ( ( rule__Service__Group_3_12_1_0__0 ) ) ( ( rule__Service__Group_3_12_1_0__0 )* ) )
                    // InternalDockerCompose.g:1164:3: ( ( rule__Service__Group_3_12_1_0__0 ) ) ( ( rule__Service__Group_3_12_1_0__0 )* )
                    {
                    // InternalDockerCompose.g:1164:3: ( ( rule__Service__Group_3_12_1_0__0 ) )
                    // InternalDockerCompose.g:1165:4: ( rule__Service__Group_3_12_1_0__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_12_1_0()); 
                    // InternalDockerCompose.g:1166:4: ( rule__Service__Group_3_12_1_0__0 )
                    // InternalDockerCompose.g:1166:5: rule__Service__Group_3_12_1_0__0
                    {
                    pushFollow(FOLLOW_3);
                    rule__Service__Group_3_12_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_12_1_0()); 

                    }

                    // InternalDockerCompose.g:1169:3: ( ( rule__Service__Group_3_12_1_0__0 )* )
                    // InternalDockerCompose.g:1170:4: ( rule__Service__Group_3_12_1_0__0 )*
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_12_1_0()); 
                    // InternalDockerCompose.g:1171:4: ( rule__Service__Group_3_12_1_0__0 )*
                    loop11:
                    do {
                        int alt11=2;
                        int LA11_0 = input.LA(1);

                        if ( (LA11_0==56) ) {
                            alt11=1;
                        }


                        switch (alt11) {
                    	case 1 :
                    	    // InternalDockerCompose.g:1171:5: rule__Service__Group_3_12_1_0__0
                    	    {
                    	    pushFollow(FOLLOW_3);
                    	    rule__Service__Group_3_12_1_0__0();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop11;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getGroup_3_12_1_0()); 

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1176:2: ( ( ( rule__Service__Group_3_12_1_1__0 ) ) ( ( rule__Service__Group_3_12_1_1__0 )* ) )
                    {
                    // InternalDockerCompose.g:1176:2: ( ( ( rule__Service__Group_3_12_1_1__0 ) ) ( ( rule__Service__Group_3_12_1_1__0 )* ) )
                    // InternalDockerCompose.g:1177:3: ( ( rule__Service__Group_3_12_1_1__0 ) ) ( ( rule__Service__Group_3_12_1_1__0 )* )
                    {
                    // InternalDockerCompose.g:1177:3: ( ( rule__Service__Group_3_12_1_1__0 ) )
                    // InternalDockerCompose.g:1178:4: ( rule__Service__Group_3_12_1_1__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_12_1_1()); 
                    // InternalDockerCompose.g:1179:4: ( rule__Service__Group_3_12_1_1__0 )
                    // InternalDockerCompose.g:1179:5: rule__Service__Group_3_12_1_1__0
                    {
                    pushFollow(FOLLOW_3);
                    rule__Service__Group_3_12_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_12_1_1()); 

                    }

                    // InternalDockerCompose.g:1182:3: ( ( rule__Service__Group_3_12_1_1__0 )* )
                    // InternalDockerCompose.g:1183:4: ( rule__Service__Group_3_12_1_1__0 )*
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_12_1_1()); 
                    // InternalDockerCompose.g:1184:4: ( rule__Service__Group_3_12_1_1__0 )*
                    loop12:
                    do {
                        int alt12=2;
                        int LA12_0 = input.LA(1);

                        if ( (LA12_0==56) ) {
                            alt12=1;
                        }


                        switch (alt12) {
                    	case 1 :
                    	    // InternalDockerCompose.g:1184:5: rule__Service__Group_3_12_1_1__0
                    	    {
                    	    pushFollow(FOLLOW_3);
                    	    rule__Service__Group_3_12_1_1__0();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop12;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getGroup_3_12_1_1()); 

                    }


                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Alternatives_3_12_1"


    // $ANTLR start "rule__Service__Alternatives_3_13_1"
    // InternalDockerCompose.g:1193:1: rule__Service__Alternatives_3_13_1 : ( ( ( ( rule__Service__EnvironmentAssignment_3_13_1_0 ) ) ( ( rule__Service__EnvironmentAssignment_3_13_1_0 )* ) ) | ( ( ( rule__Service__EnvironmentAssignment_3_13_1_1 ) ) ( ( rule__Service__EnvironmentAssignment_3_13_1_1 )* ) ) );
    public final void rule__Service__Alternatives_3_13_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1197:1: ( ( ( ( rule__Service__EnvironmentAssignment_3_13_1_0 ) ) ( ( rule__Service__EnvironmentAssignment_3_13_1_0 )* ) ) | ( ( ( rule__Service__EnvironmentAssignment_3_13_1_1 ) ) ( ( rule__Service__EnvironmentAssignment_3_13_1_1 )* ) ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==RULE_ID) ) {
                alt16=1;
            }
            else if ( (LA16_0==56) ) {
                alt16=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalDockerCompose.g:1198:2: ( ( ( rule__Service__EnvironmentAssignment_3_13_1_0 ) ) ( ( rule__Service__EnvironmentAssignment_3_13_1_0 )* ) )
                    {
                    // InternalDockerCompose.g:1198:2: ( ( ( rule__Service__EnvironmentAssignment_3_13_1_0 ) ) ( ( rule__Service__EnvironmentAssignment_3_13_1_0 )* ) )
                    // InternalDockerCompose.g:1199:3: ( ( rule__Service__EnvironmentAssignment_3_13_1_0 ) ) ( ( rule__Service__EnvironmentAssignment_3_13_1_0 )* )
                    {
                    // InternalDockerCompose.g:1199:3: ( ( rule__Service__EnvironmentAssignment_3_13_1_0 ) )
                    // InternalDockerCompose.g:1200:4: ( rule__Service__EnvironmentAssignment_3_13_1_0 )
                    {
                     before(grammarAccess.getServiceAccess().getEnvironmentAssignment_3_13_1_0()); 
                    // InternalDockerCompose.g:1201:4: ( rule__Service__EnvironmentAssignment_3_13_1_0 )
                    // InternalDockerCompose.g:1201:5: rule__Service__EnvironmentAssignment_3_13_1_0
                    {
                    pushFollow(FOLLOW_5);
                    rule__Service__EnvironmentAssignment_3_13_1_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getEnvironmentAssignment_3_13_1_0()); 

                    }

                    // InternalDockerCompose.g:1204:3: ( ( rule__Service__EnvironmentAssignment_3_13_1_0 )* )
                    // InternalDockerCompose.g:1205:4: ( rule__Service__EnvironmentAssignment_3_13_1_0 )*
                    {
                     before(grammarAccess.getServiceAccess().getEnvironmentAssignment_3_13_1_0()); 
                    // InternalDockerCompose.g:1206:4: ( rule__Service__EnvironmentAssignment_3_13_1_0 )*
                    loop14:
                    do {
                        int alt14=2;
                        alt14 = dfa14.predict(input);
                        switch (alt14) {
                    	case 1 :
                    	    // InternalDockerCompose.g:1206:5: rule__Service__EnvironmentAssignment_3_13_1_0
                    	    {
                    	    pushFollow(FOLLOW_5);
                    	    rule__Service__EnvironmentAssignment_3_13_1_0();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop14;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getEnvironmentAssignment_3_13_1_0()); 

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1211:2: ( ( ( rule__Service__EnvironmentAssignment_3_13_1_1 ) ) ( ( rule__Service__EnvironmentAssignment_3_13_1_1 )* ) )
                    {
                    // InternalDockerCompose.g:1211:2: ( ( ( rule__Service__EnvironmentAssignment_3_13_1_1 ) ) ( ( rule__Service__EnvironmentAssignment_3_13_1_1 )* ) )
                    // InternalDockerCompose.g:1212:3: ( ( rule__Service__EnvironmentAssignment_3_13_1_1 ) ) ( ( rule__Service__EnvironmentAssignment_3_13_1_1 )* )
                    {
                    // InternalDockerCompose.g:1212:3: ( ( rule__Service__EnvironmentAssignment_3_13_1_1 ) )
                    // InternalDockerCompose.g:1213:4: ( rule__Service__EnvironmentAssignment_3_13_1_1 )
                    {
                     before(grammarAccess.getServiceAccess().getEnvironmentAssignment_3_13_1_1()); 
                    // InternalDockerCompose.g:1214:4: ( rule__Service__EnvironmentAssignment_3_13_1_1 )
                    // InternalDockerCompose.g:1214:5: rule__Service__EnvironmentAssignment_3_13_1_1
                    {
                    pushFollow(FOLLOW_3);
                    rule__Service__EnvironmentAssignment_3_13_1_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getEnvironmentAssignment_3_13_1_1()); 

                    }

                    // InternalDockerCompose.g:1217:3: ( ( rule__Service__EnvironmentAssignment_3_13_1_1 )* )
                    // InternalDockerCompose.g:1218:4: ( rule__Service__EnvironmentAssignment_3_13_1_1 )*
                    {
                     before(grammarAccess.getServiceAccess().getEnvironmentAssignment_3_13_1_1()); 
                    // InternalDockerCompose.g:1219:4: ( rule__Service__EnvironmentAssignment_3_13_1_1 )*
                    loop15:
                    do {
                        int alt15=2;
                        int LA15_0 = input.LA(1);

                        if ( (LA15_0==56) ) {
                            alt15=1;
                        }


                        switch (alt15) {
                    	case 1 :
                    	    // InternalDockerCompose.g:1219:5: rule__Service__EnvironmentAssignment_3_13_1_1
                    	    {
                    	    pushFollow(FOLLOW_3);
                    	    rule__Service__EnvironmentAssignment_3_13_1_1();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop15;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getEnvironmentAssignment_3_13_1_1()); 

                    }


                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Alternatives_3_13_1"


    // $ANTLR start "rule__Service__Alternatives_3_15_1"
    // InternalDockerCompose.g:1228:1: rule__Service__Alternatives_3_15_1 : ( ( ( ( rule__Service__Group_3_15_1_0__0 ) ) ( ( rule__Service__Group_3_15_1_0__0 )* ) ) | ( ( rule__Service__DnsAssignment_3_15_1_1 ) ) );
    public final void rule__Service__Alternatives_3_15_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1232:1: ( ( ( ( rule__Service__Group_3_15_1_0__0 ) ) ( ( rule__Service__Group_3_15_1_0__0 )* ) ) | ( ( rule__Service__DnsAssignment_3_15_1_1 ) ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==56) ) {
                alt18=1;
            }
            else if ( (LA18_0==RULE_INT) ) {
                alt18=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalDockerCompose.g:1233:2: ( ( ( rule__Service__Group_3_15_1_0__0 ) ) ( ( rule__Service__Group_3_15_1_0__0 )* ) )
                    {
                    // InternalDockerCompose.g:1233:2: ( ( ( rule__Service__Group_3_15_1_0__0 ) ) ( ( rule__Service__Group_3_15_1_0__0 )* ) )
                    // InternalDockerCompose.g:1234:3: ( ( rule__Service__Group_3_15_1_0__0 ) ) ( ( rule__Service__Group_3_15_1_0__0 )* )
                    {
                    // InternalDockerCompose.g:1234:3: ( ( rule__Service__Group_3_15_1_0__0 ) )
                    // InternalDockerCompose.g:1235:4: ( rule__Service__Group_3_15_1_0__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_15_1_0()); 
                    // InternalDockerCompose.g:1236:4: ( rule__Service__Group_3_15_1_0__0 )
                    // InternalDockerCompose.g:1236:5: rule__Service__Group_3_15_1_0__0
                    {
                    pushFollow(FOLLOW_3);
                    rule__Service__Group_3_15_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_15_1_0()); 

                    }

                    // InternalDockerCompose.g:1239:3: ( ( rule__Service__Group_3_15_1_0__0 )* )
                    // InternalDockerCompose.g:1240:4: ( rule__Service__Group_3_15_1_0__0 )*
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_15_1_0()); 
                    // InternalDockerCompose.g:1241:4: ( rule__Service__Group_3_15_1_0__0 )*
                    loop17:
                    do {
                        int alt17=2;
                        int LA17_0 = input.LA(1);

                        if ( (LA17_0==56) ) {
                            alt17=1;
                        }


                        switch (alt17) {
                    	case 1 :
                    	    // InternalDockerCompose.g:1241:5: rule__Service__Group_3_15_1_0__0
                    	    {
                    	    pushFollow(FOLLOW_3);
                    	    rule__Service__Group_3_15_1_0__0();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop17;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getGroup_3_15_1_0()); 

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1246:2: ( ( rule__Service__DnsAssignment_3_15_1_1 ) )
                    {
                    // InternalDockerCompose.g:1246:2: ( ( rule__Service__DnsAssignment_3_15_1_1 ) )
                    // InternalDockerCompose.g:1247:3: ( rule__Service__DnsAssignment_3_15_1_1 )
                    {
                     before(grammarAccess.getServiceAccess().getDnsAssignment_3_15_1_1()); 
                    // InternalDockerCompose.g:1248:3: ( rule__Service__DnsAssignment_3_15_1_1 )
                    // InternalDockerCompose.g:1248:4: rule__Service__DnsAssignment_3_15_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__DnsAssignment_3_15_1_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getDnsAssignment_3_15_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Alternatives_3_15_1"


    // $ANTLR start "rule__Image__Alternatives_3"
    // InternalDockerCompose.g:1256:1: rule__Image__Alternatives_3 : ( ( ( rule__Image__Group_3_0__0 ) ) | ( ( rule__Image__Group_3_1__0 ) ) );
    public final void rule__Image__Alternatives_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1260:1: ( ( ( rule__Image__Group_3_0__0 ) ) | ( ( rule__Image__Group_3_1__0 ) ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==46) ) {
                alt19=1;
            }
            else if ( (LA19_0==64) ) {
                alt19=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalDockerCompose.g:1261:2: ( ( rule__Image__Group_3_0__0 ) )
                    {
                    // InternalDockerCompose.g:1261:2: ( ( rule__Image__Group_3_0__0 ) )
                    // InternalDockerCompose.g:1262:3: ( rule__Image__Group_3_0__0 )
                    {
                     before(grammarAccess.getImageAccess().getGroup_3_0()); 
                    // InternalDockerCompose.g:1263:3: ( rule__Image__Group_3_0__0 )
                    // InternalDockerCompose.g:1263:4: rule__Image__Group_3_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Image__Group_3_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImageAccess().getGroup_3_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1267:2: ( ( rule__Image__Group_3_1__0 ) )
                    {
                    // InternalDockerCompose.g:1267:2: ( ( rule__Image__Group_3_1__0 ) )
                    // InternalDockerCompose.g:1268:3: ( rule__Image__Group_3_1__0 )
                    {
                     before(grammarAccess.getImageAccess().getGroup_3_1()); 
                    // InternalDockerCompose.g:1269:3: ( rule__Image__Group_3_1__0 )
                    // InternalDockerCompose.g:1269:4: rule__Image__Group_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Image__Group_3_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImageAccess().getGroup_3_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Alternatives_3"


    // $ANTLR start "rule__NetworkConnector__Alternatives_1"
    // InternalDockerCompose.g:1277:1: rule__NetworkConnector__Alternatives_1 : ( ( ( rule__NetworkConnector__Group_1_0__0 ) ) | ( ( rule__NetworkConnector__Group_1_1__0 ) ) );
    public final void rule__NetworkConnector__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1281:1: ( ( ( rule__NetworkConnector__Group_1_0__0 ) ) | ( ( rule__NetworkConnector__Group_1_1__0 ) ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==56) ) {
                alt20=1;
            }
            else if ( ((LA20_0>=RULE_STRING && LA20_0<=RULE_ID)) ) {
                alt20=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalDockerCompose.g:1282:2: ( ( rule__NetworkConnector__Group_1_0__0 ) )
                    {
                    // InternalDockerCompose.g:1282:2: ( ( rule__NetworkConnector__Group_1_0__0 ) )
                    // InternalDockerCompose.g:1283:3: ( rule__NetworkConnector__Group_1_0__0 )
                    {
                     before(grammarAccess.getNetworkConnectorAccess().getGroup_1_0()); 
                    // InternalDockerCompose.g:1284:3: ( rule__NetworkConnector__Group_1_0__0 )
                    // InternalDockerCompose.g:1284:4: rule__NetworkConnector__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector__Group_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkConnectorAccess().getGroup_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1288:2: ( ( rule__NetworkConnector__Group_1_1__0 ) )
                    {
                    // InternalDockerCompose.g:1288:2: ( ( rule__NetworkConnector__Group_1_1__0 ) )
                    // InternalDockerCompose.g:1289:3: ( rule__NetworkConnector__Group_1_1__0 )
                    {
                     before(grammarAccess.getNetworkConnectorAccess().getGroup_1_1()); 
                    // InternalDockerCompose.g:1290:3: ( rule__NetworkConnector__Group_1_1__0 )
                    // InternalDockerCompose.g:1290:4: rule__NetworkConnector__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector__Group_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkConnectorAccess().getGroup_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Alternatives_1"


    // $ANTLR start "rule__Network__Alternatives_3"
    // InternalDockerCompose.g:1298:1: rule__Network__Alternatives_3 : ( ( ( rule__Network__Group_3_0__0 ) ) | ( ( rule__Network__UnorderedGroup_3_1 ) ) );
    public final void rule__Network__Alternatives_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1302:1: ( ( ( rule__Network__Group_3_0__0 ) ) | ( ( rule__Network__UnorderedGroup_3_1 ) ) )
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==82) ) {
                alt21=1;
            }
            else if ( (LA21_0==EOF||(LA21_0>=RULE_STRING && LA21_0<=RULE_ID)||(LA21_0>=40 && LA21_0<=45)||(LA21_0>=84 && LA21_0<=92)) ) {
                alt21=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }
            switch (alt21) {
                case 1 :
                    // InternalDockerCompose.g:1303:2: ( ( rule__Network__Group_3_0__0 ) )
                    {
                    // InternalDockerCompose.g:1303:2: ( ( rule__Network__Group_3_0__0 ) )
                    // InternalDockerCompose.g:1304:3: ( rule__Network__Group_3_0__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_0()); 
                    // InternalDockerCompose.g:1305:3: ( rule__Network__Group_3_0__0 )
                    // InternalDockerCompose.g:1305:4: rule__Network__Group_3_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1309:2: ( ( rule__Network__UnorderedGroup_3_1 ) )
                    {
                    // InternalDockerCompose.g:1309:2: ( ( rule__Network__UnorderedGroup_3_1 ) )
                    // InternalDockerCompose.g:1310:3: ( rule__Network__UnorderedGroup_3_1 )
                    {
                     before(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1()); 
                    // InternalDockerCompose.g:1311:3: ( rule__Network__UnorderedGroup_3_1 )
                    // InternalDockerCompose.g:1311:4: rule__Network__UnorderedGroup_3_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Alternatives_3"


    // $ANTLR start "rule__PATH__Alternatives"
    // InternalDockerCompose.g:1319:1: rule__PATH__Alternatives : ( ( ( rule__PATH__Group_0__0 ) ) | ( ( rule__PATH__Group_1__0 ) ) );
    public final void rule__PATH__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1323:1: ( ( ( rule__PATH__Group_0__0 ) ) | ( ( rule__PATH__Group_1__0 ) ) )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==RULE_ID||(LA22_0>=16 && LA22_0<=17)) ) {
                alt22=1;
            }
            else if ( (LA22_0==63) ) {
                alt22=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalDockerCompose.g:1324:2: ( ( rule__PATH__Group_0__0 ) )
                    {
                    // InternalDockerCompose.g:1324:2: ( ( rule__PATH__Group_0__0 ) )
                    // InternalDockerCompose.g:1325:3: ( rule__PATH__Group_0__0 )
                    {
                     before(grammarAccess.getPATHAccess().getGroup_0()); 
                    // InternalDockerCompose.g:1326:3: ( rule__PATH__Group_0__0 )
                    // InternalDockerCompose.g:1326:4: rule__PATH__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PATH__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPATHAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1330:2: ( ( rule__PATH__Group_1__0 ) )
                    {
                    // InternalDockerCompose.g:1330:2: ( ( rule__PATH__Group_1__0 ) )
                    // InternalDockerCompose.g:1331:3: ( rule__PATH__Group_1__0 )
                    {
                     before(grammarAccess.getPATHAccess().getGroup_1()); 
                    // InternalDockerCompose.g:1332:3: ( rule__PATH__Group_1__0 )
                    // InternalDockerCompose.g:1332:4: rule__PATH__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PATH__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPATHAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Alternatives"


    // $ANTLR start "rule__PATH__Alternatives_0_0"
    // InternalDockerCompose.g:1340:1: rule__PATH__Alternatives_0_0 : ( ( ( rule__PATH__Group_0_0_0__0 ) ) | ( '.' ) | ( '..' ) );
    public final void rule__PATH__Alternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1344:1: ( ( ( rule__PATH__Group_0_0_0__0 ) ) | ( '.' ) | ( '..' ) )
            int alt23=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt23=1;
                }
                break;
            case 16:
                {
                alt23=2;
                }
                break;
            case 17:
                {
                alt23=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }

            switch (alt23) {
                case 1 :
                    // InternalDockerCompose.g:1345:2: ( ( rule__PATH__Group_0_0_0__0 ) )
                    {
                    // InternalDockerCompose.g:1345:2: ( ( rule__PATH__Group_0_0_0__0 ) )
                    // InternalDockerCompose.g:1346:3: ( rule__PATH__Group_0_0_0__0 )
                    {
                     before(grammarAccess.getPATHAccess().getGroup_0_0_0()); 
                    // InternalDockerCompose.g:1347:3: ( rule__PATH__Group_0_0_0__0 )
                    // InternalDockerCompose.g:1347:4: rule__PATH__Group_0_0_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PATH__Group_0_0_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPATHAccess().getGroup_0_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1351:2: ( '.' )
                    {
                    // InternalDockerCompose.g:1351:2: ( '.' )
                    // InternalDockerCompose.g:1352:3: '.'
                    {
                     before(grammarAccess.getPATHAccess().getFullStopKeyword_0_0_1()); 
                    match(input,16,FOLLOW_2); 
                     after(grammarAccess.getPATHAccess().getFullStopKeyword_0_0_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1357:2: ( '..' )
                    {
                    // InternalDockerCompose.g:1357:2: ( '..' )
                    // InternalDockerCompose.g:1358:3: '..'
                    {
                     before(grammarAccess.getPATHAccess().getFullStopFullStopKeyword_0_0_2()); 
                    match(input,17,FOLLOW_2); 
                     after(grammarAccess.getPATHAccess().getFullStopFullStopKeyword_0_0_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Alternatives_0_0"


    // $ANTLR start "rule__PATH__Alternatives_0_1_1"
    // InternalDockerCompose.g:1367:1: rule__PATH__Alternatives_0_1_1 : ( ( ( rule__PATH__Group_0_1_1_0__0 ) ) | ( '.' ) | ( '..' ) );
    public final void rule__PATH__Alternatives_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1371:1: ( ( ( rule__PATH__Group_0_1_1_0__0 ) ) | ( '.' ) | ( '..' ) )
            int alt24=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt24=1;
                }
                break;
            case 16:
                {
                alt24=2;
                }
                break;
            case 17:
                {
                alt24=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // InternalDockerCompose.g:1372:2: ( ( rule__PATH__Group_0_1_1_0__0 ) )
                    {
                    // InternalDockerCompose.g:1372:2: ( ( rule__PATH__Group_0_1_1_0__0 ) )
                    // InternalDockerCompose.g:1373:3: ( rule__PATH__Group_0_1_1_0__0 )
                    {
                     before(grammarAccess.getPATHAccess().getGroup_0_1_1_0()); 
                    // InternalDockerCompose.g:1374:3: ( rule__PATH__Group_0_1_1_0__0 )
                    // InternalDockerCompose.g:1374:4: rule__PATH__Group_0_1_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PATH__Group_0_1_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPATHAccess().getGroup_0_1_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1378:2: ( '.' )
                    {
                    // InternalDockerCompose.g:1378:2: ( '.' )
                    // InternalDockerCompose.g:1379:3: '.'
                    {
                     before(grammarAccess.getPATHAccess().getFullStopKeyword_0_1_1_1()); 
                    match(input,16,FOLLOW_2); 
                     after(grammarAccess.getPATHAccess().getFullStopKeyword_0_1_1_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1384:2: ( '..' )
                    {
                    // InternalDockerCompose.g:1384:2: ( '..' )
                    // InternalDockerCompose.g:1385:3: '..'
                    {
                     before(grammarAccess.getPATHAccess().getFullStopFullStopKeyword_0_1_1_2()); 
                    match(input,17,FOLLOW_2); 
                     after(grammarAccess.getPATHAccess().getFullStopFullStopKeyword_0_1_1_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Alternatives_0_1_1"


    // $ANTLR start "rule__PATH__Alternatives_1_1_0"
    // InternalDockerCompose.g:1394:1: rule__PATH__Alternatives_1_1_0 : ( ( ( rule__PATH__Group_1_1_0_0__0 ) ) | ( '.' ) | ( '..' ) );
    public final void rule__PATH__Alternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1398:1: ( ( ( rule__PATH__Group_1_1_0_0__0 ) ) | ( '.' ) | ( '..' ) )
            int alt25=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt25=1;
                }
                break;
            case 16:
                {
                alt25=2;
                }
                break;
            case 17:
                {
                alt25=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }

            switch (alt25) {
                case 1 :
                    // InternalDockerCompose.g:1399:2: ( ( rule__PATH__Group_1_1_0_0__0 ) )
                    {
                    // InternalDockerCompose.g:1399:2: ( ( rule__PATH__Group_1_1_0_0__0 ) )
                    // InternalDockerCompose.g:1400:3: ( rule__PATH__Group_1_1_0_0__0 )
                    {
                     before(grammarAccess.getPATHAccess().getGroup_1_1_0_0()); 
                    // InternalDockerCompose.g:1401:3: ( rule__PATH__Group_1_1_0_0__0 )
                    // InternalDockerCompose.g:1401:4: rule__PATH__Group_1_1_0_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PATH__Group_1_1_0_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPATHAccess().getGroup_1_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1405:2: ( '.' )
                    {
                    // InternalDockerCompose.g:1405:2: ( '.' )
                    // InternalDockerCompose.g:1406:3: '.'
                    {
                     before(grammarAccess.getPATHAccess().getFullStopKeyword_1_1_0_1()); 
                    match(input,16,FOLLOW_2); 
                     after(grammarAccess.getPATHAccess().getFullStopKeyword_1_1_0_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1411:2: ( '..' )
                    {
                    // InternalDockerCompose.g:1411:2: ( '..' )
                    // InternalDockerCompose.g:1412:3: '..'
                    {
                     before(grammarAccess.getPATHAccess().getFullStopFullStopKeyword_1_1_0_2()); 
                    match(input,17,FOLLOW_2); 
                     after(grammarAccess.getPATHAccess().getFullStopFullStopKeyword_1_1_0_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Alternatives_1_1_0"


    // $ANTLR start "rule__PATH__Alternatives_1_2"
    // InternalDockerCompose.g:1421:1: rule__PATH__Alternatives_1_2 : ( ( ( rule__PATH__Group_1_2_0__0 ) ) | ( '.' ) | ( '..' ) );
    public final void rule__PATH__Alternatives_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1425:1: ( ( ( rule__PATH__Group_1_2_0__0 ) ) | ( '.' ) | ( '..' ) )
            int alt26=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt26=1;
                }
                break;
            case 16:
                {
                alt26=2;
                }
                break;
            case 17:
                {
                alt26=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }

            switch (alt26) {
                case 1 :
                    // InternalDockerCompose.g:1426:2: ( ( rule__PATH__Group_1_2_0__0 ) )
                    {
                    // InternalDockerCompose.g:1426:2: ( ( rule__PATH__Group_1_2_0__0 ) )
                    // InternalDockerCompose.g:1427:3: ( rule__PATH__Group_1_2_0__0 )
                    {
                     before(grammarAccess.getPATHAccess().getGroup_1_2_0()); 
                    // InternalDockerCompose.g:1428:3: ( rule__PATH__Group_1_2_0__0 )
                    // InternalDockerCompose.g:1428:4: rule__PATH__Group_1_2_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PATH__Group_1_2_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPATHAccess().getGroup_1_2_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1432:2: ( '.' )
                    {
                    // InternalDockerCompose.g:1432:2: ( '.' )
                    // InternalDockerCompose.g:1433:3: '.'
                    {
                     before(grammarAccess.getPATHAccess().getFullStopKeyword_1_2_1()); 
                    match(input,16,FOLLOW_2); 
                     after(grammarAccess.getPATHAccess().getFullStopKeyword_1_2_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1438:2: ( '..' )
                    {
                    // InternalDockerCompose.g:1438:2: ( '..' )
                    // InternalDockerCompose.g:1439:3: '..'
                    {
                     before(grammarAccess.getPATHAccess().getFullStopFullStopKeyword_1_2_2()); 
                    match(input,17,FOLLOW_2); 
                     after(grammarAccess.getPATHAccess().getFullStopFullStopKeyword_1_2_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Alternatives_1_2"


    // $ANTLR start "rule__EString__Alternatives"
    // InternalDockerCompose.g:1448:1: rule__EString__Alternatives : ( ( RULE_STRING ) | ( RULE_ID ) );
    public final void rule__EString__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1452:1: ( ( RULE_STRING ) | ( RULE_ID ) )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==RULE_STRING) ) {
                alt27=1;
            }
            else if ( (LA27_0==RULE_ID) ) {
                alt27=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // InternalDockerCompose.g:1453:2: ( RULE_STRING )
                    {
                    // InternalDockerCompose.g:1453:2: ( RULE_STRING )
                    // InternalDockerCompose.g:1454:3: RULE_STRING
                    {
                     before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
                    match(input,RULE_STRING,FOLLOW_2); 
                     after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1459:2: ( RULE_ID )
                    {
                    // InternalDockerCompose.g:1459:2: ( RULE_ID )
                    // InternalDockerCompose.g:1460:3: RULE_ID
                    {
                     before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
                    match(input,RULE_ID,FOLLOW_2); 
                     after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EString__Alternatives"


    // $ANTLR start "rule__EBoolean__Alternatives"
    // InternalDockerCompose.g:1469:1: rule__EBoolean__Alternatives : ( ( 'true' ) | ( 'false' ) );
    public final void rule__EBoolean__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1473:1: ( ( 'true' ) | ( 'false' ) )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==18) ) {
                alt28=1;
            }
            else if ( (LA28_0==19) ) {
                alt28=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }
            switch (alt28) {
                case 1 :
                    // InternalDockerCompose.g:1474:2: ( 'true' )
                    {
                    // InternalDockerCompose.g:1474:2: ( 'true' )
                    // InternalDockerCompose.g:1475:3: 'true'
                    {
                     before(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); 
                    match(input,18,FOLLOW_2); 
                     after(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1480:2: ( 'false' )
                    {
                    // InternalDockerCompose.g:1480:2: ( 'false' )
                    // InternalDockerCompose.g:1481:3: 'false'
                    {
                     before(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); 
                    match(input,19,FOLLOW_2); 
                     after(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EBoolean__Alternatives"


    // $ANTLR start "rule__RestartPolicy__Alternatives"
    // InternalDockerCompose.g:1490:1: rule__RestartPolicy__Alternatives : ( ( ( '\"no\"' ) ) | ( ( 'always' ) ) | ( ( 'on-failure' ) ) | ( ( 'unless-stopped' ) ) );
    public final void rule__RestartPolicy__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1494:1: ( ( ( '\"no\"' ) ) | ( ( 'always' ) ) | ( ( 'on-failure' ) ) | ( ( 'unless-stopped' ) ) )
            int alt29=4;
            switch ( input.LA(1) ) {
            case 20:
                {
                alt29=1;
                }
                break;
            case 21:
                {
                alt29=2;
                }
                break;
            case 22:
                {
                alt29=3;
                }
                break;
            case 23:
                {
                alt29=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }

            switch (alt29) {
                case 1 :
                    // InternalDockerCompose.g:1495:2: ( ( '\"no\"' ) )
                    {
                    // InternalDockerCompose.g:1495:2: ( ( '\"no\"' ) )
                    // InternalDockerCompose.g:1496:3: ( '\"no\"' )
                    {
                     before(grammarAccess.getRestartPolicyAccess().getNoEnumLiteralDeclaration_0()); 
                    // InternalDockerCompose.g:1497:3: ( '\"no\"' )
                    // InternalDockerCompose.g:1497:4: '\"no\"'
                    {
                    match(input,20,FOLLOW_2); 

                    }

                     after(grammarAccess.getRestartPolicyAccess().getNoEnumLiteralDeclaration_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1501:2: ( ( 'always' ) )
                    {
                    // InternalDockerCompose.g:1501:2: ( ( 'always' ) )
                    // InternalDockerCompose.g:1502:3: ( 'always' )
                    {
                     before(grammarAccess.getRestartPolicyAccess().getAlwaysEnumLiteralDeclaration_1()); 
                    // InternalDockerCompose.g:1503:3: ( 'always' )
                    // InternalDockerCompose.g:1503:4: 'always'
                    {
                    match(input,21,FOLLOW_2); 

                    }

                     after(grammarAccess.getRestartPolicyAccess().getAlwaysEnumLiteralDeclaration_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1507:2: ( ( 'on-failure' ) )
                    {
                    // InternalDockerCompose.g:1507:2: ( ( 'on-failure' ) )
                    // InternalDockerCompose.g:1508:3: ( 'on-failure' )
                    {
                     before(grammarAccess.getRestartPolicyAccess().getOnfailureEnumLiteralDeclaration_2()); 
                    // InternalDockerCompose.g:1509:3: ( 'on-failure' )
                    // InternalDockerCompose.g:1509:4: 'on-failure'
                    {
                    match(input,22,FOLLOW_2); 

                    }

                     after(grammarAccess.getRestartPolicyAccess().getOnfailureEnumLiteralDeclaration_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:1513:2: ( ( 'unless-stopped' ) )
                    {
                    // InternalDockerCompose.g:1513:2: ( ( 'unless-stopped' ) )
                    // InternalDockerCompose.g:1514:3: ( 'unless-stopped' )
                    {
                     before(grammarAccess.getRestartPolicyAccess().getUnlessstoppedEnumLiteralDeclaration_3()); 
                    // InternalDockerCompose.g:1515:3: ( 'unless-stopped' )
                    // InternalDockerCompose.g:1515:4: 'unless-stopped'
                    {
                    match(input,23,FOLLOW_2); 

                    }

                     after(grammarAccess.getRestartPolicyAccess().getUnlessstoppedEnumLiteralDeclaration_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestartPolicy__Alternatives"


    // $ANTLR start "rule__AccessMode__Alternatives"
    // InternalDockerCompose.g:1523:1: rule__AccessMode__Alternatives : ( ( ( 'rw' ) ) | ( ( 'ro' ) ) | ( ( 'z' ) ) );
    public final void rule__AccessMode__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1527:1: ( ( ( 'rw' ) ) | ( ( 'ro' ) ) | ( ( 'z' ) ) )
            int alt30=3;
            switch ( input.LA(1) ) {
            case 24:
                {
                alt30=1;
                }
                break;
            case 25:
                {
                alt30=2;
                }
                break;
            case 26:
                {
                alt30=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }

            switch (alt30) {
                case 1 :
                    // InternalDockerCompose.g:1528:2: ( ( 'rw' ) )
                    {
                    // InternalDockerCompose.g:1528:2: ( ( 'rw' ) )
                    // InternalDockerCompose.g:1529:3: ( 'rw' )
                    {
                     before(grammarAccess.getAccessModeAccess().getRwEnumLiteralDeclaration_0()); 
                    // InternalDockerCompose.g:1530:3: ( 'rw' )
                    // InternalDockerCompose.g:1530:4: 'rw'
                    {
                    match(input,24,FOLLOW_2); 

                    }

                     after(grammarAccess.getAccessModeAccess().getRwEnumLiteralDeclaration_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1534:2: ( ( 'ro' ) )
                    {
                    // InternalDockerCompose.g:1534:2: ( ( 'ro' ) )
                    // InternalDockerCompose.g:1535:3: ( 'ro' )
                    {
                     before(grammarAccess.getAccessModeAccess().getRoEnumLiteralDeclaration_1()); 
                    // InternalDockerCompose.g:1536:3: ( 'ro' )
                    // InternalDockerCompose.g:1536:4: 'ro'
                    {
                    match(input,25,FOLLOW_2); 

                    }

                     after(grammarAccess.getAccessModeAccess().getRoEnumLiteralDeclaration_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1540:2: ( ( 'z' ) )
                    {
                    // InternalDockerCompose.g:1540:2: ( ( 'z' ) )
                    // InternalDockerCompose.g:1541:3: ( 'z' )
                    {
                     before(grammarAccess.getAccessModeAccess().getZEnumLiteralDeclaration_2()); 
                    // InternalDockerCompose.g:1542:3: ( 'z' )
                    // InternalDockerCompose.g:1542:4: 'z'
                    {
                    match(input,26,FOLLOW_2); 

                    }

                     after(grammarAccess.getAccessModeAccess().getZEnumLiteralDeclaration_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AccessMode__Alternatives"


    // $ANTLR start "rule__MountType__Alternatives"
    // InternalDockerCompose.g:1550:1: rule__MountType__Alternatives : ( ( ( 'volume' ) ) | ( ( 'bind' ) ) | ( ( 'tmpfs' ) ) | ( ( 'npipe' ) ) );
    public final void rule__MountType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1554:1: ( ( ( 'volume' ) ) | ( ( 'bind' ) ) | ( ( 'tmpfs' ) ) | ( ( 'npipe' ) ) )
            int alt31=4;
            switch ( input.LA(1) ) {
            case 27:
                {
                alt31=1;
                }
                break;
            case 28:
                {
                alt31=2;
                }
                break;
            case 29:
                {
                alt31=3;
                }
                break;
            case 30:
                {
                alt31=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }

            switch (alt31) {
                case 1 :
                    // InternalDockerCompose.g:1555:2: ( ( 'volume' ) )
                    {
                    // InternalDockerCompose.g:1555:2: ( ( 'volume' ) )
                    // InternalDockerCompose.g:1556:3: ( 'volume' )
                    {
                     before(grammarAccess.getMountTypeAccess().getVolumeEnumLiteralDeclaration_0()); 
                    // InternalDockerCompose.g:1557:3: ( 'volume' )
                    // InternalDockerCompose.g:1557:4: 'volume'
                    {
                    match(input,27,FOLLOW_2); 

                    }

                     after(grammarAccess.getMountTypeAccess().getVolumeEnumLiteralDeclaration_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1561:2: ( ( 'bind' ) )
                    {
                    // InternalDockerCompose.g:1561:2: ( ( 'bind' ) )
                    // InternalDockerCompose.g:1562:3: ( 'bind' )
                    {
                     before(grammarAccess.getMountTypeAccess().getBindEnumLiteralDeclaration_1()); 
                    // InternalDockerCompose.g:1563:3: ( 'bind' )
                    // InternalDockerCompose.g:1563:4: 'bind'
                    {
                    match(input,28,FOLLOW_2); 

                    }

                     after(grammarAccess.getMountTypeAccess().getBindEnumLiteralDeclaration_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1567:2: ( ( 'tmpfs' ) )
                    {
                    // InternalDockerCompose.g:1567:2: ( ( 'tmpfs' ) )
                    // InternalDockerCompose.g:1568:3: ( 'tmpfs' )
                    {
                     before(grammarAccess.getMountTypeAccess().getTmpfsEnumLiteralDeclaration_2()); 
                    // InternalDockerCompose.g:1569:3: ( 'tmpfs' )
                    // InternalDockerCompose.g:1569:4: 'tmpfs'
                    {
                    match(input,29,FOLLOW_2); 

                    }

                     after(grammarAccess.getMountTypeAccess().getTmpfsEnumLiteralDeclaration_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:1573:2: ( ( 'npipe' ) )
                    {
                    // InternalDockerCompose.g:1573:2: ( ( 'npipe' ) )
                    // InternalDockerCompose.g:1574:3: ( 'npipe' )
                    {
                     before(grammarAccess.getMountTypeAccess().getNpipeEnumLiteralDeclaration_3()); 
                    // InternalDockerCompose.g:1575:3: ( 'npipe' )
                    // InternalDockerCompose.g:1575:4: 'npipe'
                    {
                    match(input,30,FOLLOW_2); 

                    }

                     after(grammarAccess.getMountTypeAccess().getNpipeEnumLiteralDeclaration_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MountType__Alternatives"


    // $ANTLR start "rule__PropagationType__Alternatives"
    // InternalDockerCompose.g:1583:1: rule__PropagationType__Alternatives : ( ( ( 'rprivate' ) ) | ( ( 'private' ) ) | ( ( 'rshared' ) ) | ( ( 'shared' ) ) | ( ( 'rslave' ) ) | ( ( 'slave' ) ) );
    public final void rule__PropagationType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1587:1: ( ( ( 'rprivate' ) ) | ( ( 'private' ) ) | ( ( 'rshared' ) ) | ( ( 'shared' ) ) | ( ( 'rslave' ) ) | ( ( 'slave' ) ) )
            int alt32=6;
            switch ( input.LA(1) ) {
            case 31:
                {
                alt32=1;
                }
                break;
            case 32:
                {
                alt32=2;
                }
                break;
            case 33:
                {
                alt32=3;
                }
                break;
            case 34:
                {
                alt32=4;
                }
                break;
            case 35:
                {
                alt32=5;
                }
                break;
            case 36:
                {
                alt32=6;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }

            switch (alt32) {
                case 1 :
                    // InternalDockerCompose.g:1588:2: ( ( 'rprivate' ) )
                    {
                    // InternalDockerCompose.g:1588:2: ( ( 'rprivate' ) )
                    // InternalDockerCompose.g:1589:3: ( 'rprivate' )
                    {
                     before(grammarAccess.getPropagationTypeAccess().getRprivateEnumLiteralDeclaration_0()); 
                    // InternalDockerCompose.g:1590:3: ( 'rprivate' )
                    // InternalDockerCompose.g:1590:4: 'rprivate'
                    {
                    match(input,31,FOLLOW_2); 

                    }

                     after(grammarAccess.getPropagationTypeAccess().getRprivateEnumLiteralDeclaration_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1594:2: ( ( 'private' ) )
                    {
                    // InternalDockerCompose.g:1594:2: ( ( 'private' ) )
                    // InternalDockerCompose.g:1595:3: ( 'private' )
                    {
                     before(grammarAccess.getPropagationTypeAccess().getPrivateEnumLiteralDeclaration_1()); 
                    // InternalDockerCompose.g:1596:3: ( 'private' )
                    // InternalDockerCompose.g:1596:4: 'private'
                    {
                    match(input,32,FOLLOW_2); 

                    }

                     after(grammarAccess.getPropagationTypeAccess().getPrivateEnumLiteralDeclaration_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1600:2: ( ( 'rshared' ) )
                    {
                    // InternalDockerCompose.g:1600:2: ( ( 'rshared' ) )
                    // InternalDockerCompose.g:1601:3: ( 'rshared' )
                    {
                     before(grammarAccess.getPropagationTypeAccess().getRsharedEnumLiteralDeclaration_2()); 
                    // InternalDockerCompose.g:1602:3: ( 'rshared' )
                    // InternalDockerCompose.g:1602:4: 'rshared'
                    {
                    match(input,33,FOLLOW_2); 

                    }

                     after(grammarAccess.getPropagationTypeAccess().getRsharedEnumLiteralDeclaration_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:1606:2: ( ( 'shared' ) )
                    {
                    // InternalDockerCompose.g:1606:2: ( ( 'shared' ) )
                    // InternalDockerCompose.g:1607:3: ( 'shared' )
                    {
                     before(grammarAccess.getPropagationTypeAccess().getSharedEnumLiteralDeclaration_3()); 
                    // InternalDockerCompose.g:1608:3: ( 'shared' )
                    // InternalDockerCompose.g:1608:4: 'shared'
                    {
                    match(input,34,FOLLOW_2); 

                    }

                     after(grammarAccess.getPropagationTypeAccess().getSharedEnumLiteralDeclaration_3()); 

                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:1612:2: ( ( 'rslave' ) )
                    {
                    // InternalDockerCompose.g:1612:2: ( ( 'rslave' ) )
                    // InternalDockerCompose.g:1613:3: ( 'rslave' )
                    {
                     before(grammarAccess.getPropagationTypeAccess().getRslaveEnumLiteralDeclaration_4()); 
                    // InternalDockerCompose.g:1614:3: ( 'rslave' )
                    // InternalDockerCompose.g:1614:4: 'rslave'
                    {
                    match(input,35,FOLLOW_2); 

                    }

                     after(grammarAccess.getPropagationTypeAccess().getRslaveEnumLiteralDeclaration_4()); 

                    }


                    }
                    break;
                case 6 :
                    // InternalDockerCompose.g:1618:2: ( ( 'slave' ) )
                    {
                    // InternalDockerCompose.g:1618:2: ( ( 'slave' ) )
                    // InternalDockerCompose.g:1619:3: ( 'slave' )
                    {
                     before(grammarAccess.getPropagationTypeAccess().getSlaveEnumLiteralDeclaration_5()); 
                    // InternalDockerCompose.g:1620:3: ( 'slave' )
                    // InternalDockerCompose.g:1620:4: 'slave'
                    {
                    match(input,36,FOLLOW_2); 

                    }

                     after(grammarAccess.getPropagationTypeAccess().getSlaveEnumLiteralDeclaration_5()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PropagationType__Alternatives"


    // $ANTLR start "rule__Condition__Alternatives"
    // InternalDockerCompose.g:1628:1: rule__Condition__Alternatives : ( ( ( 'service_started' ) ) | ( ( 'service_healthy' ) ) | ( ( 'service_completed_successfully' ) ) );
    public final void rule__Condition__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1632:1: ( ( ( 'service_started' ) ) | ( ( 'service_healthy' ) ) | ( ( 'service_completed_successfully' ) ) )
            int alt33=3;
            switch ( input.LA(1) ) {
            case 37:
                {
                alt33=1;
                }
                break;
            case 38:
                {
                alt33=2;
                }
                break;
            case 39:
                {
                alt33=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }

            switch (alt33) {
                case 1 :
                    // InternalDockerCompose.g:1633:2: ( ( 'service_started' ) )
                    {
                    // InternalDockerCompose.g:1633:2: ( ( 'service_started' ) )
                    // InternalDockerCompose.g:1634:3: ( 'service_started' )
                    {
                     before(grammarAccess.getConditionAccess().getService_startedEnumLiteralDeclaration_0()); 
                    // InternalDockerCompose.g:1635:3: ( 'service_started' )
                    // InternalDockerCompose.g:1635:4: 'service_started'
                    {
                    match(input,37,FOLLOW_2); 

                    }

                     after(grammarAccess.getConditionAccess().getService_startedEnumLiteralDeclaration_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1639:2: ( ( 'service_healthy' ) )
                    {
                    // InternalDockerCompose.g:1639:2: ( ( 'service_healthy' ) )
                    // InternalDockerCompose.g:1640:3: ( 'service_healthy' )
                    {
                     before(grammarAccess.getConditionAccess().getService_healthyEnumLiteralDeclaration_1()); 
                    // InternalDockerCompose.g:1641:3: ( 'service_healthy' )
                    // InternalDockerCompose.g:1641:4: 'service_healthy'
                    {
                    match(input,38,FOLLOW_2); 

                    }

                     after(grammarAccess.getConditionAccess().getService_healthyEnumLiteralDeclaration_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1645:2: ( ( 'service_completed_successfully' ) )
                    {
                    // InternalDockerCompose.g:1645:2: ( ( 'service_completed_successfully' ) )
                    // InternalDockerCompose.g:1646:3: ( 'service_completed_successfully' )
                    {
                     before(grammarAccess.getConditionAccess().getService_completed_successfullyEnumLiteralDeclaration_2()); 
                    // InternalDockerCompose.g:1647:3: ( 'service_completed_successfully' )
                    // InternalDockerCompose.g:1647:4: 'service_completed_successfully'
                    {
                    match(input,39,FOLLOW_2); 

                    }

                     after(grammarAccess.getConditionAccess().getService_completed_successfullyEnumLiteralDeclaration_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Condition__Alternatives"


    // $ANTLR start "rule__DockerCompose__Group_0__0"
    // InternalDockerCompose.g:1655:1: rule__DockerCompose__Group_0__0 : rule__DockerCompose__Group_0__0__Impl rule__DockerCompose__Group_0__1 ;
    public final void rule__DockerCompose__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1659:1: ( rule__DockerCompose__Group_0__0__Impl rule__DockerCompose__Group_0__1 )
            // InternalDockerCompose.g:1660:2: rule__DockerCompose__Group_0__0__Impl rule__DockerCompose__Group_0__1
            {
            pushFollow(FOLLOW_6);
            rule__DockerCompose__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_0__0"


    // $ANTLR start "rule__DockerCompose__Group_0__0__Impl"
    // InternalDockerCompose.g:1667:1: rule__DockerCompose__Group_0__0__Impl : ( 'version:' ) ;
    public final void rule__DockerCompose__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1671:1: ( ( 'version:' ) )
            // InternalDockerCompose.g:1672:1: ( 'version:' )
            {
            // InternalDockerCompose.g:1672:1: ( 'version:' )
            // InternalDockerCompose.g:1673:2: 'version:'
            {
             before(grammarAccess.getDockerComposeAccess().getVersionKeyword_0_0()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getVersionKeyword_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_0__0__Impl"


    // $ANTLR start "rule__DockerCompose__Group_0__1"
    // InternalDockerCompose.g:1682:1: rule__DockerCompose__Group_0__1 : rule__DockerCompose__Group_0__1__Impl ;
    public final void rule__DockerCompose__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1686:1: ( rule__DockerCompose__Group_0__1__Impl )
            // InternalDockerCompose.g:1687:2: rule__DockerCompose__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_0__1"


    // $ANTLR start "rule__DockerCompose__Group_0__1__Impl"
    // InternalDockerCompose.g:1693:1: rule__DockerCompose__Group_0__1__Impl : ( ( rule__DockerCompose__VersionAssignment_0_1 ) ) ;
    public final void rule__DockerCompose__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1697:1: ( ( ( rule__DockerCompose__VersionAssignment_0_1 ) ) )
            // InternalDockerCompose.g:1698:1: ( ( rule__DockerCompose__VersionAssignment_0_1 ) )
            {
            // InternalDockerCompose.g:1698:1: ( ( rule__DockerCompose__VersionAssignment_0_1 ) )
            // InternalDockerCompose.g:1699:2: ( rule__DockerCompose__VersionAssignment_0_1 )
            {
             before(grammarAccess.getDockerComposeAccess().getVersionAssignment_0_1()); 
            // InternalDockerCompose.g:1700:2: ( rule__DockerCompose__VersionAssignment_0_1 )
            // InternalDockerCompose.g:1700:3: rule__DockerCompose__VersionAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__VersionAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getVersionAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_0__1__Impl"


    // $ANTLR start "rule__DockerCompose__Group_1__0"
    // InternalDockerCompose.g:1709:1: rule__DockerCompose__Group_1__0 : rule__DockerCompose__Group_1__0__Impl rule__DockerCompose__Group_1__1 ;
    public final void rule__DockerCompose__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1713:1: ( rule__DockerCompose__Group_1__0__Impl rule__DockerCompose__Group_1__1 )
            // InternalDockerCompose.g:1714:2: rule__DockerCompose__Group_1__0__Impl rule__DockerCompose__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__DockerCompose__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_1__0"


    // $ANTLR start "rule__DockerCompose__Group_1__0__Impl"
    // InternalDockerCompose.g:1721:1: rule__DockerCompose__Group_1__0__Impl : ( 'services:' ) ;
    public final void rule__DockerCompose__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1725:1: ( ( 'services:' ) )
            // InternalDockerCompose.g:1726:1: ( 'services:' )
            {
            // InternalDockerCompose.g:1726:1: ( 'services:' )
            // InternalDockerCompose.g:1727:2: 'services:'
            {
             before(grammarAccess.getDockerComposeAccess().getServicesKeyword_1_0()); 
            match(input,41,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getServicesKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_1__0__Impl"


    // $ANTLR start "rule__DockerCompose__Group_1__1"
    // InternalDockerCompose.g:1736:1: rule__DockerCompose__Group_1__1 : rule__DockerCompose__Group_1__1__Impl ;
    public final void rule__DockerCompose__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1740:1: ( rule__DockerCompose__Group_1__1__Impl )
            // InternalDockerCompose.g:1741:2: rule__DockerCompose__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_1__1"


    // $ANTLR start "rule__DockerCompose__Group_1__1__Impl"
    // InternalDockerCompose.g:1747:1: rule__DockerCompose__Group_1__1__Impl : ( ( ( rule__DockerCompose__ServicesAssignment_1_1 ) ) ( ( rule__DockerCompose__ServicesAssignment_1_1 )* ) ) ;
    public final void rule__DockerCompose__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1751:1: ( ( ( ( rule__DockerCompose__ServicesAssignment_1_1 ) ) ( ( rule__DockerCompose__ServicesAssignment_1_1 )* ) ) )
            // InternalDockerCompose.g:1752:1: ( ( ( rule__DockerCompose__ServicesAssignment_1_1 ) ) ( ( rule__DockerCompose__ServicesAssignment_1_1 )* ) )
            {
            // InternalDockerCompose.g:1752:1: ( ( ( rule__DockerCompose__ServicesAssignment_1_1 ) ) ( ( rule__DockerCompose__ServicesAssignment_1_1 )* ) )
            // InternalDockerCompose.g:1753:2: ( ( rule__DockerCompose__ServicesAssignment_1_1 ) ) ( ( rule__DockerCompose__ServicesAssignment_1_1 )* )
            {
            // InternalDockerCompose.g:1753:2: ( ( rule__DockerCompose__ServicesAssignment_1_1 ) )
            // InternalDockerCompose.g:1754:3: ( rule__DockerCompose__ServicesAssignment_1_1 )
            {
             before(grammarAccess.getDockerComposeAccess().getServicesAssignment_1_1()); 
            // InternalDockerCompose.g:1755:3: ( rule__DockerCompose__ServicesAssignment_1_1 )
            // InternalDockerCompose.g:1755:4: rule__DockerCompose__ServicesAssignment_1_1
            {
            pushFollow(FOLLOW_4);
            rule__DockerCompose__ServicesAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getServicesAssignment_1_1()); 

            }

            // InternalDockerCompose.g:1758:2: ( ( rule__DockerCompose__ServicesAssignment_1_1 )* )
            // InternalDockerCompose.g:1759:3: ( rule__DockerCompose__ServicesAssignment_1_1 )*
            {
             before(grammarAccess.getDockerComposeAccess().getServicesAssignment_1_1()); 
            // InternalDockerCompose.g:1760:3: ( rule__DockerCompose__ServicesAssignment_1_1 )*
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( ((LA34_0>=RULE_STRING && LA34_0<=RULE_ID)) ) {
                    alt34=1;
                }


                switch (alt34) {
            	case 1 :
            	    // InternalDockerCompose.g:1760:4: rule__DockerCompose__ServicesAssignment_1_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__DockerCompose__ServicesAssignment_1_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);

             after(grammarAccess.getDockerComposeAccess().getServicesAssignment_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_1__1__Impl"


    // $ANTLR start "rule__DockerCompose__Group_2__0"
    // InternalDockerCompose.g:1770:1: rule__DockerCompose__Group_2__0 : rule__DockerCompose__Group_2__0__Impl rule__DockerCompose__Group_2__1 ;
    public final void rule__DockerCompose__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1774:1: ( rule__DockerCompose__Group_2__0__Impl rule__DockerCompose__Group_2__1 )
            // InternalDockerCompose.g:1775:2: rule__DockerCompose__Group_2__0__Impl rule__DockerCompose__Group_2__1
            {
            pushFollow(FOLLOW_7);
            rule__DockerCompose__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_2__0"


    // $ANTLR start "rule__DockerCompose__Group_2__0__Impl"
    // InternalDockerCompose.g:1782:1: rule__DockerCompose__Group_2__0__Impl : ( 'volumes:' ) ;
    public final void rule__DockerCompose__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1786:1: ( ( 'volumes:' ) )
            // InternalDockerCompose.g:1787:1: ( 'volumes:' )
            {
            // InternalDockerCompose.g:1787:1: ( 'volumes:' )
            // InternalDockerCompose.g:1788:2: 'volumes:'
            {
             before(grammarAccess.getDockerComposeAccess().getVolumesKeyword_2_0()); 
            match(input,42,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getVolumesKeyword_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_2__0__Impl"


    // $ANTLR start "rule__DockerCompose__Group_2__1"
    // InternalDockerCompose.g:1797:1: rule__DockerCompose__Group_2__1 : rule__DockerCompose__Group_2__1__Impl ;
    public final void rule__DockerCompose__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1801:1: ( rule__DockerCompose__Group_2__1__Impl )
            // InternalDockerCompose.g:1802:2: rule__DockerCompose__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_2__1"


    // $ANTLR start "rule__DockerCompose__Group_2__1__Impl"
    // InternalDockerCompose.g:1808:1: rule__DockerCompose__Group_2__1__Impl : ( ( ( rule__DockerCompose__VolumesAssignment_2_1 ) ) ( ( rule__DockerCompose__VolumesAssignment_2_1 )* ) ) ;
    public final void rule__DockerCompose__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1812:1: ( ( ( ( rule__DockerCompose__VolumesAssignment_2_1 ) ) ( ( rule__DockerCompose__VolumesAssignment_2_1 )* ) ) )
            // InternalDockerCompose.g:1813:1: ( ( ( rule__DockerCompose__VolumesAssignment_2_1 ) ) ( ( rule__DockerCompose__VolumesAssignment_2_1 )* ) )
            {
            // InternalDockerCompose.g:1813:1: ( ( ( rule__DockerCompose__VolumesAssignment_2_1 ) ) ( ( rule__DockerCompose__VolumesAssignment_2_1 )* ) )
            // InternalDockerCompose.g:1814:2: ( ( rule__DockerCompose__VolumesAssignment_2_1 ) ) ( ( rule__DockerCompose__VolumesAssignment_2_1 )* )
            {
            // InternalDockerCompose.g:1814:2: ( ( rule__DockerCompose__VolumesAssignment_2_1 ) )
            // InternalDockerCompose.g:1815:3: ( rule__DockerCompose__VolumesAssignment_2_1 )
            {
             before(grammarAccess.getDockerComposeAccess().getVolumesAssignment_2_1()); 
            // InternalDockerCompose.g:1816:3: ( rule__DockerCompose__VolumesAssignment_2_1 )
            // InternalDockerCompose.g:1816:4: rule__DockerCompose__VolumesAssignment_2_1
            {
            pushFollow(FOLLOW_4);
            rule__DockerCompose__VolumesAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getVolumesAssignment_2_1()); 

            }

            // InternalDockerCompose.g:1819:2: ( ( rule__DockerCompose__VolumesAssignment_2_1 )* )
            // InternalDockerCompose.g:1820:3: ( rule__DockerCompose__VolumesAssignment_2_1 )*
            {
             before(grammarAccess.getDockerComposeAccess().getVolumesAssignment_2_1()); 
            // InternalDockerCompose.g:1821:3: ( rule__DockerCompose__VolumesAssignment_2_1 )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( ((LA35_0>=RULE_STRING && LA35_0<=RULE_ID)) ) {
                    alt35=1;
                }


                switch (alt35) {
            	case 1 :
            	    // InternalDockerCompose.g:1821:4: rule__DockerCompose__VolumesAssignment_2_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__DockerCompose__VolumesAssignment_2_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);

             after(grammarAccess.getDockerComposeAccess().getVolumesAssignment_2_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_2__1__Impl"


    // $ANTLR start "rule__DockerCompose__Group_3__0"
    // InternalDockerCompose.g:1831:1: rule__DockerCompose__Group_3__0 : rule__DockerCompose__Group_3__0__Impl rule__DockerCompose__Group_3__1 ;
    public final void rule__DockerCompose__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1835:1: ( rule__DockerCompose__Group_3__0__Impl rule__DockerCompose__Group_3__1 )
            // InternalDockerCompose.g:1836:2: rule__DockerCompose__Group_3__0__Impl rule__DockerCompose__Group_3__1
            {
            pushFollow(FOLLOW_7);
            rule__DockerCompose__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_3__0"


    // $ANTLR start "rule__DockerCompose__Group_3__0__Impl"
    // InternalDockerCompose.g:1843:1: rule__DockerCompose__Group_3__0__Impl : ( 'configs:' ) ;
    public final void rule__DockerCompose__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1847:1: ( ( 'configs:' ) )
            // InternalDockerCompose.g:1848:1: ( 'configs:' )
            {
            // InternalDockerCompose.g:1848:1: ( 'configs:' )
            // InternalDockerCompose.g:1849:2: 'configs:'
            {
             before(grammarAccess.getDockerComposeAccess().getConfigsKeyword_3_0()); 
            match(input,43,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getConfigsKeyword_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_3__0__Impl"


    // $ANTLR start "rule__DockerCompose__Group_3__1"
    // InternalDockerCompose.g:1858:1: rule__DockerCompose__Group_3__1 : rule__DockerCompose__Group_3__1__Impl ;
    public final void rule__DockerCompose__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1862:1: ( rule__DockerCompose__Group_3__1__Impl )
            // InternalDockerCompose.g:1863:2: rule__DockerCompose__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_3__1"


    // $ANTLR start "rule__DockerCompose__Group_3__1__Impl"
    // InternalDockerCompose.g:1869:1: rule__DockerCompose__Group_3__1__Impl : ( ( ( rule__DockerCompose__ConfigsAssignment_3_1 ) ) ( ( rule__DockerCompose__ConfigsAssignment_3_1 )* ) ) ;
    public final void rule__DockerCompose__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1873:1: ( ( ( ( rule__DockerCompose__ConfigsAssignment_3_1 ) ) ( ( rule__DockerCompose__ConfigsAssignment_3_1 )* ) ) )
            // InternalDockerCompose.g:1874:1: ( ( ( rule__DockerCompose__ConfigsAssignment_3_1 ) ) ( ( rule__DockerCompose__ConfigsAssignment_3_1 )* ) )
            {
            // InternalDockerCompose.g:1874:1: ( ( ( rule__DockerCompose__ConfigsAssignment_3_1 ) ) ( ( rule__DockerCompose__ConfigsAssignment_3_1 )* ) )
            // InternalDockerCompose.g:1875:2: ( ( rule__DockerCompose__ConfigsAssignment_3_1 ) ) ( ( rule__DockerCompose__ConfigsAssignment_3_1 )* )
            {
            // InternalDockerCompose.g:1875:2: ( ( rule__DockerCompose__ConfigsAssignment_3_1 ) )
            // InternalDockerCompose.g:1876:3: ( rule__DockerCompose__ConfigsAssignment_3_1 )
            {
             before(grammarAccess.getDockerComposeAccess().getConfigsAssignment_3_1()); 
            // InternalDockerCompose.g:1877:3: ( rule__DockerCompose__ConfigsAssignment_3_1 )
            // InternalDockerCompose.g:1877:4: rule__DockerCompose__ConfigsAssignment_3_1
            {
            pushFollow(FOLLOW_4);
            rule__DockerCompose__ConfigsAssignment_3_1();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getConfigsAssignment_3_1()); 

            }

            // InternalDockerCompose.g:1880:2: ( ( rule__DockerCompose__ConfigsAssignment_3_1 )* )
            // InternalDockerCompose.g:1881:3: ( rule__DockerCompose__ConfigsAssignment_3_1 )*
            {
             before(grammarAccess.getDockerComposeAccess().getConfigsAssignment_3_1()); 
            // InternalDockerCompose.g:1882:3: ( rule__DockerCompose__ConfigsAssignment_3_1 )*
            loop36:
            do {
                int alt36=2;
                int LA36_0 = input.LA(1);

                if ( ((LA36_0>=RULE_STRING && LA36_0<=RULE_ID)) ) {
                    alt36=1;
                }


                switch (alt36) {
            	case 1 :
            	    // InternalDockerCompose.g:1882:4: rule__DockerCompose__ConfigsAssignment_3_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__DockerCompose__ConfigsAssignment_3_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop36;
                }
            } while (true);

             after(grammarAccess.getDockerComposeAccess().getConfigsAssignment_3_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_3__1__Impl"


    // $ANTLR start "rule__DockerCompose__Group_4__0"
    // InternalDockerCompose.g:1892:1: rule__DockerCompose__Group_4__0 : rule__DockerCompose__Group_4__0__Impl rule__DockerCompose__Group_4__1 ;
    public final void rule__DockerCompose__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1896:1: ( rule__DockerCompose__Group_4__0__Impl rule__DockerCompose__Group_4__1 )
            // InternalDockerCompose.g:1897:2: rule__DockerCompose__Group_4__0__Impl rule__DockerCompose__Group_4__1
            {
            pushFollow(FOLLOW_7);
            rule__DockerCompose__Group_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_4__0"


    // $ANTLR start "rule__DockerCompose__Group_4__0__Impl"
    // InternalDockerCompose.g:1904:1: rule__DockerCompose__Group_4__0__Impl : ( 'secrets:' ) ;
    public final void rule__DockerCompose__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1908:1: ( ( 'secrets:' ) )
            // InternalDockerCompose.g:1909:1: ( 'secrets:' )
            {
            // InternalDockerCompose.g:1909:1: ( 'secrets:' )
            // InternalDockerCompose.g:1910:2: 'secrets:'
            {
             before(grammarAccess.getDockerComposeAccess().getSecretsKeyword_4_0()); 
            match(input,44,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getSecretsKeyword_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_4__0__Impl"


    // $ANTLR start "rule__DockerCompose__Group_4__1"
    // InternalDockerCompose.g:1919:1: rule__DockerCompose__Group_4__1 : rule__DockerCompose__Group_4__1__Impl ;
    public final void rule__DockerCompose__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1923:1: ( rule__DockerCompose__Group_4__1__Impl )
            // InternalDockerCompose.g:1924:2: rule__DockerCompose__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_4__1"


    // $ANTLR start "rule__DockerCompose__Group_4__1__Impl"
    // InternalDockerCompose.g:1930:1: rule__DockerCompose__Group_4__1__Impl : ( ( ( rule__DockerCompose__SecretsAssignment_4_1 ) ) ( ( rule__DockerCompose__SecretsAssignment_4_1 )* ) ) ;
    public final void rule__DockerCompose__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1934:1: ( ( ( ( rule__DockerCompose__SecretsAssignment_4_1 ) ) ( ( rule__DockerCompose__SecretsAssignment_4_1 )* ) ) )
            // InternalDockerCompose.g:1935:1: ( ( ( rule__DockerCompose__SecretsAssignment_4_1 ) ) ( ( rule__DockerCompose__SecretsAssignment_4_1 )* ) )
            {
            // InternalDockerCompose.g:1935:1: ( ( ( rule__DockerCompose__SecretsAssignment_4_1 ) ) ( ( rule__DockerCompose__SecretsAssignment_4_1 )* ) )
            // InternalDockerCompose.g:1936:2: ( ( rule__DockerCompose__SecretsAssignment_4_1 ) ) ( ( rule__DockerCompose__SecretsAssignment_4_1 )* )
            {
            // InternalDockerCompose.g:1936:2: ( ( rule__DockerCompose__SecretsAssignment_4_1 ) )
            // InternalDockerCompose.g:1937:3: ( rule__DockerCompose__SecretsAssignment_4_1 )
            {
             before(grammarAccess.getDockerComposeAccess().getSecretsAssignment_4_1()); 
            // InternalDockerCompose.g:1938:3: ( rule__DockerCompose__SecretsAssignment_4_1 )
            // InternalDockerCompose.g:1938:4: rule__DockerCompose__SecretsAssignment_4_1
            {
            pushFollow(FOLLOW_4);
            rule__DockerCompose__SecretsAssignment_4_1();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getSecretsAssignment_4_1()); 

            }

            // InternalDockerCompose.g:1941:2: ( ( rule__DockerCompose__SecretsAssignment_4_1 )* )
            // InternalDockerCompose.g:1942:3: ( rule__DockerCompose__SecretsAssignment_4_1 )*
            {
             before(grammarAccess.getDockerComposeAccess().getSecretsAssignment_4_1()); 
            // InternalDockerCompose.g:1943:3: ( rule__DockerCompose__SecretsAssignment_4_1 )*
            loop37:
            do {
                int alt37=2;
                int LA37_0 = input.LA(1);

                if ( ((LA37_0>=RULE_STRING && LA37_0<=RULE_ID)) ) {
                    alt37=1;
                }


                switch (alt37) {
            	case 1 :
            	    // InternalDockerCompose.g:1943:4: rule__DockerCompose__SecretsAssignment_4_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__DockerCompose__SecretsAssignment_4_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop37;
                }
            } while (true);

             after(grammarAccess.getDockerComposeAccess().getSecretsAssignment_4_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_4__1__Impl"


    // $ANTLR start "rule__DockerCompose__Group_5__0"
    // InternalDockerCompose.g:1953:1: rule__DockerCompose__Group_5__0 : rule__DockerCompose__Group_5__0__Impl rule__DockerCompose__Group_5__1 ;
    public final void rule__DockerCompose__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1957:1: ( rule__DockerCompose__Group_5__0__Impl rule__DockerCompose__Group_5__1 )
            // InternalDockerCompose.g:1958:2: rule__DockerCompose__Group_5__0__Impl rule__DockerCompose__Group_5__1
            {
            pushFollow(FOLLOW_7);
            rule__DockerCompose__Group_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_5__0"


    // $ANTLR start "rule__DockerCompose__Group_5__0__Impl"
    // InternalDockerCompose.g:1965:1: rule__DockerCompose__Group_5__0__Impl : ( 'networks:' ) ;
    public final void rule__DockerCompose__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1969:1: ( ( 'networks:' ) )
            // InternalDockerCompose.g:1970:1: ( 'networks:' )
            {
            // InternalDockerCompose.g:1970:1: ( 'networks:' )
            // InternalDockerCompose.g:1971:2: 'networks:'
            {
             before(grammarAccess.getDockerComposeAccess().getNetworksKeyword_5_0()); 
            match(input,45,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getNetworksKeyword_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_5__0__Impl"


    // $ANTLR start "rule__DockerCompose__Group_5__1"
    // InternalDockerCompose.g:1980:1: rule__DockerCompose__Group_5__1 : rule__DockerCompose__Group_5__1__Impl ;
    public final void rule__DockerCompose__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1984:1: ( rule__DockerCompose__Group_5__1__Impl )
            // InternalDockerCompose.g:1985:2: rule__DockerCompose__Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_5__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_5__1"


    // $ANTLR start "rule__DockerCompose__Group_5__1__Impl"
    // InternalDockerCompose.g:1991:1: rule__DockerCompose__Group_5__1__Impl : ( ( ( rule__DockerCompose__NetworksAssignment_5_1 ) ) ( ( rule__DockerCompose__NetworksAssignment_5_1 )* ) ) ;
    public final void rule__DockerCompose__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1995:1: ( ( ( ( rule__DockerCompose__NetworksAssignment_5_1 ) ) ( ( rule__DockerCompose__NetworksAssignment_5_1 )* ) ) )
            // InternalDockerCompose.g:1996:1: ( ( ( rule__DockerCompose__NetworksAssignment_5_1 ) ) ( ( rule__DockerCompose__NetworksAssignment_5_1 )* ) )
            {
            // InternalDockerCompose.g:1996:1: ( ( ( rule__DockerCompose__NetworksAssignment_5_1 ) ) ( ( rule__DockerCompose__NetworksAssignment_5_1 )* ) )
            // InternalDockerCompose.g:1997:2: ( ( rule__DockerCompose__NetworksAssignment_5_1 ) ) ( ( rule__DockerCompose__NetworksAssignment_5_1 )* )
            {
            // InternalDockerCompose.g:1997:2: ( ( rule__DockerCompose__NetworksAssignment_5_1 ) )
            // InternalDockerCompose.g:1998:3: ( rule__DockerCompose__NetworksAssignment_5_1 )
            {
             before(grammarAccess.getDockerComposeAccess().getNetworksAssignment_5_1()); 
            // InternalDockerCompose.g:1999:3: ( rule__DockerCompose__NetworksAssignment_5_1 )
            // InternalDockerCompose.g:1999:4: rule__DockerCompose__NetworksAssignment_5_1
            {
            pushFollow(FOLLOW_4);
            rule__DockerCompose__NetworksAssignment_5_1();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getNetworksAssignment_5_1()); 

            }

            // InternalDockerCompose.g:2002:2: ( ( rule__DockerCompose__NetworksAssignment_5_1 )* )
            // InternalDockerCompose.g:2003:3: ( rule__DockerCompose__NetworksAssignment_5_1 )*
            {
             before(grammarAccess.getDockerComposeAccess().getNetworksAssignment_5_1()); 
            // InternalDockerCompose.g:2004:3: ( rule__DockerCompose__NetworksAssignment_5_1 )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( ((LA38_0>=RULE_STRING && LA38_0<=RULE_ID)) ) {
                    alt38=1;
                }


                switch (alt38) {
            	case 1 :
            	    // InternalDockerCompose.g:2004:4: rule__DockerCompose__NetworksAssignment_5_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__DockerCompose__NetworksAssignment_5_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);

             after(grammarAccess.getDockerComposeAccess().getNetworksAssignment_5_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_5__1__Impl"


    // $ANTLR start "rule__Service__Group__0"
    // InternalDockerCompose.g:2014:1: rule__Service__Group__0 : rule__Service__Group__0__Impl rule__Service__Group__1 ;
    public final void rule__Service__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2018:1: ( rule__Service__Group__0__Impl rule__Service__Group__1 )
            // InternalDockerCompose.g:2019:2: rule__Service__Group__0__Impl rule__Service__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__Service__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__0"


    // $ANTLR start "rule__Service__Group__0__Impl"
    // InternalDockerCompose.g:2026:1: rule__Service__Group__0__Impl : ( () ) ;
    public final void rule__Service__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2030:1: ( ( () ) )
            // InternalDockerCompose.g:2031:1: ( () )
            {
            // InternalDockerCompose.g:2031:1: ( () )
            // InternalDockerCompose.g:2032:2: ()
            {
             before(grammarAccess.getServiceAccess().getServiceAction_0()); 
            // InternalDockerCompose.g:2033:2: ()
            // InternalDockerCompose.g:2033:3: 
            {
            }

             after(grammarAccess.getServiceAccess().getServiceAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__0__Impl"


    // $ANTLR start "rule__Service__Group__1"
    // InternalDockerCompose.g:2041:1: rule__Service__Group__1 : rule__Service__Group__1__Impl rule__Service__Group__2 ;
    public final void rule__Service__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2045:1: ( rule__Service__Group__1__Impl rule__Service__Group__2 )
            // InternalDockerCompose.g:2046:2: rule__Service__Group__1__Impl rule__Service__Group__2
            {
            pushFollow(FOLLOW_8);
            rule__Service__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__1"


    // $ANTLR start "rule__Service__Group__1__Impl"
    // InternalDockerCompose.g:2053:1: rule__Service__Group__1__Impl : ( ( rule__Service__NameAssignment_1 ) ) ;
    public final void rule__Service__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2057:1: ( ( ( rule__Service__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:2058:1: ( ( rule__Service__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:2058:1: ( ( rule__Service__NameAssignment_1 ) )
            // InternalDockerCompose.g:2059:2: ( rule__Service__NameAssignment_1 )
            {
             before(grammarAccess.getServiceAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:2060:2: ( rule__Service__NameAssignment_1 )
            // InternalDockerCompose.g:2060:3: rule__Service__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__1__Impl"


    // $ANTLR start "rule__Service__Group__2"
    // InternalDockerCompose.g:2068:1: rule__Service__Group__2 : rule__Service__Group__2__Impl rule__Service__Group__3 ;
    public final void rule__Service__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2072:1: ( rule__Service__Group__2__Impl rule__Service__Group__3 )
            // InternalDockerCompose.g:2073:2: rule__Service__Group__2__Impl rule__Service__Group__3
            {
            pushFollow(FOLLOW_9);
            rule__Service__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__2"


    // $ANTLR start "rule__Service__Group__2__Impl"
    // InternalDockerCompose.g:2080:1: rule__Service__Group__2__Impl : ( ':' ) ;
    public final void rule__Service__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2084:1: ( ( ':' ) )
            // InternalDockerCompose.g:2085:1: ( ':' )
            {
            // InternalDockerCompose.g:2085:1: ( ':' )
            // InternalDockerCompose.g:2086:2: ':'
            {
             before(grammarAccess.getServiceAccess().getColonKeyword_2()); 
            match(input,46,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__2__Impl"


    // $ANTLR start "rule__Service__Group__3"
    // InternalDockerCompose.g:2095:1: rule__Service__Group__3 : rule__Service__Group__3__Impl ;
    public final void rule__Service__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2099:1: ( rule__Service__Group__3__Impl )
            // InternalDockerCompose.g:2100:2: rule__Service__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__3"


    // $ANTLR start "rule__Service__Group__3__Impl"
    // InternalDockerCompose.g:2106:1: rule__Service__Group__3__Impl : ( ( rule__Service__UnorderedGroup_3 ) ) ;
    public final void rule__Service__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2110:1: ( ( ( rule__Service__UnorderedGroup_3 ) ) )
            // InternalDockerCompose.g:2111:1: ( ( rule__Service__UnorderedGroup_3 ) )
            {
            // InternalDockerCompose.g:2111:1: ( ( rule__Service__UnorderedGroup_3 ) )
            // InternalDockerCompose.g:2112:2: ( rule__Service__UnorderedGroup_3 )
            {
             before(grammarAccess.getServiceAccess().getUnorderedGroup_3()); 
            // InternalDockerCompose.g:2113:2: ( rule__Service__UnorderedGroup_3 )
            // InternalDockerCompose.g:2113:3: rule__Service__UnorderedGroup_3
            {
            pushFollow(FOLLOW_2);
            rule__Service__UnorderedGroup_3();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getUnorderedGroup_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__3__Impl"


    // $ANTLR start "rule__Service__Group_3_0_0__0"
    // InternalDockerCompose.g:2122:1: rule__Service__Group_3_0_0__0 : rule__Service__Group_3_0_0__0__Impl rule__Service__Group_3_0_0__1 ;
    public final void rule__Service__Group_3_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2126:1: ( rule__Service__Group_3_0_0__0__Impl rule__Service__Group_3_0_0__1 )
            // InternalDockerCompose.g:2127:2: rule__Service__Group_3_0_0__0__Impl rule__Service__Group_3_0_0__1
            {
            pushFollow(FOLLOW_10);
            rule__Service__Group_3_0_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_0_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0_0__0"


    // $ANTLR start "rule__Service__Group_3_0_0__0__Impl"
    // InternalDockerCompose.g:2134:1: rule__Service__Group_3_0_0__0__Impl : ( 'build:' ) ;
    public final void rule__Service__Group_3_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2138:1: ( ( 'build:' ) )
            // InternalDockerCompose.g:2139:1: ( 'build:' )
            {
            // InternalDockerCompose.g:2139:1: ( 'build:' )
            // InternalDockerCompose.g:2140:2: 'build:'
            {
             before(grammarAccess.getServiceAccess().getBuildKeyword_3_0_0_0()); 
            match(input,47,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getBuildKeyword_3_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0_0__0__Impl"


    // $ANTLR start "rule__Service__Group_3_0_0__1"
    // InternalDockerCompose.g:2149:1: rule__Service__Group_3_0_0__1 : rule__Service__Group_3_0_0__1__Impl ;
    public final void rule__Service__Group_3_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2153:1: ( rule__Service__Group_3_0_0__1__Impl )
            // InternalDockerCompose.g:2154:2: rule__Service__Group_3_0_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_0_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0_0__1"


    // $ANTLR start "rule__Service__Group_3_0_0__1__Impl"
    // InternalDockerCompose.g:2160:1: rule__Service__Group_3_0_0__1__Impl : ( ( rule__Service__BuildAssignment_3_0_0_1 ) ) ;
    public final void rule__Service__Group_3_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2164:1: ( ( ( rule__Service__BuildAssignment_3_0_0_1 ) ) )
            // InternalDockerCompose.g:2165:1: ( ( rule__Service__BuildAssignment_3_0_0_1 ) )
            {
            // InternalDockerCompose.g:2165:1: ( ( rule__Service__BuildAssignment_3_0_0_1 ) )
            // InternalDockerCompose.g:2166:2: ( rule__Service__BuildAssignment_3_0_0_1 )
            {
             before(grammarAccess.getServiceAccess().getBuildAssignment_3_0_0_1()); 
            // InternalDockerCompose.g:2167:2: ( rule__Service__BuildAssignment_3_0_0_1 )
            // InternalDockerCompose.g:2167:3: rule__Service__BuildAssignment_3_0_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__BuildAssignment_3_0_0_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getBuildAssignment_3_0_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0_0__1__Impl"


    // $ANTLR start "rule__Service__Group_3_0_1__0"
    // InternalDockerCompose.g:2176:1: rule__Service__Group_3_0_1__0 : rule__Service__Group_3_0_1__0__Impl rule__Service__Group_3_0_1__1 ;
    public final void rule__Service__Group_3_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2180:1: ( rule__Service__Group_3_0_1__0__Impl rule__Service__Group_3_0_1__1 )
            // InternalDockerCompose.g:2181:2: rule__Service__Group_3_0_1__0__Impl rule__Service__Group_3_0_1__1
            {
            pushFollow(FOLLOW_11);
            rule__Service__Group_3_0_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_0_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0_1__0"


    // $ANTLR start "rule__Service__Group_3_0_1__0__Impl"
    // InternalDockerCompose.g:2188:1: rule__Service__Group_3_0_1__0__Impl : ( 'image:' ) ;
    public final void rule__Service__Group_3_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2192:1: ( ( 'image:' ) )
            // InternalDockerCompose.g:2193:1: ( 'image:' )
            {
            // InternalDockerCompose.g:2193:1: ( 'image:' )
            // InternalDockerCompose.g:2194:2: 'image:'
            {
             before(grammarAccess.getServiceAccess().getImageKeyword_3_0_1_0()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getImageKeyword_3_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_0_1__1"
    // InternalDockerCompose.g:2203:1: rule__Service__Group_3_0_1__1 : rule__Service__Group_3_0_1__1__Impl ;
    public final void rule__Service__Group_3_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2207:1: ( rule__Service__Group_3_0_1__1__Impl )
            // InternalDockerCompose.g:2208:2: rule__Service__Group_3_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_0_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0_1__1"


    // $ANTLR start "rule__Service__Group_3_0_1__1__Impl"
    // InternalDockerCompose.g:2214:1: rule__Service__Group_3_0_1__1__Impl : ( ( rule__Service__ImageAssignment_3_0_1_1 ) ) ;
    public final void rule__Service__Group_3_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2218:1: ( ( ( rule__Service__ImageAssignment_3_0_1_1 ) ) )
            // InternalDockerCompose.g:2219:1: ( ( rule__Service__ImageAssignment_3_0_1_1 ) )
            {
            // InternalDockerCompose.g:2219:1: ( ( rule__Service__ImageAssignment_3_0_1_1 ) )
            // InternalDockerCompose.g:2220:2: ( rule__Service__ImageAssignment_3_0_1_1 )
            {
             before(grammarAccess.getServiceAccess().getImageAssignment_3_0_1_1()); 
            // InternalDockerCompose.g:2221:2: ( rule__Service__ImageAssignment_3_0_1_1 )
            // InternalDockerCompose.g:2221:3: rule__Service__ImageAssignment_3_0_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__ImageAssignment_3_0_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getImageAssignment_3_0_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_1__0"
    // InternalDockerCompose.g:2230:1: rule__Service__Group_3_1__0 : rule__Service__Group_3_1__0__Impl rule__Service__Group_3_1__1 ;
    public final void rule__Service__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2234:1: ( rule__Service__Group_3_1__0__Impl rule__Service__Group_3_1__1 )
            // InternalDockerCompose.g:2235:2: rule__Service__Group_3_1__0__Impl rule__Service__Group_3_1__1
            {
            pushFollow(FOLLOW_12);
            rule__Service__Group_3_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_1__0"


    // $ANTLR start "rule__Service__Group_3_1__0__Impl"
    // InternalDockerCompose.g:2242:1: rule__Service__Group_3_1__0__Impl : ( 'cpu_count:' ) ;
    public final void rule__Service__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2246:1: ( ( 'cpu_count:' ) )
            // InternalDockerCompose.g:2247:1: ( 'cpu_count:' )
            {
            // InternalDockerCompose.g:2247:1: ( 'cpu_count:' )
            // InternalDockerCompose.g:2248:2: 'cpu_count:'
            {
             before(grammarAccess.getServiceAccess().getCpu_countKeyword_3_1_0()); 
            match(input,49,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getCpu_countKeyword_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_1__1"
    // InternalDockerCompose.g:2257:1: rule__Service__Group_3_1__1 : rule__Service__Group_3_1__1__Impl ;
    public final void rule__Service__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2261:1: ( rule__Service__Group_3_1__1__Impl )
            // InternalDockerCompose.g:2262:2: rule__Service__Group_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_1__1"


    // $ANTLR start "rule__Service__Group_3_1__1__Impl"
    // InternalDockerCompose.g:2268:1: rule__Service__Group_3_1__1__Impl : ( ( rule__Service__Cpu_countAssignment_3_1_1 ) ) ;
    public final void rule__Service__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2272:1: ( ( ( rule__Service__Cpu_countAssignment_3_1_1 ) ) )
            // InternalDockerCompose.g:2273:1: ( ( rule__Service__Cpu_countAssignment_3_1_1 ) )
            {
            // InternalDockerCompose.g:2273:1: ( ( rule__Service__Cpu_countAssignment_3_1_1 ) )
            // InternalDockerCompose.g:2274:2: ( rule__Service__Cpu_countAssignment_3_1_1 )
            {
             before(grammarAccess.getServiceAccess().getCpu_countAssignment_3_1_1()); 
            // InternalDockerCompose.g:2275:2: ( rule__Service__Cpu_countAssignment_3_1_1 )
            // InternalDockerCompose.g:2275:3: rule__Service__Cpu_countAssignment_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Cpu_countAssignment_3_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getCpu_countAssignment_3_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_2__0"
    // InternalDockerCompose.g:2284:1: rule__Service__Group_3_2__0 : rule__Service__Group_3_2__0__Impl rule__Service__Group_3_2__1 ;
    public final void rule__Service__Group_3_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2288:1: ( rule__Service__Group_3_2__0__Impl rule__Service__Group_3_2__1 )
            // InternalDockerCompose.g:2289:2: rule__Service__Group_3_2__0__Impl rule__Service__Group_3_2__1
            {
            pushFollow(FOLLOW_11);
            rule__Service__Group_3_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_2__0"


    // $ANTLR start "rule__Service__Group_3_2__0__Impl"
    // InternalDockerCompose.g:2296:1: rule__Service__Group_3_2__0__Impl : ( 'command:' ) ;
    public final void rule__Service__Group_3_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2300:1: ( ( 'command:' ) )
            // InternalDockerCompose.g:2301:1: ( 'command:' )
            {
            // InternalDockerCompose.g:2301:1: ( 'command:' )
            // InternalDockerCompose.g:2302:2: 'command:'
            {
             before(grammarAccess.getServiceAccess().getCommandKeyword_3_2_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getCommandKeyword_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_2__0__Impl"


    // $ANTLR start "rule__Service__Group_3_2__1"
    // InternalDockerCompose.g:2311:1: rule__Service__Group_3_2__1 : rule__Service__Group_3_2__1__Impl ;
    public final void rule__Service__Group_3_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2315:1: ( rule__Service__Group_3_2__1__Impl )
            // InternalDockerCompose.g:2316:2: rule__Service__Group_3_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_2__1"


    // $ANTLR start "rule__Service__Group_3_2__1__Impl"
    // InternalDockerCompose.g:2322:1: rule__Service__Group_3_2__1__Impl : ( ( rule__Service__CommandAssignment_3_2_1 ) ) ;
    public final void rule__Service__Group_3_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2326:1: ( ( ( rule__Service__CommandAssignment_3_2_1 ) ) )
            // InternalDockerCompose.g:2327:1: ( ( rule__Service__CommandAssignment_3_2_1 ) )
            {
            // InternalDockerCompose.g:2327:1: ( ( rule__Service__CommandAssignment_3_2_1 ) )
            // InternalDockerCompose.g:2328:2: ( rule__Service__CommandAssignment_3_2_1 )
            {
             before(grammarAccess.getServiceAccess().getCommandAssignment_3_2_1()); 
            // InternalDockerCompose.g:2329:2: ( rule__Service__CommandAssignment_3_2_1 )
            // InternalDockerCompose.g:2329:3: rule__Service__CommandAssignment_3_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__CommandAssignment_3_2_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getCommandAssignment_3_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_2__1__Impl"


    // $ANTLR start "rule__Service__Group_3_3__0"
    // InternalDockerCompose.g:2338:1: rule__Service__Group_3_3__0 : rule__Service__Group_3_3__0__Impl rule__Service__Group_3_3__1 ;
    public final void rule__Service__Group_3_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2342:1: ( rule__Service__Group_3_3__0__Impl rule__Service__Group_3_3__1 )
            // InternalDockerCompose.g:2343:2: rule__Service__Group_3_3__0__Impl rule__Service__Group_3_3__1
            {
            pushFollow(FOLLOW_7);
            rule__Service__Group_3_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_3__0"


    // $ANTLR start "rule__Service__Group_3_3__0__Impl"
    // InternalDockerCompose.g:2350:1: rule__Service__Group_3_3__0__Impl : ( 'container_name:' ) ;
    public final void rule__Service__Group_3_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2354:1: ( ( 'container_name:' ) )
            // InternalDockerCompose.g:2355:1: ( 'container_name:' )
            {
            // InternalDockerCompose.g:2355:1: ( 'container_name:' )
            // InternalDockerCompose.g:2356:2: 'container_name:'
            {
             before(grammarAccess.getServiceAccess().getContainer_nameKeyword_3_3_0()); 
            match(input,51,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getContainer_nameKeyword_3_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_3__0__Impl"


    // $ANTLR start "rule__Service__Group_3_3__1"
    // InternalDockerCompose.g:2365:1: rule__Service__Group_3_3__1 : rule__Service__Group_3_3__1__Impl ;
    public final void rule__Service__Group_3_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2369:1: ( rule__Service__Group_3_3__1__Impl )
            // InternalDockerCompose.g:2370:2: rule__Service__Group_3_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_3__1"


    // $ANTLR start "rule__Service__Group_3_3__1__Impl"
    // InternalDockerCompose.g:2376:1: rule__Service__Group_3_3__1__Impl : ( ( rule__Service__Container_nameAssignment_3_3_1 ) ) ;
    public final void rule__Service__Group_3_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2380:1: ( ( ( rule__Service__Container_nameAssignment_3_3_1 ) ) )
            // InternalDockerCompose.g:2381:1: ( ( rule__Service__Container_nameAssignment_3_3_1 ) )
            {
            // InternalDockerCompose.g:2381:1: ( ( rule__Service__Container_nameAssignment_3_3_1 ) )
            // InternalDockerCompose.g:2382:2: ( rule__Service__Container_nameAssignment_3_3_1 )
            {
             before(grammarAccess.getServiceAccess().getContainer_nameAssignment_3_3_1()); 
            // InternalDockerCompose.g:2383:2: ( rule__Service__Container_nameAssignment_3_3_1 )
            // InternalDockerCompose.g:2383:3: rule__Service__Container_nameAssignment_3_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Container_nameAssignment_3_3_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getContainer_nameAssignment_3_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_3__1__Impl"


    // $ANTLR start "rule__Service__Group_3_4__0"
    // InternalDockerCompose.g:2392:1: rule__Service__Group_3_4__0 : rule__Service__Group_3_4__0__Impl rule__Service__Group_3_4__1 ;
    public final void rule__Service__Group_3_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2396:1: ( rule__Service__Group_3_4__0__Impl rule__Service__Group_3_4__1 )
            // InternalDockerCompose.g:2397:2: rule__Service__Group_3_4__0__Impl rule__Service__Group_3_4__1
            {
            pushFollow(FOLLOW_13);
            rule__Service__Group_3_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_4__0"


    // $ANTLR start "rule__Service__Group_3_4__0__Impl"
    // InternalDockerCompose.g:2404:1: rule__Service__Group_3_4__0__Impl : ( 'restart:' ) ;
    public final void rule__Service__Group_3_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2408:1: ( ( 'restart:' ) )
            // InternalDockerCompose.g:2409:1: ( 'restart:' )
            {
            // InternalDockerCompose.g:2409:1: ( 'restart:' )
            // InternalDockerCompose.g:2410:2: 'restart:'
            {
             before(grammarAccess.getServiceAccess().getRestartKeyword_3_4_0()); 
            match(input,52,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getRestartKeyword_3_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_4__0__Impl"


    // $ANTLR start "rule__Service__Group_3_4__1"
    // InternalDockerCompose.g:2419:1: rule__Service__Group_3_4__1 : rule__Service__Group_3_4__1__Impl ;
    public final void rule__Service__Group_3_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2423:1: ( rule__Service__Group_3_4__1__Impl )
            // InternalDockerCompose.g:2424:2: rule__Service__Group_3_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_4__1"


    // $ANTLR start "rule__Service__Group_3_4__1__Impl"
    // InternalDockerCompose.g:2430:1: rule__Service__Group_3_4__1__Impl : ( ( rule__Service__RestartAssignment_3_4_1 ) ) ;
    public final void rule__Service__Group_3_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2434:1: ( ( ( rule__Service__RestartAssignment_3_4_1 ) ) )
            // InternalDockerCompose.g:2435:1: ( ( rule__Service__RestartAssignment_3_4_1 ) )
            {
            // InternalDockerCompose.g:2435:1: ( ( rule__Service__RestartAssignment_3_4_1 ) )
            // InternalDockerCompose.g:2436:2: ( rule__Service__RestartAssignment_3_4_1 )
            {
             before(grammarAccess.getServiceAccess().getRestartAssignment_3_4_1()); 
            // InternalDockerCompose.g:2437:2: ( rule__Service__RestartAssignment_3_4_1 )
            // InternalDockerCompose.g:2437:3: rule__Service__RestartAssignment_3_4_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__RestartAssignment_3_4_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getRestartAssignment_3_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_4__1__Impl"


    // $ANTLR start "rule__Service__Group_3_5__0"
    // InternalDockerCompose.g:2446:1: rule__Service__Group_3_5__0 : rule__Service__Group_3_5__0__Impl rule__Service__Group_3_5__1 ;
    public final void rule__Service__Group_3_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2450:1: ( rule__Service__Group_3_5__0__Impl rule__Service__Group_3_5__1 )
            // InternalDockerCompose.g:2451:2: rule__Service__Group_3_5__0__Impl rule__Service__Group_3_5__1
            {
            pushFollow(FOLLOW_14);
            rule__Service__Group_3_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_5__0"


    // $ANTLR start "rule__Service__Group_3_5__0__Impl"
    // InternalDockerCompose.g:2458:1: rule__Service__Group_3_5__0__Impl : ( 'init:' ) ;
    public final void rule__Service__Group_3_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2462:1: ( ( 'init:' ) )
            // InternalDockerCompose.g:2463:1: ( 'init:' )
            {
            // InternalDockerCompose.g:2463:1: ( 'init:' )
            // InternalDockerCompose.g:2464:2: 'init:'
            {
             before(grammarAccess.getServiceAccess().getInitKeyword_3_5_0()); 
            match(input,53,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getInitKeyword_3_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_5__0__Impl"


    // $ANTLR start "rule__Service__Group_3_5__1"
    // InternalDockerCompose.g:2473:1: rule__Service__Group_3_5__1 : rule__Service__Group_3_5__1__Impl ;
    public final void rule__Service__Group_3_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2477:1: ( rule__Service__Group_3_5__1__Impl )
            // InternalDockerCompose.g:2478:2: rule__Service__Group_3_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_5__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_5__1"


    // $ANTLR start "rule__Service__Group_3_5__1__Impl"
    // InternalDockerCompose.g:2484:1: rule__Service__Group_3_5__1__Impl : ( ( rule__Service__InitAssignment_3_5_1 ) ) ;
    public final void rule__Service__Group_3_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2488:1: ( ( ( rule__Service__InitAssignment_3_5_1 ) ) )
            // InternalDockerCompose.g:2489:1: ( ( rule__Service__InitAssignment_3_5_1 ) )
            {
            // InternalDockerCompose.g:2489:1: ( ( rule__Service__InitAssignment_3_5_1 ) )
            // InternalDockerCompose.g:2490:2: ( rule__Service__InitAssignment_3_5_1 )
            {
             before(grammarAccess.getServiceAccess().getInitAssignment_3_5_1()); 
            // InternalDockerCompose.g:2491:2: ( rule__Service__InitAssignment_3_5_1 )
            // InternalDockerCompose.g:2491:3: rule__Service__InitAssignment_3_5_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__InitAssignment_3_5_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getInitAssignment_3_5_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_5__1__Impl"


    // $ANTLR start "rule__Service__Group_3_6__0"
    // InternalDockerCompose.g:2500:1: rule__Service__Group_3_6__0 : rule__Service__Group_3_6__0__Impl rule__Service__Group_3_6__1 ;
    public final void rule__Service__Group_3_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2504:1: ( rule__Service__Group_3_6__0__Impl rule__Service__Group_3_6__1 )
            // InternalDockerCompose.g:2505:2: rule__Service__Group_3_6__0__Impl rule__Service__Group_3_6__1
            {
            pushFollow(FOLLOW_14);
            rule__Service__Group_3_6__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_6__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_6__0"


    // $ANTLR start "rule__Service__Group_3_6__0__Impl"
    // InternalDockerCompose.g:2512:1: rule__Service__Group_3_6__0__Impl : ( 'read_only:' ) ;
    public final void rule__Service__Group_3_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2516:1: ( ( 'read_only:' ) )
            // InternalDockerCompose.g:2517:1: ( 'read_only:' )
            {
            // InternalDockerCompose.g:2517:1: ( 'read_only:' )
            // InternalDockerCompose.g:2518:2: 'read_only:'
            {
             before(grammarAccess.getServiceAccess().getRead_onlyKeyword_3_6_0()); 
            match(input,54,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getRead_onlyKeyword_3_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_6__0__Impl"


    // $ANTLR start "rule__Service__Group_3_6__1"
    // InternalDockerCompose.g:2527:1: rule__Service__Group_3_6__1 : rule__Service__Group_3_6__1__Impl ;
    public final void rule__Service__Group_3_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2531:1: ( rule__Service__Group_3_6__1__Impl )
            // InternalDockerCompose.g:2532:2: rule__Service__Group_3_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_6__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_6__1"


    // $ANTLR start "rule__Service__Group_3_6__1__Impl"
    // InternalDockerCompose.g:2538:1: rule__Service__Group_3_6__1__Impl : ( ( rule__Service__Read_onlyAssignment_3_6_1 ) ) ;
    public final void rule__Service__Group_3_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2542:1: ( ( ( rule__Service__Read_onlyAssignment_3_6_1 ) ) )
            // InternalDockerCompose.g:2543:1: ( ( rule__Service__Read_onlyAssignment_3_6_1 ) )
            {
            // InternalDockerCompose.g:2543:1: ( ( rule__Service__Read_onlyAssignment_3_6_1 ) )
            // InternalDockerCompose.g:2544:2: ( rule__Service__Read_onlyAssignment_3_6_1 )
            {
             before(grammarAccess.getServiceAccess().getRead_onlyAssignment_3_6_1()); 
            // InternalDockerCompose.g:2545:2: ( rule__Service__Read_onlyAssignment_3_6_1 )
            // InternalDockerCompose.g:2545:3: rule__Service__Read_onlyAssignment_3_6_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Read_onlyAssignment_3_6_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getRead_onlyAssignment_3_6_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_6__1__Impl"


    // $ANTLR start "rule__Service__Group_3_7__0"
    // InternalDockerCompose.g:2554:1: rule__Service__Group_3_7__0 : rule__Service__Group_3_7__0__Impl rule__Service__Group_3_7__1 ;
    public final void rule__Service__Group_3_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2558:1: ( rule__Service__Group_3_7__0__Impl rule__Service__Group_3_7__1 )
            // InternalDockerCompose.g:2559:2: rule__Service__Group_3_7__0__Impl rule__Service__Group_3_7__1
            {
            pushFollow(FOLLOW_15);
            rule__Service__Group_3_7__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_7__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7__0"


    // $ANTLR start "rule__Service__Group_3_7__0__Impl"
    // InternalDockerCompose.g:2566:1: rule__Service__Group_3_7__0__Impl : ( 'links:' ) ;
    public final void rule__Service__Group_3_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2570:1: ( ( 'links:' ) )
            // InternalDockerCompose.g:2571:1: ( 'links:' )
            {
            // InternalDockerCompose.g:2571:1: ( 'links:' )
            // InternalDockerCompose.g:2572:2: 'links:'
            {
             before(grammarAccess.getServiceAccess().getLinksKeyword_3_7_0()); 
            match(input,55,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getLinksKeyword_3_7_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7__0__Impl"


    // $ANTLR start "rule__Service__Group_3_7__1"
    // InternalDockerCompose.g:2581:1: rule__Service__Group_3_7__1 : rule__Service__Group_3_7__1__Impl ;
    public final void rule__Service__Group_3_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2585:1: ( rule__Service__Group_3_7__1__Impl )
            // InternalDockerCompose.g:2586:2: rule__Service__Group_3_7__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_7__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7__1"


    // $ANTLR start "rule__Service__Group_3_7__1__Impl"
    // InternalDockerCompose.g:2592:1: rule__Service__Group_3_7__1__Impl : ( ( ( rule__Service__Group_3_7_1__0 ) ) ( ( rule__Service__Group_3_7_1__0 )* ) ) ;
    public final void rule__Service__Group_3_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2596:1: ( ( ( ( rule__Service__Group_3_7_1__0 ) ) ( ( rule__Service__Group_3_7_1__0 )* ) ) )
            // InternalDockerCompose.g:2597:1: ( ( ( rule__Service__Group_3_7_1__0 ) ) ( ( rule__Service__Group_3_7_1__0 )* ) )
            {
            // InternalDockerCompose.g:2597:1: ( ( ( rule__Service__Group_3_7_1__0 ) ) ( ( rule__Service__Group_3_7_1__0 )* ) )
            // InternalDockerCompose.g:2598:2: ( ( rule__Service__Group_3_7_1__0 ) ) ( ( rule__Service__Group_3_7_1__0 )* )
            {
            // InternalDockerCompose.g:2598:2: ( ( rule__Service__Group_3_7_1__0 ) )
            // InternalDockerCompose.g:2599:3: ( rule__Service__Group_3_7_1__0 )
            {
             before(grammarAccess.getServiceAccess().getGroup_3_7_1()); 
            // InternalDockerCompose.g:2600:3: ( rule__Service__Group_3_7_1__0 )
            // InternalDockerCompose.g:2600:4: rule__Service__Group_3_7_1__0
            {
            pushFollow(FOLLOW_3);
            rule__Service__Group_3_7_1__0();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getGroup_3_7_1()); 

            }

            // InternalDockerCompose.g:2603:2: ( ( rule__Service__Group_3_7_1__0 )* )
            // InternalDockerCompose.g:2604:3: ( rule__Service__Group_3_7_1__0 )*
            {
             before(grammarAccess.getServiceAccess().getGroup_3_7_1()); 
            // InternalDockerCompose.g:2605:3: ( rule__Service__Group_3_7_1__0 )*
            loop39:
            do {
                int alt39=2;
                int LA39_0 = input.LA(1);

                if ( (LA39_0==56) ) {
                    alt39=1;
                }


                switch (alt39) {
            	case 1 :
            	    // InternalDockerCompose.g:2605:4: rule__Service__Group_3_7_1__0
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Service__Group_3_7_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);

             after(grammarAccess.getServiceAccess().getGroup_3_7_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7__1__Impl"


    // $ANTLR start "rule__Service__Group_3_7_1__0"
    // InternalDockerCompose.g:2615:1: rule__Service__Group_3_7_1__0 : rule__Service__Group_3_7_1__0__Impl rule__Service__Group_3_7_1__1 ;
    public final void rule__Service__Group_3_7_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2619:1: ( rule__Service__Group_3_7_1__0__Impl rule__Service__Group_3_7_1__1 )
            // InternalDockerCompose.g:2620:2: rule__Service__Group_3_7_1__0__Impl rule__Service__Group_3_7_1__1
            {
            pushFollow(FOLLOW_7);
            rule__Service__Group_3_7_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_7_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7_1__0"


    // $ANTLR start "rule__Service__Group_3_7_1__0__Impl"
    // InternalDockerCompose.g:2627:1: rule__Service__Group_3_7_1__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_7_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2631:1: ( ( '-' ) )
            // InternalDockerCompose.g:2632:1: ( '-' )
            {
            // InternalDockerCompose.g:2632:1: ( '-' )
            // InternalDockerCompose.g:2633:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_7_1_0()); 
            match(input,56,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_7_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_7_1__1"
    // InternalDockerCompose.g:2642:1: rule__Service__Group_3_7_1__1 : rule__Service__Group_3_7_1__1__Impl ;
    public final void rule__Service__Group_3_7_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2646:1: ( rule__Service__Group_3_7_1__1__Impl )
            // InternalDockerCompose.g:2647:2: rule__Service__Group_3_7_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_7_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7_1__1"


    // $ANTLR start "rule__Service__Group_3_7_1__1__Impl"
    // InternalDockerCompose.g:2653:1: rule__Service__Group_3_7_1__1__Impl : ( ( rule__Service__LinksAssignment_3_7_1_1 ) ) ;
    public final void rule__Service__Group_3_7_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2657:1: ( ( ( rule__Service__LinksAssignment_3_7_1_1 ) ) )
            // InternalDockerCompose.g:2658:1: ( ( rule__Service__LinksAssignment_3_7_1_1 ) )
            {
            // InternalDockerCompose.g:2658:1: ( ( rule__Service__LinksAssignment_3_7_1_1 ) )
            // InternalDockerCompose.g:2659:2: ( rule__Service__LinksAssignment_3_7_1_1 )
            {
             before(grammarAccess.getServiceAccess().getLinksAssignment_3_7_1_1()); 
            // InternalDockerCompose.g:2660:2: ( rule__Service__LinksAssignment_3_7_1_1 )
            // InternalDockerCompose.g:2660:3: rule__Service__LinksAssignment_3_7_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__LinksAssignment_3_7_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getLinksAssignment_3_7_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_8__0"
    // InternalDockerCompose.g:2669:1: rule__Service__Group_3_8__0 : rule__Service__Group_3_8__0__Impl rule__Service__Group_3_8__1 ;
    public final void rule__Service__Group_3_8__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2673:1: ( rule__Service__Group_3_8__0__Impl rule__Service__Group_3_8__1 )
            // InternalDockerCompose.g:2674:2: rule__Service__Group_3_8__0__Impl rule__Service__Group_3_8__1
            {
            pushFollow(FOLLOW_16);
            rule__Service__Group_3_8__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_8__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_8__0"


    // $ANTLR start "rule__Service__Group_3_8__0__Impl"
    // InternalDockerCompose.g:2681:1: rule__Service__Group_3_8__0__Impl : ( 'depends_on:' ) ;
    public final void rule__Service__Group_3_8__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2685:1: ( ( 'depends_on:' ) )
            // InternalDockerCompose.g:2686:1: ( 'depends_on:' )
            {
            // InternalDockerCompose.g:2686:1: ( 'depends_on:' )
            // InternalDockerCompose.g:2687:2: 'depends_on:'
            {
             before(grammarAccess.getServiceAccess().getDepends_onKeyword_3_8_0()); 
            match(input,57,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getDepends_onKeyword_3_8_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_8__0__Impl"


    // $ANTLR start "rule__Service__Group_3_8__1"
    // InternalDockerCompose.g:2696:1: rule__Service__Group_3_8__1 : rule__Service__Group_3_8__1__Impl ;
    public final void rule__Service__Group_3_8__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2700:1: ( rule__Service__Group_3_8__1__Impl )
            // InternalDockerCompose.g:2701:2: rule__Service__Group_3_8__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_8__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_8__1"


    // $ANTLR start "rule__Service__Group_3_8__1__Impl"
    // InternalDockerCompose.g:2707:1: rule__Service__Group_3_8__1__Impl : ( ( rule__Service__Alternatives_3_8_1 ) ) ;
    public final void rule__Service__Group_3_8__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2711:1: ( ( ( rule__Service__Alternatives_3_8_1 ) ) )
            // InternalDockerCompose.g:2712:1: ( ( rule__Service__Alternatives_3_8_1 ) )
            {
            // InternalDockerCompose.g:2712:1: ( ( rule__Service__Alternatives_3_8_1 ) )
            // InternalDockerCompose.g:2713:2: ( rule__Service__Alternatives_3_8_1 )
            {
             before(grammarAccess.getServiceAccess().getAlternatives_3_8_1()); 
            // InternalDockerCompose.g:2714:2: ( rule__Service__Alternatives_3_8_1 )
            // InternalDockerCompose.g:2714:3: rule__Service__Alternatives_3_8_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Alternatives_3_8_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getAlternatives_3_8_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_8__1__Impl"


    // $ANTLR start "rule__Service__Group_3_9__0"
    // InternalDockerCompose.g:2723:1: rule__Service__Group_3_9__0 : rule__Service__Group_3_9__0__Impl rule__Service__Group_3_9__1 ;
    public final void rule__Service__Group_3_9__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2727:1: ( rule__Service__Group_3_9__0__Impl rule__Service__Group_3_9__1 )
            // InternalDockerCompose.g:2728:2: rule__Service__Group_3_9__0__Impl rule__Service__Group_3_9__1
            {
            pushFollow(FOLLOW_16);
            rule__Service__Group_3_9__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_9__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_9__0"


    // $ANTLR start "rule__Service__Group_3_9__0__Impl"
    // InternalDockerCompose.g:2735:1: rule__Service__Group_3_9__0__Impl : ( 'networks:' ) ;
    public final void rule__Service__Group_3_9__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2739:1: ( ( 'networks:' ) )
            // InternalDockerCompose.g:2740:1: ( 'networks:' )
            {
            // InternalDockerCompose.g:2740:1: ( 'networks:' )
            // InternalDockerCompose.g:2741:2: 'networks:'
            {
             before(grammarAccess.getServiceAccess().getNetworksKeyword_3_9_0()); 
            match(input,45,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getNetworksKeyword_3_9_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_9__0__Impl"


    // $ANTLR start "rule__Service__Group_3_9__1"
    // InternalDockerCompose.g:2750:1: rule__Service__Group_3_9__1 : rule__Service__Group_3_9__1__Impl ;
    public final void rule__Service__Group_3_9__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2754:1: ( rule__Service__Group_3_9__1__Impl )
            // InternalDockerCompose.g:2755:2: rule__Service__Group_3_9__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_9__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_9__1"


    // $ANTLR start "rule__Service__Group_3_9__1__Impl"
    // InternalDockerCompose.g:2761:1: rule__Service__Group_3_9__1__Impl : ( ( ( rule__Service__NetworksAssignment_3_9_1 ) ) ( ( rule__Service__NetworksAssignment_3_9_1 )* ) ) ;
    public final void rule__Service__Group_3_9__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2765:1: ( ( ( ( rule__Service__NetworksAssignment_3_9_1 ) ) ( ( rule__Service__NetworksAssignment_3_9_1 )* ) ) )
            // InternalDockerCompose.g:2766:1: ( ( ( rule__Service__NetworksAssignment_3_9_1 ) ) ( ( rule__Service__NetworksAssignment_3_9_1 )* ) )
            {
            // InternalDockerCompose.g:2766:1: ( ( ( rule__Service__NetworksAssignment_3_9_1 ) ) ( ( rule__Service__NetworksAssignment_3_9_1 )* ) )
            // InternalDockerCompose.g:2767:2: ( ( rule__Service__NetworksAssignment_3_9_1 ) ) ( ( rule__Service__NetworksAssignment_3_9_1 )* )
            {
            // InternalDockerCompose.g:2767:2: ( ( rule__Service__NetworksAssignment_3_9_1 ) )
            // InternalDockerCompose.g:2768:3: ( rule__Service__NetworksAssignment_3_9_1 )
            {
             before(grammarAccess.getServiceAccess().getNetworksAssignment_3_9_1()); 
            // InternalDockerCompose.g:2769:3: ( rule__Service__NetworksAssignment_3_9_1 )
            // InternalDockerCompose.g:2769:4: rule__Service__NetworksAssignment_3_9_1
            {
            pushFollow(FOLLOW_17);
            rule__Service__NetworksAssignment_3_9_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getNetworksAssignment_3_9_1()); 

            }

            // InternalDockerCompose.g:2772:2: ( ( rule__Service__NetworksAssignment_3_9_1 )* )
            // InternalDockerCompose.g:2773:3: ( rule__Service__NetworksAssignment_3_9_1 )*
            {
             before(grammarAccess.getServiceAccess().getNetworksAssignment_3_9_1()); 
            // InternalDockerCompose.g:2774:3: ( rule__Service__NetworksAssignment_3_9_1 )*
            loop40:
            do {
                int alt40=2;
                alt40 = dfa40.predict(input);
                switch (alt40) {
            	case 1 :
            	    // InternalDockerCompose.g:2774:4: rule__Service__NetworksAssignment_3_9_1
            	    {
            	    pushFollow(FOLLOW_17);
            	    rule__Service__NetworksAssignment_3_9_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);

             after(grammarAccess.getServiceAccess().getNetworksAssignment_3_9_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_9__1__Impl"


    // $ANTLR start "rule__Service__Group_3_10__0"
    // InternalDockerCompose.g:2784:1: rule__Service__Group_3_10__0 : rule__Service__Group_3_10__0__Impl rule__Service__Group_3_10__1 ;
    public final void rule__Service__Group_3_10__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2788:1: ( rule__Service__Group_3_10__0__Impl rule__Service__Group_3_10__1 )
            // InternalDockerCompose.g:2789:2: rule__Service__Group_3_10__0__Impl rule__Service__Group_3_10__1
            {
            pushFollow(FOLLOW_15);
            rule__Service__Group_3_10__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_10__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10__0"


    // $ANTLR start "rule__Service__Group_3_10__0__Impl"
    // InternalDockerCompose.g:2796:1: rule__Service__Group_3_10__0__Impl : ( 'volumes:' ) ;
    public final void rule__Service__Group_3_10__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2800:1: ( ( 'volumes:' ) )
            // InternalDockerCompose.g:2801:1: ( 'volumes:' )
            {
            // InternalDockerCompose.g:2801:1: ( 'volumes:' )
            // InternalDockerCompose.g:2802:2: 'volumes:'
            {
             before(grammarAccess.getServiceAccess().getVolumesKeyword_3_10_0()); 
            match(input,42,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getVolumesKeyword_3_10_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10__0__Impl"


    // $ANTLR start "rule__Service__Group_3_10__1"
    // InternalDockerCompose.g:2811:1: rule__Service__Group_3_10__1 : rule__Service__Group_3_10__1__Impl ;
    public final void rule__Service__Group_3_10__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2815:1: ( rule__Service__Group_3_10__1__Impl )
            // InternalDockerCompose.g:2816:2: rule__Service__Group_3_10__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_10__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10__1"


    // $ANTLR start "rule__Service__Group_3_10__1__Impl"
    // InternalDockerCompose.g:2822:1: rule__Service__Group_3_10__1__Impl : ( ( rule__Service__Alternatives_3_10_1 ) ) ;
    public final void rule__Service__Group_3_10__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2826:1: ( ( ( rule__Service__Alternatives_3_10_1 ) ) )
            // InternalDockerCompose.g:2827:1: ( ( rule__Service__Alternatives_3_10_1 ) )
            {
            // InternalDockerCompose.g:2827:1: ( ( rule__Service__Alternatives_3_10_1 ) )
            // InternalDockerCompose.g:2828:2: ( rule__Service__Alternatives_3_10_1 )
            {
             before(grammarAccess.getServiceAccess().getAlternatives_3_10_1()); 
            // InternalDockerCompose.g:2829:2: ( rule__Service__Alternatives_3_10_1 )
            // InternalDockerCompose.g:2829:3: rule__Service__Alternatives_3_10_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Alternatives_3_10_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getAlternatives_3_10_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10__1__Impl"


    // $ANTLR start "rule__Service__Group_3_10_1_0__0"
    // InternalDockerCompose.g:2838:1: rule__Service__Group_3_10_1_0__0 : rule__Service__Group_3_10_1_0__0__Impl rule__Service__Group_3_10_1_0__1 ;
    public final void rule__Service__Group_3_10_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2842:1: ( rule__Service__Group_3_10_1_0__0__Impl rule__Service__Group_3_10_1_0__1 )
            // InternalDockerCompose.g:2843:2: rule__Service__Group_3_10_1_0__0__Impl rule__Service__Group_3_10_1_0__1
            {
            pushFollow(FOLLOW_7);
            rule__Service__Group_3_10_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_10_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10_1_0__0"


    // $ANTLR start "rule__Service__Group_3_10_1_0__0__Impl"
    // InternalDockerCompose.g:2850:1: rule__Service__Group_3_10_1_0__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_10_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2854:1: ( ( '-' ) )
            // InternalDockerCompose.g:2855:1: ( '-' )
            {
            // InternalDockerCompose.g:2855:1: ( '-' )
            // InternalDockerCompose.g:2856:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_10_1_0_0()); 
            match(input,56,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_10_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10_1_0__0__Impl"


    // $ANTLR start "rule__Service__Group_3_10_1_0__1"
    // InternalDockerCompose.g:2865:1: rule__Service__Group_3_10_1_0__1 : rule__Service__Group_3_10_1_0__1__Impl ;
    public final void rule__Service__Group_3_10_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2869:1: ( rule__Service__Group_3_10_1_0__1__Impl )
            // InternalDockerCompose.g:2870:2: rule__Service__Group_3_10_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_10_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10_1_0__1"


    // $ANTLR start "rule__Service__Group_3_10_1_0__1__Impl"
    // InternalDockerCompose.g:2876:1: rule__Service__Group_3_10_1_0__1__Impl : ( ( rule__Service__VolumesAssignment_3_10_1_0_1 ) ) ;
    public final void rule__Service__Group_3_10_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2880:1: ( ( ( rule__Service__VolumesAssignment_3_10_1_0_1 ) ) )
            // InternalDockerCompose.g:2881:1: ( ( rule__Service__VolumesAssignment_3_10_1_0_1 ) )
            {
            // InternalDockerCompose.g:2881:1: ( ( rule__Service__VolumesAssignment_3_10_1_0_1 ) )
            // InternalDockerCompose.g:2882:2: ( rule__Service__VolumesAssignment_3_10_1_0_1 )
            {
             before(grammarAccess.getServiceAccess().getVolumesAssignment_3_10_1_0_1()); 
            // InternalDockerCompose.g:2883:2: ( rule__Service__VolumesAssignment_3_10_1_0_1 )
            // InternalDockerCompose.g:2883:3: rule__Service__VolumesAssignment_3_10_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__VolumesAssignment_3_10_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getVolumesAssignment_3_10_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10_1_0__1__Impl"


    // $ANTLR start "rule__Service__Group_3_10_1_1__0"
    // InternalDockerCompose.g:2892:1: rule__Service__Group_3_10_1_1__0 : rule__Service__Group_3_10_1_1__0__Impl rule__Service__Group_3_10_1_1__1 ;
    public final void rule__Service__Group_3_10_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2896:1: ( rule__Service__Group_3_10_1_1__0__Impl rule__Service__Group_3_10_1_1__1 )
            // InternalDockerCompose.g:2897:2: rule__Service__Group_3_10_1_1__0__Impl rule__Service__Group_3_10_1_1__1
            {
            pushFollow(FOLLOW_18);
            rule__Service__Group_3_10_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_10_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10_1_1__0"


    // $ANTLR start "rule__Service__Group_3_10_1_1__0__Impl"
    // InternalDockerCompose.g:2904:1: rule__Service__Group_3_10_1_1__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_10_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2908:1: ( ( '-' ) )
            // InternalDockerCompose.g:2909:1: ( '-' )
            {
            // InternalDockerCompose.g:2909:1: ( '-' )
            // InternalDockerCompose.g:2910:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_10_1_1_0()); 
            match(input,56,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_10_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10_1_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_10_1_1__1"
    // InternalDockerCompose.g:2919:1: rule__Service__Group_3_10_1_1__1 : rule__Service__Group_3_10_1_1__1__Impl ;
    public final void rule__Service__Group_3_10_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2923:1: ( rule__Service__Group_3_10_1_1__1__Impl )
            // InternalDockerCompose.g:2924:2: rule__Service__Group_3_10_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_10_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10_1_1__1"


    // $ANTLR start "rule__Service__Group_3_10_1_1__1__Impl"
    // InternalDockerCompose.g:2930:1: rule__Service__Group_3_10_1_1__1__Impl : ( ( rule__Service__VolumesAssignment_3_10_1_1_1 ) ) ;
    public final void rule__Service__Group_3_10_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2934:1: ( ( ( rule__Service__VolumesAssignment_3_10_1_1_1 ) ) )
            // InternalDockerCompose.g:2935:1: ( ( rule__Service__VolumesAssignment_3_10_1_1_1 ) )
            {
            // InternalDockerCompose.g:2935:1: ( ( rule__Service__VolumesAssignment_3_10_1_1_1 ) )
            // InternalDockerCompose.g:2936:2: ( rule__Service__VolumesAssignment_3_10_1_1_1 )
            {
             before(grammarAccess.getServiceAccess().getVolumesAssignment_3_10_1_1_1()); 
            // InternalDockerCompose.g:2937:2: ( rule__Service__VolumesAssignment_3_10_1_1_1 )
            // InternalDockerCompose.g:2937:3: rule__Service__VolumesAssignment_3_10_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__VolumesAssignment_3_10_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getVolumesAssignment_3_10_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10_1_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_11__0"
    // InternalDockerCompose.g:2946:1: rule__Service__Group_3_11__0 : rule__Service__Group_3_11__0__Impl rule__Service__Group_3_11__1 ;
    public final void rule__Service__Group_3_11__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2950:1: ( rule__Service__Group_3_11__0__Impl rule__Service__Group_3_11__1 )
            // InternalDockerCompose.g:2951:2: rule__Service__Group_3_11__0__Impl rule__Service__Group_3_11__1
            {
            pushFollow(FOLLOW_15);
            rule__Service__Group_3_11__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_11__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11__0"


    // $ANTLR start "rule__Service__Group_3_11__0__Impl"
    // InternalDockerCompose.g:2958:1: rule__Service__Group_3_11__0__Impl : ( 'configs:' ) ;
    public final void rule__Service__Group_3_11__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2962:1: ( ( 'configs:' ) )
            // InternalDockerCompose.g:2963:1: ( 'configs:' )
            {
            // InternalDockerCompose.g:2963:1: ( 'configs:' )
            // InternalDockerCompose.g:2964:2: 'configs:'
            {
             before(grammarAccess.getServiceAccess().getConfigsKeyword_3_11_0()); 
            match(input,43,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getConfigsKeyword_3_11_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11__0__Impl"


    // $ANTLR start "rule__Service__Group_3_11__1"
    // InternalDockerCompose.g:2973:1: rule__Service__Group_3_11__1 : rule__Service__Group_3_11__1__Impl ;
    public final void rule__Service__Group_3_11__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2977:1: ( rule__Service__Group_3_11__1__Impl )
            // InternalDockerCompose.g:2978:2: rule__Service__Group_3_11__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_11__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11__1"


    // $ANTLR start "rule__Service__Group_3_11__1__Impl"
    // InternalDockerCompose.g:2984:1: rule__Service__Group_3_11__1__Impl : ( ( rule__Service__Alternatives_3_11_1 ) ) ;
    public final void rule__Service__Group_3_11__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2988:1: ( ( ( rule__Service__Alternatives_3_11_1 ) ) )
            // InternalDockerCompose.g:2989:1: ( ( rule__Service__Alternatives_3_11_1 ) )
            {
            // InternalDockerCompose.g:2989:1: ( ( rule__Service__Alternatives_3_11_1 ) )
            // InternalDockerCompose.g:2990:2: ( rule__Service__Alternatives_3_11_1 )
            {
             before(grammarAccess.getServiceAccess().getAlternatives_3_11_1()); 
            // InternalDockerCompose.g:2991:2: ( rule__Service__Alternatives_3_11_1 )
            // InternalDockerCompose.g:2991:3: rule__Service__Alternatives_3_11_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Alternatives_3_11_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getAlternatives_3_11_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11__1__Impl"


    // $ANTLR start "rule__Service__Group_3_11_1_0__0"
    // InternalDockerCompose.g:3000:1: rule__Service__Group_3_11_1_0__0 : rule__Service__Group_3_11_1_0__0__Impl rule__Service__Group_3_11_1_0__1 ;
    public final void rule__Service__Group_3_11_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3004:1: ( rule__Service__Group_3_11_1_0__0__Impl rule__Service__Group_3_11_1_0__1 )
            // InternalDockerCompose.g:3005:2: rule__Service__Group_3_11_1_0__0__Impl rule__Service__Group_3_11_1_0__1
            {
            pushFollow(FOLLOW_7);
            rule__Service__Group_3_11_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_11_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11_1_0__0"


    // $ANTLR start "rule__Service__Group_3_11_1_0__0__Impl"
    // InternalDockerCompose.g:3012:1: rule__Service__Group_3_11_1_0__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_11_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3016:1: ( ( '-' ) )
            // InternalDockerCompose.g:3017:1: ( '-' )
            {
            // InternalDockerCompose.g:3017:1: ( '-' )
            // InternalDockerCompose.g:3018:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_11_1_0_0()); 
            match(input,56,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_11_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11_1_0__0__Impl"


    // $ANTLR start "rule__Service__Group_3_11_1_0__1"
    // InternalDockerCompose.g:3027:1: rule__Service__Group_3_11_1_0__1 : rule__Service__Group_3_11_1_0__1__Impl ;
    public final void rule__Service__Group_3_11_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3031:1: ( rule__Service__Group_3_11_1_0__1__Impl )
            // InternalDockerCompose.g:3032:2: rule__Service__Group_3_11_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_11_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11_1_0__1"


    // $ANTLR start "rule__Service__Group_3_11_1_0__1__Impl"
    // InternalDockerCompose.g:3038:1: rule__Service__Group_3_11_1_0__1__Impl : ( ( rule__Service__ConfigsAssignment_3_11_1_0_1 ) ) ;
    public final void rule__Service__Group_3_11_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3042:1: ( ( ( rule__Service__ConfigsAssignment_3_11_1_0_1 ) ) )
            // InternalDockerCompose.g:3043:1: ( ( rule__Service__ConfigsAssignment_3_11_1_0_1 ) )
            {
            // InternalDockerCompose.g:3043:1: ( ( rule__Service__ConfigsAssignment_3_11_1_0_1 ) )
            // InternalDockerCompose.g:3044:2: ( rule__Service__ConfigsAssignment_3_11_1_0_1 )
            {
             before(grammarAccess.getServiceAccess().getConfigsAssignment_3_11_1_0_1()); 
            // InternalDockerCompose.g:3045:2: ( rule__Service__ConfigsAssignment_3_11_1_0_1 )
            // InternalDockerCompose.g:3045:3: rule__Service__ConfigsAssignment_3_11_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__ConfigsAssignment_3_11_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getConfigsAssignment_3_11_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11_1_0__1__Impl"


    // $ANTLR start "rule__Service__Group_3_11_1_1__0"
    // InternalDockerCompose.g:3054:1: rule__Service__Group_3_11_1_1__0 : rule__Service__Group_3_11_1_1__0__Impl rule__Service__Group_3_11_1_1__1 ;
    public final void rule__Service__Group_3_11_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3058:1: ( rule__Service__Group_3_11_1_1__0__Impl rule__Service__Group_3_11_1_1__1 )
            // InternalDockerCompose.g:3059:2: rule__Service__Group_3_11_1_1__0__Impl rule__Service__Group_3_11_1_1__1
            {
            pushFollow(FOLLOW_19);
            rule__Service__Group_3_11_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_11_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11_1_1__0"


    // $ANTLR start "rule__Service__Group_3_11_1_1__0__Impl"
    // InternalDockerCompose.g:3066:1: rule__Service__Group_3_11_1_1__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_11_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3070:1: ( ( '-' ) )
            // InternalDockerCompose.g:3071:1: ( '-' )
            {
            // InternalDockerCompose.g:3071:1: ( '-' )
            // InternalDockerCompose.g:3072:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_11_1_1_0()); 
            match(input,56,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_11_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11_1_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_11_1_1__1"
    // InternalDockerCompose.g:3081:1: rule__Service__Group_3_11_1_1__1 : rule__Service__Group_3_11_1_1__1__Impl ;
    public final void rule__Service__Group_3_11_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3085:1: ( rule__Service__Group_3_11_1_1__1__Impl )
            // InternalDockerCompose.g:3086:2: rule__Service__Group_3_11_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_11_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11_1_1__1"


    // $ANTLR start "rule__Service__Group_3_11_1_1__1__Impl"
    // InternalDockerCompose.g:3092:1: rule__Service__Group_3_11_1_1__1__Impl : ( ( rule__Service__ConfigsAssignment_3_11_1_1_1 ) ) ;
    public final void rule__Service__Group_3_11_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3096:1: ( ( ( rule__Service__ConfigsAssignment_3_11_1_1_1 ) ) )
            // InternalDockerCompose.g:3097:1: ( ( rule__Service__ConfigsAssignment_3_11_1_1_1 ) )
            {
            // InternalDockerCompose.g:3097:1: ( ( rule__Service__ConfigsAssignment_3_11_1_1_1 ) )
            // InternalDockerCompose.g:3098:2: ( rule__Service__ConfigsAssignment_3_11_1_1_1 )
            {
             before(grammarAccess.getServiceAccess().getConfigsAssignment_3_11_1_1_1()); 
            // InternalDockerCompose.g:3099:2: ( rule__Service__ConfigsAssignment_3_11_1_1_1 )
            // InternalDockerCompose.g:3099:3: rule__Service__ConfigsAssignment_3_11_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__ConfigsAssignment_3_11_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getConfigsAssignment_3_11_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11_1_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_12__0"
    // InternalDockerCompose.g:3108:1: rule__Service__Group_3_12__0 : rule__Service__Group_3_12__0__Impl rule__Service__Group_3_12__1 ;
    public final void rule__Service__Group_3_12__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3112:1: ( rule__Service__Group_3_12__0__Impl rule__Service__Group_3_12__1 )
            // InternalDockerCompose.g:3113:2: rule__Service__Group_3_12__0__Impl rule__Service__Group_3_12__1
            {
            pushFollow(FOLLOW_15);
            rule__Service__Group_3_12__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_12__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12__0"


    // $ANTLR start "rule__Service__Group_3_12__0__Impl"
    // InternalDockerCompose.g:3120:1: rule__Service__Group_3_12__0__Impl : ( 'secrets:' ) ;
    public final void rule__Service__Group_3_12__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3124:1: ( ( 'secrets:' ) )
            // InternalDockerCompose.g:3125:1: ( 'secrets:' )
            {
            // InternalDockerCompose.g:3125:1: ( 'secrets:' )
            // InternalDockerCompose.g:3126:2: 'secrets:'
            {
             before(grammarAccess.getServiceAccess().getSecretsKeyword_3_12_0()); 
            match(input,44,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getSecretsKeyword_3_12_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12__0__Impl"


    // $ANTLR start "rule__Service__Group_3_12__1"
    // InternalDockerCompose.g:3135:1: rule__Service__Group_3_12__1 : rule__Service__Group_3_12__1__Impl ;
    public final void rule__Service__Group_3_12__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3139:1: ( rule__Service__Group_3_12__1__Impl )
            // InternalDockerCompose.g:3140:2: rule__Service__Group_3_12__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_12__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12__1"


    // $ANTLR start "rule__Service__Group_3_12__1__Impl"
    // InternalDockerCompose.g:3146:1: rule__Service__Group_3_12__1__Impl : ( ( rule__Service__Alternatives_3_12_1 ) ) ;
    public final void rule__Service__Group_3_12__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3150:1: ( ( ( rule__Service__Alternatives_3_12_1 ) ) )
            // InternalDockerCompose.g:3151:1: ( ( rule__Service__Alternatives_3_12_1 ) )
            {
            // InternalDockerCompose.g:3151:1: ( ( rule__Service__Alternatives_3_12_1 ) )
            // InternalDockerCompose.g:3152:2: ( rule__Service__Alternatives_3_12_1 )
            {
             before(grammarAccess.getServiceAccess().getAlternatives_3_12_1()); 
            // InternalDockerCompose.g:3153:2: ( rule__Service__Alternatives_3_12_1 )
            // InternalDockerCompose.g:3153:3: rule__Service__Alternatives_3_12_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Alternatives_3_12_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getAlternatives_3_12_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12__1__Impl"


    // $ANTLR start "rule__Service__Group_3_12_1_0__0"
    // InternalDockerCompose.g:3162:1: rule__Service__Group_3_12_1_0__0 : rule__Service__Group_3_12_1_0__0__Impl rule__Service__Group_3_12_1_0__1 ;
    public final void rule__Service__Group_3_12_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3166:1: ( rule__Service__Group_3_12_1_0__0__Impl rule__Service__Group_3_12_1_0__1 )
            // InternalDockerCompose.g:3167:2: rule__Service__Group_3_12_1_0__0__Impl rule__Service__Group_3_12_1_0__1
            {
            pushFollow(FOLLOW_7);
            rule__Service__Group_3_12_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_12_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12_1_0__0"


    // $ANTLR start "rule__Service__Group_3_12_1_0__0__Impl"
    // InternalDockerCompose.g:3174:1: rule__Service__Group_3_12_1_0__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_12_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3178:1: ( ( '-' ) )
            // InternalDockerCompose.g:3179:1: ( '-' )
            {
            // InternalDockerCompose.g:3179:1: ( '-' )
            // InternalDockerCompose.g:3180:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_12_1_0_0()); 
            match(input,56,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_12_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12_1_0__0__Impl"


    // $ANTLR start "rule__Service__Group_3_12_1_0__1"
    // InternalDockerCompose.g:3189:1: rule__Service__Group_3_12_1_0__1 : rule__Service__Group_3_12_1_0__1__Impl ;
    public final void rule__Service__Group_3_12_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3193:1: ( rule__Service__Group_3_12_1_0__1__Impl )
            // InternalDockerCompose.g:3194:2: rule__Service__Group_3_12_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_12_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12_1_0__1"


    // $ANTLR start "rule__Service__Group_3_12_1_0__1__Impl"
    // InternalDockerCompose.g:3200:1: rule__Service__Group_3_12_1_0__1__Impl : ( ( rule__Service__SecretsAssignment_3_12_1_0_1 ) ) ;
    public final void rule__Service__Group_3_12_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3204:1: ( ( ( rule__Service__SecretsAssignment_3_12_1_0_1 ) ) )
            // InternalDockerCompose.g:3205:1: ( ( rule__Service__SecretsAssignment_3_12_1_0_1 ) )
            {
            // InternalDockerCompose.g:3205:1: ( ( rule__Service__SecretsAssignment_3_12_1_0_1 ) )
            // InternalDockerCompose.g:3206:2: ( rule__Service__SecretsAssignment_3_12_1_0_1 )
            {
             before(grammarAccess.getServiceAccess().getSecretsAssignment_3_12_1_0_1()); 
            // InternalDockerCompose.g:3207:2: ( rule__Service__SecretsAssignment_3_12_1_0_1 )
            // InternalDockerCompose.g:3207:3: rule__Service__SecretsAssignment_3_12_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__SecretsAssignment_3_12_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getSecretsAssignment_3_12_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12_1_0__1__Impl"


    // $ANTLR start "rule__Service__Group_3_12_1_1__0"
    // InternalDockerCompose.g:3216:1: rule__Service__Group_3_12_1_1__0 : rule__Service__Group_3_12_1_1__0__Impl rule__Service__Group_3_12_1_1__1 ;
    public final void rule__Service__Group_3_12_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3220:1: ( rule__Service__Group_3_12_1_1__0__Impl rule__Service__Group_3_12_1_1__1 )
            // InternalDockerCompose.g:3221:2: rule__Service__Group_3_12_1_1__0__Impl rule__Service__Group_3_12_1_1__1
            {
            pushFollow(FOLLOW_19);
            rule__Service__Group_3_12_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_12_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12_1_1__0"


    // $ANTLR start "rule__Service__Group_3_12_1_1__0__Impl"
    // InternalDockerCompose.g:3228:1: rule__Service__Group_3_12_1_1__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_12_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3232:1: ( ( '-' ) )
            // InternalDockerCompose.g:3233:1: ( '-' )
            {
            // InternalDockerCompose.g:3233:1: ( '-' )
            // InternalDockerCompose.g:3234:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_12_1_1_0()); 
            match(input,56,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_12_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12_1_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_12_1_1__1"
    // InternalDockerCompose.g:3243:1: rule__Service__Group_3_12_1_1__1 : rule__Service__Group_3_12_1_1__1__Impl ;
    public final void rule__Service__Group_3_12_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3247:1: ( rule__Service__Group_3_12_1_1__1__Impl )
            // InternalDockerCompose.g:3248:2: rule__Service__Group_3_12_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_12_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12_1_1__1"


    // $ANTLR start "rule__Service__Group_3_12_1_1__1__Impl"
    // InternalDockerCompose.g:3254:1: rule__Service__Group_3_12_1_1__1__Impl : ( ( rule__Service__SecretsAssignment_3_12_1_1_1 ) ) ;
    public final void rule__Service__Group_3_12_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3258:1: ( ( ( rule__Service__SecretsAssignment_3_12_1_1_1 ) ) )
            // InternalDockerCompose.g:3259:1: ( ( rule__Service__SecretsAssignment_3_12_1_1_1 ) )
            {
            // InternalDockerCompose.g:3259:1: ( ( rule__Service__SecretsAssignment_3_12_1_1_1 ) )
            // InternalDockerCompose.g:3260:2: ( rule__Service__SecretsAssignment_3_12_1_1_1 )
            {
             before(grammarAccess.getServiceAccess().getSecretsAssignment_3_12_1_1_1()); 
            // InternalDockerCompose.g:3261:2: ( rule__Service__SecretsAssignment_3_12_1_1_1 )
            // InternalDockerCompose.g:3261:3: rule__Service__SecretsAssignment_3_12_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__SecretsAssignment_3_12_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getSecretsAssignment_3_12_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12_1_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_13__0"
    // InternalDockerCompose.g:3270:1: rule__Service__Group_3_13__0 : rule__Service__Group_3_13__0__Impl rule__Service__Group_3_13__1 ;
    public final void rule__Service__Group_3_13__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3274:1: ( rule__Service__Group_3_13__0__Impl rule__Service__Group_3_13__1 )
            // InternalDockerCompose.g:3275:2: rule__Service__Group_3_13__0__Impl rule__Service__Group_3_13__1
            {
            pushFollow(FOLLOW_20);
            rule__Service__Group_3_13__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_13__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13__0"


    // $ANTLR start "rule__Service__Group_3_13__0__Impl"
    // InternalDockerCompose.g:3282:1: rule__Service__Group_3_13__0__Impl : ( 'environment:' ) ;
    public final void rule__Service__Group_3_13__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3286:1: ( ( 'environment:' ) )
            // InternalDockerCompose.g:3287:1: ( 'environment:' )
            {
            // InternalDockerCompose.g:3287:1: ( 'environment:' )
            // InternalDockerCompose.g:3288:2: 'environment:'
            {
             before(grammarAccess.getServiceAccess().getEnvironmentKeyword_3_13_0()); 
            match(input,58,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getEnvironmentKeyword_3_13_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13__0__Impl"


    // $ANTLR start "rule__Service__Group_3_13__1"
    // InternalDockerCompose.g:3297:1: rule__Service__Group_3_13__1 : rule__Service__Group_3_13__1__Impl ;
    public final void rule__Service__Group_3_13__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3301:1: ( rule__Service__Group_3_13__1__Impl )
            // InternalDockerCompose.g:3302:2: rule__Service__Group_3_13__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_13__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13__1"


    // $ANTLR start "rule__Service__Group_3_13__1__Impl"
    // InternalDockerCompose.g:3308:1: rule__Service__Group_3_13__1__Impl : ( ( rule__Service__Alternatives_3_13_1 ) ) ;
    public final void rule__Service__Group_3_13__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3312:1: ( ( ( rule__Service__Alternatives_3_13_1 ) ) )
            // InternalDockerCompose.g:3313:1: ( ( rule__Service__Alternatives_3_13_1 ) )
            {
            // InternalDockerCompose.g:3313:1: ( ( rule__Service__Alternatives_3_13_1 ) )
            // InternalDockerCompose.g:3314:2: ( rule__Service__Alternatives_3_13_1 )
            {
             before(grammarAccess.getServiceAccess().getAlternatives_3_13_1()); 
            // InternalDockerCompose.g:3315:2: ( rule__Service__Alternatives_3_13_1 )
            // InternalDockerCompose.g:3315:3: rule__Service__Alternatives_3_13_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Alternatives_3_13_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getAlternatives_3_13_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13__1__Impl"


    // $ANTLR start "rule__Service__Group_3_14__0"
    // InternalDockerCompose.g:3324:1: rule__Service__Group_3_14__0 : rule__Service__Group_3_14__0__Impl rule__Service__Group_3_14__1 ;
    public final void rule__Service__Group_3_14__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3328:1: ( rule__Service__Group_3_14__0__Impl rule__Service__Group_3_14__1 )
            // InternalDockerCompose.g:3329:2: rule__Service__Group_3_14__0__Impl rule__Service__Group_3_14__1
            {
            pushFollow(FOLLOW_15);
            rule__Service__Group_3_14__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_14__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14__0"


    // $ANTLR start "rule__Service__Group_3_14__0__Impl"
    // InternalDockerCompose.g:3336:1: rule__Service__Group_3_14__0__Impl : ( 'devices:' ) ;
    public final void rule__Service__Group_3_14__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3340:1: ( ( 'devices:' ) )
            // InternalDockerCompose.g:3341:1: ( 'devices:' )
            {
            // InternalDockerCompose.g:3341:1: ( 'devices:' )
            // InternalDockerCompose.g:3342:2: 'devices:'
            {
             before(grammarAccess.getServiceAccess().getDevicesKeyword_3_14_0()); 
            match(input,59,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getDevicesKeyword_3_14_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14__0__Impl"


    // $ANTLR start "rule__Service__Group_3_14__1"
    // InternalDockerCompose.g:3351:1: rule__Service__Group_3_14__1 : rule__Service__Group_3_14__1__Impl ;
    public final void rule__Service__Group_3_14__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3355:1: ( rule__Service__Group_3_14__1__Impl )
            // InternalDockerCompose.g:3356:2: rule__Service__Group_3_14__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_14__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14__1"


    // $ANTLR start "rule__Service__Group_3_14__1__Impl"
    // InternalDockerCompose.g:3362:1: rule__Service__Group_3_14__1__Impl : ( ( ( rule__Service__Group_3_14_1__0 ) ) ( ( rule__Service__Group_3_14_1__0 )* ) ) ;
    public final void rule__Service__Group_3_14__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3366:1: ( ( ( ( rule__Service__Group_3_14_1__0 ) ) ( ( rule__Service__Group_3_14_1__0 )* ) ) )
            // InternalDockerCompose.g:3367:1: ( ( ( rule__Service__Group_3_14_1__0 ) ) ( ( rule__Service__Group_3_14_1__0 )* ) )
            {
            // InternalDockerCompose.g:3367:1: ( ( ( rule__Service__Group_3_14_1__0 ) ) ( ( rule__Service__Group_3_14_1__0 )* ) )
            // InternalDockerCompose.g:3368:2: ( ( rule__Service__Group_3_14_1__0 ) ) ( ( rule__Service__Group_3_14_1__0 )* )
            {
            // InternalDockerCompose.g:3368:2: ( ( rule__Service__Group_3_14_1__0 ) )
            // InternalDockerCompose.g:3369:3: ( rule__Service__Group_3_14_1__0 )
            {
             before(grammarAccess.getServiceAccess().getGroup_3_14_1()); 
            // InternalDockerCompose.g:3370:3: ( rule__Service__Group_3_14_1__0 )
            // InternalDockerCompose.g:3370:4: rule__Service__Group_3_14_1__0
            {
            pushFollow(FOLLOW_3);
            rule__Service__Group_3_14_1__0();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getGroup_3_14_1()); 

            }

            // InternalDockerCompose.g:3373:2: ( ( rule__Service__Group_3_14_1__0 )* )
            // InternalDockerCompose.g:3374:3: ( rule__Service__Group_3_14_1__0 )*
            {
             before(grammarAccess.getServiceAccess().getGroup_3_14_1()); 
            // InternalDockerCompose.g:3375:3: ( rule__Service__Group_3_14_1__0 )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==56) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // InternalDockerCompose.g:3375:4: rule__Service__Group_3_14_1__0
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Service__Group_3_14_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);

             after(grammarAccess.getServiceAccess().getGroup_3_14_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14__1__Impl"


    // $ANTLR start "rule__Service__Group_3_14_1__0"
    // InternalDockerCompose.g:3385:1: rule__Service__Group_3_14_1__0 : rule__Service__Group_3_14_1__0__Impl rule__Service__Group_3_14_1__1 ;
    public final void rule__Service__Group_3_14_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3389:1: ( rule__Service__Group_3_14_1__0__Impl rule__Service__Group_3_14_1__1 )
            // InternalDockerCompose.g:3390:2: rule__Service__Group_3_14_1__0__Impl rule__Service__Group_3_14_1__1
            {
            pushFollow(FOLLOW_21);
            rule__Service__Group_3_14_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_14_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14_1__0"


    // $ANTLR start "rule__Service__Group_3_14_1__0__Impl"
    // InternalDockerCompose.g:3397:1: rule__Service__Group_3_14_1__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_14_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3401:1: ( ( '-' ) )
            // InternalDockerCompose.g:3402:1: ( '-' )
            {
            // InternalDockerCompose.g:3402:1: ( '-' )
            // InternalDockerCompose.g:3403:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_14_1_0()); 
            match(input,56,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_14_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_14_1__1"
    // InternalDockerCompose.g:3412:1: rule__Service__Group_3_14_1__1 : rule__Service__Group_3_14_1__1__Impl ;
    public final void rule__Service__Group_3_14_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3416:1: ( rule__Service__Group_3_14_1__1__Impl )
            // InternalDockerCompose.g:3417:2: rule__Service__Group_3_14_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_14_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14_1__1"


    // $ANTLR start "rule__Service__Group_3_14_1__1__Impl"
    // InternalDockerCompose.g:3423:1: rule__Service__Group_3_14_1__1__Impl : ( ( rule__Service__DevicesAssignment_3_14_1_1 ) ) ;
    public final void rule__Service__Group_3_14_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3427:1: ( ( ( rule__Service__DevicesAssignment_3_14_1_1 ) ) )
            // InternalDockerCompose.g:3428:1: ( ( rule__Service__DevicesAssignment_3_14_1_1 ) )
            {
            // InternalDockerCompose.g:3428:1: ( ( rule__Service__DevicesAssignment_3_14_1_1 ) )
            // InternalDockerCompose.g:3429:2: ( rule__Service__DevicesAssignment_3_14_1_1 )
            {
             before(grammarAccess.getServiceAccess().getDevicesAssignment_3_14_1_1()); 
            // InternalDockerCompose.g:3430:2: ( rule__Service__DevicesAssignment_3_14_1_1 )
            // InternalDockerCompose.g:3430:3: rule__Service__DevicesAssignment_3_14_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__DevicesAssignment_3_14_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getDevicesAssignment_3_14_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_15__0"
    // InternalDockerCompose.g:3439:1: rule__Service__Group_3_15__0 : rule__Service__Group_3_15__0__Impl rule__Service__Group_3_15__1 ;
    public final void rule__Service__Group_3_15__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3443:1: ( rule__Service__Group_3_15__0__Impl rule__Service__Group_3_15__1 )
            // InternalDockerCompose.g:3444:2: rule__Service__Group_3_15__0__Impl rule__Service__Group_3_15__1
            {
            pushFollow(FOLLOW_22);
            rule__Service__Group_3_15__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_15__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_15__0"


    // $ANTLR start "rule__Service__Group_3_15__0__Impl"
    // InternalDockerCompose.g:3451:1: rule__Service__Group_3_15__0__Impl : ( 'dns:' ) ;
    public final void rule__Service__Group_3_15__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3455:1: ( ( 'dns:' ) )
            // InternalDockerCompose.g:3456:1: ( 'dns:' )
            {
            // InternalDockerCompose.g:3456:1: ( 'dns:' )
            // InternalDockerCompose.g:3457:2: 'dns:'
            {
             before(grammarAccess.getServiceAccess().getDnsKeyword_3_15_0()); 
            match(input,60,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getDnsKeyword_3_15_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_15__0__Impl"


    // $ANTLR start "rule__Service__Group_3_15__1"
    // InternalDockerCompose.g:3466:1: rule__Service__Group_3_15__1 : rule__Service__Group_3_15__1__Impl ;
    public final void rule__Service__Group_3_15__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3470:1: ( rule__Service__Group_3_15__1__Impl )
            // InternalDockerCompose.g:3471:2: rule__Service__Group_3_15__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_15__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_15__1"


    // $ANTLR start "rule__Service__Group_3_15__1__Impl"
    // InternalDockerCompose.g:3477:1: rule__Service__Group_3_15__1__Impl : ( ( rule__Service__Alternatives_3_15_1 ) ) ;
    public final void rule__Service__Group_3_15__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3481:1: ( ( ( rule__Service__Alternatives_3_15_1 ) ) )
            // InternalDockerCompose.g:3482:1: ( ( rule__Service__Alternatives_3_15_1 ) )
            {
            // InternalDockerCompose.g:3482:1: ( ( rule__Service__Alternatives_3_15_1 ) )
            // InternalDockerCompose.g:3483:2: ( rule__Service__Alternatives_3_15_1 )
            {
             before(grammarAccess.getServiceAccess().getAlternatives_3_15_1()); 
            // InternalDockerCompose.g:3484:2: ( rule__Service__Alternatives_3_15_1 )
            // InternalDockerCompose.g:3484:3: rule__Service__Alternatives_3_15_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Alternatives_3_15_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getAlternatives_3_15_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_15__1__Impl"


    // $ANTLR start "rule__Service__Group_3_15_1_0__0"
    // InternalDockerCompose.g:3493:1: rule__Service__Group_3_15_1_0__0 : rule__Service__Group_3_15_1_0__0__Impl rule__Service__Group_3_15_1_0__1 ;
    public final void rule__Service__Group_3_15_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3497:1: ( rule__Service__Group_3_15_1_0__0__Impl rule__Service__Group_3_15_1_0__1 )
            // InternalDockerCompose.g:3498:2: rule__Service__Group_3_15_1_0__0__Impl rule__Service__Group_3_15_1_0__1
            {
            pushFollow(FOLLOW_22);
            rule__Service__Group_3_15_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_15_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_15_1_0__0"


    // $ANTLR start "rule__Service__Group_3_15_1_0__0__Impl"
    // InternalDockerCompose.g:3505:1: rule__Service__Group_3_15_1_0__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_15_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3509:1: ( ( '-' ) )
            // InternalDockerCompose.g:3510:1: ( '-' )
            {
            // InternalDockerCompose.g:3510:1: ( '-' )
            // InternalDockerCompose.g:3511:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_15_1_0_0()); 
            match(input,56,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_15_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_15_1_0__0__Impl"


    // $ANTLR start "rule__Service__Group_3_15_1_0__1"
    // InternalDockerCompose.g:3520:1: rule__Service__Group_3_15_1_0__1 : rule__Service__Group_3_15_1_0__1__Impl ;
    public final void rule__Service__Group_3_15_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3524:1: ( rule__Service__Group_3_15_1_0__1__Impl )
            // InternalDockerCompose.g:3525:2: rule__Service__Group_3_15_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_15_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_15_1_0__1"


    // $ANTLR start "rule__Service__Group_3_15_1_0__1__Impl"
    // InternalDockerCompose.g:3531:1: rule__Service__Group_3_15_1_0__1__Impl : ( ( rule__Service__DnsAssignment_3_15_1_0_1 ) ) ;
    public final void rule__Service__Group_3_15_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3535:1: ( ( ( rule__Service__DnsAssignment_3_15_1_0_1 ) ) )
            // InternalDockerCompose.g:3536:1: ( ( rule__Service__DnsAssignment_3_15_1_0_1 ) )
            {
            // InternalDockerCompose.g:3536:1: ( ( rule__Service__DnsAssignment_3_15_1_0_1 ) )
            // InternalDockerCompose.g:3537:2: ( rule__Service__DnsAssignment_3_15_1_0_1 )
            {
             before(grammarAccess.getServiceAccess().getDnsAssignment_3_15_1_0_1()); 
            // InternalDockerCompose.g:3538:2: ( rule__Service__DnsAssignment_3_15_1_0_1 )
            // InternalDockerCompose.g:3538:3: rule__Service__DnsAssignment_3_15_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__DnsAssignment_3_15_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getDnsAssignment_3_15_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_15_1_0__1__Impl"


    // $ANTLR start "rule__Service__Group_3_16__0"
    // InternalDockerCompose.g:3547:1: rule__Service__Group_3_16__0 : rule__Service__Group_3_16__0__Impl rule__Service__Group_3_16__1 ;
    public final void rule__Service__Group_3_16__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3551:1: ( rule__Service__Group_3_16__0__Impl rule__Service__Group_3_16__1 )
            // InternalDockerCompose.g:3552:2: rule__Service__Group_3_16__0__Impl rule__Service__Group_3_16__1
            {
            pushFollow(FOLLOW_15);
            rule__Service__Group_3_16__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_16__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_16__0"


    // $ANTLR start "rule__Service__Group_3_16__0__Impl"
    // InternalDockerCompose.g:3559:1: rule__Service__Group_3_16__0__Impl : ( 'ports:' ) ;
    public final void rule__Service__Group_3_16__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3563:1: ( ( 'ports:' ) )
            // InternalDockerCompose.g:3564:1: ( 'ports:' )
            {
            // InternalDockerCompose.g:3564:1: ( 'ports:' )
            // InternalDockerCompose.g:3565:2: 'ports:'
            {
             before(grammarAccess.getServiceAccess().getPortsKeyword_3_16_0()); 
            match(input,61,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getPortsKeyword_3_16_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_16__0__Impl"


    // $ANTLR start "rule__Service__Group_3_16__1"
    // InternalDockerCompose.g:3574:1: rule__Service__Group_3_16__1 : rule__Service__Group_3_16__1__Impl ;
    public final void rule__Service__Group_3_16__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3578:1: ( rule__Service__Group_3_16__1__Impl )
            // InternalDockerCompose.g:3579:2: rule__Service__Group_3_16__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_16__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_16__1"


    // $ANTLR start "rule__Service__Group_3_16__1__Impl"
    // InternalDockerCompose.g:3585:1: rule__Service__Group_3_16__1__Impl : ( ( ( rule__Service__Group_3_16_1__0 ) ) ( ( rule__Service__Group_3_16_1__0 )* ) ) ;
    public final void rule__Service__Group_3_16__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3589:1: ( ( ( ( rule__Service__Group_3_16_1__0 ) ) ( ( rule__Service__Group_3_16_1__0 )* ) ) )
            // InternalDockerCompose.g:3590:1: ( ( ( rule__Service__Group_3_16_1__0 ) ) ( ( rule__Service__Group_3_16_1__0 )* ) )
            {
            // InternalDockerCompose.g:3590:1: ( ( ( rule__Service__Group_3_16_1__0 ) ) ( ( rule__Service__Group_3_16_1__0 )* ) )
            // InternalDockerCompose.g:3591:2: ( ( rule__Service__Group_3_16_1__0 ) ) ( ( rule__Service__Group_3_16_1__0 )* )
            {
            // InternalDockerCompose.g:3591:2: ( ( rule__Service__Group_3_16_1__0 ) )
            // InternalDockerCompose.g:3592:3: ( rule__Service__Group_3_16_1__0 )
            {
             before(grammarAccess.getServiceAccess().getGroup_3_16_1()); 
            // InternalDockerCompose.g:3593:3: ( rule__Service__Group_3_16_1__0 )
            // InternalDockerCompose.g:3593:4: rule__Service__Group_3_16_1__0
            {
            pushFollow(FOLLOW_3);
            rule__Service__Group_3_16_1__0();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getGroup_3_16_1()); 

            }

            // InternalDockerCompose.g:3596:2: ( ( rule__Service__Group_3_16_1__0 )* )
            // InternalDockerCompose.g:3597:3: ( rule__Service__Group_3_16_1__0 )*
            {
             before(grammarAccess.getServiceAccess().getGroup_3_16_1()); 
            // InternalDockerCompose.g:3598:3: ( rule__Service__Group_3_16_1__0 )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( (LA42_0==56) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // InternalDockerCompose.g:3598:4: rule__Service__Group_3_16_1__0
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Service__Group_3_16_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

             after(grammarAccess.getServiceAccess().getGroup_3_16_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_16__1__Impl"


    // $ANTLR start "rule__Service__Group_3_16_1__0"
    // InternalDockerCompose.g:3608:1: rule__Service__Group_3_16_1__0 : rule__Service__Group_3_16_1__0__Impl rule__Service__Group_3_16_1__1 ;
    public final void rule__Service__Group_3_16_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3612:1: ( rule__Service__Group_3_16_1__0__Impl rule__Service__Group_3_16_1__1 )
            // InternalDockerCompose.g:3613:2: rule__Service__Group_3_16_1__0__Impl rule__Service__Group_3_16_1__1
            {
            pushFollow(FOLLOW_23);
            rule__Service__Group_3_16_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_16_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_16_1__0"


    // $ANTLR start "rule__Service__Group_3_16_1__0__Impl"
    // InternalDockerCompose.g:3620:1: rule__Service__Group_3_16_1__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_16_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3624:1: ( ( '-' ) )
            // InternalDockerCompose.g:3625:1: ( '-' )
            {
            // InternalDockerCompose.g:3625:1: ( '-' )
            // InternalDockerCompose.g:3626:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_16_1_0()); 
            match(input,56,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_16_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_16_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_16_1__1"
    // InternalDockerCompose.g:3635:1: rule__Service__Group_3_16_1__1 : rule__Service__Group_3_16_1__1__Impl ;
    public final void rule__Service__Group_3_16_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3639:1: ( rule__Service__Group_3_16_1__1__Impl )
            // InternalDockerCompose.g:3640:2: rule__Service__Group_3_16_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_16_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_16_1__1"


    // $ANTLR start "rule__Service__Group_3_16_1__1__Impl"
    // InternalDockerCompose.g:3646:1: rule__Service__Group_3_16_1__1__Impl : ( ( rule__Service__PortsAssignment_3_16_1_1 ) ) ;
    public final void rule__Service__Group_3_16_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3650:1: ( ( ( rule__Service__PortsAssignment_3_16_1_1 ) ) )
            // InternalDockerCompose.g:3651:1: ( ( rule__Service__PortsAssignment_3_16_1_1 ) )
            {
            // InternalDockerCompose.g:3651:1: ( ( rule__Service__PortsAssignment_3_16_1_1 ) )
            // InternalDockerCompose.g:3652:2: ( rule__Service__PortsAssignment_3_16_1_1 )
            {
             before(grammarAccess.getServiceAccess().getPortsAssignment_3_16_1_1()); 
            // InternalDockerCompose.g:3653:2: ( rule__Service__PortsAssignment_3_16_1_1 )
            // InternalDockerCompose.g:3653:3: rule__Service__PortsAssignment_3_16_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__PortsAssignment_3_16_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getPortsAssignment_3_16_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_16_1__1__Impl"


    // $ANTLR start "rule__EnvironmentVariableMap__Group__0"
    // InternalDockerCompose.g:3662:1: rule__EnvironmentVariableMap__Group__0 : rule__EnvironmentVariableMap__Group__0__Impl rule__EnvironmentVariableMap__Group__1 ;
    public final void rule__EnvironmentVariableMap__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3666:1: ( rule__EnvironmentVariableMap__Group__0__Impl rule__EnvironmentVariableMap__Group__1 )
            // InternalDockerCompose.g:3667:2: rule__EnvironmentVariableMap__Group__0__Impl rule__EnvironmentVariableMap__Group__1
            {
            pushFollow(FOLLOW_11);
            rule__EnvironmentVariableMap__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__EnvironmentVariableMap__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableMap__Group__0"


    // $ANTLR start "rule__EnvironmentVariableMap__Group__0__Impl"
    // InternalDockerCompose.g:3674:1: rule__EnvironmentVariableMap__Group__0__Impl : ( () ) ;
    public final void rule__EnvironmentVariableMap__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3678:1: ( ( () ) )
            // InternalDockerCompose.g:3679:1: ( () )
            {
            // InternalDockerCompose.g:3679:1: ( () )
            // InternalDockerCompose.g:3680:2: ()
            {
             before(grammarAccess.getEnvironmentVariableMapAccess().getEnvironmentVariableAction_0()); 
            // InternalDockerCompose.g:3681:2: ()
            // InternalDockerCompose.g:3681:3: 
            {
            }

             after(grammarAccess.getEnvironmentVariableMapAccess().getEnvironmentVariableAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableMap__Group__0__Impl"


    // $ANTLR start "rule__EnvironmentVariableMap__Group__1"
    // InternalDockerCompose.g:3689:1: rule__EnvironmentVariableMap__Group__1 : rule__EnvironmentVariableMap__Group__1__Impl rule__EnvironmentVariableMap__Group__2 ;
    public final void rule__EnvironmentVariableMap__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3693:1: ( rule__EnvironmentVariableMap__Group__1__Impl rule__EnvironmentVariableMap__Group__2 )
            // InternalDockerCompose.g:3694:2: rule__EnvironmentVariableMap__Group__1__Impl rule__EnvironmentVariableMap__Group__2
            {
            pushFollow(FOLLOW_8);
            rule__EnvironmentVariableMap__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__EnvironmentVariableMap__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableMap__Group__1"


    // $ANTLR start "rule__EnvironmentVariableMap__Group__1__Impl"
    // InternalDockerCompose.g:3701:1: rule__EnvironmentVariableMap__Group__1__Impl : ( ( rule__EnvironmentVariableMap__NameAssignment_1 ) ) ;
    public final void rule__EnvironmentVariableMap__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3705:1: ( ( ( rule__EnvironmentVariableMap__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:3706:1: ( ( rule__EnvironmentVariableMap__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:3706:1: ( ( rule__EnvironmentVariableMap__NameAssignment_1 ) )
            // InternalDockerCompose.g:3707:2: ( rule__EnvironmentVariableMap__NameAssignment_1 )
            {
             before(grammarAccess.getEnvironmentVariableMapAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:3708:2: ( rule__EnvironmentVariableMap__NameAssignment_1 )
            // InternalDockerCompose.g:3708:3: rule__EnvironmentVariableMap__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__EnvironmentVariableMap__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getEnvironmentVariableMapAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableMap__Group__1__Impl"


    // $ANTLR start "rule__EnvironmentVariableMap__Group__2"
    // InternalDockerCompose.g:3716:1: rule__EnvironmentVariableMap__Group__2 : rule__EnvironmentVariableMap__Group__2__Impl rule__EnvironmentVariableMap__Group__3 ;
    public final void rule__EnvironmentVariableMap__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3720:1: ( rule__EnvironmentVariableMap__Group__2__Impl rule__EnvironmentVariableMap__Group__3 )
            // InternalDockerCompose.g:3721:2: rule__EnvironmentVariableMap__Group__2__Impl rule__EnvironmentVariableMap__Group__3
            {
            pushFollow(FOLLOW_7);
            rule__EnvironmentVariableMap__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__EnvironmentVariableMap__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableMap__Group__2"


    // $ANTLR start "rule__EnvironmentVariableMap__Group__2__Impl"
    // InternalDockerCompose.g:3728:1: rule__EnvironmentVariableMap__Group__2__Impl : ( ':' ) ;
    public final void rule__EnvironmentVariableMap__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3732:1: ( ( ':' ) )
            // InternalDockerCompose.g:3733:1: ( ':' )
            {
            // InternalDockerCompose.g:3733:1: ( ':' )
            // InternalDockerCompose.g:3734:2: ':'
            {
             before(grammarAccess.getEnvironmentVariableMapAccess().getColonKeyword_2()); 
            match(input,46,FOLLOW_2); 
             after(grammarAccess.getEnvironmentVariableMapAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableMap__Group__2__Impl"


    // $ANTLR start "rule__EnvironmentVariableMap__Group__3"
    // InternalDockerCompose.g:3743:1: rule__EnvironmentVariableMap__Group__3 : rule__EnvironmentVariableMap__Group__3__Impl ;
    public final void rule__EnvironmentVariableMap__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3747:1: ( rule__EnvironmentVariableMap__Group__3__Impl )
            // InternalDockerCompose.g:3748:2: rule__EnvironmentVariableMap__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__EnvironmentVariableMap__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableMap__Group__3"


    // $ANTLR start "rule__EnvironmentVariableMap__Group__3__Impl"
    // InternalDockerCompose.g:3754:1: rule__EnvironmentVariableMap__Group__3__Impl : ( ( rule__EnvironmentVariableMap__ValueAssignment_3 )? ) ;
    public final void rule__EnvironmentVariableMap__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3758:1: ( ( ( rule__EnvironmentVariableMap__ValueAssignment_3 )? ) )
            // InternalDockerCompose.g:3759:1: ( ( rule__EnvironmentVariableMap__ValueAssignment_3 )? )
            {
            // InternalDockerCompose.g:3759:1: ( ( rule__EnvironmentVariableMap__ValueAssignment_3 )? )
            // InternalDockerCompose.g:3760:2: ( rule__EnvironmentVariableMap__ValueAssignment_3 )?
            {
             before(grammarAccess.getEnvironmentVariableMapAccess().getValueAssignment_3()); 
            // InternalDockerCompose.g:3761:2: ( rule__EnvironmentVariableMap__ValueAssignment_3 )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==RULE_STRING) ) {
                int LA43_1 = input.LA(2);

                if ( (LA43_1==EOF||(LA43_1>=RULE_STRING && LA43_1<=RULE_ID)||(LA43_1>=40 && LA43_1<=45)||(LA43_1>=47 && LA43_1<=55)||(LA43_1>=57 && LA43_1<=61)) ) {
                    alt43=1;
                }
            }
            else if ( (LA43_0==RULE_ID) ) {
                int LA43_2 = input.LA(2);

                if ( (LA43_2==EOF||(LA43_2>=RULE_STRING && LA43_2<=RULE_ID)||(LA43_2>=40 && LA43_2<=45)||(LA43_2>=47 && LA43_2<=55)||(LA43_2>=57 && LA43_2<=61)) ) {
                    alt43=1;
                }
            }
            switch (alt43) {
                case 1 :
                    // InternalDockerCompose.g:3761:3: rule__EnvironmentVariableMap__ValueAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__EnvironmentVariableMap__ValueAssignment_3();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getEnvironmentVariableMapAccess().getValueAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableMap__Group__3__Impl"


    // $ANTLR start "rule__EnvironmentVariableList__Group__0"
    // InternalDockerCompose.g:3770:1: rule__EnvironmentVariableList__Group__0 : rule__EnvironmentVariableList__Group__0__Impl rule__EnvironmentVariableList__Group__1 ;
    public final void rule__EnvironmentVariableList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3774:1: ( rule__EnvironmentVariableList__Group__0__Impl rule__EnvironmentVariableList__Group__1 )
            // InternalDockerCompose.g:3775:2: rule__EnvironmentVariableList__Group__0__Impl rule__EnvironmentVariableList__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__EnvironmentVariableList__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__EnvironmentVariableList__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableList__Group__0"


    // $ANTLR start "rule__EnvironmentVariableList__Group__0__Impl"
    // InternalDockerCompose.g:3782:1: rule__EnvironmentVariableList__Group__0__Impl : ( () ) ;
    public final void rule__EnvironmentVariableList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3786:1: ( ( () ) )
            // InternalDockerCompose.g:3787:1: ( () )
            {
            // InternalDockerCompose.g:3787:1: ( () )
            // InternalDockerCompose.g:3788:2: ()
            {
             before(grammarAccess.getEnvironmentVariableListAccess().getEnvironmentVariableAction_0()); 
            // InternalDockerCompose.g:3789:2: ()
            // InternalDockerCompose.g:3789:3: 
            {
            }

             after(grammarAccess.getEnvironmentVariableListAccess().getEnvironmentVariableAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableList__Group__0__Impl"


    // $ANTLR start "rule__EnvironmentVariableList__Group__1"
    // InternalDockerCompose.g:3797:1: rule__EnvironmentVariableList__Group__1 : rule__EnvironmentVariableList__Group__1__Impl rule__EnvironmentVariableList__Group__2 ;
    public final void rule__EnvironmentVariableList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3801:1: ( rule__EnvironmentVariableList__Group__1__Impl rule__EnvironmentVariableList__Group__2 )
            // InternalDockerCompose.g:3802:2: rule__EnvironmentVariableList__Group__1__Impl rule__EnvironmentVariableList__Group__2
            {
            pushFollow(FOLLOW_11);
            rule__EnvironmentVariableList__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__EnvironmentVariableList__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableList__Group__1"


    // $ANTLR start "rule__EnvironmentVariableList__Group__1__Impl"
    // InternalDockerCompose.g:3809:1: rule__EnvironmentVariableList__Group__1__Impl : ( '-' ) ;
    public final void rule__EnvironmentVariableList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3813:1: ( ( '-' ) )
            // InternalDockerCompose.g:3814:1: ( '-' )
            {
            // InternalDockerCompose.g:3814:1: ( '-' )
            // InternalDockerCompose.g:3815:2: '-'
            {
             before(grammarAccess.getEnvironmentVariableListAccess().getHyphenMinusKeyword_1()); 
            match(input,56,FOLLOW_2); 
             after(grammarAccess.getEnvironmentVariableListAccess().getHyphenMinusKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableList__Group__1__Impl"


    // $ANTLR start "rule__EnvironmentVariableList__Group__2"
    // InternalDockerCompose.g:3824:1: rule__EnvironmentVariableList__Group__2 : rule__EnvironmentVariableList__Group__2__Impl rule__EnvironmentVariableList__Group__3 ;
    public final void rule__EnvironmentVariableList__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3828:1: ( rule__EnvironmentVariableList__Group__2__Impl rule__EnvironmentVariableList__Group__3 )
            // InternalDockerCompose.g:3829:2: rule__EnvironmentVariableList__Group__2__Impl rule__EnvironmentVariableList__Group__3
            {
            pushFollow(FOLLOW_24);
            rule__EnvironmentVariableList__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__EnvironmentVariableList__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableList__Group__2"


    // $ANTLR start "rule__EnvironmentVariableList__Group__2__Impl"
    // InternalDockerCompose.g:3836:1: rule__EnvironmentVariableList__Group__2__Impl : ( ( rule__EnvironmentVariableList__NameAssignment_2 ) ) ;
    public final void rule__EnvironmentVariableList__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3840:1: ( ( ( rule__EnvironmentVariableList__NameAssignment_2 ) ) )
            // InternalDockerCompose.g:3841:1: ( ( rule__EnvironmentVariableList__NameAssignment_2 ) )
            {
            // InternalDockerCompose.g:3841:1: ( ( rule__EnvironmentVariableList__NameAssignment_2 ) )
            // InternalDockerCompose.g:3842:2: ( rule__EnvironmentVariableList__NameAssignment_2 )
            {
             before(grammarAccess.getEnvironmentVariableListAccess().getNameAssignment_2()); 
            // InternalDockerCompose.g:3843:2: ( rule__EnvironmentVariableList__NameAssignment_2 )
            // InternalDockerCompose.g:3843:3: rule__EnvironmentVariableList__NameAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__EnvironmentVariableList__NameAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getEnvironmentVariableListAccess().getNameAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableList__Group__2__Impl"


    // $ANTLR start "rule__EnvironmentVariableList__Group__3"
    // InternalDockerCompose.g:3851:1: rule__EnvironmentVariableList__Group__3 : rule__EnvironmentVariableList__Group__3__Impl ;
    public final void rule__EnvironmentVariableList__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3855:1: ( rule__EnvironmentVariableList__Group__3__Impl )
            // InternalDockerCompose.g:3856:2: rule__EnvironmentVariableList__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__EnvironmentVariableList__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableList__Group__3"


    // $ANTLR start "rule__EnvironmentVariableList__Group__3__Impl"
    // InternalDockerCompose.g:3862:1: rule__EnvironmentVariableList__Group__3__Impl : ( ( rule__EnvironmentVariableList__Group_3__0 )? ) ;
    public final void rule__EnvironmentVariableList__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3866:1: ( ( ( rule__EnvironmentVariableList__Group_3__0 )? ) )
            // InternalDockerCompose.g:3867:1: ( ( rule__EnvironmentVariableList__Group_3__0 )? )
            {
            // InternalDockerCompose.g:3867:1: ( ( rule__EnvironmentVariableList__Group_3__0 )? )
            // InternalDockerCompose.g:3868:2: ( rule__EnvironmentVariableList__Group_3__0 )?
            {
             before(grammarAccess.getEnvironmentVariableListAccess().getGroup_3()); 
            // InternalDockerCompose.g:3869:2: ( rule__EnvironmentVariableList__Group_3__0 )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==62) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalDockerCompose.g:3869:3: rule__EnvironmentVariableList__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__EnvironmentVariableList__Group_3__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getEnvironmentVariableListAccess().getGroup_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableList__Group__3__Impl"


    // $ANTLR start "rule__EnvironmentVariableList__Group_3__0"
    // InternalDockerCompose.g:3878:1: rule__EnvironmentVariableList__Group_3__0 : rule__EnvironmentVariableList__Group_3__0__Impl rule__EnvironmentVariableList__Group_3__1 ;
    public final void rule__EnvironmentVariableList__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3882:1: ( rule__EnvironmentVariableList__Group_3__0__Impl rule__EnvironmentVariableList__Group_3__1 )
            // InternalDockerCompose.g:3883:2: rule__EnvironmentVariableList__Group_3__0__Impl rule__EnvironmentVariableList__Group_3__1
            {
            pushFollow(FOLLOW_7);
            rule__EnvironmentVariableList__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__EnvironmentVariableList__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableList__Group_3__0"


    // $ANTLR start "rule__EnvironmentVariableList__Group_3__0__Impl"
    // InternalDockerCompose.g:3890:1: rule__EnvironmentVariableList__Group_3__0__Impl : ( '=' ) ;
    public final void rule__EnvironmentVariableList__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3894:1: ( ( '=' ) )
            // InternalDockerCompose.g:3895:1: ( '=' )
            {
            // InternalDockerCompose.g:3895:1: ( '=' )
            // InternalDockerCompose.g:3896:2: '='
            {
             before(grammarAccess.getEnvironmentVariableListAccess().getEqualsSignKeyword_3_0()); 
            match(input,62,FOLLOW_2); 
             after(grammarAccess.getEnvironmentVariableListAccess().getEqualsSignKeyword_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableList__Group_3__0__Impl"


    // $ANTLR start "rule__EnvironmentVariableList__Group_3__1"
    // InternalDockerCompose.g:3905:1: rule__EnvironmentVariableList__Group_3__1 : rule__EnvironmentVariableList__Group_3__1__Impl ;
    public final void rule__EnvironmentVariableList__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3909:1: ( rule__EnvironmentVariableList__Group_3__1__Impl )
            // InternalDockerCompose.g:3910:2: rule__EnvironmentVariableList__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__EnvironmentVariableList__Group_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableList__Group_3__1"


    // $ANTLR start "rule__EnvironmentVariableList__Group_3__1__Impl"
    // InternalDockerCompose.g:3916:1: rule__EnvironmentVariableList__Group_3__1__Impl : ( ( rule__EnvironmentVariableList__ValueAssignment_3_1 ) ) ;
    public final void rule__EnvironmentVariableList__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3920:1: ( ( ( rule__EnvironmentVariableList__ValueAssignment_3_1 ) ) )
            // InternalDockerCompose.g:3921:1: ( ( rule__EnvironmentVariableList__ValueAssignment_3_1 ) )
            {
            // InternalDockerCompose.g:3921:1: ( ( rule__EnvironmentVariableList__ValueAssignment_3_1 ) )
            // InternalDockerCompose.g:3922:2: ( rule__EnvironmentVariableList__ValueAssignment_3_1 )
            {
             before(grammarAccess.getEnvironmentVariableListAccess().getValueAssignment_3_1()); 
            // InternalDockerCompose.g:3923:2: ( rule__EnvironmentVariableList__ValueAssignment_3_1 )
            // InternalDockerCompose.g:3923:3: rule__EnvironmentVariableList__ValueAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__EnvironmentVariableList__ValueAssignment_3_1();

            state._fsp--;


            }

             after(grammarAccess.getEnvironmentVariableListAccess().getValueAssignment_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableList__Group_3__1__Impl"


    // $ANTLR start "rule__Port__Group__0"
    // InternalDockerCompose.g:3932:1: rule__Port__Group__0 : rule__Port__Group__0__Impl rule__Port__Group__1 ;
    public final void rule__Port__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3936:1: ( rule__Port__Group__0__Impl rule__Port__Group__1 )
            // InternalDockerCompose.g:3937:2: rule__Port__Group__0__Impl rule__Port__Group__1
            {
            pushFollow(FOLLOW_23);
            rule__Port__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Port__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__Group__0"


    // $ANTLR start "rule__Port__Group__0__Impl"
    // InternalDockerCompose.g:3944:1: rule__Port__Group__0__Impl : ( () ) ;
    public final void rule__Port__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3948:1: ( ( () ) )
            // InternalDockerCompose.g:3949:1: ( () )
            {
            // InternalDockerCompose.g:3949:1: ( () )
            // InternalDockerCompose.g:3950:2: ()
            {
             before(grammarAccess.getPortAccess().getPortAction_0()); 
            // InternalDockerCompose.g:3951:2: ()
            // InternalDockerCompose.g:3951:3: 
            {
            }

             after(grammarAccess.getPortAccess().getPortAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__Group__0__Impl"


    // $ANTLR start "rule__Port__Group__1"
    // InternalDockerCompose.g:3959:1: rule__Port__Group__1 : rule__Port__Group__1__Impl ;
    public final void rule__Port__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3963:1: ( rule__Port__Group__1__Impl )
            // InternalDockerCompose.g:3964:2: rule__Port__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Port__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__Group__1"


    // $ANTLR start "rule__Port__Group__1__Impl"
    // InternalDockerCompose.g:3970:1: rule__Port__Group__1__Impl : ( ( rule__Port__ValueAssignment_1 ) ) ;
    public final void rule__Port__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3974:1: ( ( ( rule__Port__ValueAssignment_1 ) ) )
            // InternalDockerCompose.g:3975:1: ( ( rule__Port__ValueAssignment_1 ) )
            {
            // InternalDockerCompose.g:3975:1: ( ( rule__Port__ValueAssignment_1 ) )
            // InternalDockerCompose.g:3976:2: ( rule__Port__ValueAssignment_1 )
            {
             before(grammarAccess.getPortAccess().getValueAssignment_1()); 
            // InternalDockerCompose.g:3977:2: ( rule__Port__ValueAssignment_1 )
            // InternalDockerCompose.g:3977:3: rule__Port__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Port__ValueAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getPortAccess().getValueAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__Group__1__Impl"


    // $ANTLR start "rule__Device__Group__0"
    // InternalDockerCompose.g:3986:1: rule__Device__Group__0 : rule__Device__Group__0__Impl rule__Device__Group__1 ;
    public final void rule__Device__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3990:1: ( rule__Device__Group__0__Impl rule__Device__Group__1 )
            // InternalDockerCompose.g:3991:2: rule__Device__Group__0__Impl rule__Device__Group__1
            {
            pushFollow(FOLLOW_21);
            rule__Device__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Device__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Device__Group__0"


    // $ANTLR start "rule__Device__Group__0__Impl"
    // InternalDockerCompose.g:3998:1: rule__Device__Group__0__Impl : ( () ) ;
    public final void rule__Device__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4002:1: ( ( () ) )
            // InternalDockerCompose.g:4003:1: ( () )
            {
            // InternalDockerCompose.g:4003:1: ( () )
            // InternalDockerCompose.g:4004:2: ()
            {
             before(grammarAccess.getDeviceAccess().getDeviceAction_0()); 
            // InternalDockerCompose.g:4005:2: ()
            // InternalDockerCompose.g:4005:3: 
            {
            }

             after(grammarAccess.getDeviceAccess().getDeviceAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Device__Group__0__Impl"


    // $ANTLR start "rule__Device__Group__1"
    // InternalDockerCompose.g:4013:1: rule__Device__Group__1 : rule__Device__Group__1__Impl ;
    public final void rule__Device__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4017:1: ( rule__Device__Group__1__Impl )
            // InternalDockerCompose.g:4018:2: rule__Device__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Device__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Device__Group__1"


    // $ANTLR start "rule__Device__Group__1__Impl"
    // InternalDockerCompose.g:4024:1: rule__Device__Group__1__Impl : ( ( rule__Device__ValueAssignment_1 ) ) ;
    public final void rule__Device__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4028:1: ( ( ( rule__Device__ValueAssignment_1 ) ) )
            // InternalDockerCompose.g:4029:1: ( ( rule__Device__ValueAssignment_1 ) )
            {
            // InternalDockerCompose.g:4029:1: ( ( rule__Device__ValueAssignment_1 ) )
            // InternalDockerCompose.g:4030:2: ( rule__Device__ValueAssignment_1 )
            {
             before(grammarAccess.getDeviceAccess().getValueAssignment_1()); 
            // InternalDockerCompose.g:4031:2: ( rule__Device__ValueAssignment_1 )
            // InternalDockerCompose.g:4031:3: rule__Device__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Device__ValueAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getDeviceAccess().getValueAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Device__Group__1__Impl"


    // $ANTLR start "rule__Image__Group__0"
    // InternalDockerCompose.g:4040:1: rule__Image__Group__0 : rule__Image__Group__0__Impl rule__Image__Group__1 ;
    public final void rule__Image__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4044:1: ( rule__Image__Group__0__Impl rule__Image__Group__1 )
            // InternalDockerCompose.g:4045:2: rule__Image__Group__0__Impl rule__Image__Group__1
            {
            pushFollow(FOLLOW_11);
            rule__Image__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group__0"


    // $ANTLR start "rule__Image__Group__0__Impl"
    // InternalDockerCompose.g:4052:1: rule__Image__Group__0__Impl : ( ( rule__Image__Group_0__0 )? ) ;
    public final void rule__Image__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4056:1: ( ( ( rule__Image__Group_0__0 )? ) )
            // InternalDockerCompose.g:4057:1: ( ( rule__Image__Group_0__0 )? )
            {
            // InternalDockerCompose.g:4057:1: ( ( rule__Image__Group_0__0 )? )
            // InternalDockerCompose.g:4058:2: ( rule__Image__Group_0__0 )?
            {
             before(grammarAccess.getImageAccess().getGroup_0()); 
            // InternalDockerCompose.g:4059:2: ( rule__Image__Group_0__0 )?
            int alt45=2;
            alt45 = dfa45.predict(input);
            switch (alt45) {
                case 1 :
                    // InternalDockerCompose.g:4059:3: rule__Image__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Image__Group_0__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getImageAccess().getGroup_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group__0__Impl"


    // $ANTLR start "rule__Image__Group__1"
    // InternalDockerCompose.g:4067:1: rule__Image__Group__1 : rule__Image__Group__1__Impl rule__Image__Group__2 ;
    public final void rule__Image__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4071:1: ( rule__Image__Group__1__Impl rule__Image__Group__2 )
            // InternalDockerCompose.g:4072:2: rule__Image__Group__1__Impl rule__Image__Group__2
            {
            pushFollow(FOLLOW_11);
            rule__Image__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group__1"


    // $ANTLR start "rule__Image__Group__1__Impl"
    // InternalDockerCompose.g:4079:1: rule__Image__Group__1__Impl : ( ( rule__Image__Group_1__0 )? ) ;
    public final void rule__Image__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4083:1: ( ( ( rule__Image__Group_1__0 )? ) )
            // InternalDockerCompose.g:4084:1: ( ( rule__Image__Group_1__0 )? )
            {
            // InternalDockerCompose.g:4084:1: ( ( rule__Image__Group_1__0 )? )
            // InternalDockerCompose.g:4085:2: ( rule__Image__Group_1__0 )?
            {
             before(grammarAccess.getImageAccess().getGroup_1()); 
            // InternalDockerCompose.g:4086:2: ( rule__Image__Group_1__0 )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==RULE_ID) ) {
                int LA46_1 = input.LA(2);

                if ( (LA46_1==46) ) {
                    int LA46_2 = input.LA(3);

                    if ( (LA46_2==RULE_ID) ) {
                        int LA46_5 = input.LA(4);

                        if ( (LA46_5==46||LA46_5==63) ) {
                            alt46=1;
                        }
                    }
                }
                else if ( (LA46_1==63) ) {
                    alt46=1;
                }
            }
            switch (alt46) {
                case 1 :
                    // InternalDockerCompose.g:4086:3: rule__Image__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Image__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getImageAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group__1__Impl"


    // $ANTLR start "rule__Image__Group__2"
    // InternalDockerCompose.g:4094:1: rule__Image__Group__2 : rule__Image__Group__2__Impl rule__Image__Group__3 ;
    public final void rule__Image__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4098:1: ( rule__Image__Group__2__Impl rule__Image__Group__3 )
            // InternalDockerCompose.g:4099:2: rule__Image__Group__2__Impl rule__Image__Group__3
            {
            pushFollow(FOLLOW_25);
            rule__Image__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group__2"


    // $ANTLR start "rule__Image__Group__2__Impl"
    // InternalDockerCompose.g:4106:1: rule__Image__Group__2__Impl : ( RULE_ID ) ;
    public final void rule__Image__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4110:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:4111:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:4111:1: ( RULE_ID )
            // InternalDockerCompose.g:4112:2: RULE_ID
            {
             before(grammarAccess.getImageAccess().getIDTerminalRuleCall_2()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getImageAccess().getIDTerminalRuleCall_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group__2__Impl"


    // $ANTLR start "rule__Image__Group__3"
    // InternalDockerCompose.g:4121:1: rule__Image__Group__3 : rule__Image__Group__3__Impl ;
    public final void rule__Image__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4125:1: ( rule__Image__Group__3__Impl )
            // InternalDockerCompose.g:4126:2: rule__Image__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Image__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group__3"


    // $ANTLR start "rule__Image__Group__3__Impl"
    // InternalDockerCompose.g:4132:1: rule__Image__Group__3__Impl : ( ( rule__Image__Alternatives_3 )? ) ;
    public final void rule__Image__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4136:1: ( ( ( rule__Image__Alternatives_3 )? ) )
            // InternalDockerCompose.g:4137:1: ( ( rule__Image__Alternatives_3 )? )
            {
            // InternalDockerCompose.g:4137:1: ( ( rule__Image__Alternatives_3 )? )
            // InternalDockerCompose.g:4138:2: ( rule__Image__Alternatives_3 )?
            {
             before(grammarAccess.getImageAccess().getAlternatives_3()); 
            // InternalDockerCompose.g:4139:2: ( rule__Image__Alternatives_3 )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==46||LA47_0==64) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalDockerCompose.g:4139:3: rule__Image__Alternatives_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Image__Alternatives_3();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getImageAccess().getAlternatives_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group__3__Impl"


    // $ANTLR start "rule__Image__Group_0__0"
    // InternalDockerCompose.g:4148:1: rule__Image__Group_0__0 : rule__Image__Group_0__0__Impl rule__Image__Group_0__1 ;
    public final void rule__Image__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4152:1: ( rule__Image__Group_0__0__Impl rule__Image__Group_0__1 )
            // InternalDockerCompose.g:4153:2: rule__Image__Group_0__0__Impl rule__Image__Group_0__1
            {
            pushFollow(FOLLOW_26);
            rule__Image__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_0__0"


    // $ANTLR start "rule__Image__Group_0__0__Impl"
    // InternalDockerCompose.g:4160:1: rule__Image__Group_0__0__Impl : ( RULE_ID ) ;
    public final void rule__Image__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4164:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:4165:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:4165:1: ( RULE_ID )
            // InternalDockerCompose.g:4166:2: RULE_ID
            {
             before(grammarAccess.getImageAccess().getIDTerminalRuleCall_0_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getImageAccess().getIDTerminalRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_0__0__Impl"


    // $ANTLR start "rule__Image__Group_0__1"
    // InternalDockerCompose.g:4175:1: rule__Image__Group_0__1 : rule__Image__Group_0__1__Impl rule__Image__Group_0__2 ;
    public final void rule__Image__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4179:1: ( rule__Image__Group_0__1__Impl rule__Image__Group_0__2 )
            // InternalDockerCompose.g:4180:2: rule__Image__Group_0__1__Impl rule__Image__Group_0__2
            {
            pushFollow(FOLLOW_26);
            rule__Image__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_0__1"


    // $ANTLR start "rule__Image__Group_0__1__Impl"
    // InternalDockerCompose.g:4187:1: rule__Image__Group_0__1__Impl : ( ( rule__Image__Group_0_1__0 )* ) ;
    public final void rule__Image__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4191:1: ( ( ( rule__Image__Group_0_1__0 )* ) )
            // InternalDockerCompose.g:4192:1: ( ( rule__Image__Group_0_1__0 )* )
            {
            // InternalDockerCompose.g:4192:1: ( ( rule__Image__Group_0_1__0 )* )
            // InternalDockerCompose.g:4193:2: ( rule__Image__Group_0_1__0 )*
            {
             before(grammarAccess.getImageAccess().getGroup_0_1()); 
            // InternalDockerCompose.g:4194:2: ( rule__Image__Group_0_1__0 )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==46) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
            	    // InternalDockerCompose.g:4194:3: rule__Image__Group_0_1__0
            	    {
            	    pushFollow(FOLLOW_27);
            	    rule__Image__Group_0_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);

             after(grammarAccess.getImageAccess().getGroup_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_0__1__Impl"


    // $ANTLR start "rule__Image__Group_0__2"
    // InternalDockerCompose.g:4202:1: rule__Image__Group_0__2 : rule__Image__Group_0__2__Impl ;
    public final void rule__Image__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4206:1: ( rule__Image__Group_0__2__Impl )
            // InternalDockerCompose.g:4207:2: rule__Image__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Image__Group_0__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_0__2"


    // $ANTLR start "rule__Image__Group_0__2__Impl"
    // InternalDockerCompose.g:4213:1: rule__Image__Group_0__2__Impl : ( '/' ) ;
    public final void rule__Image__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4217:1: ( ( '/' ) )
            // InternalDockerCompose.g:4218:1: ( '/' )
            {
            // InternalDockerCompose.g:4218:1: ( '/' )
            // InternalDockerCompose.g:4219:2: '/'
            {
             before(grammarAccess.getImageAccess().getSolidusKeyword_0_2()); 
            match(input,63,FOLLOW_2); 
             after(grammarAccess.getImageAccess().getSolidusKeyword_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_0__2__Impl"


    // $ANTLR start "rule__Image__Group_0_1__0"
    // InternalDockerCompose.g:4229:1: rule__Image__Group_0_1__0 : rule__Image__Group_0_1__0__Impl rule__Image__Group_0_1__1 ;
    public final void rule__Image__Group_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4233:1: ( rule__Image__Group_0_1__0__Impl rule__Image__Group_0_1__1 )
            // InternalDockerCompose.g:4234:2: rule__Image__Group_0_1__0__Impl rule__Image__Group_0_1__1
            {
            pushFollow(FOLLOW_11);
            rule__Image__Group_0_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group_0_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_0_1__0"


    // $ANTLR start "rule__Image__Group_0_1__0__Impl"
    // InternalDockerCompose.g:4241:1: rule__Image__Group_0_1__0__Impl : ( ':' ) ;
    public final void rule__Image__Group_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4245:1: ( ( ':' ) )
            // InternalDockerCompose.g:4246:1: ( ':' )
            {
            // InternalDockerCompose.g:4246:1: ( ':' )
            // InternalDockerCompose.g:4247:2: ':'
            {
             before(grammarAccess.getImageAccess().getColonKeyword_0_1_0()); 
            match(input,46,FOLLOW_2); 
             after(grammarAccess.getImageAccess().getColonKeyword_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_0_1__0__Impl"


    // $ANTLR start "rule__Image__Group_0_1__1"
    // InternalDockerCompose.g:4256:1: rule__Image__Group_0_1__1 : rule__Image__Group_0_1__1__Impl ;
    public final void rule__Image__Group_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4260:1: ( rule__Image__Group_0_1__1__Impl )
            // InternalDockerCompose.g:4261:2: rule__Image__Group_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Image__Group_0_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_0_1__1"


    // $ANTLR start "rule__Image__Group_0_1__1__Impl"
    // InternalDockerCompose.g:4267:1: rule__Image__Group_0_1__1__Impl : ( RULE_ID ) ;
    public final void rule__Image__Group_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4271:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:4272:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:4272:1: ( RULE_ID )
            // InternalDockerCompose.g:4273:2: RULE_ID
            {
             before(grammarAccess.getImageAccess().getIDTerminalRuleCall_0_1_1()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getImageAccess().getIDTerminalRuleCall_0_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_0_1__1__Impl"


    // $ANTLR start "rule__Image__Group_1__0"
    // InternalDockerCompose.g:4283:1: rule__Image__Group_1__0 : rule__Image__Group_1__0__Impl rule__Image__Group_1__1 ;
    public final void rule__Image__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4287:1: ( rule__Image__Group_1__0__Impl rule__Image__Group_1__1 )
            // InternalDockerCompose.g:4288:2: rule__Image__Group_1__0__Impl rule__Image__Group_1__1
            {
            pushFollow(FOLLOW_26);
            rule__Image__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1__0"


    // $ANTLR start "rule__Image__Group_1__0__Impl"
    // InternalDockerCompose.g:4295:1: rule__Image__Group_1__0__Impl : ( RULE_ID ) ;
    public final void rule__Image__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4299:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:4300:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:4300:1: ( RULE_ID )
            // InternalDockerCompose.g:4301:2: RULE_ID
            {
             before(grammarAccess.getImageAccess().getIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getImageAccess().getIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1__0__Impl"


    // $ANTLR start "rule__Image__Group_1__1"
    // InternalDockerCompose.g:4310:1: rule__Image__Group_1__1 : rule__Image__Group_1__1__Impl rule__Image__Group_1__2 ;
    public final void rule__Image__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4314:1: ( rule__Image__Group_1__1__Impl rule__Image__Group_1__2 )
            // InternalDockerCompose.g:4315:2: rule__Image__Group_1__1__Impl rule__Image__Group_1__2
            {
            pushFollow(FOLLOW_26);
            rule__Image__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1__1"


    // $ANTLR start "rule__Image__Group_1__1__Impl"
    // InternalDockerCompose.g:4322:1: rule__Image__Group_1__1__Impl : ( ( rule__Image__Group_1_1__0 )* ) ;
    public final void rule__Image__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4326:1: ( ( ( rule__Image__Group_1_1__0 )* ) )
            // InternalDockerCompose.g:4327:1: ( ( rule__Image__Group_1_1__0 )* )
            {
            // InternalDockerCompose.g:4327:1: ( ( rule__Image__Group_1_1__0 )* )
            // InternalDockerCompose.g:4328:2: ( rule__Image__Group_1_1__0 )*
            {
             before(grammarAccess.getImageAccess().getGroup_1_1()); 
            // InternalDockerCompose.g:4329:2: ( rule__Image__Group_1_1__0 )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( (LA49_0==46) ) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // InternalDockerCompose.g:4329:3: rule__Image__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_27);
            	    rule__Image__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);

             after(grammarAccess.getImageAccess().getGroup_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1__1__Impl"


    // $ANTLR start "rule__Image__Group_1__2"
    // InternalDockerCompose.g:4337:1: rule__Image__Group_1__2 : rule__Image__Group_1__2__Impl ;
    public final void rule__Image__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4341:1: ( rule__Image__Group_1__2__Impl )
            // InternalDockerCompose.g:4342:2: rule__Image__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Image__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1__2"


    // $ANTLR start "rule__Image__Group_1__2__Impl"
    // InternalDockerCompose.g:4348:1: rule__Image__Group_1__2__Impl : ( '/' ) ;
    public final void rule__Image__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4352:1: ( ( '/' ) )
            // InternalDockerCompose.g:4353:1: ( '/' )
            {
            // InternalDockerCompose.g:4353:1: ( '/' )
            // InternalDockerCompose.g:4354:2: '/'
            {
             before(grammarAccess.getImageAccess().getSolidusKeyword_1_2()); 
            match(input,63,FOLLOW_2); 
             after(grammarAccess.getImageAccess().getSolidusKeyword_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1__2__Impl"


    // $ANTLR start "rule__Image__Group_1_1__0"
    // InternalDockerCompose.g:4364:1: rule__Image__Group_1_1__0 : rule__Image__Group_1_1__0__Impl rule__Image__Group_1_1__1 ;
    public final void rule__Image__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4368:1: ( rule__Image__Group_1_1__0__Impl rule__Image__Group_1_1__1 )
            // InternalDockerCompose.g:4369:2: rule__Image__Group_1_1__0__Impl rule__Image__Group_1_1__1
            {
            pushFollow(FOLLOW_11);
            rule__Image__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1_1__0"


    // $ANTLR start "rule__Image__Group_1_1__0__Impl"
    // InternalDockerCompose.g:4376:1: rule__Image__Group_1_1__0__Impl : ( ':' ) ;
    public final void rule__Image__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4380:1: ( ( ':' ) )
            // InternalDockerCompose.g:4381:1: ( ':' )
            {
            // InternalDockerCompose.g:4381:1: ( ':' )
            // InternalDockerCompose.g:4382:2: ':'
            {
             before(grammarAccess.getImageAccess().getColonKeyword_1_1_0()); 
            match(input,46,FOLLOW_2); 
             after(grammarAccess.getImageAccess().getColonKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1_1__0__Impl"


    // $ANTLR start "rule__Image__Group_1_1__1"
    // InternalDockerCompose.g:4391:1: rule__Image__Group_1_1__1 : rule__Image__Group_1_1__1__Impl ;
    public final void rule__Image__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4395:1: ( rule__Image__Group_1_1__1__Impl )
            // InternalDockerCompose.g:4396:2: rule__Image__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Image__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1_1__1"


    // $ANTLR start "rule__Image__Group_1_1__1__Impl"
    // InternalDockerCompose.g:4402:1: rule__Image__Group_1_1__1__Impl : ( RULE_ID ) ;
    public final void rule__Image__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4406:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:4407:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:4407:1: ( RULE_ID )
            // InternalDockerCompose.g:4408:2: RULE_ID
            {
             before(grammarAccess.getImageAccess().getIDTerminalRuleCall_1_1_1()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getImageAccess().getIDTerminalRuleCall_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1_1__1__Impl"


    // $ANTLR start "rule__Image__Group_3_0__0"
    // InternalDockerCompose.g:4418:1: rule__Image__Group_3_0__0 : rule__Image__Group_3_0__0__Impl rule__Image__Group_3_0__1 ;
    public final void rule__Image__Group_3_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4422:1: ( rule__Image__Group_3_0__0__Impl rule__Image__Group_3_0__1 )
            // InternalDockerCompose.g:4423:2: rule__Image__Group_3_0__0__Impl rule__Image__Group_3_0__1
            {
            pushFollow(FOLLOW_11);
            rule__Image__Group_3_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group_3_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_3_0__0"


    // $ANTLR start "rule__Image__Group_3_0__0__Impl"
    // InternalDockerCompose.g:4430:1: rule__Image__Group_3_0__0__Impl : ( ':' ) ;
    public final void rule__Image__Group_3_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4434:1: ( ( ':' ) )
            // InternalDockerCompose.g:4435:1: ( ':' )
            {
            // InternalDockerCompose.g:4435:1: ( ':' )
            // InternalDockerCompose.g:4436:2: ':'
            {
             before(grammarAccess.getImageAccess().getColonKeyword_3_0_0()); 
            match(input,46,FOLLOW_2); 
             after(grammarAccess.getImageAccess().getColonKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_3_0__0__Impl"


    // $ANTLR start "rule__Image__Group_3_0__1"
    // InternalDockerCompose.g:4445:1: rule__Image__Group_3_0__1 : rule__Image__Group_3_0__1__Impl ;
    public final void rule__Image__Group_3_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4449:1: ( rule__Image__Group_3_0__1__Impl )
            // InternalDockerCompose.g:4450:2: rule__Image__Group_3_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Image__Group_3_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_3_0__1"


    // $ANTLR start "rule__Image__Group_3_0__1__Impl"
    // InternalDockerCompose.g:4456:1: rule__Image__Group_3_0__1__Impl : ( RULE_ID ) ;
    public final void rule__Image__Group_3_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4460:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:4461:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:4461:1: ( RULE_ID )
            // InternalDockerCompose.g:4462:2: RULE_ID
            {
             before(grammarAccess.getImageAccess().getIDTerminalRuleCall_3_0_1()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getImageAccess().getIDTerminalRuleCall_3_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_3_0__1__Impl"


    // $ANTLR start "rule__Image__Group_3_1__0"
    // InternalDockerCompose.g:4472:1: rule__Image__Group_3_1__0 : rule__Image__Group_3_1__0__Impl rule__Image__Group_3_1__1 ;
    public final void rule__Image__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4476:1: ( rule__Image__Group_3_1__0__Impl rule__Image__Group_3_1__1 )
            // InternalDockerCompose.g:4477:2: rule__Image__Group_3_1__0__Impl rule__Image__Group_3_1__1
            {
            pushFollow(FOLLOW_11);
            rule__Image__Group_3_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group_3_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_3_1__0"


    // $ANTLR start "rule__Image__Group_3_1__0__Impl"
    // InternalDockerCompose.g:4484:1: rule__Image__Group_3_1__0__Impl : ( '@' ) ;
    public final void rule__Image__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4488:1: ( ( '@' ) )
            // InternalDockerCompose.g:4489:1: ( '@' )
            {
            // InternalDockerCompose.g:4489:1: ( '@' )
            // InternalDockerCompose.g:4490:2: '@'
            {
             before(grammarAccess.getImageAccess().getCommercialAtKeyword_3_1_0()); 
            match(input,64,FOLLOW_2); 
             after(grammarAccess.getImageAccess().getCommercialAtKeyword_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_3_1__0__Impl"


    // $ANTLR start "rule__Image__Group_3_1__1"
    // InternalDockerCompose.g:4499:1: rule__Image__Group_3_1__1 : rule__Image__Group_3_1__1__Impl rule__Image__Group_3_1__2 ;
    public final void rule__Image__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4503:1: ( rule__Image__Group_3_1__1__Impl rule__Image__Group_3_1__2 )
            // InternalDockerCompose.g:4504:2: rule__Image__Group_3_1__1__Impl rule__Image__Group_3_1__2
            {
            pushFollow(FOLLOW_8);
            rule__Image__Group_3_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group_3_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_3_1__1"


    // $ANTLR start "rule__Image__Group_3_1__1__Impl"
    // InternalDockerCompose.g:4511:1: rule__Image__Group_3_1__1__Impl : ( RULE_ID ) ;
    public final void rule__Image__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4515:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:4516:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:4516:1: ( RULE_ID )
            // InternalDockerCompose.g:4517:2: RULE_ID
            {
             before(grammarAccess.getImageAccess().getIDTerminalRuleCall_3_1_1()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getImageAccess().getIDTerminalRuleCall_3_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_3_1__1__Impl"


    // $ANTLR start "rule__Image__Group_3_1__2"
    // InternalDockerCompose.g:4526:1: rule__Image__Group_3_1__2 : rule__Image__Group_3_1__2__Impl ;
    public final void rule__Image__Group_3_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4530:1: ( rule__Image__Group_3_1__2__Impl )
            // InternalDockerCompose.g:4531:2: rule__Image__Group_3_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Image__Group_3_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_3_1__2"


    // $ANTLR start "rule__Image__Group_3_1__2__Impl"
    // InternalDockerCompose.g:4537:1: rule__Image__Group_3_1__2__Impl : ( ( rule__Image__Group_3_1_2__0 )* ) ;
    public final void rule__Image__Group_3_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4541:1: ( ( ( rule__Image__Group_3_1_2__0 )* ) )
            // InternalDockerCompose.g:4542:1: ( ( rule__Image__Group_3_1_2__0 )* )
            {
            // InternalDockerCompose.g:4542:1: ( ( rule__Image__Group_3_1_2__0 )* )
            // InternalDockerCompose.g:4543:2: ( rule__Image__Group_3_1_2__0 )*
            {
             before(grammarAccess.getImageAccess().getGroup_3_1_2()); 
            // InternalDockerCompose.g:4544:2: ( rule__Image__Group_3_1_2__0 )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( (LA50_0==46) ) {
                    alt50=1;
                }


                switch (alt50) {
            	case 1 :
            	    // InternalDockerCompose.g:4544:3: rule__Image__Group_3_1_2__0
            	    {
            	    pushFollow(FOLLOW_27);
            	    rule__Image__Group_3_1_2__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);

             after(grammarAccess.getImageAccess().getGroup_3_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_3_1__2__Impl"


    // $ANTLR start "rule__Image__Group_3_1_2__0"
    // InternalDockerCompose.g:4553:1: rule__Image__Group_3_1_2__0 : rule__Image__Group_3_1_2__0__Impl rule__Image__Group_3_1_2__1 ;
    public final void rule__Image__Group_3_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4557:1: ( rule__Image__Group_3_1_2__0__Impl rule__Image__Group_3_1_2__1 )
            // InternalDockerCompose.g:4558:2: rule__Image__Group_3_1_2__0__Impl rule__Image__Group_3_1_2__1
            {
            pushFollow(FOLLOW_11);
            rule__Image__Group_3_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group_3_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_3_1_2__0"


    // $ANTLR start "rule__Image__Group_3_1_2__0__Impl"
    // InternalDockerCompose.g:4565:1: rule__Image__Group_3_1_2__0__Impl : ( ':' ) ;
    public final void rule__Image__Group_3_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4569:1: ( ( ':' ) )
            // InternalDockerCompose.g:4570:1: ( ':' )
            {
            // InternalDockerCompose.g:4570:1: ( ':' )
            // InternalDockerCompose.g:4571:2: ':'
            {
             before(grammarAccess.getImageAccess().getColonKeyword_3_1_2_0()); 
            match(input,46,FOLLOW_2); 
             after(grammarAccess.getImageAccess().getColonKeyword_3_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_3_1_2__0__Impl"


    // $ANTLR start "rule__Image__Group_3_1_2__1"
    // InternalDockerCompose.g:4580:1: rule__Image__Group_3_1_2__1 : rule__Image__Group_3_1_2__1__Impl ;
    public final void rule__Image__Group_3_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4584:1: ( rule__Image__Group_3_1_2__1__Impl )
            // InternalDockerCompose.g:4585:2: rule__Image__Group_3_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Image__Group_3_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_3_1_2__1"


    // $ANTLR start "rule__Image__Group_3_1_2__1__Impl"
    // InternalDockerCompose.g:4591:1: rule__Image__Group_3_1_2__1__Impl : ( RULE_ID ) ;
    public final void rule__Image__Group_3_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4595:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:4596:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:4596:1: ( RULE_ID )
            // InternalDockerCompose.g:4597:2: RULE_ID
            {
             before(grammarAccess.getImageAccess().getIDTerminalRuleCall_3_1_2_1()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getImageAccess().getIDTerminalRuleCall_3_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_3_1_2__1__Impl"


    // $ANTLR start "rule__Link__Group__0"
    // InternalDockerCompose.g:4607:1: rule__Link__Group__0 : rule__Link__Group__0__Impl rule__Link__Group__1 ;
    public final void rule__Link__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4611:1: ( rule__Link__Group__0__Impl rule__Link__Group__1 )
            // InternalDockerCompose.g:4612:2: rule__Link__Group__0__Impl rule__Link__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__Link__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Link__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__Group__0"


    // $ANTLR start "rule__Link__Group__0__Impl"
    // InternalDockerCompose.g:4619:1: rule__Link__Group__0__Impl : ( () ) ;
    public final void rule__Link__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4623:1: ( ( () ) )
            // InternalDockerCompose.g:4624:1: ( () )
            {
            // InternalDockerCompose.g:4624:1: ( () )
            // InternalDockerCompose.g:4625:2: ()
            {
             before(grammarAccess.getLinkAccess().getLinkAction_0()); 
            // InternalDockerCompose.g:4626:2: ()
            // InternalDockerCompose.g:4626:3: 
            {
            }

             after(grammarAccess.getLinkAccess().getLinkAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__Group__0__Impl"


    // $ANTLR start "rule__Link__Group__1"
    // InternalDockerCompose.g:4634:1: rule__Link__Group__1 : rule__Link__Group__1__Impl rule__Link__Group__2 ;
    public final void rule__Link__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4638:1: ( rule__Link__Group__1__Impl rule__Link__Group__2 )
            // InternalDockerCompose.g:4639:2: rule__Link__Group__1__Impl rule__Link__Group__2
            {
            pushFollow(FOLLOW_8);
            rule__Link__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Link__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__Group__1"


    // $ANTLR start "rule__Link__Group__1__Impl"
    // InternalDockerCompose.g:4646:1: rule__Link__Group__1__Impl : ( ( rule__Link__ServiceAssignment_1 ) ) ;
    public final void rule__Link__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4650:1: ( ( ( rule__Link__ServiceAssignment_1 ) ) )
            // InternalDockerCompose.g:4651:1: ( ( rule__Link__ServiceAssignment_1 ) )
            {
            // InternalDockerCompose.g:4651:1: ( ( rule__Link__ServiceAssignment_1 ) )
            // InternalDockerCompose.g:4652:2: ( rule__Link__ServiceAssignment_1 )
            {
             before(grammarAccess.getLinkAccess().getServiceAssignment_1()); 
            // InternalDockerCompose.g:4653:2: ( rule__Link__ServiceAssignment_1 )
            // InternalDockerCompose.g:4653:3: rule__Link__ServiceAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Link__ServiceAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getLinkAccess().getServiceAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__Group__1__Impl"


    // $ANTLR start "rule__Link__Group__2"
    // InternalDockerCompose.g:4661:1: rule__Link__Group__2 : rule__Link__Group__2__Impl ;
    public final void rule__Link__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4665:1: ( rule__Link__Group__2__Impl )
            // InternalDockerCompose.g:4666:2: rule__Link__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Link__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__Group__2"


    // $ANTLR start "rule__Link__Group__2__Impl"
    // InternalDockerCompose.g:4672:1: rule__Link__Group__2__Impl : ( ( rule__Link__Group_2__0 )? ) ;
    public final void rule__Link__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4676:1: ( ( ( rule__Link__Group_2__0 )? ) )
            // InternalDockerCompose.g:4677:1: ( ( rule__Link__Group_2__0 )? )
            {
            // InternalDockerCompose.g:4677:1: ( ( rule__Link__Group_2__0 )? )
            // InternalDockerCompose.g:4678:2: ( rule__Link__Group_2__0 )?
            {
             before(grammarAccess.getLinkAccess().getGroup_2()); 
            // InternalDockerCompose.g:4679:2: ( rule__Link__Group_2__0 )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==46) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalDockerCompose.g:4679:3: rule__Link__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Link__Group_2__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getLinkAccess().getGroup_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__Group__2__Impl"


    // $ANTLR start "rule__Link__Group_2__0"
    // InternalDockerCompose.g:4688:1: rule__Link__Group_2__0 : rule__Link__Group_2__0__Impl rule__Link__Group_2__1 ;
    public final void rule__Link__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4692:1: ( rule__Link__Group_2__0__Impl rule__Link__Group_2__1 )
            // InternalDockerCompose.g:4693:2: rule__Link__Group_2__0__Impl rule__Link__Group_2__1
            {
            pushFollow(FOLLOW_7);
            rule__Link__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Link__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__Group_2__0"


    // $ANTLR start "rule__Link__Group_2__0__Impl"
    // InternalDockerCompose.g:4700:1: rule__Link__Group_2__0__Impl : ( ':' ) ;
    public final void rule__Link__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4704:1: ( ( ':' ) )
            // InternalDockerCompose.g:4705:1: ( ':' )
            {
            // InternalDockerCompose.g:4705:1: ( ':' )
            // InternalDockerCompose.g:4706:2: ':'
            {
             before(grammarAccess.getLinkAccess().getColonKeyword_2_0()); 
            match(input,46,FOLLOW_2); 
             after(grammarAccess.getLinkAccess().getColonKeyword_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__Group_2__0__Impl"


    // $ANTLR start "rule__Link__Group_2__1"
    // InternalDockerCompose.g:4715:1: rule__Link__Group_2__1 : rule__Link__Group_2__1__Impl ;
    public final void rule__Link__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4719:1: ( rule__Link__Group_2__1__Impl )
            // InternalDockerCompose.g:4720:2: rule__Link__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Link__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__Group_2__1"


    // $ANTLR start "rule__Link__Group_2__1__Impl"
    // InternalDockerCompose.g:4726:1: rule__Link__Group_2__1__Impl : ( ( rule__Link__AliasAssignment_2_1 ) ) ;
    public final void rule__Link__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4730:1: ( ( ( rule__Link__AliasAssignment_2_1 ) ) )
            // InternalDockerCompose.g:4731:1: ( ( rule__Link__AliasAssignment_2_1 ) )
            {
            // InternalDockerCompose.g:4731:1: ( ( rule__Link__AliasAssignment_2_1 ) )
            // InternalDockerCompose.g:4732:2: ( rule__Link__AliasAssignment_2_1 )
            {
             before(grammarAccess.getLinkAccess().getAliasAssignment_2_1()); 
            // InternalDockerCompose.g:4733:2: ( rule__Link__AliasAssignment_2_1 )
            // InternalDockerCompose.g:4733:3: rule__Link__AliasAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Link__AliasAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getLinkAccess().getAliasAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__Group_2__1__Impl"


    // $ANTLR start "rule__Dependency_short__Group__0"
    // InternalDockerCompose.g:4742:1: rule__Dependency_short__Group__0 : rule__Dependency_short__Group__0__Impl rule__Dependency_short__Group__1 ;
    public final void rule__Dependency_short__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4746:1: ( rule__Dependency_short__Group__0__Impl rule__Dependency_short__Group__1 )
            // InternalDockerCompose.g:4747:2: rule__Dependency_short__Group__0__Impl rule__Dependency_short__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__Dependency_short__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Dependency_short__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_short__Group__0"


    // $ANTLR start "rule__Dependency_short__Group__0__Impl"
    // InternalDockerCompose.g:4754:1: rule__Dependency_short__Group__0__Impl : ( () ) ;
    public final void rule__Dependency_short__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4758:1: ( ( () ) )
            // InternalDockerCompose.g:4759:1: ( () )
            {
            // InternalDockerCompose.g:4759:1: ( () )
            // InternalDockerCompose.g:4760:2: ()
            {
             before(grammarAccess.getDependency_shortAccess().getDependencyAction_0()); 
            // InternalDockerCompose.g:4761:2: ()
            // InternalDockerCompose.g:4761:3: 
            {
            }

             after(grammarAccess.getDependency_shortAccess().getDependencyAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_short__Group__0__Impl"


    // $ANTLR start "rule__Dependency_short__Group__1"
    // InternalDockerCompose.g:4769:1: rule__Dependency_short__Group__1 : rule__Dependency_short__Group__1__Impl rule__Dependency_short__Group__2 ;
    public final void rule__Dependency_short__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4773:1: ( rule__Dependency_short__Group__1__Impl rule__Dependency_short__Group__2 )
            // InternalDockerCompose.g:4774:2: rule__Dependency_short__Group__1__Impl rule__Dependency_short__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__Dependency_short__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Dependency_short__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_short__Group__1"


    // $ANTLR start "rule__Dependency_short__Group__1__Impl"
    // InternalDockerCompose.g:4781:1: rule__Dependency_short__Group__1__Impl : ( '-' ) ;
    public final void rule__Dependency_short__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4785:1: ( ( '-' ) )
            // InternalDockerCompose.g:4786:1: ( '-' )
            {
            // InternalDockerCompose.g:4786:1: ( '-' )
            // InternalDockerCompose.g:4787:2: '-'
            {
             before(grammarAccess.getDependency_shortAccess().getHyphenMinusKeyword_1()); 
            match(input,56,FOLLOW_2); 
             after(grammarAccess.getDependency_shortAccess().getHyphenMinusKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_short__Group__1__Impl"


    // $ANTLR start "rule__Dependency_short__Group__2"
    // InternalDockerCompose.g:4796:1: rule__Dependency_short__Group__2 : rule__Dependency_short__Group__2__Impl ;
    public final void rule__Dependency_short__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4800:1: ( rule__Dependency_short__Group__2__Impl )
            // InternalDockerCompose.g:4801:2: rule__Dependency_short__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Dependency_short__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_short__Group__2"


    // $ANTLR start "rule__Dependency_short__Group__2__Impl"
    // InternalDockerCompose.g:4807:1: rule__Dependency_short__Group__2__Impl : ( ( rule__Dependency_short__ServiceAssignment_2 ) ) ;
    public final void rule__Dependency_short__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4811:1: ( ( ( rule__Dependency_short__ServiceAssignment_2 ) ) )
            // InternalDockerCompose.g:4812:1: ( ( rule__Dependency_short__ServiceAssignment_2 ) )
            {
            // InternalDockerCompose.g:4812:1: ( ( rule__Dependency_short__ServiceAssignment_2 ) )
            // InternalDockerCompose.g:4813:2: ( rule__Dependency_short__ServiceAssignment_2 )
            {
             before(grammarAccess.getDependency_shortAccess().getServiceAssignment_2()); 
            // InternalDockerCompose.g:4814:2: ( rule__Dependency_short__ServiceAssignment_2 )
            // InternalDockerCompose.g:4814:3: rule__Dependency_short__ServiceAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Dependency_short__ServiceAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getDependency_shortAccess().getServiceAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_short__Group__2__Impl"


    // $ANTLR start "rule__Dependency_long__Group__0"
    // InternalDockerCompose.g:4823:1: rule__Dependency_long__Group__0 : rule__Dependency_long__Group__0__Impl rule__Dependency_long__Group__1 ;
    public final void rule__Dependency_long__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4827:1: ( rule__Dependency_long__Group__0__Impl rule__Dependency_long__Group__1 )
            // InternalDockerCompose.g:4828:2: rule__Dependency_long__Group__0__Impl rule__Dependency_long__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__Dependency_long__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Dependency_long__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_long__Group__0"


    // $ANTLR start "rule__Dependency_long__Group__0__Impl"
    // InternalDockerCompose.g:4835:1: rule__Dependency_long__Group__0__Impl : ( () ) ;
    public final void rule__Dependency_long__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4839:1: ( ( () ) )
            // InternalDockerCompose.g:4840:1: ( () )
            {
            // InternalDockerCompose.g:4840:1: ( () )
            // InternalDockerCompose.g:4841:2: ()
            {
             before(grammarAccess.getDependency_longAccess().getDependencyAction_0()); 
            // InternalDockerCompose.g:4842:2: ()
            // InternalDockerCompose.g:4842:3: 
            {
            }

             after(grammarAccess.getDependency_longAccess().getDependencyAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_long__Group__0__Impl"


    // $ANTLR start "rule__Dependency_long__Group__1"
    // InternalDockerCompose.g:4850:1: rule__Dependency_long__Group__1 : rule__Dependency_long__Group__1__Impl rule__Dependency_long__Group__2 ;
    public final void rule__Dependency_long__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4854:1: ( rule__Dependency_long__Group__1__Impl rule__Dependency_long__Group__2 )
            // InternalDockerCompose.g:4855:2: rule__Dependency_long__Group__1__Impl rule__Dependency_long__Group__2
            {
            pushFollow(FOLLOW_8);
            rule__Dependency_long__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Dependency_long__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_long__Group__1"


    // $ANTLR start "rule__Dependency_long__Group__1__Impl"
    // InternalDockerCompose.g:4862:1: rule__Dependency_long__Group__1__Impl : ( ( rule__Dependency_long__ServiceAssignment_1 ) ) ;
    public final void rule__Dependency_long__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4866:1: ( ( ( rule__Dependency_long__ServiceAssignment_1 ) ) )
            // InternalDockerCompose.g:4867:1: ( ( rule__Dependency_long__ServiceAssignment_1 ) )
            {
            // InternalDockerCompose.g:4867:1: ( ( rule__Dependency_long__ServiceAssignment_1 ) )
            // InternalDockerCompose.g:4868:2: ( rule__Dependency_long__ServiceAssignment_1 )
            {
             before(grammarAccess.getDependency_longAccess().getServiceAssignment_1()); 
            // InternalDockerCompose.g:4869:2: ( rule__Dependency_long__ServiceAssignment_1 )
            // InternalDockerCompose.g:4869:3: rule__Dependency_long__ServiceAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Dependency_long__ServiceAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getDependency_longAccess().getServiceAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_long__Group__1__Impl"


    // $ANTLR start "rule__Dependency_long__Group__2"
    // InternalDockerCompose.g:4877:1: rule__Dependency_long__Group__2 : rule__Dependency_long__Group__2__Impl rule__Dependency_long__Group__3 ;
    public final void rule__Dependency_long__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4881:1: ( rule__Dependency_long__Group__2__Impl rule__Dependency_long__Group__3 )
            // InternalDockerCompose.g:4882:2: rule__Dependency_long__Group__2__Impl rule__Dependency_long__Group__3
            {
            pushFollow(FOLLOW_28);
            rule__Dependency_long__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Dependency_long__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_long__Group__2"


    // $ANTLR start "rule__Dependency_long__Group__2__Impl"
    // InternalDockerCompose.g:4889:1: rule__Dependency_long__Group__2__Impl : ( ':' ) ;
    public final void rule__Dependency_long__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4893:1: ( ( ':' ) )
            // InternalDockerCompose.g:4894:1: ( ':' )
            {
            // InternalDockerCompose.g:4894:1: ( ':' )
            // InternalDockerCompose.g:4895:2: ':'
            {
             before(grammarAccess.getDependency_longAccess().getColonKeyword_2()); 
            match(input,46,FOLLOW_2); 
             after(grammarAccess.getDependency_longAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_long__Group__2__Impl"


    // $ANTLR start "rule__Dependency_long__Group__3"
    // InternalDockerCompose.g:4904:1: rule__Dependency_long__Group__3 : rule__Dependency_long__Group__3__Impl rule__Dependency_long__Group__4 ;
    public final void rule__Dependency_long__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4908:1: ( rule__Dependency_long__Group__3__Impl rule__Dependency_long__Group__4 )
            // InternalDockerCompose.g:4909:2: rule__Dependency_long__Group__3__Impl rule__Dependency_long__Group__4
            {
            pushFollow(FOLLOW_29);
            rule__Dependency_long__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Dependency_long__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_long__Group__3"


    // $ANTLR start "rule__Dependency_long__Group__3__Impl"
    // InternalDockerCompose.g:4916:1: rule__Dependency_long__Group__3__Impl : ( 'condition:' ) ;
    public final void rule__Dependency_long__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4920:1: ( ( 'condition:' ) )
            // InternalDockerCompose.g:4921:1: ( 'condition:' )
            {
            // InternalDockerCompose.g:4921:1: ( 'condition:' )
            // InternalDockerCompose.g:4922:2: 'condition:'
            {
             before(grammarAccess.getDependency_longAccess().getConditionKeyword_3()); 
            match(input,65,FOLLOW_2); 
             after(grammarAccess.getDependency_longAccess().getConditionKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_long__Group__3__Impl"


    // $ANTLR start "rule__Dependency_long__Group__4"
    // InternalDockerCompose.g:4931:1: rule__Dependency_long__Group__4 : rule__Dependency_long__Group__4__Impl ;
    public final void rule__Dependency_long__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4935:1: ( rule__Dependency_long__Group__4__Impl )
            // InternalDockerCompose.g:4936:2: rule__Dependency_long__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Dependency_long__Group__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_long__Group__4"


    // $ANTLR start "rule__Dependency_long__Group__4__Impl"
    // InternalDockerCompose.g:4942:1: rule__Dependency_long__Group__4__Impl : ( ( rule__Dependency_long__ConditionAssignment_4 ) ) ;
    public final void rule__Dependency_long__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4946:1: ( ( ( rule__Dependency_long__ConditionAssignment_4 ) ) )
            // InternalDockerCompose.g:4947:1: ( ( rule__Dependency_long__ConditionAssignment_4 ) )
            {
            // InternalDockerCompose.g:4947:1: ( ( rule__Dependency_long__ConditionAssignment_4 ) )
            // InternalDockerCompose.g:4948:2: ( rule__Dependency_long__ConditionAssignment_4 )
            {
             before(grammarAccess.getDependency_longAccess().getConditionAssignment_4()); 
            // InternalDockerCompose.g:4949:2: ( rule__Dependency_long__ConditionAssignment_4 )
            // InternalDockerCompose.g:4949:3: rule__Dependency_long__ConditionAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__Dependency_long__ConditionAssignment_4();

            state._fsp--;


            }

             after(grammarAccess.getDependency_longAccess().getConditionAssignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_long__Group__4__Impl"


    // $ANTLR start "rule__NetworkConnector__Group__0"
    // InternalDockerCompose.g:4958:1: rule__NetworkConnector__Group__0 : rule__NetworkConnector__Group__0__Impl rule__NetworkConnector__Group__1 ;
    public final void rule__NetworkConnector__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4962:1: ( rule__NetworkConnector__Group__0__Impl rule__NetworkConnector__Group__1 )
            // InternalDockerCompose.g:4963:2: rule__NetworkConnector__Group__0__Impl rule__NetworkConnector__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__NetworkConnector__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group__0"


    // $ANTLR start "rule__NetworkConnector__Group__0__Impl"
    // InternalDockerCompose.g:4970:1: rule__NetworkConnector__Group__0__Impl : ( () ) ;
    public final void rule__NetworkConnector__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4974:1: ( ( () ) )
            // InternalDockerCompose.g:4975:1: ( () )
            {
            // InternalDockerCompose.g:4975:1: ( () )
            // InternalDockerCompose.g:4976:2: ()
            {
             before(grammarAccess.getNetworkConnectorAccess().getNetworkConnectorAction_0()); 
            // InternalDockerCompose.g:4977:2: ()
            // InternalDockerCompose.g:4977:3: 
            {
            }

             after(grammarAccess.getNetworkConnectorAccess().getNetworkConnectorAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group__0__Impl"


    // $ANTLR start "rule__NetworkConnector__Group__1"
    // InternalDockerCompose.g:4985:1: rule__NetworkConnector__Group__1 : rule__NetworkConnector__Group__1__Impl ;
    public final void rule__NetworkConnector__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4989:1: ( rule__NetworkConnector__Group__1__Impl )
            // InternalDockerCompose.g:4990:2: rule__NetworkConnector__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group__1"


    // $ANTLR start "rule__NetworkConnector__Group__1__Impl"
    // InternalDockerCompose.g:4996:1: rule__NetworkConnector__Group__1__Impl : ( ( rule__NetworkConnector__Alternatives_1 ) ) ;
    public final void rule__NetworkConnector__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5000:1: ( ( ( rule__NetworkConnector__Alternatives_1 ) ) )
            // InternalDockerCompose.g:5001:1: ( ( rule__NetworkConnector__Alternatives_1 ) )
            {
            // InternalDockerCompose.g:5001:1: ( ( rule__NetworkConnector__Alternatives_1 ) )
            // InternalDockerCompose.g:5002:2: ( rule__NetworkConnector__Alternatives_1 )
            {
             before(grammarAccess.getNetworkConnectorAccess().getAlternatives_1()); 
            // InternalDockerCompose.g:5003:2: ( rule__NetworkConnector__Alternatives_1 )
            // InternalDockerCompose.g:5003:3: rule__NetworkConnector__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Alternatives_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group__1__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_0__0"
    // InternalDockerCompose.g:5012:1: rule__NetworkConnector__Group_1_0__0 : rule__NetworkConnector__Group_1_0__0__Impl rule__NetworkConnector__Group_1_0__1 ;
    public final void rule__NetworkConnector__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5016:1: ( rule__NetworkConnector__Group_1_0__0__Impl rule__NetworkConnector__Group_1_0__1 )
            // InternalDockerCompose.g:5017:2: rule__NetworkConnector__Group_1_0__0__Impl rule__NetworkConnector__Group_1_0__1
            {
            pushFollow(FOLLOW_7);
            rule__NetworkConnector__Group_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_0__0"


    // $ANTLR start "rule__NetworkConnector__Group_1_0__0__Impl"
    // InternalDockerCompose.g:5024:1: rule__NetworkConnector__Group_1_0__0__Impl : ( '-' ) ;
    public final void rule__NetworkConnector__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5028:1: ( ( '-' ) )
            // InternalDockerCompose.g:5029:1: ( '-' )
            {
            // InternalDockerCompose.g:5029:1: ( '-' )
            // InternalDockerCompose.g:5030:2: '-'
            {
             before(grammarAccess.getNetworkConnectorAccess().getHyphenMinusKeyword_1_0_0()); 
            match(input,56,FOLLOW_2); 
             after(grammarAccess.getNetworkConnectorAccess().getHyphenMinusKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_0__0__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_0__1"
    // InternalDockerCompose.g:5039:1: rule__NetworkConnector__Group_1_0__1 : rule__NetworkConnector__Group_1_0__1__Impl ;
    public final void rule__NetworkConnector__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5043:1: ( rule__NetworkConnector__Group_1_0__1__Impl )
            // InternalDockerCompose.g:5044:2: rule__NetworkConnector__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_0__1"


    // $ANTLR start "rule__NetworkConnector__Group_1_0__1__Impl"
    // InternalDockerCompose.g:5050:1: rule__NetworkConnector__Group_1_0__1__Impl : ( ( rule__NetworkConnector__NetworkAssignment_1_0_1 ) ) ;
    public final void rule__NetworkConnector__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5054:1: ( ( ( rule__NetworkConnector__NetworkAssignment_1_0_1 ) ) )
            // InternalDockerCompose.g:5055:1: ( ( rule__NetworkConnector__NetworkAssignment_1_0_1 ) )
            {
            // InternalDockerCompose.g:5055:1: ( ( rule__NetworkConnector__NetworkAssignment_1_0_1 ) )
            // InternalDockerCompose.g:5056:2: ( rule__NetworkConnector__NetworkAssignment_1_0_1 )
            {
             before(grammarAccess.getNetworkConnectorAccess().getNetworkAssignment_1_0_1()); 
            // InternalDockerCompose.g:5057:2: ( rule__NetworkConnector__NetworkAssignment_1_0_1 )
            // InternalDockerCompose.g:5057:3: rule__NetworkConnector__NetworkAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__NetworkAssignment_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getNetworkAssignment_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_0__1__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_1__0"
    // InternalDockerCompose.g:5066:1: rule__NetworkConnector__Group_1_1__0 : rule__NetworkConnector__Group_1_1__0__Impl rule__NetworkConnector__Group_1_1__1 ;
    public final void rule__NetworkConnector__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5070:1: ( rule__NetworkConnector__Group_1_1__0__Impl rule__NetworkConnector__Group_1_1__1 )
            // InternalDockerCompose.g:5071:2: rule__NetworkConnector__Group_1_1__0__Impl rule__NetworkConnector__Group_1_1__1
            {
            pushFollow(FOLLOW_8);
            rule__NetworkConnector__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1__0"


    // $ANTLR start "rule__NetworkConnector__Group_1_1__0__Impl"
    // InternalDockerCompose.g:5078:1: rule__NetworkConnector__Group_1_1__0__Impl : ( ( rule__NetworkConnector__NetworkAssignment_1_1_0 ) ) ;
    public final void rule__NetworkConnector__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5082:1: ( ( ( rule__NetworkConnector__NetworkAssignment_1_1_0 ) ) )
            // InternalDockerCompose.g:5083:1: ( ( rule__NetworkConnector__NetworkAssignment_1_1_0 ) )
            {
            // InternalDockerCompose.g:5083:1: ( ( rule__NetworkConnector__NetworkAssignment_1_1_0 ) )
            // InternalDockerCompose.g:5084:2: ( rule__NetworkConnector__NetworkAssignment_1_1_0 )
            {
             before(grammarAccess.getNetworkConnectorAccess().getNetworkAssignment_1_1_0()); 
            // InternalDockerCompose.g:5085:2: ( rule__NetworkConnector__NetworkAssignment_1_1_0 )
            // InternalDockerCompose.g:5085:3: rule__NetworkConnector__NetworkAssignment_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__NetworkAssignment_1_1_0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getNetworkAssignment_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1__0__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_1__1"
    // InternalDockerCompose.g:5093:1: rule__NetworkConnector__Group_1_1__1 : rule__NetworkConnector__Group_1_1__1__Impl rule__NetworkConnector__Group_1_1__2 ;
    public final void rule__NetworkConnector__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5097:1: ( rule__NetworkConnector__Group_1_1__1__Impl rule__NetworkConnector__Group_1_1__2 )
            // InternalDockerCompose.g:5098:2: rule__NetworkConnector__Group_1_1__1__Impl rule__NetworkConnector__Group_1_1__2
            {
            pushFollow(FOLLOW_30);
            rule__NetworkConnector__Group_1_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1__1"


    // $ANTLR start "rule__NetworkConnector__Group_1_1__1__Impl"
    // InternalDockerCompose.g:5105:1: rule__NetworkConnector__Group_1_1__1__Impl : ( ':' ) ;
    public final void rule__NetworkConnector__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5109:1: ( ( ':' ) )
            // InternalDockerCompose.g:5110:1: ( ':' )
            {
            // InternalDockerCompose.g:5110:1: ( ':' )
            // InternalDockerCompose.g:5111:2: ':'
            {
             before(grammarAccess.getNetworkConnectorAccess().getColonKeyword_1_1_1()); 
            match(input,46,FOLLOW_2); 
             after(grammarAccess.getNetworkConnectorAccess().getColonKeyword_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1__1__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_1__2"
    // InternalDockerCompose.g:5120:1: rule__NetworkConnector__Group_1_1__2 : rule__NetworkConnector__Group_1_1__2__Impl ;
    public final void rule__NetworkConnector__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5124:1: ( rule__NetworkConnector__Group_1_1__2__Impl )
            // InternalDockerCompose.g:5125:2: rule__NetworkConnector__Group_1_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1__2"


    // $ANTLR start "rule__NetworkConnector__Group_1_1__2__Impl"
    // InternalDockerCompose.g:5131:1: rule__NetworkConnector__Group_1_1__2__Impl : ( ( rule__NetworkConnector__UnorderedGroup_1_1_2 ) ) ;
    public final void rule__NetworkConnector__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5135:1: ( ( ( rule__NetworkConnector__UnorderedGroup_1_1_2 ) ) )
            // InternalDockerCompose.g:5136:1: ( ( rule__NetworkConnector__UnorderedGroup_1_1_2 ) )
            {
            // InternalDockerCompose.g:5136:1: ( ( rule__NetworkConnector__UnorderedGroup_1_1_2 ) )
            // InternalDockerCompose.g:5137:2: ( rule__NetworkConnector__UnorderedGroup_1_1_2 )
            {
             before(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2()); 
            // InternalDockerCompose.g:5138:2: ( rule__NetworkConnector__UnorderedGroup_1_1_2 )
            // InternalDockerCompose.g:5138:3: rule__NetworkConnector__UnorderedGroup_1_1_2
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__UnorderedGroup_1_1_2();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1__2__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_0__0"
    // InternalDockerCompose.g:5147:1: rule__NetworkConnector__Group_1_1_2_0__0 : rule__NetworkConnector__Group_1_1_2_0__0__Impl rule__NetworkConnector__Group_1_1_2_0__1 ;
    public final void rule__NetworkConnector__Group_1_1_2_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5151:1: ( rule__NetworkConnector__Group_1_1_2_0__0__Impl rule__NetworkConnector__Group_1_1_2_0__1 )
            // InternalDockerCompose.g:5152:2: rule__NetworkConnector__Group_1_1_2_0__0__Impl rule__NetworkConnector__Group_1_1_2_0__1
            {
            pushFollow(FOLLOW_22);
            rule__NetworkConnector__Group_1_1_2_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_1_2_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_0__0"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_0__0__Impl"
    // InternalDockerCompose.g:5159:1: rule__NetworkConnector__Group_1_1_2_0__0__Impl : ( 'ipv4_address:' ) ;
    public final void rule__NetworkConnector__Group_1_1_2_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5163:1: ( ( 'ipv4_address:' ) )
            // InternalDockerCompose.g:5164:1: ( 'ipv4_address:' )
            {
            // InternalDockerCompose.g:5164:1: ( 'ipv4_address:' )
            // InternalDockerCompose.g:5165:2: 'ipv4_address:'
            {
             before(grammarAccess.getNetworkConnectorAccess().getIpv4_addressKeyword_1_1_2_0_0()); 
            match(input,66,FOLLOW_2); 
             after(grammarAccess.getNetworkConnectorAccess().getIpv4_addressKeyword_1_1_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_0__0__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_0__1"
    // InternalDockerCompose.g:5174:1: rule__NetworkConnector__Group_1_1_2_0__1 : rule__NetworkConnector__Group_1_1_2_0__1__Impl ;
    public final void rule__NetworkConnector__Group_1_1_2_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5178:1: ( rule__NetworkConnector__Group_1_1_2_0__1__Impl )
            // InternalDockerCompose.g:5179:2: rule__NetworkConnector__Group_1_1_2_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_1_2_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_0__1"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_0__1__Impl"
    // InternalDockerCompose.g:5185:1: rule__NetworkConnector__Group_1_1_2_0__1__Impl : ( ( rule__NetworkConnector__Ipv4_addressAssignment_1_1_2_0_1 ) ) ;
    public final void rule__NetworkConnector__Group_1_1_2_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5189:1: ( ( ( rule__NetworkConnector__Ipv4_addressAssignment_1_1_2_0_1 ) ) )
            // InternalDockerCompose.g:5190:1: ( ( rule__NetworkConnector__Ipv4_addressAssignment_1_1_2_0_1 ) )
            {
            // InternalDockerCompose.g:5190:1: ( ( rule__NetworkConnector__Ipv4_addressAssignment_1_1_2_0_1 ) )
            // InternalDockerCompose.g:5191:2: ( rule__NetworkConnector__Ipv4_addressAssignment_1_1_2_0_1 )
            {
             before(grammarAccess.getNetworkConnectorAccess().getIpv4_addressAssignment_1_1_2_0_1()); 
            // InternalDockerCompose.g:5192:2: ( rule__NetworkConnector__Ipv4_addressAssignment_1_1_2_0_1 )
            // InternalDockerCompose.g:5192:3: rule__NetworkConnector__Ipv4_addressAssignment_1_1_2_0_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Ipv4_addressAssignment_1_1_2_0_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getIpv4_addressAssignment_1_1_2_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_0__1__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_1__0"
    // InternalDockerCompose.g:5201:1: rule__NetworkConnector__Group_1_1_2_1__0 : rule__NetworkConnector__Group_1_1_2_1__0__Impl rule__NetworkConnector__Group_1_1_2_1__1 ;
    public final void rule__NetworkConnector__Group_1_1_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5205:1: ( rule__NetworkConnector__Group_1_1_2_1__0__Impl rule__NetworkConnector__Group_1_1_2_1__1 )
            // InternalDockerCompose.g:5206:2: rule__NetworkConnector__Group_1_1_2_1__0__Impl rule__NetworkConnector__Group_1_1_2_1__1
            {
            pushFollow(FOLLOW_12);
            rule__NetworkConnector__Group_1_1_2_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_1_2_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_1__0"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_1__0__Impl"
    // InternalDockerCompose.g:5213:1: rule__NetworkConnector__Group_1_1_2_1__0__Impl : ( 'priority:' ) ;
    public final void rule__NetworkConnector__Group_1_1_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5217:1: ( ( 'priority:' ) )
            // InternalDockerCompose.g:5218:1: ( 'priority:' )
            {
            // InternalDockerCompose.g:5218:1: ( 'priority:' )
            // InternalDockerCompose.g:5219:2: 'priority:'
            {
             before(grammarAccess.getNetworkConnectorAccess().getPriorityKeyword_1_1_2_1_0()); 
            match(input,67,FOLLOW_2); 
             after(grammarAccess.getNetworkConnectorAccess().getPriorityKeyword_1_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_1__0__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_1__1"
    // InternalDockerCompose.g:5228:1: rule__NetworkConnector__Group_1_1_2_1__1 : rule__NetworkConnector__Group_1_1_2_1__1__Impl ;
    public final void rule__NetworkConnector__Group_1_1_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5232:1: ( rule__NetworkConnector__Group_1_1_2_1__1__Impl )
            // InternalDockerCompose.g:5233:2: rule__NetworkConnector__Group_1_1_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_1_2_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_1__1"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_1__1__Impl"
    // InternalDockerCompose.g:5239:1: rule__NetworkConnector__Group_1_1_2_1__1__Impl : ( ( rule__NetworkConnector__PriorityAssignment_1_1_2_1_1 ) ) ;
    public final void rule__NetworkConnector__Group_1_1_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5243:1: ( ( ( rule__NetworkConnector__PriorityAssignment_1_1_2_1_1 ) ) )
            // InternalDockerCompose.g:5244:1: ( ( rule__NetworkConnector__PriorityAssignment_1_1_2_1_1 ) )
            {
            // InternalDockerCompose.g:5244:1: ( ( rule__NetworkConnector__PriorityAssignment_1_1_2_1_1 ) )
            // InternalDockerCompose.g:5245:2: ( rule__NetworkConnector__PriorityAssignment_1_1_2_1_1 )
            {
             before(grammarAccess.getNetworkConnectorAccess().getPriorityAssignment_1_1_2_1_1()); 
            // InternalDockerCompose.g:5246:2: ( rule__NetworkConnector__PriorityAssignment_1_1_2_1_1 )
            // InternalDockerCompose.g:5246:3: rule__NetworkConnector__PriorityAssignment_1_1_2_1_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__PriorityAssignment_1_1_2_1_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getPriorityAssignment_1_1_2_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_1__1__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_2__0"
    // InternalDockerCompose.g:5255:1: rule__NetworkConnector__Group_1_1_2_2__0 : rule__NetworkConnector__Group_1_1_2_2__0__Impl rule__NetworkConnector__Group_1_1_2_2__1 ;
    public final void rule__NetworkConnector__Group_1_1_2_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5259:1: ( rule__NetworkConnector__Group_1_1_2_2__0__Impl rule__NetworkConnector__Group_1_1_2_2__1 )
            // InternalDockerCompose.g:5260:2: rule__NetworkConnector__Group_1_1_2_2__0__Impl rule__NetworkConnector__Group_1_1_2_2__1
            {
            pushFollow(FOLLOW_15);
            rule__NetworkConnector__Group_1_1_2_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_1_2_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_2__0"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_2__0__Impl"
    // InternalDockerCompose.g:5267:1: rule__NetworkConnector__Group_1_1_2_2__0__Impl : ( 'aliases:' ) ;
    public final void rule__NetworkConnector__Group_1_1_2_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5271:1: ( ( 'aliases:' ) )
            // InternalDockerCompose.g:5272:1: ( 'aliases:' )
            {
            // InternalDockerCompose.g:5272:1: ( 'aliases:' )
            // InternalDockerCompose.g:5273:2: 'aliases:'
            {
             before(grammarAccess.getNetworkConnectorAccess().getAliasesKeyword_1_1_2_2_0()); 
            match(input,68,FOLLOW_2); 
             after(grammarAccess.getNetworkConnectorAccess().getAliasesKeyword_1_1_2_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_2__0__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_2__1"
    // InternalDockerCompose.g:5282:1: rule__NetworkConnector__Group_1_1_2_2__1 : rule__NetworkConnector__Group_1_1_2_2__1__Impl ;
    public final void rule__NetworkConnector__Group_1_1_2_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5286:1: ( rule__NetworkConnector__Group_1_1_2_2__1__Impl )
            // InternalDockerCompose.g:5287:2: rule__NetworkConnector__Group_1_1_2_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_1_2_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_2__1"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_2__1__Impl"
    // InternalDockerCompose.g:5293:1: rule__NetworkConnector__Group_1_1_2_2__1__Impl : ( ( ( rule__NetworkConnector__Group_1_1_2_2_1__0 ) ) ( ( rule__NetworkConnector__Group_1_1_2_2_1__0 )* ) ) ;
    public final void rule__NetworkConnector__Group_1_1_2_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5297:1: ( ( ( ( rule__NetworkConnector__Group_1_1_2_2_1__0 ) ) ( ( rule__NetworkConnector__Group_1_1_2_2_1__0 )* ) ) )
            // InternalDockerCompose.g:5298:1: ( ( ( rule__NetworkConnector__Group_1_1_2_2_1__0 ) ) ( ( rule__NetworkConnector__Group_1_1_2_2_1__0 )* ) )
            {
            // InternalDockerCompose.g:5298:1: ( ( ( rule__NetworkConnector__Group_1_1_2_2_1__0 ) ) ( ( rule__NetworkConnector__Group_1_1_2_2_1__0 )* ) )
            // InternalDockerCompose.g:5299:2: ( ( rule__NetworkConnector__Group_1_1_2_2_1__0 ) ) ( ( rule__NetworkConnector__Group_1_1_2_2_1__0 )* )
            {
            // InternalDockerCompose.g:5299:2: ( ( rule__NetworkConnector__Group_1_1_2_2_1__0 ) )
            // InternalDockerCompose.g:5300:3: ( rule__NetworkConnector__Group_1_1_2_2_1__0 )
            {
             before(grammarAccess.getNetworkConnectorAccess().getGroup_1_1_2_2_1()); 
            // InternalDockerCompose.g:5301:3: ( rule__NetworkConnector__Group_1_1_2_2_1__0 )
            // InternalDockerCompose.g:5301:4: rule__NetworkConnector__Group_1_1_2_2_1__0
            {
            pushFollow(FOLLOW_3);
            rule__NetworkConnector__Group_1_1_2_2_1__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getGroup_1_1_2_2_1()); 

            }

            // InternalDockerCompose.g:5304:2: ( ( rule__NetworkConnector__Group_1_1_2_2_1__0 )* )
            // InternalDockerCompose.g:5305:3: ( rule__NetworkConnector__Group_1_1_2_2_1__0 )*
            {
             before(grammarAccess.getNetworkConnectorAccess().getGroup_1_1_2_2_1()); 
            // InternalDockerCompose.g:5306:3: ( rule__NetworkConnector__Group_1_1_2_2_1__0 )*
            loop52:
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( (LA52_0==56) ) {
                    int LA52_2 = input.LA(2);

                    if ( (LA52_2==RULE_STRING) ) {
                        alt52=1;
                    }
                    else if ( (LA52_2==RULE_ID) ) {
                        alt52=1;
                    }


                }


                switch (alt52) {
            	case 1 :
            	    // InternalDockerCompose.g:5306:4: rule__NetworkConnector__Group_1_1_2_2_1__0
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__NetworkConnector__Group_1_1_2_2_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);

             after(grammarAccess.getNetworkConnectorAccess().getGroup_1_1_2_2_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_2__1__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_2_1__0"
    // InternalDockerCompose.g:5316:1: rule__NetworkConnector__Group_1_1_2_2_1__0 : rule__NetworkConnector__Group_1_1_2_2_1__0__Impl rule__NetworkConnector__Group_1_1_2_2_1__1 ;
    public final void rule__NetworkConnector__Group_1_1_2_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5320:1: ( rule__NetworkConnector__Group_1_1_2_2_1__0__Impl rule__NetworkConnector__Group_1_1_2_2_1__1 )
            // InternalDockerCompose.g:5321:2: rule__NetworkConnector__Group_1_1_2_2_1__0__Impl rule__NetworkConnector__Group_1_1_2_2_1__1
            {
            pushFollow(FOLLOW_7);
            rule__NetworkConnector__Group_1_1_2_2_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_1_2_2_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_2_1__0"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_2_1__0__Impl"
    // InternalDockerCompose.g:5328:1: rule__NetworkConnector__Group_1_1_2_2_1__0__Impl : ( '-' ) ;
    public final void rule__NetworkConnector__Group_1_1_2_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5332:1: ( ( '-' ) )
            // InternalDockerCompose.g:5333:1: ( '-' )
            {
            // InternalDockerCompose.g:5333:1: ( '-' )
            // InternalDockerCompose.g:5334:2: '-'
            {
             before(grammarAccess.getNetworkConnectorAccess().getHyphenMinusKeyword_1_1_2_2_1_0()); 
            match(input,56,FOLLOW_2); 
             after(grammarAccess.getNetworkConnectorAccess().getHyphenMinusKeyword_1_1_2_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_2_1__0__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_2_1__1"
    // InternalDockerCompose.g:5343:1: rule__NetworkConnector__Group_1_1_2_2_1__1 : rule__NetworkConnector__Group_1_1_2_2_1__1__Impl ;
    public final void rule__NetworkConnector__Group_1_1_2_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5347:1: ( rule__NetworkConnector__Group_1_1_2_2_1__1__Impl )
            // InternalDockerCompose.g:5348:2: rule__NetworkConnector__Group_1_1_2_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_1_2_2_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_2_1__1"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_2_1__1__Impl"
    // InternalDockerCompose.g:5354:1: rule__NetworkConnector__Group_1_1_2_2_1__1__Impl : ( ( rule__NetworkConnector__AliasesAssignment_1_1_2_2_1_1 ) ) ;
    public final void rule__NetworkConnector__Group_1_1_2_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5358:1: ( ( ( rule__NetworkConnector__AliasesAssignment_1_1_2_2_1_1 ) ) )
            // InternalDockerCompose.g:5359:1: ( ( rule__NetworkConnector__AliasesAssignment_1_1_2_2_1_1 ) )
            {
            // InternalDockerCompose.g:5359:1: ( ( rule__NetworkConnector__AliasesAssignment_1_1_2_2_1_1 ) )
            // InternalDockerCompose.g:5360:2: ( rule__NetworkConnector__AliasesAssignment_1_1_2_2_1_1 )
            {
             before(grammarAccess.getNetworkConnectorAccess().getAliasesAssignment_1_1_2_2_1_1()); 
            // InternalDockerCompose.g:5361:2: ( rule__NetworkConnector__AliasesAssignment_1_1_2_2_1_1 )
            // InternalDockerCompose.g:5361:3: rule__NetworkConnector__AliasesAssignment_1_1_2_2_1_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__AliasesAssignment_1_1_2_2_1_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getAliasesAssignment_1_1_2_2_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_2_1__1__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_3__0"
    // InternalDockerCompose.g:5370:1: rule__NetworkConnector__Group_1_1_2_3__0 : rule__NetworkConnector__Group_1_1_2_3__0__Impl rule__NetworkConnector__Group_1_1_2_3__1 ;
    public final void rule__NetworkConnector__Group_1_1_2_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5374:1: ( rule__NetworkConnector__Group_1_1_2_3__0__Impl rule__NetworkConnector__Group_1_1_2_3__1 )
            // InternalDockerCompose.g:5375:2: rule__NetworkConnector__Group_1_1_2_3__0__Impl rule__NetworkConnector__Group_1_1_2_3__1
            {
            pushFollow(FOLLOW_15);
            rule__NetworkConnector__Group_1_1_2_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_1_2_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_3__0"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_3__0__Impl"
    // InternalDockerCompose.g:5382:1: rule__NetworkConnector__Group_1_1_2_3__0__Impl : ( 'link_local_ips:' ) ;
    public final void rule__NetworkConnector__Group_1_1_2_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5386:1: ( ( 'link_local_ips:' ) )
            // InternalDockerCompose.g:5387:1: ( 'link_local_ips:' )
            {
            // InternalDockerCompose.g:5387:1: ( 'link_local_ips:' )
            // InternalDockerCompose.g:5388:2: 'link_local_ips:'
            {
             before(grammarAccess.getNetworkConnectorAccess().getLink_local_ipsKeyword_1_1_2_3_0()); 
            match(input,69,FOLLOW_2); 
             after(grammarAccess.getNetworkConnectorAccess().getLink_local_ipsKeyword_1_1_2_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_3__0__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_3__1"
    // InternalDockerCompose.g:5397:1: rule__NetworkConnector__Group_1_1_2_3__1 : rule__NetworkConnector__Group_1_1_2_3__1__Impl ;
    public final void rule__NetworkConnector__Group_1_1_2_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5401:1: ( rule__NetworkConnector__Group_1_1_2_3__1__Impl )
            // InternalDockerCompose.g:5402:2: rule__NetworkConnector__Group_1_1_2_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_1_2_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_3__1"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_3__1__Impl"
    // InternalDockerCompose.g:5408:1: rule__NetworkConnector__Group_1_1_2_3__1__Impl : ( ( ( rule__NetworkConnector__Group_1_1_2_3_1__0 ) ) ( ( rule__NetworkConnector__Group_1_1_2_3_1__0 )* ) ) ;
    public final void rule__NetworkConnector__Group_1_1_2_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5412:1: ( ( ( ( rule__NetworkConnector__Group_1_1_2_3_1__0 ) ) ( ( rule__NetworkConnector__Group_1_1_2_3_1__0 )* ) ) )
            // InternalDockerCompose.g:5413:1: ( ( ( rule__NetworkConnector__Group_1_1_2_3_1__0 ) ) ( ( rule__NetworkConnector__Group_1_1_2_3_1__0 )* ) )
            {
            // InternalDockerCompose.g:5413:1: ( ( ( rule__NetworkConnector__Group_1_1_2_3_1__0 ) ) ( ( rule__NetworkConnector__Group_1_1_2_3_1__0 )* ) )
            // InternalDockerCompose.g:5414:2: ( ( rule__NetworkConnector__Group_1_1_2_3_1__0 ) ) ( ( rule__NetworkConnector__Group_1_1_2_3_1__0 )* )
            {
            // InternalDockerCompose.g:5414:2: ( ( rule__NetworkConnector__Group_1_1_2_3_1__0 ) )
            // InternalDockerCompose.g:5415:3: ( rule__NetworkConnector__Group_1_1_2_3_1__0 )
            {
             before(grammarAccess.getNetworkConnectorAccess().getGroup_1_1_2_3_1()); 
            // InternalDockerCompose.g:5416:3: ( rule__NetworkConnector__Group_1_1_2_3_1__0 )
            // InternalDockerCompose.g:5416:4: rule__NetworkConnector__Group_1_1_2_3_1__0
            {
            pushFollow(FOLLOW_3);
            rule__NetworkConnector__Group_1_1_2_3_1__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getGroup_1_1_2_3_1()); 

            }

            // InternalDockerCompose.g:5419:2: ( ( rule__NetworkConnector__Group_1_1_2_3_1__0 )* )
            // InternalDockerCompose.g:5420:3: ( rule__NetworkConnector__Group_1_1_2_3_1__0 )*
            {
             before(grammarAccess.getNetworkConnectorAccess().getGroup_1_1_2_3_1()); 
            // InternalDockerCompose.g:5421:3: ( rule__NetworkConnector__Group_1_1_2_3_1__0 )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==56) ) {
                    int LA53_2 = input.LA(2);

                    if ( (LA53_2==RULE_INT) ) {
                        alt53=1;
                    }


                }


                switch (alt53) {
            	case 1 :
            	    // InternalDockerCompose.g:5421:4: rule__NetworkConnector__Group_1_1_2_3_1__0
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__NetworkConnector__Group_1_1_2_3_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

             after(grammarAccess.getNetworkConnectorAccess().getGroup_1_1_2_3_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_3__1__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_3_1__0"
    // InternalDockerCompose.g:5431:1: rule__NetworkConnector__Group_1_1_2_3_1__0 : rule__NetworkConnector__Group_1_1_2_3_1__0__Impl rule__NetworkConnector__Group_1_1_2_3_1__1 ;
    public final void rule__NetworkConnector__Group_1_1_2_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5435:1: ( rule__NetworkConnector__Group_1_1_2_3_1__0__Impl rule__NetworkConnector__Group_1_1_2_3_1__1 )
            // InternalDockerCompose.g:5436:2: rule__NetworkConnector__Group_1_1_2_3_1__0__Impl rule__NetworkConnector__Group_1_1_2_3_1__1
            {
            pushFollow(FOLLOW_22);
            rule__NetworkConnector__Group_1_1_2_3_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_1_2_3_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_3_1__0"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_3_1__0__Impl"
    // InternalDockerCompose.g:5443:1: rule__NetworkConnector__Group_1_1_2_3_1__0__Impl : ( '-' ) ;
    public final void rule__NetworkConnector__Group_1_1_2_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5447:1: ( ( '-' ) )
            // InternalDockerCompose.g:5448:1: ( '-' )
            {
            // InternalDockerCompose.g:5448:1: ( '-' )
            // InternalDockerCompose.g:5449:2: '-'
            {
             before(grammarAccess.getNetworkConnectorAccess().getHyphenMinusKeyword_1_1_2_3_1_0()); 
            match(input,56,FOLLOW_2); 
             after(grammarAccess.getNetworkConnectorAccess().getHyphenMinusKeyword_1_1_2_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_3_1__0__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_3_1__1"
    // InternalDockerCompose.g:5458:1: rule__NetworkConnector__Group_1_1_2_3_1__1 : rule__NetworkConnector__Group_1_1_2_3_1__1__Impl ;
    public final void rule__NetworkConnector__Group_1_1_2_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5462:1: ( rule__NetworkConnector__Group_1_1_2_3_1__1__Impl )
            // InternalDockerCompose.g:5463:2: rule__NetworkConnector__Group_1_1_2_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_1_2_3_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_3_1__1"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_3_1__1__Impl"
    // InternalDockerCompose.g:5469:1: rule__NetworkConnector__Group_1_1_2_3_1__1__Impl : ( ( rule__NetworkConnector__Link_local_ipsAssignment_1_1_2_3_1_1 ) ) ;
    public final void rule__NetworkConnector__Group_1_1_2_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5473:1: ( ( ( rule__NetworkConnector__Link_local_ipsAssignment_1_1_2_3_1_1 ) ) )
            // InternalDockerCompose.g:5474:1: ( ( rule__NetworkConnector__Link_local_ipsAssignment_1_1_2_3_1_1 ) )
            {
            // InternalDockerCompose.g:5474:1: ( ( rule__NetworkConnector__Link_local_ipsAssignment_1_1_2_3_1_1 ) )
            // InternalDockerCompose.g:5475:2: ( rule__NetworkConnector__Link_local_ipsAssignment_1_1_2_3_1_1 )
            {
             before(grammarAccess.getNetworkConnectorAccess().getLink_local_ipsAssignment_1_1_2_3_1_1()); 
            // InternalDockerCompose.g:5476:2: ( rule__NetworkConnector__Link_local_ipsAssignment_1_1_2_3_1_1 )
            // InternalDockerCompose.g:5476:3: rule__NetworkConnector__Link_local_ipsAssignment_1_1_2_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Link_local_ipsAssignment_1_1_2_3_1_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getLink_local_ipsAssignment_1_1_2_3_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_3_1__1__Impl"


    // $ANTLR start "rule__Alias__Group__0"
    // InternalDockerCompose.g:5485:1: rule__Alias__Group__0 : rule__Alias__Group__0__Impl rule__Alias__Group__1 ;
    public final void rule__Alias__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5489:1: ( rule__Alias__Group__0__Impl rule__Alias__Group__1 )
            // InternalDockerCompose.g:5490:2: rule__Alias__Group__0__Impl rule__Alias__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__Alias__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Alias__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Alias__Group__0"


    // $ANTLR start "rule__Alias__Group__0__Impl"
    // InternalDockerCompose.g:5497:1: rule__Alias__Group__0__Impl : ( () ) ;
    public final void rule__Alias__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5501:1: ( ( () ) )
            // InternalDockerCompose.g:5502:1: ( () )
            {
            // InternalDockerCompose.g:5502:1: ( () )
            // InternalDockerCompose.g:5503:2: ()
            {
             before(grammarAccess.getAliasAccess().getAliasAction_0()); 
            // InternalDockerCompose.g:5504:2: ()
            // InternalDockerCompose.g:5504:3: 
            {
            }

             after(grammarAccess.getAliasAccess().getAliasAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Alias__Group__0__Impl"


    // $ANTLR start "rule__Alias__Group__1"
    // InternalDockerCompose.g:5512:1: rule__Alias__Group__1 : rule__Alias__Group__1__Impl ;
    public final void rule__Alias__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5516:1: ( rule__Alias__Group__1__Impl )
            // InternalDockerCompose.g:5517:2: rule__Alias__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Alias__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Alias__Group__1"


    // $ANTLR start "rule__Alias__Group__1__Impl"
    // InternalDockerCompose.g:5523:1: rule__Alias__Group__1__Impl : ( ( rule__Alias__AliasAssignment_1 ) ) ;
    public final void rule__Alias__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5527:1: ( ( ( rule__Alias__AliasAssignment_1 ) ) )
            // InternalDockerCompose.g:5528:1: ( ( rule__Alias__AliasAssignment_1 ) )
            {
            // InternalDockerCompose.g:5528:1: ( ( rule__Alias__AliasAssignment_1 ) )
            // InternalDockerCompose.g:5529:2: ( rule__Alias__AliasAssignment_1 )
            {
             before(grammarAccess.getAliasAccess().getAliasAssignment_1()); 
            // InternalDockerCompose.g:5530:2: ( rule__Alias__AliasAssignment_1 )
            // InternalDockerCompose.g:5530:3: rule__Alias__AliasAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Alias__AliasAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getAliasAccess().getAliasAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Alias__Group__1__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group__0"
    // InternalDockerCompose.g:5539:1: rule__VolumeConnector_long__Group__0 : rule__VolumeConnector_long__Group__0__Impl rule__VolumeConnector_long__Group__1 ;
    public final void rule__VolumeConnector_long__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5543:1: ( rule__VolumeConnector_long__Group__0__Impl rule__VolumeConnector_long__Group__1 )
            // InternalDockerCompose.g:5544:2: rule__VolumeConnector_long__Group__0__Impl rule__VolumeConnector_long__Group__1
            {
            pushFollow(FOLLOW_18);
            rule__VolumeConnector_long__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group__0"


    // $ANTLR start "rule__VolumeConnector_long__Group__0__Impl"
    // InternalDockerCompose.g:5551:1: rule__VolumeConnector_long__Group__0__Impl : ( () ) ;
    public final void rule__VolumeConnector_long__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5555:1: ( ( () ) )
            // InternalDockerCompose.g:5556:1: ( () )
            {
            // InternalDockerCompose.g:5556:1: ( () )
            // InternalDockerCompose.g:5557:2: ()
            {
             before(grammarAccess.getVolumeConnector_longAccess().getVolumeConnectorAction_0()); 
            // InternalDockerCompose.g:5558:2: ()
            // InternalDockerCompose.g:5558:3: 
            {
            }

             after(grammarAccess.getVolumeConnector_longAccess().getVolumeConnectorAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group__0__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group__1"
    // InternalDockerCompose.g:5566:1: rule__VolumeConnector_long__Group__1 : rule__VolumeConnector_long__Group__1__Impl ;
    public final void rule__VolumeConnector_long__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5570:1: ( rule__VolumeConnector_long__Group__1__Impl )
            // InternalDockerCompose.g:5571:2: rule__VolumeConnector_long__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group__1"


    // $ANTLR start "rule__VolumeConnector_long__Group__1__Impl"
    // InternalDockerCompose.g:5577:1: rule__VolumeConnector_long__Group__1__Impl : ( ( rule__VolumeConnector_long__UnorderedGroup_1 ) ) ;
    public final void rule__VolumeConnector_long__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5581:1: ( ( ( rule__VolumeConnector_long__UnorderedGroup_1 ) ) )
            // InternalDockerCompose.g:5582:1: ( ( rule__VolumeConnector_long__UnorderedGroup_1 ) )
            {
            // InternalDockerCompose.g:5582:1: ( ( rule__VolumeConnector_long__UnorderedGroup_1 ) )
            // InternalDockerCompose.g:5583:2: ( rule__VolumeConnector_long__UnorderedGroup_1 )
            {
             before(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()); 
            // InternalDockerCompose.g:5584:2: ( rule__VolumeConnector_long__UnorderedGroup_1 )
            // InternalDockerCompose.g:5584:3: rule__VolumeConnector_long__UnorderedGroup_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__UnorderedGroup_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group__1__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_0__0"
    // InternalDockerCompose.g:5593:1: rule__VolumeConnector_long__Group_1_0__0 : rule__VolumeConnector_long__Group_1_0__0__Impl rule__VolumeConnector_long__Group_1_0__1 ;
    public final void rule__VolumeConnector_long__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5597:1: ( rule__VolumeConnector_long__Group_1_0__0__Impl rule__VolumeConnector_long__Group_1_0__1 )
            // InternalDockerCompose.g:5598:2: rule__VolumeConnector_long__Group_1_0__0__Impl rule__VolumeConnector_long__Group_1_0__1
            {
            pushFollow(FOLLOW_7);
            rule__VolumeConnector_long__Group_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_0__0"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_0__0__Impl"
    // InternalDockerCompose.g:5605:1: rule__VolumeConnector_long__Group_1_0__0__Impl : ( 'source:' ) ;
    public final void rule__VolumeConnector_long__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5609:1: ( ( 'source:' ) )
            // InternalDockerCompose.g:5610:1: ( 'source:' )
            {
            // InternalDockerCompose.g:5610:1: ( 'source:' )
            // InternalDockerCompose.g:5611:2: 'source:'
            {
             before(grammarAccess.getVolumeConnector_longAccess().getSourceKeyword_1_0_0()); 
            match(input,70,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_longAccess().getSourceKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_0__0__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_0__1"
    // InternalDockerCompose.g:5620:1: rule__VolumeConnector_long__Group_1_0__1 : rule__VolumeConnector_long__Group_1_0__1__Impl ;
    public final void rule__VolumeConnector_long__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5624:1: ( rule__VolumeConnector_long__Group_1_0__1__Impl )
            // InternalDockerCompose.g:5625:2: rule__VolumeConnector_long__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_0__1"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_0__1__Impl"
    // InternalDockerCompose.g:5631:1: rule__VolumeConnector_long__Group_1_0__1__Impl : ( ( rule__VolumeConnector_long__VolumeAssignment_1_0_1 ) ) ;
    public final void rule__VolumeConnector_long__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5635:1: ( ( ( rule__VolumeConnector_long__VolumeAssignment_1_0_1 ) ) )
            // InternalDockerCompose.g:5636:1: ( ( rule__VolumeConnector_long__VolumeAssignment_1_0_1 ) )
            {
            // InternalDockerCompose.g:5636:1: ( ( rule__VolumeConnector_long__VolumeAssignment_1_0_1 ) )
            // InternalDockerCompose.g:5637:2: ( rule__VolumeConnector_long__VolumeAssignment_1_0_1 )
            {
             before(grammarAccess.getVolumeConnector_longAccess().getVolumeAssignment_1_0_1()); 
            // InternalDockerCompose.g:5638:2: ( rule__VolumeConnector_long__VolumeAssignment_1_0_1 )
            // InternalDockerCompose.g:5638:3: rule__VolumeConnector_long__VolumeAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__VolumeAssignment_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_longAccess().getVolumeAssignment_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_0__1__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_1__0"
    // InternalDockerCompose.g:5647:1: rule__VolumeConnector_long__Group_1_1__0 : rule__VolumeConnector_long__Group_1_1__0__Impl rule__VolumeConnector_long__Group_1_1__1 ;
    public final void rule__VolumeConnector_long__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5651:1: ( rule__VolumeConnector_long__Group_1_1__0__Impl rule__VolumeConnector_long__Group_1_1__1 )
            // InternalDockerCompose.g:5652:2: rule__VolumeConnector_long__Group_1_1__0__Impl rule__VolumeConnector_long__Group_1_1__1
            {
            pushFollow(FOLLOW_31);
            rule__VolumeConnector_long__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_1__0"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_1__0__Impl"
    // InternalDockerCompose.g:5659:1: rule__VolumeConnector_long__Group_1_1__0__Impl : ( 'type:' ) ;
    public final void rule__VolumeConnector_long__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5663:1: ( ( 'type:' ) )
            // InternalDockerCompose.g:5664:1: ( 'type:' )
            {
            // InternalDockerCompose.g:5664:1: ( 'type:' )
            // InternalDockerCompose.g:5665:2: 'type:'
            {
             before(grammarAccess.getVolumeConnector_longAccess().getTypeKeyword_1_1_0()); 
            match(input,71,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_longAccess().getTypeKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_1__0__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_1__1"
    // InternalDockerCompose.g:5674:1: rule__VolumeConnector_long__Group_1_1__1 : rule__VolumeConnector_long__Group_1_1__1__Impl ;
    public final void rule__VolumeConnector_long__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5678:1: ( rule__VolumeConnector_long__Group_1_1__1__Impl )
            // InternalDockerCompose.g:5679:2: rule__VolumeConnector_long__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_1__1"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_1__1__Impl"
    // InternalDockerCompose.g:5685:1: rule__VolumeConnector_long__Group_1_1__1__Impl : ( ( rule__VolumeConnector_long__TypeAssignment_1_1_1 ) ) ;
    public final void rule__VolumeConnector_long__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5689:1: ( ( ( rule__VolumeConnector_long__TypeAssignment_1_1_1 ) ) )
            // InternalDockerCompose.g:5690:1: ( ( rule__VolumeConnector_long__TypeAssignment_1_1_1 ) )
            {
            // InternalDockerCompose.g:5690:1: ( ( rule__VolumeConnector_long__TypeAssignment_1_1_1 ) )
            // InternalDockerCompose.g:5691:2: ( rule__VolumeConnector_long__TypeAssignment_1_1_1 )
            {
             before(grammarAccess.getVolumeConnector_longAccess().getTypeAssignment_1_1_1()); 
            // InternalDockerCompose.g:5692:2: ( rule__VolumeConnector_long__TypeAssignment_1_1_1 )
            // InternalDockerCompose.g:5692:3: rule__VolumeConnector_long__TypeAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__TypeAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_longAccess().getTypeAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_1__1__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_2__0"
    // InternalDockerCompose.g:5701:1: rule__VolumeConnector_long__Group_1_2__0 : rule__VolumeConnector_long__Group_1_2__0__Impl rule__VolumeConnector_long__Group_1_2__1 ;
    public final void rule__VolumeConnector_long__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5705:1: ( rule__VolumeConnector_long__Group_1_2__0__Impl rule__VolumeConnector_long__Group_1_2__1 )
            // InternalDockerCompose.g:5706:2: rule__VolumeConnector_long__Group_1_2__0__Impl rule__VolumeConnector_long__Group_1_2__1
            {
            pushFollow(FOLLOW_10);
            rule__VolumeConnector_long__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_2__0"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_2__0__Impl"
    // InternalDockerCompose.g:5713:1: rule__VolumeConnector_long__Group_1_2__0__Impl : ( 'target:' ) ;
    public final void rule__VolumeConnector_long__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5717:1: ( ( 'target:' ) )
            // InternalDockerCompose.g:5718:1: ( 'target:' )
            {
            // InternalDockerCompose.g:5718:1: ( 'target:' )
            // InternalDockerCompose.g:5719:2: 'target:'
            {
             before(grammarAccess.getVolumeConnector_longAccess().getTargetKeyword_1_2_0()); 
            match(input,72,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_longAccess().getTargetKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_2__0__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_2__1"
    // InternalDockerCompose.g:5728:1: rule__VolumeConnector_long__Group_1_2__1 : rule__VolumeConnector_long__Group_1_2__1__Impl ;
    public final void rule__VolumeConnector_long__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5732:1: ( rule__VolumeConnector_long__Group_1_2__1__Impl )
            // InternalDockerCompose.g:5733:2: rule__VolumeConnector_long__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_2__1"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_2__1__Impl"
    // InternalDockerCompose.g:5739:1: rule__VolumeConnector_long__Group_1_2__1__Impl : ( ( rule__VolumeConnector_long__Container_pathAssignment_1_2_1 ) ) ;
    public final void rule__VolumeConnector_long__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5743:1: ( ( ( rule__VolumeConnector_long__Container_pathAssignment_1_2_1 ) ) )
            // InternalDockerCompose.g:5744:1: ( ( rule__VolumeConnector_long__Container_pathAssignment_1_2_1 ) )
            {
            // InternalDockerCompose.g:5744:1: ( ( rule__VolumeConnector_long__Container_pathAssignment_1_2_1 ) )
            // InternalDockerCompose.g:5745:2: ( rule__VolumeConnector_long__Container_pathAssignment_1_2_1 )
            {
             before(grammarAccess.getVolumeConnector_longAccess().getContainer_pathAssignment_1_2_1()); 
            // InternalDockerCompose.g:5746:2: ( rule__VolumeConnector_long__Container_pathAssignment_1_2_1 )
            // InternalDockerCompose.g:5746:3: rule__VolumeConnector_long__Container_pathAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Container_pathAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_longAccess().getContainer_pathAssignment_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_2__1__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_3__0"
    // InternalDockerCompose.g:5755:1: rule__VolumeConnector_long__Group_1_3__0 : rule__VolumeConnector_long__Group_1_3__0__Impl rule__VolumeConnector_long__Group_1_3__1 ;
    public final void rule__VolumeConnector_long__Group_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5759:1: ( rule__VolumeConnector_long__Group_1_3__0__Impl rule__VolumeConnector_long__Group_1_3__1 )
            // InternalDockerCompose.g:5760:2: rule__VolumeConnector_long__Group_1_3__0__Impl rule__VolumeConnector_long__Group_1_3__1
            {
            pushFollow(FOLLOW_14);
            rule__VolumeConnector_long__Group_1_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_3__0"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_3__0__Impl"
    // InternalDockerCompose.g:5767:1: rule__VolumeConnector_long__Group_1_3__0__Impl : ( 'read_only:' ) ;
    public final void rule__VolumeConnector_long__Group_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5771:1: ( ( 'read_only:' ) )
            // InternalDockerCompose.g:5772:1: ( 'read_only:' )
            {
            // InternalDockerCompose.g:5772:1: ( 'read_only:' )
            // InternalDockerCompose.g:5773:2: 'read_only:'
            {
             before(grammarAccess.getVolumeConnector_longAccess().getRead_onlyKeyword_1_3_0()); 
            match(input,54,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_longAccess().getRead_onlyKeyword_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_3__0__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_3__1"
    // InternalDockerCompose.g:5782:1: rule__VolumeConnector_long__Group_1_3__1 : rule__VolumeConnector_long__Group_1_3__1__Impl ;
    public final void rule__VolumeConnector_long__Group_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5786:1: ( rule__VolumeConnector_long__Group_1_3__1__Impl )
            // InternalDockerCompose.g:5787:2: rule__VolumeConnector_long__Group_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_3__1"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_3__1__Impl"
    // InternalDockerCompose.g:5793:1: rule__VolumeConnector_long__Group_1_3__1__Impl : ( ( rule__VolumeConnector_long__Read_onlyAssignment_1_3_1 ) ) ;
    public final void rule__VolumeConnector_long__Group_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5797:1: ( ( ( rule__VolumeConnector_long__Read_onlyAssignment_1_3_1 ) ) )
            // InternalDockerCompose.g:5798:1: ( ( rule__VolumeConnector_long__Read_onlyAssignment_1_3_1 ) )
            {
            // InternalDockerCompose.g:5798:1: ( ( rule__VolumeConnector_long__Read_onlyAssignment_1_3_1 ) )
            // InternalDockerCompose.g:5799:2: ( rule__VolumeConnector_long__Read_onlyAssignment_1_3_1 )
            {
             before(grammarAccess.getVolumeConnector_longAccess().getRead_onlyAssignment_1_3_1()); 
            // InternalDockerCompose.g:5800:2: ( rule__VolumeConnector_long__Read_onlyAssignment_1_3_1 )
            // InternalDockerCompose.g:5800:3: rule__VolumeConnector_long__Read_onlyAssignment_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Read_onlyAssignment_1_3_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_longAccess().getRead_onlyAssignment_1_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_3__1__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_4__0"
    // InternalDockerCompose.g:5809:1: rule__VolumeConnector_long__Group_1_4__0 : rule__VolumeConnector_long__Group_1_4__0__Impl rule__VolumeConnector_long__Group_1_4__1 ;
    public final void rule__VolumeConnector_long__Group_1_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5813:1: ( rule__VolumeConnector_long__Group_1_4__0__Impl rule__VolumeConnector_long__Group_1_4__1 )
            // InternalDockerCompose.g:5814:2: rule__VolumeConnector_long__Group_1_4__0__Impl rule__VolumeConnector_long__Group_1_4__1
            {
            pushFollow(FOLLOW_32);
            rule__VolumeConnector_long__Group_1_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_4__0"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_4__0__Impl"
    // InternalDockerCompose.g:5821:1: rule__VolumeConnector_long__Group_1_4__0__Impl : ( 'bind:' ) ;
    public final void rule__VolumeConnector_long__Group_1_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5825:1: ( ( 'bind:' ) )
            // InternalDockerCompose.g:5826:1: ( 'bind:' )
            {
            // InternalDockerCompose.g:5826:1: ( 'bind:' )
            // InternalDockerCompose.g:5827:2: 'bind:'
            {
             before(grammarAccess.getVolumeConnector_longAccess().getBindKeyword_1_4_0()); 
            match(input,73,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_longAccess().getBindKeyword_1_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_4__0__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_4__1"
    // InternalDockerCompose.g:5836:1: rule__VolumeConnector_long__Group_1_4__1 : rule__VolumeConnector_long__Group_1_4__1__Impl rule__VolumeConnector_long__Group_1_4__2 ;
    public final void rule__VolumeConnector_long__Group_1_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5840:1: ( rule__VolumeConnector_long__Group_1_4__1__Impl rule__VolumeConnector_long__Group_1_4__2 )
            // InternalDockerCompose.g:5841:2: rule__VolumeConnector_long__Group_1_4__1__Impl rule__VolumeConnector_long__Group_1_4__2
            {
            pushFollow(FOLLOW_33);
            rule__VolumeConnector_long__Group_1_4__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_4__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_4__1"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_4__1__Impl"
    // InternalDockerCompose.g:5848:1: rule__VolumeConnector_long__Group_1_4__1__Impl : ( 'propagation:' ) ;
    public final void rule__VolumeConnector_long__Group_1_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5852:1: ( ( 'propagation:' ) )
            // InternalDockerCompose.g:5853:1: ( 'propagation:' )
            {
            // InternalDockerCompose.g:5853:1: ( 'propagation:' )
            // InternalDockerCompose.g:5854:2: 'propagation:'
            {
             before(grammarAccess.getVolumeConnector_longAccess().getPropagationKeyword_1_4_1()); 
            match(input,74,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_longAccess().getPropagationKeyword_1_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_4__1__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_4__2"
    // InternalDockerCompose.g:5863:1: rule__VolumeConnector_long__Group_1_4__2 : rule__VolumeConnector_long__Group_1_4__2__Impl ;
    public final void rule__VolumeConnector_long__Group_1_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5867:1: ( rule__VolumeConnector_long__Group_1_4__2__Impl )
            // InternalDockerCompose.g:5868:2: rule__VolumeConnector_long__Group_1_4__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_4__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_4__2"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_4__2__Impl"
    // InternalDockerCompose.g:5874:1: rule__VolumeConnector_long__Group_1_4__2__Impl : ( ( rule__VolumeConnector_long__PropagationAssignment_1_4_2 ) ) ;
    public final void rule__VolumeConnector_long__Group_1_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5878:1: ( ( ( rule__VolumeConnector_long__PropagationAssignment_1_4_2 ) ) )
            // InternalDockerCompose.g:5879:1: ( ( rule__VolumeConnector_long__PropagationAssignment_1_4_2 ) )
            {
            // InternalDockerCompose.g:5879:1: ( ( rule__VolumeConnector_long__PropagationAssignment_1_4_2 ) )
            // InternalDockerCompose.g:5880:2: ( rule__VolumeConnector_long__PropagationAssignment_1_4_2 )
            {
             before(grammarAccess.getVolumeConnector_longAccess().getPropagationAssignment_1_4_2()); 
            // InternalDockerCompose.g:5881:2: ( rule__VolumeConnector_long__PropagationAssignment_1_4_2 )
            // InternalDockerCompose.g:5881:3: rule__VolumeConnector_long__PropagationAssignment_1_4_2
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__PropagationAssignment_1_4_2();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_longAccess().getPropagationAssignment_1_4_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_4__2__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_5__0"
    // InternalDockerCompose.g:5890:1: rule__VolumeConnector_long__Group_1_5__0 : rule__VolumeConnector_long__Group_1_5__0__Impl rule__VolumeConnector_long__Group_1_5__1 ;
    public final void rule__VolumeConnector_long__Group_1_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5894:1: ( rule__VolumeConnector_long__Group_1_5__0__Impl rule__VolumeConnector_long__Group_1_5__1 )
            // InternalDockerCompose.g:5895:2: rule__VolumeConnector_long__Group_1_5__0__Impl rule__VolumeConnector_long__Group_1_5__1
            {
            pushFollow(FOLLOW_34);
            rule__VolumeConnector_long__Group_1_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_5__0"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_5__0__Impl"
    // InternalDockerCompose.g:5902:1: rule__VolumeConnector_long__Group_1_5__0__Impl : ( 'volume:' ) ;
    public final void rule__VolumeConnector_long__Group_1_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5906:1: ( ( 'volume:' ) )
            // InternalDockerCompose.g:5907:1: ( 'volume:' )
            {
            // InternalDockerCompose.g:5907:1: ( 'volume:' )
            // InternalDockerCompose.g:5908:2: 'volume:'
            {
             before(grammarAccess.getVolumeConnector_longAccess().getVolumeKeyword_1_5_0()); 
            match(input,75,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_longAccess().getVolumeKeyword_1_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_5__0__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_5__1"
    // InternalDockerCompose.g:5917:1: rule__VolumeConnector_long__Group_1_5__1 : rule__VolumeConnector_long__Group_1_5__1__Impl rule__VolumeConnector_long__Group_1_5__2 ;
    public final void rule__VolumeConnector_long__Group_1_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5921:1: ( rule__VolumeConnector_long__Group_1_5__1__Impl rule__VolumeConnector_long__Group_1_5__2 )
            // InternalDockerCompose.g:5922:2: rule__VolumeConnector_long__Group_1_5__1__Impl rule__VolumeConnector_long__Group_1_5__2
            {
            pushFollow(FOLLOW_14);
            rule__VolumeConnector_long__Group_1_5__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_5__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_5__1"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_5__1__Impl"
    // InternalDockerCompose.g:5929:1: rule__VolumeConnector_long__Group_1_5__1__Impl : ( 'nocopy:' ) ;
    public final void rule__VolumeConnector_long__Group_1_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5933:1: ( ( 'nocopy:' ) )
            // InternalDockerCompose.g:5934:1: ( 'nocopy:' )
            {
            // InternalDockerCompose.g:5934:1: ( 'nocopy:' )
            // InternalDockerCompose.g:5935:2: 'nocopy:'
            {
             before(grammarAccess.getVolumeConnector_longAccess().getNocopyKeyword_1_5_1()); 
            match(input,76,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_longAccess().getNocopyKeyword_1_5_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_5__1__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_5__2"
    // InternalDockerCompose.g:5944:1: rule__VolumeConnector_long__Group_1_5__2 : rule__VolumeConnector_long__Group_1_5__2__Impl ;
    public final void rule__VolumeConnector_long__Group_1_5__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5948:1: ( rule__VolumeConnector_long__Group_1_5__2__Impl )
            // InternalDockerCompose.g:5949:2: rule__VolumeConnector_long__Group_1_5__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_5__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_5__2"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_5__2__Impl"
    // InternalDockerCompose.g:5955:1: rule__VolumeConnector_long__Group_1_5__2__Impl : ( ( rule__VolumeConnector_long__NocopyAssignment_1_5_2 ) ) ;
    public final void rule__VolumeConnector_long__Group_1_5__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5959:1: ( ( ( rule__VolumeConnector_long__NocopyAssignment_1_5_2 ) ) )
            // InternalDockerCompose.g:5960:1: ( ( rule__VolumeConnector_long__NocopyAssignment_1_5_2 ) )
            {
            // InternalDockerCompose.g:5960:1: ( ( rule__VolumeConnector_long__NocopyAssignment_1_5_2 ) )
            // InternalDockerCompose.g:5961:2: ( rule__VolumeConnector_long__NocopyAssignment_1_5_2 )
            {
             before(grammarAccess.getVolumeConnector_longAccess().getNocopyAssignment_1_5_2()); 
            // InternalDockerCompose.g:5962:2: ( rule__VolumeConnector_long__NocopyAssignment_1_5_2 )
            // InternalDockerCompose.g:5962:3: rule__VolumeConnector_long__NocopyAssignment_1_5_2
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__NocopyAssignment_1_5_2();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_longAccess().getNocopyAssignment_1_5_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_5__2__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_6__0"
    // InternalDockerCompose.g:5971:1: rule__VolumeConnector_long__Group_1_6__0 : rule__VolumeConnector_long__Group_1_6__0__Impl rule__VolumeConnector_long__Group_1_6__1 ;
    public final void rule__VolumeConnector_long__Group_1_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5975:1: ( rule__VolumeConnector_long__Group_1_6__0__Impl rule__VolumeConnector_long__Group_1_6__1 )
            // InternalDockerCompose.g:5976:2: rule__VolumeConnector_long__Group_1_6__0__Impl rule__VolumeConnector_long__Group_1_6__1
            {
            pushFollow(FOLLOW_35);
            rule__VolumeConnector_long__Group_1_6__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_6__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_6__0"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_6__0__Impl"
    // InternalDockerCompose.g:5983:1: rule__VolumeConnector_long__Group_1_6__0__Impl : ( 'tmpfs:' ) ;
    public final void rule__VolumeConnector_long__Group_1_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5987:1: ( ( 'tmpfs:' ) )
            // InternalDockerCompose.g:5988:1: ( 'tmpfs:' )
            {
            // InternalDockerCompose.g:5988:1: ( 'tmpfs:' )
            // InternalDockerCompose.g:5989:2: 'tmpfs:'
            {
             before(grammarAccess.getVolumeConnector_longAccess().getTmpfsKeyword_1_6_0()); 
            match(input,77,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_longAccess().getTmpfsKeyword_1_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_6__0__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_6__1"
    // InternalDockerCompose.g:5998:1: rule__VolumeConnector_long__Group_1_6__1 : rule__VolumeConnector_long__Group_1_6__1__Impl rule__VolumeConnector_long__Group_1_6__2 ;
    public final void rule__VolumeConnector_long__Group_1_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6002:1: ( rule__VolumeConnector_long__Group_1_6__1__Impl rule__VolumeConnector_long__Group_1_6__2 )
            // InternalDockerCompose.g:6003:2: rule__VolumeConnector_long__Group_1_6__1__Impl rule__VolumeConnector_long__Group_1_6__2
            {
            pushFollow(FOLLOW_12);
            rule__VolumeConnector_long__Group_1_6__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_6__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_6__1"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_6__1__Impl"
    // InternalDockerCompose.g:6010:1: rule__VolumeConnector_long__Group_1_6__1__Impl : ( 'size:' ) ;
    public final void rule__VolumeConnector_long__Group_1_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6014:1: ( ( 'size:' ) )
            // InternalDockerCompose.g:6015:1: ( 'size:' )
            {
            // InternalDockerCompose.g:6015:1: ( 'size:' )
            // InternalDockerCompose.g:6016:2: 'size:'
            {
             before(grammarAccess.getVolumeConnector_longAccess().getSizeKeyword_1_6_1()); 
            match(input,78,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_longAccess().getSizeKeyword_1_6_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_6__1__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_6__2"
    // InternalDockerCompose.g:6025:1: rule__VolumeConnector_long__Group_1_6__2 : rule__VolumeConnector_long__Group_1_6__2__Impl ;
    public final void rule__VolumeConnector_long__Group_1_6__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6029:1: ( rule__VolumeConnector_long__Group_1_6__2__Impl )
            // InternalDockerCompose.g:6030:2: rule__VolumeConnector_long__Group_1_6__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_6__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_6__2"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_6__2__Impl"
    // InternalDockerCompose.g:6036:1: rule__VolumeConnector_long__Group_1_6__2__Impl : ( ( rule__VolumeConnector_long__SizeAssignment_1_6_2 ) ) ;
    public final void rule__VolumeConnector_long__Group_1_6__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6040:1: ( ( ( rule__VolumeConnector_long__SizeAssignment_1_6_2 ) ) )
            // InternalDockerCompose.g:6041:1: ( ( rule__VolumeConnector_long__SizeAssignment_1_6_2 ) )
            {
            // InternalDockerCompose.g:6041:1: ( ( rule__VolumeConnector_long__SizeAssignment_1_6_2 ) )
            // InternalDockerCompose.g:6042:2: ( rule__VolumeConnector_long__SizeAssignment_1_6_2 )
            {
             before(grammarAccess.getVolumeConnector_longAccess().getSizeAssignment_1_6_2()); 
            // InternalDockerCompose.g:6043:2: ( rule__VolumeConnector_long__SizeAssignment_1_6_2 )
            // InternalDockerCompose.g:6043:3: rule__VolumeConnector_long__SizeAssignment_1_6_2
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__SizeAssignment_1_6_2();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_longAccess().getSizeAssignment_1_6_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_6__2__Impl"


    // $ANTLR start "rule__VolumeConnector_short__Group__0"
    // InternalDockerCompose.g:6052:1: rule__VolumeConnector_short__Group__0 : rule__VolumeConnector_short__Group__0__Impl rule__VolumeConnector_short__Group__1 ;
    public final void rule__VolumeConnector_short__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6056:1: ( rule__VolumeConnector_short__Group__0__Impl rule__VolumeConnector_short__Group__1 )
            // InternalDockerCompose.g:6057:2: rule__VolumeConnector_short__Group__0__Impl rule__VolumeConnector_short__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__VolumeConnector_short__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group__0"


    // $ANTLR start "rule__VolumeConnector_short__Group__0__Impl"
    // InternalDockerCompose.g:6064:1: rule__VolumeConnector_short__Group__0__Impl : ( () ) ;
    public final void rule__VolumeConnector_short__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6068:1: ( ( () ) )
            // InternalDockerCompose.g:6069:1: ( () )
            {
            // InternalDockerCompose.g:6069:1: ( () )
            // InternalDockerCompose.g:6070:2: ()
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getVolumeConnectorAction_0()); 
            // InternalDockerCompose.g:6071:2: ()
            // InternalDockerCompose.g:6071:3: 
            {
            }

             after(grammarAccess.getVolumeConnector_shortAccess().getVolumeConnectorAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group__0__Impl"


    // $ANTLR start "rule__VolumeConnector_short__Group__1"
    // InternalDockerCompose.g:6079:1: rule__VolumeConnector_short__Group__1 : rule__VolumeConnector_short__Group__1__Impl rule__VolumeConnector_short__Group__2 ;
    public final void rule__VolumeConnector_short__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6083:1: ( rule__VolumeConnector_short__Group__1__Impl rule__VolumeConnector_short__Group__2 )
            // InternalDockerCompose.g:6084:2: rule__VolumeConnector_short__Group__1__Impl rule__VolumeConnector_short__Group__2
            {
            pushFollow(FOLLOW_8);
            rule__VolumeConnector_short__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group__1"


    // $ANTLR start "rule__VolumeConnector_short__Group__1__Impl"
    // InternalDockerCompose.g:6091:1: rule__VolumeConnector_short__Group__1__Impl : ( ( rule__VolumeConnector_short__VolumeAssignment_1 ) ) ;
    public final void rule__VolumeConnector_short__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6095:1: ( ( ( rule__VolumeConnector_short__VolumeAssignment_1 ) ) )
            // InternalDockerCompose.g:6096:1: ( ( rule__VolumeConnector_short__VolumeAssignment_1 ) )
            {
            // InternalDockerCompose.g:6096:1: ( ( rule__VolumeConnector_short__VolumeAssignment_1 ) )
            // InternalDockerCompose.g:6097:2: ( rule__VolumeConnector_short__VolumeAssignment_1 )
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getVolumeAssignment_1()); 
            // InternalDockerCompose.g:6098:2: ( rule__VolumeConnector_short__VolumeAssignment_1 )
            // InternalDockerCompose.g:6098:3: rule__VolumeConnector_short__VolumeAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__VolumeAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_shortAccess().getVolumeAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group__1__Impl"


    // $ANTLR start "rule__VolumeConnector_short__Group__2"
    // InternalDockerCompose.g:6106:1: rule__VolumeConnector_short__Group__2 : rule__VolumeConnector_short__Group__2__Impl rule__VolumeConnector_short__Group__3 ;
    public final void rule__VolumeConnector_short__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6110:1: ( rule__VolumeConnector_short__Group__2__Impl rule__VolumeConnector_short__Group__3 )
            // InternalDockerCompose.g:6111:2: rule__VolumeConnector_short__Group__2__Impl rule__VolumeConnector_short__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__VolumeConnector_short__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group__2"


    // $ANTLR start "rule__VolumeConnector_short__Group__2__Impl"
    // InternalDockerCompose.g:6118:1: rule__VolumeConnector_short__Group__2__Impl : ( ':' ) ;
    public final void rule__VolumeConnector_short__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6122:1: ( ( ':' ) )
            // InternalDockerCompose.g:6123:1: ( ':' )
            {
            // InternalDockerCompose.g:6123:1: ( ':' )
            // InternalDockerCompose.g:6124:2: ':'
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getColonKeyword_2()); 
            match(input,46,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_shortAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group__2__Impl"


    // $ANTLR start "rule__VolumeConnector_short__Group__3"
    // InternalDockerCompose.g:6133:1: rule__VolumeConnector_short__Group__3 : rule__VolumeConnector_short__Group__3__Impl rule__VolumeConnector_short__Group__4 ;
    public final void rule__VolumeConnector_short__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6137:1: ( rule__VolumeConnector_short__Group__3__Impl rule__VolumeConnector_short__Group__4 )
            // InternalDockerCompose.g:6138:2: rule__VolumeConnector_short__Group__3__Impl rule__VolumeConnector_short__Group__4
            {
            pushFollow(FOLLOW_8);
            rule__VolumeConnector_short__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group__3"


    // $ANTLR start "rule__VolumeConnector_short__Group__3__Impl"
    // InternalDockerCompose.g:6145:1: rule__VolumeConnector_short__Group__3__Impl : ( ( rule__VolumeConnector_short__Container_pathAssignment_3 ) ) ;
    public final void rule__VolumeConnector_short__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6149:1: ( ( ( rule__VolumeConnector_short__Container_pathAssignment_3 ) ) )
            // InternalDockerCompose.g:6150:1: ( ( rule__VolumeConnector_short__Container_pathAssignment_3 ) )
            {
            // InternalDockerCompose.g:6150:1: ( ( rule__VolumeConnector_short__Container_pathAssignment_3 ) )
            // InternalDockerCompose.g:6151:2: ( rule__VolumeConnector_short__Container_pathAssignment_3 )
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getContainer_pathAssignment_3()); 
            // InternalDockerCompose.g:6152:2: ( rule__VolumeConnector_short__Container_pathAssignment_3 )
            // InternalDockerCompose.g:6152:3: rule__VolumeConnector_short__Container_pathAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__Container_pathAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_shortAccess().getContainer_pathAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group__3__Impl"


    // $ANTLR start "rule__VolumeConnector_short__Group__4"
    // InternalDockerCompose.g:6160:1: rule__VolumeConnector_short__Group__4 : rule__VolumeConnector_short__Group__4__Impl ;
    public final void rule__VolumeConnector_short__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6164:1: ( rule__VolumeConnector_short__Group__4__Impl )
            // InternalDockerCompose.g:6165:2: rule__VolumeConnector_short__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__Group__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group__4"


    // $ANTLR start "rule__VolumeConnector_short__Group__4__Impl"
    // InternalDockerCompose.g:6171:1: rule__VolumeConnector_short__Group__4__Impl : ( ( rule__VolumeConnector_short__Group_4__0 )? ) ;
    public final void rule__VolumeConnector_short__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6175:1: ( ( ( rule__VolumeConnector_short__Group_4__0 )? ) )
            // InternalDockerCompose.g:6176:1: ( ( rule__VolumeConnector_short__Group_4__0 )? )
            {
            // InternalDockerCompose.g:6176:1: ( ( rule__VolumeConnector_short__Group_4__0 )? )
            // InternalDockerCompose.g:6177:2: ( rule__VolumeConnector_short__Group_4__0 )?
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getGroup_4()); 
            // InternalDockerCompose.g:6178:2: ( rule__VolumeConnector_short__Group_4__0 )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==46) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalDockerCompose.g:6178:3: rule__VolumeConnector_short__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_short__Group_4__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getVolumeConnector_shortAccess().getGroup_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group__4__Impl"


    // $ANTLR start "rule__VolumeConnector_short__Group_4__0"
    // InternalDockerCompose.g:6187:1: rule__VolumeConnector_short__Group_4__0 : rule__VolumeConnector_short__Group_4__0__Impl rule__VolumeConnector_short__Group_4__1 ;
    public final void rule__VolumeConnector_short__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6191:1: ( rule__VolumeConnector_short__Group_4__0__Impl rule__VolumeConnector_short__Group_4__1 )
            // InternalDockerCompose.g:6192:2: rule__VolumeConnector_short__Group_4__0__Impl rule__VolumeConnector_short__Group_4__1
            {
            pushFollow(FOLLOW_36);
            rule__VolumeConnector_short__Group_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__Group_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group_4__0"


    // $ANTLR start "rule__VolumeConnector_short__Group_4__0__Impl"
    // InternalDockerCompose.g:6199:1: rule__VolumeConnector_short__Group_4__0__Impl : ( ':' ) ;
    public final void rule__VolumeConnector_short__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6203:1: ( ( ':' ) )
            // InternalDockerCompose.g:6204:1: ( ':' )
            {
            // InternalDockerCompose.g:6204:1: ( ':' )
            // InternalDockerCompose.g:6205:2: ':'
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getColonKeyword_4_0()); 
            match(input,46,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_shortAccess().getColonKeyword_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group_4__0__Impl"


    // $ANTLR start "rule__VolumeConnector_short__Group_4__1"
    // InternalDockerCompose.g:6214:1: rule__VolumeConnector_short__Group_4__1 : rule__VolumeConnector_short__Group_4__1__Impl ;
    public final void rule__VolumeConnector_short__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6218:1: ( rule__VolumeConnector_short__Group_4__1__Impl )
            // InternalDockerCompose.g:6219:2: rule__VolumeConnector_short__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__Group_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group_4__1"


    // $ANTLR start "rule__VolumeConnector_short__Group_4__1__Impl"
    // InternalDockerCompose.g:6225:1: rule__VolumeConnector_short__Group_4__1__Impl : ( ( rule__VolumeConnector_short__Access_modeAssignment_4_1 ) ) ;
    public final void rule__VolumeConnector_short__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6229:1: ( ( ( rule__VolumeConnector_short__Access_modeAssignment_4_1 ) ) )
            // InternalDockerCompose.g:6230:1: ( ( rule__VolumeConnector_short__Access_modeAssignment_4_1 ) )
            {
            // InternalDockerCompose.g:6230:1: ( ( rule__VolumeConnector_short__Access_modeAssignment_4_1 ) )
            // InternalDockerCompose.g:6231:2: ( rule__VolumeConnector_short__Access_modeAssignment_4_1 )
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getAccess_modeAssignment_4_1()); 
            // InternalDockerCompose.g:6232:2: ( rule__VolumeConnector_short__Access_modeAssignment_4_1 )
            // InternalDockerCompose.g:6232:3: rule__VolumeConnector_short__Access_modeAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__Access_modeAssignment_4_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_shortAccess().getAccess_modeAssignment_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group_4__1__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group__0"
    // InternalDockerCompose.g:6241:1: rule__ConfigConnector_long__Group__0 : rule__ConfigConnector_long__Group__0__Impl rule__ConfigConnector_long__Group__1 ;
    public final void rule__ConfigConnector_long__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6245:1: ( rule__ConfigConnector_long__Group__0__Impl rule__ConfigConnector_long__Group__1 )
            // InternalDockerCompose.g:6246:2: rule__ConfigConnector_long__Group__0__Impl rule__ConfigConnector_long__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__ConfigConnector_long__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group__0"


    // $ANTLR start "rule__ConfigConnector_long__Group__0__Impl"
    // InternalDockerCompose.g:6253:1: rule__ConfigConnector_long__Group__0__Impl : ( () ) ;
    public final void rule__ConfigConnector_long__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6257:1: ( ( () ) )
            // InternalDockerCompose.g:6258:1: ( () )
            {
            // InternalDockerCompose.g:6258:1: ( () )
            // InternalDockerCompose.g:6259:2: ()
            {
             before(grammarAccess.getConfigConnector_longAccess().getConfigConnectorAction_0()); 
            // InternalDockerCompose.g:6260:2: ()
            // InternalDockerCompose.g:6260:3: 
            {
            }

             after(grammarAccess.getConfigConnector_longAccess().getConfigConnectorAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group__0__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group__1"
    // InternalDockerCompose.g:6268:1: rule__ConfigConnector_long__Group__1 : rule__ConfigConnector_long__Group__1__Impl ;
    public final void rule__ConfigConnector_long__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6272:1: ( rule__ConfigConnector_long__Group__1__Impl )
            // InternalDockerCompose.g:6273:2: rule__ConfigConnector_long__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group__1"


    // $ANTLR start "rule__ConfigConnector_long__Group__1__Impl"
    // InternalDockerCompose.g:6279:1: rule__ConfigConnector_long__Group__1__Impl : ( ( rule__ConfigConnector_long__UnorderedGroup_1 ) ) ;
    public final void rule__ConfigConnector_long__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6283:1: ( ( ( rule__ConfigConnector_long__UnorderedGroup_1 ) ) )
            // InternalDockerCompose.g:6284:1: ( ( rule__ConfigConnector_long__UnorderedGroup_1 ) )
            {
            // InternalDockerCompose.g:6284:1: ( ( rule__ConfigConnector_long__UnorderedGroup_1 ) )
            // InternalDockerCompose.g:6285:2: ( rule__ConfigConnector_long__UnorderedGroup_1 )
            {
             before(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1()); 
            // InternalDockerCompose.g:6286:2: ( rule__ConfigConnector_long__UnorderedGroup_1 )
            // InternalDockerCompose.g:6286:3: rule__ConfigConnector_long__UnorderedGroup_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__UnorderedGroup_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group__1__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_0__0"
    // InternalDockerCompose.g:6295:1: rule__ConfigConnector_long__Group_1_0__0 : rule__ConfigConnector_long__Group_1_0__0__Impl rule__ConfigConnector_long__Group_1_0__1 ;
    public final void rule__ConfigConnector_long__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6299:1: ( rule__ConfigConnector_long__Group_1_0__0__Impl rule__ConfigConnector_long__Group_1_0__1 )
            // InternalDockerCompose.g:6300:2: rule__ConfigConnector_long__Group_1_0__0__Impl rule__ConfigConnector_long__Group_1_0__1
            {
            pushFollow(FOLLOW_7);
            rule__ConfigConnector_long__Group_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_0__0"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_0__0__Impl"
    // InternalDockerCompose.g:6307:1: rule__ConfigConnector_long__Group_1_0__0__Impl : ( 'source:' ) ;
    public final void rule__ConfigConnector_long__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6311:1: ( ( 'source:' ) )
            // InternalDockerCompose.g:6312:1: ( 'source:' )
            {
            // InternalDockerCompose.g:6312:1: ( 'source:' )
            // InternalDockerCompose.g:6313:2: 'source:'
            {
             before(grammarAccess.getConfigConnector_longAccess().getSourceKeyword_1_0_0()); 
            match(input,70,FOLLOW_2); 
             after(grammarAccess.getConfigConnector_longAccess().getSourceKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_0__0__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_0__1"
    // InternalDockerCompose.g:6322:1: rule__ConfigConnector_long__Group_1_0__1 : rule__ConfigConnector_long__Group_1_0__1__Impl ;
    public final void rule__ConfigConnector_long__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6326:1: ( rule__ConfigConnector_long__Group_1_0__1__Impl )
            // InternalDockerCompose.g:6327:2: rule__ConfigConnector_long__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_0__1"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_0__1__Impl"
    // InternalDockerCompose.g:6333:1: rule__ConfigConnector_long__Group_1_0__1__Impl : ( ( rule__ConfigConnector_long__ConfigAssignment_1_0_1 ) ) ;
    public final void rule__ConfigConnector_long__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6337:1: ( ( ( rule__ConfigConnector_long__ConfigAssignment_1_0_1 ) ) )
            // InternalDockerCompose.g:6338:1: ( ( rule__ConfigConnector_long__ConfigAssignment_1_0_1 ) )
            {
            // InternalDockerCompose.g:6338:1: ( ( rule__ConfigConnector_long__ConfigAssignment_1_0_1 ) )
            // InternalDockerCompose.g:6339:2: ( rule__ConfigConnector_long__ConfigAssignment_1_0_1 )
            {
             before(grammarAccess.getConfigConnector_longAccess().getConfigAssignment_1_0_1()); 
            // InternalDockerCompose.g:6340:2: ( rule__ConfigConnector_long__ConfigAssignment_1_0_1 )
            // InternalDockerCompose.g:6340:3: rule__ConfigConnector_long__ConfigAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__ConfigAssignment_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnector_longAccess().getConfigAssignment_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_0__1__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_1__0"
    // InternalDockerCompose.g:6349:1: rule__ConfigConnector_long__Group_1_1__0 : rule__ConfigConnector_long__Group_1_1__0__Impl rule__ConfigConnector_long__Group_1_1__1 ;
    public final void rule__ConfigConnector_long__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6353:1: ( rule__ConfigConnector_long__Group_1_1__0__Impl rule__ConfigConnector_long__Group_1_1__1 )
            // InternalDockerCompose.g:6354:2: rule__ConfigConnector_long__Group_1_1__0__Impl rule__ConfigConnector_long__Group_1_1__1
            {
            pushFollow(FOLLOW_10);
            rule__ConfigConnector_long__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_1__0"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_1__0__Impl"
    // InternalDockerCompose.g:6361:1: rule__ConfigConnector_long__Group_1_1__0__Impl : ( 'target:' ) ;
    public final void rule__ConfigConnector_long__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6365:1: ( ( 'target:' ) )
            // InternalDockerCompose.g:6366:1: ( 'target:' )
            {
            // InternalDockerCompose.g:6366:1: ( 'target:' )
            // InternalDockerCompose.g:6367:2: 'target:'
            {
             before(grammarAccess.getConfigConnector_longAccess().getTargetKeyword_1_1_0()); 
            match(input,72,FOLLOW_2); 
             after(grammarAccess.getConfigConnector_longAccess().getTargetKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_1__0__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_1__1"
    // InternalDockerCompose.g:6376:1: rule__ConfigConnector_long__Group_1_1__1 : rule__ConfigConnector_long__Group_1_1__1__Impl ;
    public final void rule__ConfigConnector_long__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6380:1: ( rule__ConfigConnector_long__Group_1_1__1__Impl )
            // InternalDockerCompose.g:6381:2: rule__ConfigConnector_long__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_1__1"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_1__1__Impl"
    // InternalDockerCompose.g:6387:1: rule__ConfigConnector_long__Group_1_1__1__Impl : ( ( rule__ConfigConnector_long__TargetAssignment_1_1_1 ) ) ;
    public final void rule__ConfigConnector_long__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6391:1: ( ( ( rule__ConfigConnector_long__TargetAssignment_1_1_1 ) ) )
            // InternalDockerCompose.g:6392:1: ( ( rule__ConfigConnector_long__TargetAssignment_1_1_1 ) )
            {
            // InternalDockerCompose.g:6392:1: ( ( rule__ConfigConnector_long__TargetAssignment_1_1_1 ) )
            // InternalDockerCompose.g:6393:2: ( rule__ConfigConnector_long__TargetAssignment_1_1_1 )
            {
             before(grammarAccess.getConfigConnector_longAccess().getTargetAssignment_1_1_1()); 
            // InternalDockerCompose.g:6394:2: ( rule__ConfigConnector_long__TargetAssignment_1_1_1 )
            // InternalDockerCompose.g:6394:3: rule__ConfigConnector_long__TargetAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__TargetAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnector_longAccess().getTargetAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_1__1__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_2__0"
    // InternalDockerCompose.g:6403:1: rule__ConfigConnector_long__Group_1_2__0 : rule__ConfigConnector_long__Group_1_2__0__Impl rule__ConfigConnector_long__Group_1_2__1 ;
    public final void rule__ConfigConnector_long__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6407:1: ( rule__ConfigConnector_long__Group_1_2__0__Impl rule__ConfigConnector_long__Group_1_2__1 )
            // InternalDockerCompose.g:6408:2: rule__ConfigConnector_long__Group_1_2__0__Impl rule__ConfigConnector_long__Group_1_2__1
            {
            pushFollow(FOLLOW_37);
            rule__ConfigConnector_long__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_2__0"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_2__0__Impl"
    // InternalDockerCompose.g:6415:1: rule__ConfigConnector_long__Group_1_2__0__Impl : ( 'uid:' ) ;
    public final void rule__ConfigConnector_long__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6419:1: ( ( 'uid:' ) )
            // InternalDockerCompose.g:6420:1: ( 'uid:' )
            {
            // InternalDockerCompose.g:6420:1: ( 'uid:' )
            // InternalDockerCompose.g:6421:2: 'uid:'
            {
             before(grammarAccess.getConfigConnector_longAccess().getUidKeyword_1_2_0()); 
            match(input,79,FOLLOW_2); 
             after(grammarAccess.getConfigConnector_longAccess().getUidKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_2__0__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_2__1"
    // InternalDockerCompose.g:6430:1: rule__ConfigConnector_long__Group_1_2__1 : rule__ConfigConnector_long__Group_1_2__1__Impl ;
    public final void rule__ConfigConnector_long__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6434:1: ( rule__ConfigConnector_long__Group_1_2__1__Impl )
            // InternalDockerCompose.g:6435:2: rule__ConfigConnector_long__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_2__1"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_2__1__Impl"
    // InternalDockerCompose.g:6441:1: rule__ConfigConnector_long__Group_1_2__1__Impl : ( ( rule__ConfigConnector_long__UidAssignment_1_2_1 ) ) ;
    public final void rule__ConfigConnector_long__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6445:1: ( ( ( rule__ConfigConnector_long__UidAssignment_1_2_1 ) ) )
            // InternalDockerCompose.g:6446:1: ( ( rule__ConfigConnector_long__UidAssignment_1_2_1 ) )
            {
            // InternalDockerCompose.g:6446:1: ( ( rule__ConfigConnector_long__UidAssignment_1_2_1 ) )
            // InternalDockerCompose.g:6447:2: ( rule__ConfigConnector_long__UidAssignment_1_2_1 )
            {
             before(grammarAccess.getConfigConnector_longAccess().getUidAssignment_1_2_1()); 
            // InternalDockerCompose.g:6448:2: ( rule__ConfigConnector_long__UidAssignment_1_2_1 )
            // InternalDockerCompose.g:6448:3: rule__ConfigConnector_long__UidAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__UidAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnector_longAccess().getUidAssignment_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_2__1__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_3__0"
    // InternalDockerCompose.g:6457:1: rule__ConfigConnector_long__Group_1_3__0 : rule__ConfigConnector_long__Group_1_3__0__Impl rule__ConfigConnector_long__Group_1_3__1 ;
    public final void rule__ConfigConnector_long__Group_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6461:1: ( rule__ConfigConnector_long__Group_1_3__0__Impl rule__ConfigConnector_long__Group_1_3__1 )
            // InternalDockerCompose.g:6462:2: rule__ConfigConnector_long__Group_1_3__0__Impl rule__ConfigConnector_long__Group_1_3__1
            {
            pushFollow(FOLLOW_37);
            rule__ConfigConnector_long__Group_1_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group_1_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_3__0"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_3__0__Impl"
    // InternalDockerCompose.g:6469:1: rule__ConfigConnector_long__Group_1_3__0__Impl : ( 'gid:' ) ;
    public final void rule__ConfigConnector_long__Group_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6473:1: ( ( 'gid:' ) )
            // InternalDockerCompose.g:6474:1: ( 'gid:' )
            {
            // InternalDockerCompose.g:6474:1: ( 'gid:' )
            // InternalDockerCompose.g:6475:2: 'gid:'
            {
             before(grammarAccess.getConfigConnector_longAccess().getGidKeyword_1_3_0()); 
            match(input,80,FOLLOW_2); 
             after(grammarAccess.getConfigConnector_longAccess().getGidKeyword_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_3__0__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_3__1"
    // InternalDockerCompose.g:6484:1: rule__ConfigConnector_long__Group_1_3__1 : rule__ConfigConnector_long__Group_1_3__1__Impl ;
    public final void rule__ConfigConnector_long__Group_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6488:1: ( rule__ConfigConnector_long__Group_1_3__1__Impl )
            // InternalDockerCompose.g:6489:2: rule__ConfigConnector_long__Group_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group_1_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_3__1"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_3__1__Impl"
    // InternalDockerCompose.g:6495:1: rule__ConfigConnector_long__Group_1_3__1__Impl : ( ( rule__ConfigConnector_long__GidAssignment_1_3_1 ) ) ;
    public final void rule__ConfigConnector_long__Group_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6499:1: ( ( ( rule__ConfigConnector_long__GidAssignment_1_3_1 ) ) )
            // InternalDockerCompose.g:6500:1: ( ( rule__ConfigConnector_long__GidAssignment_1_3_1 ) )
            {
            // InternalDockerCompose.g:6500:1: ( ( rule__ConfigConnector_long__GidAssignment_1_3_1 ) )
            // InternalDockerCompose.g:6501:2: ( rule__ConfigConnector_long__GidAssignment_1_3_1 )
            {
             before(grammarAccess.getConfigConnector_longAccess().getGidAssignment_1_3_1()); 
            // InternalDockerCompose.g:6502:2: ( rule__ConfigConnector_long__GidAssignment_1_3_1 )
            // InternalDockerCompose.g:6502:3: rule__ConfigConnector_long__GidAssignment_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__GidAssignment_1_3_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnector_longAccess().getGidAssignment_1_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_3__1__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_4__0"
    // InternalDockerCompose.g:6511:1: rule__ConfigConnector_long__Group_1_4__0 : rule__ConfigConnector_long__Group_1_4__0__Impl rule__ConfigConnector_long__Group_1_4__1 ;
    public final void rule__ConfigConnector_long__Group_1_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6515:1: ( rule__ConfigConnector_long__Group_1_4__0__Impl rule__ConfigConnector_long__Group_1_4__1 )
            // InternalDockerCompose.g:6516:2: rule__ConfigConnector_long__Group_1_4__0__Impl rule__ConfigConnector_long__Group_1_4__1
            {
            pushFollow(FOLLOW_12);
            rule__ConfigConnector_long__Group_1_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group_1_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_4__0"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_4__0__Impl"
    // InternalDockerCompose.g:6523:1: rule__ConfigConnector_long__Group_1_4__0__Impl : ( 'mode:' ) ;
    public final void rule__ConfigConnector_long__Group_1_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6527:1: ( ( 'mode:' ) )
            // InternalDockerCompose.g:6528:1: ( 'mode:' )
            {
            // InternalDockerCompose.g:6528:1: ( 'mode:' )
            // InternalDockerCompose.g:6529:2: 'mode:'
            {
             before(grammarAccess.getConfigConnector_longAccess().getModeKeyword_1_4_0()); 
            match(input,81,FOLLOW_2); 
             after(grammarAccess.getConfigConnector_longAccess().getModeKeyword_1_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_4__0__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_4__1"
    // InternalDockerCompose.g:6538:1: rule__ConfigConnector_long__Group_1_4__1 : rule__ConfigConnector_long__Group_1_4__1__Impl ;
    public final void rule__ConfigConnector_long__Group_1_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6542:1: ( rule__ConfigConnector_long__Group_1_4__1__Impl )
            // InternalDockerCompose.g:6543:2: rule__ConfigConnector_long__Group_1_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group_1_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_4__1"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_4__1__Impl"
    // InternalDockerCompose.g:6549:1: rule__ConfigConnector_long__Group_1_4__1__Impl : ( ( rule__ConfigConnector_long__ModeAssignment_1_4_1 ) ) ;
    public final void rule__ConfigConnector_long__Group_1_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6553:1: ( ( ( rule__ConfigConnector_long__ModeAssignment_1_4_1 ) ) )
            // InternalDockerCompose.g:6554:1: ( ( rule__ConfigConnector_long__ModeAssignment_1_4_1 ) )
            {
            // InternalDockerCompose.g:6554:1: ( ( rule__ConfigConnector_long__ModeAssignment_1_4_1 ) )
            // InternalDockerCompose.g:6555:2: ( rule__ConfigConnector_long__ModeAssignment_1_4_1 )
            {
             before(grammarAccess.getConfigConnector_longAccess().getModeAssignment_1_4_1()); 
            // InternalDockerCompose.g:6556:2: ( rule__ConfigConnector_long__ModeAssignment_1_4_1 )
            // InternalDockerCompose.g:6556:3: rule__ConfigConnector_long__ModeAssignment_1_4_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__ModeAssignment_1_4_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnector_longAccess().getModeAssignment_1_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_4__1__Impl"


    // $ANTLR start "rule__ConfigConnector_short__Group__0"
    // InternalDockerCompose.g:6565:1: rule__ConfigConnector_short__Group__0 : rule__ConfigConnector_short__Group__0__Impl rule__ConfigConnector_short__Group__1 ;
    public final void rule__ConfigConnector_short__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6569:1: ( rule__ConfigConnector_short__Group__0__Impl rule__ConfigConnector_short__Group__1 )
            // InternalDockerCompose.g:6570:2: rule__ConfigConnector_short__Group__0__Impl rule__ConfigConnector_short__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__ConfigConnector_short__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector_short__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_short__Group__0"


    // $ANTLR start "rule__ConfigConnector_short__Group__0__Impl"
    // InternalDockerCompose.g:6577:1: rule__ConfigConnector_short__Group__0__Impl : ( () ) ;
    public final void rule__ConfigConnector_short__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6581:1: ( ( () ) )
            // InternalDockerCompose.g:6582:1: ( () )
            {
            // InternalDockerCompose.g:6582:1: ( () )
            // InternalDockerCompose.g:6583:2: ()
            {
             before(grammarAccess.getConfigConnector_shortAccess().getConfigConnectorAction_0()); 
            // InternalDockerCompose.g:6584:2: ()
            // InternalDockerCompose.g:6584:3: 
            {
            }

             after(grammarAccess.getConfigConnector_shortAccess().getConfigConnectorAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_short__Group__0__Impl"


    // $ANTLR start "rule__ConfigConnector_short__Group__1"
    // InternalDockerCompose.g:6592:1: rule__ConfigConnector_short__Group__1 : rule__ConfigConnector_short__Group__1__Impl ;
    public final void rule__ConfigConnector_short__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6596:1: ( rule__ConfigConnector_short__Group__1__Impl )
            // InternalDockerCompose.g:6597:2: rule__ConfigConnector_short__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_short__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_short__Group__1"


    // $ANTLR start "rule__ConfigConnector_short__Group__1__Impl"
    // InternalDockerCompose.g:6603:1: rule__ConfigConnector_short__Group__1__Impl : ( ( rule__ConfigConnector_short__ConfigAssignment_1 ) ) ;
    public final void rule__ConfigConnector_short__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6607:1: ( ( ( rule__ConfigConnector_short__ConfigAssignment_1 ) ) )
            // InternalDockerCompose.g:6608:1: ( ( rule__ConfigConnector_short__ConfigAssignment_1 ) )
            {
            // InternalDockerCompose.g:6608:1: ( ( rule__ConfigConnector_short__ConfigAssignment_1 ) )
            // InternalDockerCompose.g:6609:2: ( rule__ConfigConnector_short__ConfigAssignment_1 )
            {
             before(grammarAccess.getConfigConnector_shortAccess().getConfigAssignment_1()); 
            // InternalDockerCompose.g:6610:2: ( rule__ConfigConnector_short__ConfigAssignment_1 )
            // InternalDockerCompose.g:6610:3: rule__ConfigConnector_short__ConfigAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_short__ConfigAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnector_shortAccess().getConfigAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_short__Group__1__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group__0"
    // InternalDockerCompose.g:6619:1: rule__SecretConnector_long__Group__0 : rule__SecretConnector_long__Group__0__Impl rule__SecretConnector_long__Group__1 ;
    public final void rule__SecretConnector_long__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6623:1: ( rule__SecretConnector_long__Group__0__Impl rule__SecretConnector_long__Group__1 )
            // InternalDockerCompose.g:6624:2: rule__SecretConnector_long__Group__0__Impl rule__SecretConnector_long__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__SecretConnector_long__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group__0"


    // $ANTLR start "rule__SecretConnector_long__Group__0__Impl"
    // InternalDockerCompose.g:6631:1: rule__SecretConnector_long__Group__0__Impl : ( () ) ;
    public final void rule__SecretConnector_long__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6635:1: ( ( () ) )
            // InternalDockerCompose.g:6636:1: ( () )
            {
            // InternalDockerCompose.g:6636:1: ( () )
            // InternalDockerCompose.g:6637:2: ()
            {
             before(grammarAccess.getSecretConnector_longAccess().getSecretConnectorAction_0()); 
            // InternalDockerCompose.g:6638:2: ()
            // InternalDockerCompose.g:6638:3: 
            {
            }

             after(grammarAccess.getSecretConnector_longAccess().getSecretConnectorAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group__0__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group__1"
    // InternalDockerCompose.g:6646:1: rule__SecretConnector_long__Group__1 : rule__SecretConnector_long__Group__1__Impl ;
    public final void rule__SecretConnector_long__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6650:1: ( rule__SecretConnector_long__Group__1__Impl )
            // InternalDockerCompose.g:6651:2: rule__SecretConnector_long__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group__1"


    // $ANTLR start "rule__SecretConnector_long__Group__1__Impl"
    // InternalDockerCompose.g:6657:1: rule__SecretConnector_long__Group__1__Impl : ( ( rule__SecretConnector_long__UnorderedGroup_1 ) ) ;
    public final void rule__SecretConnector_long__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6661:1: ( ( ( rule__SecretConnector_long__UnorderedGroup_1 ) ) )
            // InternalDockerCompose.g:6662:1: ( ( rule__SecretConnector_long__UnorderedGroup_1 ) )
            {
            // InternalDockerCompose.g:6662:1: ( ( rule__SecretConnector_long__UnorderedGroup_1 ) )
            // InternalDockerCompose.g:6663:2: ( rule__SecretConnector_long__UnorderedGroup_1 )
            {
             before(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1()); 
            // InternalDockerCompose.g:6664:2: ( rule__SecretConnector_long__UnorderedGroup_1 )
            // InternalDockerCompose.g:6664:3: rule__SecretConnector_long__UnorderedGroup_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__UnorderedGroup_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group__1__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group_1_0__0"
    // InternalDockerCompose.g:6673:1: rule__SecretConnector_long__Group_1_0__0 : rule__SecretConnector_long__Group_1_0__0__Impl rule__SecretConnector_long__Group_1_0__1 ;
    public final void rule__SecretConnector_long__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6677:1: ( rule__SecretConnector_long__Group_1_0__0__Impl rule__SecretConnector_long__Group_1_0__1 )
            // InternalDockerCompose.g:6678:2: rule__SecretConnector_long__Group_1_0__0__Impl rule__SecretConnector_long__Group_1_0__1
            {
            pushFollow(FOLLOW_7);
            rule__SecretConnector_long__Group_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_0__0"


    // $ANTLR start "rule__SecretConnector_long__Group_1_0__0__Impl"
    // InternalDockerCompose.g:6685:1: rule__SecretConnector_long__Group_1_0__0__Impl : ( 'source:' ) ;
    public final void rule__SecretConnector_long__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6689:1: ( ( 'source:' ) )
            // InternalDockerCompose.g:6690:1: ( 'source:' )
            {
            // InternalDockerCompose.g:6690:1: ( 'source:' )
            // InternalDockerCompose.g:6691:2: 'source:'
            {
             before(grammarAccess.getSecretConnector_longAccess().getSourceKeyword_1_0_0()); 
            match(input,70,FOLLOW_2); 
             after(grammarAccess.getSecretConnector_longAccess().getSourceKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_0__0__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group_1_0__1"
    // InternalDockerCompose.g:6700:1: rule__SecretConnector_long__Group_1_0__1 : rule__SecretConnector_long__Group_1_0__1__Impl ;
    public final void rule__SecretConnector_long__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6704:1: ( rule__SecretConnector_long__Group_1_0__1__Impl )
            // InternalDockerCompose.g:6705:2: rule__SecretConnector_long__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_0__1"


    // $ANTLR start "rule__SecretConnector_long__Group_1_0__1__Impl"
    // InternalDockerCompose.g:6711:1: rule__SecretConnector_long__Group_1_0__1__Impl : ( ( rule__SecretConnector_long__SecretAssignment_1_0_1 ) ) ;
    public final void rule__SecretConnector_long__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6715:1: ( ( ( rule__SecretConnector_long__SecretAssignment_1_0_1 ) ) )
            // InternalDockerCompose.g:6716:1: ( ( rule__SecretConnector_long__SecretAssignment_1_0_1 ) )
            {
            // InternalDockerCompose.g:6716:1: ( ( rule__SecretConnector_long__SecretAssignment_1_0_1 ) )
            // InternalDockerCompose.g:6717:2: ( rule__SecretConnector_long__SecretAssignment_1_0_1 )
            {
             before(grammarAccess.getSecretConnector_longAccess().getSecretAssignment_1_0_1()); 
            // InternalDockerCompose.g:6718:2: ( rule__SecretConnector_long__SecretAssignment_1_0_1 )
            // InternalDockerCompose.g:6718:3: rule__SecretConnector_long__SecretAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__SecretAssignment_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnector_longAccess().getSecretAssignment_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_0__1__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group_1_1__0"
    // InternalDockerCompose.g:6727:1: rule__SecretConnector_long__Group_1_1__0 : rule__SecretConnector_long__Group_1_1__0__Impl rule__SecretConnector_long__Group_1_1__1 ;
    public final void rule__SecretConnector_long__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6731:1: ( rule__SecretConnector_long__Group_1_1__0__Impl rule__SecretConnector_long__Group_1_1__1 )
            // InternalDockerCompose.g:6732:2: rule__SecretConnector_long__Group_1_1__0__Impl rule__SecretConnector_long__Group_1_1__1
            {
            pushFollow(FOLLOW_10);
            rule__SecretConnector_long__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_1__0"


    // $ANTLR start "rule__SecretConnector_long__Group_1_1__0__Impl"
    // InternalDockerCompose.g:6739:1: rule__SecretConnector_long__Group_1_1__0__Impl : ( 'target:' ) ;
    public final void rule__SecretConnector_long__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6743:1: ( ( 'target:' ) )
            // InternalDockerCompose.g:6744:1: ( 'target:' )
            {
            // InternalDockerCompose.g:6744:1: ( 'target:' )
            // InternalDockerCompose.g:6745:2: 'target:'
            {
             before(grammarAccess.getSecretConnector_longAccess().getTargetKeyword_1_1_0()); 
            match(input,72,FOLLOW_2); 
             after(grammarAccess.getSecretConnector_longAccess().getTargetKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_1__0__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group_1_1__1"
    // InternalDockerCompose.g:6754:1: rule__SecretConnector_long__Group_1_1__1 : rule__SecretConnector_long__Group_1_1__1__Impl ;
    public final void rule__SecretConnector_long__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6758:1: ( rule__SecretConnector_long__Group_1_1__1__Impl )
            // InternalDockerCompose.g:6759:2: rule__SecretConnector_long__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_1__1"


    // $ANTLR start "rule__SecretConnector_long__Group_1_1__1__Impl"
    // InternalDockerCompose.g:6765:1: rule__SecretConnector_long__Group_1_1__1__Impl : ( ( rule__SecretConnector_long__TargetAssignment_1_1_1 ) ) ;
    public final void rule__SecretConnector_long__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6769:1: ( ( ( rule__SecretConnector_long__TargetAssignment_1_1_1 ) ) )
            // InternalDockerCompose.g:6770:1: ( ( rule__SecretConnector_long__TargetAssignment_1_1_1 ) )
            {
            // InternalDockerCompose.g:6770:1: ( ( rule__SecretConnector_long__TargetAssignment_1_1_1 ) )
            // InternalDockerCompose.g:6771:2: ( rule__SecretConnector_long__TargetAssignment_1_1_1 )
            {
             before(grammarAccess.getSecretConnector_longAccess().getTargetAssignment_1_1_1()); 
            // InternalDockerCompose.g:6772:2: ( rule__SecretConnector_long__TargetAssignment_1_1_1 )
            // InternalDockerCompose.g:6772:3: rule__SecretConnector_long__TargetAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__TargetAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnector_longAccess().getTargetAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_1__1__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group_1_2__0"
    // InternalDockerCompose.g:6781:1: rule__SecretConnector_long__Group_1_2__0 : rule__SecretConnector_long__Group_1_2__0__Impl rule__SecretConnector_long__Group_1_2__1 ;
    public final void rule__SecretConnector_long__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6785:1: ( rule__SecretConnector_long__Group_1_2__0__Impl rule__SecretConnector_long__Group_1_2__1 )
            // InternalDockerCompose.g:6786:2: rule__SecretConnector_long__Group_1_2__0__Impl rule__SecretConnector_long__Group_1_2__1
            {
            pushFollow(FOLLOW_37);
            rule__SecretConnector_long__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_2__0"


    // $ANTLR start "rule__SecretConnector_long__Group_1_2__0__Impl"
    // InternalDockerCompose.g:6793:1: rule__SecretConnector_long__Group_1_2__0__Impl : ( 'uid:' ) ;
    public final void rule__SecretConnector_long__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6797:1: ( ( 'uid:' ) )
            // InternalDockerCompose.g:6798:1: ( 'uid:' )
            {
            // InternalDockerCompose.g:6798:1: ( 'uid:' )
            // InternalDockerCompose.g:6799:2: 'uid:'
            {
             before(grammarAccess.getSecretConnector_longAccess().getUidKeyword_1_2_0()); 
            match(input,79,FOLLOW_2); 
             after(grammarAccess.getSecretConnector_longAccess().getUidKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_2__0__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group_1_2__1"
    // InternalDockerCompose.g:6808:1: rule__SecretConnector_long__Group_1_2__1 : rule__SecretConnector_long__Group_1_2__1__Impl ;
    public final void rule__SecretConnector_long__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6812:1: ( rule__SecretConnector_long__Group_1_2__1__Impl )
            // InternalDockerCompose.g:6813:2: rule__SecretConnector_long__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_2__1"


    // $ANTLR start "rule__SecretConnector_long__Group_1_2__1__Impl"
    // InternalDockerCompose.g:6819:1: rule__SecretConnector_long__Group_1_2__1__Impl : ( ( rule__SecretConnector_long__UidAssignment_1_2_1 ) ) ;
    public final void rule__SecretConnector_long__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6823:1: ( ( ( rule__SecretConnector_long__UidAssignment_1_2_1 ) ) )
            // InternalDockerCompose.g:6824:1: ( ( rule__SecretConnector_long__UidAssignment_1_2_1 ) )
            {
            // InternalDockerCompose.g:6824:1: ( ( rule__SecretConnector_long__UidAssignment_1_2_1 ) )
            // InternalDockerCompose.g:6825:2: ( rule__SecretConnector_long__UidAssignment_1_2_1 )
            {
             before(grammarAccess.getSecretConnector_longAccess().getUidAssignment_1_2_1()); 
            // InternalDockerCompose.g:6826:2: ( rule__SecretConnector_long__UidAssignment_1_2_1 )
            // InternalDockerCompose.g:6826:3: rule__SecretConnector_long__UidAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__UidAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnector_longAccess().getUidAssignment_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_2__1__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group_1_3__0"
    // InternalDockerCompose.g:6835:1: rule__SecretConnector_long__Group_1_3__0 : rule__SecretConnector_long__Group_1_3__0__Impl rule__SecretConnector_long__Group_1_3__1 ;
    public final void rule__SecretConnector_long__Group_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6839:1: ( rule__SecretConnector_long__Group_1_3__0__Impl rule__SecretConnector_long__Group_1_3__1 )
            // InternalDockerCompose.g:6840:2: rule__SecretConnector_long__Group_1_3__0__Impl rule__SecretConnector_long__Group_1_3__1
            {
            pushFollow(FOLLOW_37);
            rule__SecretConnector_long__Group_1_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group_1_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_3__0"


    // $ANTLR start "rule__SecretConnector_long__Group_1_3__0__Impl"
    // InternalDockerCompose.g:6847:1: rule__SecretConnector_long__Group_1_3__0__Impl : ( 'gid:' ) ;
    public final void rule__SecretConnector_long__Group_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6851:1: ( ( 'gid:' ) )
            // InternalDockerCompose.g:6852:1: ( 'gid:' )
            {
            // InternalDockerCompose.g:6852:1: ( 'gid:' )
            // InternalDockerCompose.g:6853:2: 'gid:'
            {
             before(grammarAccess.getSecretConnector_longAccess().getGidKeyword_1_3_0()); 
            match(input,80,FOLLOW_2); 
             after(grammarAccess.getSecretConnector_longAccess().getGidKeyword_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_3__0__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group_1_3__1"
    // InternalDockerCompose.g:6862:1: rule__SecretConnector_long__Group_1_3__1 : rule__SecretConnector_long__Group_1_3__1__Impl ;
    public final void rule__SecretConnector_long__Group_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6866:1: ( rule__SecretConnector_long__Group_1_3__1__Impl )
            // InternalDockerCompose.g:6867:2: rule__SecretConnector_long__Group_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group_1_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_3__1"


    // $ANTLR start "rule__SecretConnector_long__Group_1_3__1__Impl"
    // InternalDockerCompose.g:6873:1: rule__SecretConnector_long__Group_1_3__1__Impl : ( ( rule__SecretConnector_long__GidAssignment_1_3_1 ) ) ;
    public final void rule__SecretConnector_long__Group_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6877:1: ( ( ( rule__SecretConnector_long__GidAssignment_1_3_1 ) ) )
            // InternalDockerCompose.g:6878:1: ( ( rule__SecretConnector_long__GidAssignment_1_3_1 ) )
            {
            // InternalDockerCompose.g:6878:1: ( ( rule__SecretConnector_long__GidAssignment_1_3_1 ) )
            // InternalDockerCompose.g:6879:2: ( rule__SecretConnector_long__GidAssignment_1_3_1 )
            {
             before(grammarAccess.getSecretConnector_longAccess().getGidAssignment_1_3_1()); 
            // InternalDockerCompose.g:6880:2: ( rule__SecretConnector_long__GidAssignment_1_3_1 )
            // InternalDockerCompose.g:6880:3: rule__SecretConnector_long__GidAssignment_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__GidAssignment_1_3_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnector_longAccess().getGidAssignment_1_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_3__1__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group_1_4__0"
    // InternalDockerCompose.g:6889:1: rule__SecretConnector_long__Group_1_4__0 : rule__SecretConnector_long__Group_1_4__0__Impl rule__SecretConnector_long__Group_1_4__1 ;
    public final void rule__SecretConnector_long__Group_1_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6893:1: ( rule__SecretConnector_long__Group_1_4__0__Impl rule__SecretConnector_long__Group_1_4__1 )
            // InternalDockerCompose.g:6894:2: rule__SecretConnector_long__Group_1_4__0__Impl rule__SecretConnector_long__Group_1_4__1
            {
            pushFollow(FOLLOW_12);
            rule__SecretConnector_long__Group_1_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group_1_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_4__0"


    // $ANTLR start "rule__SecretConnector_long__Group_1_4__0__Impl"
    // InternalDockerCompose.g:6901:1: rule__SecretConnector_long__Group_1_4__0__Impl : ( 'mode:' ) ;
    public final void rule__SecretConnector_long__Group_1_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6905:1: ( ( 'mode:' ) )
            // InternalDockerCompose.g:6906:1: ( 'mode:' )
            {
            // InternalDockerCompose.g:6906:1: ( 'mode:' )
            // InternalDockerCompose.g:6907:2: 'mode:'
            {
             before(grammarAccess.getSecretConnector_longAccess().getModeKeyword_1_4_0()); 
            match(input,81,FOLLOW_2); 
             after(grammarAccess.getSecretConnector_longAccess().getModeKeyword_1_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_4__0__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group_1_4__1"
    // InternalDockerCompose.g:6916:1: rule__SecretConnector_long__Group_1_4__1 : rule__SecretConnector_long__Group_1_4__1__Impl ;
    public final void rule__SecretConnector_long__Group_1_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6920:1: ( rule__SecretConnector_long__Group_1_4__1__Impl )
            // InternalDockerCompose.g:6921:2: rule__SecretConnector_long__Group_1_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group_1_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_4__1"


    // $ANTLR start "rule__SecretConnector_long__Group_1_4__1__Impl"
    // InternalDockerCompose.g:6927:1: rule__SecretConnector_long__Group_1_4__1__Impl : ( ( rule__SecretConnector_long__ModeAssignment_1_4_1 ) ) ;
    public final void rule__SecretConnector_long__Group_1_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6931:1: ( ( ( rule__SecretConnector_long__ModeAssignment_1_4_1 ) ) )
            // InternalDockerCompose.g:6932:1: ( ( rule__SecretConnector_long__ModeAssignment_1_4_1 ) )
            {
            // InternalDockerCompose.g:6932:1: ( ( rule__SecretConnector_long__ModeAssignment_1_4_1 ) )
            // InternalDockerCompose.g:6933:2: ( rule__SecretConnector_long__ModeAssignment_1_4_1 )
            {
             before(grammarAccess.getSecretConnector_longAccess().getModeAssignment_1_4_1()); 
            // InternalDockerCompose.g:6934:2: ( rule__SecretConnector_long__ModeAssignment_1_4_1 )
            // InternalDockerCompose.g:6934:3: rule__SecretConnector_long__ModeAssignment_1_4_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__ModeAssignment_1_4_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnector_longAccess().getModeAssignment_1_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_4__1__Impl"


    // $ANTLR start "rule__SecretConnector_short__Group__0"
    // InternalDockerCompose.g:6943:1: rule__SecretConnector_short__Group__0 : rule__SecretConnector_short__Group__0__Impl rule__SecretConnector_short__Group__1 ;
    public final void rule__SecretConnector_short__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6947:1: ( rule__SecretConnector_short__Group__0__Impl rule__SecretConnector_short__Group__1 )
            // InternalDockerCompose.g:6948:2: rule__SecretConnector_short__Group__0__Impl rule__SecretConnector_short__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__SecretConnector_short__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector_short__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_short__Group__0"


    // $ANTLR start "rule__SecretConnector_short__Group__0__Impl"
    // InternalDockerCompose.g:6955:1: rule__SecretConnector_short__Group__0__Impl : ( () ) ;
    public final void rule__SecretConnector_short__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6959:1: ( ( () ) )
            // InternalDockerCompose.g:6960:1: ( () )
            {
            // InternalDockerCompose.g:6960:1: ( () )
            // InternalDockerCompose.g:6961:2: ()
            {
             before(grammarAccess.getSecretConnector_shortAccess().getSecretConnectorAction_0()); 
            // InternalDockerCompose.g:6962:2: ()
            // InternalDockerCompose.g:6962:3: 
            {
            }

             after(grammarAccess.getSecretConnector_shortAccess().getSecretConnectorAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_short__Group__0__Impl"


    // $ANTLR start "rule__SecretConnector_short__Group__1"
    // InternalDockerCompose.g:6970:1: rule__SecretConnector_short__Group__1 : rule__SecretConnector_short__Group__1__Impl ;
    public final void rule__SecretConnector_short__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6974:1: ( rule__SecretConnector_short__Group__1__Impl )
            // InternalDockerCompose.g:6975:2: rule__SecretConnector_short__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_short__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_short__Group__1"


    // $ANTLR start "rule__SecretConnector_short__Group__1__Impl"
    // InternalDockerCompose.g:6981:1: rule__SecretConnector_short__Group__1__Impl : ( ( rule__SecretConnector_short__SecretAssignment_1 ) ) ;
    public final void rule__SecretConnector_short__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6985:1: ( ( ( rule__SecretConnector_short__SecretAssignment_1 ) ) )
            // InternalDockerCompose.g:6986:1: ( ( rule__SecretConnector_short__SecretAssignment_1 ) )
            {
            // InternalDockerCompose.g:6986:1: ( ( rule__SecretConnector_short__SecretAssignment_1 ) )
            // InternalDockerCompose.g:6987:2: ( rule__SecretConnector_short__SecretAssignment_1 )
            {
             before(grammarAccess.getSecretConnector_shortAccess().getSecretAssignment_1()); 
            // InternalDockerCompose.g:6988:2: ( rule__SecretConnector_short__SecretAssignment_1 )
            // InternalDockerCompose.g:6988:3: rule__SecretConnector_short__SecretAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_short__SecretAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnector_shortAccess().getSecretAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_short__Group__1__Impl"


    // $ANTLR start "rule__Network__Group__0"
    // InternalDockerCompose.g:6997:1: rule__Network__Group__0 : rule__Network__Group__0__Impl rule__Network__Group__1 ;
    public final void rule__Network__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7001:1: ( rule__Network__Group__0__Impl rule__Network__Group__1 )
            // InternalDockerCompose.g:7002:2: rule__Network__Group__0__Impl rule__Network__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__Network__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__0"


    // $ANTLR start "rule__Network__Group__0__Impl"
    // InternalDockerCompose.g:7009:1: rule__Network__Group__0__Impl : ( () ) ;
    public final void rule__Network__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7013:1: ( ( () ) )
            // InternalDockerCompose.g:7014:1: ( () )
            {
            // InternalDockerCompose.g:7014:1: ( () )
            // InternalDockerCompose.g:7015:2: ()
            {
             before(grammarAccess.getNetworkAccess().getNetworkAction_0()); 
            // InternalDockerCompose.g:7016:2: ()
            // InternalDockerCompose.g:7016:3: 
            {
            }

             after(grammarAccess.getNetworkAccess().getNetworkAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__0__Impl"


    // $ANTLR start "rule__Network__Group__1"
    // InternalDockerCompose.g:7024:1: rule__Network__Group__1 : rule__Network__Group__1__Impl rule__Network__Group__2 ;
    public final void rule__Network__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7028:1: ( rule__Network__Group__1__Impl rule__Network__Group__2 )
            // InternalDockerCompose.g:7029:2: rule__Network__Group__1__Impl rule__Network__Group__2
            {
            pushFollow(FOLLOW_8);
            rule__Network__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__1"


    // $ANTLR start "rule__Network__Group__1__Impl"
    // InternalDockerCompose.g:7036:1: rule__Network__Group__1__Impl : ( ( rule__Network__NameAssignment_1 ) ) ;
    public final void rule__Network__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7040:1: ( ( ( rule__Network__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:7041:1: ( ( rule__Network__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:7041:1: ( ( rule__Network__NameAssignment_1 ) )
            // InternalDockerCompose.g:7042:2: ( rule__Network__NameAssignment_1 )
            {
             before(grammarAccess.getNetworkAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:7043:2: ( rule__Network__NameAssignment_1 )
            // InternalDockerCompose.g:7043:3: rule__Network__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__1__Impl"


    // $ANTLR start "rule__Network__Group__2"
    // InternalDockerCompose.g:7051:1: rule__Network__Group__2 : rule__Network__Group__2__Impl rule__Network__Group__3 ;
    public final void rule__Network__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7055:1: ( rule__Network__Group__2__Impl rule__Network__Group__3 )
            // InternalDockerCompose.g:7056:2: rule__Network__Group__2__Impl rule__Network__Group__3
            {
            pushFollow(FOLLOW_38);
            rule__Network__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__2"


    // $ANTLR start "rule__Network__Group__2__Impl"
    // InternalDockerCompose.g:7063:1: rule__Network__Group__2__Impl : ( ':' ) ;
    public final void rule__Network__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7067:1: ( ( ':' ) )
            // InternalDockerCompose.g:7068:1: ( ':' )
            {
            // InternalDockerCompose.g:7068:1: ( ':' )
            // InternalDockerCompose.g:7069:2: ':'
            {
             before(grammarAccess.getNetworkAccess().getColonKeyword_2()); 
            match(input,46,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__2__Impl"


    // $ANTLR start "rule__Network__Group__3"
    // InternalDockerCompose.g:7078:1: rule__Network__Group__3 : rule__Network__Group__3__Impl ;
    public final void rule__Network__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7082:1: ( rule__Network__Group__3__Impl )
            // InternalDockerCompose.g:7083:2: rule__Network__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__3"


    // $ANTLR start "rule__Network__Group__3__Impl"
    // InternalDockerCompose.g:7089:1: rule__Network__Group__3__Impl : ( ( rule__Network__Alternatives_3 ) ) ;
    public final void rule__Network__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7093:1: ( ( ( rule__Network__Alternatives_3 ) ) )
            // InternalDockerCompose.g:7094:1: ( ( rule__Network__Alternatives_3 ) )
            {
            // InternalDockerCompose.g:7094:1: ( ( rule__Network__Alternatives_3 ) )
            // InternalDockerCompose.g:7095:2: ( rule__Network__Alternatives_3 )
            {
             before(grammarAccess.getNetworkAccess().getAlternatives_3()); 
            // InternalDockerCompose.g:7096:2: ( rule__Network__Alternatives_3 )
            // InternalDockerCompose.g:7096:3: rule__Network__Alternatives_3
            {
            pushFollow(FOLLOW_2);
            rule__Network__Alternatives_3();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getAlternatives_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__3__Impl"


    // $ANTLR start "rule__Network__Group_3_0__0"
    // InternalDockerCompose.g:7105:1: rule__Network__Group_3_0__0 : rule__Network__Group_3_0__0__Impl rule__Network__Group_3_0__1 ;
    public final void rule__Network__Group_3_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7109:1: ( rule__Network__Group_3_0__0__Impl rule__Network__Group_3_0__1 )
            // InternalDockerCompose.g:7110:2: rule__Network__Group_3_0__0__Impl rule__Network__Group_3_0__1
            {
            pushFollow(FOLLOW_39);
            rule__Network__Group_3_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_0__0"


    // $ANTLR start "rule__Network__Group_3_0__0__Impl"
    // InternalDockerCompose.g:7117:1: rule__Network__Group_3_0__0__Impl : ( '{' ) ;
    public final void rule__Network__Group_3_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7121:1: ( ( '{' ) )
            // InternalDockerCompose.g:7122:1: ( '{' )
            {
            // InternalDockerCompose.g:7122:1: ( '{' )
            // InternalDockerCompose.g:7123:2: '{'
            {
             before(grammarAccess.getNetworkAccess().getLeftCurlyBracketKeyword_3_0_0()); 
            match(input,82,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getLeftCurlyBracketKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_0__0__Impl"


    // $ANTLR start "rule__Network__Group_3_0__1"
    // InternalDockerCompose.g:7132:1: rule__Network__Group_3_0__1 : rule__Network__Group_3_0__1__Impl ;
    public final void rule__Network__Group_3_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7136:1: ( rule__Network__Group_3_0__1__Impl )
            // InternalDockerCompose.g:7137:2: rule__Network__Group_3_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_0__1"


    // $ANTLR start "rule__Network__Group_3_0__1__Impl"
    // InternalDockerCompose.g:7143:1: rule__Network__Group_3_0__1__Impl : ( '}' ) ;
    public final void rule__Network__Group_3_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7147:1: ( ( '}' ) )
            // InternalDockerCompose.g:7148:1: ( '}' )
            {
            // InternalDockerCompose.g:7148:1: ( '}' )
            // InternalDockerCompose.g:7149:2: '}'
            {
             before(grammarAccess.getNetworkAccess().getRightCurlyBracketKeyword_3_0_1()); 
            match(input,83,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getRightCurlyBracketKeyword_3_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_0__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_0__0"
    // InternalDockerCompose.g:7159:1: rule__Network__Group_3_1_0__0 : rule__Network__Group_3_1_0__0__Impl rule__Network__Group_3_1_0__1 ;
    public final void rule__Network__Group_3_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7163:1: ( rule__Network__Group_3_1_0__0__Impl rule__Network__Group_3_1_0__1 )
            // InternalDockerCompose.g:7164:2: rule__Network__Group_3_1_0__0__Impl rule__Network__Group_3_1_0__1
            {
            pushFollow(FOLLOW_7);
            rule__Network__Group_3_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_0__0"


    // $ANTLR start "rule__Network__Group_3_1_0__0__Impl"
    // InternalDockerCompose.g:7171:1: rule__Network__Group_3_1_0__0__Impl : ( 'driver:' ) ;
    public final void rule__Network__Group_3_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7175:1: ( ( 'driver:' ) )
            // InternalDockerCompose.g:7176:1: ( 'driver:' )
            {
            // InternalDockerCompose.g:7176:1: ( 'driver:' )
            // InternalDockerCompose.g:7177:2: 'driver:'
            {
             before(grammarAccess.getNetworkAccess().getDriverKeyword_3_1_0_0()); 
            match(input,84,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getDriverKeyword_3_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_0__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_0__1"
    // InternalDockerCompose.g:7186:1: rule__Network__Group_3_1_0__1 : rule__Network__Group_3_1_0__1__Impl ;
    public final void rule__Network__Group_3_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7190:1: ( rule__Network__Group_3_1_0__1__Impl )
            // InternalDockerCompose.g:7191:2: rule__Network__Group_3_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_0__1"


    // $ANTLR start "rule__Network__Group_3_1_0__1__Impl"
    // InternalDockerCompose.g:7197:1: rule__Network__Group_3_1_0__1__Impl : ( ( rule__Network__DriverAssignment_3_1_0_1 ) ) ;
    public final void rule__Network__Group_3_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7201:1: ( ( ( rule__Network__DriverAssignment_3_1_0_1 ) ) )
            // InternalDockerCompose.g:7202:1: ( ( rule__Network__DriverAssignment_3_1_0_1 ) )
            {
            // InternalDockerCompose.g:7202:1: ( ( rule__Network__DriverAssignment_3_1_0_1 ) )
            // InternalDockerCompose.g:7203:2: ( rule__Network__DriverAssignment_3_1_0_1 )
            {
             before(grammarAccess.getNetworkAccess().getDriverAssignment_3_1_0_1()); 
            // InternalDockerCompose.g:7204:2: ( rule__Network__DriverAssignment_3_1_0_1 )
            // InternalDockerCompose.g:7204:3: rule__Network__DriverAssignment_3_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__DriverAssignment_3_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getDriverAssignment_3_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_0__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_1__0"
    // InternalDockerCompose.g:7213:1: rule__Network__Group_3_1_1__0 : rule__Network__Group_3_1_1__0__Impl rule__Network__Group_3_1_1__1 ;
    public final void rule__Network__Group_3_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7217:1: ( rule__Network__Group_3_1_1__0__Impl rule__Network__Group_3_1_1__1 )
            // InternalDockerCompose.g:7218:2: rule__Network__Group_3_1_1__0__Impl rule__Network__Group_3_1_1__1
            {
            pushFollow(FOLLOW_14);
            rule__Network__Group_3_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_1__0"


    // $ANTLR start "rule__Network__Group_3_1_1__0__Impl"
    // InternalDockerCompose.g:7225:1: rule__Network__Group_3_1_1__0__Impl : ( 'attachable:' ) ;
    public final void rule__Network__Group_3_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7229:1: ( ( 'attachable:' ) )
            // InternalDockerCompose.g:7230:1: ( 'attachable:' )
            {
            // InternalDockerCompose.g:7230:1: ( 'attachable:' )
            // InternalDockerCompose.g:7231:2: 'attachable:'
            {
             before(grammarAccess.getNetworkAccess().getAttachableKeyword_3_1_1_0()); 
            match(input,85,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getAttachableKeyword_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_1__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_1__1"
    // InternalDockerCompose.g:7240:1: rule__Network__Group_3_1_1__1 : rule__Network__Group_3_1_1__1__Impl ;
    public final void rule__Network__Group_3_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7244:1: ( rule__Network__Group_3_1_1__1__Impl )
            // InternalDockerCompose.g:7245:2: rule__Network__Group_3_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_1__1"


    // $ANTLR start "rule__Network__Group_3_1_1__1__Impl"
    // InternalDockerCompose.g:7251:1: rule__Network__Group_3_1_1__1__Impl : ( ( rule__Network__AttachableAssignment_3_1_1_1 ) ) ;
    public final void rule__Network__Group_3_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7255:1: ( ( ( rule__Network__AttachableAssignment_3_1_1_1 ) ) )
            // InternalDockerCompose.g:7256:1: ( ( rule__Network__AttachableAssignment_3_1_1_1 ) )
            {
            // InternalDockerCompose.g:7256:1: ( ( rule__Network__AttachableAssignment_3_1_1_1 ) )
            // InternalDockerCompose.g:7257:2: ( rule__Network__AttachableAssignment_3_1_1_1 )
            {
             before(grammarAccess.getNetworkAccess().getAttachableAssignment_3_1_1_1()); 
            // InternalDockerCompose.g:7258:2: ( rule__Network__AttachableAssignment_3_1_1_1 )
            // InternalDockerCompose.g:7258:3: rule__Network__AttachableAssignment_3_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__AttachableAssignment_3_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getAttachableAssignment_3_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_1__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_2__0"
    // InternalDockerCompose.g:7267:1: rule__Network__Group_3_1_2__0 : rule__Network__Group_3_1_2__0__Impl rule__Network__Group_3_1_2__1 ;
    public final void rule__Network__Group_3_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7271:1: ( rule__Network__Group_3_1_2__0__Impl rule__Network__Group_3_1_2__1 )
            // InternalDockerCompose.g:7272:2: rule__Network__Group_3_1_2__0__Impl rule__Network__Group_3_1_2__1
            {
            pushFollow(FOLLOW_14);
            rule__Network__Group_3_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_2__0"


    // $ANTLR start "rule__Network__Group_3_1_2__0__Impl"
    // InternalDockerCompose.g:7279:1: rule__Network__Group_3_1_2__0__Impl : ( 'enable_ipv6:' ) ;
    public final void rule__Network__Group_3_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7283:1: ( ( 'enable_ipv6:' ) )
            // InternalDockerCompose.g:7284:1: ( 'enable_ipv6:' )
            {
            // InternalDockerCompose.g:7284:1: ( 'enable_ipv6:' )
            // InternalDockerCompose.g:7285:2: 'enable_ipv6:'
            {
             before(grammarAccess.getNetworkAccess().getEnable_ipv6Keyword_3_1_2_0()); 
            match(input,86,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getEnable_ipv6Keyword_3_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_2__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_2__1"
    // InternalDockerCompose.g:7294:1: rule__Network__Group_3_1_2__1 : rule__Network__Group_3_1_2__1__Impl ;
    public final void rule__Network__Group_3_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7298:1: ( rule__Network__Group_3_1_2__1__Impl )
            // InternalDockerCompose.g:7299:2: rule__Network__Group_3_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_2__1"


    // $ANTLR start "rule__Network__Group_3_1_2__1__Impl"
    // InternalDockerCompose.g:7305:1: rule__Network__Group_3_1_2__1__Impl : ( ( rule__Network__Enable_ipv6Assignment_3_1_2_1 ) ) ;
    public final void rule__Network__Group_3_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7309:1: ( ( ( rule__Network__Enable_ipv6Assignment_3_1_2_1 ) ) )
            // InternalDockerCompose.g:7310:1: ( ( rule__Network__Enable_ipv6Assignment_3_1_2_1 ) )
            {
            // InternalDockerCompose.g:7310:1: ( ( rule__Network__Enable_ipv6Assignment_3_1_2_1 ) )
            // InternalDockerCompose.g:7311:2: ( rule__Network__Enable_ipv6Assignment_3_1_2_1 )
            {
             before(grammarAccess.getNetworkAccess().getEnable_ipv6Assignment_3_1_2_1()); 
            // InternalDockerCompose.g:7312:2: ( rule__Network__Enable_ipv6Assignment_3_1_2_1 )
            // InternalDockerCompose.g:7312:3: rule__Network__Enable_ipv6Assignment_3_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__Enable_ipv6Assignment_3_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getEnable_ipv6Assignment_3_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_2__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_3__0"
    // InternalDockerCompose.g:7321:1: rule__Network__Group_3_1_3__0 : rule__Network__Group_3_1_3__0__Impl rule__Network__Group_3_1_3__1 ;
    public final void rule__Network__Group_3_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7325:1: ( rule__Network__Group_3_1_3__0__Impl rule__Network__Group_3_1_3__1 )
            // InternalDockerCompose.g:7326:2: rule__Network__Group_3_1_3__0__Impl rule__Network__Group_3_1_3__1
            {
            pushFollow(FOLLOW_14);
            rule__Network__Group_3_1_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_3__0"


    // $ANTLR start "rule__Network__Group_3_1_3__0__Impl"
    // InternalDockerCompose.g:7333:1: rule__Network__Group_3_1_3__0__Impl : ( 'internal:' ) ;
    public final void rule__Network__Group_3_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7337:1: ( ( 'internal:' ) )
            // InternalDockerCompose.g:7338:1: ( 'internal:' )
            {
            // InternalDockerCompose.g:7338:1: ( 'internal:' )
            // InternalDockerCompose.g:7339:2: 'internal:'
            {
             before(grammarAccess.getNetworkAccess().getInternalKeyword_3_1_3_0()); 
            match(input,87,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getInternalKeyword_3_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_3__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_3__1"
    // InternalDockerCompose.g:7348:1: rule__Network__Group_3_1_3__1 : rule__Network__Group_3_1_3__1__Impl ;
    public final void rule__Network__Group_3_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7352:1: ( rule__Network__Group_3_1_3__1__Impl )
            // InternalDockerCompose.g:7353:2: rule__Network__Group_3_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_3__1"


    // $ANTLR start "rule__Network__Group_3_1_3__1__Impl"
    // InternalDockerCompose.g:7359:1: rule__Network__Group_3_1_3__1__Impl : ( ( rule__Network__InternalAssignment_3_1_3_1 ) ) ;
    public final void rule__Network__Group_3_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7363:1: ( ( ( rule__Network__InternalAssignment_3_1_3_1 ) ) )
            // InternalDockerCompose.g:7364:1: ( ( rule__Network__InternalAssignment_3_1_3_1 ) )
            {
            // InternalDockerCompose.g:7364:1: ( ( rule__Network__InternalAssignment_3_1_3_1 ) )
            // InternalDockerCompose.g:7365:2: ( rule__Network__InternalAssignment_3_1_3_1 )
            {
             before(grammarAccess.getNetworkAccess().getInternalAssignment_3_1_3_1()); 
            // InternalDockerCompose.g:7366:2: ( rule__Network__InternalAssignment_3_1_3_1 )
            // InternalDockerCompose.g:7366:3: rule__Network__InternalAssignment_3_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__InternalAssignment_3_1_3_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getInternalAssignment_3_1_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_3__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_4__0"
    // InternalDockerCompose.g:7375:1: rule__Network__Group_3_1_4__0 : rule__Network__Group_3_1_4__0__Impl rule__Network__Group_3_1_4__1 ;
    public final void rule__Network__Group_3_1_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7379:1: ( rule__Network__Group_3_1_4__0__Impl rule__Network__Group_3_1_4__1 )
            // InternalDockerCompose.g:7380:2: rule__Network__Group_3_1_4__0__Impl rule__Network__Group_3_1_4__1
            {
            pushFollow(FOLLOW_14);
            rule__Network__Group_3_1_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_4__0"


    // $ANTLR start "rule__Network__Group_3_1_4__0__Impl"
    // InternalDockerCompose.g:7387:1: rule__Network__Group_3_1_4__0__Impl : ( 'external:' ) ;
    public final void rule__Network__Group_3_1_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7391:1: ( ( 'external:' ) )
            // InternalDockerCompose.g:7392:1: ( 'external:' )
            {
            // InternalDockerCompose.g:7392:1: ( 'external:' )
            // InternalDockerCompose.g:7393:2: 'external:'
            {
             before(grammarAccess.getNetworkAccess().getExternalKeyword_3_1_4_0()); 
            match(input,88,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getExternalKeyword_3_1_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_4__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_4__1"
    // InternalDockerCompose.g:7402:1: rule__Network__Group_3_1_4__1 : rule__Network__Group_3_1_4__1__Impl ;
    public final void rule__Network__Group_3_1_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7406:1: ( rule__Network__Group_3_1_4__1__Impl )
            // InternalDockerCompose.g:7407:2: rule__Network__Group_3_1_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_4__1"


    // $ANTLR start "rule__Network__Group_3_1_4__1__Impl"
    // InternalDockerCompose.g:7413:1: rule__Network__Group_3_1_4__1__Impl : ( ( rule__Network__ExternalAssignment_3_1_4_1 ) ) ;
    public final void rule__Network__Group_3_1_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7417:1: ( ( ( rule__Network__ExternalAssignment_3_1_4_1 ) ) )
            // InternalDockerCompose.g:7418:1: ( ( rule__Network__ExternalAssignment_3_1_4_1 ) )
            {
            // InternalDockerCompose.g:7418:1: ( ( rule__Network__ExternalAssignment_3_1_4_1 ) )
            // InternalDockerCompose.g:7419:2: ( rule__Network__ExternalAssignment_3_1_4_1 )
            {
             before(grammarAccess.getNetworkAccess().getExternalAssignment_3_1_4_1()); 
            // InternalDockerCompose.g:7420:2: ( rule__Network__ExternalAssignment_3_1_4_1 )
            // InternalDockerCompose.g:7420:3: rule__Network__ExternalAssignment_3_1_4_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__ExternalAssignment_3_1_4_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getExternalAssignment_3_1_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_4__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_5__0"
    // InternalDockerCompose.g:7429:1: rule__Network__Group_3_1_5__0 : rule__Network__Group_3_1_5__0__Impl rule__Network__Group_3_1_5__1 ;
    public final void rule__Network__Group_3_1_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7433:1: ( rule__Network__Group_3_1_5__0__Impl rule__Network__Group_3_1_5__1 )
            // InternalDockerCompose.g:7434:2: rule__Network__Group_3_1_5__0__Impl rule__Network__Group_3_1_5__1
            {
            pushFollow(FOLLOW_7);
            rule__Network__Group_3_1_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_5__0"


    // $ANTLR start "rule__Network__Group_3_1_5__0__Impl"
    // InternalDockerCompose.g:7441:1: rule__Network__Group_3_1_5__0__Impl : ( 'name:' ) ;
    public final void rule__Network__Group_3_1_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7445:1: ( ( 'name:' ) )
            // InternalDockerCompose.g:7446:1: ( 'name:' )
            {
            // InternalDockerCompose.g:7446:1: ( 'name:' )
            // InternalDockerCompose.g:7447:2: 'name:'
            {
             before(grammarAccess.getNetworkAccess().getNameKeyword_3_1_5_0()); 
            match(input,89,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getNameKeyword_3_1_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_5__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_5__1"
    // InternalDockerCompose.g:7456:1: rule__Network__Group_3_1_5__1 : rule__Network__Group_3_1_5__1__Impl ;
    public final void rule__Network__Group_3_1_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7460:1: ( rule__Network__Group_3_1_5__1__Impl )
            // InternalDockerCompose.g:7461:2: rule__Network__Group_3_1_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_5__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_5__1"


    // $ANTLR start "rule__Network__Group_3_1_5__1__Impl"
    // InternalDockerCompose.g:7467:1: rule__Network__Group_3_1_5__1__Impl : ( ( rule__Network__Network_nameAssignment_3_1_5_1 ) ) ;
    public final void rule__Network__Group_3_1_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7471:1: ( ( ( rule__Network__Network_nameAssignment_3_1_5_1 ) ) )
            // InternalDockerCompose.g:7472:1: ( ( rule__Network__Network_nameAssignment_3_1_5_1 ) )
            {
            // InternalDockerCompose.g:7472:1: ( ( rule__Network__Network_nameAssignment_3_1_5_1 ) )
            // InternalDockerCompose.g:7473:2: ( rule__Network__Network_nameAssignment_3_1_5_1 )
            {
             before(grammarAccess.getNetworkAccess().getNetwork_nameAssignment_3_1_5_1()); 
            // InternalDockerCompose.g:7474:2: ( rule__Network__Network_nameAssignment_3_1_5_1 )
            // InternalDockerCompose.g:7474:3: rule__Network__Network_nameAssignment_3_1_5_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__Network_nameAssignment_3_1_5_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getNetwork_nameAssignment_3_1_5_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_5__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_6__0"
    // InternalDockerCompose.g:7483:1: rule__Network__Group_3_1_6__0 : rule__Network__Group_3_1_6__0__Impl rule__Network__Group_3_1_6__1 ;
    public final void rule__Network__Group_3_1_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7487:1: ( rule__Network__Group_3_1_6__0__Impl rule__Network__Group_3_1_6__1 )
            // InternalDockerCompose.g:7488:2: rule__Network__Group_3_1_6__0__Impl rule__Network__Group_3_1_6__1
            {
            pushFollow(FOLLOW_7);
            rule__Network__Group_3_1_6__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_6__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_6__0"


    // $ANTLR start "rule__Network__Group_3_1_6__0__Impl"
    // InternalDockerCompose.g:7495:1: rule__Network__Group_3_1_6__0__Impl : ( 'labels:' ) ;
    public final void rule__Network__Group_3_1_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7499:1: ( ( 'labels:' ) )
            // InternalDockerCompose.g:7500:1: ( 'labels:' )
            {
            // InternalDockerCompose.g:7500:1: ( 'labels:' )
            // InternalDockerCompose.g:7501:2: 'labels:'
            {
             before(grammarAccess.getNetworkAccess().getLabelsKeyword_3_1_6_0()); 
            match(input,90,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getLabelsKeyword_3_1_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_6__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_6__1"
    // InternalDockerCompose.g:7510:1: rule__Network__Group_3_1_6__1 : rule__Network__Group_3_1_6__1__Impl ;
    public final void rule__Network__Group_3_1_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7514:1: ( rule__Network__Group_3_1_6__1__Impl )
            // InternalDockerCompose.g:7515:2: rule__Network__Group_3_1_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_6__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_6__1"


    // $ANTLR start "rule__Network__Group_3_1_6__1__Impl"
    // InternalDockerCompose.g:7521:1: rule__Network__Group_3_1_6__1__Impl : ( ( ( rule__Network__LabelsAssignment_3_1_6_1 ) ) ( ( rule__Network__LabelsAssignment_3_1_6_1 )* ) ) ;
    public final void rule__Network__Group_3_1_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7525:1: ( ( ( ( rule__Network__LabelsAssignment_3_1_6_1 ) ) ( ( rule__Network__LabelsAssignment_3_1_6_1 )* ) ) )
            // InternalDockerCompose.g:7526:1: ( ( ( rule__Network__LabelsAssignment_3_1_6_1 ) ) ( ( rule__Network__LabelsAssignment_3_1_6_1 )* ) )
            {
            // InternalDockerCompose.g:7526:1: ( ( ( rule__Network__LabelsAssignment_3_1_6_1 ) ) ( ( rule__Network__LabelsAssignment_3_1_6_1 )* ) )
            // InternalDockerCompose.g:7527:2: ( ( rule__Network__LabelsAssignment_3_1_6_1 ) ) ( ( rule__Network__LabelsAssignment_3_1_6_1 )* )
            {
            // InternalDockerCompose.g:7527:2: ( ( rule__Network__LabelsAssignment_3_1_6_1 ) )
            // InternalDockerCompose.g:7528:3: ( rule__Network__LabelsAssignment_3_1_6_1 )
            {
             before(grammarAccess.getNetworkAccess().getLabelsAssignment_3_1_6_1()); 
            // InternalDockerCompose.g:7529:3: ( rule__Network__LabelsAssignment_3_1_6_1 )
            // InternalDockerCompose.g:7529:4: rule__Network__LabelsAssignment_3_1_6_1
            {
            pushFollow(FOLLOW_4);
            rule__Network__LabelsAssignment_3_1_6_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getLabelsAssignment_3_1_6_1()); 

            }

            // InternalDockerCompose.g:7532:2: ( ( rule__Network__LabelsAssignment_3_1_6_1 )* )
            // InternalDockerCompose.g:7533:3: ( rule__Network__LabelsAssignment_3_1_6_1 )*
            {
             before(grammarAccess.getNetworkAccess().getLabelsAssignment_3_1_6_1()); 
            // InternalDockerCompose.g:7534:3: ( rule__Network__LabelsAssignment_3_1_6_1 )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==RULE_STRING) ) {
                    int LA55_2 = input.LA(2);

                    if ( (LA55_2==46) ) {
                        int LA55_4 = input.LA(3);

                        if ( (LA55_4==RULE_STRING) ) {
                            int LA55_5 = input.LA(4);

                            if ( (LA55_5==EOF||(LA55_5>=RULE_STRING && LA55_5<=RULE_ID)||(LA55_5>=40 && LA55_5<=45)||(LA55_5>=84 && LA55_5<=92)) ) {
                                alt55=1;
                            }


                        }
                        else if ( (LA55_4==RULE_ID) ) {
                            int LA55_6 = input.LA(4);

                            if ( (LA55_6==EOF||(LA55_6>=RULE_STRING && LA55_6<=RULE_ID)||(LA55_6>=40 && LA55_6<=45)||(LA55_6>=84 && LA55_6<=92)) ) {
                                alt55=1;
                            }


                        }


                    }


                }
                else if ( (LA55_0==RULE_ID) ) {
                    int LA55_3 = input.LA(2);

                    if ( (LA55_3==46) ) {
                        int LA55_4 = input.LA(3);

                        if ( (LA55_4==RULE_STRING) ) {
                            int LA55_5 = input.LA(4);

                            if ( (LA55_5==EOF||(LA55_5>=RULE_STRING && LA55_5<=RULE_ID)||(LA55_5>=40 && LA55_5<=45)||(LA55_5>=84 && LA55_5<=92)) ) {
                                alt55=1;
                            }


                        }
                        else if ( (LA55_4==RULE_ID) ) {
                            int LA55_6 = input.LA(4);

                            if ( (LA55_6==EOF||(LA55_6>=RULE_STRING && LA55_6<=RULE_ID)||(LA55_6>=40 && LA55_6<=45)||(LA55_6>=84 && LA55_6<=92)) ) {
                                alt55=1;
                            }


                        }


                    }


                }


                switch (alt55) {
            	case 1 :
            	    // InternalDockerCompose.g:7534:4: rule__Network__LabelsAssignment_3_1_6_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__Network__LabelsAssignment_3_1_6_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);

             after(grammarAccess.getNetworkAccess().getLabelsAssignment_3_1_6_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_6__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_7__0"
    // InternalDockerCompose.g:7544:1: rule__Network__Group_3_1_7__0 : rule__Network__Group_3_1_7__0__Impl rule__Network__Group_3_1_7__1 ;
    public final void rule__Network__Group_3_1_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7548:1: ( rule__Network__Group_3_1_7__0__Impl rule__Network__Group_3_1_7__1 )
            // InternalDockerCompose.g:7549:2: rule__Network__Group_3_1_7__0__Impl rule__Network__Group_3_1_7__1
            {
            pushFollow(FOLLOW_7);
            rule__Network__Group_3_1_7__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_7__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_7__0"


    // $ANTLR start "rule__Network__Group_3_1_7__0__Impl"
    // InternalDockerCompose.g:7556:1: rule__Network__Group_3_1_7__0__Impl : ( 'driver_opts:' ) ;
    public final void rule__Network__Group_3_1_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7560:1: ( ( 'driver_opts:' ) )
            // InternalDockerCompose.g:7561:1: ( 'driver_opts:' )
            {
            // InternalDockerCompose.g:7561:1: ( 'driver_opts:' )
            // InternalDockerCompose.g:7562:2: 'driver_opts:'
            {
             before(grammarAccess.getNetworkAccess().getDriver_optsKeyword_3_1_7_0()); 
            match(input,91,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getDriver_optsKeyword_3_1_7_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_7__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_7__1"
    // InternalDockerCompose.g:7571:1: rule__Network__Group_3_1_7__1 : rule__Network__Group_3_1_7__1__Impl ;
    public final void rule__Network__Group_3_1_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7575:1: ( rule__Network__Group_3_1_7__1__Impl )
            // InternalDockerCompose.g:7576:2: rule__Network__Group_3_1_7__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_7__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_7__1"


    // $ANTLR start "rule__Network__Group_3_1_7__1__Impl"
    // InternalDockerCompose.g:7582:1: rule__Network__Group_3_1_7__1__Impl : ( ( ( rule__Network__Driver_optsAssignment_3_1_7_1 ) ) ( ( rule__Network__Driver_optsAssignment_3_1_7_1 )* ) ) ;
    public final void rule__Network__Group_3_1_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7586:1: ( ( ( ( rule__Network__Driver_optsAssignment_3_1_7_1 ) ) ( ( rule__Network__Driver_optsAssignment_3_1_7_1 )* ) ) )
            // InternalDockerCompose.g:7587:1: ( ( ( rule__Network__Driver_optsAssignment_3_1_7_1 ) ) ( ( rule__Network__Driver_optsAssignment_3_1_7_1 )* ) )
            {
            // InternalDockerCompose.g:7587:1: ( ( ( rule__Network__Driver_optsAssignment_3_1_7_1 ) ) ( ( rule__Network__Driver_optsAssignment_3_1_7_1 )* ) )
            // InternalDockerCompose.g:7588:2: ( ( rule__Network__Driver_optsAssignment_3_1_7_1 ) ) ( ( rule__Network__Driver_optsAssignment_3_1_7_1 )* )
            {
            // InternalDockerCompose.g:7588:2: ( ( rule__Network__Driver_optsAssignment_3_1_7_1 ) )
            // InternalDockerCompose.g:7589:3: ( rule__Network__Driver_optsAssignment_3_1_7_1 )
            {
             before(grammarAccess.getNetworkAccess().getDriver_optsAssignment_3_1_7_1()); 
            // InternalDockerCompose.g:7590:3: ( rule__Network__Driver_optsAssignment_3_1_7_1 )
            // InternalDockerCompose.g:7590:4: rule__Network__Driver_optsAssignment_3_1_7_1
            {
            pushFollow(FOLLOW_4);
            rule__Network__Driver_optsAssignment_3_1_7_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getDriver_optsAssignment_3_1_7_1()); 

            }

            // InternalDockerCompose.g:7593:2: ( ( rule__Network__Driver_optsAssignment_3_1_7_1 )* )
            // InternalDockerCompose.g:7594:3: ( rule__Network__Driver_optsAssignment_3_1_7_1 )*
            {
             before(grammarAccess.getNetworkAccess().getDriver_optsAssignment_3_1_7_1()); 
            // InternalDockerCompose.g:7595:3: ( rule__Network__Driver_optsAssignment_3_1_7_1 )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==RULE_STRING) ) {
                    int LA56_2 = input.LA(2);

                    if ( (LA56_2==46) ) {
                        int LA56_4 = input.LA(3);

                        if ( (LA56_4==RULE_STRING) ) {
                            int LA56_5 = input.LA(4);

                            if ( (LA56_5==EOF||(LA56_5>=RULE_STRING && LA56_5<=RULE_ID)||(LA56_5>=40 && LA56_5<=45)||(LA56_5>=84 && LA56_5<=92)) ) {
                                alt56=1;
                            }


                        }
                        else if ( (LA56_4==RULE_ID) ) {
                            int LA56_6 = input.LA(4);

                            if ( (LA56_6==EOF||(LA56_6>=RULE_STRING && LA56_6<=RULE_ID)||(LA56_6>=40 && LA56_6<=45)||(LA56_6>=84 && LA56_6<=92)) ) {
                                alt56=1;
                            }


                        }


                    }


                }
                else if ( (LA56_0==RULE_ID) ) {
                    int LA56_3 = input.LA(2);

                    if ( (LA56_3==46) ) {
                        int LA56_4 = input.LA(3);

                        if ( (LA56_4==RULE_STRING) ) {
                            int LA56_5 = input.LA(4);

                            if ( (LA56_5==EOF||(LA56_5>=RULE_STRING && LA56_5<=RULE_ID)||(LA56_5>=40 && LA56_5<=45)||(LA56_5>=84 && LA56_5<=92)) ) {
                                alt56=1;
                            }


                        }
                        else if ( (LA56_4==RULE_ID) ) {
                            int LA56_6 = input.LA(4);

                            if ( (LA56_6==EOF||(LA56_6>=RULE_STRING && LA56_6<=RULE_ID)||(LA56_6>=40 && LA56_6<=45)||(LA56_6>=84 && LA56_6<=92)) ) {
                                alt56=1;
                            }


                        }


                    }


                }


                switch (alt56) {
            	case 1 :
            	    // InternalDockerCompose.g:7595:4: rule__Network__Driver_optsAssignment_3_1_7_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__Network__Driver_optsAssignment_3_1_7_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

             after(grammarAccess.getNetworkAccess().getDriver_optsAssignment_3_1_7_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_7__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_8__0"
    // InternalDockerCompose.g:7605:1: rule__Network__Group_3_1_8__0 : rule__Network__Group_3_1_8__0__Impl rule__Network__Group_3_1_8__1 ;
    public final void rule__Network__Group_3_1_8__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7609:1: ( rule__Network__Group_3_1_8__0__Impl rule__Network__Group_3_1_8__1 )
            // InternalDockerCompose.g:7610:2: rule__Network__Group_3_1_8__0__Impl rule__Network__Group_3_1_8__1
            {
            pushFollow(FOLLOW_40);
            rule__Network__Group_3_1_8__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_8__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_8__0"


    // $ANTLR start "rule__Network__Group_3_1_8__0__Impl"
    // InternalDockerCompose.g:7617:1: rule__Network__Group_3_1_8__0__Impl : ( 'ipam:' ) ;
    public final void rule__Network__Group_3_1_8__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7621:1: ( ( 'ipam:' ) )
            // InternalDockerCompose.g:7622:1: ( 'ipam:' )
            {
            // InternalDockerCompose.g:7622:1: ( 'ipam:' )
            // InternalDockerCompose.g:7623:2: 'ipam:'
            {
             before(grammarAccess.getNetworkAccess().getIpamKeyword_3_1_8_0()); 
            match(input,92,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getIpamKeyword_3_1_8_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_8__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_8__1"
    // InternalDockerCompose.g:7632:1: rule__Network__Group_3_1_8__1 : rule__Network__Group_3_1_8__1__Impl ;
    public final void rule__Network__Group_3_1_8__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7636:1: ( rule__Network__Group_3_1_8__1__Impl )
            // InternalDockerCompose.g:7637:2: rule__Network__Group_3_1_8__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_8__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_8__1"


    // $ANTLR start "rule__Network__Group_3_1_8__1__Impl"
    // InternalDockerCompose.g:7643:1: rule__Network__Group_3_1_8__1__Impl : ( ( rule__Network__IpamAssignment_3_1_8_1 ) ) ;
    public final void rule__Network__Group_3_1_8__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7647:1: ( ( ( rule__Network__IpamAssignment_3_1_8_1 ) ) )
            // InternalDockerCompose.g:7648:1: ( ( rule__Network__IpamAssignment_3_1_8_1 ) )
            {
            // InternalDockerCompose.g:7648:1: ( ( rule__Network__IpamAssignment_3_1_8_1 ) )
            // InternalDockerCompose.g:7649:2: ( rule__Network__IpamAssignment_3_1_8_1 )
            {
             before(grammarAccess.getNetworkAccess().getIpamAssignment_3_1_8_1()); 
            // InternalDockerCompose.g:7650:2: ( rule__Network__IpamAssignment_3_1_8_1 )
            // InternalDockerCompose.g:7650:3: rule__Network__IpamAssignment_3_1_8_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__IpamAssignment_3_1_8_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getIpamAssignment_3_1_8_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_8__1__Impl"


    // $ANTLR start "rule__Volume__Group__0"
    // InternalDockerCompose.g:7659:1: rule__Volume__Group__0 : rule__Volume__Group__0__Impl rule__Volume__Group__1 ;
    public final void rule__Volume__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7663:1: ( rule__Volume__Group__0__Impl rule__Volume__Group__1 )
            // InternalDockerCompose.g:7664:2: rule__Volume__Group__0__Impl rule__Volume__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__Volume__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__0"


    // $ANTLR start "rule__Volume__Group__0__Impl"
    // InternalDockerCompose.g:7671:1: rule__Volume__Group__0__Impl : ( () ) ;
    public final void rule__Volume__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7675:1: ( ( () ) )
            // InternalDockerCompose.g:7676:1: ( () )
            {
            // InternalDockerCompose.g:7676:1: ( () )
            // InternalDockerCompose.g:7677:2: ()
            {
             before(grammarAccess.getVolumeAccess().getVolumeAction_0()); 
            // InternalDockerCompose.g:7678:2: ()
            // InternalDockerCompose.g:7678:3: 
            {
            }

             after(grammarAccess.getVolumeAccess().getVolumeAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__0__Impl"


    // $ANTLR start "rule__Volume__Group__1"
    // InternalDockerCompose.g:7686:1: rule__Volume__Group__1 : rule__Volume__Group__1__Impl rule__Volume__Group__2 ;
    public final void rule__Volume__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7690:1: ( rule__Volume__Group__1__Impl rule__Volume__Group__2 )
            // InternalDockerCompose.g:7691:2: rule__Volume__Group__1__Impl rule__Volume__Group__2
            {
            pushFollow(FOLLOW_8);
            rule__Volume__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__1"


    // $ANTLR start "rule__Volume__Group__1__Impl"
    // InternalDockerCompose.g:7698:1: rule__Volume__Group__1__Impl : ( ( rule__Volume__NameAssignment_1 ) ) ;
    public final void rule__Volume__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7702:1: ( ( ( rule__Volume__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:7703:1: ( ( rule__Volume__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:7703:1: ( ( rule__Volume__NameAssignment_1 ) )
            // InternalDockerCompose.g:7704:2: ( rule__Volume__NameAssignment_1 )
            {
             before(grammarAccess.getVolumeAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:7705:2: ( rule__Volume__NameAssignment_1 )
            // InternalDockerCompose.g:7705:3: rule__Volume__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Volume__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__1__Impl"


    // $ANTLR start "rule__Volume__Group__2"
    // InternalDockerCompose.g:7713:1: rule__Volume__Group__2 : rule__Volume__Group__2__Impl rule__Volume__Group__3 ;
    public final void rule__Volume__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7717:1: ( rule__Volume__Group__2__Impl rule__Volume__Group__3 )
            // InternalDockerCompose.g:7718:2: rule__Volume__Group__2__Impl rule__Volume__Group__3
            {
            pushFollow(FOLLOW_41);
            rule__Volume__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__2"


    // $ANTLR start "rule__Volume__Group__2__Impl"
    // InternalDockerCompose.g:7725:1: rule__Volume__Group__2__Impl : ( ':' ) ;
    public final void rule__Volume__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7729:1: ( ( ':' ) )
            // InternalDockerCompose.g:7730:1: ( ':' )
            {
            // InternalDockerCompose.g:7730:1: ( ':' )
            // InternalDockerCompose.g:7731:2: ':'
            {
             before(grammarAccess.getVolumeAccess().getColonKeyword_2()); 
            match(input,46,FOLLOW_2); 
             after(grammarAccess.getVolumeAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__2__Impl"


    // $ANTLR start "rule__Volume__Group__3"
    // InternalDockerCompose.g:7740:1: rule__Volume__Group__3 : rule__Volume__Group__3__Impl ;
    public final void rule__Volume__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7744:1: ( rule__Volume__Group__3__Impl )
            // InternalDockerCompose.g:7745:2: rule__Volume__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__3"


    // $ANTLR start "rule__Volume__Group__3__Impl"
    // InternalDockerCompose.g:7751:1: rule__Volume__Group__3__Impl : ( ( rule__Volume__UnorderedGroup_3 ) ) ;
    public final void rule__Volume__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7755:1: ( ( ( rule__Volume__UnorderedGroup_3 ) ) )
            // InternalDockerCompose.g:7756:1: ( ( rule__Volume__UnorderedGroup_3 ) )
            {
            // InternalDockerCompose.g:7756:1: ( ( rule__Volume__UnorderedGroup_3 ) )
            // InternalDockerCompose.g:7757:2: ( rule__Volume__UnorderedGroup_3 )
            {
             before(grammarAccess.getVolumeAccess().getUnorderedGroup_3()); 
            // InternalDockerCompose.g:7758:2: ( rule__Volume__UnorderedGroup_3 )
            // InternalDockerCompose.g:7758:3: rule__Volume__UnorderedGroup_3
            {
            pushFollow(FOLLOW_2);
            rule__Volume__UnorderedGroup_3();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getUnorderedGroup_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__3__Impl"


    // $ANTLR start "rule__Volume__Group_3_0__0"
    // InternalDockerCompose.g:7767:1: rule__Volume__Group_3_0__0 : rule__Volume__Group_3_0__0__Impl rule__Volume__Group_3_0__1 ;
    public final void rule__Volume__Group_3_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7771:1: ( rule__Volume__Group_3_0__0__Impl rule__Volume__Group_3_0__1 )
            // InternalDockerCompose.g:7772:2: rule__Volume__Group_3_0__0__Impl rule__Volume__Group_3_0__1
            {
            pushFollow(FOLLOW_14);
            rule__Volume__Group_3_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_0__0"


    // $ANTLR start "rule__Volume__Group_3_0__0__Impl"
    // InternalDockerCompose.g:7779:1: rule__Volume__Group_3_0__0__Impl : ( 'external:' ) ;
    public final void rule__Volume__Group_3_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7783:1: ( ( 'external:' ) )
            // InternalDockerCompose.g:7784:1: ( 'external:' )
            {
            // InternalDockerCompose.g:7784:1: ( 'external:' )
            // InternalDockerCompose.g:7785:2: 'external:'
            {
             before(grammarAccess.getVolumeAccess().getExternalKeyword_3_0_0()); 
            match(input,88,FOLLOW_2); 
             after(grammarAccess.getVolumeAccess().getExternalKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_0__0__Impl"


    // $ANTLR start "rule__Volume__Group_3_0__1"
    // InternalDockerCompose.g:7794:1: rule__Volume__Group_3_0__1 : rule__Volume__Group_3_0__1__Impl ;
    public final void rule__Volume__Group_3_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7798:1: ( rule__Volume__Group_3_0__1__Impl )
            // InternalDockerCompose.g:7799:2: rule__Volume__Group_3_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_0__1"


    // $ANTLR start "rule__Volume__Group_3_0__1__Impl"
    // InternalDockerCompose.g:7805:1: rule__Volume__Group_3_0__1__Impl : ( ( rule__Volume__ExternalAssignment_3_0_1 ) ) ;
    public final void rule__Volume__Group_3_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7809:1: ( ( ( rule__Volume__ExternalAssignment_3_0_1 ) ) )
            // InternalDockerCompose.g:7810:1: ( ( rule__Volume__ExternalAssignment_3_0_1 ) )
            {
            // InternalDockerCompose.g:7810:1: ( ( rule__Volume__ExternalAssignment_3_0_1 ) )
            // InternalDockerCompose.g:7811:2: ( rule__Volume__ExternalAssignment_3_0_1 )
            {
             before(grammarAccess.getVolumeAccess().getExternalAssignment_3_0_1()); 
            // InternalDockerCompose.g:7812:2: ( rule__Volume__ExternalAssignment_3_0_1 )
            // InternalDockerCompose.g:7812:3: rule__Volume__ExternalAssignment_3_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Volume__ExternalAssignment_3_0_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getExternalAssignment_3_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_0__1__Impl"


    // $ANTLR start "rule__Volume__Group_3_1__0"
    // InternalDockerCompose.g:7821:1: rule__Volume__Group_3_1__0 : rule__Volume__Group_3_1__0__Impl rule__Volume__Group_3_1__1 ;
    public final void rule__Volume__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7825:1: ( rule__Volume__Group_3_1__0__Impl rule__Volume__Group_3_1__1 )
            // InternalDockerCompose.g:7826:2: rule__Volume__Group_3_1__0__Impl rule__Volume__Group_3_1__1
            {
            pushFollow(FOLLOW_7);
            rule__Volume__Group_3_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_1__0"


    // $ANTLR start "rule__Volume__Group_3_1__0__Impl"
    // InternalDockerCompose.g:7833:1: rule__Volume__Group_3_1__0__Impl : ( 'driver:' ) ;
    public final void rule__Volume__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7837:1: ( ( 'driver:' ) )
            // InternalDockerCompose.g:7838:1: ( 'driver:' )
            {
            // InternalDockerCompose.g:7838:1: ( 'driver:' )
            // InternalDockerCompose.g:7839:2: 'driver:'
            {
             before(grammarAccess.getVolumeAccess().getDriverKeyword_3_1_0()); 
            match(input,84,FOLLOW_2); 
             after(grammarAccess.getVolumeAccess().getDriverKeyword_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_1__0__Impl"


    // $ANTLR start "rule__Volume__Group_3_1__1"
    // InternalDockerCompose.g:7848:1: rule__Volume__Group_3_1__1 : rule__Volume__Group_3_1__1__Impl ;
    public final void rule__Volume__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7852:1: ( rule__Volume__Group_3_1__1__Impl )
            // InternalDockerCompose.g:7853:2: rule__Volume__Group_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_1__1"


    // $ANTLR start "rule__Volume__Group_3_1__1__Impl"
    // InternalDockerCompose.g:7859:1: rule__Volume__Group_3_1__1__Impl : ( ( rule__Volume__DriverAssignment_3_1_1 ) ) ;
    public final void rule__Volume__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7863:1: ( ( ( rule__Volume__DriverAssignment_3_1_1 ) ) )
            // InternalDockerCompose.g:7864:1: ( ( rule__Volume__DriverAssignment_3_1_1 ) )
            {
            // InternalDockerCompose.g:7864:1: ( ( rule__Volume__DriverAssignment_3_1_1 ) )
            // InternalDockerCompose.g:7865:2: ( rule__Volume__DriverAssignment_3_1_1 )
            {
             before(grammarAccess.getVolumeAccess().getDriverAssignment_3_1_1()); 
            // InternalDockerCompose.g:7866:2: ( rule__Volume__DriverAssignment_3_1_1 )
            // InternalDockerCompose.g:7866:3: rule__Volume__DriverAssignment_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Volume__DriverAssignment_3_1_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getDriverAssignment_3_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_1__1__Impl"


    // $ANTLR start "rule__Volume__Group_3_2__0"
    // InternalDockerCompose.g:7875:1: rule__Volume__Group_3_2__0 : rule__Volume__Group_3_2__0__Impl rule__Volume__Group_3_2__1 ;
    public final void rule__Volume__Group_3_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7879:1: ( rule__Volume__Group_3_2__0__Impl rule__Volume__Group_3_2__1 )
            // InternalDockerCompose.g:7880:2: rule__Volume__Group_3_2__0__Impl rule__Volume__Group_3_2__1
            {
            pushFollow(FOLLOW_7);
            rule__Volume__Group_3_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_2__0"


    // $ANTLR start "rule__Volume__Group_3_2__0__Impl"
    // InternalDockerCompose.g:7887:1: rule__Volume__Group_3_2__0__Impl : ( 'name:' ) ;
    public final void rule__Volume__Group_3_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7891:1: ( ( 'name:' ) )
            // InternalDockerCompose.g:7892:1: ( 'name:' )
            {
            // InternalDockerCompose.g:7892:1: ( 'name:' )
            // InternalDockerCompose.g:7893:2: 'name:'
            {
             before(grammarAccess.getVolumeAccess().getNameKeyword_3_2_0()); 
            match(input,89,FOLLOW_2); 
             after(grammarAccess.getVolumeAccess().getNameKeyword_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_2__0__Impl"


    // $ANTLR start "rule__Volume__Group_3_2__1"
    // InternalDockerCompose.g:7902:1: rule__Volume__Group_3_2__1 : rule__Volume__Group_3_2__1__Impl ;
    public final void rule__Volume__Group_3_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7906:1: ( rule__Volume__Group_3_2__1__Impl )
            // InternalDockerCompose.g:7907:2: rule__Volume__Group_3_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_2__1"


    // $ANTLR start "rule__Volume__Group_3_2__1__Impl"
    // InternalDockerCompose.g:7913:1: rule__Volume__Group_3_2__1__Impl : ( ( rule__Volume__Volume_nameAssignment_3_2_1 ) ) ;
    public final void rule__Volume__Group_3_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7917:1: ( ( ( rule__Volume__Volume_nameAssignment_3_2_1 ) ) )
            // InternalDockerCompose.g:7918:1: ( ( rule__Volume__Volume_nameAssignment_3_2_1 ) )
            {
            // InternalDockerCompose.g:7918:1: ( ( rule__Volume__Volume_nameAssignment_3_2_1 ) )
            // InternalDockerCompose.g:7919:2: ( rule__Volume__Volume_nameAssignment_3_2_1 )
            {
             before(grammarAccess.getVolumeAccess().getVolume_nameAssignment_3_2_1()); 
            // InternalDockerCompose.g:7920:2: ( rule__Volume__Volume_nameAssignment_3_2_1 )
            // InternalDockerCompose.g:7920:3: rule__Volume__Volume_nameAssignment_3_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Volume_nameAssignment_3_2_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getVolume_nameAssignment_3_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_2__1__Impl"


    // $ANTLR start "rule__Volume__Group_3_3__0"
    // InternalDockerCompose.g:7929:1: rule__Volume__Group_3_3__0 : rule__Volume__Group_3_3__0__Impl rule__Volume__Group_3_3__1 ;
    public final void rule__Volume__Group_3_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7933:1: ( rule__Volume__Group_3_3__0__Impl rule__Volume__Group_3_3__1 )
            // InternalDockerCompose.g:7934:2: rule__Volume__Group_3_3__0__Impl rule__Volume__Group_3_3__1
            {
            pushFollow(FOLLOW_7);
            rule__Volume__Group_3_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_3__0"


    // $ANTLR start "rule__Volume__Group_3_3__0__Impl"
    // InternalDockerCompose.g:7941:1: rule__Volume__Group_3_3__0__Impl : ( 'labels:' ) ;
    public final void rule__Volume__Group_3_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7945:1: ( ( 'labels:' ) )
            // InternalDockerCompose.g:7946:1: ( 'labels:' )
            {
            // InternalDockerCompose.g:7946:1: ( 'labels:' )
            // InternalDockerCompose.g:7947:2: 'labels:'
            {
             before(grammarAccess.getVolumeAccess().getLabelsKeyword_3_3_0()); 
            match(input,90,FOLLOW_2); 
             after(grammarAccess.getVolumeAccess().getLabelsKeyword_3_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_3__0__Impl"


    // $ANTLR start "rule__Volume__Group_3_3__1"
    // InternalDockerCompose.g:7956:1: rule__Volume__Group_3_3__1 : rule__Volume__Group_3_3__1__Impl ;
    public final void rule__Volume__Group_3_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7960:1: ( rule__Volume__Group_3_3__1__Impl )
            // InternalDockerCompose.g:7961:2: rule__Volume__Group_3_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_3__1"


    // $ANTLR start "rule__Volume__Group_3_3__1__Impl"
    // InternalDockerCompose.g:7967:1: rule__Volume__Group_3_3__1__Impl : ( ( ( rule__Volume__LabelsAssignment_3_3_1 ) ) ( ( rule__Volume__LabelsAssignment_3_3_1 )* ) ) ;
    public final void rule__Volume__Group_3_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7971:1: ( ( ( ( rule__Volume__LabelsAssignment_3_3_1 ) ) ( ( rule__Volume__LabelsAssignment_3_3_1 )* ) ) )
            // InternalDockerCompose.g:7972:1: ( ( ( rule__Volume__LabelsAssignment_3_3_1 ) ) ( ( rule__Volume__LabelsAssignment_3_3_1 )* ) )
            {
            // InternalDockerCompose.g:7972:1: ( ( ( rule__Volume__LabelsAssignment_3_3_1 ) ) ( ( rule__Volume__LabelsAssignment_3_3_1 )* ) )
            // InternalDockerCompose.g:7973:2: ( ( rule__Volume__LabelsAssignment_3_3_1 ) ) ( ( rule__Volume__LabelsAssignment_3_3_1 )* )
            {
            // InternalDockerCompose.g:7973:2: ( ( rule__Volume__LabelsAssignment_3_3_1 ) )
            // InternalDockerCompose.g:7974:3: ( rule__Volume__LabelsAssignment_3_3_1 )
            {
             before(grammarAccess.getVolumeAccess().getLabelsAssignment_3_3_1()); 
            // InternalDockerCompose.g:7975:3: ( rule__Volume__LabelsAssignment_3_3_1 )
            // InternalDockerCompose.g:7975:4: rule__Volume__LabelsAssignment_3_3_1
            {
            pushFollow(FOLLOW_4);
            rule__Volume__LabelsAssignment_3_3_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getLabelsAssignment_3_3_1()); 

            }

            // InternalDockerCompose.g:7978:2: ( ( rule__Volume__LabelsAssignment_3_3_1 )* )
            // InternalDockerCompose.g:7979:3: ( rule__Volume__LabelsAssignment_3_3_1 )*
            {
             before(grammarAccess.getVolumeAccess().getLabelsAssignment_3_3_1()); 
            // InternalDockerCompose.g:7980:3: ( rule__Volume__LabelsAssignment_3_3_1 )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==RULE_STRING) ) {
                    int LA57_2 = input.LA(2);

                    if ( (LA57_2==46) ) {
                        int LA57_4 = input.LA(3);

                        if ( (LA57_4==RULE_STRING) ) {
                            int LA57_5 = input.LA(4);

                            if ( (LA57_5==EOF||(LA57_5>=RULE_STRING && LA57_5<=RULE_ID)||(LA57_5>=40 && LA57_5<=45)||LA57_5==84||(LA57_5>=88 && LA57_5<=91)) ) {
                                alt57=1;
                            }


                        }
                        else if ( (LA57_4==RULE_ID) ) {
                            int LA57_6 = input.LA(4);

                            if ( (LA57_6==EOF||(LA57_6>=RULE_STRING && LA57_6<=RULE_ID)||(LA57_6>=40 && LA57_6<=45)||LA57_6==84||(LA57_6>=88 && LA57_6<=91)) ) {
                                alt57=1;
                            }


                        }


                    }


                }
                else if ( (LA57_0==RULE_ID) ) {
                    int LA57_3 = input.LA(2);

                    if ( (LA57_3==46) ) {
                        int LA57_4 = input.LA(3);

                        if ( (LA57_4==RULE_STRING) ) {
                            int LA57_5 = input.LA(4);

                            if ( (LA57_5==EOF||(LA57_5>=RULE_STRING && LA57_5<=RULE_ID)||(LA57_5>=40 && LA57_5<=45)||LA57_5==84||(LA57_5>=88 && LA57_5<=91)) ) {
                                alt57=1;
                            }


                        }
                        else if ( (LA57_4==RULE_ID) ) {
                            int LA57_6 = input.LA(4);

                            if ( (LA57_6==EOF||(LA57_6>=RULE_STRING && LA57_6<=RULE_ID)||(LA57_6>=40 && LA57_6<=45)||LA57_6==84||(LA57_6>=88 && LA57_6<=91)) ) {
                                alt57=1;
                            }


                        }


                    }


                }


                switch (alt57) {
            	case 1 :
            	    // InternalDockerCompose.g:7980:4: rule__Volume__LabelsAssignment_3_3_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__Volume__LabelsAssignment_3_3_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

             after(grammarAccess.getVolumeAccess().getLabelsAssignment_3_3_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_3__1__Impl"


    // $ANTLR start "rule__Volume__Group_3_4__0"
    // InternalDockerCompose.g:7990:1: rule__Volume__Group_3_4__0 : rule__Volume__Group_3_4__0__Impl rule__Volume__Group_3_4__1 ;
    public final void rule__Volume__Group_3_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7994:1: ( rule__Volume__Group_3_4__0__Impl rule__Volume__Group_3_4__1 )
            // InternalDockerCompose.g:7995:2: rule__Volume__Group_3_4__0__Impl rule__Volume__Group_3_4__1
            {
            pushFollow(FOLLOW_7);
            rule__Volume__Group_3_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_4__0"


    // $ANTLR start "rule__Volume__Group_3_4__0__Impl"
    // InternalDockerCompose.g:8002:1: rule__Volume__Group_3_4__0__Impl : ( 'driver_opts:' ) ;
    public final void rule__Volume__Group_3_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8006:1: ( ( 'driver_opts:' ) )
            // InternalDockerCompose.g:8007:1: ( 'driver_opts:' )
            {
            // InternalDockerCompose.g:8007:1: ( 'driver_opts:' )
            // InternalDockerCompose.g:8008:2: 'driver_opts:'
            {
             before(grammarAccess.getVolumeAccess().getDriver_optsKeyword_3_4_0()); 
            match(input,91,FOLLOW_2); 
             after(grammarAccess.getVolumeAccess().getDriver_optsKeyword_3_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_4__0__Impl"


    // $ANTLR start "rule__Volume__Group_3_4__1"
    // InternalDockerCompose.g:8017:1: rule__Volume__Group_3_4__1 : rule__Volume__Group_3_4__1__Impl ;
    public final void rule__Volume__Group_3_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8021:1: ( rule__Volume__Group_3_4__1__Impl )
            // InternalDockerCompose.g:8022:2: rule__Volume__Group_3_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_4__1"


    // $ANTLR start "rule__Volume__Group_3_4__1__Impl"
    // InternalDockerCompose.g:8028:1: rule__Volume__Group_3_4__1__Impl : ( ( ( rule__Volume__Driver_optsAssignment_3_4_1 ) ) ( ( rule__Volume__Driver_optsAssignment_3_4_1 )* ) ) ;
    public final void rule__Volume__Group_3_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8032:1: ( ( ( ( rule__Volume__Driver_optsAssignment_3_4_1 ) ) ( ( rule__Volume__Driver_optsAssignment_3_4_1 )* ) ) )
            // InternalDockerCompose.g:8033:1: ( ( ( rule__Volume__Driver_optsAssignment_3_4_1 ) ) ( ( rule__Volume__Driver_optsAssignment_3_4_1 )* ) )
            {
            // InternalDockerCompose.g:8033:1: ( ( ( rule__Volume__Driver_optsAssignment_3_4_1 ) ) ( ( rule__Volume__Driver_optsAssignment_3_4_1 )* ) )
            // InternalDockerCompose.g:8034:2: ( ( rule__Volume__Driver_optsAssignment_3_4_1 ) ) ( ( rule__Volume__Driver_optsAssignment_3_4_1 )* )
            {
            // InternalDockerCompose.g:8034:2: ( ( rule__Volume__Driver_optsAssignment_3_4_1 ) )
            // InternalDockerCompose.g:8035:3: ( rule__Volume__Driver_optsAssignment_3_4_1 )
            {
             before(grammarAccess.getVolumeAccess().getDriver_optsAssignment_3_4_1()); 
            // InternalDockerCompose.g:8036:3: ( rule__Volume__Driver_optsAssignment_3_4_1 )
            // InternalDockerCompose.g:8036:4: rule__Volume__Driver_optsAssignment_3_4_1
            {
            pushFollow(FOLLOW_4);
            rule__Volume__Driver_optsAssignment_3_4_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getDriver_optsAssignment_3_4_1()); 

            }

            // InternalDockerCompose.g:8039:2: ( ( rule__Volume__Driver_optsAssignment_3_4_1 )* )
            // InternalDockerCompose.g:8040:3: ( rule__Volume__Driver_optsAssignment_3_4_1 )*
            {
             before(grammarAccess.getVolumeAccess().getDriver_optsAssignment_3_4_1()); 
            // InternalDockerCompose.g:8041:3: ( rule__Volume__Driver_optsAssignment_3_4_1 )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==RULE_STRING) ) {
                    int LA58_2 = input.LA(2);

                    if ( (LA58_2==46) ) {
                        int LA58_4 = input.LA(3);

                        if ( (LA58_4==RULE_STRING) ) {
                            int LA58_5 = input.LA(4);

                            if ( (LA58_5==EOF||(LA58_5>=RULE_STRING && LA58_5<=RULE_ID)||(LA58_5>=40 && LA58_5<=45)||LA58_5==84||(LA58_5>=88 && LA58_5<=91)) ) {
                                alt58=1;
                            }


                        }
                        else if ( (LA58_4==RULE_ID) ) {
                            int LA58_6 = input.LA(4);

                            if ( (LA58_6==EOF||(LA58_6>=RULE_STRING && LA58_6<=RULE_ID)||(LA58_6>=40 && LA58_6<=45)||LA58_6==84||(LA58_6>=88 && LA58_6<=91)) ) {
                                alt58=1;
                            }


                        }


                    }


                }
                else if ( (LA58_0==RULE_ID) ) {
                    int LA58_3 = input.LA(2);

                    if ( (LA58_3==46) ) {
                        int LA58_4 = input.LA(3);

                        if ( (LA58_4==RULE_STRING) ) {
                            int LA58_5 = input.LA(4);

                            if ( (LA58_5==EOF||(LA58_5>=RULE_STRING && LA58_5<=RULE_ID)||(LA58_5>=40 && LA58_5<=45)||LA58_5==84||(LA58_5>=88 && LA58_5<=91)) ) {
                                alt58=1;
                            }


                        }
                        else if ( (LA58_4==RULE_ID) ) {
                            int LA58_6 = input.LA(4);

                            if ( (LA58_6==EOF||(LA58_6>=RULE_STRING && LA58_6<=RULE_ID)||(LA58_6>=40 && LA58_6<=45)||LA58_6==84||(LA58_6>=88 && LA58_6<=91)) ) {
                                alt58=1;
                            }


                        }


                    }


                }


                switch (alt58) {
            	case 1 :
            	    // InternalDockerCompose.g:8041:4: rule__Volume__Driver_optsAssignment_3_4_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__Volume__Driver_optsAssignment_3_4_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);

             after(grammarAccess.getVolumeAccess().getDriver_optsAssignment_3_4_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_4__1__Impl"


    // $ANTLR start "rule__Config__Group__0"
    // InternalDockerCompose.g:8051:1: rule__Config__Group__0 : rule__Config__Group__0__Impl rule__Config__Group__1 ;
    public final void rule__Config__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8055:1: ( rule__Config__Group__0__Impl rule__Config__Group__1 )
            // InternalDockerCompose.g:8056:2: rule__Config__Group__0__Impl rule__Config__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__Config__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Config__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__0"


    // $ANTLR start "rule__Config__Group__0__Impl"
    // InternalDockerCompose.g:8063:1: rule__Config__Group__0__Impl : ( () ) ;
    public final void rule__Config__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8067:1: ( ( () ) )
            // InternalDockerCompose.g:8068:1: ( () )
            {
            // InternalDockerCompose.g:8068:1: ( () )
            // InternalDockerCompose.g:8069:2: ()
            {
             before(grammarAccess.getConfigAccess().getConfigAction_0()); 
            // InternalDockerCompose.g:8070:2: ()
            // InternalDockerCompose.g:8070:3: 
            {
            }

             after(grammarAccess.getConfigAccess().getConfigAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__0__Impl"


    // $ANTLR start "rule__Config__Group__1"
    // InternalDockerCompose.g:8078:1: rule__Config__Group__1 : rule__Config__Group__1__Impl rule__Config__Group__2 ;
    public final void rule__Config__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8082:1: ( rule__Config__Group__1__Impl rule__Config__Group__2 )
            // InternalDockerCompose.g:8083:2: rule__Config__Group__1__Impl rule__Config__Group__2
            {
            pushFollow(FOLLOW_8);
            rule__Config__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Config__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__1"


    // $ANTLR start "rule__Config__Group__1__Impl"
    // InternalDockerCompose.g:8090:1: rule__Config__Group__1__Impl : ( ( rule__Config__NameAssignment_1 ) ) ;
    public final void rule__Config__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8094:1: ( ( ( rule__Config__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:8095:1: ( ( rule__Config__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:8095:1: ( ( rule__Config__NameAssignment_1 ) )
            // InternalDockerCompose.g:8096:2: ( rule__Config__NameAssignment_1 )
            {
             before(grammarAccess.getConfigAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:8097:2: ( rule__Config__NameAssignment_1 )
            // InternalDockerCompose.g:8097:3: rule__Config__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Config__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__1__Impl"


    // $ANTLR start "rule__Config__Group__2"
    // InternalDockerCompose.g:8105:1: rule__Config__Group__2 : rule__Config__Group__2__Impl rule__Config__Group__3 ;
    public final void rule__Config__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8109:1: ( rule__Config__Group__2__Impl rule__Config__Group__3 )
            // InternalDockerCompose.g:8110:2: rule__Config__Group__2__Impl rule__Config__Group__3
            {
            pushFollow(FOLLOW_42);
            rule__Config__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Config__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__2"


    // $ANTLR start "rule__Config__Group__2__Impl"
    // InternalDockerCompose.g:8117:1: rule__Config__Group__2__Impl : ( ':' ) ;
    public final void rule__Config__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8121:1: ( ( ':' ) )
            // InternalDockerCompose.g:8122:1: ( ':' )
            {
            // InternalDockerCompose.g:8122:1: ( ':' )
            // InternalDockerCompose.g:8123:2: ':'
            {
             before(grammarAccess.getConfigAccess().getColonKeyword_2()); 
            match(input,46,FOLLOW_2); 
             after(grammarAccess.getConfigAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__2__Impl"


    // $ANTLR start "rule__Config__Group__3"
    // InternalDockerCompose.g:8132:1: rule__Config__Group__3 : rule__Config__Group__3__Impl ;
    public final void rule__Config__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8136:1: ( rule__Config__Group__3__Impl )
            // InternalDockerCompose.g:8137:2: rule__Config__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Config__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__3"


    // $ANTLR start "rule__Config__Group__3__Impl"
    // InternalDockerCompose.g:8143:1: rule__Config__Group__3__Impl : ( ( rule__Config__UnorderedGroup_3 ) ) ;
    public final void rule__Config__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8147:1: ( ( ( rule__Config__UnorderedGroup_3 ) ) )
            // InternalDockerCompose.g:8148:1: ( ( rule__Config__UnorderedGroup_3 ) )
            {
            // InternalDockerCompose.g:8148:1: ( ( rule__Config__UnorderedGroup_3 ) )
            // InternalDockerCompose.g:8149:2: ( rule__Config__UnorderedGroup_3 )
            {
             before(grammarAccess.getConfigAccess().getUnorderedGroup_3()); 
            // InternalDockerCompose.g:8150:2: ( rule__Config__UnorderedGroup_3 )
            // InternalDockerCompose.g:8150:3: rule__Config__UnorderedGroup_3
            {
            pushFollow(FOLLOW_2);
            rule__Config__UnorderedGroup_3();

            state._fsp--;


            }

             after(grammarAccess.getConfigAccess().getUnorderedGroup_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__3__Impl"


    // $ANTLR start "rule__Config__Group_3_0__0"
    // InternalDockerCompose.g:8159:1: rule__Config__Group_3_0__0 : rule__Config__Group_3_0__0__Impl rule__Config__Group_3_0__1 ;
    public final void rule__Config__Group_3_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8163:1: ( rule__Config__Group_3_0__0__Impl rule__Config__Group_3_0__1 )
            // InternalDockerCompose.g:8164:2: rule__Config__Group_3_0__0__Impl rule__Config__Group_3_0__1
            {
            pushFollow(FOLLOW_14);
            rule__Config__Group_3_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Config__Group_3_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_0__0"


    // $ANTLR start "rule__Config__Group_3_0__0__Impl"
    // InternalDockerCompose.g:8171:1: rule__Config__Group_3_0__0__Impl : ( 'external:' ) ;
    public final void rule__Config__Group_3_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8175:1: ( ( 'external:' ) )
            // InternalDockerCompose.g:8176:1: ( 'external:' )
            {
            // InternalDockerCompose.g:8176:1: ( 'external:' )
            // InternalDockerCompose.g:8177:2: 'external:'
            {
             before(grammarAccess.getConfigAccess().getExternalKeyword_3_0_0()); 
            match(input,88,FOLLOW_2); 
             after(grammarAccess.getConfigAccess().getExternalKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_0__0__Impl"


    // $ANTLR start "rule__Config__Group_3_0__1"
    // InternalDockerCompose.g:8186:1: rule__Config__Group_3_0__1 : rule__Config__Group_3_0__1__Impl ;
    public final void rule__Config__Group_3_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8190:1: ( rule__Config__Group_3_0__1__Impl )
            // InternalDockerCompose.g:8191:2: rule__Config__Group_3_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Config__Group_3_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_0__1"


    // $ANTLR start "rule__Config__Group_3_0__1__Impl"
    // InternalDockerCompose.g:8197:1: rule__Config__Group_3_0__1__Impl : ( ( rule__Config__ExternalAssignment_3_0_1 ) ) ;
    public final void rule__Config__Group_3_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8201:1: ( ( ( rule__Config__ExternalAssignment_3_0_1 ) ) )
            // InternalDockerCompose.g:8202:1: ( ( rule__Config__ExternalAssignment_3_0_1 ) )
            {
            // InternalDockerCompose.g:8202:1: ( ( rule__Config__ExternalAssignment_3_0_1 ) )
            // InternalDockerCompose.g:8203:2: ( rule__Config__ExternalAssignment_3_0_1 )
            {
             before(grammarAccess.getConfigAccess().getExternalAssignment_3_0_1()); 
            // InternalDockerCompose.g:8204:2: ( rule__Config__ExternalAssignment_3_0_1 )
            // InternalDockerCompose.g:8204:3: rule__Config__ExternalAssignment_3_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Config__ExternalAssignment_3_0_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigAccess().getExternalAssignment_3_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_0__1__Impl"


    // $ANTLR start "rule__Config__Group_3_1__0"
    // InternalDockerCompose.g:8213:1: rule__Config__Group_3_1__0 : rule__Config__Group_3_1__0__Impl rule__Config__Group_3_1__1 ;
    public final void rule__Config__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8217:1: ( rule__Config__Group_3_1__0__Impl rule__Config__Group_3_1__1 )
            // InternalDockerCompose.g:8218:2: rule__Config__Group_3_1__0__Impl rule__Config__Group_3_1__1
            {
            pushFollow(FOLLOW_7);
            rule__Config__Group_3_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Config__Group_3_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_1__0"


    // $ANTLR start "rule__Config__Group_3_1__0__Impl"
    // InternalDockerCompose.g:8225:1: rule__Config__Group_3_1__0__Impl : ( 'file:' ) ;
    public final void rule__Config__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8229:1: ( ( 'file:' ) )
            // InternalDockerCompose.g:8230:1: ( 'file:' )
            {
            // InternalDockerCompose.g:8230:1: ( 'file:' )
            // InternalDockerCompose.g:8231:2: 'file:'
            {
             before(grammarAccess.getConfigAccess().getFileKeyword_3_1_0()); 
            match(input,93,FOLLOW_2); 
             after(grammarAccess.getConfigAccess().getFileKeyword_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_1__0__Impl"


    // $ANTLR start "rule__Config__Group_3_1__1"
    // InternalDockerCompose.g:8240:1: rule__Config__Group_3_1__1 : rule__Config__Group_3_1__1__Impl ;
    public final void rule__Config__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8244:1: ( rule__Config__Group_3_1__1__Impl )
            // InternalDockerCompose.g:8245:2: rule__Config__Group_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Config__Group_3_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_1__1"


    // $ANTLR start "rule__Config__Group_3_1__1__Impl"
    // InternalDockerCompose.g:8251:1: rule__Config__Group_3_1__1__Impl : ( ( rule__Config__FileAssignment_3_1_1 ) ) ;
    public final void rule__Config__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8255:1: ( ( ( rule__Config__FileAssignment_3_1_1 ) ) )
            // InternalDockerCompose.g:8256:1: ( ( rule__Config__FileAssignment_3_1_1 ) )
            {
            // InternalDockerCompose.g:8256:1: ( ( rule__Config__FileAssignment_3_1_1 ) )
            // InternalDockerCompose.g:8257:2: ( rule__Config__FileAssignment_3_1_1 )
            {
             before(grammarAccess.getConfigAccess().getFileAssignment_3_1_1()); 
            // InternalDockerCompose.g:8258:2: ( rule__Config__FileAssignment_3_1_1 )
            // InternalDockerCompose.g:8258:3: rule__Config__FileAssignment_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Config__FileAssignment_3_1_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigAccess().getFileAssignment_3_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_1__1__Impl"


    // $ANTLR start "rule__Config__Group_3_2__0"
    // InternalDockerCompose.g:8267:1: rule__Config__Group_3_2__0 : rule__Config__Group_3_2__0__Impl rule__Config__Group_3_2__1 ;
    public final void rule__Config__Group_3_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8271:1: ( rule__Config__Group_3_2__0__Impl rule__Config__Group_3_2__1 )
            // InternalDockerCompose.g:8272:2: rule__Config__Group_3_2__0__Impl rule__Config__Group_3_2__1
            {
            pushFollow(FOLLOW_7);
            rule__Config__Group_3_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Config__Group_3_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_2__0"


    // $ANTLR start "rule__Config__Group_3_2__0__Impl"
    // InternalDockerCompose.g:8279:1: rule__Config__Group_3_2__0__Impl : ( 'name:' ) ;
    public final void rule__Config__Group_3_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8283:1: ( ( 'name:' ) )
            // InternalDockerCompose.g:8284:1: ( 'name:' )
            {
            // InternalDockerCompose.g:8284:1: ( 'name:' )
            // InternalDockerCompose.g:8285:2: 'name:'
            {
             before(grammarAccess.getConfigAccess().getNameKeyword_3_2_0()); 
            match(input,89,FOLLOW_2); 
             after(grammarAccess.getConfigAccess().getNameKeyword_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_2__0__Impl"


    // $ANTLR start "rule__Config__Group_3_2__1"
    // InternalDockerCompose.g:8294:1: rule__Config__Group_3_2__1 : rule__Config__Group_3_2__1__Impl ;
    public final void rule__Config__Group_3_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8298:1: ( rule__Config__Group_3_2__1__Impl )
            // InternalDockerCompose.g:8299:2: rule__Config__Group_3_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Config__Group_3_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_2__1"


    // $ANTLR start "rule__Config__Group_3_2__1__Impl"
    // InternalDockerCompose.g:8305:1: rule__Config__Group_3_2__1__Impl : ( ( rule__Config__Config_nameAssignment_3_2_1 ) ) ;
    public final void rule__Config__Group_3_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8309:1: ( ( ( rule__Config__Config_nameAssignment_3_2_1 ) ) )
            // InternalDockerCompose.g:8310:1: ( ( rule__Config__Config_nameAssignment_3_2_1 ) )
            {
            // InternalDockerCompose.g:8310:1: ( ( rule__Config__Config_nameAssignment_3_2_1 ) )
            // InternalDockerCompose.g:8311:2: ( rule__Config__Config_nameAssignment_3_2_1 )
            {
             before(grammarAccess.getConfigAccess().getConfig_nameAssignment_3_2_1()); 
            // InternalDockerCompose.g:8312:2: ( rule__Config__Config_nameAssignment_3_2_1 )
            // InternalDockerCompose.g:8312:3: rule__Config__Config_nameAssignment_3_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Config__Config_nameAssignment_3_2_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigAccess().getConfig_nameAssignment_3_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_2__1__Impl"


    // $ANTLR start "rule__Secret__Group__0"
    // InternalDockerCompose.g:8321:1: rule__Secret__Group__0 : rule__Secret__Group__0__Impl rule__Secret__Group__1 ;
    public final void rule__Secret__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8325:1: ( rule__Secret__Group__0__Impl rule__Secret__Group__1 )
            // InternalDockerCompose.g:8326:2: rule__Secret__Group__0__Impl rule__Secret__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__Secret__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__0"


    // $ANTLR start "rule__Secret__Group__0__Impl"
    // InternalDockerCompose.g:8333:1: rule__Secret__Group__0__Impl : ( () ) ;
    public final void rule__Secret__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8337:1: ( ( () ) )
            // InternalDockerCompose.g:8338:1: ( () )
            {
            // InternalDockerCompose.g:8338:1: ( () )
            // InternalDockerCompose.g:8339:2: ()
            {
             before(grammarAccess.getSecretAccess().getSecretAction_0()); 
            // InternalDockerCompose.g:8340:2: ()
            // InternalDockerCompose.g:8340:3: 
            {
            }

             after(grammarAccess.getSecretAccess().getSecretAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__0__Impl"


    // $ANTLR start "rule__Secret__Group__1"
    // InternalDockerCompose.g:8348:1: rule__Secret__Group__1 : rule__Secret__Group__1__Impl rule__Secret__Group__2 ;
    public final void rule__Secret__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8352:1: ( rule__Secret__Group__1__Impl rule__Secret__Group__2 )
            // InternalDockerCompose.g:8353:2: rule__Secret__Group__1__Impl rule__Secret__Group__2
            {
            pushFollow(FOLLOW_8);
            rule__Secret__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__1"


    // $ANTLR start "rule__Secret__Group__1__Impl"
    // InternalDockerCompose.g:8360:1: rule__Secret__Group__1__Impl : ( ( rule__Secret__NameAssignment_1 ) ) ;
    public final void rule__Secret__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8364:1: ( ( ( rule__Secret__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:8365:1: ( ( rule__Secret__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:8365:1: ( ( rule__Secret__NameAssignment_1 ) )
            // InternalDockerCompose.g:8366:2: ( rule__Secret__NameAssignment_1 )
            {
             before(grammarAccess.getSecretAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:8367:2: ( rule__Secret__NameAssignment_1 )
            // InternalDockerCompose.g:8367:3: rule__Secret__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Secret__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__1__Impl"


    // $ANTLR start "rule__Secret__Group__2"
    // InternalDockerCompose.g:8375:1: rule__Secret__Group__2 : rule__Secret__Group__2__Impl rule__Secret__Group__3 ;
    public final void rule__Secret__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8379:1: ( rule__Secret__Group__2__Impl rule__Secret__Group__3 )
            // InternalDockerCompose.g:8380:2: rule__Secret__Group__2__Impl rule__Secret__Group__3
            {
            pushFollow(FOLLOW_43);
            rule__Secret__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__2"


    // $ANTLR start "rule__Secret__Group__2__Impl"
    // InternalDockerCompose.g:8387:1: rule__Secret__Group__2__Impl : ( ':' ) ;
    public final void rule__Secret__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8391:1: ( ( ':' ) )
            // InternalDockerCompose.g:8392:1: ( ':' )
            {
            // InternalDockerCompose.g:8392:1: ( ':' )
            // InternalDockerCompose.g:8393:2: ':'
            {
             before(grammarAccess.getSecretAccess().getColonKeyword_2()); 
            match(input,46,FOLLOW_2); 
             after(grammarAccess.getSecretAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__2__Impl"


    // $ANTLR start "rule__Secret__Group__3"
    // InternalDockerCompose.g:8402:1: rule__Secret__Group__3 : rule__Secret__Group__3__Impl ;
    public final void rule__Secret__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8406:1: ( rule__Secret__Group__3__Impl )
            // InternalDockerCompose.g:8407:2: rule__Secret__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__3"


    // $ANTLR start "rule__Secret__Group__3__Impl"
    // InternalDockerCompose.g:8413:1: rule__Secret__Group__3__Impl : ( ( rule__Secret__UnorderedGroup_3 ) ) ;
    public final void rule__Secret__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8417:1: ( ( ( rule__Secret__UnorderedGroup_3 ) ) )
            // InternalDockerCompose.g:8418:1: ( ( rule__Secret__UnorderedGroup_3 ) )
            {
            // InternalDockerCompose.g:8418:1: ( ( rule__Secret__UnorderedGroup_3 ) )
            // InternalDockerCompose.g:8419:2: ( rule__Secret__UnorderedGroup_3 )
            {
             before(grammarAccess.getSecretAccess().getUnorderedGroup_3()); 
            // InternalDockerCompose.g:8420:2: ( rule__Secret__UnorderedGroup_3 )
            // InternalDockerCompose.g:8420:3: rule__Secret__UnorderedGroup_3
            {
            pushFollow(FOLLOW_2);
            rule__Secret__UnorderedGroup_3();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getUnorderedGroup_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__3__Impl"


    // $ANTLR start "rule__Secret__Group_3_0__0"
    // InternalDockerCompose.g:8429:1: rule__Secret__Group_3_0__0 : rule__Secret__Group_3_0__0__Impl rule__Secret__Group_3_0__1 ;
    public final void rule__Secret__Group_3_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8433:1: ( rule__Secret__Group_3_0__0__Impl rule__Secret__Group_3_0__1 )
            // InternalDockerCompose.g:8434:2: rule__Secret__Group_3_0__0__Impl rule__Secret__Group_3_0__1
            {
            pushFollow(FOLLOW_14);
            rule__Secret__Group_3_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_0__0"


    // $ANTLR start "rule__Secret__Group_3_0__0__Impl"
    // InternalDockerCompose.g:8441:1: rule__Secret__Group_3_0__0__Impl : ( 'external:' ) ;
    public final void rule__Secret__Group_3_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8445:1: ( ( 'external:' ) )
            // InternalDockerCompose.g:8446:1: ( 'external:' )
            {
            // InternalDockerCompose.g:8446:1: ( 'external:' )
            // InternalDockerCompose.g:8447:2: 'external:'
            {
             before(grammarAccess.getSecretAccess().getExternalKeyword_3_0_0()); 
            match(input,88,FOLLOW_2); 
             after(grammarAccess.getSecretAccess().getExternalKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_0__0__Impl"


    // $ANTLR start "rule__Secret__Group_3_0__1"
    // InternalDockerCompose.g:8456:1: rule__Secret__Group_3_0__1 : rule__Secret__Group_3_0__1__Impl ;
    public final void rule__Secret__Group_3_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8460:1: ( rule__Secret__Group_3_0__1__Impl )
            // InternalDockerCompose.g:8461:2: rule__Secret__Group_3_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_0__1"


    // $ANTLR start "rule__Secret__Group_3_0__1__Impl"
    // InternalDockerCompose.g:8467:1: rule__Secret__Group_3_0__1__Impl : ( ( rule__Secret__ExternalAssignment_3_0_1 ) ) ;
    public final void rule__Secret__Group_3_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8471:1: ( ( ( rule__Secret__ExternalAssignment_3_0_1 ) ) )
            // InternalDockerCompose.g:8472:1: ( ( rule__Secret__ExternalAssignment_3_0_1 ) )
            {
            // InternalDockerCompose.g:8472:1: ( ( rule__Secret__ExternalAssignment_3_0_1 ) )
            // InternalDockerCompose.g:8473:2: ( rule__Secret__ExternalAssignment_3_0_1 )
            {
             before(grammarAccess.getSecretAccess().getExternalAssignment_3_0_1()); 
            // InternalDockerCompose.g:8474:2: ( rule__Secret__ExternalAssignment_3_0_1 )
            // InternalDockerCompose.g:8474:3: rule__Secret__ExternalAssignment_3_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Secret__ExternalAssignment_3_0_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getExternalAssignment_3_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_0__1__Impl"


    // $ANTLR start "rule__Secret__Group_3_1__0"
    // InternalDockerCompose.g:8483:1: rule__Secret__Group_3_1__0 : rule__Secret__Group_3_1__0__Impl rule__Secret__Group_3_1__1 ;
    public final void rule__Secret__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8487:1: ( rule__Secret__Group_3_1__0__Impl rule__Secret__Group_3_1__1 )
            // InternalDockerCompose.g:8488:2: rule__Secret__Group_3_1__0__Impl rule__Secret__Group_3_1__1
            {
            pushFollow(FOLLOW_7);
            rule__Secret__Group_3_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_1__0"


    // $ANTLR start "rule__Secret__Group_3_1__0__Impl"
    // InternalDockerCompose.g:8495:1: rule__Secret__Group_3_1__0__Impl : ( 'file:' ) ;
    public final void rule__Secret__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8499:1: ( ( 'file:' ) )
            // InternalDockerCompose.g:8500:1: ( 'file:' )
            {
            // InternalDockerCompose.g:8500:1: ( 'file:' )
            // InternalDockerCompose.g:8501:2: 'file:'
            {
             before(grammarAccess.getSecretAccess().getFileKeyword_3_1_0()); 
            match(input,93,FOLLOW_2); 
             after(grammarAccess.getSecretAccess().getFileKeyword_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_1__0__Impl"


    // $ANTLR start "rule__Secret__Group_3_1__1"
    // InternalDockerCompose.g:8510:1: rule__Secret__Group_3_1__1 : rule__Secret__Group_3_1__1__Impl ;
    public final void rule__Secret__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8514:1: ( rule__Secret__Group_3_1__1__Impl )
            // InternalDockerCompose.g:8515:2: rule__Secret__Group_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_1__1"


    // $ANTLR start "rule__Secret__Group_3_1__1__Impl"
    // InternalDockerCompose.g:8521:1: rule__Secret__Group_3_1__1__Impl : ( ( rule__Secret__FileAssignment_3_1_1 ) ) ;
    public final void rule__Secret__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8525:1: ( ( ( rule__Secret__FileAssignment_3_1_1 ) ) )
            // InternalDockerCompose.g:8526:1: ( ( rule__Secret__FileAssignment_3_1_1 ) )
            {
            // InternalDockerCompose.g:8526:1: ( ( rule__Secret__FileAssignment_3_1_1 ) )
            // InternalDockerCompose.g:8527:2: ( rule__Secret__FileAssignment_3_1_1 )
            {
             before(grammarAccess.getSecretAccess().getFileAssignment_3_1_1()); 
            // InternalDockerCompose.g:8528:2: ( rule__Secret__FileAssignment_3_1_1 )
            // InternalDockerCompose.g:8528:3: rule__Secret__FileAssignment_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Secret__FileAssignment_3_1_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getFileAssignment_3_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_1__1__Impl"


    // $ANTLR start "rule__Secret__Group_3_2__0"
    // InternalDockerCompose.g:8537:1: rule__Secret__Group_3_2__0 : rule__Secret__Group_3_2__0__Impl rule__Secret__Group_3_2__1 ;
    public final void rule__Secret__Group_3_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8541:1: ( rule__Secret__Group_3_2__0__Impl rule__Secret__Group_3_2__1 )
            // InternalDockerCompose.g:8542:2: rule__Secret__Group_3_2__0__Impl rule__Secret__Group_3_2__1
            {
            pushFollow(FOLLOW_7);
            rule__Secret__Group_3_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_2__0"


    // $ANTLR start "rule__Secret__Group_3_2__0__Impl"
    // InternalDockerCompose.g:8549:1: rule__Secret__Group_3_2__0__Impl : ( 'environment:' ) ;
    public final void rule__Secret__Group_3_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8553:1: ( ( 'environment:' ) )
            // InternalDockerCompose.g:8554:1: ( 'environment:' )
            {
            // InternalDockerCompose.g:8554:1: ( 'environment:' )
            // InternalDockerCompose.g:8555:2: 'environment:'
            {
             before(grammarAccess.getSecretAccess().getEnvironmentKeyword_3_2_0()); 
            match(input,58,FOLLOW_2); 
             after(grammarAccess.getSecretAccess().getEnvironmentKeyword_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_2__0__Impl"


    // $ANTLR start "rule__Secret__Group_3_2__1"
    // InternalDockerCompose.g:8564:1: rule__Secret__Group_3_2__1 : rule__Secret__Group_3_2__1__Impl ;
    public final void rule__Secret__Group_3_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8568:1: ( rule__Secret__Group_3_2__1__Impl )
            // InternalDockerCompose.g:8569:2: rule__Secret__Group_3_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_2__1"


    // $ANTLR start "rule__Secret__Group_3_2__1__Impl"
    // InternalDockerCompose.g:8575:1: rule__Secret__Group_3_2__1__Impl : ( ( rule__Secret__EnvironmentAssignment_3_2_1 ) ) ;
    public final void rule__Secret__Group_3_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8579:1: ( ( ( rule__Secret__EnvironmentAssignment_3_2_1 ) ) )
            // InternalDockerCompose.g:8580:1: ( ( rule__Secret__EnvironmentAssignment_3_2_1 ) )
            {
            // InternalDockerCompose.g:8580:1: ( ( rule__Secret__EnvironmentAssignment_3_2_1 ) )
            // InternalDockerCompose.g:8581:2: ( rule__Secret__EnvironmentAssignment_3_2_1 )
            {
             before(grammarAccess.getSecretAccess().getEnvironmentAssignment_3_2_1()); 
            // InternalDockerCompose.g:8582:2: ( rule__Secret__EnvironmentAssignment_3_2_1 )
            // InternalDockerCompose.g:8582:3: rule__Secret__EnvironmentAssignment_3_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Secret__EnvironmentAssignment_3_2_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getEnvironmentAssignment_3_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_2__1__Impl"


    // $ANTLR start "rule__Secret__Group_3_3__0"
    // InternalDockerCompose.g:8591:1: rule__Secret__Group_3_3__0 : rule__Secret__Group_3_3__0__Impl rule__Secret__Group_3_3__1 ;
    public final void rule__Secret__Group_3_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8595:1: ( rule__Secret__Group_3_3__0__Impl rule__Secret__Group_3_3__1 )
            // InternalDockerCompose.g:8596:2: rule__Secret__Group_3_3__0__Impl rule__Secret__Group_3_3__1
            {
            pushFollow(FOLLOW_7);
            rule__Secret__Group_3_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_3__0"


    // $ANTLR start "rule__Secret__Group_3_3__0__Impl"
    // InternalDockerCompose.g:8603:1: rule__Secret__Group_3_3__0__Impl : ( 'name:' ) ;
    public final void rule__Secret__Group_3_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8607:1: ( ( 'name:' ) )
            // InternalDockerCompose.g:8608:1: ( 'name:' )
            {
            // InternalDockerCompose.g:8608:1: ( 'name:' )
            // InternalDockerCompose.g:8609:2: 'name:'
            {
             before(grammarAccess.getSecretAccess().getNameKeyword_3_3_0()); 
            match(input,89,FOLLOW_2); 
             after(grammarAccess.getSecretAccess().getNameKeyword_3_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_3__0__Impl"


    // $ANTLR start "rule__Secret__Group_3_3__1"
    // InternalDockerCompose.g:8618:1: rule__Secret__Group_3_3__1 : rule__Secret__Group_3_3__1__Impl ;
    public final void rule__Secret__Group_3_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8622:1: ( rule__Secret__Group_3_3__1__Impl )
            // InternalDockerCompose.g:8623:2: rule__Secret__Group_3_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_3__1"


    // $ANTLR start "rule__Secret__Group_3_3__1__Impl"
    // InternalDockerCompose.g:8629:1: rule__Secret__Group_3_3__1__Impl : ( ( rule__Secret__Secret_nameAssignment_3_3_1 ) ) ;
    public final void rule__Secret__Group_3_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8633:1: ( ( ( rule__Secret__Secret_nameAssignment_3_3_1 ) ) )
            // InternalDockerCompose.g:8634:1: ( ( rule__Secret__Secret_nameAssignment_3_3_1 ) )
            {
            // InternalDockerCompose.g:8634:1: ( ( rule__Secret__Secret_nameAssignment_3_3_1 ) )
            // InternalDockerCompose.g:8635:2: ( rule__Secret__Secret_nameAssignment_3_3_1 )
            {
             before(grammarAccess.getSecretAccess().getSecret_nameAssignment_3_3_1()); 
            // InternalDockerCompose.g:8636:2: ( rule__Secret__Secret_nameAssignment_3_3_1 )
            // InternalDockerCompose.g:8636:3: rule__Secret__Secret_nameAssignment_3_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Secret_nameAssignment_3_3_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getSecret_nameAssignment_3_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_3__1__Impl"


    // $ANTLR start "rule__VolumeLabel__Group__0"
    // InternalDockerCompose.g:8645:1: rule__VolumeLabel__Group__0 : rule__VolumeLabel__Group__0__Impl rule__VolumeLabel__Group__1 ;
    public final void rule__VolumeLabel__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8649:1: ( rule__VolumeLabel__Group__0__Impl rule__VolumeLabel__Group__1 )
            // InternalDockerCompose.g:8650:2: rule__VolumeLabel__Group__0__Impl rule__VolumeLabel__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__VolumeLabel__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeLabel__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__0"


    // $ANTLR start "rule__VolumeLabel__Group__0__Impl"
    // InternalDockerCompose.g:8657:1: rule__VolumeLabel__Group__0__Impl : ( () ) ;
    public final void rule__VolumeLabel__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8661:1: ( ( () ) )
            // InternalDockerCompose.g:8662:1: ( () )
            {
            // InternalDockerCompose.g:8662:1: ( () )
            // InternalDockerCompose.g:8663:2: ()
            {
             before(grammarAccess.getVolumeLabelAccess().getVolumeLabelAction_0()); 
            // InternalDockerCompose.g:8664:2: ()
            // InternalDockerCompose.g:8664:3: 
            {
            }

             after(grammarAccess.getVolumeLabelAccess().getVolumeLabelAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__0__Impl"


    // $ANTLR start "rule__VolumeLabel__Group__1"
    // InternalDockerCompose.g:8672:1: rule__VolumeLabel__Group__1 : rule__VolumeLabel__Group__1__Impl rule__VolumeLabel__Group__2 ;
    public final void rule__VolumeLabel__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8676:1: ( rule__VolumeLabel__Group__1__Impl rule__VolumeLabel__Group__2 )
            // InternalDockerCompose.g:8677:2: rule__VolumeLabel__Group__1__Impl rule__VolumeLabel__Group__2
            {
            pushFollow(FOLLOW_8);
            rule__VolumeLabel__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeLabel__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__1"


    // $ANTLR start "rule__VolumeLabel__Group__1__Impl"
    // InternalDockerCompose.g:8684:1: rule__VolumeLabel__Group__1__Impl : ( ( rule__VolumeLabel__NameAssignment_1 ) ) ;
    public final void rule__VolumeLabel__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8688:1: ( ( ( rule__VolumeLabel__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:8689:1: ( ( rule__VolumeLabel__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:8689:1: ( ( rule__VolumeLabel__NameAssignment_1 ) )
            // InternalDockerCompose.g:8690:2: ( rule__VolumeLabel__NameAssignment_1 )
            {
             before(grammarAccess.getVolumeLabelAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:8691:2: ( rule__VolumeLabel__NameAssignment_1 )
            // InternalDockerCompose.g:8691:3: rule__VolumeLabel__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeLabel__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeLabelAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__1__Impl"


    // $ANTLR start "rule__VolumeLabel__Group__2"
    // InternalDockerCompose.g:8699:1: rule__VolumeLabel__Group__2 : rule__VolumeLabel__Group__2__Impl rule__VolumeLabel__Group__3 ;
    public final void rule__VolumeLabel__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8703:1: ( rule__VolumeLabel__Group__2__Impl rule__VolumeLabel__Group__3 )
            // InternalDockerCompose.g:8704:2: rule__VolumeLabel__Group__2__Impl rule__VolumeLabel__Group__3
            {
            pushFollow(FOLLOW_7);
            rule__VolumeLabel__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeLabel__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__2"


    // $ANTLR start "rule__VolumeLabel__Group__2__Impl"
    // InternalDockerCompose.g:8711:1: rule__VolumeLabel__Group__2__Impl : ( ':' ) ;
    public final void rule__VolumeLabel__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8715:1: ( ( ':' ) )
            // InternalDockerCompose.g:8716:1: ( ':' )
            {
            // InternalDockerCompose.g:8716:1: ( ':' )
            // InternalDockerCompose.g:8717:2: ':'
            {
             before(grammarAccess.getVolumeLabelAccess().getColonKeyword_2()); 
            match(input,46,FOLLOW_2); 
             after(grammarAccess.getVolumeLabelAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__2__Impl"


    // $ANTLR start "rule__VolumeLabel__Group__3"
    // InternalDockerCompose.g:8726:1: rule__VolumeLabel__Group__3 : rule__VolumeLabel__Group__3__Impl ;
    public final void rule__VolumeLabel__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8730:1: ( rule__VolumeLabel__Group__3__Impl )
            // InternalDockerCompose.g:8731:2: rule__VolumeLabel__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeLabel__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__3"


    // $ANTLR start "rule__VolumeLabel__Group__3__Impl"
    // InternalDockerCompose.g:8737:1: rule__VolumeLabel__Group__3__Impl : ( ( rule__VolumeLabel__ValueAssignment_3 ) ) ;
    public final void rule__VolumeLabel__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8741:1: ( ( ( rule__VolumeLabel__ValueAssignment_3 ) ) )
            // InternalDockerCompose.g:8742:1: ( ( rule__VolumeLabel__ValueAssignment_3 ) )
            {
            // InternalDockerCompose.g:8742:1: ( ( rule__VolumeLabel__ValueAssignment_3 ) )
            // InternalDockerCompose.g:8743:2: ( rule__VolumeLabel__ValueAssignment_3 )
            {
             before(grammarAccess.getVolumeLabelAccess().getValueAssignment_3()); 
            // InternalDockerCompose.g:8744:2: ( rule__VolumeLabel__ValueAssignment_3 )
            // InternalDockerCompose.g:8744:3: rule__VolumeLabel__ValueAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__VolumeLabel__ValueAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getVolumeLabelAccess().getValueAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__3__Impl"


    // $ANTLR start "rule__VolumeDriverOpt__Group__0"
    // InternalDockerCompose.g:8753:1: rule__VolumeDriverOpt__Group__0 : rule__VolumeDriverOpt__Group__0__Impl rule__VolumeDriverOpt__Group__1 ;
    public final void rule__VolumeDriverOpt__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8757:1: ( rule__VolumeDriverOpt__Group__0__Impl rule__VolumeDriverOpt__Group__1 )
            // InternalDockerCompose.g:8758:2: rule__VolumeDriverOpt__Group__0__Impl rule__VolumeDriverOpt__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__VolumeDriverOpt__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__0"


    // $ANTLR start "rule__VolumeDriverOpt__Group__0__Impl"
    // InternalDockerCompose.g:8765:1: rule__VolumeDriverOpt__Group__0__Impl : ( () ) ;
    public final void rule__VolumeDriverOpt__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8769:1: ( ( () ) )
            // InternalDockerCompose.g:8770:1: ( () )
            {
            // InternalDockerCompose.g:8770:1: ( () )
            // InternalDockerCompose.g:8771:2: ()
            {
             before(grammarAccess.getVolumeDriverOptAccess().getVolumeDriverOptAction_0()); 
            // InternalDockerCompose.g:8772:2: ()
            // InternalDockerCompose.g:8772:3: 
            {
            }

             after(grammarAccess.getVolumeDriverOptAccess().getVolumeDriverOptAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__0__Impl"


    // $ANTLR start "rule__VolumeDriverOpt__Group__1"
    // InternalDockerCompose.g:8780:1: rule__VolumeDriverOpt__Group__1 : rule__VolumeDriverOpt__Group__1__Impl rule__VolumeDriverOpt__Group__2 ;
    public final void rule__VolumeDriverOpt__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8784:1: ( rule__VolumeDriverOpt__Group__1__Impl rule__VolumeDriverOpt__Group__2 )
            // InternalDockerCompose.g:8785:2: rule__VolumeDriverOpt__Group__1__Impl rule__VolumeDriverOpt__Group__2
            {
            pushFollow(FOLLOW_8);
            rule__VolumeDriverOpt__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__1"


    // $ANTLR start "rule__VolumeDriverOpt__Group__1__Impl"
    // InternalDockerCompose.g:8792:1: rule__VolumeDriverOpt__Group__1__Impl : ( ( rule__VolumeDriverOpt__NameAssignment_1 ) ) ;
    public final void rule__VolumeDriverOpt__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8796:1: ( ( ( rule__VolumeDriverOpt__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:8797:1: ( ( rule__VolumeDriverOpt__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:8797:1: ( ( rule__VolumeDriverOpt__NameAssignment_1 ) )
            // InternalDockerCompose.g:8798:2: ( rule__VolumeDriverOpt__NameAssignment_1 )
            {
             before(grammarAccess.getVolumeDriverOptAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:8799:2: ( rule__VolumeDriverOpt__NameAssignment_1 )
            // InternalDockerCompose.g:8799:3: rule__VolumeDriverOpt__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeDriverOptAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__1__Impl"


    // $ANTLR start "rule__VolumeDriverOpt__Group__2"
    // InternalDockerCompose.g:8807:1: rule__VolumeDriverOpt__Group__2 : rule__VolumeDriverOpt__Group__2__Impl rule__VolumeDriverOpt__Group__3 ;
    public final void rule__VolumeDriverOpt__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8811:1: ( rule__VolumeDriverOpt__Group__2__Impl rule__VolumeDriverOpt__Group__3 )
            // InternalDockerCompose.g:8812:2: rule__VolumeDriverOpt__Group__2__Impl rule__VolumeDriverOpt__Group__3
            {
            pushFollow(FOLLOW_7);
            rule__VolumeDriverOpt__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__2"


    // $ANTLR start "rule__VolumeDriverOpt__Group__2__Impl"
    // InternalDockerCompose.g:8819:1: rule__VolumeDriverOpt__Group__2__Impl : ( ':' ) ;
    public final void rule__VolumeDriverOpt__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8823:1: ( ( ':' ) )
            // InternalDockerCompose.g:8824:1: ( ':' )
            {
            // InternalDockerCompose.g:8824:1: ( ':' )
            // InternalDockerCompose.g:8825:2: ':'
            {
             before(grammarAccess.getVolumeDriverOptAccess().getColonKeyword_2()); 
            match(input,46,FOLLOW_2); 
             after(grammarAccess.getVolumeDriverOptAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__2__Impl"


    // $ANTLR start "rule__VolumeDriverOpt__Group__3"
    // InternalDockerCompose.g:8834:1: rule__VolumeDriverOpt__Group__3 : rule__VolumeDriverOpt__Group__3__Impl ;
    public final void rule__VolumeDriverOpt__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8838:1: ( rule__VolumeDriverOpt__Group__3__Impl )
            // InternalDockerCompose.g:8839:2: rule__VolumeDriverOpt__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__3"


    // $ANTLR start "rule__VolumeDriverOpt__Group__3__Impl"
    // InternalDockerCompose.g:8845:1: rule__VolumeDriverOpt__Group__3__Impl : ( ( rule__VolumeDriverOpt__ValueAssignment_3 ) ) ;
    public final void rule__VolumeDriverOpt__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8849:1: ( ( ( rule__VolumeDriverOpt__ValueAssignment_3 ) ) )
            // InternalDockerCompose.g:8850:1: ( ( rule__VolumeDriverOpt__ValueAssignment_3 ) )
            {
            // InternalDockerCompose.g:8850:1: ( ( rule__VolumeDriverOpt__ValueAssignment_3 ) )
            // InternalDockerCompose.g:8851:2: ( rule__VolumeDriverOpt__ValueAssignment_3 )
            {
             before(grammarAccess.getVolumeDriverOptAccess().getValueAssignment_3()); 
            // InternalDockerCompose.g:8852:2: ( rule__VolumeDriverOpt__ValueAssignment_3 )
            // InternalDockerCompose.g:8852:3: rule__VolumeDriverOpt__ValueAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__ValueAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getVolumeDriverOptAccess().getValueAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__3__Impl"


    // $ANTLR start "rule__NetworkLabel__Group__0"
    // InternalDockerCompose.g:8861:1: rule__NetworkLabel__Group__0 : rule__NetworkLabel__Group__0__Impl rule__NetworkLabel__Group__1 ;
    public final void rule__NetworkLabel__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8865:1: ( rule__NetworkLabel__Group__0__Impl rule__NetworkLabel__Group__1 )
            // InternalDockerCompose.g:8866:2: rule__NetworkLabel__Group__0__Impl rule__NetworkLabel__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__NetworkLabel__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkLabel__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__0"


    // $ANTLR start "rule__NetworkLabel__Group__0__Impl"
    // InternalDockerCompose.g:8873:1: rule__NetworkLabel__Group__0__Impl : ( () ) ;
    public final void rule__NetworkLabel__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8877:1: ( ( () ) )
            // InternalDockerCompose.g:8878:1: ( () )
            {
            // InternalDockerCompose.g:8878:1: ( () )
            // InternalDockerCompose.g:8879:2: ()
            {
             before(grammarAccess.getNetworkLabelAccess().getNetworkLabelAction_0()); 
            // InternalDockerCompose.g:8880:2: ()
            // InternalDockerCompose.g:8880:3: 
            {
            }

             after(grammarAccess.getNetworkLabelAccess().getNetworkLabelAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__0__Impl"


    // $ANTLR start "rule__NetworkLabel__Group__1"
    // InternalDockerCompose.g:8888:1: rule__NetworkLabel__Group__1 : rule__NetworkLabel__Group__1__Impl rule__NetworkLabel__Group__2 ;
    public final void rule__NetworkLabel__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8892:1: ( rule__NetworkLabel__Group__1__Impl rule__NetworkLabel__Group__2 )
            // InternalDockerCompose.g:8893:2: rule__NetworkLabel__Group__1__Impl rule__NetworkLabel__Group__2
            {
            pushFollow(FOLLOW_8);
            rule__NetworkLabel__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkLabel__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__1"


    // $ANTLR start "rule__NetworkLabel__Group__1__Impl"
    // InternalDockerCompose.g:8900:1: rule__NetworkLabel__Group__1__Impl : ( ( rule__NetworkLabel__NameAssignment_1 ) ) ;
    public final void rule__NetworkLabel__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8904:1: ( ( ( rule__NetworkLabel__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:8905:1: ( ( rule__NetworkLabel__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:8905:1: ( ( rule__NetworkLabel__NameAssignment_1 ) )
            // InternalDockerCompose.g:8906:2: ( rule__NetworkLabel__NameAssignment_1 )
            {
             before(grammarAccess.getNetworkLabelAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:8907:2: ( rule__NetworkLabel__NameAssignment_1 )
            // InternalDockerCompose.g:8907:3: rule__NetworkLabel__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkLabel__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkLabelAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__1__Impl"


    // $ANTLR start "rule__NetworkLabel__Group__2"
    // InternalDockerCompose.g:8915:1: rule__NetworkLabel__Group__2 : rule__NetworkLabel__Group__2__Impl rule__NetworkLabel__Group__3 ;
    public final void rule__NetworkLabel__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8919:1: ( rule__NetworkLabel__Group__2__Impl rule__NetworkLabel__Group__3 )
            // InternalDockerCompose.g:8920:2: rule__NetworkLabel__Group__2__Impl rule__NetworkLabel__Group__3
            {
            pushFollow(FOLLOW_7);
            rule__NetworkLabel__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkLabel__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__2"


    // $ANTLR start "rule__NetworkLabel__Group__2__Impl"
    // InternalDockerCompose.g:8927:1: rule__NetworkLabel__Group__2__Impl : ( ':' ) ;
    public final void rule__NetworkLabel__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8931:1: ( ( ':' ) )
            // InternalDockerCompose.g:8932:1: ( ':' )
            {
            // InternalDockerCompose.g:8932:1: ( ':' )
            // InternalDockerCompose.g:8933:2: ':'
            {
             before(grammarAccess.getNetworkLabelAccess().getColonKeyword_2()); 
            match(input,46,FOLLOW_2); 
             after(grammarAccess.getNetworkLabelAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__2__Impl"


    // $ANTLR start "rule__NetworkLabel__Group__3"
    // InternalDockerCompose.g:8942:1: rule__NetworkLabel__Group__3 : rule__NetworkLabel__Group__3__Impl ;
    public final void rule__NetworkLabel__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8946:1: ( rule__NetworkLabel__Group__3__Impl )
            // InternalDockerCompose.g:8947:2: rule__NetworkLabel__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkLabel__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__3"


    // $ANTLR start "rule__NetworkLabel__Group__3__Impl"
    // InternalDockerCompose.g:8953:1: rule__NetworkLabel__Group__3__Impl : ( ( rule__NetworkLabel__ValueAssignment_3 ) ) ;
    public final void rule__NetworkLabel__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8957:1: ( ( ( rule__NetworkLabel__ValueAssignment_3 ) ) )
            // InternalDockerCompose.g:8958:1: ( ( rule__NetworkLabel__ValueAssignment_3 ) )
            {
            // InternalDockerCompose.g:8958:1: ( ( rule__NetworkLabel__ValueAssignment_3 ) )
            // InternalDockerCompose.g:8959:2: ( rule__NetworkLabel__ValueAssignment_3 )
            {
             before(grammarAccess.getNetworkLabelAccess().getValueAssignment_3()); 
            // InternalDockerCompose.g:8960:2: ( rule__NetworkLabel__ValueAssignment_3 )
            // InternalDockerCompose.g:8960:3: rule__NetworkLabel__ValueAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__NetworkLabel__ValueAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getNetworkLabelAccess().getValueAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__3__Impl"


    // $ANTLR start "rule__NetworkDriverOpt__Group__0"
    // InternalDockerCompose.g:8969:1: rule__NetworkDriverOpt__Group__0 : rule__NetworkDriverOpt__Group__0__Impl rule__NetworkDriverOpt__Group__1 ;
    public final void rule__NetworkDriverOpt__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8973:1: ( rule__NetworkDriverOpt__Group__0__Impl rule__NetworkDriverOpt__Group__1 )
            // InternalDockerCompose.g:8974:2: rule__NetworkDriverOpt__Group__0__Impl rule__NetworkDriverOpt__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__NetworkDriverOpt__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__0"


    // $ANTLR start "rule__NetworkDriverOpt__Group__0__Impl"
    // InternalDockerCompose.g:8981:1: rule__NetworkDriverOpt__Group__0__Impl : ( () ) ;
    public final void rule__NetworkDriverOpt__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8985:1: ( ( () ) )
            // InternalDockerCompose.g:8986:1: ( () )
            {
            // InternalDockerCompose.g:8986:1: ( () )
            // InternalDockerCompose.g:8987:2: ()
            {
             before(grammarAccess.getNetworkDriverOptAccess().getNetworkDriverOptAction_0()); 
            // InternalDockerCompose.g:8988:2: ()
            // InternalDockerCompose.g:8988:3: 
            {
            }

             after(grammarAccess.getNetworkDriverOptAccess().getNetworkDriverOptAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__0__Impl"


    // $ANTLR start "rule__NetworkDriverOpt__Group__1"
    // InternalDockerCompose.g:8996:1: rule__NetworkDriverOpt__Group__1 : rule__NetworkDriverOpt__Group__1__Impl rule__NetworkDriverOpt__Group__2 ;
    public final void rule__NetworkDriverOpt__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9000:1: ( rule__NetworkDriverOpt__Group__1__Impl rule__NetworkDriverOpt__Group__2 )
            // InternalDockerCompose.g:9001:2: rule__NetworkDriverOpt__Group__1__Impl rule__NetworkDriverOpt__Group__2
            {
            pushFollow(FOLLOW_8);
            rule__NetworkDriverOpt__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__1"


    // $ANTLR start "rule__NetworkDriverOpt__Group__1__Impl"
    // InternalDockerCompose.g:9008:1: rule__NetworkDriverOpt__Group__1__Impl : ( ( rule__NetworkDriverOpt__NameAssignment_1 ) ) ;
    public final void rule__NetworkDriverOpt__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9012:1: ( ( ( rule__NetworkDriverOpt__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:9013:1: ( ( rule__NetworkDriverOpt__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:9013:1: ( ( rule__NetworkDriverOpt__NameAssignment_1 ) )
            // InternalDockerCompose.g:9014:2: ( rule__NetworkDriverOpt__NameAssignment_1 )
            {
             before(grammarAccess.getNetworkDriverOptAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:9015:2: ( rule__NetworkDriverOpt__NameAssignment_1 )
            // InternalDockerCompose.g:9015:3: rule__NetworkDriverOpt__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkDriverOptAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__1__Impl"


    // $ANTLR start "rule__NetworkDriverOpt__Group__2"
    // InternalDockerCompose.g:9023:1: rule__NetworkDriverOpt__Group__2 : rule__NetworkDriverOpt__Group__2__Impl rule__NetworkDriverOpt__Group__3 ;
    public final void rule__NetworkDriverOpt__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9027:1: ( rule__NetworkDriverOpt__Group__2__Impl rule__NetworkDriverOpt__Group__3 )
            // InternalDockerCompose.g:9028:2: rule__NetworkDriverOpt__Group__2__Impl rule__NetworkDriverOpt__Group__3
            {
            pushFollow(FOLLOW_7);
            rule__NetworkDriverOpt__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__2"


    // $ANTLR start "rule__NetworkDriverOpt__Group__2__Impl"
    // InternalDockerCompose.g:9035:1: rule__NetworkDriverOpt__Group__2__Impl : ( ':' ) ;
    public final void rule__NetworkDriverOpt__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9039:1: ( ( ':' ) )
            // InternalDockerCompose.g:9040:1: ( ':' )
            {
            // InternalDockerCompose.g:9040:1: ( ':' )
            // InternalDockerCompose.g:9041:2: ':'
            {
             before(grammarAccess.getNetworkDriverOptAccess().getColonKeyword_2()); 
            match(input,46,FOLLOW_2); 
             after(grammarAccess.getNetworkDriverOptAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__2__Impl"


    // $ANTLR start "rule__NetworkDriverOpt__Group__3"
    // InternalDockerCompose.g:9050:1: rule__NetworkDriverOpt__Group__3 : rule__NetworkDriverOpt__Group__3__Impl ;
    public final void rule__NetworkDriverOpt__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9054:1: ( rule__NetworkDriverOpt__Group__3__Impl )
            // InternalDockerCompose.g:9055:2: rule__NetworkDriverOpt__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__3"


    // $ANTLR start "rule__NetworkDriverOpt__Group__3__Impl"
    // InternalDockerCompose.g:9061:1: rule__NetworkDriverOpt__Group__3__Impl : ( ( rule__NetworkDriverOpt__ValueAssignment_3 ) ) ;
    public final void rule__NetworkDriverOpt__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9065:1: ( ( ( rule__NetworkDriverOpt__ValueAssignment_3 ) ) )
            // InternalDockerCompose.g:9066:1: ( ( rule__NetworkDriverOpt__ValueAssignment_3 ) )
            {
            // InternalDockerCompose.g:9066:1: ( ( rule__NetworkDriverOpt__ValueAssignment_3 ) )
            // InternalDockerCompose.g:9067:2: ( rule__NetworkDriverOpt__ValueAssignment_3 )
            {
             before(grammarAccess.getNetworkDriverOptAccess().getValueAssignment_3()); 
            // InternalDockerCompose.g:9068:2: ( rule__NetworkDriverOpt__ValueAssignment_3 )
            // InternalDockerCompose.g:9068:3: rule__NetworkDriverOpt__ValueAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__ValueAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getNetworkDriverOptAccess().getValueAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__3__Impl"


    // $ANTLR start "rule__IPAM__Group__0"
    // InternalDockerCompose.g:9077:1: rule__IPAM__Group__0 : rule__IPAM__Group__0__Impl rule__IPAM__Group__1 ;
    public final void rule__IPAM__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9081:1: ( rule__IPAM__Group__0__Impl rule__IPAM__Group__1 )
            // InternalDockerCompose.g:9082:2: rule__IPAM__Group__0__Impl rule__IPAM__Group__1
            {
            pushFollow(FOLLOW_40);
            rule__IPAM__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAM__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group__0"


    // $ANTLR start "rule__IPAM__Group__0__Impl"
    // InternalDockerCompose.g:9089:1: rule__IPAM__Group__0__Impl : ( () ) ;
    public final void rule__IPAM__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9093:1: ( ( () ) )
            // InternalDockerCompose.g:9094:1: ( () )
            {
            // InternalDockerCompose.g:9094:1: ( () )
            // InternalDockerCompose.g:9095:2: ()
            {
             before(grammarAccess.getIPAMAccess().getIPAMAction_0()); 
            // InternalDockerCompose.g:9096:2: ()
            // InternalDockerCompose.g:9096:3: 
            {
            }

             after(grammarAccess.getIPAMAccess().getIPAMAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group__0__Impl"


    // $ANTLR start "rule__IPAM__Group__1"
    // InternalDockerCompose.g:9104:1: rule__IPAM__Group__1 : rule__IPAM__Group__1__Impl ;
    public final void rule__IPAM__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9108:1: ( rule__IPAM__Group__1__Impl )
            // InternalDockerCompose.g:9109:2: rule__IPAM__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group__1"


    // $ANTLR start "rule__IPAM__Group__1__Impl"
    // InternalDockerCompose.g:9115:1: rule__IPAM__Group__1__Impl : ( ( rule__IPAM__UnorderedGroup_1 ) ) ;
    public final void rule__IPAM__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9119:1: ( ( ( rule__IPAM__UnorderedGroup_1 ) ) )
            // InternalDockerCompose.g:9120:1: ( ( rule__IPAM__UnorderedGroup_1 ) )
            {
            // InternalDockerCompose.g:9120:1: ( ( rule__IPAM__UnorderedGroup_1 ) )
            // InternalDockerCompose.g:9121:2: ( rule__IPAM__UnorderedGroup_1 )
            {
             before(grammarAccess.getIPAMAccess().getUnorderedGroup_1()); 
            // InternalDockerCompose.g:9122:2: ( rule__IPAM__UnorderedGroup_1 )
            // InternalDockerCompose.g:9122:3: rule__IPAM__UnorderedGroup_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__UnorderedGroup_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAccess().getUnorderedGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group__1__Impl"


    // $ANTLR start "rule__IPAM__Group_1_0__0"
    // InternalDockerCompose.g:9131:1: rule__IPAM__Group_1_0__0 : rule__IPAM__Group_1_0__0__Impl rule__IPAM__Group_1_0__1 ;
    public final void rule__IPAM__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9135:1: ( rule__IPAM__Group_1_0__0__Impl rule__IPAM__Group_1_0__1 )
            // InternalDockerCompose.g:9136:2: rule__IPAM__Group_1_0__0__Impl rule__IPAM__Group_1_0__1
            {
            pushFollow(FOLLOW_7);
            rule__IPAM__Group_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_0__0"


    // $ANTLR start "rule__IPAM__Group_1_0__0__Impl"
    // InternalDockerCompose.g:9143:1: rule__IPAM__Group_1_0__0__Impl : ( 'driver:' ) ;
    public final void rule__IPAM__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9147:1: ( ( 'driver:' ) )
            // InternalDockerCompose.g:9148:1: ( 'driver:' )
            {
            // InternalDockerCompose.g:9148:1: ( 'driver:' )
            // InternalDockerCompose.g:9149:2: 'driver:'
            {
             before(grammarAccess.getIPAMAccess().getDriverKeyword_1_0_0()); 
            match(input,84,FOLLOW_2); 
             after(grammarAccess.getIPAMAccess().getDriverKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_0__0__Impl"


    // $ANTLR start "rule__IPAM__Group_1_0__1"
    // InternalDockerCompose.g:9158:1: rule__IPAM__Group_1_0__1 : rule__IPAM__Group_1_0__1__Impl ;
    public final void rule__IPAM__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9162:1: ( rule__IPAM__Group_1_0__1__Impl )
            // InternalDockerCompose.g:9163:2: rule__IPAM__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_0__1"


    // $ANTLR start "rule__IPAM__Group_1_0__1__Impl"
    // InternalDockerCompose.g:9169:1: rule__IPAM__Group_1_0__1__Impl : ( ( rule__IPAM__DriverAssignment_1_0_1 ) ) ;
    public final void rule__IPAM__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9173:1: ( ( ( rule__IPAM__DriverAssignment_1_0_1 ) ) )
            // InternalDockerCompose.g:9174:1: ( ( rule__IPAM__DriverAssignment_1_0_1 ) )
            {
            // InternalDockerCompose.g:9174:1: ( ( rule__IPAM__DriverAssignment_1_0_1 ) )
            // InternalDockerCompose.g:9175:2: ( rule__IPAM__DriverAssignment_1_0_1 )
            {
             before(grammarAccess.getIPAMAccess().getDriverAssignment_1_0_1()); 
            // InternalDockerCompose.g:9176:2: ( rule__IPAM__DriverAssignment_1_0_1 )
            // InternalDockerCompose.g:9176:3: rule__IPAM__DriverAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__DriverAssignment_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAccess().getDriverAssignment_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_0__1__Impl"


    // $ANTLR start "rule__IPAM__Group_1_1__0"
    // InternalDockerCompose.g:9185:1: rule__IPAM__Group_1_1__0 : rule__IPAM__Group_1_1__0__Impl rule__IPAM__Group_1_1__1 ;
    public final void rule__IPAM__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9189:1: ( rule__IPAM__Group_1_1__0__Impl rule__IPAM__Group_1_1__1 )
            // InternalDockerCompose.g:9190:2: rule__IPAM__Group_1_1__0__Impl rule__IPAM__Group_1_1__1
            {
            pushFollow(FOLLOW_15);
            rule__IPAM__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1__0"


    // $ANTLR start "rule__IPAM__Group_1_1__0__Impl"
    // InternalDockerCompose.g:9197:1: rule__IPAM__Group_1_1__0__Impl : ( 'config:' ) ;
    public final void rule__IPAM__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9201:1: ( ( 'config:' ) )
            // InternalDockerCompose.g:9202:1: ( 'config:' )
            {
            // InternalDockerCompose.g:9202:1: ( 'config:' )
            // InternalDockerCompose.g:9203:2: 'config:'
            {
             before(grammarAccess.getIPAMAccess().getConfigKeyword_1_1_0()); 
            match(input,94,FOLLOW_2); 
             after(grammarAccess.getIPAMAccess().getConfigKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1__0__Impl"


    // $ANTLR start "rule__IPAM__Group_1_1__1"
    // InternalDockerCompose.g:9212:1: rule__IPAM__Group_1_1__1 : rule__IPAM__Group_1_1__1__Impl ;
    public final void rule__IPAM__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9216:1: ( rule__IPAM__Group_1_1__1__Impl )
            // InternalDockerCompose.g:9217:2: rule__IPAM__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1__1"


    // $ANTLR start "rule__IPAM__Group_1_1__1__Impl"
    // InternalDockerCompose.g:9223:1: rule__IPAM__Group_1_1__1__Impl : ( ( ( rule__IPAM__Group_1_1_1__0 ) ) ( ( rule__IPAM__Group_1_1_1__0 )* ) ) ;
    public final void rule__IPAM__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9227:1: ( ( ( ( rule__IPAM__Group_1_1_1__0 ) ) ( ( rule__IPAM__Group_1_1_1__0 )* ) ) )
            // InternalDockerCompose.g:9228:1: ( ( ( rule__IPAM__Group_1_1_1__0 ) ) ( ( rule__IPAM__Group_1_1_1__0 )* ) )
            {
            // InternalDockerCompose.g:9228:1: ( ( ( rule__IPAM__Group_1_1_1__0 ) ) ( ( rule__IPAM__Group_1_1_1__0 )* ) )
            // InternalDockerCompose.g:9229:2: ( ( rule__IPAM__Group_1_1_1__0 ) ) ( ( rule__IPAM__Group_1_1_1__0 )* )
            {
            // InternalDockerCompose.g:9229:2: ( ( rule__IPAM__Group_1_1_1__0 ) )
            // InternalDockerCompose.g:9230:3: ( rule__IPAM__Group_1_1_1__0 )
            {
             before(grammarAccess.getIPAMAccess().getGroup_1_1_1()); 
            // InternalDockerCompose.g:9231:3: ( rule__IPAM__Group_1_1_1__0 )
            // InternalDockerCompose.g:9231:4: rule__IPAM__Group_1_1_1__0
            {
            pushFollow(FOLLOW_3);
            rule__IPAM__Group_1_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAccess().getGroup_1_1_1()); 

            }

            // InternalDockerCompose.g:9234:2: ( ( rule__IPAM__Group_1_1_1__0 )* )
            // InternalDockerCompose.g:9235:3: ( rule__IPAM__Group_1_1_1__0 )*
            {
             before(grammarAccess.getIPAMAccess().getGroup_1_1_1()); 
            // InternalDockerCompose.g:9236:3: ( rule__IPAM__Group_1_1_1__0 )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==56) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalDockerCompose.g:9236:4: rule__IPAM__Group_1_1_1__0
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__IPAM__Group_1_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);

             after(grammarAccess.getIPAMAccess().getGroup_1_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1__1__Impl"


    // $ANTLR start "rule__IPAM__Group_1_1_1__0"
    // InternalDockerCompose.g:9246:1: rule__IPAM__Group_1_1_1__0 : rule__IPAM__Group_1_1_1__0__Impl rule__IPAM__Group_1_1_1__1 ;
    public final void rule__IPAM__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9250:1: ( rule__IPAM__Group_1_1_1__0__Impl rule__IPAM__Group_1_1_1__1 )
            // InternalDockerCompose.g:9251:2: rule__IPAM__Group_1_1_1__0__Impl rule__IPAM__Group_1_1_1__1
            {
            pushFollow(FOLLOW_44);
            rule__IPAM__Group_1_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1_1__0"


    // $ANTLR start "rule__IPAM__Group_1_1_1__0__Impl"
    // InternalDockerCompose.g:9258:1: rule__IPAM__Group_1_1_1__0__Impl : ( '-' ) ;
    public final void rule__IPAM__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9262:1: ( ( '-' ) )
            // InternalDockerCompose.g:9263:1: ( '-' )
            {
            // InternalDockerCompose.g:9263:1: ( '-' )
            // InternalDockerCompose.g:9264:2: '-'
            {
             before(grammarAccess.getIPAMAccess().getHyphenMinusKeyword_1_1_1_0()); 
            match(input,56,FOLLOW_2); 
             after(grammarAccess.getIPAMAccess().getHyphenMinusKeyword_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__IPAM__Group_1_1_1__1"
    // InternalDockerCompose.g:9273:1: rule__IPAM__Group_1_1_1__1 : rule__IPAM__Group_1_1_1__1__Impl ;
    public final void rule__IPAM__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9277:1: ( rule__IPAM__Group_1_1_1__1__Impl )
            // InternalDockerCompose.g:9278:2: rule__IPAM__Group_1_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1_1__1"


    // $ANTLR start "rule__IPAM__Group_1_1_1__1__Impl"
    // InternalDockerCompose.g:9284:1: rule__IPAM__Group_1_1_1__1__Impl : ( ( rule__IPAM__ConfigsAssignment_1_1_1_1 ) ) ;
    public final void rule__IPAM__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9288:1: ( ( ( rule__IPAM__ConfigsAssignment_1_1_1_1 ) ) )
            // InternalDockerCompose.g:9289:1: ( ( rule__IPAM__ConfigsAssignment_1_1_1_1 ) )
            {
            // InternalDockerCompose.g:9289:1: ( ( rule__IPAM__ConfigsAssignment_1_1_1_1 ) )
            // InternalDockerCompose.g:9290:2: ( rule__IPAM__ConfigsAssignment_1_1_1_1 )
            {
             before(grammarAccess.getIPAMAccess().getConfigsAssignment_1_1_1_1()); 
            // InternalDockerCompose.g:9291:2: ( rule__IPAM__ConfigsAssignment_1_1_1_1 )
            // InternalDockerCompose.g:9291:3: rule__IPAM__ConfigsAssignment_1_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__ConfigsAssignment_1_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAccess().getConfigsAssignment_1_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__IPAM__Group_1_2__0"
    // InternalDockerCompose.g:9300:1: rule__IPAM__Group_1_2__0 : rule__IPAM__Group_1_2__0__Impl rule__IPAM__Group_1_2__1 ;
    public final void rule__IPAM__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9304:1: ( rule__IPAM__Group_1_2__0__Impl rule__IPAM__Group_1_2__1 )
            // InternalDockerCompose.g:9305:2: rule__IPAM__Group_1_2__0__Impl rule__IPAM__Group_1_2__1
            {
            pushFollow(FOLLOW_7);
            rule__IPAM__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_2__0"


    // $ANTLR start "rule__IPAM__Group_1_2__0__Impl"
    // InternalDockerCompose.g:9312:1: rule__IPAM__Group_1_2__0__Impl : ( 'options:' ) ;
    public final void rule__IPAM__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9316:1: ( ( 'options:' ) )
            // InternalDockerCompose.g:9317:1: ( 'options:' )
            {
            // InternalDockerCompose.g:9317:1: ( 'options:' )
            // InternalDockerCompose.g:9318:2: 'options:'
            {
             before(grammarAccess.getIPAMAccess().getOptionsKeyword_1_2_0()); 
            match(input,95,FOLLOW_2); 
             after(grammarAccess.getIPAMAccess().getOptionsKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_2__0__Impl"


    // $ANTLR start "rule__IPAM__Group_1_2__1"
    // InternalDockerCompose.g:9327:1: rule__IPAM__Group_1_2__1 : rule__IPAM__Group_1_2__1__Impl ;
    public final void rule__IPAM__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9331:1: ( rule__IPAM__Group_1_2__1__Impl )
            // InternalDockerCompose.g:9332:2: rule__IPAM__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_2__1"


    // $ANTLR start "rule__IPAM__Group_1_2__1__Impl"
    // InternalDockerCompose.g:9338:1: rule__IPAM__Group_1_2__1__Impl : ( ( ( rule__IPAM__OptionsAssignment_1_2_1 ) ) ( ( rule__IPAM__OptionsAssignment_1_2_1 )* ) ) ;
    public final void rule__IPAM__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9342:1: ( ( ( ( rule__IPAM__OptionsAssignment_1_2_1 ) ) ( ( rule__IPAM__OptionsAssignment_1_2_1 )* ) ) )
            // InternalDockerCompose.g:9343:1: ( ( ( rule__IPAM__OptionsAssignment_1_2_1 ) ) ( ( rule__IPAM__OptionsAssignment_1_2_1 )* ) )
            {
            // InternalDockerCompose.g:9343:1: ( ( ( rule__IPAM__OptionsAssignment_1_2_1 ) ) ( ( rule__IPAM__OptionsAssignment_1_2_1 )* ) )
            // InternalDockerCompose.g:9344:2: ( ( rule__IPAM__OptionsAssignment_1_2_1 ) ) ( ( rule__IPAM__OptionsAssignment_1_2_1 )* )
            {
            // InternalDockerCompose.g:9344:2: ( ( rule__IPAM__OptionsAssignment_1_2_1 ) )
            // InternalDockerCompose.g:9345:3: ( rule__IPAM__OptionsAssignment_1_2_1 )
            {
             before(grammarAccess.getIPAMAccess().getOptionsAssignment_1_2_1()); 
            // InternalDockerCompose.g:9346:3: ( rule__IPAM__OptionsAssignment_1_2_1 )
            // InternalDockerCompose.g:9346:4: rule__IPAM__OptionsAssignment_1_2_1
            {
            pushFollow(FOLLOW_4);
            rule__IPAM__OptionsAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAccess().getOptionsAssignment_1_2_1()); 

            }

            // InternalDockerCompose.g:9349:2: ( ( rule__IPAM__OptionsAssignment_1_2_1 )* )
            // InternalDockerCompose.g:9350:3: ( rule__IPAM__OptionsAssignment_1_2_1 )*
            {
             before(grammarAccess.getIPAMAccess().getOptionsAssignment_1_2_1()); 
            // InternalDockerCompose.g:9351:3: ( rule__IPAM__OptionsAssignment_1_2_1 )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==RULE_STRING) ) {
                    int LA60_2 = input.LA(2);

                    if ( (LA60_2==46) ) {
                        int LA60_4 = input.LA(3);

                        if ( (LA60_4==RULE_STRING) ) {
                            int LA60_5 = input.LA(4);

                            if ( (LA60_5==EOF||(LA60_5>=RULE_STRING && LA60_5<=RULE_ID)||(LA60_5>=40 && LA60_5<=45)||(LA60_5>=84 && LA60_5<=92)||(LA60_5>=94 && LA60_5<=95)) ) {
                                alt60=1;
                            }


                        }
                        else if ( (LA60_4==RULE_ID) ) {
                            int LA60_6 = input.LA(4);

                            if ( (LA60_6==EOF||(LA60_6>=RULE_STRING && LA60_6<=RULE_ID)||(LA60_6>=40 && LA60_6<=45)||(LA60_6>=84 && LA60_6<=92)||(LA60_6>=94 && LA60_6<=95)) ) {
                                alt60=1;
                            }


                        }


                    }


                }
                else if ( (LA60_0==RULE_ID) ) {
                    int LA60_3 = input.LA(2);

                    if ( (LA60_3==46) ) {
                        int LA60_4 = input.LA(3);

                        if ( (LA60_4==RULE_STRING) ) {
                            int LA60_5 = input.LA(4);

                            if ( (LA60_5==EOF||(LA60_5>=RULE_STRING && LA60_5<=RULE_ID)||(LA60_5>=40 && LA60_5<=45)||(LA60_5>=84 && LA60_5<=92)||(LA60_5>=94 && LA60_5<=95)) ) {
                                alt60=1;
                            }


                        }
                        else if ( (LA60_4==RULE_ID) ) {
                            int LA60_6 = input.LA(4);

                            if ( (LA60_6==EOF||(LA60_6>=RULE_STRING && LA60_6<=RULE_ID)||(LA60_6>=40 && LA60_6<=45)||(LA60_6>=84 && LA60_6<=92)||(LA60_6>=94 && LA60_6<=95)) ) {
                                alt60=1;
                            }


                        }


                    }


                }


                switch (alt60) {
            	case 1 :
            	    // InternalDockerCompose.g:9351:4: rule__IPAM__OptionsAssignment_1_2_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__IPAM__OptionsAssignment_1_2_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

             after(grammarAccess.getIPAMAccess().getOptionsAssignment_1_2_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_2__1__Impl"


    // $ANTLR start "rule__IPAMConfig__Group__0"
    // InternalDockerCompose.g:9361:1: rule__IPAMConfig__Group__0 : rule__IPAMConfig__Group__0__Impl rule__IPAMConfig__Group__1 ;
    public final void rule__IPAMConfig__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9365:1: ( rule__IPAMConfig__Group__0__Impl rule__IPAMConfig__Group__1 )
            // InternalDockerCompose.g:9366:2: rule__IPAMConfig__Group__0__Impl rule__IPAMConfig__Group__1
            {
            pushFollow(FOLLOW_44);
            rule__IPAMConfig__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group__0"


    // $ANTLR start "rule__IPAMConfig__Group__0__Impl"
    // InternalDockerCompose.g:9373:1: rule__IPAMConfig__Group__0__Impl : ( () ) ;
    public final void rule__IPAMConfig__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9377:1: ( ( () ) )
            // InternalDockerCompose.g:9378:1: ( () )
            {
            // InternalDockerCompose.g:9378:1: ( () )
            // InternalDockerCompose.g:9379:2: ()
            {
             before(grammarAccess.getIPAMConfigAccess().getIPAMConfigAction_0()); 
            // InternalDockerCompose.g:9380:2: ()
            // InternalDockerCompose.g:9380:3: 
            {
            }

             after(grammarAccess.getIPAMConfigAccess().getIPAMConfigAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group__0__Impl"


    // $ANTLR start "rule__IPAMConfig__Group__1"
    // InternalDockerCompose.g:9388:1: rule__IPAMConfig__Group__1 : rule__IPAMConfig__Group__1__Impl ;
    public final void rule__IPAMConfig__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9392:1: ( rule__IPAMConfig__Group__1__Impl )
            // InternalDockerCompose.g:9393:2: rule__IPAMConfig__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group__1"


    // $ANTLR start "rule__IPAMConfig__Group__1__Impl"
    // InternalDockerCompose.g:9399:1: rule__IPAMConfig__Group__1__Impl : ( ( rule__IPAMConfig__UnorderedGroup_1 ) ) ;
    public final void rule__IPAMConfig__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9403:1: ( ( ( rule__IPAMConfig__UnorderedGroup_1 ) ) )
            // InternalDockerCompose.g:9404:1: ( ( rule__IPAMConfig__UnorderedGroup_1 ) )
            {
            // InternalDockerCompose.g:9404:1: ( ( rule__IPAMConfig__UnorderedGroup_1 ) )
            // InternalDockerCompose.g:9405:2: ( rule__IPAMConfig__UnorderedGroup_1 )
            {
             before(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1()); 
            // InternalDockerCompose.g:9406:2: ( rule__IPAMConfig__UnorderedGroup_1 )
            // InternalDockerCompose.g:9406:3: rule__IPAMConfig__UnorderedGroup_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__UnorderedGroup_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group__1__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_0__0"
    // InternalDockerCompose.g:9415:1: rule__IPAMConfig__Group_1_0__0 : rule__IPAMConfig__Group_1_0__0__Impl rule__IPAMConfig__Group_1_0__1 ;
    public final void rule__IPAMConfig__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9419:1: ( rule__IPAMConfig__Group_1_0__0__Impl rule__IPAMConfig__Group_1_0__1 )
            // InternalDockerCompose.g:9420:2: rule__IPAMConfig__Group_1_0__0__Impl rule__IPAMConfig__Group_1_0__1
            {
            pushFollow(FOLLOW_12);
            rule__IPAMConfig__Group_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_0__0"


    // $ANTLR start "rule__IPAMConfig__Group_1_0__0__Impl"
    // InternalDockerCompose.g:9427:1: rule__IPAMConfig__Group_1_0__0__Impl : ( 'subnet:' ) ;
    public final void rule__IPAMConfig__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9431:1: ( ( 'subnet:' ) )
            // InternalDockerCompose.g:9432:1: ( 'subnet:' )
            {
            // InternalDockerCompose.g:9432:1: ( 'subnet:' )
            // InternalDockerCompose.g:9433:2: 'subnet:'
            {
             before(grammarAccess.getIPAMConfigAccess().getSubnetKeyword_1_0_0()); 
            match(input,96,FOLLOW_2); 
             after(grammarAccess.getIPAMConfigAccess().getSubnetKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_0__0__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_0__1"
    // InternalDockerCompose.g:9442:1: rule__IPAMConfig__Group_1_0__1 : rule__IPAMConfig__Group_1_0__1__Impl ;
    public final void rule__IPAMConfig__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9446:1: ( rule__IPAMConfig__Group_1_0__1__Impl )
            // InternalDockerCompose.g:9447:2: rule__IPAMConfig__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_0__1"


    // $ANTLR start "rule__IPAMConfig__Group_1_0__1__Impl"
    // InternalDockerCompose.g:9453:1: rule__IPAMConfig__Group_1_0__1__Impl : ( ( rule__IPAMConfig__SubnetAssignment_1_0_1 ) ) ;
    public final void rule__IPAMConfig__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9457:1: ( ( ( rule__IPAMConfig__SubnetAssignment_1_0_1 ) ) )
            // InternalDockerCompose.g:9458:1: ( ( rule__IPAMConfig__SubnetAssignment_1_0_1 ) )
            {
            // InternalDockerCompose.g:9458:1: ( ( rule__IPAMConfig__SubnetAssignment_1_0_1 ) )
            // InternalDockerCompose.g:9459:2: ( rule__IPAMConfig__SubnetAssignment_1_0_1 )
            {
             before(grammarAccess.getIPAMConfigAccess().getSubnetAssignment_1_0_1()); 
            // InternalDockerCompose.g:9460:2: ( rule__IPAMConfig__SubnetAssignment_1_0_1 )
            // InternalDockerCompose.g:9460:3: rule__IPAMConfig__SubnetAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__SubnetAssignment_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMConfigAccess().getSubnetAssignment_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_0__1__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_1__0"
    // InternalDockerCompose.g:9469:1: rule__IPAMConfig__Group_1_1__0 : rule__IPAMConfig__Group_1_1__0__Impl rule__IPAMConfig__Group_1_1__1 ;
    public final void rule__IPAMConfig__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9473:1: ( rule__IPAMConfig__Group_1_1__0__Impl rule__IPAMConfig__Group_1_1__1 )
            // InternalDockerCompose.g:9474:2: rule__IPAMConfig__Group_1_1__0__Impl rule__IPAMConfig__Group_1_1__1
            {
            pushFollow(FOLLOW_12);
            rule__IPAMConfig__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_1__0"


    // $ANTLR start "rule__IPAMConfig__Group_1_1__0__Impl"
    // InternalDockerCompose.g:9481:1: rule__IPAMConfig__Group_1_1__0__Impl : ( 'ip_range:' ) ;
    public final void rule__IPAMConfig__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9485:1: ( ( 'ip_range:' ) )
            // InternalDockerCompose.g:9486:1: ( 'ip_range:' )
            {
            // InternalDockerCompose.g:9486:1: ( 'ip_range:' )
            // InternalDockerCompose.g:9487:2: 'ip_range:'
            {
             before(grammarAccess.getIPAMConfigAccess().getIp_rangeKeyword_1_1_0()); 
            match(input,97,FOLLOW_2); 
             after(grammarAccess.getIPAMConfigAccess().getIp_rangeKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_1__0__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_1__1"
    // InternalDockerCompose.g:9496:1: rule__IPAMConfig__Group_1_1__1 : rule__IPAMConfig__Group_1_1__1__Impl ;
    public final void rule__IPAMConfig__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9500:1: ( rule__IPAMConfig__Group_1_1__1__Impl )
            // InternalDockerCompose.g:9501:2: rule__IPAMConfig__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_1__1"


    // $ANTLR start "rule__IPAMConfig__Group_1_1__1__Impl"
    // InternalDockerCompose.g:9507:1: rule__IPAMConfig__Group_1_1__1__Impl : ( ( rule__IPAMConfig__Ip_rangeAssignment_1_1_1 ) ) ;
    public final void rule__IPAMConfig__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9511:1: ( ( ( rule__IPAMConfig__Ip_rangeAssignment_1_1_1 ) ) )
            // InternalDockerCompose.g:9512:1: ( ( rule__IPAMConfig__Ip_rangeAssignment_1_1_1 ) )
            {
            // InternalDockerCompose.g:9512:1: ( ( rule__IPAMConfig__Ip_rangeAssignment_1_1_1 ) )
            // InternalDockerCompose.g:9513:2: ( rule__IPAMConfig__Ip_rangeAssignment_1_1_1 )
            {
             before(grammarAccess.getIPAMConfigAccess().getIp_rangeAssignment_1_1_1()); 
            // InternalDockerCompose.g:9514:2: ( rule__IPAMConfig__Ip_rangeAssignment_1_1_1 )
            // InternalDockerCompose.g:9514:3: rule__IPAMConfig__Ip_rangeAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Ip_rangeAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMConfigAccess().getIp_rangeAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_1__1__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_2__0"
    // InternalDockerCompose.g:9523:1: rule__IPAMConfig__Group_1_2__0 : rule__IPAMConfig__Group_1_2__0__Impl rule__IPAMConfig__Group_1_2__1 ;
    public final void rule__IPAMConfig__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9527:1: ( rule__IPAMConfig__Group_1_2__0__Impl rule__IPAMConfig__Group_1_2__1 )
            // InternalDockerCompose.g:9528:2: rule__IPAMConfig__Group_1_2__0__Impl rule__IPAMConfig__Group_1_2__1
            {
            pushFollow(FOLLOW_22);
            rule__IPAMConfig__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_2__0"


    // $ANTLR start "rule__IPAMConfig__Group_1_2__0__Impl"
    // InternalDockerCompose.g:9535:1: rule__IPAMConfig__Group_1_2__0__Impl : ( 'gateway:' ) ;
    public final void rule__IPAMConfig__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9539:1: ( ( 'gateway:' ) )
            // InternalDockerCompose.g:9540:1: ( 'gateway:' )
            {
            // InternalDockerCompose.g:9540:1: ( 'gateway:' )
            // InternalDockerCompose.g:9541:2: 'gateway:'
            {
             before(grammarAccess.getIPAMConfigAccess().getGatewayKeyword_1_2_0()); 
            match(input,98,FOLLOW_2); 
             after(grammarAccess.getIPAMConfigAccess().getGatewayKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_2__0__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_2__1"
    // InternalDockerCompose.g:9550:1: rule__IPAMConfig__Group_1_2__1 : rule__IPAMConfig__Group_1_2__1__Impl ;
    public final void rule__IPAMConfig__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9554:1: ( rule__IPAMConfig__Group_1_2__1__Impl )
            // InternalDockerCompose.g:9555:2: rule__IPAMConfig__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_2__1"


    // $ANTLR start "rule__IPAMConfig__Group_1_2__1__Impl"
    // InternalDockerCompose.g:9561:1: rule__IPAMConfig__Group_1_2__1__Impl : ( ( rule__IPAMConfig__GatewayAssignment_1_2_1 ) ) ;
    public final void rule__IPAMConfig__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9565:1: ( ( ( rule__IPAMConfig__GatewayAssignment_1_2_1 ) ) )
            // InternalDockerCompose.g:9566:1: ( ( rule__IPAMConfig__GatewayAssignment_1_2_1 ) )
            {
            // InternalDockerCompose.g:9566:1: ( ( rule__IPAMConfig__GatewayAssignment_1_2_1 ) )
            // InternalDockerCompose.g:9567:2: ( rule__IPAMConfig__GatewayAssignment_1_2_1 )
            {
             before(grammarAccess.getIPAMConfigAccess().getGatewayAssignment_1_2_1()); 
            // InternalDockerCompose.g:9568:2: ( rule__IPAMConfig__GatewayAssignment_1_2_1 )
            // InternalDockerCompose.g:9568:3: rule__IPAMConfig__GatewayAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__GatewayAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMConfigAccess().getGatewayAssignment_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_2__1__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_3__0"
    // InternalDockerCompose.g:9577:1: rule__IPAMConfig__Group_1_3__0 : rule__IPAMConfig__Group_1_3__0__Impl rule__IPAMConfig__Group_1_3__1 ;
    public final void rule__IPAMConfig__Group_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9581:1: ( rule__IPAMConfig__Group_1_3__0__Impl rule__IPAMConfig__Group_1_3__1 )
            // InternalDockerCompose.g:9582:2: rule__IPAMConfig__Group_1_3__0__Impl rule__IPAMConfig__Group_1_3__1
            {
            pushFollow(FOLLOW_7);
            rule__IPAMConfig__Group_1_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_3__0"


    // $ANTLR start "rule__IPAMConfig__Group_1_3__0__Impl"
    // InternalDockerCompose.g:9589:1: rule__IPAMConfig__Group_1_3__0__Impl : ( 'aux_addresses:' ) ;
    public final void rule__IPAMConfig__Group_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9593:1: ( ( 'aux_addresses:' ) )
            // InternalDockerCompose.g:9594:1: ( 'aux_addresses:' )
            {
            // InternalDockerCompose.g:9594:1: ( 'aux_addresses:' )
            // InternalDockerCompose.g:9595:2: 'aux_addresses:'
            {
             before(grammarAccess.getIPAMConfigAccess().getAux_addressesKeyword_1_3_0()); 
            match(input,99,FOLLOW_2); 
             after(grammarAccess.getIPAMConfigAccess().getAux_addressesKeyword_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_3__0__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_3__1"
    // InternalDockerCompose.g:9604:1: rule__IPAMConfig__Group_1_3__1 : rule__IPAMConfig__Group_1_3__1__Impl ;
    public final void rule__IPAMConfig__Group_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9608:1: ( rule__IPAMConfig__Group_1_3__1__Impl )
            // InternalDockerCompose.g:9609:2: rule__IPAMConfig__Group_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_3__1"


    // $ANTLR start "rule__IPAMConfig__Group_1_3__1__Impl"
    // InternalDockerCompose.g:9615:1: rule__IPAMConfig__Group_1_3__1__Impl : ( ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 ) ) ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )* ) ) ;
    public final void rule__IPAMConfig__Group_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9619:1: ( ( ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 ) ) ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )* ) ) )
            // InternalDockerCompose.g:9620:1: ( ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 ) ) ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )* ) )
            {
            // InternalDockerCompose.g:9620:1: ( ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 ) ) ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )* ) )
            // InternalDockerCompose.g:9621:2: ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 ) ) ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )* )
            {
            // InternalDockerCompose.g:9621:2: ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 ) )
            // InternalDockerCompose.g:9622:3: ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )
            {
             before(grammarAccess.getIPAMConfigAccess().getAux_addressesAssignment_1_3_1()); 
            // InternalDockerCompose.g:9623:3: ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )
            // InternalDockerCompose.g:9623:4: rule__IPAMConfig__Aux_addressesAssignment_1_3_1
            {
            pushFollow(FOLLOW_4);
            rule__IPAMConfig__Aux_addressesAssignment_1_3_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMConfigAccess().getAux_addressesAssignment_1_3_1()); 

            }

            // InternalDockerCompose.g:9626:2: ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )* )
            // InternalDockerCompose.g:9627:3: ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )*
            {
             before(grammarAccess.getIPAMConfigAccess().getAux_addressesAssignment_1_3_1()); 
            // InternalDockerCompose.g:9628:3: ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( (LA61_0==RULE_STRING) ) {
                    int LA61_2 = input.LA(2);

                    if ( (LA61_2==46) ) {
                        int LA61_4 = input.LA(3);

                        if ( (LA61_4==RULE_INT) ) {
                            alt61=1;
                        }


                    }


                }
                else if ( (LA61_0==RULE_ID) ) {
                    int LA61_3 = input.LA(2);

                    if ( (LA61_3==46) ) {
                        int LA61_4 = input.LA(3);

                        if ( (LA61_4==RULE_INT) ) {
                            alt61=1;
                        }


                    }


                }


                switch (alt61) {
            	case 1 :
            	    // InternalDockerCompose.g:9628:4: rule__IPAMConfig__Aux_addressesAssignment_1_3_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__IPAMConfig__Aux_addressesAssignment_1_3_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);

             after(grammarAccess.getIPAMConfigAccess().getAux_addressesAssignment_1_3_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_3__1__Impl"


    // $ANTLR start "rule__IPAMOption__Group__0"
    // InternalDockerCompose.g:9638:1: rule__IPAMOption__Group__0 : rule__IPAMOption__Group__0__Impl rule__IPAMOption__Group__1 ;
    public final void rule__IPAMOption__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9642:1: ( rule__IPAMOption__Group__0__Impl rule__IPAMOption__Group__1 )
            // InternalDockerCompose.g:9643:2: rule__IPAMOption__Group__0__Impl rule__IPAMOption__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__IPAMOption__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMOption__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__0"


    // $ANTLR start "rule__IPAMOption__Group__0__Impl"
    // InternalDockerCompose.g:9650:1: rule__IPAMOption__Group__0__Impl : ( () ) ;
    public final void rule__IPAMOption__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9654:1: ( ( () ) )
            // InternalDockerCompose.g:9655:1: ( () )
            {
            // InternalDockerCompose.g:9655:1: ( () )
            // InternalDockerCompose.g:9656:2: ()
            {
             before(grammarAccess.getIPAMOptionAccess().getIPAMOptionAction_0()); 
            // InternalDockerCompose.g:9657:2: ()
            // InternalDockerCompose.g:9657:3: 
            {
            }

             after(grammarAccess.getIPAMOptionAccess().getIPAMOptionAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__0__Impl"


    // $ANTLR start "rule__IPAMOption__Group__1"
    // InternalDockerCompose.g:9665:1: rule__IPAMOption__Group__1 : rule__IPAMOption__Group__1__Impl rule__IPAMOption__Group__2 ;
    public final void rule__IPAMOption__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9669:1: ( rule__IPAMOption__Group__1__Impl rule__IPAMOption__Group__2 )
            // InternalDockerCompose.g:9670:2: rule__IPAMOption__Group__1__Impl rule__IPAMOption__Group__2
            {
            pushFollow(FOLLOW_8);
            rule__IPAMOption__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMOption__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__1"


    // $ANTLR start "rule__IPAMOption__Group__1__Impl"
    // InternalDockerCompose.g:9677:1: rule__IPAMOption__Group__1__Impl : ( ( rule__IPAMOption__NameAssignment_1 ) ) ;
    public final void rule__IPAMOption__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9681:1: ( ( ( rule__IPAMOption__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:9682:1: ( ( rule__IPAMOption__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:9682:1: ( ( rule__IPAMOption__NameAssignment_1 ) )
            // InternalDockerCompose.g:9683:2: ( rule__IPAMOption__NameAssignment_1 )
            {
             before(grammarAccess.getIPAMOptionAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:9684:2: ( rule__IPAMOption__NameAssignment_1 )
            // InternalDockerCompose.g:9684:3: rule__IPAMOption__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAMOption__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMOptionAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__1__Impl"


    // $ANTLR start "rule__IPAMOption__Group__2"
    // InternalDockerCompose.g:9692:1: rule__IPAMOption__Group__2 : rule__IPAMOption__Group__2__Impl rule__IPAMOption__Group__3 ;
    public final void rule__IPAMOption__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9696:1: ( rule__IPAMOption__Group__2__Impl rule__IPAMOption__Group__3 )
            // InternalDockerCompose.g:9697:2: rule__IPAMOption__Group__2__Impl rule__IPAMOption__Group__3
            {
            pushFollow(FOLLOW_7);
            rule__IPAMOption__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMOption__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__2"


    // $ANTLR start "rule__IPAMOption__Group__2__Impl"
    // InternalDockerCompose.g:9704:1: rule__IPAMOption__Group__2__Impl : ( ':' ) ;
    public final void rule__IPAMOption__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9708:1: ( ( ':' ) )
            // InternalDockerCompose.g:9709:1: ( ':' )
            {
            // InternalDockerCompose.g:9709:1: ( ':' )
            // InternalDockerCompose.g:9710:2: ':'
            {
             before(grammarAccess.getIPAMOptionAccess().getColonKeyword_2()); 
            match(input,46,FOLLOW_2); 
             after(grammarAccess.getIPAMOptionAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__2__Impl"


    // $ANTLR start "rule__IPAMOption__Group__3"
    // InternalDockerCompose.g:9719:1: rule__IPAMOption__Group__3 : rule__IPAMOption__Group__3__Impl ;
    public final void rule__IPAMOption__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9723:1: ( rule__IPAMOption__Group__3__Impl )
            // InternalDockerCompose.g:9724:2: rule__IPAMOption__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMOption__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__3"


    // $ANTLR start "rule__IPAMOption__Group__3__Impl"
    // InternalDockerCompose.g:9730:1: rule__IPAMOption__Group__3__Impl : ( ( rule__IPAMOption__ValueAssignment_3 ) ) ;
    public final void rule__IPAMOption__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9734:1: ( ( ( rule__IPAMOption__ValueAssignment_3 ) ) )
            // InternalDockerCompose.g:9735:1: ( ( rule__IPAMOption__ValueAssignment_3 ) )
            {
            // InternalDockerCompose.g:9735:1: ( ( rule__IPAMOption__ValueAssignment_3 ) )
            // InternalDockerCompose.g:9736:2: ( rule__IPAMOption__ValueAssignment_3 )
            {
             before(grammarAccess.getIPAMOptionAccess().getValueAssignment_3()); 
            // InternalDockerCompose.g:9737:2: ( rule__IPAMOption__ValueAssignment_3 )
            // InternalDockerCompose.g:9737:3: rule__IPAMOption__ValueAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__IPAMOption__ValueAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getIPAMOptionAccess().getValueAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__3__Impl"


    // $ANTLR start "rule__IPAMAddress__Group__0"
    // InternalDockerCompose.g:9746:1: rule__IPAMAddress__Group__0 : rule__IPAMAddress__Group__0__Impl rule__IPAMAddress__Group__1 ;
    public final void rule__IPAMAddress__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9750:1: ( rule__IPAMAddress__Group__0__Impl rule__IPAMAddress__Group__1 )
            // InternalDockerCompose.g:9751:2: rule__IPAMAddress__Group__0__Impl rule__IPAMAddress__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__IPAMAddress__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMAddress__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__0"


    // $ANTLR start "rule__IPAMAddress__Group__0__Impl"
    // InternalDockerCompose.g:9758:1: rule__IPAMAddress__Group__0__Impl : ( () ) ;
    public final void rule__IPAMAddress__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9762:1: ( ( () ) )
            // InternalDockerCompose.g:9763:1: ( () )
            {
            // InternalDockerCompose.g:9763:1: ( () )
            // InternalDockerCompose.g:9764:2: ()
            {
             before(grammarAccess.getIPAMAddressAccess().getIPAMAddressAction_0()); 
            // InternalDockerCompose.g:9765:2: ()
            // InternalDockerCompose.g:9765:3: 
            {
            }

             after(grammarAccess.getIPAMAddressAccess().getIPAMAddressAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__0__Impl"


    // $ANTLR start "rule__IPAMAddress__Group__1"
    // InternalDockerCompose.g:9773:1: rule__IPAMAddress__Group__1 : rule__IPAMAddress__Group__1__Impl rule__IPAMAddress__Group__2 ;
    public final void rule__IPAMAddress__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9777:1: ( rule__IPAMAddress__Group__1__Impl rule__IPAMAddress__Group__2 )
            // InternalDockerCompose.g:9778:2: rule__IPAMAddress__Group__1__Impl rule__IPAMAddress__Group__2
            {
            pushFollow(FOLLOW_8);
            rule__IPAMAddress__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMAddress__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__1"


    // $ANTLR start "rule__IPAMAddress__Group__1__Impl"
    // InternalDockerCompose.g:9785:1: rule__IPAMAddress__Group__1__Impl : ( ( rule__IPAMAddress__NameAssignment_1 ) ) ;
    public final void rule__IPAMAddress__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9789:1: ( ( ( rule__IPAMAddress__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:9790:1: ( ( rule__IPAMAddress__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:9790:1: ( ( rule__IPAMAddress__NameAssignment_1 ) )
            // InternalDockerCompose.g:9791:2: ( rule__IPAMAddress__NameAssignment_1 )
            {
             before(grammarAccess.getIPAMAddressAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:9792:2: ( rule__IPAMAddress__NameAssignment_1 )
            // InternalDockerCompose.g:9792:3: rule__IPAMAddress__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAMAddress__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAddressAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__1__Impl"


    // $ANTLR start "rule__IPAMAddress__Group__2"
    // InternalDockerCompose.g:9800:1: rule__IPAMAddress__Group__2 : rule__IPAMAddress__Group__2__Impl rule__IPAMAddress__Group__3 ;
    public final void rule__IPAMAddress__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9804:1: ( rule__IPAMAddress__Group__2__Impl rule__IPAMAddress__Group__3 )
            // InternalDockerCompose.g:9805:2: rule__IPAMAddress__Group__2__Impl rule__IPAMAddress__Group__3
            {
            pushFollow(FOLLOW_22);
            rule__IPAMAddress__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMAddress__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__2"


    // $ANTLR start "rule__IPAMAddress__Group__2__Impl"
    // InternalDockerCompose.g:9812:1: rule__IPAMAddress__Group__2__Impl : ( ':' ) ;
    public final void rule__IPAMAddress__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9816:1: ( ( ':' ) )
            // InternalDockerCompose.g:9817:1: ( ':' )
            {
            // InternalDockerCompose.g:9817:1: ( ':' )
            // InternalDockerCompose.g:9818:2: ':'
            {
             before(grammarAccess.getIPAMAddressAccess().getColonKeyword_2()); 
            match(input,46,FOLLOW_2); 
             after(grammarAccess.getIPAMAddressAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__2__Impl"


    // $ANTLR start "rule__IPAMAddress__Group__3"
    // InternalDockerCompose.g:9827:1: rule__IPAMAddress__Group__3 : rule__IPAMAddress__Group__3__Impl ;
    public final void rule__IPAMAddress__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9831:1: ( rule__IPAMAddress__Group__3__Impl )
            // InternalDockerCompose.g:9832:2: rule__IPAMAddress__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMAddress__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__3"


    // $ANTLR start "rule__IPAMAddress__Group__3__Impl"
    // InternalDockerCompose.g:9838:1: rule__IPAMAddress__Group__3__Impl : ( ( rule__IPAMAddress__DnsAssignment_3 ) ) ;
    public final void rule__IPAMAddress__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9842:1: ( ( ( rule__IPAMAddress__DnsAssignment_3 ) ) )
            // InternalDockerCompose.g:9843:1: ( ( rule__IPAMAddress__DnsAssignment_3 ) )
            {
            // InternalDockerCompose.g:9843:1: ( ( rule__IPAMAddress__DnsAssignment_3 ) )
            // InternalDockerCompose.g:9844:2: ( rule__IPAMAddress__DnsAssignment_3 )
            {
             before(grammarAccess.getIPAMAddressAccess().getDnsAssignment_3()); 
            // InternalDockerCompose.g:9845:2: ( rule__IPAMAddress__DnsAssignment_3 )
            // InternalDockerCompose.g:9845:3: rule__IPAMAddress__DnsAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__IPAMAddress__DnsAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAddressAccess().getDnsAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__3__Impl"


    // $ANTLR start "rule__PATH__Group_0__0"
    // InternalDockerCompose.g:9854:1: rule__PATH__Group_0__0 : rule__PATH__Group_0__0__Impl rule__PATH__Group_0__1 ;
    public final void rule__PATH__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9858:1: ( rule__PATH__Group_0__0__Impl rule__PATH__Group_0__1 )
            // InternalDockerCompose.g:9859:2: rule__PATH__Group_0__0__Impl rule__PATH__Group_0__1
            {
            pushFollow(FOLLOW_45);
            rule__PATH__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0__0"


    // $ANTLR start "rule__PATH__Group_0__0__Impl"
    // InternalDockerCompose.g:9866:1: rule__PATH__Group_0__0__Impl : ( ( rule__PATH__Alternatives_0_0 ) ) ;
    public final void rule__PATH__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9870:1: ( ( ( rule__PATH__Alternatives_0_0 ) ) )
            // InternalDockerCompose.g:9871:1: ( ( rule__PATH__Alternatives_0_0 ) )
            {
            // InternalDockerCompose.g:9871:1: ( ( rule__PATH__Alternatives_0_0 ) )
            // InternalDockerCompose.g:9872:2: ( rule__PATH__Alternatives_0_0 )
            {
             before(grammarAccess.getPATHAccess().getAlternatives_0_0()); 
            // InternalDockerCompose.g:9873:2: ( rule__PATH__Alternatives_0_0 )
            // InternalDockerCompose.g:9873:3: rule__PATH__Alternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Alternatives_0_0();

            state._fsp--;


            }

             after(grammarAccess.getPATHAccess().getAlternatives_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0__0__Impl"


    // $ANTLR start "rule__PATH__Group_0__1"
    // InternalDockerCompose.g:9881:1: rule__PATH__Group_0__1 : rule__PATH__Group_0__1__Impl rule__PATH__Group_0__2 ;
    public final void rule__PATH__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9885:1: ( rule__PATH__Group_0__1__Impl rule__PATH__Group_0__2 )
            // InternalDockerCompose.g:9886:2: rule__PATH__Group_0__1__Impl rule__PATH__Group_0__2
            {
            pushFollow(FOLLOW_45);
            rule__PATH__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0__1"


    // $ANTLR start "rule__PATH__Group_0__1__Impl"
    // InternalDockerCompose.g:9893:1: rule__PATH__Group_0__1__Impl : ( ( rule__PATH__Group_0_1__0 )* ) ;
    public final void rule__PATH__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9897:1: ( ( ( rule__PATH__Group_0_1__0 )* ) )
            // InternalDockerCompose.g:9898:1: ( ( rule__PATH__Group_0_1__0 )* )
            {
            // InternalDockerCompose.g:9898:1: ( ( rule__PATH__Group_0_1__0 )* )
            // InternalDockerCompose.g:9899:2: ( rule__PATH__Group_0_1__0 )*
            {
             before(grammarAccess.getPATHAccess().getGroup_0_1()); 
            // InternalDockerCompose.g:9900:2: ( rule__PATH__Group_0_1__0 )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==63) ) {
                    int LA62_1 = input.LA(2);

                    if ( (LA62_1==RULE_ID) ) {
                        int LA62_3 = input.LA(3);

                        if ( (LA62_3==EOF||(LA62_3>=RULE_STRING && LA62_3<=RULE_ID)||LA62_3==16||(LA62_3>=40 && LA62_3<=45)||(LA62_3>=47 && LA62_3<=61)||LA62_3==63||(LA62_3>=70 && LA62_3<=73)||LA62_3==75||LA62_3==77||(LA62_3>=79 && LA62_3<=81)) ) {
                            alt62=1;
                        }
                        else if ( (LA62_3==46) ) {
                            int LA62_5 = input.LA(4);

                            if ( ((LA62_5>=24 && LA62_5<=26)) ) {
                                alt62=1;
                            }


                        }


                    }
                    else if ( ((LA62_1>=16 && LA62_1<=17)) ) {
                        alt62=1;
                    }


                }


                switch (alt62) {
            	case 1 :
            	    // InternalDockerCompose.g:9900:3: rule__PATH__Group_0_1__0
            	    {
            	    pushFollow(FOLLOW_46);
            	    rule__PATH__Group_0_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);

             after(grammarAccess.getPATHAccess().getGroup_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0__1__Impl"


    // $ANTLR start "rule__PATH__Group_0__2"
    // InternalDockerCompose.g:9908:1: rule__PATH__Group_0__2 : rule__PATH__Group_0__2__Impl ;
    public final void rule__PATH__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9912:1: ( rule__PATH__Group_0__2__Impl )
            // InternalDockerCompose.g:9913:2: rule__PATH__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Group_0__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0__2"


    // $ANTLR start "rule__PATH__Group_0__2__Impl"
    // InternalDockerCompose.g:9919:1: rule__PATH__Group_0__2__Impl : ( ( '/' )? ) ;
    public final void rule__PATH__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9923:1: ( ( ( '/' )? ) )
            // InternalDockerCompose.g:9924:1: ( ( '/' )? )
            {
            // InternalDockerCompose.g:9924:1: ( ( '/' )? )
            // InternalDockerCompose.g:9925:2: ( '/' )?
            {
             before(grammarAccess.getPATHAccess().getSolidusKeyword_0_2()); 
            // InternalDockerCompose.g:9926:2: ( '/' )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==63) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalDockerCompose.g:9926:3: '/'
                    {
                    match(input,63,FOLLOW_2); 

                    }
                    break;

            }

             after(grammarAccess.getPATHAccess().getSolidusKeyword_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0__2__Impl"


    // $ANTLR start "rule__PATH__Group_0_0_0__0"
    // InternalDockerCompose.g:9935:1: rule__PATH__Group_0_0_0__0 : rule__PATH__Group_0_0_0__0__Impl rule__PATH__Group_0_0_0__1 ;
    public final void rule__PATH__Group_0_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9939:1: ( rule__PATH__Group_0_0_0__0__Impl rule__PATH__Group_0_0_0__1 )
            // InternalDockerCompose.g:9940:2: rule__PATH__Group_0_0_0__0__Impl rule__PATH__Group_0_0_0__1
            {
            pushFollow(FOLLOW_47);
            rule__PATH__Group_0_0_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group_0_0_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_0_0__0"


    // $ANTLR start "rule__PATH__Group_0_0_0__0__Impl"
    // InternalDockerCompose.g:9947:1: rule__PATH__Group_0_0_0__0__Impl : ( RULE_ID ) ;
    public final void rule__PATH__Group_0_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9951:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:9952:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:9952:1: ( RULE_ID )
            // InternalDockerCompose.g:9953:2: RULE_ID
            {
             before(grammarAccess.getPATHAccess().getIDTerminalRuleCall_0_0_0_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getPATHAccess().getIDTerminalRuleCall_0_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_0_0__0__Impl"


    // $ANTLR start "rule__PATH__Group_0_0_0__1"
    // InternalDockerCompose.g:9962:1: rule__PATH__Group_0_0_0__1 : rule__PATH__Group_0_0_0__1__Impl ;
    public final void rule__PATH__Group_0_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9966:1: ( rule__PATH__Group_0_0_0__1__Impl )
            // InternalDockerCompose.g:9967:2: rule__PATH__Group_0_0_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Group_0_0_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_0_0__1"


    // $ANTLR start "rule__PATH__Group_0_0_0__1__Impl"
    // InternalDockerCompose.g:9973:1: rule__PATH__Group_0_0_0__1__Impl : ( ( rule__PATH__Group_0_0_0_1__0 )* ) ;
    public final void rule__PATH__Group_0_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9977:1: ( ( ( rule__PATH__Group_0_0_0_1__0 )* ) )
            // InternalDockerCompose.g:9978:1: ( ( rule__PATH__Group_0_0_0_1__0 )* )
            {
            // InternalDockerCompose.g:9978:1: ( ( rule__PATH__Group_0_0_0_1__0 )* )
            // InternalDockerCompose.g:9979:2: ( rule__PATH__Group_0_0_0_1__0 )*
            {
             before(grammarAccess.getPATHAccess().getGroup_0_0_0_1()); 
            // InternalDockerCompose.g:9980:2: ( rule__PATH__Group_0_0_0_1__0 )*
            loop64:
            do {
                int alt64=2;
                int LA64_0 = input.LA(1);

                if ( (LA64_0==16) ) {
                    alt64=1;
                }


                switch (alt64) {
            	case 1 :
            	    // InternalDockerCompose.g:9980:3: rule__PATH__Group_0_0_0_1__0
            	    {
            	    pushFollow(FOLLOW_48);
            	    rule__PATH__Group_0_0_0_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);

             after(grammarAccess.getPATHAccess().getGroup_0_0_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_0_0__1__Impl"


    // $ANTLR start "rule__PATH__Group_0_0_0_1__0"
    // InternalDockerCompose.g:9989:1: rule__PATH__Group_0_0_0_1__0 : rule__PATH__Group_0_0_0_1__0__Impl rule__PATH__Group_0_0_0_1__1 ;
    public final void rule__PATH__Group_0_0_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9993:1: ( rule__PATH__Group_0_0_0_1__0__Impl rule__PATH__Group_0_0_0_1__1 )
            // InternalDockerCompose.g:9994:2: rule__PATH__Group_0_0_0_1__0__Impl rule__PATH__Group_0_0_0_1__1
            {
            pushFollow(FOLLOW_11);
            rule__PATH__Group_0_0_0_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group_0_0_0_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_0_0_1__0"


    // $ANTLR start "rule__PATH__Group_0_0_0_1__0__Impl"
    // InternalDockerCompose.g:10001:1: rule__PATH__Group_0_0_0_1__0__Impl : ( '.' ) ;
    public final void rule__PATH__Group_0_0_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10005:1: ( ( '.' ) )
            // InternalDockerCompose.g:10006:1: ( '.' )
            {
            // InternalDockerCompose.g:10006:1: ( '.' )
            // InternalDockerCompose.g:10007:2: '.'
            {
             before(grammarAccess.getPATHAccess().getFullStopKeyword_0_0_0_1_0()); 
            match(input,16,FOLLOW_2); 
             after(grammarAccess.getPATHAccess().getFullStopKeyword_0_0_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_0_0_1__0__Impl"


    // $ANTLR start "rule__PATH__Group_0_0_0_1__1"
    // InternalDockerCompose.g:10016:1: rule__PATH__Group_0_0_0_1__1 : rule__PATH__Group_0_0_0_1__1__Impl ;
    public final void rule__PATH__Group_0_0_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10020:1: ( rule__PATH__Group_0_0_0_1__1__Impl )
            // InternalDockerCompose.g:10021:2: rule__PATH__Group_0_0_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Group_0_0_0_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_0_0_1__1"


    // $ANTLR start "rule__PATH__Group_0_0_0_1__1__Impl"
    // InternalDockerCompose.g:10027:1: rule__PATH__Group_0_0_0_1__1__Impl : ( RULE_ID ) ;
    public final void rule__PATH__Group_0_0_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10031:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:10032:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:10032:1: ( RULE_ID )
            // InternalDockerCompose.g:10033:2: RULE_ID
            {
             before(grammarAccess.getPATHAccess().getIDTerminalRuleCall_0_0_0_1_1()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getPATHAccess().getIDTerminalRuleCall_0_0_0_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_0_0_1__1__Impl"


    // $ANTLR start "rule__PATH__Group_0_1__0"
    // InternalDockerCompose.g:10043:1: rule__PATH__Group_0_1__0 : rule__PATH__Group_0_1__0__Impl rule__PATH__Group_0_1__1 ;
    public final void rule__PATH__Group_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10047:1: ( rule__PATH__Group_0_1__0__Impl rule__PATH__Group_0_1__1 )
            // InternalDockerCompose.g:10048:2: rule__PATH__Group_0_1__0__Impl rule__PATH__Group_0_1__1
            {
            pushFollow(FOLLOW_49);
            rule__PATH__Group_0_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group_0_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_1__0"


    // $ANTLR start "rule__PATH__Group_0_1__0__Impl"
    // InternalDockerCompose.g:10055:1: rule__PATH__Group_0_1__0__Impl : ( '/' ) ;
    public final void rule__PATH__Group_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10059:1: ( ( '/' ) )
            // InternalDockerCompose.g:10060:1: ( '/' )
            {
            // InternalDockerCompose.g:10060:1: ( '/' )
            // InternalDockerCompose.g:10061:2: '/'
            {
             before(grammarAccess.getPATHAccess().getSolidusKeyword_0_1_0()); 
            match(input,63,FOLLOW_2); 
             after(grammarAccess.getPATHAccess().getSolidusKeyword_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_1__0__Impl"


    // $ANTLR start "rule__PATH__Group_0_1__1"
    // InternalDockerCompose.g:10070:1: rule__PATH__Group_0_1__1 : rule__PATH__Group_0_1__1__Impl ;
    public final void rule__PATH__Group_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10074:1: ( rule__PATH__Group_0_1__1__Impl )
            // InternalDockerCompose.g:10075:2: rule__PATH__Group_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Group_0_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_1__1"


    // $ANTLR start "rule__PATH__Group_0_1__1__Impl"
    // InternalDockerCompose.g:10081:1: rule__PATH__Group_0_1__1__Impl : ( ( rule__PATH__Alternatives_0_1_1 ) ) ;
    public final void rule__PATH__Group_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10085:1: ( ( ( rule__PATH__Alternatives_0_1_1 ) ) )
            // InternalDockerCompose.g:10086:1: ( ( rule__PATH__Alternatives_0_1_1 ) )
            {
            // InternalDockerCompose.g:10086:1: ( ( rule__PATH__Alternatives_0_1_1 ) )
            // InternalDockerCompose.g:10087:2: ( rule__PATH__Alternatives_0_1_1 )
            {
             before(grammarAccess.getPATHAccess().getAlternatives_0_1_1()); 
            // InternalDockerCompose.g:10088:2: ( rule__PATH__Alternatives_0_1_1 )
            // InternalDockerCompose.g:10088:3: rule__PATH__Alternatives_0_1_1
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Alternatives_0_1_1();

            state._fsp--;


            }

             after(grammarAccess.getPATHAccess().getAlternatives_0_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_1__1__Impl"


    // $ANTLR start "rule__PATH__Group_0_1_1_0__0"
    // InternalDockerCompose.g:10097:1: rule__PATH__Group_0_1_1_0__0 : rule__PATH__Group_0_1_1_0__0__Impl rule__PATH__Group_0_1_1_0__1 ;
    public final void rule__PATH__Group_0_1_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10101:1: ( rule__PATH__Group_0_1_1_0__0__Impl rule__PATH__Group_0_1_1_0__1 )
            // InternalDockerCompose.g:10102:2: rule__PATH__Group_0_1_1_0__0__Impl rule__PATH__Group_0_1_1_0__1
            {
            pushFollow(FOLLOW_47);
            rule__PATH__Group_0_1_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group_0_1_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_1_1_0__0"


    // $ANTLR start "rule__PATH__Group_0_1_1_0__0__Impl"
    // InternalDockerCompose.g:10109:1: rule__PATH__Group_0_1_1_0__0__Impl : ( RULE_ID ) ;
    public final void rule__PATH__Group_0_1_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10113:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:10114:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:10114:1: ( RULE_ID )
            // InternalDockerCompose.g:10115:2: RULE_ID
            {
             before(grammarAccess.getPATHAccess().getIDTerminalRuleCall_0_1_1_0_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getPATHAccess().getIDTerminalRuleCall_0_1_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_1_1_0__0__Impl"


    // $ANTLR start "rule__PATH__Group_0_1_1_0__1"
    // InternalDockerCompose.g:10124:1: rule__PATH__Group_0_1_1_0__1 : rule__PATH__Group_0_1_1_0__1__Impl ;
    public final void rule__PATH__Group_0_1_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10128:1: ( rule__PATH__Group_0_1_1_0__1__Impl )
            // InternalDockerCompose.g:10129:2: rule__PATH__Group_0_1_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Group_0_1_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_1_1_0__1"


    // $ANTLR start "rule__PATH__Group_0_1_1_0__1__Impl"
    // InternalDockerCompose.g:10135:1: rule__PATH__Group_0_1_1_0__1__Impl : ( ( rule__PATH__Group_0_1_1_0_1__0 )* ) ;
    public final void rule__PATH__Group_0_1_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10139:1: ( ( ( rule__PATH__Group_0_1_1_0_1__0 )* ) )
            // InternalDockerCompose.g:10140:1: ( ( rule__PATH__Group_0_1_1_0_1__0 )* )
            {
            // InternalDockerCompose.g:10140:1: ( ( rule__PATH__Group_0_1_1_0_1__0 )* )
            // InternalDockerCompose.g:10141:2: ( rule__PATH__Group_0_1_1_0_1__0 )*
            {
             before(grammarAccess.getPATHAccess().getGroup_0_1_1_0_1()); 
            // InternalDockerCompose.g:10142:2: ( rule__PATH__Group_0_1_1_0_1__0 )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( (LA65_0==16) ) {
                    alt65=1;
                }


                switch (alt65) {
            	case 1 :
            	    // InternalDockerCompose.g:10142:3: rule__PATH__Group_0_1_1_0_1__0
            	    {
            	    pushFollow(FOLLOW_48);
            	    rule__PATH__Group_0_1_1_0_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);

             after(grammarAccess.getPATHAccess().getGroup_0_1_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_1_1_0__1__Impl"


    // $ANTLR start "rule__PATH__Group_0_1_1_0_1__0"
    // InternalDockerCompose.g:10151:1: rule__PATH__Group_0_1_1_0_1__0 : rule__PATH__Group_0_1_1_0_1__0__Impl rule__PATH__Group_0_1_1_0_1__1 ;
    public final void rule__PATH__Group_0_1_1_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10155:1: ( rule__PATH__Group_0_1_1_0_1__0__Impl rule__PATH__Group_0_1_1_0_1__1 )
            // InternalDockerCompose.g:10156:2: rule__PATH__Group_0_1_1_0_1__0__Impl rule__PATH__Group_0_1_1_0_1__1
            {
            pushFollow(FOLLOW_11);
            rule__PATH__Group_0_1_1_0_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group_0_1_1_0_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_1_1_0_1__0"


    // $ANTLR start "rule__PATH__Group_0_1_1_0_1__0__Impl"
    // InternalDockerCompose.g:10163:1: rule__PATH__Group_0_1_1_0_1__0__Impl : ( '.' ) ;
    public final void rule__PATH__Group_0_1_1_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10167:1: ( ( '.' ) )
            // InternalDockerCompose.g:10168:1: ( '.' )
            {
            // InternalDockerCompose.g:10168:1: ( '.' )
            // InternalDockerCompose.g:10169:2: '.'
            {
             before(grammarAccess.getPATHAccess().getFullStopKeyword_0_1_1_0_1_0()); 
            match(input,16,FOLLOW_2); 
             after(grammarAccess.getPATHAccess().getFullStopKeyword_0_1_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_1_1_0_1__0__Impl"


    // $ANTLR start "rule__PATH__Group_0_1_1_0_1__1"
    // InternalDockerCompose.g:10178:1: rule__PATH__Group_0_1_1_0_1__1 : rule__PATH__Group_0_1_1_0_1__1__Impl ;
    public final void rule__PATH__Group_0_1_1_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10182:1: ( rule__PATH__Group_0_1_1_0_1__1__Impl )
            // InternalDockerCompose.g:10183:2: rule__PATH__Group_0_1_1_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Group_0_1_1_0_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_1_1_0_1__1"


    // $ANTLR start "rule__PATH__Group_0_1_1_0_1__1__Impl"
    // InternalDockerCompose.g:10189:1: rule__PATH__Group_0_1_1_0_1__1__Impl : ( RULE_ID ) ;
    public final void rule__PATH__Group_0_1_1_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10193:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:10194:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:10194:1: ( RULE_ID )
            // InternalDockerCompose.g:10195:2: RULE_ID
            {
             before(grammarAccess.getPATHAccess().getIDTerminalRuleCall_0_1_1_0_1_1()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getPATHAccess().getIDTerminalRuleCall_0_1_1_0_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_1_1_0_1__1__Impl"


    // $ANTLR start "rule__PATH__Group_1__0"
    // InternalDockerCompose.g:10205:1: rule__PATH__Group_1__0 : rule__PATH__Group_1__0__Impl rule__PATH__Group_1__1 ;
    public final void rule__PATH__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10209:1: ( rule__PATH__Group_1__0__Impl rule__PATH__Group_1__1 )
            // InternalDockerCompose.g:10210:2: rule__PATH__Group_1__0__Impl rule__PATH__Group_1__1
            {
            pushFollow(FOLLOW_49);
            rule__PATH__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1__0"


    // $ANTLR start "rule__PATH__Group_1__0__Impl"
    // InternalDockerCompose.g:10217:1: rule__PATH__Group_1__0__Impl : ( '/' ) ;
    public final void rule__PATH__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10221:1: ( ( '/' ) )
            // InternalDockerCompose.g:10222:1: ( '/' )
            {
            // InternalDockerCompose.g:10222:1: ( '/' )
            // InternalDockerCompose.g:10223:2: '/'
            {
             before(grammarAccess.getPATHAccess().getSolidusKeyword_1_0()); 
            match(input,63,FOLLOW_2); 
             after(grammarAccess.getPATHAccess().getSolidusKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1__0__Impl"


    // $ANTLR start "rule__PATH__Group_1__1"
    // InternalDockerCompose.g:10232:1: rule__PATH__Group_1__1 : rule__PATH__Group_1__1__Impl rule__PATH__Group_1__2 ;
    public final void rule__PATH__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10236:1: ( rule__PATH__Group_1__1__Impl rule__PATH__Group_1__2 )
            // InternalDockerCompose.g:10237:2: rule__PATH__Group_1__1__Impl rule__PATH__Group_1__2
            {
            pushFollow(FOLLOW_49);
            rule__PATH__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1__1"


    // $ANTLR start "rule__PATH__Group_1__1__Impl"
    // InternalDockerCompose.g:10244:1: rule__PATH__Group_1__1__Impl : ( ( rule__PATH__Group_1_1__0 )* ) ;
    public final void rule__PATH__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10248:1: ( ( ( rule__PATH__Group_1_1__0 )* ) )
            // InternalDockerCompose.g:10249:1: ( ( rule__PATH__Group_1_1__0 )* )
            {
            // InternalDockerCompose.g:10249:1: ( ( rule__PATH__Group_1_1__0 )* )
            // InternalDockerCompose.g:10250:2: ( rule__PATH__Group_1_1__0 )*
            {
             before(grammarAccess.getPATHAccess().getGroup_1_1()); 
            // InternalDockerCompose.g:10251:2: ( rule__PATH__Group_1_1__0 )*
            loop66:
            do {
                int alt66=2;
                alt66 = dfa66.predict(input);
                switch (alt66) {
            	case 1 :
            	    // InternalDockerCompose.g:10251:3: rule__PATH__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_50);
            	    rule__PATH__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

             after(grammarAccess.getPATHAccess().getGroup_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1__1__Impl"


    // $ANTLR start "rule__PATH__Group_1__2"
    // InternalDockerCompose.g:10259:1: rule__PATH__Group_1__2 : rule__PATH__Group_1__2__Impl ;
    public final void rule__PATH__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10263:1: ( rule__PATH__Group_1__2__Impl )
            // InternalDockerCompose.g:10264:2: rule__PATH__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1__2"


    // $ANTLR start "rule__PATH__Group_1__2__Impl"
    // InternalDockerCompose.g:10270:1: rule__PATH__Group_1__2__Impl : ( ( rule__PATH__Alternatives_1_2 )? ) ;
    public final void rule__PATH__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10274:1: ( ( ( rule__PATH__Alternatives_1_2 )? ) )
            // InternalDockerCompose.g:10275:1: ( ( rule__PATH__Alternatives_1_2 )? )
            {
            // InternalDockerCompose.g:10275:1: ( ( rule__PATH__Alternatives_1_2 )? )
            // InternalDockerCompose.g:10276:2: ( rule__PATH__Alternatives_1_2 )?
            {
             before(grammarAccess.getPATHAccess().getAlternatives_1_2()); 
            // InternalDockerCompose.g:10277:2: ( rule__PATH__Alternatives_1_2 )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==RULE_ID) ) {
                int LA67_1 = input.LA(2);

                if ( (LA67_1==EOF||(LA67_1>=RULE_STRING && LA67_1<=RULE_ID)||LA67_1==16||(LA67_1>=40 && LA67_1<=45)||(LA67_1>=47 && LA67_1<=61)||(LA67_1>=70 && LA67_1<=73)||LA67_1==75||LA67_1==77||(LA67_1>=79 && LA67_1<=81)) ) {
                    alt67=1;
                }
                else if ( (LA67_1==46) ) {
                    int LA67_4 = input.LA(3);

                    if ( ((LA67_4>=24 && LA67_4<=26)) ) {
                        alt67=1;
                    }
                }
            }
            else if ( ((LA67_0>=16 && LA67_0<=17)) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalDockerCompose.g:10277:3: rule__PATH__Alternatives_1_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__PATH__Alternatives_1_2();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getPATHAccess().getAlternatives_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1__2__Impl"


    // $ANTLR start "rule__PATH__Group_1_1__0"
    // InternalDockerCompose.g:10286:1: rule__PATH__Group_1_1__0 : rule__PATH__Group_1_1__0__Impl rule__PATH__Group_1_1__1 ;
    public final void rule__PATH__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10290:1: ( rule__PATH__Group_1_1__0__Impl rule__PATH__Group_1_1__1 )
            // InternalDockerCompose.g:10291:2: rule__PATH__Group_1_1__0__Impl rule__PATH__Group_1_1__1
            {
            pushFollow(FOLLOW_45);
            rule__PATH__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_1__0"


    // $ANTLR start "rule__PATH__Group_1_1__0__Impl"
    // InternalDockerCompose.g:10298:1: rule__PATH__Group_1_1__0__Impl : ( ( rule__PATH__Alternatives_1_1_0 ) ) ;
    public final void rule__PATH__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10302:1: ( ( ( rule__PATH__Alternatives_1_1_0 ) ) )
            // InternalDockerCompose.g:10303:1: ( ( rule__PATH__Alternatives_1_1_0 ) )
            {
            // InternalDockerCompose.g:10303:1: ( ( rule__PATH__Alternatives_1_1_0 ) )
            // InternalDockerCompose.g:10304:2: ( rule__PATH__Alternatives_1_1_0 )
            {
             before(grammarAccess.getPATHAccess().getAlternatives_1_1_0()); 
            // InternalDockerCompose.g:10305:2: ( rule__PATH__Alternatives_1_1_0 )
            // InternalDockerCompose.g:10305:3: rule__PATH__Alternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Alternatives_1_1_0();

            state._fsp--;


            }

             after(grammarAccess.getPATHAccess().getAlternatives_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_1__0__Impl"


    // $ANTLR start "rule__PATH__Group_1_1__1"
    // InternalDockerCompose.g:10313:1: rule__PATH__Group_1_1__1 : rule__PATH__Group_1_1__1__Impl ;
    public final void rule__PATH__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10317:1: ( rule__PATH__Group_1_1__1__Impl )
            // InternalDockerCompose.g:10318:2: rule__PATH__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_1__1"


    // $ANTLR start "rule__PATH__Group_1_1__1__Impl"
    // InternalDockerCompose.g:10324:1: rule__PATH__Group_1_1__1__Impl : ( '/' ) ;
    public final void rule__PATH__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10328:1: ( ( '/' ) )
            // InternalDockerCompose.g:10329:1: ( '/' )
            {
            // InternalDockerCompose.g:10329:1: ( '/' )
            // InternalDockerCompose.g:10330:2: '/'
            {
             before(grammarAccess.getPATHAccess().getSolidusKeyword_1_1_1()); 
            match(input,63,FOLLOW_2); 
             after(grammarAccess.getPATHAccess().getSolidusKeyword_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_1__1__Impl"


    // $ANTLR start "rule__PATH__Group_1_1_0_0__0"
    // InternalDockerCompose.g:10340:1: rule__PATH__Group_1_1_0_0__0 : rule__PATH__Group_1_1_0_0__0__Impl rule__PATH__Group_1_1_0_0__1 ;
    public final void rule__PATH__Group_1_1_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10344:1: ( rule__PATH__Group_1_1_0_0__0__Impl rule__PATH__Group_1_1_0_0__1 )
            // InternalDockerCompose.g:10345:2: rule__PATH__Group_1_1_0_0__0__Impl rule__PATH__Group_1_1_0_0__1
            {
            pushFollow(FOLLOW_47);
            rule__PATH__Group_1_1_0_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group_1_1_0_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_1_0_0__0"


    // $ANTLR start "rule__PATH__Group_1_1_0_0__0__Impl"
    // InternalDockerCompose.g:10352:1: rule__PATH__Group_1_1_0_0__0__Impl : ( RULE_ID ) ;
    public final void rule__PATH__Group_1_1_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10356:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:10357:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:10357:1: ( RULE_ID )
            // InternalDockerCompose.g:10358:2: RULE_ID
            {
             before(grammarAccess.getPATHAccess().getIDTerminalRuleCall_1_1_0_0_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getPATHAccess().getIDTerminalRuleCall_1_1_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_1_0_0__0__Impl"


    // $ANTLR start "rule__PATH__Group_1_1_0_0__1"
    // InternalDockerCompose.g:10367:1: rule__PATH__Group_1_1_0_0__1 : rule__PATH__Group_1_1_0_0__1__Impl ;
    public final void rule__PATH__Group_1_1_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10371:1: ( rule__PATH__Group_1_1_0_0__1__Impl )
            // InternalDockerCompose.g:10372:2: rule__PATH__Group_1_1_0_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Group_1_1_0_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_1_0_0__1"


    // $ANTLR start "rule__PATH__Group_1_1_0_0__1__Impl"
    // InternalDockerCompose.g:10378:1: rule__PATH__Group_1_1_0_0__1__Impl : ( ( rule__PATH__Group_1_1_0_0_1__0 )* ) ;
    public final void rule__PATH__Group_1_1_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10382:1: ( ( ( rule__PATH__Group_1_1_0_0_1__0 )* ) )
            // InternalDockerCompose.g:10383:1: ( ( rule__PATH__Group_1_1_0_0_1__0 )* )
            {
            // InternalDockerCompose.g:10383:1: ( ( rule__PATH__Group_1_1_0_0_1__0 )* )
            // InternalDockerCompose.g:10384:2: ( rule__PATH__Group_1_1_0_0_1__0 )*
            {
             before(grammarAccess.getPATHAccess().getGroup_1_1_0_0_1()); 
            // InternalDockerCompose.g:10385:2: ( rule__PATH__Group_1_1_0_0_1__0 )*
            loop68:
            do {
                int alt68=2;
                int LA68_0 = input.LA(1);

                if ( (LA68_0==16) ) {
                    alt68=1;
                }


                switch (alt68) {
            	case 1 :
            	    // InternalDockerCompose.g:10385:3: rule__PATH__Group_1_1_0_0_1__0
            	    {
            	    pushFollow(FOLLOW_48);
            	    rule__PATH__Group_1_1_0_0_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);

             after(grammarAccess.getPATHAccess().getGroup_1_1_0_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_1_0_0__1__Impl"


    // $ANTLR start "rule__PATH__Group_1_1_0_0_1__0"
    // InternalDockerCompose.g:10394:1: rule__PATH__Group_1_1_0_0_1__0 : rule__PATH__Group_1_1_0_0_1__0__Impl rule__PATH__Group_1_1_0_0_1__1 ;
    public final void rule__PATH__Group_1_1_0_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10398:1: ( rule__PATH__Group_1_1_0_0_1__0__Impl rule__PATH__Group_1_1_0_0_1__1 )
            // InternalDockerCompose.g:10399:2: rule__PATH__Group_1_1_0_0_1__0__Impl rule__PATH__Group_1_1_0_0_1__1
            {
            pushFollow(FOLLOW_11);
            rule__PATH__Group_1_1_0_0_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group_1_1_0_0_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_1_0_0_1__0"


    // $ANTLR start "rule__PATH__Group_1_1_0_0_1__0__Impl"
    // InternalDockerCompose.g:10406:1: rule__PATH__Group_1_1_0_0_1__0__Impl : ( '.' ) ;
    public final void rule__PATH__Group_1_1_0_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10410:1: ( ( '.' ) )
            // InternalDockerCompose.g:10411:1: ( '.' )
            {
            // InternalDockerCompose.g:10411:1: ( '.' )
            // InternalDockerCompose.g:10412:2: '.'
            {
             before(grammarAccess.getPATHAccess().getFullStopKeyword_1_1_0_0_1_0()); 
            match(input,16,FOLLOW_2); 
             after(grammarAccess.getPATHAccess().getFullStopKeyword_1_1_0_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_1_0_0_1__0__Impl"


    // $ANTLR start "rule__PATH__Group_1_1_0_0_1__1"
    // InternalDockerCompose.g:10421:1: rule__PATH__Group_1_1_0_0_1__1 : rule__PATH__Group_1_1_0_0_1__1__Impl ;
    public final void rule__PATH__Group_1_1_0_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10425:1: ( rule__PATH__Group_1_1_0_0_1__1__Impl )
            // InternalDockerCompose.g:10426:2: rule__PATH__Group_1_1_0_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Group_1_1_0_0_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_1_0_0_1__1"


    // $ANTLR start "rule__PATH__Group_1_1_0_0_1__1__Impl"
    // InternalDockerCompose.g:10432:1: rule__PATH__Group_1_1_0_0_1__1__Impl : ( RULE_ID ) ;
    public final void rule__PATH__Group_1_1_0_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10436:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:10437:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:10437:1: ( RULE_ID )
            // InternalDockerCompose.g:10438:2: RULE_ID
            {
             before(grammarAccess.getPATHAccess().getIDTerminalRuleCall_1_1_0_0_1_1()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getPATHAccess().getIDTerminalRuleCall_1_1_0_0_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_1_0_0_1__1__Impl"


    // $ANTLR start "rule__PATH__Group_1_2_0__0"
    // InternalDockerCompose.g:10448:1: rule__PATH__Group_1_2_0__0 : rule__PATH__Group_1_2_0__0__Impl rule__PATH__Group_1_2_0__1 ;
    public final void rule__PATH__Group_1_2_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10452:1: ( rule__PATH__Group_1_2_0__0__Impl rule__PATH__Group_1_2_0__1 )
            // InternalDockerCompose.g:10453:2: rule__PATH__Group_1_2_0__0__Impl rule__PATH__Group_1_2_0__1
            {
            pushFollow(FOLLOW_47);
            rule__PATH__Group_1_2_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group_1_2_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_2_0__0"


    // $ANTLR start "rule__PATH__Group_1_2_0__0__Impl"
    // InternalDockerCompose.g:10460:1: rule__PATH__Group_1_2_0__0__Impl : ( RULE_ID ) ;
    public final void rule__PATH__Group_1_2_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10464:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:10465:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:10465:1: ( RULE_ID )
            // InternalDockerCompose.g:10466:2: RULE_ID
            {
             before(grammarAccess.getPATHAccess().getIDTerminalRuleCall_1_2_0_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getPATHAccess().getIDTerminalRuleCall_1_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_2_0__0__Impl"


    // $ANTLR start "rule__PATH__Group_1_2_0__1"
    // InternalDockerCompose.g:10475:1: rule__PATH__Group_1_2_0__1 : rule__PATH__Group_1_2_0__1__Impl ;
    public final void rule__PATH__Group_1_2_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10479:1: ( rule__PATH__Group_1_2_0__1__Impl )
            // InternalDockerCompose.g:10480:2: rule__PATH__Group_1_2_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Group_1_2_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_2_0__1"


    // $ANTLR start "rule__PATH__Group_1_2_0__1__Impl"
    // InternalDockerCompose.g:10486:1: rule__PATH__Group_1_2_0__1__Impl : ( ( rule__PATH__Group_1_2_0_1__0 )* ) ;
    public final void rule__PATH__Group_1_2_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10490:1: ( ( ( rule__PATH__Group_1_2_0_1__0 )* ) )
            // InternalDockerCompose.g:10491:1: ( ( rule__PATH__Group_1_2_0_1__0 )* )
            {
            // InternalDockerCompose.g:10491:1: ( ( rule__PATH__Group_1_2_0_1__0 )* )
            // InternalDockerCompose.g:10492:2: ( rule__PATH__Group_1_2_0_1__0 )*
            {
             before(grammarAccess.getPATHAccess().getGroup_1_2_0_1()); 
            // InternalDockerCompose.g:10493:2: ( rule__PATH__Group_1_2_0_1__0 )*
            loop69:
            do {
                int alt69=2;
                int LA69_0 = input.LA(1);

                if ( (LA69_0==16) ) {
                    alt69=1;
                }


                switch (alt69) {
            	case 1 :
            	    // InternalDockerCompose.g:10493:3: rule__PATH__Group_1_2_0_1__0
            	    {
            	    pushFollow(FOLLOW_48);
            	    rule__PATH__Group_1_2_0_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);

             after(grammarAccess.getPATHAccess().getGroup_1_2_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_2_0__1__Impl"


    // $ANTLR start "rule__PATH__Group_1_2_0_1__0"
    // InternalDockerCompose.g:10502:1: rule__PATH__Group_1_2_0_1__0 : rule__PATH__Group_1_2_0_1__0__Impl rule__PATH__Group_1_2_0_1__1 ;
    public final void rule__PATH__Group_1_2_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10506:1: ( rule__PATH__Group_1_2_0_1__0__Impl rule__PATH__Group_1_2_0_1__1 )
            // InternalDockerCompose.g:10507:2: rule__PATH__Group_1_2_0_1__0__Impl rule__PATH__Group_1_2_0_1__1
            {
            pushFollow(FOLLOW_11);
            rule__PATH__Group_1_2_0_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group_1_2_0_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_2_0_1__0"


    // $ANTLR start "rule__PATH__Group_1_2_0_1__0__Impl"
    // InternalDockerCompose.g:10514:1: rule__PATH__Group_1_2_0_1__0__Impl : ( '.' ) ;
    public final void rule__PATH__Group_1_2_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10518:1: ( ( '.' ) )
            // InternalDockerCompose.g:10519:1: ( '.' )
            {
            // InternalDockerCompose.g:10519:1: ( '.' )
            // InternalDockerCompose.g:10520:2: '.'
            {
             before(grammarAccess.getPATHAccess().getFullStopKeyword_1_2_0_1_0()); 
            match(input,16,FOLLOW_2); 
             after(grammarAccess.getPATHAccess().getFullStopKeyword_1_2_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_2_0_1__0__Impl"


    // $ANTLR start "rule__PATH__Group_1_2_0_1__1"
    // InternalDockerCompose.g:10529:1: rule__PATH__Group_1_2_0_1__1 : rule__PATH__Group_1_2_0_1__1__Impl ;
    public final void rule__PATH__Group_1_2_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10533:1: ( rule__PATH__Group_1_2_0_1__1__Impl )
            // InternalDockerCompose.g:10534:2: rule__PATH__Group_1_2_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Group_1_2_0_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_2_0_1__1"


    // $ANTLR start "rule__PATH__Group_1_2_0_1__1__Impl"
    // InternalDockerCompose.g:10540:1: rule__PATH__Group_1_2_0_1__1__Impl : ( RULE_ID ) ;
    public final void rule__PATH__Group_1_2_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10544:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:10545:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:10545:1: ( RULE_ID )
            // InternalDockerCompose.g:10546:2: RULE_ID
            {
             before(grammarAccess.getPATHAccess().getIDTerminalRuleCall_1_2_0_1_1()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getPATHAccess().getIDTerminalRuleCall_1_2_0_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_2_0_1__1__Impl"


    // $ANTLR start "rule__DNS__Group__0"
    // InternalDockerCompose.g:10556:1: rule__DNS__Group__0 : rule__DNS__Group__0__Impl rule__DNS__Group__1 ;
    public final void rule__DNS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10560:1: ( rule__DNS__Group__0__Impl rule__DNS__Group__1 )
            // InternalDockerCompose.g:10561:2: rule__DNS__Group__0__Impl rule__DNS__Group__1
            {
            pushFollow(FOLLOW_47);
            rule__DNS__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DNS__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__0"


    // $ANTLR start "rule__DNS__Group__0__Impl"
    // InternalDockerCompose.g:10568:1: rule__DNS__Group__0__Impl : ( ( rule__DNS__Dns1Assignment_0 ) ) ;
    public final void rule__DNS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10572:1: ( ( ( rule__DNS__Dns1Assignment_0 ) ) )
            // InternalDockerCompose.g:10573:1: ( ( rule__DNS__Dns1Assignment_0 ) )
            {
            // InternalDockerCompose.g:10573:1: ( ( rule__DNS__Dns1Assignment_0 ) )
            // InternalDockerCompose.g:10574:2: ( rule__DNS__Dns1Assignment_0 )
            {
             before(grammarAccess.getDNSAccess().getDns1Assignment_0()); 
            // InternalDockerCompose.g:10575:2: ( rule__DNS__Dns1Assignment_0 )
            // InternalDockerCompose.g:10575:3: rule__DNS__Dns1Assignment_0
            {
            pushFollow(FOLLOW_2);
            rule__DNS__Dns1Assignment_0();

            state._fsp--;


            }

             after(grammarAccess.getDNSAccess().getDns1Assignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__0__Impl"


    // $ANTLR start "rule__DNS__Group__1"
    // InternalDockerCompose.g:10583:1: rule__DNS__Group__1 : rule__DNS__Group__1__Impl rule__DNS__Group__2 ;
    public final void rule__DNS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10587:1: ( rule__DNS__Group__1__Impl rule__DNS__Group__2 )
            // InternalDockerCompose.g:10588:2: rule__DNS__Group__1__Impl rule__DNS__Group__2
            {
            pushFollow(FOLLOW_12);
            rule__DNS__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DNS__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__1"


    // $ANTLR start "rule__DNS__Group__1__Impl"
    // InternalDockerCompose.g:10595:1: rule__DNS__Group__1__Impl : ( '.' ) ;
    public final void rule__DNS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10599:1: ( ( '.' ) )
            // InternalDockerCompose.g:10600:1: ( '.' )
            {
            // InternalDockerCompose.g:10600:1: ( '.' )
            // InternalDockerCompose.g:10601:2: '.'
            {
             before(grammarAccess.getDNSAccess().getFullStopKeyword_1()); 
            match(input,16,FOLLOW_2); 
             after(grammarAccess.getDNSAccess().getFullStopKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__1__Impl"


    // $ANTLR start "rule__DNS__Group__2"
    // InternalDockerCompose.g:10610:1: rule__DNS__Group__2 : rule__DNS__Group__2__Impl rule__DNS__Group__3 ;
    public final void rule__DNS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10614:1: ( rule__DNS__Group__2__Impl rule__DNS__Group__3 )
            // InternalDockerCompose.g:10615:2: rule__DNS__Group__2__Impl rule__DNS__Group__3
            {
            pushFollow(FOLLOW_47);
            rule__DNS__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DNS__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__2"


    // $ANTLR start "rule__DNS__Group__2__Impl"
    // InternalDockerCompose.g:10622:1: rule__DNS__Group__2__Impl : ( ( rule__DNS__Dns2Assignment_2 ) ) ;
    public final void rule__DNS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10626:1: ( ( ( rule__DNS__Dns2Assignment_2 ) ) )
            // InternalDockerCompose.g:10627:1: ( ( rule__DNS__Dns2Assignment_2 ) )
            {
            // InternalDockerCompose.g:10627:1: ( ( rule__DNS__Dns2Assignment_2 ) )
            // InternalDockerCompose.g:10628:2: ( rule__DNS__Dns2Assignment_2 )
            {
             before(grammarAccess.getDNSAccess().getDns2Assignment_2()); 
            // InternalDockerCompose.g:10629:2: ( rule__DNS__Dns2Assignment_2 )
            // InternalDockerCompose.g:10629:3: rule__DNS__Dns2Assignment_2
            {
            pushFollow(FOLLOW_2);
            rule__DNS__Dns2Assignment_2();

            state._fsp--;


            }

             after(grammarAccess.getDNSAccess().getDns2Assignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__2__Impl"


    // $ANTLR start "rule__DNS__Group__3"
    // InternalDockerCompose.g:10637:1: rule__DNS__Group__3 : rule__DNS__Group__3__Impl rule__DNS__Group__4 ;
    public final void rule__DNS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10641:1: ( rule__DNS__Group__3__Impl rule__DNS__Group__4 )
            // InternalDockerCompose.g:10642:2: rule__DNS__Group__3__Impl rule__DNS__Group__4
            {
            pushFollow(FOLLOW_12);
            rule__DNS__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DNS__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__3"


    // $ANTLR start "rule__DNS__Group__3__Impl"
    // InternalDockerCompose.g:10649:1: rule__DNS__Group__3__Impl : ( '.' ) ;
    public final void rule__DNS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10653:1: ( ( '.' ) )
            // InternalDockerCompose.g:10654:1: ( '.' )
            {
            // InternalDockerCompose.g:10654:1: ( '.' )
            // InternalDockerCompose.g:10655:2: '.'
            {
             before(grammarAccess.getDNSAccess().getFullStopKeyword_3()); 
            match(input,16,FOLLOW_2); 
             after(grammarAccess.getDNSAccess().getFullStopKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__3__Impl"


    // $ANTLR start "rule__DNS__Group__4"
    // InternalDockerCompose.g:10664:1: rule__DNS__Group__4 : rule__DNS__Group__4__Impl rule__DNS__Group__5 ;
    public final void rule__DNS__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10668:1: ( rule__DNS__Group__4__Impl rule__DNS__Group__5 )
            // InternalDockerCompose.g:10669:2: rule__DNS__Group__4__Impl rule__DNS__Group__5
            {
            pushFollow(FOLLOW_47);
            rule__DNS__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DNS__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__4"


    // $ANTLR start "rule__DNS__Group__4__Impl"
    // InternalDockerCompose.g:10676:1: rule__DNS__Group__4__Impl : ( ( rule__DNS__Dns3Assignment_4 ) ) ;
    public final void rule__DNS__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10680:1: ( ( ( rule__DNS__Dns3Assignment_4 ) ) )
            // InternalDockerCompose.g:10681:1: ( ( rule__DNS__Dns3Assignment_4 ) )
            {
            // InternalDockerCompose.g:10681:1: ( ( rule__DNS__Dns3Assignment_4 ) )
            // InternalDockerCompose.g:10682:2: ( rule__DNS__Dns3Assignment_4 )
            {
             before(grammarAccess.getDNSAccess().getDns3Assignment_4()); 
            // InternalDockerCompose.g:10683:2: ( rule__DNS__Dns3Assignment_4 )
            // InternalDockerCompose.g:10683:3: rule__DNS__Dns3Assignment_4
            {
            pushFollow(FOLLOW_2);
            rule__DNS__Dns3Assignment_4();

            state._fsp--;


            }

             after(grammarAccess.getDNSAccess().getDns3Assignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__4__Impl"


    // $ANTLR start "rule__DNS__Group__5"
    // InternalDockerCompose.g:10691:1: rule__DNS__Group__5 : rule__DNS__Group__5__Impl rule__DNS__Group__6 ;
    public final void rule__DNS__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10695:1: ( rule__DNS__Group__5__Impl rule__DNS__Group__6 )
            // InternalDockerCompose.g:10696:2: rule__DNS__Group__5__Impl rule__DNS__Group__6
            {
            pushFollow(FOLLOW_12);
            rule__DNS__Group__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DNS__Group__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__5"


    // $ANTLR start "rule__DNS__Group__5__Impl"
    // InternalDockerCompose.g:10703:1: rule__DNS__Group__5__Impl : ( '.' ) ;
    public final void rule__DNS__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10707:1: ( ( '.' ) )
            // InternalDockerCompose.g:10708:1: ( '.' )
            {
            // InternalDockerCompose.g:10708:1: ( '.' )
            // InternalDockerCompose.g:10709:2: '.'
            {
             before(grammarAccess.getDNSAccess().getFullStopKeyword_5()); 
            match(input,16,FOLLOW_2); 
             after(grammarAccess.getDNSAccess().getFullStopKeyword_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__5__Impl"


    // $ANTLR start "rule__DNS__Group__6"
    // InternalDockerCompose.g:10718:1: rule__DNS__Group__6 : rule__DNS__Group__6__Impl ;
    public final void rule__DNS__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10722:1: ( rule__DNS__Group__6__Impl )
            // InternalDockerCompose.g:10723:2: rule__DNS__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DNS__Group__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__6"


    // $ANTLR start "rule__DNS__Group__6__Impl"
    // InternalDockerCompose.g:10729:1: rule__DNS__Group__6__Impl : ( ( rule__DNS__Dns4Assignment_6 ) ) ;
    public final void rule__DNS__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10733:1: ( ( ( rule__DNS__Dns4Assignment_6 ) ) )
            // InternalDockerCompose.g:10734:1: ( ( rule__DNS__Dns4Assignment_6 ) )
            {
            // InternalDockerCompose.g:10734:1: ( ( rule__DNS__Dns4Assignment_6 ) )
            // InternalDockerCompose.g:10735:2: ( rule__DNS__Dns4Assignment_6 )
            {
             before(grammarAccess.getDNSAccess().getDns4Assignment_6()); 
            // InternalDockerCompose.g:10736:2: ( rule__DNS__Dns4Assignment_6 )
            // InternalDockerCompose.g:10736:3: rule__DNS__Dns4Assignment_6
            {
            pushFollow(FOLLOW_2);
            rule__DNS__Dns4Assignment_6();

            state._fsp--;


            }

             after(grammarAccess.getDNSAccess().getDns4Assignment_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__6__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__0"
    // InternalDockerCompose.g:10745:1: rule__NetworkAddress__Group__0 : rule__NetworkAddress__Group__0__Impl rule__NetworkAddress__Group__1 ;
    public final void rule__NetworkAddress__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10749:1: ( rule__NetworkAddress__Group__0__Impl rule__NetworkAddress__Group__1 )
            // InternalDockerCompose.g:10750:2: rule__NetworkAddress__Group__0__Impl rule__NetworkAddress__Group__1
            {
            pushFollow(FOLLOW_47);
            rule__NetworkAddress__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__0"


    // $ANTLR start "rule__NetworkAddress__Group__0__Impl"
    // InternalDockerCompose.g:10757:1: rule__NetworkAddress__Group__0__Impl : ( ( rule__NetworkAddress__Dns1Assignment_0 ) ) ;
    public final void rule__NetworkAddress__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10761:1: ( ( ( rule__NetworkAddress__Dns1Assignment_0 ) ) )
            // InternalDockerCompose.g:10762:1: ( ( rule__NetworkAddress__Dns1Assignment_0 ) )
            {
            // InternalDockerCompose.g:10762:1: ( ( rule__NetworkAddress__Dns1Assignment_0 ) )
            // InternalDockerCompose.g:10763:2: ( rule__NetworkAddress__Dns1Assignment_0 )
            {
             before(grammarAccess.getNetworkAddressAccess().getDns1Assignment_0()); 
            // InternalDockerCompose.g:10764:2: ( rule__NetworkAddress__Dns1Assignment_0 )
            // InternalDockerCompose.g:10764:3: rule__NetworkAddress__Dns1Assignment_0
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Dns1Assignment_0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAddressAccess().getDns1Assignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__0__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__1"
    // InternalDockerCompose.g:10772:1: rule__NetworkAddress__Group__1 : rule__NetworkAddress__Group__1__Impl rule__NetworkAddress__Group__2 ;
    public final void rule__NetworkAddress__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10776:1: ( rule__NetworkAddress__Group__1__Impl rule__NetworkAddress__Group__2 )
            // InternalDockerCompose.g:10777:2: rule__NetworkAddress__Group__1__Impl rule__NetworkAddress__Group__2
            {
            pushFollow(FOLLOW_12);
            rule__NetworkAddress__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__1"


    // $ANTLR start "rule__NetworkAddress__Group__1__Impl"
    // InternalDockerCompose.g:10784:1: rule__NetworkAddress__Group__1__Impl : ( '.' ) ;
    public final void rule__NetworkAddress__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10788:1: ( ( '.' ) )
            // InternalDockerCompose.g:10789:1: ( '.' )
            {
            // InternalDockerCompose.g:10789:1: ( '.' )
            // InternalDockerCompose.g:10790:2: '.'
            {
             before(grammarAccess.getNetworkAddressAccess().getFullStopKeyword_1()); 
            match(input,16,FOLLOW_2); 
             after(grammarAccess.getNetworkAddressAccess().getFullStopKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__1__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__2"
    // InternalDockerCompose.g:10799:1: rule__NetworkAddress__Group__2 : rule__NetworkAddress__Group__2__Impl rule__NetworkAddress__Group__3 ;
    public final void rule__NetworkAddress__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10803:1: ( rule__NetworkAddress__Group__2__Impl rule__NetworkAddress__Group__3 )
            // InternalDockerCompose.g:10804:2: rule__NetworkAddress__Group__2__Impl rule__NetworkAddress__Group__3
            {
            pushFollow(FOLLOW_47);
            rule__NetworkAddress__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__2"


    // $ANTLR start "rule__NetworkAddress__Group__2__Impl"
    // InternalDockerCompose.g:10811:1: rule__NetworkAddress__Group__2__Impl : ( ( rule__NetworkAddress__Dns2Assignment_2 ) ) ;
    public final void rule__NetworkAddress__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10815:1: ( ( ( rule__NetworkAddress__Dns2Assignment_2 ) ) )
            // InternalDockerCompose.g:10816:1: ( ( rule__NetworkAddress__Dns2Assignment_2 ) )
            {
            // InternalDockerCompose.g:10816:1: ( ( rule__NetworkAddress__Dns2Assignment_2 ) )
            // InternalDockerCompose.g:10817:2: ( rule__NetworkAddress__Dns2Assignment_2 )
            {
             before(grammarAccess.getNetworkAddressAccess().getDns2Assignment_2()); 
            // InternalDockerCompose.g:10818:2: ( rule__NetworkAddress__Dns2Assignment_2 )
            // InternalDockerCompose.g:10818:3: rule__NetworkAddress__Dns2Assignment_2
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Dns2Assignment_2();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAddressAccess().getDns2Assignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__2__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__3"
    // InternalDockerCompose.g:10826:1: rule__NetworkAddress__Group__3 : rule__NetworkAddress__Group__3__Impl rule__NetworkAddress__Group__4 ;
    public final void rule__NetworkAddress__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10830:1: ( rule__NetworkAddress__Group__3__Impl rule__NetworkAddress__Group__4 )
            // InternalDockerCompose.g:10831:2: rule__NetworkAddress__Group__3__Impl rule__NetworkAddress__Group__4
            {
            pushFollow(FOLLOW_12);
            rule__NetworkAddress__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__3"


    // $ANTLR start "rule__NetworkAddress__Group__3__Impl"
    // InternalDockerCompose.g:10838:1: rule__NetworkAddress__Group__3__Impl : ( '.' ) ;
    public final void rule__NetworkAddress__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10842:1: ( ( '.' ) )
            // InternalDockerCompose.g:10843:1: ( '.' )
            {
            // InternalDockerCompose.g:10843:1: ( '.' )
            // InternalDockerCompose.g:10844:2: '.'
            {
             before(grammarAccess.getNetworkAddressAccess().getFullStopKeyword_3()); 
            match(input,16,FOLLOW_2); 
             after(grammarAccess.getNetworkAddressAccess().getFullStopKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__3__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__4"
    // InternalDockerCompose.g:10853:1: rule__NetworkAddress__Group__4 : rule__NetworkAddress__Group__4__Impl rule__NetworkAddress__Group__5 ;
    public final void rule__NetworkAddress__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10857:1: ( rule__NetworkAddress__Group__4__Impl rule__NetworkAddress__Group__5 )
            // InternalDockerCompose.g:10858:2: rule__NetworkAddress__Group__4__Impl rule__NetworkAddress__Group__5
            {
            pushFollow(FOLLOW_47);
            rule__NetworkAddress__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__4"


    // $ANTLR start "rule__NetworkAddress__Group__4__Impl"
    // InternalDockerCompose.g:10865:1: rule__NetworkAddress__Group__4__Impl : ( ( rule__NetworkAddress__Dns3Assignment_4 ) ) ;
    public final void rule__NetworkAddress__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10869:1: ( ( ( rule__NetworkAddress__Dns3Assignment_4 ) ) )
            // InternalDockerCompose.g:10870:1: ( ( rule__NetworkAddress__Dns3Assignment_4 ) )
            {
            // InternalDockerCompose.g:10870:1: ( ( rule__NetworkAddress__Dns3Assignment_4 ) )
            // InternalDockerCompose.g:10871:2: ( rule__NetworkAddress__Dns3Assignment_4 )
            {
             before(grammarAccess.getNetworkAddressAccess().getDns3Assignment_4()); 
            // InternalDockerCompose.g:10872:2: ( rule__NetworkAddress__Dns3Assignment_4 )
            // InternalDockerCompose.g:10872:3: rule__NetworkAddress__Dns3Assignment_4
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Dns3Assignment_4();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAddressAccess().getDns3Assignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__4__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__5"
    // InternalDockerCompose.g:10880:1: rule__NetworkAddress__Group__5 : rule__NetworkAddress__Group__5__Impl rule__NetworkAddress__Group__6 ;
    public final void rule__NetworkAddress__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10884:1: ( rule__NetworkAddress__Group__5__Impl rule__NetworkAddress__Group__6 )
            // InternalDockerCompose.g:10885:2: rule__NetworkAddress__Group__5__Impl rule__NetworkAddress__Group__6
            {
            pushFollow(FOLLOW_12);
            rule__NetworkAddress__Group__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__5"


    // $ANTLR start "rule__NetworkAddress__Group__5__Impl"
    // InternalDockerCompose.g:10892:1: rule__NetworkAddress__Group__5__Impl : ( '.' ) ;
    public final void rule__NetworkAddress__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10896:1: ( ( '.' ) )
            // InternalDockerCompose.g:10897:1: ( '.' )
            {
            // InternalDockerCompose.g:10897:1: ( '.' )
            // InternalDockerCompose.g:10898:2: '.'
            {
             before(grammarAccess.getNetworkAddressAccess().getFullStopKeyword_5()); 
            match(input,16,FOLLOW_2); 
             after(grammarAccess.getNetworkAddressAccess().getFullStopKeyword_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__5__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__6"
    // InternalDockerCompose.g:10907:1: rule__NetworkAddress__Group__6 : rule__NetworkAddress__Group__6__Impl rule__NetworkAddress__Group__7 ;
    public final void rule__NetworkAddress__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10911:1: ( rule__NetworkAddress__Group__6__Impl rule__NetworkAddress__Group__7 )
            // InternalDockerCompose.g:10912:2: rule__NetworkAddress__Group__6__Impl rule__NetworkAddress__Group__7
            {
            pushFollow(FOLLOW_45);
            rule__NetworkAddress__Group__6__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__7();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__6"


    // $ANTLR start "rule__NetworkAddress__Group__6__Impl"
    // InternalDockerCompose.g:10919:1: rule__NetworkAddress__Group__6__Impl : ( ( rule__NetworkAddress__Dns4Assignment_6 ) ) ;
    public final void rule__NetworkAddress__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10923:1: ( ( ( rule__NetworkAddress__Dns4Assignment_6 ) ) )
            // InternalDockerCompose.g:10924:1: ( ( rule__NetworkAddress__Dns4Assignment_6 ) )
            {
            // InternalDockerCompose.g:10924:1: ( ( rule__NetworkAddress__Dns4Assignment_6 ) )
            // InternalDockerCompose.g:10925:2: ( rule__NetworkAddress__Dns4Assignment_6 )
            {
             before(grammarAccess.getNetworkAddressAccess().getDns4Assignment_6()); 
            // InternalDockerCompose.g:10926:2: ( rule__NetworkAddress__Dns4Assignment_6 )
            // InternalDockerCompose.g:10926:3: rule__NetworkAddress__Dns4Assignment_6
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Dns4Assignment_6();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAddressAccess().getDns4Assignment_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__6__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__7"
    // InternalDockerCompose.g:10934:1: rule__NetworkAddress__Group__7 : rule__NetworkAddress__Group__7__Impl rule__NetworkAddress__Group__8 ;
    public final void rule__NetworkAddress__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10938:1: ( rule__NetworkAddress__Group__7__Impl rule__NetworkAddress__Group__8 )
            // InternalDockerCompose.g:10939:2: rule__NetworkAddress__Group__7__Impl rule__NetworkAddress__Group__8
            {
            pushFollow(FOLLOW_12);
            rule__NetworkAddress__Group__7__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__8();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__7"


    // $ANTLR start "rule__NetworkAddress__Group__7__Impl"
    // InternalDockerCompose.g:10946:1: rule__NetworkAddress__Group__7__Impl : ( '/' ) ;
    public final void rule__NetworkAddress__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10950:1: ( ( '/' ) )
            // InternalDockerCompose.g:10951:1: ( '/' )
            {
            // InternalDockerCompose.g:10951:1: ( '/' )
            // InternalDockerCompose.g:10952:2: '/'
            {
             before(grammarAccess.getNetworkAddressAccess().getSolidusKeyword_7()); 
            match(input,63,FOLLOW_2); 
             after(grammarAccess.getNetworkAddressAccess().getSolidusKeyword_7()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__7__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__8"
    // InternalDockerCompose.g:10961:1: rule__NetworkAddress__Group__8 : rule__NetworkAddress__Group__8__Impl ;
    public final void rule__NetworkAddress__Group__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10965:1: ( rule__NetworkAddress__Group__8__Impl )
            // InternalDockerCompose.g:10966:2: rule__NetworkAddress__Group__8__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__8__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__8"


    // $ANTLR start "rule__NetworkAddress__Group__8__Impl"
    // InternalDockerCompose.g:10972:1: rule__NetworkAddress__Group__8__Impl : ( ( rule__NetworkAddress__NetIdAssignment_8 ) ) ;
    public final void rule__NetworkAddress__Group__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10976:1: ( ( ( rule__NetworkAddress__NetIdAssignment_8 ) ) )
            // InternalDockerCompose.g:10977:1: ( ( rule__NetworkAddress__NetIdAssignment_8 ) )
            {
            // InternalDockerCompose.g:10977:1: ( ( rule__NetworkAddress__NetIdAssignment_8 ) )
            // InternalDockerCompose.g:10978:2: ( rule__NetworkAddress__NetIdAssignment_8 )
            {
             before(grammarAccess.getNetworkAddressAccess().getNetIdAssignment_8()); 
            // InternalDockerCompose.g:10979:2: ( rule__NetworkAddress__NetIdAssignment_8 )
            // InternalDockerCompose.g:10979:3: rule__NetworkAddress__NetIdAssignment_8
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__NetIdAssignment_8();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAddressAccess().getNetIdAssignment_8()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__8__Impl"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup"
    // InternalDockerCompose.g:10988:1: rule__DockerCompose__UnorderedGroup : rule__DockerCompose__UnorderedGroup__0 {...}?;
    public final void rule__DockerCompose__UnorderedGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getDockerComposeAccess().getUnorderedGroup());
        	
        try {
            // InternalDockerCompose.g:10993:1: ( rule__DockerCompose__UnorderedGroup__0 {...}?)
            // InternalDockerCompose.g:10994:2: rule__DockerCompose__UnorderedGroup__0 {...}?
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__UnorderedGroup__0();

            state._fsp--;

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getDockerComposeAccess().getUnorderedGroup()) ) {
                throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup", "getUnorderedGroupHelper().canLeave(grammarAccess.getDockerComposeAccess().getUnorderedGroup())");
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getDockerComposeAccess().getUnorderedGroup());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__Impl"
    // InternalDockerCompose.g:11002:1: rule__DockerCompose__UnorderedGroup__Impl : ( ({...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) ) ) ) ;
    public final void rule__DockerCompose__UnorderedGroup__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:11007:1: ( ( ({...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) ) ) ) )
            // InternalDockerCompose.g:11008:3: ( ({...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:11008:3: ( ({...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) ) ) )
            int alt70=6;
            int LA70_0 = input.LA(1);

            if ( LA70_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                alt70=1;
            }
            else if ( LA70_0 == 41 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                alt70=2;
            }
            else if ( LA70_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                alt70=3;
            }
            else if ( LA70_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                alt70=4;
            }
            else if ( LA70_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                alt70=5;
            }
            else if ( LA70_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                alt70=6;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;
            }
            switch (alt70) {
                case 1 :
                    // InternalDockerCompose.g:11009:3: ({...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11009:3: ({...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) ) )
                    // InternalDockerCompose.g:11010:4: {...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                        throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0)");
                    }
                    // InternalDockerCompose.g:11010:107: ( ( ( rule__DockerCompose__Group_0__0 ) ) )
                    // InternalDockerCompose.g:11011:5: ( ( rule__DockerCompose__Group_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11017:5: ( ( rule__DockerCompose__Group_0__0 ) )
                    // InternalDockerCompose.g:11018:6: ( rule__DockerCompose__Group_0__0 )
                    {
                     before(grammarAccess.getDockerComposeAccess().getGroup_0()); 
                    // InternalDockerCompose.g:11019:6: ( rule__DockerCompose__Group_0__0 )
                    // InternalDockerCompose.g:11019:7: rule__DockerCompose__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDockerComposeAccess().getGroup_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:11024:3: ({...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11024:3: ({...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) ) )
                    // InternalDockerCompose.g:11025:4: {...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                        throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1)");
                    }
                    // InternalDockerCompose.g:11025:107: ( ( ( rule__DockerCompose__Group_1__0 ) ) )
                    // InternalDockerCompose.g:11026:5: ( ( rule__DockerCompose__Group_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11032:5: ( ( rule__DockerCompose__Group_1__0 ) )
                    // InternalDockerCompose.g:11033:6: ( rule__DockerCompose__Group_1__0 )
                    {
                     before(grammarAccess.getDockerComposeAccess().getGroup_1()); 
                    // InternalDockerCompose.g:11034:6: ( rule__DockerCompose__Group_1__0 )
                    // InternalDockerCompose.g:11034:7: rule__DockerCompose__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDockerComposeAccess().getGroup_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:11039:3: ({...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11039:3: ({...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) ) )
                    // InternalDockerCompose.g:11040:4: {...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                        throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2)");
                    }
                    // InternalDockerCompose.g:11040:107: ( ( ( rule__DockerCompose__Group_2__0 ) ) )
                    // InternalDockerCompose.g:11041:5: ( ( rule__DockerCompose__Group_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11047:5: ( ( rule__DockerCompose__Group_2__0 ) )
                    // InternalDockerCompose.g:11048:6: ( rule__DockerCompose__Group_2__0 )
                    {
                     before(grammarAccess.getDockerComposeAccess().getGroup_2()); 
                    // InternalDockerCompose.g:11049:6: ( rule__DockerCompose__Group_2__0 )
                    // InternalDockerCompose.g:11049:7: rule__DockerCompose__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDockerComposeAccess().getGroup_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:11054:3: ({...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11054:3: ({...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) ) )
                    // InternalDockerCompose.g:11055:4: {...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                        throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3)");
                    }
                    // InternalDockerCompose.g:11055:107: ( ( ( rule__DockerCompose__Group_3__0 ) ) )
                    // InternalDockerCompose.g:11056:5: ( ( rule__DockerCompose__Group_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11062:5: ( ( rule__DockerCompose__Group_3__0 ) )
                    // InternalDockerCompose.g:11063:6: ( rule__DockerCompose__Group_3__0 )
                    {
                     before(grammarAccess.getDockerComposeAccess().getGroup_3()); 
                    // InternalDockerCompose.g:11064:6: ( rule__DockerCompose__Group_3__0 )
                    // InternalDockerCompose.g:11064:7: rule__DockerCompose__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__Group_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDockerComposeAccess().getGroup_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:11069:3: ({...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11069:3: ({...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) ) )
                    // InternalDockerCompose.g:11070:4: {...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                        throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4)");
                    }
                    // InternalDockerCompose.g:11070:107: ( ( ( rule__DockerCompose__Group_4__0 ) ) )
                    // InternalDockerCompose.g:11071:5: ( ( rule__DockerCompose__Group_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11077:5: ( ( rule__DockerCompose__Group_4__0 ) )
                    // InternalDockerCompose.g:11078:6: ( rule__DockerCompose__Group_4__0 )
                    {
                     before(grammarAccess.getDockerComposeAccess().getGroup_4()); 
                    // InternalDockerCompose.g:11079:6: ( rule__DockerCompose__Group_4__0 )
                    // InternalDockerCompose.g:11079:7: rule__DockerCompose__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__Group_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDockerComposeAccess().getGroup_4()); 

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDockerCompose.g:11084:3: ({...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11084:3: ({...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) ) )
                    // InternalDockerCompose.g:11085:4: {...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                        throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5)");
                    }
                    // InternalDockerCompose.g:11085:107: ( ( ( rule__DockerCompose__Group_5__0 ) ) )
                    // InternalDockerCompose.g:11086:5: ( ( rule__DockerCompose__Group_5__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11092:5: ( ( rule__DockerCompose__Group_5__0 ) )
                    // InternalDockerCompose.g:11093:6: ( rule__DockerCompose__Group_5__0 )
                    {
                     before(grammarAccess.getDockerComposeAccess().getGroup_5()); 
                    // InternalDockerCompose.g:11094:6: ( rule__DockerCompose__Group_5__0 )
                    // InternalDockerCompose.g:11094:7: rule__DockerCompose__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__Group_5__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDockerComposeAccess().getGroup_5()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDockerComposeAccess().getUnorderedGroup());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__Impl"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__0"
    // InternalDockerCompose.g:11107:1: rule__DockerCompose__UnorderedGroup__0 : rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__1 )? ;
    public final void rule__DockerCompose__UnorderedGroup__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11111:1: ( rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__1 )? )
            // InternalDockerCompose.g:11112:2: rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__1 )?
            {
            pushFollow(FOLLOW_51);
            rule__DockerCompose__UnorderedGroup__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11113:2: ( rule__DockerCompose__UnorderedGroup__1 )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( LA71_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                alt71=1;
            }
            else if ( LA71_0 == 41 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                alt71=1;
            }
            else if ( LA71_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                alt71=1;
            }
            else if ( LA71_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                alt71=1;
            }
            else if ( LA71_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                alt71=1;
            }
            else if ( LA71_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalDockerCompose.g:11113:2: rule__DockerCompose__UnorderedGroup__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__UnorderedGroup__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__0"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__1"
    // InternalDockerCompose.g:11119:1: rule__DockerCompose__UnorderedGroup__1 : rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__2 )? ;
    public final void rule__DockerCompose__UnorderedGroup__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11123:1: ( rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__2 )? )
            // InternalDockerCompose.g:11124:2: rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__2 )?
            {
            pushFollow(FOLLOW_51);
            rule__DockerCompose__UnorderedGroup__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11125:2: ( rule__DockerCompose__UnorderedGroup__2 )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( LA72_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                alt72=1;
            }
            else if ( LA72_0 == 41 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                alt72=1;
            }
            else if ( LA72_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                alt72=1;
            }
            else if ( LA72_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                alt72=1;
            }
            else if ( LA72_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                alt72=1;
            }
            else if ( LA72_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalDockerCompose.g:11125:2: rule__DockerCompose__UnorderedGroup__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__UnorderedGroup__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__1"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__2"
    // InternalDockerCompose.g:11131:1: rule__DockerCompose__UnorderedGroup__2 : rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__3 )? ;
    public final void rule__DockerCompose__UnorderedGroup__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11135:1: ( rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__3 )? )
            // InternalDockerCompose.g:11136:2: rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__3 )?
            {
            pushFollow(FOLLOW_51);
            rule__DockerCompose__UnorderedGroup__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11137:2: ( rule__DockerCompose__UnorderedGroup__3 )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( LA73_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                alt73=1;
            }
            else if ( LA73_0 == 41 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                alt73=1;
            }
            else if ( LA73_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                alt73=1;
            }
            else if ( LA73_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                alt73=1;
            }
            else if ( LA73_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                alt73=1;
            }
            else if ( LA73_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalDockerCompose.g:11137:2: rule__DockerCompose__UnorderedGroup__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__UnorderedGroup__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__2"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__3"
    // InternalDockerCompose.g:11143:1: rule__DockerCompose__UnorderedGroup__3 : rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__4 )? ;
    public final void rule__DockerCompose__UnorderedGroup__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11147:1: ( rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__4 )? )
            // InternalDockerCompose.g:11148:2: rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__4 )?
            {
            pushFollow(FOLLOW_51);
            rule__DockerCompose__UnorderedGroup__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11149:2: ( rule__DockerCompose__UnorderedGroup__4 )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( LA74_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                alt74=1;
            }
            else if ( LA74_0 == 41 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                alt74=1;
            }
            else if ( LA74_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                alt74=1;
            }
            else if ( LA74_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                alt74=1;
            }
            else if ( LA74_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                alt74=1;
            }
            else if ( LA74_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // InternalDockerCompose.g:11149:2: rule__DockerCompose__UnorderedGroup__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__UnorderedGroup__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__3"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__4"
    // InternalDockerCompose.g:11155:1: rule__DockerCompose__UnorderedGroup__4 : rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__5 )? ;
    public final void rule__DockerCompose__UnorderedGroup__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11159:1: ( rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__5 )? )
            // InternalDockerCompose.g:11160:2: rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__5 )?
            {
            pushFollow(FOLLOW_51);
            rule__DockerCompose__UnorderedGroup__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11161:2: ( rule__DockerCompose__UnorderedGroup__5 )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( LA75_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                alt75=1;
            }
            else if ( LA75_0 == 41 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                alt75=1;
            }
            else if ( LA75_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                alt75=1;
            }
            else if ( LA75_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                alt75=1;
            }
            else if ( LA75_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                alt75=1;
            }
            else if ( LA75_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // InternalDockerCompose.g:11161:2: rule__DockerCompose__UnorderedGroup__5
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__UnorderedGroup__5();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__4"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__5"
    // InternalDockerCompose.g:11167:1: rule__DockerCompose__UnorderedGroup__5 : rule__DockerCompose__UnorderedGroup__Impl ;
    public final void rule__DockerCompose__UnorderedGroup__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11171:1: ( rule__DockerCompose__UnorderedGroup__Impl )
            // InternalDockerCompose.g:11172:2: rule__DockerCompose__UnorderedGroup__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__UnorderedGroup__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__5"


    // $ANTLR start "rule__Service__UnorderedGroup_3"
    // InternalDockerCompose.g:11179:1: rule__Service__UnorderedGroup_3 : rule__Service__UnorderedGroup_3__0 {...}?;
    public final void rule__Service__UnorderedGroup_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getServiceAccess().getUnorderedGroup_3());
        	
        try {
            // InternalDockerCompose.g:11184:1: ( rule__Service__UnorderedGroup_3__0 {...}?)
            // InternalDockerCompose.g:11185:2: rule__Service__UnorderedGroup_3__0 {...}?
            {
            pushFollow(FOLLOW_2);
            rule__Service__UnorderedGroup_3__0();

            state._fsp--;

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {
                throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3", "getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3())");
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getServiceAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3"


    // $ANTLR start "rule__Service__UnorderedGroup_3__Impl"
    // InternalDockerCompose.g:11193:1: rule__Service__UnorderedGroup_3__Impl : ( ({...}? => ( ( ( rule__Service__Alternatives_3_0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_15__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_16__0 ) ) ) ) ) ;
    public final void rule__Service__UnorderedGroup_3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:11198:1: ( ( ({...}? => ( ( ( rule__Service__Alternatives_3_0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_15__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_16__0 ) ) ) ) ) )
            // InternalDockerCompose.g:11199:3: ( ({...}? => ( ( ( rule__Service__Alternatives_3_0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_15__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_16__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:11199:3: ( ({...}? => ( ( ( rule__Service__Alternatives_3_0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_15__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_16__0 ) ) ) ) )
            int alt76=17;
            alt76 = dfa76.predict(input);
            switch (alt76) {
                case 1 :
                    // InternalDockerCompose.g:11200:3: ({...}? => ( ( ( rule__Service__Alternatives_3_0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11200:3: ({...}? => ( ( ( rule__Service__Alternatives_3_0 ) ) ) )
                    // InternalDockerCompose.g:11201:4: {...}? => ( ( ( rule__Service__Alternatives_3_0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0)");
                    }
                    // InternalDockerCompose.g:11201:103: ( ( ( rule__Service__Alternatives_3_0 ) ) )
                    // InternalDockerCompose.g:11202:5: ( ( rule__Service__Alternatives_3_0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11208:5: ( ( rule__Service__Alternatives_3_0 ) )
                    // InternalDockerCompose.g:11209:6: ( rule__Service__Alternatives_3_0 )
                    {
                     before(grammarAccess.getServiceAccess().getAlternatives_3_0()); 
                    // InternalDockerCompose.g:11210:6: ( rule__Service__Alternatives_3_0 )
                    // InternalDockerCompose.g:11210:7: rule__Service__Alternatives_3_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Alternatives_3_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getAlternatives_3_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:11215:3: ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11215:3: ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) )
                    // InternalDockerCompose.g:11216:4: {...}? => ( ( ( rule__Service__Group_3_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1)");
                    }
                    // InternalDockerCompose.g:11216:103: ( ( ( rule__Service__Group_3_1__0 ) ) )
                    // InternalDockerCompose.g:11217:5: ( ( rule__Service__Group_3_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11223:5: ( ( rule__Service__Group_3_1__0 ) )
                    // InternalDockerCompose.g:11224:6: ( rule__Service__Group_3_1__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_1()); 
                    // InternalDockerCompose.g:11225:6: ( rule__Service__Group_3_1__0 )
                    // InternalDockerCompose.g:11225:7: rule__Service__Group_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:11230:3: ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11230:3: ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) )
                    // InternalDockerCompose.g:11231:4: {...}? => ( ( ( rule__Service__Group_3_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2)");
                    }
                    // InternalDockerCompose.g:11231:103: ( ( ( rule__Service__Group_3_2__0 ) ) )
                    // InternalDockerCompose.g:11232:5: ( ( rule__Service__Group_3_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11238:5: ( ( rule__Service__Group_3_2__0 ) )
                    // InternalDockerCompose.g:11239:6: ( rule__Service__Group_3_2__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_2()); 
                    // InternalDockerCompose.g:11240:6: ( rule__Service__Group_3_2__0 )
                    // InternalDockerCompose.g:11240:7: rule__Service__Group_3_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:11245:3: ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11245:3: ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) )
                    // InternalDockerCompose.g:11246:4: {...}? => ( ( ( rule__Service__Group_3_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3)");
                    }
                    // InternalDockerCompose.g:11246:103: ( ( ( rule__Service__Group_3_3__0 ) ) )
                    // InternalDockerCompose.g:11247:5: ( ( rule__Service__Group_3_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11253:5: ( ( rule__Service__Group_3_3__0 ) )
                    // InternalDockerCompose.g:11254:6: ( rule__Service__Group_3_3__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_3()); 
                    // InternalDockerCompose.g:11255:6: ( rule__Service__Group_3_3__0 )
                    // InternalDockerCompose.g:11255:7: rule__Service__Group_3_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:11260:3: ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11260:3: ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) )
                    // InternalDockerCompose.g:11261:4: {...}? => ( ( ( rule__Service__Group_3_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4)");
                    }
                    // InternalDockerCompose.g:11261:103: ( ( ( rule__Service__Group_3_4__0 ) ) )
                    // InternalDockerCompose.g:11262:5: ( ( rule__Service__Group_3_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11268:5: ( ( rule__Service__Group_3_4__0 ) )
                    // InternalDockerCompose.g:11269:6: ( rule__Service__Group_3_4__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_4()); 
                    // InternalDockerCompose.g:11270:6: ( rule__Service__Group_3_4__0 )
                    // InternalDockerCompose.g:11270:7: rule__Service__Group_3_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_4()); 

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDockerCompose.g:11275:3: ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11275:3: ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) )
                    // InternalDockerCompose.g:11276:4: {...}? => ( ( ( rule__Service__Group_3_5__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5)");
                    }
                    // InternalDockerCompose.g:11276:103: ( ( ( rule__Service__Group_3_5__0 ) ) )
                    // InternalDockerCompose.g:11277:5: ( ( rule__Service__Group_3_5__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11283:5: ( ( rule__Service__Group_3_5__0 ) )
                    // InternalDockerCompose.g:11284:6: ( rule__Service__Group_3_5__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_5()); 
                    // InternalDockerCompose.g:11285:6: ( rule__Service__Group_3_5__0 )
                    // InternalDockerCompose.g:11285:7: rule__Service__Group_3_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_5__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_5()); 

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalDockerCompose.g:11290:3: ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11290:3: ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) )
                    // InternalDockerCompose.g:11291:4: {...}? => ( ( ( rule__Service__Group_3_6__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6)");
                    }
                    // InternalDockerCompose.g:11291:103: ( ( ( rule__Service__Group_3_6__0 ) ) )
                    // InternalDockerCompose.g:11292:5: ( ( rule__Service__Group_3_6__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11298:5: ( ( rule__Service__Group_3_6__0 ) )
                    // InternalDockerCompose.g:11299:6: ( rule__Service__Group_3_6__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_6()); 
                    // InternalDockerCompose.g:11300:6: ( rule__Service__Group_3_6__0 )
                    // InternalDockerCompose.g:11300:7: rule__Service__Group_3_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_6__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_6()); 

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalDockerCompose.g:11305:3: ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11305:3: ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) )
                    // InternalDockerCompose.g:11306:4: {...}? => ( ( ( rule__Service__Group_3_7__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7)");
                    }
                    // InternalDockerCompose.g:11306:103: ( ( ( rule__Service__Group_3_7__0 ) ) )
                    // InternalDockerCompose.g:11307:5: ( ( rule__Service__Group_3_7__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11313:5: ( ( rule__Service__Group_3_7__0 ) )
                    // InternalDockerCompose.g:11314:6: ( rule__Service__Group_3_7__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_7()); 
                    // InternalDockerCompose.g:11315:6: ( rule__Service__Group_3_7__0 )
                    // InternalDockerCompose.g:11315:7: rule__Service__Group_3_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_7__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_7()); 

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalDockerCompose.g:11320:3: ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11320:3: ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) )
                    // InternalDockerCompose.g:11321:4: {...}? => ( ( ( rule__Service__Group_3_8__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8)");
                    }
                    // InternalDockerCompose.g:11321:103: ( ( ( rule__Service__Group_3_8__0 ) ) )
                    // InternalDockerCompose.g:11322:5: ( ( rule__Service__Group_3_8__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11328:5: ( ( rule__Service__Group_3_8__0 ) )
                    // InternalDockerCompose.g:11329:6: ( rule__Service__Group_3_8__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_8()); 
                    // InternalDockerCompose.g:11330:6: ( rule__Service__Group_3_8__0 )
                    // InternalDockerCompose.g:11330:7: rule__Service__Group_3_8__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_8__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_8()); 

                    }


                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalDockerCompose.g:11335:3: ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11335:3: ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) )
                    // InternalDockerCompose.g:11336:4: {...}? => ( ( ( rule__Service__Group_3_9__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9)");
                    }
                    // InternalDockerCompose.g:11336:103: ( ( ( rule__Service__Group_3_9__0 ) ) )
                    // InternalDockerCompose.g:11337:5: ( ( rule__Service__Group_3_9__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11343:5: ( ( rule__Service__Group_3_9__0 ) )
                    // InternalDockerCompose.g:11344:6: ( rule__Service__Group_3_9__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_9()); 
                    // InternalDockerCompose.g:11345:6: ( rule__Service__Group_3_9__0 )
                    // InternalDockerCompose.g:11345:7: rule__Service__Group_3_9__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_9__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_9()); 

                    }


                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalDockerCompose.g:11350:3: ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11350:3: ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) )
                    // InternalDockerCompose.g:11351:4: {...}? => ( ( ( rule__Service__Group_3_10__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10)");
                    }
                    // InternalDockerCompose.g:11351:104: ( ( ( rule__Service__Group_3_10__0 ) ) )
                    // InternalDockerCompose.g:11352:5: ( ( rule__Service__Group_3_10__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11358:5: ( ( rule__Service__Group_3_10__0 ) )
                    // InternalDockerCompose.g:11359:6: ( rule__Service__Group_3_10__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_10()); 
                    // InternalDockerCompose.g:11360:6: ( rule__Service__Group_3_10__0 )
                    // InternalDockerCompose.g:11360:7: rule__Service__Group_3_10__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_10__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_10()); 

                    }


                    }


                    }


                    }
                    break;
                case 12 :
                    // InternalDockerCompose.g:11365:3: ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11365:3: ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) )
                    // InternalDockerCompose.g:11366:4: {...}? => ( ( ( rule__Service__Group_3_11__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11)");
                    }
                    // InternalDockerCompose.g:11366:104: ( ( ( rule__Service__Group_3_11__0 ) ) )
                    // InternalDockerCompose.g:11367:5: ( ( rule__Service__Group_3_11__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11373:5: ( ( rule__Service__Group_3_11__0 ) )
                    // InternalDockerCompose.g:11374:6: ( rule__Service__Group_3_11__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_11()); 
                    // InternalDockerCompose.g:11375:6: ( rule__Service__Group_3_11__0 )
                    // InternalDockerCompose.g:11375:7: rule__Service__Group_3_11__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_11__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_11()); 

                    }


                    }


                    }


                    }
                    break;
                case 13 :
                    // InternalDockerCompose.g:11380:3: ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11380:3: ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) )
                    // InternalDockerCompose.g:11381:4: {...}? => ( ( ( rule__Service__Group_3_12__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12)");
                    }
                    // InternalDockerCompose.g:11381:104: ( ( ( rule__Service__Group_3_12__0 ) ) )
                    // InternalDockerCompose.g:11382:5: ( ( rule__Service__Group_3_12__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11388:5: ( ( rule__Service__Group_3_12__0 ) )
                    // InternalDockerCompose.g:11389:6: ( rule__Service__Group_3_12__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_12()); 
                    // InternalDockerCompose.g:11390:6: ( rule__Service__Group_3_12__0 )
                    // InternalDockerCompose.g:11390:7: rule__Service__Group_3_12__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_12__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_12()); 

                    }


                    }


                    }


                    }
                    break;
                case 14 :
                    // InternalDockerCompose.g:11395:3: ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11395:3: ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) )
                    // InternalDockerCompose.g:11396:4: {...}? => ( ( ( rule__Service__Group_3_13__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13)");
                    }
                    // InternalDockerCompose.g:11396:104: ( ( ( rule__Service__Group_3_13__0 ) ) )
                    // InternalDockerCompose.g:11397:5: ( ( rule__Service__Group_3_13__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11403:5: ( ( rule__Service__Group_3_13__0 ) )
                    // InternalDockerCompose.g:11404:6: ( rule__Service__Group_3_13__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_13()); 
                    // InternalDockerCompose.g:11405:6: ( rule__Service__Group_3_13__0 )
                    // InternalDockerCompose.g:11405:7: rule__Service__Group_3_13__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_13__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_13()); 

                    }


                    }


                    }


                    }
                    break;
                case 15 :
                    // InternalDockerCompose.g:11410:3: ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11410:3: ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) )
                    // InternalDockerCompose.g:11411:4: {...}? => ( ( ( rule__Service__Group_3_14__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14)");
                    }
                    // InternalDockerCompose.g:11411:104: ( ( ( rule__Service__Group_3_14__0 ) ) )
                    // InternalDockerCompose.g:11412:5: ( ( rule__Service__Group_3_14__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11418:5: ( ( rule__Service__Group_3_14__0 ) )
                    // InternalDockerCompose.g:11419:6: ( rule__Service__Group_3_14__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_14()); 
                    // InternalDockerCompose.g:11420:6: ( rule__Service__Group_3_14__0 )
                    // InternalDockerCompose.g:11420:7: rule__Service__Group_3_14__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_14__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_14()); 

                    }


                    }


                    }


                    }
                    break;
                case 16 :
                    // InternalDockerCompose.g:11425:3: ({...}? => ( ( ( rule__Service__Group_3_15__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11425:3: ({...}? => ( ( ( rule__Service__Group_3_15__0 ) ) ) )
                    // InternalDockerCompose.g:11426:4: {...}? => ( ( ( rule__Service__Group_3_15__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15)");
                    }
                    // InternalDockerCompose.g:11426:104: ( ( ( rule__Service__Group_3_15__0 ) ) )
                    // InternalDockerCompose.g:11427:5: ( ( rule__Service__Group_3_15__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11433:5: ( ( rule__Service__Group_3_15__0 ) )
                    // InternalDockerCompose.g:11434:6: ( rule__Service__Group_3_15__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_15()); 
                    // InternalDockerCompose.g:11435:6: ( rule__Service__Group_3_15__0 )
                    // InternalDockerCompose.g:11435:7: rule__Service__Group_3_15__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_15__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_15()); 

                    }


                    }


                    }


                    }
                    break;
                case 17 :
                    // InternalDockerCompose.g:11440:3: ({...}? => ( ( ( rule__Service__Group_3_16__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11440:3: ({...}? => ( ( ( rule__Service__Group_3_16__0 ) ) ) )
                    // InternalDockerCompose.g:11441:4: {...}? => ( ( ( rule__Service__Group_3_16__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16)");
                    }
                    // InternalDockerCompose.g:11441:104: ( ( ( rule__Service__Group_3_16__0 ) ) )
                    // InternalDockerCompose.g:11442:5: ( ( rule__Service__Group_3_16__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11448:5: ( ( rule__Service__Group_3_16__0 ) )
                    // InternalDockerCompose.g:11449:6: ( rule__Service__Group_3_16__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_16()); 
                    // InternalDockerCompose.g:11450:6: ( rule__Service__Group_3_16__0 )
                    // InternalDockerCompose.g:11450:7: rule__Service__Group_3_16__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_16__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_16()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getServiceAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__Impl"


    // $ANTLR start "rule__Service__UnorderedGroup_3__0"
    // InternalDockerCompose.g:11463:1: rule__Service__UnorderedGroup_3__0 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__1 )? ;
    public final void rule__Service__UnorderedGroup_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11467:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__1 )? )
            // InternalDockerCompose.g:11468:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__1 )?
            {
            pushFollow(FOLLOW_52);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11469:2: ( rule__Service__UnorderedGroup_3__1 )?
            int alt77=2;
            alt77 = dfa77.predict(input);
            switch (alt77) {
                case 1 :
                    // InternalDockerCompose.g:11469:2: rule__Service__UnorderedGroup_3__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__0"


    // $ANTLR start "rule__Service__UnorderedGroup_3__1"
    // InternalDockerCompose.g:11475:1: rule__Service__UnorderedGroup_3__1 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__2 )? ;
    public final void rule__Service__UnorderedGroup_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11479:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__2 )? )
            // InternalDockerCompose.g:11480:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__2 )?
            {
            pushFollow(FOLLOW_52);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11481:2: ( rule__Service__UnorderedGroup_3__2 )?
            int alt78=2;
            alt78 = dfa78.predict(input);
            switch (alt78) {
                case 1 :
                    // InternalDockerCompose.g:11481:2: rule__Service__UnorderedGroup_3__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__1"


    // $ANTLR start "rule__Service__UnorderedGroup_3__2"
    // InternalDockerCompose.g:11487:1: rule__Service__UnorderedGroup_3__2 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__3 )? ;
    public final void rule__Service__UnorderedGroup_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11491:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__3 )? )
            // InternalDockerCompose.g:11492:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__3 )?
            {
            pushFollow(FOLLOW_52);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11493:2: ( rule__Service__UnorderedGroup_3__3 )?
            int alt79=2;
            alt79 = dfa79.predict(input);
            switch (alt79) {
                case 1 :
                    // InternalDockerCompose.g:11493:2: rule__Service__UnorderedGroup_3__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__2"


    // $ANTLR start "rule__Service__UnorderedGroup_3__3"
    // InternalDockerCompose.g:11499:1: rule__Service__UnorderedGroup_3__3 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__4 )? ;
    public final void rule__Service__UnorderedGroup_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11503:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__4 )? )
            // InternalDockerCompose.g:11504:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__4 )?
            {
            pushFollow(FOLLOW_52);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11505:2: ( rule__Service__UnorderedGroup_3__4 )?
            int alt80=2;
            alt80 = dfa80.predict(input);
            switch (alt80) {
                case 1 :
                    // InternalDockerCompose.g:11505:2: rule__Service__UnorderedGroup_3__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__3"


    // $ANTLR start "rule__Service__UnorderedGroup_3__4"
    // InternalDockerCompose.g:11511:1: rule__Service__UnorderedGroup_3__4 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__5 )? ;
    public final void rule__Service__UnorderedGroup_3__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11515:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__5 )? )
            // InternalDockerCompose.g:11516:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__5 )?
            {
            pushFollow(FOLLOW_52);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11517:2: ( rule__Service__UnorderedGroup_3__5 )?
            int alt81=2;
            alt81 = dfa81.predict(input);
            switch (alt81) {
                case 1 :
                    // InternalDockerCompose.g:11517:2: rule__Service__UnorderedGroup_3__5
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__5();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__4"


    // $ANTLR start "rule__Service__UnorderedGroup_3__5"
    // InternalDockerCompose.g:11523:1: rule__Service__UnorderedGroup_3__5 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__6 )? ;
    public final void rule__Service__UnorderedGroup_3__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11527:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__6 )? )
            // InternalDockerCompose.g:11528:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__6 )?
            {
            pushFollow(FOLLOW_52);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11529:2: ( rule__Service__UnorderedGroup_3__6 )?
            int alt82=2;
            alt82 = dfa82.predict(input);
            switch (alt82) {
                case 1 :
                    // InternalDockerCompose.g:11529:2: rule__Service__UnorderedGroup_3__6
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__6();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__5"


    // $ANTLR start "rule__Service__UnorderedGroup_3__6"
    // InternalDockerCompose.g:11535:1: rule__Service__UnorderedGroup_3__6 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__7 )? ;
    public final void rule__Service__UnorderedGroup_3__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11539:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__7 )? )
            // InternalDockerCompose.g:11540:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__7 )?
            {
            pushFollow(FOLLOW_52);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11541:2: ( rule__Service__UnorderedGroup_3__7 )?
            int alt83=2;
            alt83 = dfa83.predict(input);
            switch (alt83) {
                case 1 :
                    // InternalDockerCompose.g:11541:2: rule__Service__UnorderedGroup_3__7
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__7();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__6"


    // $ANTLR start "rule__Service__UnorderedGroup_3__7"
    // InternalDockerCompose.g:11547:1: rule__Service__UnorderedGroup_3__7 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__8 )? ;
    public final void rule__Service__UnorderedGroup_3__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11551:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__8 )? )
            // InternalDockerCompose.g:11552:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__8 )?
            {
            pushFollow(FOLLOW_52);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11553:2: ( rule__Service__UnorderedGroup_3__8 )?
            int alt84=2;
            alt84 = dfa84.predict(input);
            switch (alt84) {
                case 1 :
                    // InternalDockerCompose.g:11553:2: rule__Service__UnorderedGroup_3__8
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__8();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__7"


    // $ANTLR start "rule__Service__UnorderedGroup_3__8"
    // InternalDockerCompose.g:11559:1: rule__Service__UnorderedGroup_3__8 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__9 )? ;
    public final void rule__Service__UnorderedGroup_3__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11563:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__9 )? )
            // InternalDockerCompose.g:11564:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__9 )?
            {
            pushFollow(FOLLOW_52);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11565:2: ( rule__Service__UnorderedGroup_3__9 )?
            int alt85=2;
            alt85 = dfa85.predict(input);
            switch (alt85) {
                case 1 :
                    // InternalDockerCompose.g:11565:2: rule__Service__UnorderedGroup_3__9
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__9();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__8"


    // $ANTLR start "rule__Service__UnorderedGroup_3__9"
    // InternalDockerCompose.g:11571:1: rule__Service__UnorderedGroup_3__9 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__10 )? ;
    public final void rule__Service__UnorderedGroup_3__9() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11575:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__10 )? )
            // InternalDockerCompose.g:11576:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__10 )?
            {
            pushFollow(FOLLOW_52);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11577:2: ( rule__Service__UnorderedGroup_3__10 )?
            int alt86=2;
            alt86 = dfa86.predict(input);
            switch (alt86) {
                case 1 :
                    // InternalDockerCompose.g:11577:2: rule__Service__UnorderedGroup_3__10
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__10();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__9"


    // $ANTLR start "rule__Service__UnorderedGroup_3__10"
    // InternalDockerCompose.g:11583:1: rule__Service__UnorderedGroup_3__10 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__11 )? ;
    public final void rule__Service__UnorderedGroup_3__10() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11587:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__11 )? )
            // InternalDockerCompose.g:11588:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__11 )?
            {
            pushFollow(FOLLOW_52);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11589:2: ( rule__Service__UnorderedGroup_3__11 )?
            int alt87=2;
            alt87 = dfa87.predict(input);
            switch (alt87) {
                case 1 :
                    // InternalDockerCompose.g:11589:2: rule__Service__UnorderedGroup_3__11
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__11();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__10"


    // $ANTLR start "rule__Service__UnorderedGroup_3__11"
    // InternalDockerCompose.g:11595:1: rule__Service__UnorderedGroup_3__11 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__12 )? ;
    public final void rule__Service__UnorderedGroup_3__11() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11599:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__12 )? )
            // InternalDockerCompose.g:11600:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__12 )?
            {
            pushFollow(FOLLOW_52);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11601:2: ( rule__Service__UnorderedGroup_3__12 )?
            int alt88=2;
            alt88 = dfa88.predict(input);
            switch (alt88) {
                case 1 :
                    // InternalDockerCompose.g:11601:2: rule__Service__UnorderedGroup_3__12
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__12();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__11"


    // $ANTLR start "rule__Service__UnorderedGroup_3__12"
    // InternalDockerCompose.g:11607:1: rule__Service__UnorderedGroup_3__12 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__13 )? ;
    public final void rule__Service__UnorderedGroup_3__12() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11611:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__13 )? )
            // InternalDockerCompose.g:11612:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__13 )?
            {
            pushFollow(FOLLOW_52);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11613:2: ( rule__Service__UnorderedGroup_3__13 )?
            int alt89=2;
            alt89 = dfa89.predict(input);
            switch (alt89) {
                case 1 :
                    // InternalDockerCompose.g:11613:2: rule__Service__UnorderedGroup_3__13
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__13();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__12"


    // $ANTLR start "rule__Service__UnorderedGroup_3__13"
    // InternalDockerCompose.g:11619:1: rule__Service__UnorderedGroup_3__13 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__14 )? ;
    public final void rule__Service__UnorderedGroup_3__13() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11623:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__14 )? )
            // InternalDockerCompose.g:11624:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__14 )?
            {
            pushFollow(FOLLOW_52);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11625:2: ( rule__Service__UnorderedGroup_3__14 )?
            int alt90=2;
            alt90 = dfa90.predict(input);
            switch (alt90) {
                case 1 :
                    // InternalDockerCompose.g:11625:2: rule__Service__UnorderedGroup_3__14
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__14();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__13"


    // $ANTLR start "rule__Service__UnorderedGroup_3__14"
    // InternalDockerCompose.g:11631:1: rule__Service__UnorderedGroup_3__14 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__15 )? ;
    public final void rule__Service__UnorderedGroup_3__14() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11635:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__15 )? )
            // InternalDockerCompose.g:11636:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__15 )?
            {
            pushFollow(FOLLOW_52);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11637:2: ( rule__Service__UnorderedGroup_3__15 )?
            int alt91=2;
            alt91 = dfa91.predict(input);
            switch (alt91) {
                case 1 :
                    // InternalDockerCompose.g:11637:2: rule__Service__UnorderedGroup_3__15
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__15();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__14"


    // $ANTLR start "rule__Service__UnorderedGroup_3__15"
    // InternalDockerCompose.g:11643:1: rule__Service__UnorderedGroup_3__15 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__16 )? ;
    public final void rule__Service__UnorderedGroup_3__15() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11647:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__16 )? )
            // InternalDockerCompose.g:11648:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__16 )?
            {
            pushFollow(FOLLOW_52);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11649:2: ( rule__Service__UnorderedGroup_3__16 )?
            int alt92=2;
            alt92 = dfa92.predict(input);
            switch (alt92) {
                case 1 :
                    // InternalDockerCompose.g:11649:2: rule__Service__UnorderedGroup_3__16
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__16();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__15"


    // $ANTLR start "rule__Service__UnorderedGroup_3__16"
    // InternalDockerCompose.g:11655:1: rule__Service__UnorderedGroup_3__16 : rule__Service__UnorderedGroup_3__Impl ;
    public final void rule__Service__UnorderedGroup_3__16() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11659:1: ( rule__Service__UnorderedGroup_3__Impl )
            // InternalDockerCompose.g:11660:2: rule__Service__UnorderedGroup_3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__16"


    // $ANTLR start "rule__NetworkConnector__UnorderedGroup_1_1_2"
    // InternalDockerCompose.g:11667:1: rule__NetworkConnector__UnorderedGroup_1_1_2 : ( rule__NetworkConnector__UnorderedGroup_1_1_2__0 )? ;
    public final void rule__NetworkConnector__UnorderedGroup_1_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2());
        	
        try {
            // InternalDockerCompose.g:11672:1: ( ( rule__NetworkConnector__UnorderedGroup_1_1_2__0 )? )
            // InternalDockerCompose.g:11673:2: ( rule__NetworkConnector__UnorderedGroup_1_1_2__0 )?
            {
            // InternalDockerCompose.g:11673:2: ( rule__NetworkConnector__UnorderedGroup_1_1_2__0 )?
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( LA93_0 == 66 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 0) ) {
                alt93=1;
            }
            else if ( LA93_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 1) ) {
                alt93=1;
            }
            else if ( LA93_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 2) ) {
                alt93=1;
            }
            else if ( LA93_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 3) ) {
                alt93=1;
            }
            switch (alt93) {
                case 1 :
                    // InternalDockerCompose.g:11673:2: rule__NetworkConnector__UnorderedGroup_1_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector__UnorderedGroup_1_1_2__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__UnorderedGroup_1_1_2"


    // $ANTLR start "rule__NetworkConnector__UnorderedGroup_1_1_2__Impl"
    // InternalDockerCompose.g:11681:1: rule__NetworkConnector__UnorderedGroup_1_1_2__Impl : ( ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_0__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_1__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_2__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_3__0 ) ) ) ) ) ;
    public final void rule__NetworkConnector__UnorderedGroup_1_1_2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:11686:1: ( ( ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_0__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_1__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_2__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_3__0 ) ) ) ) ) )
            // InternalDockerCompose.g:11687:3: ( ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_0__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_1__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_2__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_3__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:11687:3: ( ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_0__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_1__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_2__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_3__0 ) ) ) ) )
            int alt94=4;
            int LA94_0 = input.LA(1);

            if ( LA94_0 == 66 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 0) ) {
                alt94=1;
            }
            else if ( LA94_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 1) ) {
                alt94=2;
            }
            else if ( LA94_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 2) ) {
                alt94=3;
            }
            else if ( LA94_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 3) ) {
                alt94=4;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 94, 0, input);

                throw nvae;
            }
            switch (alt94) {
                case 1 :
                    // InternalDockerCompose.g:11688:3: ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11688:3: ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_0__0 ) ) ) )
                    // InternalDockerCompose.g:11689:4: {...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 0) ) {
                        throw new FailedPredicateException(input, "rule__NetworkConnector__UnorderedGroup_1_1_2__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 0)");
                    }
                    // InternalDockerCompose.g:11689:116: ( ( ( rule__NetworkConnector__Group_1_1_2_0__0 ) ) )
                    // InternalDockerCompose.g:11690:5: ( ( rule__NetworkConnector__Group_1_1_2_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11696:5: ( ( rule__NetworkConnector__Group_1_1_2_0__0 ) )
                    // InternalDockerCompose.g:11697:6: ( rule__NetworkConnector__Group_1_1_2_0__0 )
                    {
                     before(grammarAccess.getNetworkConnectorAccess().getGroup_1_1_2_0()); 
                    // InternalDockerCompose.g:11698:6: ( rule__NetworkConnector__Group_1_1_2_0__0 )
                    // InternalDockerCompose.g:11698:7: rule__NetworkConnector__Group_1_1_2_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector__Group_1_1_2_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkConnectorAccess().getGroup_1_1_2_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:11703:3: ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11703:3: ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_1__0 ) ) ) )
                    // InternalDockerCompose.g:11704:4: {...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 1) ) {
                        throw new FailedPredicateException(input, "rule__NetworkConnector__UnorderedGroup_1_1_2__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 1)");
                    }
                    // InternalDockerCompose.g:11704:116: ( ( ( rule__NetworkConnector__Group_1_1_2_1__0 ) ) )
                    // InternalDockerCompose.g:11705:5: ( ( rule__NetworkConnector__Group_1_1_2_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11711:5: ( ( rule__NetworkConnector__Group_1_1_2_1__0 ) )
                    // InternalDockerCompose.g:11712:6: ( rule__NetworkConnector__Group_1_1_2_1__0 )
                    {
                     before(grammarAccess.getNetworkConnectorAccess().getGroup_1_1_2_1()); 
                    // InternalDockerCompose.g:11713:6: ( rule__NetworkConnector__Group_1_1_2_1__0 )
                    // InternalDockerCompose.g:11713:7: rule__NetworkConnector__Group_1_1_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector__Group_1_1_2_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkConnectorAccess().getGroup_1_1_2_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:11718:3: ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11718:3: ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_2__0 ) ) ) )
                    // InternalDockerCompose.g:11719:4: {...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 2) ) {
                        throw new FailedPredicateException(input, "rule__NetworkConnector__UnorderedGroup_1_1_2__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 2)");
                    }
                    // InternalDockerCompose.g:11719:116: ( ( ( rule__NetworkConnector__Group_1_1_2_2__0 ) ) )
                    // InternalDockerCompose.g:11720:5: ( ( rule__NetworkConnector__Group_1_1_2_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11726:5: ( ( rule__NetworkConnector__Group_1_1_2_2__0 ) )
                    // InternalDockerCompose.g:11727:6: ( rule__NetworkConnector__Group_1_1_2_2__0 )
                    {
                     before(grammarAccess.getNetworkConnectorAccess().getGroup_1_1_2_2()); 
                    // InternalDockerCompose.g:11728:6: ( rule__NetworkConnector__Group_1_1_2_2__0 )
                    // InternalDockerCompose.g:11728:7: rule__NetworkConnector__Group_1_1_2_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector__Group_1_1_2_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkConnectorAccess().getGroup_1_1_2_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:11733:3: ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11733:3: ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_3__0 ) ) ) )
                    // InternalDockerCompose.g:11734:4: {...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 3) ) {
                        throw new FailedPredicateException(input, "rule__NetworkConnector__UnorderedGroup_1_1_2__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 3)");
                    }
                    // InternalDockerCompose.g:11734:116: ( ( ( rule__NetworkConnector__Group_1_1_2_3__0 ) ) )
                    // InternalDockerCompose.g:11735:5: ( ( rule__NetworkConnector__Group_1_1_2_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11741:5: ( ( rule__NetworkConnector__Group_1_1_2_3__0 ) )
                    // InternalDockerCompose.g:11742:6: ( rule__NetworkConnector__Group_1_1_2_3__0 )
                    {
                     before(grammarAccess.getNetworkConnectorAccess().getGroup_1_1_2_3()); 
                    // InternalDockerCompose.g:11743:6: ( rule__NetworkConnector__Group_1_1_2_3__0 )
                    // InternalDockerCompose.g:11743:7: rule__NetworkConnector__Group_1_1_2_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector__Group_1_1_2_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkConnectorAccess().getGroup_1_1_2_3()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__UnorderedGroup_1_1_2__Impl"


    // $ANTLR start "rule__NetworkConnector__UnorderedGroup_1_1_2__0"
    // InternalDockerCompose.g:11756:1: rule__NetworkConnector__UnorderedGroup_1_1_2__0 : rule__NetworkConnector__UnorderedGroup_1_1_2__Impl ( rule__NetworkConnector__UnorderedGroup_1_1_2__1 )? ;
    public final void rule__NetworkConnector__UnorderedGroup_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11760:1: ( rule__NetworkConnector__UnorderedGroup_1_1_2__Impl ( rule__NetworkConnector__UnorderedGroup_1_1_2__1 )? )
            // InternalDockerCompose.g:11761:2: rule__NetworkConnector__UnorderedGroup_1_1_2__Impl ( rule__NetworkConnector__UnorderedGroup_1_1_2__1 )?
            {
            pushFollow(FOLLOW_53);
            rule__NetworkConnector__UnorderedGroup_1_1_2__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11762:2: ( rule__NetworkConnector__UnorderedGroup_1_1_2__1 )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( LA95_0 == 66 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 0) ) {
                alt95=1;
            }
            else if ( LA95_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 1) ) {
                alt95=1;
            }
            else if ( LA95_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 2) ) {
                alt95=1;
            }
            else if ( LA95_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 3) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // InternalDockerCompose.g:11762:2: rule__NetworkConnector__UnorderedGroup_1_1_2__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector__UnorderedGroup_1_1_2__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__UnorderedGroup_1_1_2__0"


    // $ANTLR start "rule__NetworkConnector__UnorderedGroup_1_1_2__1"
    // InternalDockerCompose.g:11768:1: rule__NetworkConnector__UnorderedGroup_1_1_2__1 : rule__NetworkConnector__UnorderedGroup_1_1_2__Impl ( rule__NetworkConnector__UnorderedGroup_1_1_2__2 )? ;
    public final void rule__NetworkConnector__UnorderedGroup_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11772:1: ( rule__NetworkConnector__UnorderedGroup_1_1_2__Impl ( rule__NetworkConnector__UnorderedGroup_1_1_2__2 )? )
            // InternalDockerCompose.g:11773:2: rule__NetworkConnector__UnorderedGroup_1_1_2__Impl ( rule__NetworkConnector__UnorderedGroup_1_1_2__2 )?
            {
            pushFollow(FOLLOW_53);
            rule__NetworkConnector__UnorderedGroup_1_1_2__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11774:2: ( rule__NetworkConnector__UnorderedGroup_1_1_2__2 )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( LA96_0 == 66 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 0) ) {
                alt96=1;
            }
            else if ( LA96_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 1) ) {
                alt96=1;
            }
            else if ( LA96_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 2) ) {
                alt96=1;
            }
            else if ( LA96_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 3) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // InternalDockerCompose.g:11774:2: rule__NetworkConnector__UnorderedGroup_1_1_2__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector__UnorderedGroup_1_1_2__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__UnorderedGroup_1_1_2__1"


    // $ANTLR start "rule__NetworkConnector__UnorderedGroup_1_1_2__2"
    // InternalDockerCompose.g:11780:1: rule__NetworkConnector__UnorderedGroup_1_1_2__2 : rule__NetworkConnector__UnorderedGroup_1_1_2__Impl ( rule__NetworkConnector__UnorderedGroup_1_1_2__3 )? ;
    public final void rule__NetworkConnector__UnorderedGroup_1_1_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11784:1: ( rule__NetworkConnector__UnorderedGroup_1_1_2__Impl ( rule__NetworkConnector__UnorderedGroup_1_1_2__3 )? )
            // InternalDockerCompose.g:11785:2: rule__NetworkConnector__UnorderedGroup_1_1_2__Impl ( rule__NetworkConnector__UnorderedGroup_1_1_2__3 )?
            {
            pushFollow(FOLLOW_53);
            rule__NetworkConnector__UnorderedGroup_1_1_2__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11786:2: ( rule__NetworkConnector__UnorderedGroup_1_1_2__3 )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( LA97_0 == 66 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 0) ) {
                alt97=1;
            }
            else if ( LA97_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 1) ) {
                alt97=1;
            }
            else if ( LA97_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 2) ) {
                alt97=1;
            }
            else if ( LA97_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 3) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // InternalDockerCompose.g:11786:2: rule__NetworkConnector__UnorderedGroup_1_1_2__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector__UnorderedGroup_1_1_2__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__UnorderedGroup_1_1_2__2"


    // $ANTLR start "rule__NetworkConnector__UnorderedGroup_1_1_2__3"
    // InternalDockerCompose.g:11792:1: rule__NetworkConnector__UnorderedGroup_1_1_2__3 : rule__NetworkConnector__UnorderedGroup_1_1_2__Impl ;
    public final void rule__NetworkConnector__UnorderedGroup_1_1_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11796:1: ( rule__NetworkConnector__UnorderedGroup_1_1_2__Impl )
            // InternalDockerCompose.g:11797:2: rule__NetworkConnector__UnorderedGroup_1_1_2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__UnorderedGroup_1_1_2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__UnorderedGroup_1_1_2__3"


    // $ANTLR start "rule__VolumeConnector_long__UnorderedGroup_1"
    // InternalDockerCompose.g:11804:1: rule__VolumeConnector_long__UnorderedGroup_1 : rule__VolumeConnector_long__UnorderedGroup_1__0 {...}?;
    public final void rule__VolumeConnector_long__UnorderedGroup_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1());
        	
        try {
            // InternalDockerCompose.g:11809:1: ( rule__VolumeConnector_long__UnorderedGroup_1__0 {...}?)
            // InternalDockerCompose.g:11810:2: rule__VolumeConnector_long__UnorderedGroup_1__0 {...}?
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__UnorderedGroup_1__0();

            state._fsp--;

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "rule__VolumeConnector_long__UnorderedGroup_1", "getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1())");
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__UnorderedGroup_1"


    // $ANTLR start "rule__VolumeConnector_long__UnorderedGroup_1__Impl"
    // InternalDockerCompose.g:11818:1: rule__VolumeConnector_long__UnorderedGroup_1__Impl : ( ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_6__0 ) ) ) ) ) ;
    public final void rule__VolumeConnector_long__UnorderedGroup_1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:11823:1: ( ( ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_6__0 ) ) ) ) ) )
            // InternalDockerCompose.g:11824:3: ( ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_6__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:11824:3: ( ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_6__0 ) ) ) ) )
            int alt98=7;
            int LA98_0 = input.LA(1);

            if ( LA98_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt98=1;
            }
            else if ( LA98_0 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt98=2;
            }
            else if ( LA98_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt98=3;
            }
            else if ( LA98_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt98=4;
            }
            else if ( LA98_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt98=5;
            }
            else if ( LA98_0 == 75 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 5) ) {
                alt98=6;
            }
            else if ( LA98_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 6) ) {
                alt98=7;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 98, 0, input);

                throw nvae;
            }
            switch (alt98) {
                case 1 :
                    // InternalDockerCompose.g:11825:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11825:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_0__0 ) ) ) )
                    // InternalDockerCompose.g:11826:4: {...}? => ( ( ( rule__VolumeConnector_long__Group_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 0)");
                    }
                    // InternalDockerCompose.g:11826:116: ( ( ( rule__VolumeConnector_long__Group_1_0__0 ) ) )
                    // InternalDockerCompose.g:11827:5: ( ( rule__VolumeConnector_long__Group_1_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11833:5: ( ( rule__VolumeConnector_long__Group_1_0__0 ) )
                    // InternalDockerCompose.g:11834:6: ( rule__VolumeConnector_long__Group_1_0__0 )
                    {
                     before(grammarAccess.getVolumeConnector_longAccess().getGroup_1_0()); 
                    // InternalDockerCompose.g:11835:6: ( rule__VolumeConnector_long__Group_1_0__0 )
                    // InternalDockerCompose.g:11835:7: rule__VolumeConnector_long__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__Group_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnector_longAccess().getGroup_1_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:11840:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11840:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_1__0 ) ) ) )
                    // InternalDockerCompose.g:11841:4: {...}? => ( ( ( rule__VolumeConnector_long__Group_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 1)");
                    }
                    // InternalDockerCompose.g:11841:116: ( ( ( rule__VolumeConnector_long__Group_1_1__0 ) ) )
                    // InternalDockerCompose.g:11842:5: ( ( rule__VolumeConnector_long__Group_1_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11848:5: ( ( rule__VolumeConnector_long__Group_1_1__0 ) )
                    // InternalDockerCompose.g:11849:6: ( rule__VolumeConnector_long__Group_1_1__0 )
                    {
                     before(grammarAccess.getVolumeConnector_longAccess().getGroup_1_1()); 
                    // InternalDockerCompose.g:11850:6: ( rule__VolumeConnector_long__Group_1_1__0 )
                    // InternalDockerCompose.g:11850:7: rule__VolumeConnector_long__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__Group_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnector_longAccess().getGroup_1_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:11855:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11855:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_2__0 ) ) ) )
                    // InternalDockerCompose.g:11856:4: {...}? => ( ( ( rule__VolumeConnector_long__Group_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 2)");
                    }
                    // InternalDockerCompose.g:11856:116: ( ( ( rule__VolumeConnector_long__Group_1_2__0 ) ) )
                    // InternalDockerCompose.g:11857:5: ( ( rule__VolumeConnector_long__Group_1_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11863:5: ( ( rule__VolumeConnector_long__Group_1_2__0 ) )
                    // InternalDockerCompose.g:11864:6: ( rule__VolumeConnector_long__Group_1_2__0 )
                    {
                     before(grammarAccess.getVolumeConnector_longAccess().getGroup_1_2()); 
                    // InternalDockerCompose.g:11865:6: ( rule__VolumeConnector_long__Group_1_2__0 )
                    // InternalDockerCompose.g:11865:7: rule__VolumeConnector_long__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__Group_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnector_longAccess().getGroup_1_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:11870:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11870:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_3__0 ) ) ) )
                    // InternalDockerCompose.g:11871:4: {...}? => ( ( ( rule__VolumeConnector_long__Group_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3)");
                    }
                    // InternalDockerCompose.g:11871:116: ( ( ( rule__VolumeConnector_long__Group_1_3__0 ) ) )
                    // InternalDockerCompose.g:11872:5: ( ( rule__VolumeConnector_long__Group_1_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11878:5: ( ( rule__VolumeConnector_long__Group_1_3__0 ) )
                    // InternalDockerCompose.g:11879:6: ( rule__VolumeConnector_long__Group_1_3__0 )
                    {
                     before(grammarAccess.getVolumeConnector_longAccess().getGroup_1_3()); 
                    // InternalDockerCompose.g:11880:6: ( rule__VolumeConnector_long__Group_1_3__0 )
                    // InternalDockerCompose.g:11880:7: rule__VolumeConnector_long__Group_1_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__Group_1_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnector_longAccess().getGroup_1_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:11885:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11885:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_4__0 ) ) ) )
                    // InternalDockerCompose.g:11886:4: {...}? => ( ( ( rule__VolumeConnector_long__Group_1_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 4)");
                    }
                    // InternalDockerCompose.g:11886:116: ( ( ( rule__VolumeConnector_long__Group_1_4__0 ) ) )
                    // InternalDockerCompose.g:11887:5: ( ( rule__VolumeConnector_long__Group_1_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11893:5: ( ( rule__VolumeConnector_long__Group_1_4__0 ) )
                    // InternalDockerCompose.g:11894:6: ( rule__VolumeConnector_long__Group_1_4__0 )
                    {
                     before(grammarAccess.getVolumeConnector_longAccess().getGroup_1_4()); 
                    // InternalDockerCompose.g:11895:6: ( rule__VolumeConnector_long__Group_1_4__0 )
                    // InternalDockerCompose.g:11895:7: rule__VolumeConnector_long__Group_1_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__Group_1_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnector_longAccess().getGroup_1_4()); 

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDockerCompose.g:11900:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_5__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11900:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_5__0 ) ) ) )
                    // InternalDockerCompose.g:11901:4: {...}? => ( ( ( rule__VolumeConnector_long__Group_1_5__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 5) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 5)");
                    }
                    // InternalDockerCompose.g:11901:116: ( ( ( rule__VolumeConnector_long__Group_1_5__0 ) ) )
                    // InternalDockerCompose.g:11902:5: ( ( rule__VolumeConnector_long__Group_1_5__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 5);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11908:5: ( ( rule__VolumeConnector_long__Group_1_5__0 ) )
                    // InternalDockerCompose.g:11909:6: ( rule__VolumeConnector_long__Group_1_5__0 )
                    {
                     before(grammarAccess.getVolumeConnector_longAccess().getGroup_1_5()); 
                    // InternalDockerCompose.g:11910:6: ( rule__VolumeConnector_long__Group_1_5__0 )
                    // InternalDockerCompose.g:11910:7: rule__VolumeConnector_long__Group_1_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__Group_1_5__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnector_longAccess().getGroup_1_5()); 

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalDockerCompose.g:11915:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_6__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11915:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_6__0 ) ) ) )
                    // InternalDockerCompose.g:11916:4: {...}? => ( ( ( rule__VolumeConnector_long__Group_1_6__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 6) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 6)");
                    }
                    // InternalDockerCompose.g:11916:116: ( ( ( rule__VolumeConnector_long__Group_1_6__0 ) ) )
                    // InternalDockerCompose.g:11917:5: ( ( rule__VolumeConnector_long__Group_1_6__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 6);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11923:5: ( ( rule__VolumeConnector_long__Group_1_6__0 ) )
                    // InternalDockerCompose.g:11924:6: ( rule__VolumeConnector_long__Group_1_6__0 )
                    {
                     before(grammarAccess.getVolumeConnector_longAccess().getGroup_1_6()); 
                    // InternalDockerCompose.g:11925:6: ( rule__VolumeConnector_long__Group_1_6__0 )
                    // InternalDockerCompose.g:11925:7: rule__VolumeConnector_long__Group_1_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__Group_1_6__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnector_longAccess().getGroup_1_6()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__UnorderedGroup_1__Impl"


    // $ANTLR start "rule__VolumeConnector_long__UnorderedGroup_1__0"
    // InternalDockerCompose.g:11938:1: rule__VolumeConnector_long__UnorderedGroup_1__0 : rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__1 )? ;
    public final void rule__VolumeConnector_long__UnorderedGroup_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11942:1: ( rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__1 )? )
            // InternalDockerCompose.g:11943:2: rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__1 )?
            {
            pushFollow(FOLLOW_54);
            rule__VolumeConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11944:2: ( rule__VolumeConnector_long__UnorderedGroup_1__1 )?
            int alt99=2;
            alt99 = dfa99.predict(input);
            switch (alt99) {
                case 1 :
                    // InternalDockerCompose.g:11944:2: rule__VolumeConnector_long__UnorderedGroup_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__UnorderedGroup_1__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__UnorderedGroup_1__0"


    // $ANTLR start "rule__VolumeConnector_long__UnorderedGroup_1__1"
    // InternalDockerCompose.g:11950:1: rule__VolumeConnector_long__UnorderedGroup_1__1 : rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__2 )? ;
    public final void rule__VolumeConnector_long__UnorderedGroup_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11954:1: ( rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__2 )? )
            // InternalDockerCompose.g:11955:2: rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__2 )?
            {
            pushFollow(FOLLOW_54);
            rule__VolumeConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11956:2: ( rule__VolumeConnector_long__UnorderedGroup_1__2 )?
            int alt100=2;
            alt100 = dfa100.predict(input);
            switch (alt100) {
                case 1 :
                    // InternalDockerCompose.g:11956:2: rule__VolumeConnector_long__UnorderedGroup_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__UnorderedGroup_1__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__UnorderedGroup_1__1"


    // $ANTLR start "rule__VolumeConnector_long__UnorderedGroup_1__2"
    // InternalDockerCompose.g:11962:1: rule__VolumeConnector_long__UnorderedGroup_1__2 : rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__3 )? ;
    public final void rule__VolumeConnector_long__UnorderedGroup_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11966:1: ( rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__3 )? )
            // InternalDockerCompose.g:11967:2: rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__3 )?
            {
            pushFollow(FOLLOW_54);
            rule__VolumeConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11968:2: ( rule__VolumeConnector_long__UnorderedGroup_1__3 )?
            int alt101=2;
            alt101 = dfa101.predict(input);
            switch (alt101) {
                case 1 :
                    // InternalDockerCompose.g:11968:2: rule__VolumeConnector_long__UnorderedGroup_1__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__UnorderedGroup_1__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__UnorderedGroup_1__2"


    // $ANTLR start "rule__VolumeConnector_long__UnorderedGroup_1__3"
    // InternalDockerCompose.g:11974:1: rule__VolumeConnector_long__UnorderedGroup_1__3 : rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__4 )? ;
    public final void rule__VolumeConnector_long__UnorderedGroup_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11978:1: ( rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__4 )? )
            // InternalDockerCompose.g:11979:2: rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__4 )?
            {
            pushFollow(FOLLOW_54);
            rule__VolumeConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11980:2: ( rule__VolumeConnector_long__UnorderedGroup_1__4 )?
            int alt102=2;
            alt102 = dfa102.predict(input);
            switch (alt102) {
                case 1 :
                    // InternalDockerCompose.g:11980:2: rule__VolumeConnector_long__UnorderedGroup_1__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__UnorderedGroup_1__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__UnorderedGroup_1__3"


    // $ANTLR start "rule__VolumeConnector_long__UnorderedGroup_1__4"
    // InternalDockerCompose.g:11986:1: rule__VolumeConnector_long__UnorderedGroup_1__4 : rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__5 )? ;
    public final void rule__VolumeConnector_long__UnorderedGroup_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11990:1: ( rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__5 )? )
            // InternalDockerCompose.g:11991:2: rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__5 )?
            {
            pushFollow(FOLLOW_54);
            rule__VolumeConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11992:2: ( rule__VolumeConnector_long__UnorderedGroup_1__5 )?
            int alt103=2;
            alt103 = dfa103.predict(input);
            switch (alt103) {
                case 1 :
                    // InternalDockerCompose.g:11992:2: rule__VolumeConnector_long__UnorderedGroup_1__5
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__UnorderedGroup_1__5();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__UnorderedGroup_1__4"


    // $ANTLR start "rule__VolumeConnector_long__UnorderedGroup_1__5"
    // InternalDockerCompose.g:11998:1: rule__VolumeConnector_long__UnorderedGroup_1__5 : rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__6 )? ;
    public final void rule__VolumeConnector_long__UnorderedGroup_1__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12002:1: ( rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__6 )? )
            // InternalDockerCompose.g:12003:2: rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__6 )?
            {
            pushFollow(FOLLOW_54);
            rule__VolumeConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12004:2: ( rule__VolumeConnector_long__UnorderedGroup_1__6 )?
            int alt104=2;
            alt104 = dfa104.predict(input);
            switch (alt104) {
                case 1 :
                    // InternalDockerCompose.g:12004:2: rule__VolumeConnector_long__UnorderedGroup_1__6
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__UnorderedGroup_1__6();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__UnorderedGroup_1__5"


    // $ANTLR start "rule__VolumeConnector_long__UnorderedGroup_1__6"
    // InternalDockerCompose.g:12010:1: rule__VolumeConnector_long__UnorderedGroup_1__6 : rule__VolumeConnector_long__UnorderedGroup_1__Impl ;
    public final void rule__VolumeConnector_long__UnorderedGroup_1__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12014:1: ( rule__VolumeConnector_long__UnorderedGroup_1__Impl )
            // InternalDockerCompose.g:12015:2: rule__VolumeConnector_long__UnorderedGroup_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__UnorderedGroup_1__6"


    // $ANTLR start "rule__ConfigConnector_long__UnorderedGroup_1"
    // InternalDockerCompose.g:12022:1: rule__ConfigConnector_long__UnorderedGroup_1 : rule__ConfigConnector_long__UnorderedGroup_1__0 {...}?;
    public final void rule__ConfigConnector_long__UnorderedGroup_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1());
        	
        try {
            // InternalDockerCompose.g:12027:1: ( rule__ConfigConnector_long__UnorderedGroup_1__0 {...}?)
            // InternalDockerCompose.g:12028:2: rule__ConfigConnector_long__UnorderedGroup_1__0 {...}?
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__UnorderedGroup_1__0();

            state._fsp--;

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "rule__ConfigConnector_long__UnorderedGroup_1", "getUnorderedGroupHelper().canLeave(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1())");
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__UnorderedGroup_1"


    // $ANTLR start "rule__ConfigConnector_long__UnorderedGroup_1__Impl"
    // InternalDockerCompose.g:12036:1: rule__ConfigConnector_long__UnorderedGroup_1__Impl : ( ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_4__0 ) ) ) ) ) ;
    public final void rule__ConfigConnector_long__UnorderedGroup_1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:12041:1: ( ( ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_4__0 ) ) ) ) ) )
            // InternalDockerCompose.g:12042:3: ( ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_4__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:12042:3: ( ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_4__0 ) ) ) ) )
            int alt105=5;
            int LA105_0 = input.LA(1);

            if ( LA105_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt105=1;
            }
            else if ( LA105_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt105=2;
            }
            else if ( LA105_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt105=3;
            }
            else if ( LA105_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt105=4;
            }
            else if ( LA105_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt105=5;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 105, 0, input);

                throw nvae;
            }
            switch (alt105) {
                case 1 :
                    // InternalDockerCompose.g:12043:3: ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12043:3: ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_0__0 ) ) ) )
                    // InternalDockerCompose.g:12044:4: {...}? => ( ( ( rule__ConfigConnector_long__Group_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                        throw new FailedPredicateException(input, "rule__ConfigConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 0)");
                    }
                    // InternalDockerCompose.g:12044:116: ( ( ( rule__ConfigConnector_long__Group_1_0__0 ) ) )
                    // InternalDockerCompose.g:12045:5: ( ( rule__ConfigConnector_long__Group_1_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12051:5: ( ( rule__ConfigConnector_long__Group_1_0__0 ) )
                    // InternalDockerCompose.g:12052:6: ( rule__ConfigConnector_long__Group_1_0__0 )
                    {
                     before(grammarAccess.getConfigConnector_longAccess().getGroup_1_0()); 
                    // InternalDockerCompose.g:12053:6: ( rule__ConfigConnector_long__Group_1_0__0 )
                    // InternalDockerCompose.g:12053:7: rule__ConfigConnector_long__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector_long__Group_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigConnector_longAccess().getGroup_1_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:12058:3: ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12058:3: ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_1__0 ) ) ) )
                    // InternalDockerCompose.g:12059:4: {...}? => ( ( ( rule__ConfigConnector_long__Group_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                        throw new FailedPredicateException(input, "rule__ConfigConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 1)");
                    }
                    // InternalDockerCompose.g:12059:116: ( ( ( rule__ConfigConnector_long__Group_1_1__0 ) ) )
                    // InternalDockerCompose.g:12060:5: ( ( rule__ConfigConnector_long__Group_1_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12066:5: ( ( rule__ConfigConnector_long__Group_1_1__0 ) )
                    // InternalDockerCompose.g:12067:6: ( rule__ConfigConnector_long__Group_1_1__0 )
                    {
                     before(grammarAccess.getConfigConnector_longAccess().getGroup_1_1()); 
                    // InternalDockerCompose.g:12068:6: ( rule__ConfigConnector_long__Group_1_1__0 )
                    // InternalDockerCompose.g:12068:7: rule__ConfigConnector_long__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector_long__Group_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigConnector_longAccess().getGroup_1_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:12073:3: ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12073:3: ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_2__0 ) ) ) )
                    // InternalDockerCompose.g:12074:4: {...}? => ( ( ( rule__ConfigConnector_long__Group_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                        throw new FailedPredicateException(input, "rule__ConfigConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 2)");
                    }
                    // InternalDockerCompose.g:12074:116: ( ( ( rule__ConfigConnector_long__Group_1_2__0 ) ) )
                    // InternalDockerCompose.g:12075:5: ( ( rule__ConfigConnector_long__Group_1_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12081:5: ( ( rule__ConfigConnector_long__Group_1_2__0 ) )
                    // InternalDockerCompose.g:12082:6: ( rule__ConfigConnector_long__Group_1_2__0 )
                    {
                     before(grammarAccess.getConfigConnector_longAccess().getGroup_1_2()); 
                    // InternalDockerCompose.g:12083:6: ( rule__ConfigConnector_long__Group_1_2__0 )
                    // InternalDockerCompose.g:12083:7: rule__ConfigConnector_long__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector_long__Group_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigConnector_longAccess().getGroup_1_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:12088:3: ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12088:3: ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_3__0 ) ) ) )
                    // InternalDockerCompose.g:12089:4: {...}? => ( ( ( rule__ConfigConnector_long__Group_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                        throw new FailedPredicateException(input, "rule__ConfigConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 3)");
                    }
                    // InternalDockerCompose.g:12089:116: ( ( ( rule__ConfigConnector_long__Group_1_3__0 ) ) )
                    // InternalDockerCompose.g:12090:5: ( ( rule__ConfigConnector_long__Group_1_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12096:5: ( ( rule__ConfigConnector_long__Group_1_3__0 ) )
                    // InternalDockerCompose.g:12097:6: ( rule__ConfigConnector_long__Group_1_3__0 )
                    {
                     before(grammarAccess.getConfigConnector_longAccess().getGroup_1_3()); 
                    // InternalDockerCompose.g:12098:6: ( rule__ConfigConnector_long__Group_1_3__0 )
                    // InternalDockerCompose.g:12098:7: rule__ConfigConnector_long__Group_1_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector_long__Group_1_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigConnector_longAccess().getGroup_1_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:12103:3: ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12103:3: ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_4__0 ) ) ) )
                    // InternalDockerCompose.g:12104:4: {...}? => ( ( ( rule__ConfigConnector_long__Group_1_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                        throw new FailedPredicateException(input, "rule__ConfigConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 4)");
                    }
                    // InternalDockerCompose.g:12104:116: ( ( ( rule__ConfigConnector_long__Group_1_4__0 ) ) )
                    // InternalDockerCompose.g:12105:5: ( ( rule__ConfigConnector_long__Group_1_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12111:5: ( ( rule__ConfigConnector_long__Group_1_4__0 ) )
                    // InternalDockerCompose.g:12112:6: ( rule__ConfigConnector_long__Group_1_4__0 )
                    {
                     before(grammarAccess.getConfigConnector_longAccess().getGroup_1_4()); 
                    // InternalDockerCompose.g:12113:6: ( rule__ConfigConnector_long__Group_1_4__0 )
                    // InternalDockerCompose.g:12113:7: rule__ConfigConnector_long__Group_1_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector_long__Group_1_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigConnector_longAccess().getGroup_1_4()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__UnorderedGroup_1__Impl"


    // $ANTLR start "rule__ConfigConnector_long__UnorderedGroup_1__0"
    // InternalDockerCompose.g:12126:1: rule__ConfigConnector_long__UnorderedGroup_1__0 : rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__1 )? ;
    public final void rule__ConfigConnector_long__UnorderedGroup_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12130:1: ( rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__1 )? )
            // InternalDockerCompose.g:12131:2: rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__1 )?
            {
            pushFollow(FOLLOW_55);
            rule__ConfigConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12132:2: ( rule__ConfigConnector_long__UnorderedGroup_1__1 )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( LA106_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt106=1;
            }
            else if ( LA106_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt106=1;
            }
            else if ( LA106_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt106=1;
            }
            else if ( LA106_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt106=1;
            }
            else if ( LA106_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // InternalDockerCompose.g:12132:2: rule__ConfigConnector_long__UnorderedGroup_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector_long__UnorderedGroup_1__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__UnorderedGroup_1__0"


    // $ANTLR start "rule__ConfigConnector_long__UnorderedGroup_1__1"
    // InternalDockerCompose.g:12138:1: rule__ConfigConnector_long__UnorderedGroup_1__1 : rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__2 )? ;
    public final void rule__ConfigConnector_long__UnorderedGroup_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12142:1: ( rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__2 )? )
            // InternalDockerCompose.g:12143:2: rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__2 )?
            {
            pushFollow(FOLLOW_55);
            rule__ConfigConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12144:2: ( rule__ConfigConnector_long__UnorderedGroup_1__2 )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( LA107_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt107=1;
            }
            else if ( LA107_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt107=1;
            }
            else if ( LA107_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt107=1;
            }
            else if ( LA107_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt107=1;
            }
            else if ( LA107_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalDockerCompose.g:12144:2: rule__ConfigConnector_long__UnorderedGroup_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector_long__UnorderedGroup_1__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__UnorderedGroup_1__1"


    // $ANTLR start "rule__ConfigConnector_long__UnorderedGroup_1__2"
    // InternalDockerCompose.g:12150:1: rule__ConfigConnector_long__UnorderedGroup_1__2 : rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__3 )? ;
    public final void rule__ConfigConnector_long__UnorderedGroup_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12154:1: ( rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__3 )? )
            // InternalDockerCompose.g:12155:2: rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__3 )?
            {
            pushFollow(FOLLOW_55);
            rule__ConfigConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12156:2: ( rule__ConfigConnector_long__UnorderedGroup_1__3 )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( LA108_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt108=1;
            }
            else if ( LA108_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt108=1;
            }
            else if ( LA108_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt108=1;
            }
            else if ( LA108_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt108=1;
            }
            else if ( LA108_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalDockerCompose.g:12156:2: rule__ConfigConnector_long__UnorderedGroup_1__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector_long__UnorderedGroup_1__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__UnorderedGroup_1__2"


    // $ANTLR start "rule__ConfigConnector_long__UnorderedGroup_1__3"
    // InternalDockerCompose.g:12162:1: rule__ConfigConnector_long__UnorderedGroup_1__3 : rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__4 )? ;
    public final void rule__ConfigConnector_long__UnorderedGroup_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12166:1: ( rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__4 )? )
            // InternalDockerCompose.g:12167:2: rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__4 )?
            {
            pushFollow(FOLLOW_55);
            rule__ConfigConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12168:2: ( rule__ConfigConnector_long__UnorderedGroup_1__4 )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( LA109_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt109=1;
            }
            else if ( LA109_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt109=1;
            }
            else if ( LA109_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt109=1;
            }
            else if ( LA109_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt109=1;
            }
            else if ( LA109_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // InternalDockerCompose.g:12168:2: rule__ConfigConnector_long__UnorderedGroup_1__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector_long__UnorderedGroup_1__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__UnorderedGroup_1__3"


    // $ANTLR start "rule__ConfigConnector_long__UnorderedGroup_1__4"
    // InternalDockerCompose.g:12174:1: rule__ConfigConnector_long__UnorderedGroup_1__4 : rule__ConfigConnector_long__UnorderedGroup_1__Impl ;
    public final void rule__ConfigConnector_long__UnorderedGroup_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12178:1: ( rule__ConfigConnector_long__UnorderedGroup_1__Impl )
            // InternalDockerCompose.g:12179:2: rule__ConfigConnector_long__UnorderedGroup_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__UnorderedGroup_1__4"


    // $ANTLR start "rule__SecretConnector_long__UnorderedGroup_1"
    // InternalDockerCompose.g:12186:1: rule__SecretConnector_long__UnorderedGroup_1 : rule__SecretConnector_long__UnorderedGroup_1__0 {...}?;
    public final void rule__SecretConnector_long__UnorderedGroup_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1());
        	
        try {
            // InternalDockerCompose.g:12191:1: ( rule__SecretConnector_long__UnorderedGroup_1__0 {...}?)
            // InternalDockerCompose.g:12192:2: rule__SecretConnector_long__UnorderedGroup_1__0 {...}?
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__UnorderedGroup_1__0();

            state._fsp--;

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "rule__SecretConnector_long__UnorderedGroup_1", "getUnorderedGroupHelper().canLeave(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1())");
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__UnorderedGroup_1"


    // $ANTLR start "rule__SecretConnector_long__UnorderedGroup_1__Impl"
    // InternalDockerCompose.g:12200:1: rule__SecretConnector_long__UnorderedGroup_1__Impl : ( ({...}? => ( ( ( rule__SecretConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_4__0 ) ) ) ) ) ;
    public final void rule__SecretConnector_long__UnorderedGroup_1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:12205:1: ( ( ({...}? => ( ( ( rule__SecretConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_4__0 ) ) ) ) ) )
            // InternalDockerCompose.g:12206:3: ( ({...}? => ( ( ( rule__SecretConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_4__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:12206:3: ( ({...}? => ( ( ( rule__SecretConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_4__0 ) ) ) ) )
            int alt110=5;
            int LA110_0 = input.LA(1);

            if ( LA110_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt110=1;
            }
            else if ( LA110_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt110=2;
            }
            else if ( LA110_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt110=3;
            }
            else if ( LA110_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt110=4;
            }
            else if ( LA110_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt110=5;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 110, 0, input);

                throw nvae;
            }
            switch (alt110) {
                case 1 :
                    // InternalDockerCompose.g:12207:3: ({...}? => ( ( ( rule__SecretConnector_long__Group_1_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12207:3: ({...}? => ( ( ( rule__SecretConnector_long__Group_1_0__0 ) ) ) )
                    // InternalDockerCompose.g:12208:4: {...}? => ( ( ( rule__SecretConnector_long__Group_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                        throw new FailedPredicateException(input, "rule__SecretConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 0)");
                    }
                    // InternalDockerCompose.g:12208:116: ( ( ( rule__SecretConnector_long__Group_1_0__0 ) ) )
                    // InternalDockerCompose.g:12209:5: ( ( rule__SecretConnector_long__Group_1_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12215:5: ( ( rule__SecretConnector_long__Group_1_0__0 ) )
                    // InternalDockerCompose.g:12216:6: ( rule__SecretConnector_long__Group_1_0__0 )
                    {
                     before(grammarAccess.getSecretConnector_longAccess().getGroup_1_0()); 
                    // InternalDockerCompose.g:12217:6: ( rule__SecretConnector_long__Group_1_0__0 )
                    // InternalDockerCompose.g:12217:7: rule__SecretConnector_long__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector_long__Group_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretConnector_longAccess().getGroup_1_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:12222:3: ({...}? => ( ( ( rule__SecretConnector_long__Group_1_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12222:3: ({...}? => ( ( ( rule__SecretConnector_long__Group_1_1__0 ) ) ) )
                    // InternalDockerCompose.g:12223:4: {...}? => ( ( ( rule__SecretConnector_long__Group_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                        throw new FailedPredicateException(input, "rule__SecretConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 1)");
                    }
                    // InternalDockerCompose.g:12223:116: ( ( ( rule__SecretConnector_long__Group_1_1__0 ) ) )
                    // InternalDockerCompose.g:12224:5: ( ( rule__SecretConnector_long__Group_1_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12230:5: ( ( rule__SecretConnector_long__Group_1_1__0 ) )
                    // InternalDockerCompose.g:12231:6: ( rule__SecretConnector_long__Group_1_1__0 )
                    {
                     before(grammarAccess.getSecretConnector_longAccess().getGroup_1_1()); 
                    // InternalDockerCompose.g:12232:6: ( rule__SecretConnector_long__Group_1_1__0 )
                    // InternalDockerCompose.g:12232:7: rule__SecretConnector_long__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector_long__Group_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretConnector_longAccess().getGroup_1_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:12237:3: ({...}? => ( ( ( rule__SecretConnector_long__Group_1_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12237:3: ({...}? => ( ( ( rule__SecretConnector_long__Group_1_2__0 ) ) ) )
                    // InternalDockerCompose.g:12238:4: {...}? => ( ( ( rule__SecretConnector_long__Group_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                        throw new FailedPredicateException(input, "rule__SecretConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 2)");
                    }
                    // InternalDockerCompose.g:12238:116: ( ( ( rule__SecretConnector_long__Group_1_2__0 ) ) )
                    // InternalDockerCompose.g:12239:5: ( ( rule__SecretConnector_long__Group_1_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12245:5: ( ( rule__SecretConnector_long__Group_1_2__0 ) )
                    // InternalDockerCompose.g:12246:6: ( rule__SecretConnector_long__Group_1_2__0 )
                    {
                     before(grammarAccess.getSecretConnector_longAccess().getGroup_1_2()); 
                    // InternalDockerCompose.g:12247:6: ( rule__SecretConnector_long__Group_1_2__0 )
                    // InternalDockerCompose.g:12247:7: rule__SecretConnector_long__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector_long__Group_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretConnector_longAccess().getGroup_1_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:12252:3: ({...}? => ( ( ( rule__SecretConnector_long__Group_1_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12252:3: ({...}? => ( ( ( rule__SecretConnector_long__Group_1_3__0 ) ) ) )
                    // InternalDockerCompose.g:12253:4: {...}? => ( ( ( rule__SecretConnector_long__Group_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                        throw new FailedPredicateException(input, "rule__SecretConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 3)");
                    }
                    // InternalDockerCompose.g:12253:116: ( ( ( rule__SecretConnector_long__Group_1_3__0 ) ) )
                    // InternalDockerCompose.g:12254:5: ( ( rule__SecretConnector_long__Group_1_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12260:5: ( ( rule__SecretConnector_long__Group_1_3__0 ) )
                    // InternalDockerCompose.g:12261:6: ( rule__SecretConnector_long__Group_1_3__0 )
                    {
                     before(grammarAccess.getSecretConnector_longAccess().getGroup_1_3()); 
                    // InternalDockerCompose.g:12262:6: ( rule__SecretConnector_long__Group_1_3__0 )
                    // InternalDockerCompose.g:12262:7: rule__SecretConnector_long__Group_1_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector_long__Group_1_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretConnector_longAccess().getGroup_1_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:12267:3: ({...}? => ( ( ( rule__SecretConnector_long__Group_1_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12267:3: ({...}? => ( ( ( rule__SecretConnector_long__Group_1_4__0 ) ) ) )
                    // InternalDockerCompose.g:12268:4: {...}? => ( ( ( rule__SecretConnector_long__Group_1_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                        throw new FailedPredicateException(input, "rule__SecretConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 4)");
                    }
                    // InternalDockerCompose.g:12268:116: ( ( ( rule__SecretConnector_long__Group_1_4__0 ) ) )
                    // InternalDockerCompose.g:12269:5: ( ( rule__SecretConnector_long__Group_1_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12275:5: ( ( rule__SecretConnector_long__Group_1_4__0 ) )
                    // InternalDockerCompose.g:12276:6: ( rule__SecretConnector_long__Group_1_4__0 )
                    {
                     before(grammarAccess.getSecretConnector_longAccess().getGroup_1_4()); 
                    // InternalDockerCompose.g:12277:6: ( rule__SecretConnector_long__Group_1_4__0 )
                    // InternalDockerCompose.g:12277:7: rule__SecretConnector_long__Group_1_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector_long__Group_1_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretConnector_longAccess().getGroup_1_4()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__UnorderedGroup_1__Impl"


    // $ANTLR start "rule__SecretConnector_long__UnorderedGroup_1__0"
    // InternalDockerCompose.g:12290:1: rule__SecretConnector_long__UnorderedGroup_1__0 : rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__1 )? ;
    public final void rule__SecretConnector_long__UnorderedGroup_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12294:1: ( rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__1 )? )
            // InternalDockerCompose.g:12295:2: rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__1 )?
            {
            pushFollow(FOLLOW_55);
            rule__SecretConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12296:2: ( rule__SecretConnector_long__UnorderedGroup_1__1 )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( LA111_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt111=1;
            }
            else if ( LA111_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt111=1;
            }
            else if ( LA111_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt111=1;
            }
            else if ( LA111_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt111=1;
            }
            else if ( LA111_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // InternalDockerCompose.g:12296:2: rule__SecretConnector_long__UnorderedGroup_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector_long__UnorderedGroup_1__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__UnorderedGroup_1__0"


    // $ANTLR start "rule__SecretConnector_long__UnorderedGroup_1__1"
    // InternalDockerCompose.g:12302:1: rule__SecretConnector_long__UnorderedGroup_1__1 : rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__2 )? ;
    public final void rule__SecretConnector_long__UnorderedGroup_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12306:1: ( rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__2 )? )
            // InternalDockerCompose.g:12307:2: rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__2 )?
            {
            pushFollow(FOLLOW_55);
            rule__SecretConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12308:2: ( rule__SecretConnector_long__UnorderedGroup_1__2 )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( LA112_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt112=1;
            }
            else if ( LA112_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt112=1;
            }
            else if ( LA112_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt112=1;
            }
            else if ( LA112_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt112=1;
            }
            else if ( LA112_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // InternalDockerCompose.g:12308:2: rule__SecretConnector_long__UnorderedGroup_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector_long__UnorderedGroup_1__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__UnorderedGroup_1__1"


    // $ANTLR start "rule__SecretConnector_long__UnorderedGroup_1__2"
    // InternalDockerCompose.g:12314:1: rule__SecretConnector_long__UnorderedGroup_1__2 : rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__3 )? ;
    public final void rule__SecretConnector_long__UnorderedGroup_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12318:1: ( rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__3 )? )
            // InternalDockerCompose.g:12319:2: rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__3 )?
            {
            pushFollow(FOLLOW_55);
            rule__SecretConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12320:2: ( rule__SecretConnector_long__UnorderedGroup_1__3 )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( LA113_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt113=1;
            }
            else if ( LA113_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt113=1;
            }
            else if ( LA113_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt113=1;
            }
            else if ( LA113_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt113=1;
            }
            else if ( LA113_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalDockerCompose.g:12320:2: rule__SecretConnector_long__UnorderedGroup_1__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector_long__UnorderedGroup_1__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__UnorderedGroup_1__2"


    // $ANTLR start "rule__SecretConnector_long__UnorderedGroup_1__3"
    // InternalDockerCompose.g:12326:1: rule__SecretConnector_long__UnorderedGroup_1__3 : rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__4 )? ;
    public final void rule__SecretConnector_long__UnorderedGroup_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12330:1: ( rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__4 )? )
            // InternalDockerCompose.g:12331:2: rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__4 )?
            {
            pushFollow(FOLLOW_55);
            rule__SecretConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12332:2: ( rule__SecretConnector_long__UnorderedGroup_1__4 )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( LA114_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt114=1;
            }
            else if ( LA114_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt114=1;
            }
            else if ( LA114_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt114=1;
            }
            else if ( LA114_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt114=1;
            }
            else if ( LA114_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalDockerCompose.g:12332:2: rule__SecretConnector_long__UnorderedGroup_1__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector_long__UnorderedGroup_1__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__UnorderedGroup_1__3"


    // $ANTLR start "rule__SecretConnector_long__UnorderedGroup_1__4"
    // InternalDockerCompose.g:12338:1: rule__SecretConnector_long__UnorderedGroup_1__4 : rule__SecretConnector_long__UnorderedGroup_1__Impl ;
    public final void rule__SecretConnector_long__UnorderedGroup_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12342:1: ( rule__SecretConnector_long__UnorderedGroup_1__Impl )
            // InternalDockerCompose.g:12343:2: rule__SecretConnector_long__UnorderedGroup_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__UnorderedGroup_1__4"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1"
    // InternalDockerCompose.g:12350:1: rule__Network__UnorderedGroup_3_1 : ( rule__Network__UnorderedGroup_3_1__0 )? ;
    public final void rule__Network__UnorderedGroup_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1());
        	
        try {
            // InternalDockerCompose.g:12355:1: ( ( rule__Network__UnorderedGroup_3_1__0 )? )
            // InternalDockerCompose.g:12356:2: ( rule__Network__UnorderedGroup_3_1__0 )?
            {
            // InternalDockerCompose.g:12356:2: ( rule__Network__UnorderedGroup_3_1__0 )?
            int alt115=2;
            alt115 = dfa115.predict(input);
            switch (alt115) {
                case 1 :
                    // InternalDockerCompose.g:12356:2: rule__Network__UnorderedGroup_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__Impl"
    // InternalDockerCompose.g:12364:1: rule__Network__UnorderedGroup_3_1__Impl : ( ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) ) ) ;
    public final void rule__Network__UnorderedGroup_3_1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:12369:1: ( ( ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) ) ) )
            // InternalDockerCompose.g:12370:3: ( ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:12370:3: ( ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) ) )
            int alt116=9;
            alt116 = dfa116.predict(input);
            switch (alt116) {
                case 1 :
                    // InternalDockerCompose.g:12371:3: ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12371:3: ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) )
                    // InternalDockerCompose.g:12372:4: {...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0)");
                    }
                    // InternalDockerCompose.g:12372:105: ( ( ( rule__Network__Group_3_1_0__0 ) ) )
                    // InternalDockerCompose.g:12373:5: ( ( rule__Network__Group_3_1_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12379:5: ( ( rule__Network__Group_3_1_0__0 ) )
                    // InternalDockerCompose.g:12380:6: ( rule__Network__Group_3_1_0__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_0()); 
                    // InternalDockerCompose.g:12381:6: ( rule__Network__Group_3_1_0__0 )
                    // InternalDockerCompose.g:12381:7: rule__Network__Group_3_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:12386:3: ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12386:3: ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) )
                    // InternalDockerCompose.g:12387:4: {...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1)");
                    }
                    // InternalDockerCompose.g:12387:105: ( ( ( rule__Network__Group_3_1_1__0 ) ) )
                    // InternalDockerCompose.g:12388:5: ( ( rule__Network__Group_3_1_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12394:5: ( ( rule__Network__Group_3_1_1__0 ) )
                    // InternalDockerCompose.g:12395:6: ( rule__Network__Group_3_1_1__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_1()); 
                    // InternalDockerCompose.g:12396:6: ( rule__Network__Group_3_1_1__0 )
                    // InternalDockerCompose.g:12396:7: rule__Network__Group_3_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:12401:3: ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12401:3: ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) )
                    // InternalDockerCompose.g:12402:4: {...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2)");
                    }
                    // InternalDockerCompose.g:12402:105: ( ( ( rule__Network__Group_3_1_2__0 ) ) )
                    // InternalDockerCompose.g:12403:5: ( ( rule__Network__Group_3_1_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12409:5: ( ( rule__Network__Group_3_1_2__0 ) )
                    // InternalDockerCompose.g:12410:6: ( rule__Network__Group_3_1_2__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_2()); 
                    // InternalDockerCompose.g:12411:6: ( rule__Network__Group_3_1_2__0 )
                    // InternalDockerCompose.g:12411:7: rule__Network__Group_3_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:12416:3: ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12416:3: ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) )
                    // InternalDockerCompose.g:12417:4: {...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3)");
                    }
                    // InternalDockerCompose.g:12417:105: ( ( ( rule__Network__Group_3_1_3__0 ) ) )
                    // InternalDockerCompose.g:12418:5: ( ( rule__Network__Group_3_1_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12424:5: ( ( rule__Network__Group_3_1_3__0 ) )
                    // InternalDockerCompose.g:12425:6: ( rule__Network__Group_3_1_3__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_3()); 
                    // InternalDockerCompose.g:12426:6: ( rule__Network__Group_3_1_3__0 )
                    // InternalDockerCompose.g:12426:7: rule__Network__Group_3_1_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:12431:3: ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12431:3: ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) )
                    // InternalDockerCompose.g:12432:4: {...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4)");
                    }
                    // InternalDockerCompose.g:12432:105: ( ( ( rule__Network__Group_3_1_4__0 ) ) )
                    // InternalDockerCompose.g:12433:5: ( ( rule__Network__Group_3_1_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12439:5: ( ( rule__Network__Group_3_1_4__0 ) )
                    // InternalDockerCompose.g:12440:6: ( rule__Network__Group_3_1_4__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_4()); 
                    // InternalDockerCompose.g:12441:6: ( rule__Network__Group_3_1_4__0 )
                    // InternalDockerCompose.g:12441:7: rule__Network__Group_3_1_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_4()); 

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDockerCompose.g:12446:3: ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12446:3: ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) )
                    // InternalDockerCompose.g:12447:4: {...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5)");
                    }
                    // InternalDockerCompose.g:12447:105: ( ( ( rule__Network__Group_3_1_5__0 ) ) )
                    // InternalDockerCompose.g:12448:5: ( ( rule__Network__Group_3_1_5__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12454:5: ( ( rule__Network__Group_3_1_5__0 ) )
                    // InternalDockerCompose.g:12455:6: ( rule__Network__Group_3_1_5__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_5()); 
                    // InternalDockerCompose.g:12456:6: ( rule__Network__Group_3_1_5__0 )
                    // InternalDockerCompose.g:12456:7: rule__Network__Group_3_1_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_5__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_5()); 

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalDockerCompose.g:12461:3: ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12461:3: ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) )
                    // InternalDockerCompose.g:12462:4: {...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6)");
                    }
                    // InternalDockerCompose.g:12462:105: ( ( ( rule__Network__Group_3_1_6__0 ) ) )
                    // InternalDockerCompose.g:12463:5: ( ( rule__Network__Group_3_1_6__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12469:5: ( ( rule__Network__Group_3_1_6__0 ) )
                    // InternalDockerCompose.g:12470:6: ( rule__Network__Group_3_1_6__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_6()); 
                    // InternalDockerCompose.g:12471:6: ( rule__Network__Group_3_1_6__0 )
                    // InternalDockerCompose.g:12471:7: rule__Network__Group_3_1_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_6__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_6()); 

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalDockerCompose.g:12476:3: ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12476:3: ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) )
                    // InternalDockerCompose.g:12477:4: {...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7)");
                    }
                    // InternalDockerCompose.g:12477:105: ( ( ( rule__Network__Group_3_1_7__0 ) ) )
                    // InternalDockerCompose.g:12478:5: ( ( rule__Network__Group_3_1_7__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12484:5: ( ( rule__Network__Group_3_1_7__0 ) )
                    // InternalDockerCompose.g:12485:6: ( rule__Network__Group_3_1_7__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_7()); 
                    // InternalDockerCompose.g:12486:6: ( rule__Network__Group_3_1_7__0 )
                    // InternalDockerCompose.g:12486:7: rule__Network__Group_3_1_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_7__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_7()); 

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalDockerCompose.g:12491:3: ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12491:3: ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) )
                    // InternalDockerCompose.g:12492:4: {...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8)");
                    }
                    // InternalDockerCompose.g:12492:105: ( ( ( rule__Network__Group_3_1_8__0 ) ) )
                    // InternalDockerCompose.g:12493:5: ( ( rule__Network__Group_3_1_8__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12499:5: ( ( rule__Network__Group_3_1_8__0 ) )
                    // InternalDockerCompose.g:12500:6: ( rule__Network__Group_3_1_8__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_8()); 
                    // InternalDockerCompose.g:12501:6: ( rule__Network__Group_3_1_8__0 )
                    // InternalDockerCompose.g:12501:7: rule__Network__Group_3_1_8__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_8__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_8()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__Impl"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__0"
    // InternalDockerCompose.g:12514:1: rule__Network__UnorderedGroup_3_1__0 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__1 )? ;
    public final void rule__Network__UnorderedGroup_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12518:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__1 )? )
            // InternalDockerCompose.g:12519:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__1 )?
            {
            pushFollow(FOLLOW_56);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12520:2: ( rule__Network__UnorderedGroup_3_1__1 )?
            int alt117=2;
            alt117 = dfa117.predict(input);
            switch (alt117) {
                case 1 :
                    // InternalDockerCompose.g:12520:2: rule__Network__UnorderedGroup_3_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__0"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__1"
    // InternalDockerCompose.g:12526:1: rule__Network__UnorderedGroup_3_1__1 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__2 )? ;
    public final void rule__Network__UnorderedGroup_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12530:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__2 )? )
            // InternalDockerCompose.g:12531:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__2 )?
            {
            pushFollow(FOLLOW_56);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12532:2: ( rule__Network__UnorderedGroup_3_1__2 )?
            int alt118=2;
            alt118 = dfa118.predict(input);
            switch (alt118) {
                case 1 :
                    // InternalDockerCompose.g:12532:2: rule__Network__UnorderedGroup_3_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__1"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__2"
    // InternalDockerCompose.g:12538:1: rule__Network__UnorderedGroup_3_1__2 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__3 )? ;
    public final void rule__Network__UnorderedGroup_3_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12542:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__3 )? )
            // InternalDockerCompose.g:12543:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__3 )?
            {
            pushFollow(FOLLOW_56);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12544:2: ( rule__Network__UnorderedGroup_3_1__3 )?
            int alt119=2;
            alt119 = dfa119.predict(input);
            switch (alt119) {
                case 1 :
                    // InternalDockerCompose.g:12544:2: rule__Network__UnorderedGroup_3_1__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__2"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__3"
    // InternalDockerCompose.g:12550:1: rule__Network__UnorderedGroup_3_1__3 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__4 )? ;
    public final void rule__Network__UnorderedGroup_3_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12554:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__4 )? )
            // InternalDockerCompose.g:12555:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__4 )?
            {
            pushFollow(FOLLOW_56);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12556:2: ( rule__Network__UnorderedGroup_3_1__4 )?
            int alt120=2;
            alt120 = dfa120.predict(input);
            switch (alt120) {
                case 1 :
                    // InternalDockerCompose.g:12556:2: rule__Network__UnorderedGroup_3_1__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__3"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__4"
    // InternalDockerCompose.g:12562:1: rule__Network__UnorderedGroup_3_1__4 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__5 )? ;
    public final void rule__Network__UnorderedGroup_3_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12566:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__5 )? )
            // InternalDockerCompose.g:12567:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__5 )?
            {
            pushFollow(FOLLOW_56);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12568:2: ( rule__Network__UnorderedGroup_3_1__5 )?
            int alt121=2;
            alt121 = dfa121.predict(input);
            switch (alt121) {
                case 1 :
                    // InternalDockerCompose.g:12568:2: rule__Network__UnorderedGroup_3_1__5
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__5();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__4"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__5"
    // InternalDockerCompose.g:12574:1: rule__Network__UnorderedGroup_3_1__5 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__6 )? ;
    public final void rule__Network__UnorderedGroup_3_1__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12578:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__6 )? )
            // InternalDockerCompose.g:12579:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__6 )?
            {
            pushFollow(FOLLOW_56);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12580:2: ( rule__Network__UnorderedGroup_3_1__6 )?
            int alt122=2;
            alt122 = dfa122.predict(input);
            switch (alt122) {
                case 1 :
                    // InternalDockerCompose.g:12580:2: rule__Network__UnorderedGroup_3_1__6
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__6();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__5"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__6"
    // InternalDockerCompose.g:12586:1: rule__Network__UnorderedGroup_3_1__6 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__7 )? ;
    public final void rule__Network__UnorderedGroup_3_1__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12590:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__7 )? )
            // InternalDockerCompose.g:12591:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__7 )?
            {
            pushFollow(FOLLOW_56);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12592:2: ( rule__Network__UnorderedGroup_3_1__7 )?
            int alt123=2;
            alt123 = dfa123.predict(input);
            switch (alt123) {
                case 1 :
                    // InternalDockerCompose.g:12592:2: rule__Network__UnorderedGroup_3_1__7
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__7();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__6"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__7"
    // InternalDockerCompose.g:12598:1: rule__Network__UnorderedGroup_3_1__7 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__8 )? ;
    public final void rule__Network__UnorderedGroup_3_1__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12602:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__8 )? )
            // InternalDockerCompose.g:12603:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__8 )?
            {
            pushFollow(FOLLOW_56);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12604:2: ( rule__Network__UnorderedGroup_3_1__8 )?
            int alt124=2;
            alt124 = dfa124.predict(input);
            switch (alt124) {
                case 1 :
                    // InternalDockerCompose.g:12604:2: rule__Network__UnorderedGroup_3_1__8
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__8();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__7"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__8"
    // InternalDockerCompose.g:12610:1: rule__Network__UnorderedGroup_3_1__8 : rule__Network__UnorderedGroup_3_1__Impl ;
    public final void rule__Network__UnorderedGroup_3_1__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12614:1: ( rule__Network__UnorderedGroup_3_1__Impl )
            // InternalDockerCompose.g:12615:2: rule__Network__UnorderedGroup_3_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__8"


    // $ANTLR start "rule__Volume__UnorderedGroup_3"
    // InternalDockerCompose.g:12622:1: rule__Volume__UnorderedGroup_3 : ( rule__Volume__UnorderedGroup_3__0 )? ;
    public final void rule__Volume__UnorderedGroup_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getVolumeAccess().getUnorderedGroup_3());
        	
        try {
            // InternalDockerCompose.g:12627:1: ( ( rule__Volume__UnorderedGroup_3__0 )? )
            // InternalDockerCompose.g:12628:2: ( rule__Volume__UnorderedGroup_3__0 )?
            {
            // InternalDockerCompose.g:12628:2: ( rule__Volume__UnorderedGroup_3__0 )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( LA125_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                alt125=1;
            }
            else if ( LA125_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                alt125=1;
            }
            else if ( LA125_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                alt125=1;
            }
            else if ( LA125_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                alt125=1;
            }
            else if ( LA125_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // InternalDockerCompose.g:12628:2: rule__Volume__UnorderedGroup_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__UnorderedGroup_3__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getVolumeAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3"


    // $ANTLR start "rule__Volume__UnorderedGroup_3__Impl"
    // InternalDockerCompose.g:12636:1: rule__Volume__UnorderedGroup_3__Impl : ( ({...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) ) ) ) ;
    public final void rule__Volume__UnorderedGroup_3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:12641:1: ( ( ({...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) ) ) ) )
            // InternalDockerCompose.g:12642:3: ( ({...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:12642:3: ( ({...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) ) ) )
            int alt126=5;
            int LA126_0 = input.LA(1);

            if ( LA126_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                alt126=1;
            }
            else if ( LA126_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                alt126=2;
            }
            else if ( LA126_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                alt126=3;
            }
            else if ( LA126_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                alt126=4;
            }
            else if ( LA126_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                alt126=5;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 126, 0, input);

                throw nvae;
            }
            switch (alt126) {
                case 1 :
                    // InternalDockerCompose.g:12643:3: ({...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12643:3: ({...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) ) )
                    // InternalDockerCompose.g:12644:4: {...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                        throw new FailedPredicateException(input, "rule__Volume__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0)");
                    }
                    // InternalDockerCompose.g:12644:102: ( ( ( rule__Volume__Group_3_0__0 ) ) )
                    // InternalDockerCompose.g:12645:5: ( ( rule__Volume__Group_3_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12651:5: ( ( rule__Volume__Group_3_0__0 ) )
                    // InternalDockerCompose.g:12652:6: ( rule__Volume__Group_3_0__0 )
                    {
                     before(grammarAccess.getVolumeAccess().getGroup_3_0()); 
                    // InternalDockerCompose.g:12653:6: ( rule__Volume__Group_3_0__0 )
                    // InternalDockerCompose.g:12653:7: rule__Volume__Group_3_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__Group_3_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeAccess().getGroup_3_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:12658:3: ({...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12658:3: ({...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) ) )
                    // InternalDockerCompose.g:12659:4: {...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                        throw new FailedPredicateException(input, "rule__Volume__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1)");
                    }
                    // InternalDockerCompose.g:12659:102: ( ( ( rule__Volume__Group_3_1__0 ) ) )
                    // InternalDockerCompose.g:12660:5: ( ( rule__Volume__Group_3_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12666:5: ( ( rule__Volume__Group_3_1__0 ) )
                    // InternalDockerCompose.g:12667:6: ( rule__Volume__Group_3_1__0 )
                    {
                     before(grammarAccess.getVolumeAccess().getGroup_3_1()); 
                    // InternalDockerCompose.g:12668:6: ( rule__Volume__Group_3_1__0 )
                    // InternalDockerCompose.g:12668:7: rule__Volume__Group_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__Group_3_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeAccess().getGroup_3_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:12673:3: ({...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12673:3: ({...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) ) )
                    // InternalDockerCompose.g:12674:4: {...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                        throw new FailedPredicateException(input, "rule__Volume__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2)");
                    }
                    // InternalDockerCompose.g:12674:102: ( ( ( rule__Volume__Group_3_2__0 ) ) )
                    // InternalDockerCompose.g:12675:5: ( ( rule__Volume__Group_3_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12681:5: ( ( rule__Volume__Group_3_2__0 ) )
                    // InternalDockerCompose.g:12682:6: ( rule__Volume__Group_3_2__0 )
                    {
                     before(grammarAccess.getVolumeAccess().getGroup_3_2()); 
                    // InternalDockerCompose.g:12683:6: ( rule__Volume__Group_3_2__0 )
                    // InternalDockerCompose.g:12683:7: rule__Volume__Group_3_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__Group_3_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeAccess().getGroup_3_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:12688:3: ({...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12688:3: ({...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) ) )
                    // InternalDockerCompose.g:12689:4: {...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                        throw new FailedPredicateException(input, "rule__Volume__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3)");
                    }
                    // InternalDockerCompose.g:12689:102: ( ( ( rule__Volume__Group_3_3__0 ) ) )
                    // InternalDockerCompose.g:12690:5: ( ( rule__Volume__Group_3_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12696:5: ( ( rule__Volume__Group_3_3__0 ) )
                    // InternalDockerCompose.g:12697:6: ( rule__Volume__Group_3_3__0 )
                    {
                     before(grammarAccess.getVolumeAccess().getGroup_3_3()); 
                    // InternalDockerCompose.g:12698:6: ( rule__Volume__Group_3_3__0 )
                    // InternalDockerCompose.g:12698:7: rule__Volume__Group_3_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__Group_3_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeAccess().getGroup_3_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:12703:3: ({...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12703:3: ({...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) ) )
                    // InternalDockerCompose.g:12704:4: {...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                        throw new FailedPredicateException(input, "rule__Volume__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4)");
                    }
                    // InternalDockerCompose.g:12704:102: ( ( ( rule__Volume__Group_3_4__0 ) ) )
                    // InternalDockerCompose.g:12705:5: ( ( rule__Volume__Group_3_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12711:5: ( ( rule__Volume__Group_3_4__0 ) )
                    // InternalDockerCompose.g:12712:6: ( rule__Volume__Group_3_4__0 )
                    {
                     before(grammarAccess.getVolumeAccess().getGroup_3_4()); 
                    // InternalDockerCompose.g:12713:6: ( rule__Volume__Group_3_4__0 )
                    // InternalDockerCompose.g:12713:7: rule__Volume__Group_3_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__Group_3_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeAccess().getGroup_3_4()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVolumeAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3__Impl"


    // $ANTLR start "rule__Volume__UnorderedGroup_3__0"
    // InternalDockerCompose.g:12726:1: rule__Volume__UnorderedGroup_3__0 : rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__1 )? ;
    public final void rule__Volume__UnorderedGroup_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12730:1: ( rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__1 )? )
            // InternalDockerCompose.g:12731:2: rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__1 )?
            {
            pushFollow(FOLLOW_57);
            rule__Volume__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12732:2: ( rule__Volume__UnorderedGroup_3__1 )?
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( LA127_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                alt127=1;
            }
            else if ( LA127_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                alt127=1;
            }
            else if ( LA127_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                alt127=1;
            }
            else if ( LA127_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                alt127=1;
            }
            else if ( LA127_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    // InternalDockerCompose.g:12732:2: rule__Volume__UnorderedGroup_3__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__UnorderedGroup_3__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3__0"


    // $ANTLR start "rule__Volume__UnorderedGroup_3__1"
    // InternalDockerCompose.g:12738:1: rule__Volume__UnorderedGroup_3__1 : rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__2 )? ;
    public final void rule__Volume__UnorderedGroup_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12742:1: ( rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__2 )? )
            // InternalDockerCompose.g:12743:2: rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__2 )?
            {
            pushFollow(FOLLOW_57);
            rule__Volume__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12744:2: ( rule__Volume__UnorderedGroup_3__2 )?
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( LA128_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                alt128=1;
            }
            else if ( LA128_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                alt128=1;
            }
            else if ( LA128_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                alt128=1;
            }
            else if ( LA128_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                alt128=1;
            }
            else if ( LA128_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                alt128=1;
            }
            switch (alt128) {
                case 1 :
                    // InternalDockerCompose.g:12744:2: rule__Volume__UnorderedGroup_3__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__UnorderedGroup_3__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3__1"


    // $ANTLR start "rule__Volume__UnorderedGroup_3__2"
    // InternalDockerCompose.g:12750:1: rule__Volume__UnorderedGroup_3__2 : rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__3 )? ;
    public final void rule__Volume__UnorderedGroup_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12754:1: ( rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__3 )? )
            // InternalDockerCompose.g:12755:2: rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__3 )?
            {
            pushFollow(FOLLOW_57);
            rule__Volume__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12756:2: ( rule__Volume__UnorderedGroup_3__3 )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( LA129_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                alt129=1;
            }
            else if ( LA129_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                alt129=1;
            }
            else if ( LA129_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                alt129=1;
            }
            else if ( LA129_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                alt129=1;
            }
            else if ( LA129_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // InternalDockerCompose.g:12756:2: rule__Volume__UnorderedGroup_3__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__UnorderedGroup_3__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3__2"


    // $ANTLR start "rule__Volume__UnorderedGroup_3__3"
    // InternalDockerCompose.g:12762:1: rule__Volume__UnorderedGroup_3__3 : rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__4 )? ;
    public final void rule__Volume__UnorderedGroup_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12766:1: ( rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__4 )? )
            // InternalDockerCompose.g:12767:2: rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__4 )?
            {
            pushFollow(FOLLOW_57);
            rule__Volume__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12768:2: ( rule__Volume__UnorderedGroup_3__4 )?
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( LA130_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                alt130=1;
            }
            else if ( LA130_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                alt130=1;
            }
            else if ( LA130_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                alt130=1;
            }
            else if ( LA130_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                alt130=1;
            }
            else if ( LA130_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                alt130=1;
            }
            switch (alt130) {
                case 1 :
                    // InternalDockerCompose.g:12768:2: rule__Volume__UnorderedGroup_3__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__UnorderedGroup_3__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3__3"


    // $ANTLR start "rule__Volume__UnorderedGroup_3__4"
    // InternalDockerCompose.g:12774:1: rule__Volume__UnorderedGroup_3__4 : rule__Volume__UnorderedGroup_3__Impl ;
    public final void rule__Volume__UnorderedGroup_3__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12778:1: ( rule__Volume__UnorderedGroup_3__Impl )
            // InternalDockerCompose.g:12779:2: rule__Volume__UnorderedGroup_3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__UnorderedGroup_3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3__4"


    // $ANTLR start "rule__Config__UnorderedGroup_3"
    // InternalDockerCompose.g:12786:1: rule__Config__UnorderedGroup_3 : ( rule__Config__UnorderedGroup_3__0 )? ;
    public final void rule__Config__UnorderedGroup_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getConfigAccess().getUnorderedGroup_3());
        	
        try {
            // InternalDockerCompose.g:12791:1: ( ( rule__Config__UnorderedGroup_3__0 )? )
            // InternalDockerCompose.g:12792:2: ( rule__Config__UnorderedGroup_3__0 )?
            {
            // InternalDockerCompose.g:12792:2: ( rule__Config__UnorderedGroup_3__0 )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( LA131_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0) ) {
                alt131=1;
            }
            else if ( LA131_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1) ) {
                alt131=1;
            }
            else if ( LA131_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // InternalDockerCompose.g:12792:2: rule__Config__UnorderedGroup_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Config__UnorderedGroup_3__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getConfigAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__UnorderedGroup_3"


    // $ANTLR start "rule__Config__UnorderedGroup_3__Impl"
    // InternalDockerCompose.g:12800:1: rule__Config__UnorderedGroup_3__Impl : ( ({...}? => ( ( ( rule__Config__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_2__0 ) ) ) ) ) ;
    public final void rule__Config__UnorderedGroup_3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:12805:1: ( ( ({...}? => ( ( ( rule__Config__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_2__0 ) ) ) ) ) )
            // InternalDockerCompose.g:12806:3: ( ({...}? => ( ( ( rule__Config__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_2__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:12806:3: ( ({...}? => ( ( ( rule__Config__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_2__0 ) ) ) ) )
            int alt132=3;
            int LA132_0 = input.LA(1);

            if ( LA132_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0) ) {
                alt132=1;
            }
            else if ( LA132_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1) ) {
                alt132=2;
            }
            else if ( LA132_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2) ) {
                alt132=3;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 132, 0, input);

                throw nvae;
            }
            switch (alt132) {
                case 1 :
                    // InternalDockerCompose.g:12807:3: ({...}? => ( ( ( rule__Config__Group_3_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12807:3: ({...}? => ( ( ( rule__Config__Group_3_0__0 ) ) ) )
                    // InternalDockerCompose.g:12808:4: {...}? => ( ( ( rule__Config__Group_3_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0) ) {
                        throw new FailedPredicateException(input, "rule__Config__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0)");
                    }
                    // InternalDockerCompose.g:12808:102: ( ( ( rule__Config__Group_3_0__0 ) ) )
                    // InternalDockerCompose.g:12809:5: ( ( rule__Config__Group_3_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12815:5: ( ( rule__Config__Group_3_0__0 ) )
                    // InternalDockerCompose.g:12816:6: ( rule__Config__Group_3_0__0 )
                    {
                     before(grammarAccess.getConfigAccess().getGroup_3_0()); 
                    // InternalDockerCompose.g:12817:6: ( rule__Config__Group_3_0__0 )
                    // InternalDockerCompose.g:12817:7: rule__Config__Group_3_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Config__Group_3_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigAccess().getGroup_3_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:12822:3: ({...}? => ( ( ( rule__Config__Group_3_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12822:3: ({...}? => ( ( ( rule__Config__Group_3_1__0 ) ) ) )
                    // InternalDockerCompose.g:12823:4: {...}? => ( ( ( rule__Config__Group_3_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1) ) {
                        throw new FailedPredicateException(input, "rule__Config__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1)");
                    }
                    // InternalDockerCompose.g:12823:102: ( ( ( rule__Config__Group_3_1__0 ) ) )
                    // InternalDockerCompose.g:12824:5: ( ( rule__Config__Group_3_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12830:5: ( ( rule__Config__Group_3_1__0 ) )
                    // InternalDockerCompose.g:12831:6: ( rule__Config__Group_3_1__0 )
                    {
                     before(grammarAccess.getConfigAccess().getGroup_3_1()); 
                    // InternalDockerCompose.g:12832:6: ( rule__Config__Group_3_1__0 )
                    // InternalDockerCompose.g:12832:7: rule__Config__Group_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Config__Group_3_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigAccess().getGroup_3_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:12837:3: ({...}? => ( ( ( rule__Config__Group_3_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12837:3: ({...}? => ( ( ( rule__Config__Group_3_2__0 ) ) ) )
                    // InternalDockerCompose.g:12838:4: {...}? => ( ( ( rule__Config__Group_3_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2) ) {
                        throw new FailedPredicateException(input, "rule__Config__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2)");
                    }
                    // InternalDockerCompose.g:12838:102: ( ( ( rule__Config__Group_3_2__0 ) ) )
                    // InternalDockerCompose.g:12839:5: ( ( rule__Config__Group_3_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12845:5: ( ( rule__Config__Group_3_2__0 ) )
                    // InternalDockerCompose.g:12846:6: ( rule__Config__Group_3_2__0 )
                    {
                     before(grammarAccess.getConfigAccess().getGroup_3_2()); 
                    // InternalDockerCompose.g:12847:6: ( rule__Config__Group_3_2__0 )
                    // InternalDockerCompose.g:12847:7: rule__Config__Group_3_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Config__Group_3_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigAccess().getGroup_3_2()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConfigAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__UnorderedGroup_3__Impl"


    // $ANTLR start "rule__Config__UnorderedGroup_3__0"
    // InternalDockerCompose.g:12860:1: rule__Config__UnorderedGroup_3__0 : rule__Config__UnorderedGroup_3__Impl ( rule__Config__UnorderedGroup_3__1 )? ;
    public final void rule__Config__UnorderedGroup_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12864:1: ( rule__Config__UnorderedGroup_3__Impl ( rule__Config__UnorderedGroup_3__1 )? )
            // InternalDockerCompose.g:12865:2: rule__Config__UnorderedGroup_3__Impl ( rule__Config__UnorderedGroup_3__1 )?
            {
            pushFollow(FOLLOW_58);
            rule__Config__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12866:2: ( rule__Config__UnorderedGroup_3__1 )?
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( LA133_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0) ) {
                alt133=1;
            }
            else if ( LA133_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1) ) {
                alt133=1;
            }
            else if ( LA133_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2) ) {
                alt133=1;
            }
            switch (alt133) {
                case 1 :
                    // InternalDockerCompose.g:12866:2: rule__Config__UnorderedGroup_3__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Config__UnorderedGroup_3__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__UnorderedGroup_3__0"


    // $ANTLR start "rule__Config__UnorderedGroup_3__1"
    // InternalDockerCompose.g:12872:1: rule__Config__UnorderedGroup_3__1 : rule__Config__UnorderedGroup_3__Impl ( rule__Config__UnorderedGroup_3__2 )? ;
    public final void rule__Config__UnorderedGroup_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12876:1: ( rule__Config__UnorderedGroup_3__Impl ( rule__Config__UnorderedGroup_3__2 )? )
            // InternalDockerCompose.g:12877:2: rule__Config__UnorderedGroup_3__Impl ( rule__Config__UnorderedGroup_3__2 )?
            {
            pushFollow(FOLLOW_58);
            rule__Config__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12878:2: ( rule__Config__UnorderedGroup_3__2 )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( LA134_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0) ) {
                alt134=1;
            }
            else if ( LA134_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1) ) {
                alt134=1;
            }
            else if ( LA134_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // InternalDockerCompose.g:12878:2: rule__Config__UnorderedGroup_3__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Config__UnorderedGroup_3__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__UnorderedGroup_3__1"


    // $ANTLR start "rule__Config__UnorderedGroup_3__2"
    // InternalDockerCompose.g:12884:1: rule__Config__UnorderedGroup_3__2 : rule__Config__UnorderedGroup_3__Impl ;
    public final void rule__Config__UnorderedGroup_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12888:1: ( rule__Config__UnorderedGroup_3__Impl )
            // InternalDockerCompose.g:12889:2: rule__Config__UnorderedGroup_3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Config__UnorderedGroup_3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__UnorderedGroup_3__2"


    // $ANTLR start "rule__Secret__UnorderedGroup_3"
    // InternalDockerCompose.g:12896:1: rule__Secret__UnorderedGroup_3 : ( rule__Secret__UnorderedGroup_3__0 )? ;
    public final void rule__Secret__UnorderedGroup_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getSecretAccess().getUnorderedGroup_3());
        	
        try {
            // InternalDockerCompose.g:12901:1: ( ( rule__Secret__UnorderedGroup_3__0 )? )
            // InternalDockerCompose.g:12902:2: ( rule__Secret__UnorderedGroup_3__0 )?
            {
            // InternalDockerCompose.g:12902:2: ( rule__Secret__UnorderedGroup_3__0 )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( LA135_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0) ) {
                alt135=1;
            }
            else if ( LA135_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1) ) {
                alt135=1;
            }
            else if ( LA135_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2) ) {
                alt135=1;
            }
            else if ( LA135_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // InternalDockerCompose.g:12902:2: rule__Secret__UnorderedGroup_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__UnorderedGroup_3__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getSecretAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__UnorderedGroup_3"


    // $ANTLR start "rule__Secret__UnorderedGroup_3__Impl"
    // InternalDockerCompose.g:12910:1: rule__Secret__UnorderedGroup_3__Impl : ( ({...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) ) ) ) ;
    public final void rule__Secret__UnorderedGroup_3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:12915:1: ( ( ({...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) ) ) ) )
            // InternalDockerCompose.g:12916:3: ( ({...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:12916:3: ( ({...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) ) ) )
            int alt136=4;
            int LA136_0 = input.LA(1);

            if ( LA136_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0) ) {
                alt136=1;
            }
            else if ( LA136_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1) ) {
                alt136=2;
            }
            else if ( LA136_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2) ) {
                alt136=3;
            }
            else if ( LA136_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3) ) {
                alt136=4;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 136, 0, input);

                throw nvae;
            }
            switch (alt136) {
                case 1 :
                    // InternalDockerCompose.g:12917:3: ({...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12917:3: ({...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) ) )
                    // InternalDockerCompose.g:12918:4: {...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0) ) {
                        throw new FailedPredicateException(input, "rule__Secret__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0)");
                    }
                    // InternalDockerCompose.g:12918:102: ( ( ( rule__Secret__Group_3_0__0 ) ) )
                    // InternalDockerCompose.g:12919:5: ( ( rule__Secret__Group_3_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12925:5: ( ( rule__Secret__Group_3_0__0 ) )
                    // InternalDockerCompose.g:12926:6: ( rule__Secret__Group_3_0__0 )
                    {
                     before(grammarAccess.getSecretAccess().getGroup_3_0()); 
                    // InternalDockerCompose.g:12927:6: ( rule__Secret__Group_3_0__0 )
                    // InternalDockerCompose.g:12927:7: rule__Secret__Group_3_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__Group_3_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretAccess().getGroup_3_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:12932:3: ({...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12932:3: ({...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) ) )
                    // InternalDockerCompose.g:12933:4: {...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1) ) {
                        throw new FailedPredicateException(input, "rule__Secret__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1)");
                    }
                    // InternalDockerCompose.g:12933:102: ( ( ( rule__Secret__Group_3_1__0 ) ) )
                    // InternalDockerCompose.g:12934:5: ( ( rule__Secret__Group_3_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12940:5: ( ( rule__Secret__Group_3_1__0 ) )
                    // InternalDockerCompose.g:12941:6: ( rule__Secret__Group_3_1__0 )
                    {
                     before(grammarAccess.getSecretAccess().getGroup_3_1()); 
                    // InternalDockerCompose.g:12942:6: ( rule__Secret__Group_3_1__0 )
                    // InternalDockerCompose.g:12942:7: rule__Secret__Group_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__Group_3_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretAccess().getGroup_3_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:12947:3: ({...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12947:3: ({...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) ) )
                    // InternalDockerCompose.g:12948:4: {...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2) ) {
                        throw new FailedPredicateException(input, "rule__Secret__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2)");
                    }
                    // InternalDockerCompose.g:12948:102: ( ( ( rule__Secret__Group_3_2__0 ) ) )
                    // InternalDockerCompose.g:12949:5: ( ( rule__Secret__Group_3_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12955:5: ( ( rule__Secret__Group_3_2__0 ) )
                    // InternalDockerCompose.g:12956:6: ( rule__Secret__Group_3_2__0 )
                    {
                     before(grammarAccess.getSecretAccess().getGroup_3_2()); 
                    // InternalDockerCompose.g:12957:6: ( rule__Secret__Group_3_2__0 )
                    // InternalDockerCompose.g:12957:7: rule__Secret__Group_3_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__Group_3_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretAccess().getGroup_3_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:12962:3: ({...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12962:3: ({...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) ) )
                    // InternalDockerCompose.g:12963:4: {...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3) ) {
                        throw new FailedPredicateException(input, "rule__Secret__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3)");
                    }
                    // InternalDockerCompose.g:12963:102: ( ( ( rule__Secret__Group_3_3__0 ) ) )
                    // InternalDockerCompose.g:12964:5: ( ( rule__Secret__Group_3_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12970:5: ( ( rule__Secret__Group_3_3__0 ) )
                    // InternalDockerCompose.g:12971:6: ( rule__Secret__Group_3_3__0 )
                    {
                     before(grammarAccess.getSecretAccess().getGroup_3_3()); 
                    // InternalDockerCompose.g:12972:6: ( rule__Secret__Group_3_3__0 )
                    // InternalDockerCompose.g:12972:7: rule__Secret__Group_3_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__Group_3_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretAccess().getGroup_3_3()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSecretAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__UnorderedGroup_3__Impl"


    // $ANTLR start "rule__Secret__UnorderedGroup_3__0"
    // InternalDockerCompose.g:12985:1: rule__Secret__UnorderedGroup_3__0 : rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__1 )? ;
    public final void rule__Secret__UnorderedGroup_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12989:1: ( rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__1 )? )
            // InternalDockerCompose.g:12990:2: rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__1 )?
            {
            pushFollow(FOLLOW_59);
            rule__Secret__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12991:2: ( rule__Secret__UnorderedGroup_3__1 )?
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( LA137_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0) ) {
                alt137=1;
            }
            else if ( LA137_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1) ) {
                alt137=1;
            }
            else if ( LA137_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2) ) {
                alt137=1;
            }
            else if ( LA137_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3) ) {
                alt137=1;
            }
            switch (alt137) {
                case 1 :
                    // InternalDockerCompose.g:12991:2: rule__Secret__UnorderedGroup_3__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__UnorderedGroup_3__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__UnorderedGroup_3__0"


    // $ANTLR start "rule__Secret__UnorderedGroup_3__1"
    // InternalDockerCompose.g:12997:1: rule__Secret__UnorderedGroup_3__1 : rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__2 )? ;
    public final void rule__Secret__UnorderedGroup_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13001:1: ( rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__2 )? )
            // InternalDockerCompose.g:13002:2: rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__2 )?
            {
            pushFollow(FOLLOW_59);
            rule__Secret__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:13003:2: ( rule__Secret__UnorderedGroup_3__2 )?
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( LA138_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0) ) {
                alt138=1;
            }
            else if ( LA138_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1) ) {
                alt138=1;
            }
            else if ( LA138_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2) ) {
                alt138=1;
            }
            else if ( LA138_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3) ) {
                alt138=1;
            }
            switch (alt138) {
                case 1 :
                    // InternalDockerCompose.g:13003:2: rule__Secret__UnorderedGroup_3__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__UnorderedGroup_3__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__UnorderedGroup_3__1"


    // $ANTLR start "rule__Secret__UnorderedGroup_3__2"
    // InternalDockerCompose.g:13009:1: rule__Secret__UnorderedGroup_3__2 : rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__3 )? ;
    public final void rule__Secret__UnorderedGroup_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13013:1: ( rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__3 )? )
            // InternalDockerCompose.g:13014:2: rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__3 )?
            {
            pushFollow(FOLLOW_59);
            rule__Secret__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:13015:2: ( rule__Secret__UnorderedGroup_3__3 )?
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( LA139_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0) ) {
                alt139=1;
            }
            else if ( LA139_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1) ) {
                alt139=1;
            }
            else if ( LA139_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2) ) {
                alt139=1;
            }
            else if ( LA139_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3) ) {
                alt139=1;
            }
            switch (alt139) {
                case 1 :
                    // InternalDockerCompose.g:13015:2: rule__Secret__UnorderedGroup_3__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__UnorderedGroup_3__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__UnorderedGroup_3__2"


    // $ANTLR start "rule__Secret__UnorderedGroup_3__3"
    // InternalDockerCompose.g:13021:1: rule__Secret__UnorderedGroup_3__3 : rule__Secret__UnorderedGroup_3__Impl ;
    public final void rule__Secret__UnorderedGroup_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13025:1: ( rule__Secret__UnorderedGroup_3__Impl )
            // InternalDockerCompose.g:13026:2: rule__Secret__UnorderedGroup_3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Secret__UnorderedGroup_3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__UnorderedGroup_3__3"


    // $ANTLR start "rule__IPAM__UnorderedGroup_1"
    // InternalDockerCompose.g:13033:1: rule__IPAM__UnorderedGroup_1 : ( rule__IPAM__UnorderedGroup_1__0 )? ;
    public final void rule__IPAM__UnorderedGroup_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getIPAMAccess().getUnorderedGroup_1());
        	
        try {
            // InternalDockerCompose.g:13038:1: ( ( rule__IPAM__UnorderedGroup_1__0 )? )
            // InternalDockerCompose.g:13039:2: ( rule__IPAM__UnorderedGroup_1__0 )?
            {
            // InternalDockerCompose.g:13039:2: ( rule__IPAM__UnorderedGroup_1__0 )?
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( (LA140_0==84) ) {
                int LA140_1 = input.LA(2);

                if ( (LA140_1==RULE_STRING) ) {
                    int LA140_5 = input.LA(3);

                    if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                        alt140=1;
                    }
                }
                else if ( (LA140_1==RULE_ID) ) {
                    int LA140_6 = input.LA(3);

                    if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                        alt140=1;
                    }
                }
            }
            else if ( LA140_0 == 94 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1) ) {
                alt140=1;
            }
            else if ( LA140_0 == 95 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2) ) {
                alt140=1;
            }
            switch (alt140) {
                case 1 :
                    // InternalDockerCompose.g:13039:2: rule__IPAM__UnorderedGroup_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAM__UnorderedGroup_1__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getIPAMAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__UnorderedGroup_1"


    // $ANTLR start "rule__IPAM__UnorderedGroup_1__Impl"
    // InternalDockerCompose.g:13047:1: rule__IPAM__UnorderedGroup_1__Impl : ( ({...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) ) ) ) ;
    public final void rule__IPAM__UnorderedGroup_1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:13052:1: ( ( ({...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) ) ) ) )
            // InternalDockerCompose.g:13053:3: ( ({...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:13053:3: ( ({...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) ) ) )
            int alt141=3;
            int LA141_0 = input.LA(1);

            if ( LA141_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                alt141=1;
            }
            else if ( LA141_0 == 94 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1) ) {
                alt141=2;
            }
            else if ( LA141_0 == 95 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2) ) {
                alt141=3;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 141, 0, input);

                throw nvae;
            }
            switch (alt141) {
                case 1 :
                    // InternalDockerCompose.g:13054:3: ({...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:13054:3: ({...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) ) )
                    // InternalDockerCompose.g:13055:4: {...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                        throw new FailedPredicateException(input, "rule__IPAM__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0)");
                    }
                    // InternalDockerCompose.g:13055:100: ( ( ( rule__IPAM__Group_1_0__0 ) ) )
                    // InternalDockerCompose.g:13056:5: ( ( rule__IPAM__Group_1_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:13062:5: ( ( rule__IPAM__Group_1_0__0 ) )
                    // InternalDockerCompose.g:13063:6: ( rule__IPAM__Group_1_0__0 )
                    {
                     before(grammarAccess.getIPAMAccess().getGroup_1_0()); 
                    // InternalDockerCompose.g:13064:6: ( rule__IPAM__Group_1_0__0 )
                    // InternalDockerCompose.g:13064:7: rule__IPAM__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAM__Group_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMAccess().getGroup_1_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:13069:3: ({...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:13069:3: ({...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) ) )
                    // InternalDockerCompose.g:13070:4: {...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1) ) {
                        throw new FailedPredicateException(input, "rule__IPAM__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1)");
                    }
                    // InternalDockerCompose.g:13070:100: ( ( ( rule__IPAM__Group_1_1__0 ) ) )
                    // InternalDockerCompose.g:13071:5: ( ( rule__IPAM__Group_1_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:13077:5: ( ( rule__IPAM__Group_1_1__0 ) )
                    // InternalDockerCompose.g:13078:6: ( rule__IPAM__Group_1_1__0 )
                    {
                     before(grammarAccess.getIPAMAccess().getGroup_1_1()); 
                    // InternalDockerCompose.g:13079:6: ( rule__IPAM__Group_1_1__0 )
                    // InternalDockerCompose.g:13079:7: rule__IPAM__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAM__Group_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMAccess().getGroup_1_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:13084:3: ({...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:13084:3: ({...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) ) )
                    // InternalDockerCompose.g:13085:4: {...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2) ) {
                        throw new FailedPredicateException(input, "rule__IPAM__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2)");
                    }
                    // InternalDockerCompose.g:13085:100: ( ( ( rule__IPAM__Group_1_2__0 ) ) )
                    // InternalDockerCompose.g:13086:5: ( ( rule__IPAM__Group_1_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:13092:5: ( ( rule__IPAM__Group_1_2__0 ) )
                    // InternalDockerCompose.g:13093:6: ( rule__IPAM__Group_1_2__0 )
                    {
                     before(grammarAccess.getIPAMAccess().getGroup_1_2()); 
                    // InternalDockerCompose.g:13094:6: ( rule__IPAM__Group_1_2__0 )
                    // InternalDockerCompose.g:13094:7: rule__IPAM__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAM__Group_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMAccess().getGroup_1_2()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIPAMAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__UnorderedGroup_1__Impl"


    // $ANTLR start "rule__IPAM__UnorderedGroup_1__0"
    // InternalDockerCompose.g:13107:1: rule__IPAM__UnorderedGroup_1__0 : rule__IPAM__UnorderedGroup_1__Impl ( rule__IPAM__UnorderedGroup_1__1 )? ;
    public final void rule__IPAM__UnorderedGroup_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13111:1: ( rule__IPAM__UnorderedGroup_1__Impl ( rule__IPAM__UnorderedGroup_1__1 )? )
            // InternalDockerCompose.g:13112:2: rule__IPAM__UnorderedGroup_1__Impl ( rule__IPAM__UnorderedGroup_1__1 )?
            {
            pushFollow(FOLLOW_60);
            rule__IPAM__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:13113:2: ( rule__IPAM__UnorderedGroup_1__1 )?
            int alt142=2;
            int LA142_0 = input.LA(1);

            if ( (LA142_0==84) ) {
                int LA142_1 = input.LA(2);

                if ( (LA142_1==RULE_STRING) ) {
                    int LA142_5 = input.LA(3);

                    if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                        alt142=1;
                    }
                }
                else if ( (LA142_1==RULE_ID) ) {
                    int LA142_6 = input.LA(3);

                    if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                        alt142=1;
                    }
                }
            }
            else if ( LA142_0 == 94 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1) ) {
                alt142=1;
            }
            else if ( LA142_0 == 95 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2) ) {
                alt142=1;
            }
            switch (alt142) {
                case 1 :
                    // InternalDockerCompose.g:13113:2: rule__IPAM__UnorderedGroup_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAM__UnorderedGroup_1__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__UnorderedGroup_1__0"


    // $ANTLR start "rule__IPAM__UnorderedGroup_1__1"
    // InternalDockerCompose.g:13119:1: rule__IPAM__UnorderedGroup_1__1 : rule__IPAM__UnorderedGroup_1__Impl ( rule__IPAM__UnorderedGroup_1__2 )? ;
    public final void rule__IPAM__UnorderedGroup_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13123:1: ( rule__IPAM__UnorderedGroup_1__Impl ( rule__IPAM__UnorderedGroup_1__2 )? )
            // InternalDockerCompose.g:13124:2: rule__IPAM__UnorderedGroup_1__Impl ( rule__IPAM__UnorderedGroup_1__2 )?
            {
            pushFollow(FOLLOW_60);
            rule__IPAM__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:13125:2: ( rule__IPAM__UnorderedGroup_1__2 )?
            int alt143=2;
            int LA143_0 = input.LA(1);

            if ( (LA143_0==84) ) {
                int LA143_1 = input.LA(2);

                if ( (LA143_1==RULE_STRING) ) {
                    int LA143_5 = input.LA(3);

                    if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                        alt143=1;
                    }
                }
                else if ( (LA143_1==RULE_ID) ) {
                    int LA143_6 = input.LA(3);

                    if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                        alt143=1;
                    }
                }
            }
            else if ( LA143_0 == 94 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1) ) {
                alt143=1;
            }
            else if ( LA143_0 == 95 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2) ) {
                alt143=1;
            }
            switch (alt143) {
                case 1 :
                    // InternalDockerCompose.g:13125:2: rule__IPAM__UnorderedGroup_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAM__UnorderedGroup_1__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__UnorderedGroup_1__1"


    // $ANTLR start "rule__IPAM__UnorderedGroup_1__2"
    // InternalDockerCompose.g:13131:1: rule__IPAM__UnorderedGroup_1__2 : rule__IPAM__UnorderedGroup_1__Impl ;
    public final void rule__IPAM__UnorderedGroup_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13135:1: ( rule__IPAM__UnorderedGroup_1__Impl )
            // InternalDockerCompose.g:13136:2: rule__IPAM__UnorderedGroup_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__UnorderedGroup_1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__UnorderedGroup_1__2"


    // $ANTLR start "rule__IPAMConfig__UnorderedGroup_1"
    // InternalDockerCompose.g:13143:1: rule__IPAMConfig__UnorderedGroup_1 : ( rule__IPAMConfig__UnorderedGroup_1__0 )? ;
    public final void rule__IPAMConfig__UnorderedGroup_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1());
        	
        try {
            // InternalDockerCompose.g:13148:1: ( ( rule__IPAMConfig__UnorderedGroup_1__0 )? )
            // InternalDockerCompose.g:13149:2: ( rule__IPAMConfig__UnorderedGroup_1__0 )?
            {
            // InternalDockerCompose.g:13149:2: ( rule__IPAMConfig__UnorderedGroup_1__0 )?
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( LA144_0 == 96 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0) ) {
                alt144=1;
            }
            else if ( LA144_0 == 97 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1) ) {
                alt144=1;
            }
            else if ( LA144_0 == 98 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2) ) {
                alt144=1;
            }
            else if ( LA144_0 == 99 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3) ) {
                alt144=1;
            }
            switch (alt144) {
                case 1 :
                    // InternalDockerCompose.g:13149:2: rule__IPAMConfig__UnorderedGroup_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__UnorderedGroup_1__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__UnorderedGroup_1"


    // $ANTLR start "rule__IPAMConfig__UnorderedGroup_1__Impl"
    // InternalDockerCompose.g:13157:1: rule__IPAMConfig__UnorderedGroup_1__Impl : ( ({...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) ) ) ) ;
    public final void rule__IPAMConfig__UnorderedGroup_1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:13162:1: ( ( ({...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) ) ) ) )
            // InternalDockerCompose.g:13163:3: ( ({...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:13163:3: ( ({...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) ) ) )
            int alt145=4;
            int LA145_0 = input.LA(1);

            if ( LA145_0 == 96 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0) ) {
                alt145=1;
            }
            else if ( LA145_0 == 97 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1) ) {
                alt145=2;
            }
            else if ( LA145_0 == 98 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2) ) {
                alt145=3;
            }
            else if ( LA145_0 == 99 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3) ) {
                alt145=4;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 145, 0, input);

                throw nvae;
            }
            switch (alt145) {
                case 1 :
                    // InternalDockerCompose.g:13164:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:13164:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) ) )
                    // InternalDockerCompose.g:13165:4: {...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0) ) {
                        throw new FailedPredicateException(input, "rule__IPAMConfig__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0)");
                    }
                    // InternalDockerCompose.g:13165:106: ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) )
                    // InternalDockerCompose.g:13166:5: ( ( rule__IPAMConfig__Group_1_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:13172:5: ( ( rule__IPAMConfig__Group_1_0__0 ) )
                    // InternalDockerCompose.g:13173:6: ( rule__IPAMConfig__Group_1_0__0 )
                    {
                     before(grammarAccess.getIPAMConfigAccess().getGroup_1_0()); 
                    // InternalDockerCompose.g:13174:6: ( rule__IPAMConfig__Group_1_0__0 )
                    // InternalDockerCompose.g:13174:7: rule__IPAMConfig__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__Group_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMConfigAccess().getGroup_1_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:13179:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:13179:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) ) )
                    // InternalDockerCompose.g:13180:4: {...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1) ) {
                        throw new FailedPredicateException(input, "rule__IPAMConfig__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1)");
                    }
                    // InternalDockerCompose.g:13180:106: ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) )
                    // InternalDockerCompose.g:13181:5: ( ( rule__IPAMConfig__Group_1_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:13187:5: ( ( rule__IPAMConfig__Group_1_1__0 ) )
                    // InternalDockerCompose.g:13188:6: ( rule__IPAMConfig__Group_1_1__0 )
                    {
                     before(grammarAccess.getIPAMConfigAccess().getGroup_1_1()); 
                    // InternalDockerCompose.g:13189:6: ( rule__IPAMConfig__Group_1_1__0 )
                    // InternalDockerCompose.g:13189:7: rule__IPAMConfig__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__Group_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMConfigAccess().getGroup_1_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:13194:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:13194:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) ) )
                    // InternalDockerCompose.g:13195:4: {...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2) ) {
                        throw new FailedPredicateException(input, "rule__IPAMConfig__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2)");
                    }
                    // InternalDockerCompose.g:13195:106: ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) )
                    // InternalDockerCompose.g:13196:5: ( ( rule__IPAMConfig__Group_1_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:13202:5: ( ( rule__IPAMConfig__Group_1_2__0 ) )
                    // InternalDockerCompose.g:13203:6: ( rule__IPAMConfig__Group_1_2__0 )
                    {
                     before(grammarAccess.getIPAMConfigAccess().getGroup_1_2()); 
                    // InternalDockerCompose.g:13204:6: ( rule__IPAMConfig__Group_1_2__0 )
                    // InternalDockerCompose.g:13204:7: rule__IPAMConfig__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__Group_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMConfigAccess().getGroup_1_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:13209:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:13209:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) ) )
                    // InternalDockerCompose.g:13210:4: {...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3) ) {
                        throw new FailedPredicateException(input, "rule__IPAMConfig__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3)");
                    }
                    // InternalDockerCompose.g:13210:106: ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) )
                    // InternalDockerCompose.g:13211:5: ( ( rule__IPAMConfig__Group_1_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:13217:5: ( ( rule__IPAMConfig__Group_1_3__0 ) )
                    // InternalDockerCompose.g:13218:6: ( rule__IPAMConfig__Group_1_3__0 )
                    {
                     before(grammarAccess.getIPAMConfigAccess().getGroup_1_3()); 
                    // InternalDockerCompose.g:13219:6: ( rule__IPAMConfig__Group_1_3__0 )
                    // InternalDockerCompose.g:13219:7: rule__IPAMConfig__Group_1_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__Group_1_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMConfigAccess().getGroup_1_3()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__UnorderedGroup_1__Impl"


    // $ANTLR start "rule__IPAMConfig__UnorderedGroup_1__0"
    // InternalDockerCompose.g:13232:1: rule__IPAMConfig__UnorderedGroup_1__0 : rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__1 )? ;
    public final void rule__IPAMConfig__UnorderedGroup_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13236:1: ( rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__1 )? )
            // InternalDockerCompose.g:13237:2: rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__1 )?
            {
            pushFollow(FOLLOW_61);
            rule__IPAMConfig__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:13238:2: ( rule__IPAMConfig__UnorderedGroup_1__1 )?
            int alt146=2;
            int LA146_0 = input.LA(1);

            if ( LA146_0 == 96 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0) ) {
                alt146=1;
            }
            else if ( LA146_0 == 97 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1) ) {
                alt146=1;
            }
            else if ( LA146_0 == 98 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2) ) {
                alt146=1;
            }
            else if ( LA146_0 == 99 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3) ) {
                alt146=1;
            }
            switch (alt146) {
                case 1 :
                    // InternalDockerCompose.g:13238:2: rule__IPAMConfig__UnorderedGroup_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__UnorderedGroup_1__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__UnorderedGroup_1__0"


    // $ANTLR start "rule__IPAMConfig__UnorderedGroup_1__1"
    // InternalDockerCompose.g:13244:1: rule__IPAMConfig__UnorderedGroup_1__1 : rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__2 )? ;
    public final void rule__IPAMConfig__UnorderedGroup_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13248:1: ( rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__2 )? )
            // InternalDockerCompose.g:13249:2: rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__2 )?
            {
            pushFollow(FOLLOW_61);
            rule__IPAMConfig__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:13250:2: ( rule__IPAMConfig__UnorderedGroup_1__2 )?
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( LA147_0 == 96 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0) ) {
                alt147=1;
            }
            else if ( LA147_0 == 97 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1) ) {
                alt147=1;
            }
            else if ( LA147_0 == 98 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2) ) {
                alt147=1;
            }
            else if ( LA147_0 == 99 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3) ) {
                alt147=1;
            }
            switch (alt147) {
                case 1 :
                    // InternalDockerCompose.g:13250:2: rule__IPAMConfig__UnorderedGroup_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__UnorderedGroup_1__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__UnorderedGroup_1__1"


    // $ANTLR start "rule__IPAMConfig__UnorderedGroup_1__2"
    // InternalDockerCompose.g:13256:1: rule__IPAMConfig__UnorderedGroup_1__2 : rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__3 )? ;
    public final void rule__IPAMConfig__UnorderedGroup_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13260:1: ( rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__3 )? )
            // InternalDockerCompose.g:13261:2: rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__3 )?
            {
            pushFollow(FOLLOW_61);
            rule__IPAMConfig__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:13262:2: ( rule__IPAMConfig__UnorderedGroup_1__3 )?
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( LA148_0 == 96 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0) ) {
                alt148=1;
            }
            else if ( LA148_0 == 97 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1) ) {
                alt148=1;
            }
            else if ( LA148_0 == 98 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2) ) {
                alt148=1;
            }
            else if ( LA148_0 == 99 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3) ) {
                alt148=1;
            }
            switch (alt148) {
                case 1 :
                    // InternalDockerCompose.g:13262:2: rule__IPAMConfig__UnorderedGroup_1__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__UnorderedGroup_1__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__UnorderedGroup_1__2"


    // $ANTLR start "rule__IPAMConfig__UnorderedGroup_1__3"
    // InternalDockerCompose.g:13268:1: rule__IPAMConfig__UnorderedGroup_1__3 : rule__IPAMConfig__UnorderedGroup_1__Impl ;
    public final void rule__IPAMConfig__UnorderedGroup_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13272:1: ( rule__IPAMConfig__UnorderedGroup_1__Impl )
            // InternalDockerCompose.g:13273:2: rule__IPAMConfig__UnorderedGroup_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__UnorderedGroup_1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__UnorderedGroup_1__3"


    // $ANTLR start "rule__DockerCompose__VersionAssignment_0_1"
    // InternalDockerCompose.g:13280:1: rule__DockerCompose__VersionAssignment_0_1 : ( RULE_VERSION ) ;
    public final void rule__DockerCompose__VersionAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13284:1: ( ( RULE_VERSION ) )
            // InternalDockerCompose.g:13285:2: ( RULE_VERSION )
            {
            // InternalDockerCompose.g:13285:2: ( RULE_VERSION )
            // InternalDockerCompose.g:13286:3: RULE_VERSION
            {
             before(grammarAccess.getDockerComposeAccess().getVersionVERSIONTerminalRuleCall_0_1_0()); 
            match(input,RULE_VERSION,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getVersionVERSIONTerminalRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__VersionAssignment_0_1"


    // $ANTLR start "rule__DockerCompose__ServicesAssignment_1_1"
    // InternalDockerCompose.g:13295:1: rule__DockerCompose__ServicesAssignment_1_1 : ( ruleService ) ;
    public final void rule__DockerCompose__ServicesAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13299:1: ( ( ruleService ) )
            // InternalDockerCompose.g:13300:2: ( ruleService )
            {
            // InternalDockerCompose.g:13300:2: ( ruleService )
            // InternalDockerCompose.g:13301:3: ruleService
            {
             before(grammarAccess.getDockerComposeAccess().getServicesServiceParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleService();

            state._fsp--;

             after(grammarAccess.getDockerComposeAccess().getServicesServiceParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__ServicesAssignment_1_1"


    // $ANTLR start "rule__DockerCompose__VolumesAssignment_2_1"
    // InternalDockerCompose.g:13310:1: rule__DockerCompose__VolumesAssignment_2_1 : ( ruleVolume ) ;
    public final void rule__DockerCompose__VolumesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13314:1: ( ( ruleVolume ) )
            // InternalDockerCompose.g:13315:2: ( ruleVolume )
            {
            // InternalDockerCompose.g:13315:2: ( ruleVolume )
            // InternalDockerCompose.g:13316:3: ruleVolume
            {
             before(grammarAccess.getDockerComposeAccess().getVolumesVolumeParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleVolume();

            state._fsp--;

             after(grammarAccess.getDockerComposeAccess().getVolumesVolumeParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__VolumesAssignment_2_1"


    // $ANTLR start "rule__DockerCompose__ConfigsAssignment_3_1"
    // InternalDockerCompose.g:13325:1: rule__DockerCompose__ConfigsAssignment_3_1 : ( ruleConfig ) ;
    public final void rule__DockerCompose__ConfigsAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13329:1: ( ( ruleConfig ) )
            // InternalDockerCompose.g:13330:2: ( ruleConfig )
            {
            // InternalDockerCompose.g:13330:2: ( ruleConfig )
            // InternalDockerCompose.g:13331:3: ruleConfig
            {
             before(grammarAccess.getDockerComposeAccess().getConfigsConfigParserRuleCall_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleConfig();

            state._fsp--;

             after(grammarAccess.getDockerComposeAccess().getConfigsConfigParserRuleCall_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__ConfigsAssignment_3_1"


    // $ANTLR start "rule__DockerCompose__SecretsAssignment_4_1"
    // InternalDockerCompose.g:13340:1: rule__DockerCompose__SecretsAssignment_4_1 : ( ruleSecret ) ;
    public final void rule__DockerCompose__SecretsAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13344:1: ( ( ruleSecret ) )
            // InternalDockerCompose.g:13345:2: ( ruleSecret )
            {
            // InternalDockerCompose.g:13345:2: ( ruleSecret )
            // InternalDockerCompose.g:13346:3: ruleSecret
            {
             before(grammarAccess.getDockerComposeAccess().getSecretsSecretParserRuleCall_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSecret();

            state._fsp--;

             after(grammarAccess.getDockerComposeAccess().getSecretsSecretParserRuleCall_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__SecretsAssignment_4_1"


    // $ANTLR start "rule__DockerCompose__NetworksAssignment_5_1"
    // InternalDockerCompose.g:13355:1: rule__DockerCompose__NetworksAssignment_5_1 : ( ruleNetwork ) ;
    public final void rule__DockerCompose__NetworksAssignment_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13359:1: ( ( ruleNetwork ) )
            // InternalDockerCompose.g:13360:2: ( ruleNetwork )
            {
            // InternalDockerCompose.g:13360:2: ( ruleNetwork )
            // InternalDockerCompose.g:13361:3: ruleNetwork
            {
             before(grammarAccess.getDockerComposeAccess().getNetworksNetworkParserRuleCall_5_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNetwork();

            state._fsp--;

             after(grammarAccess.getDockerComposeAccess().getNetworksNetworkParserRuleCall_5_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__NetworksAssignment_5_1"


    // $ANTLR start "rule__Service__NameAssignment_1"
    // InternalDockerCompose.g:13370:1: rule__Service__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__Service__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13374:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:13375:2: ( ruleEString )
            {
            // InternalDockerCompose.g:13375:2: ( ruleEString )
            // InternalDockerCompose.g:13376:3: ruleEString
            {
             before(grammarAccess.getServiceAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__NameAssignment_1"


    // $ANTLR start "rule__Service__BuildAssignment_3_0_0_1"
    // InternalDockerCompose.g:13385:1: rule__Service__BuildAssignment_3_0_0_1 : ( rulePATH ) ;
    public final void rule__Service__BuildAssignment_3_0_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13389:1: ( ( rulePATH ) )
            // InternalDockerCompose.g:13390:2: ( rulePATH )
            {
            // InternalDockerCompose.g:13390:2: ( rulePATH )
            // InternalDockerCompose.g:13391:3: rulePATH
            {
             before(grammarAccess.getServiceAccess().getBuildPATHParserRuleCall_3_0_0_1_0()); 
            pushFollow(FOLLOW_2);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getBuildPATHParserRuleCall_3_0_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__BuildAssignment_3_0_0_1"


    // $ANTLR start "rule__Service__ImageAssignment_3_0_1_1"
    // InternalDockerCompose.g:13400:1: rule__Service__ImageAssignment_3_0_1_1 : ( ruleImage ) ;
    public final void rule__Service__ImageAssignment_3_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13404:1: ( ( ruleImage ) )
            // InternalDockerCompose.g:13405:2: ( ruleImage )
            {
            // InternalDockerCompose.g:13405:2: ( ruleImage )
            // InternalDockerCompose.g:13406:3: ruleImage
            {
             before(grammarAccess.getServiceAccess().getImageImageParserRuleCall_3_0_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleImage();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getImageImageParserRuleCall_3_0_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__ImageAssignment_3_0_1_1"


    // $ANTLR start "rule__Service__Cpu_countAssignment_3_1_1"
    // InternalDockerCompose.g:13415:1: rule__Service__Cpu_countAssignment_3_1_1 : ( ruleEInt ) ;
    public final void rule__Service__Cpu_countAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13419:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:13420:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:13420:2: ( ruleEInt )
            // InternalDockerCompose.g:13421:3: ruleEInt
            {
             before(grammarAccess.getServiceAccess().getCpu_countEIntParserRuleCall_3_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getCpu_countEIntParserRuleCall_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Cpu_countAssignment_3_1_1"


    // $ANTLR start "rule__Service__CommandAssignment_3_2_1"
    // InternalDockerCompose.g:13430:1: rule__Service__CommandAssignment_3_2_1 : ( RULE_ID ) ;
    public final void rule__Service__CommandAssignment_3_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13434:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:13435:2: ( RULE_ID )
            {
            // InternalDockerCompose.g:13435:2: ( RULE_ID )
            // InternalDockerCompose.g:13436:3: RULE_ID
            {
             before(grammarAccess.getServiceAccess().getCommandIDTerminalRuleCall_3_2_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getCommandIDTerminalRuleCall_3_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__CommandAssignment_3_2_1"


    // $ANTLR start "rule__Service__Container_nameAssignment_3_3_1"
    // InternalDockerCompose.g:13445:1: rule__Service__Container_nameAssignment_3_3_1 : ( ruleEString ) ;
    public final void rule__Service__Container_nameAssignment_3_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13449:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:13450:2: ( ruleEString )
            {
            // InternalDockerCompose.g:13450:2: ( ruleEString )
            // InternalDockerCompose.g:13451:3: ruleEString
            {
             before(grammarAccess.getServiceAccess().getContainer_nameEStringParserRuleCall_3_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getContainer_nameEStringParserRuleCall_3_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Container_nameAssignment_3_3_1"


    // $ANTLR start "rule__Service__RestartAssignment_3_4_1"
    // InternalDockerCompose.g:13460:1: rule__Service__RestartAssignment_3_4_1 : ( ruleRestartPolicy ) ;
    public final void rule__Service__RestartAssignment_3_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13464:1: ( ( ruleRestartPolicy ) )
            // InternalDockerCompose.g:13465:2: ( ruleRestartPolicy )
            {
            // InternalDockerCompose.g:13465:2: ( ruleRestartPolicy )
            // InternalDockerCompose.g:13466:3: ruleRestartPolicy
            {
             before(grammarAccess.getServiceAccess().getRestartRestartPolicyEnumRuleCall_3_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleRestartPolicy();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getRestartRestartPolicyEnumRuleCall_3_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__RestartAssignment_3_4_1"


    // $ANTLR start "rule__Service__InitAssignment_3_5_1"
    // InternalDockerCompose.g:13475:1: rule__Service__InitAssignment_3_5_1 : ( ruleEBoolean ) ;
    public final void rule__Service__InitAssignment_3_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13479:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:13480:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:13480:2: ( ruleEBoolean )
            // InternalDockerCompose.g:13481:3: ruleEBoolean
            {
             before(grammarAccess.getServiceAccess().getInitEBooleanParserRuleCall_3_5_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getInitEBooleanParserRuleCall_3_5_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__InitAssignment_3_5_1"


    // $ANTLR start "rule__Service__Read_onlyAssignment_3_6_1"
    // InternalDockerCompose.g:13490:1: rule__Service__Read_onlyAssignment_3_6_1 : ( ruleEBoolean ) ;
    public final void rule__Service__Read_onlyAssignment_3_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13494:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:13495:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:13495:2: ( ruleEBoolean )
            // InternalDockerCompose.g:13496:3: ruleEBoolean
            {
             before(grammarAccess.getServiceAccess().getRead_onlyEBooleanParserRuleCall_3_6_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getRead_onlyEBooleanParserRuleCall_3_6_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Read_onlyAssignment_3_6_1"


    // $ANTLR start "rule__Service__LinksAssignment_3_7_1_1"
    // InternalDockerCompose.g:13505:1: rule__Service__LinksAssignment_3_7_1_1 : ( ruleLink ) ;
    public final void rule__Service__LinksAssignment_3_7_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13509:1: ( ( ruleLink ) )
            // InternalDockerCompose.g:13510:2: ( ruleLink )
            {
            // InternalDockerCompose.g:13510:2: ( ruleLink )
            // InternalDockerCompose.g:13511:3: ruleLink
            {
             before(grammarAccess.getServiceAccess().getLinksLinkParserRuleCall_3_7_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleLink();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getLinksLinkParserRuleCall_3_7_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__LinksAssignment_3_7_1_1"


    // $ANTLR start "rule__Service__Depends_onAssignment_3_8_1_0"
    // InternalDockerCompose.g:13520:1: rule__Service__Depends_onAssignment_3_8_1_0 : ( ruleDependency_short ) ;
    public final void rule__Service__Depends_onAssignment_3_8_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13524:1: ( ( ruleDependency_short ) )
            // InternalDockerCompose.g:13525:2: ( ruleDependency_short )
            {
            // InternalDockerCompose.g:13525:2: ( ruleDependency_short )
            // InternalDockerCompose.g:13526:3: ruleDependency_short
            {
             before(grammarAccess.getServiceAccess().getDepends_onDependency_shortParserRuleCall_3_8_1_0_0()); 
            pushFollow(FOLLOW_2);
            ruleDependency_short();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getDepends_onDependency_shortParserRuleCall_3_8_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Depends_onAssignment_3_8_1_0"


    // $ANTLR start "rule__Service__Depends_onAssignment_3_8_1_1"
    // InternalDockerCompose.g:13535:1: rule__Service__Depends_onAssignment_3_8_1_1 : ( ruleDependency_long ) ;
    public final void rule__Service__Depends_onAssignment_3_8_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13539:1: ( ( ruleDependency_long ) )
            // InternalDockerCompose.g:13540:2: ( ruleDependency_long )
            {
            // InternalDockerCompose.g:13540:2: ( ruleDependency_long )
            // InternalDockerCompose.g:13541:3: ruleDependency_long
            {
             before(grammarAccess.getServiceAccess().getDepends_onDependency_longParserRuleCall_3_8_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDependency_long();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getDepends_onDependency_longParserRuleCall_3_8_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Depends_onAssignment_3_8_1_1"


    // $ANTLR start "rule__Service__NetworksAssignment_3_9_1"
    // InternalDockerCompose.g:13550:1: rule__Service__NetworksAssignment_3_9_1 : ( ruleNetworkConnector ) ;
    public final void rule__Service__NetworksAssignment_3_9_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13554:1: ( ( ruleNetworkConnector ) )
            // InternalDockerCompose.g:13555:2: ( ruleNetworkConnector )
            {
            // InternalDockerCompose.g:13555:2: ( ruleNetworkConnector )
            // InternalDockerCompose.g:13556:3: ruleNetworkConnector
            {
             before(grammarAccess.getServiceAccess().getNetworksNetworkConnectorParserRuleCall_3_9_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNetworkConnector();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getNetworksNetworkConnectorParserRuleCall_3_9_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__NetworksAssignment_3_9_1"


    // $ANTLR start "rule__Service__VolumesAssignment_3_10_1_0_1"
    // InternalDockerCompose.g:13565:1: rule__Service__VolumesAssignment_3_10_1_0_1 : ( ruleVolumeConnector_short ) ;
    public final void rule__Service__VolumesAssignment_3_10_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13569:1: ( ( ruleVolumeConnector_short ) )
            // InternalDockerCompose.g:13570:2: ( ruleVolumeConnector_short )
            {
            // InternalDockerCompose.g:13570:2: ( ruleVolumeConnector_short )
            // InternalDockerCompose.g:13571:3: ruleVolumeConnector_short
            {
             before(grammarAccess.getServiceAccess().getVolumesVolumeConnector_shortParserRuleCall_3_10_1_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleVolumeConnector_short();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getVolumesVolumeConnector_shortParserRuleCall_3_10_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__VolumesAssignment_3_10_1_0_1"


    // $ANTLR start "rule__Service__VolumesAssignment_3_10_1_1_1"
    // InternalDockerCompose.g:13580:1: rule__Service__VolumesAssignment_3_10_1_1_1 : ( ruleVolumeConnector_long ) ;
    public final void rule__Service__VolumesAssignment_3_10_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13584:1: ( ( ruleVolumeConnector_long ) )
            // InternalDockerCompose.g:13585:2: ( ruleVolumeConnector_long )
            {
            // InternalDockerCompose.g:13585:2: ( ruleVolumeConnector_long )
            // InternalDockerCompose.g:13586:3: ruleVolumeConnector_long
            {
             before(grammarAccess.getServiceAccess().getVolumesVolumeConnector_longParserRuleCall_3_10_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleVolumeConnector_long();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getVolumesVolumeConnector_longParserRuleCall_3_10_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__VolumesAssignment_3_10_1_1_1"


    // $ANTLR start "rule__Service__ConfigsAssignment_3_11_1_0_1"
    // InternalDockerCompose.g:13595:1: rule__Service__ConfigsAssignment_3_11_1_0_1 : ( ruleConfigConnector_short ) ;
    public final void rule__Service__ConfigsAssignment_3_11_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13599:1: ( ( ruleConfigConnector_short ) )
            // InternalDockerCompose.g:13600:2: ( ruleConfigConnector_short )
            {
            // InternalDockerCompose.g:13600:2: ( ruleConfigConnector_short )
            // InternalDockerCompose.g:13601:3: ruleConfigConnector_short
            {
             before(grammarAccess.getServiceAccess().getConfigsConfigConnector_shortParserRuleCall_3_11_1_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleConfigConnector_short();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getConfigsConfigConnector_shortParserRuleCall_3_11_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__ConfigsAssignment_3_11_1_0_1"


    // $ANTLR start "rule__Service__ConfigsAssignment_3_11_1_1_1"
    // InternalDockerCompose.g:13610:1: rule__Service__ConfigsAssignment_3_11_1_1_1 : ( ruleConfigConnector_long ) ;
    public final void rule__Service__ConfigsAssignment_3_11_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13614:1: ( ( ruleConfigConnector_long ) )
            // InternalDockerCompose.g:13615:2: ( ruleConfigConnector_long )
            {
            // InternalDockerCompose.g:13615:2: ( ruleConfigConnector_long )
            // InternalDockerCompose.g:13616:3: ruleConfigConnector_long
            {
             before(grammarAccess.getServiceAccess().getConfigsConfigConnector_longParserRuleCall_3_11_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleConfigConnector_long();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getConfigsConfigConnector_longParserRuleCall_3_11_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__ConfigsAssignment_3_11_1_1_1"


    // $ANTLR start "rule__Service__SecretsAssignment_3_12_1_0_1"
    // InternalDockerCompose.g:13625:1: rule__Service__SecretsAssignment_3_12_1_0_1 : ( ruleSecretConnector_short ) ;
    public final void rule__Service__SecretsAssignment_3_12_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13629:1: ( ( ruleSecretConnector_short ) )
            // InternalDockerCompose.g:13630:2: ( ruleSecretConnector_short )
            {
            // InternalDockerCompose.g:13630:2: ( ruleSecretConnector_short )
            // InternalDockerCompose.g:13631:3: ruleSecretConnector_short
            {
             before(grammarAccess.getServiceAccess().getSecretsSecretConnector_shortParserRuleCall_3_12_1_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSecretConnector_short();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getSecretsSecretConnector_shortParserRuleCall_3_12_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__SecretsAssignment_3_12_1_0_1"


    // $ANTLR start "rule__Service__SecretsAssignment_3_12_1_1_1"
    // InternalDockerCompose.g:13640:1: rule__Service__SecretsAssignment_3_12_1_1_1 : ( ruleSecretConnector_long ) ;
    public final void rule__Service__SecretsAssignment_3_12_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13644:1: ( ( ruleSecretConnector_long ) )
            // InternalDockerCompose.g:13645:2: ( ruleSecretConnector_long )
            {
            // InternalDockerCompose.g:13645:2: ( ruleSecretConnector_long )
            // InternalDockerCompose.g:13646:3: ruleSecretConnector_long
            {
             before(grammarAccess.getServiceAccess().getSecretsSecretConnector_longParserRuleCall_3_12_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSecretConnector_long();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getSecretsSecretConnector_longParserRuleCall_3_12_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__SecretsAssignment_3_12_1_1_1"


    // $ANTLR start "rule__Service__EnvironmentAssignment_3_13_1_0"
    // InternalDockerCompose.g:13655:1: rule__Service__EnvironmentAssignment_3_13_1_0 : ( ruleEnvironmentVariableMap ) ;
    public final void rule__Service__EnvironmentAssignment_3_13_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13659:1: ( ( ruleEnvironmentVariableMap ) )
            // InternalDockerCompose.g:13660:2: ( ruleEnvironmentVariableMap )
            {
            // InternalDockerCompose.g:13660:2: ( ruleEnvironmentVariableMap )
            // InternalDockerCompose.g:13661:3: ruleEnvironmentVariableMap
            {
             before(grammarAccess.getServiceAccess().getEnvironmentEnvironmentVariableMapParserRuleCall_3_13_1_0_0()); 
            pushFollow(FOLLOW_2);
            ruleEnvironmentVariableMap();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getEnvironmentEnvironmentVariableMapParserRuleCall_3_13_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__EnvironmentAssignment_3_13_1_0"


    // $ANTLR start "rule__Service__EnvironmentAssignment_3_13_1_1"
    // InternalDockerCompose.g:13670:1: rule__Service__EnvironmentAssignment_3_13_1_1 : ( ruleEnvironmentVariableList ) ;
    public final void rule__Service__EnvironmentAssignment_3_13_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13674:1: ( ( ruleEnvironmentVariableList ) )
            // InternalDockerCompose.g:13675:2: ( ruleEnvironmentVariableList )
            {
            // InternalDockerCompose.g:13675:2: ( ruleEnvironmentVariableList )
            // InternalDockerCompose.g:13676:3: ruleEnvironmentVariableList
            {
             before(grammarAccess.getServiceAccess().getEnvironmentEnvironmentVariableListParserRuleCall_3_13_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEnvironmentVariableList();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getEnvironmentEnvironmentVariableListParserRuleCall_3_13_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__EnvironmentAssignment_3_13_1_1"


    // $ANTLR start "rule__Service__DevicesAssignment_3_14_1_1"
    // InternalDockerCompose.g:13685:1: rule__Service__DevicesAssignment_3_14_1_1 : ( ruleDevice ) ;
    public final void rule__Service__DevicesAssignment_3_14_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13689:1: ( ( ruleDevice ) )
            // InternalDockerCompose.g:13690:2: ( ruleDevice )
            {
            // InternalDockerCompose.g:13690:2: ( ruleDevice )
            // InternalDockerCompose.g:13691:3: ruleDevice
            {
             before(grammarAccess.getServiceAccess().getDevicesDeviceParserRuleCall_3_14_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDevice();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getDevicesDeviceParserRuleCall_3_14_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__DevicesAssignment_3_14_1_1"


    // $ANTLR start "rule__Service__DnsAssignment_3_15_1_0_1"
    // InternalDockerCompose.g:13700:1: rule__Service__DnsAssignment_3_15_1_0_1 : ( ruleDNS ) ;
    public final void rule__Service__DnsAssignment_3_15_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13704:1: ( ( ruleDNS ) )
            // InternalDockerCompose.g:13705:2: ( ruleDNS )
            {
            // InternalDockerCompose.g:13705:2: ( ruleDNS )
            // InternalDockerCompose.g:13706:3: ruleDNS
            {
             before(grammarAccess.getServiceAccess().getDnsDNSParserRuleCall_3_15_1_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getDnsDNSParserRuleCall_3_15_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__DnsAssignment_3_15_1_0_1"


    // $ANTLR start "rule__Service__DnsAssignment_3_15_1_1"
    // InternalDockerCompose.g:13715:1: rule__Service__DnsAssignment_3_15_1_1 : ( ruleDNS ) ;
    public final void rule__Service__DnsAssignment_3_15_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13719:1: ( ( ruleDNS ) )
            // InternalDockerCompose.g:13720:2: ( ruleDNS )
            {
            // InternalDockerCompose.g:13720:2: ( ruleDNS )
            // InternalDockerCompose.g:13721:3: ruleDNS
            {
             before(grammarAccess.getServiceAccess().getDnsDNSParserRuleCall_3_15_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getDnsDNSParserRuleCall_3_15_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__DnsAssignment_3_15_1_1"


    // $ANTLR start "rule__Service__PortsAssignment_3_16_1_1"
    // InternalDockerCompose.g:13730:1: rule__Service__PortsAssignment_3_16_1_1 : ( rulePort ) ;
    public final void rule__Service__PortsAssignment_3_16_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13734:1: ( ( rulePort ) )
            // InternalDockerCompose.g:13735:2: ( rulePort )
            {
            // InternalDockerCompose.g:13735:2: ( rulePort )
            // InternalDockerCompose.g:13736:3: rulePort
            {
             before(grammarAccess.getServiceAccess().getPortsPortParserRuleCall_3_16_1_1_0()); 
            pushFollow(FOLLOW_2);
            rulePort();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getPortsPortParserRuleCall_3_16_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__PortsAssignment_3_16_1_1"


    // $ANTLR start "rule__EnvironmentVariableMap__NameAssignment_1"
    // InternalDockerCompose.g:13745:1: rule__EnvironmentVariableMap__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__EnvironmentVariableMap__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13749:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:13750:2: ( RULE_ID )
            {
            // InternalDockerCompose.g:13750:2: ( RULE_ID )
            // InternalDockerCompose.g:13751:3: RULE_ID
            {
             before(grammarAccess.getEnvironmentVariableMapAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getEnvironmentVariableMapAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableMap__NameAssignment_1"


    // $ANTLR start "rule__EnvironmentVariableMap__ValueAssignment_3"
    // InternalDockerCompose.g:13760:1: rule__EnvironmentVariableMap__ValueAssignment_3 : ( ruleEString ) ;
    public final void rule__EnvironmentVariableMap__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13764:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:13765:2: ( ruleEString )
            {
            // InternalDockerCompose.g:13765:2: ( ruleEString )
            // InternalDockerCompose.g:13766:3: ruleEString
            {
             before(grammarAccess.getEnvironmentVariableMapAccess().getValueEStringParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getEnvironmentVariableMapAccess().getValueEStringParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableMap__ValueAssignment_3"


    // $ANTLR start "rule__EnvironmentVariableList__NameAssignment_2"
    // InternalDockerCompose.g:13775:1: rule__EnvironmentVariableList__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__EnvironmentVariableList__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13779:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:13780:2: ( RULE_ID )
            {
            // InternalDockerCompose.g:13780:2: ( RULE_ID )
            // InternalDockerCompose.g:13781:3: RULE_ID
            {
             before(grammarAccess.getEnvironmentVariableListAccess().getNameIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getEnvironmentVariableListAccess().getNameIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableList__NameAssignment_2"


    // $ANTLR start "rule__EnvironmentVariableList__ValueAssignment_3_1"
    // InternalDockerCompose.g:13790:1: rule__EnvironmentVariableList__ValueAssignment_3_1 : ( ruleEString ) ;
    public final void rule__EnvironmentVariableList__ValueAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13794:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:13795:2: ( ruleEString )
            {
            // InternalDockerCompose.g:13795:2: ( ruleEString )
            // InternalDockerCompose.g:13796:3: ruleEString
            {
             before(grammarAccess.getEnvironmentVariableListAccess().getValueEStringParserRuleCall_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getEnvironmentVariableListAccess().getValueEStringParserRuleCall_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableList__ValueAssignment_3_1"


    // $ANTLR start "rule__Port__ValueAssignment_1"
    // InternalDockerCompose.g:13805:1: rule__Port__ValueAssignment_1 : ( RULE_PORT_DEF ) ;
    public final void rule__Port__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13809:1: ( ( RULE_PORT_DEF ) )
            // InternalDockerCompose.g:13810:2: ( RULE_PORT_DEF )
            {
            // InternalDockerCompose.g:13810:2: ( RULE_PORT_DEF )
            // InternalDockerCompose.g:13811:3: RULE_PORT_DEF
            {
             before(grammarAccess.getPortAccess().getValuePORT_DEFTerminalRuleCall_1_0()); 
            match(input,RULE_PORT_DEF,FOLLOW_2); 
             after(grammarAccess.getPortAccess().getValuePORT_DEFTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__ValueAssignment_1"


    // $ANTLR start "rule__Device__ValueAssignment_1"
    // InternalDockerCompose.g:13820:1: rule__Device__ValueAssignment_1 : ( RULE_DEVICE_DEF ) ;
    public final void rule__Device__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13824:1: ( ( RULE_DEVICE_DEF ) )
            // InternalDockerCompose.g:13825:2: ( RULE_DEVICE_DEF )
            {
            // InternalDockerCompose.g:13825:2: ( RULE_DEVICE_DEF )
            // InternalDockerCompose.g:13826:3: RULE_DEVICE_DEF
            {
             before(grammarAccess.getDeviceAccess().getValueDEVICE_DEFTerminalRuleCall_1_0()); 
            match(input,RULE_DEVICE_DEF,FOLLOW_2); 
             after(grammarAccess.getDeviceAccess().getValueDEVICE_DEFTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Device__ValueAssignment_1"


    // $ANTLR start "rule__Link__ServiceAssignment_1"
    // InternalDockerCompose.g:13835:1: rule__Link__ServiceAssignment_1 : ( ( ruleEString ) ) ;
    public final void rule__Link__ServiceAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13839:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:13840:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:13840:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:13841:3: ( ruleEString )
            {
             before(grammarAccess.getLinkAccess().getServiceServiceCrossReference_1_0()); 
            // InternalDockerCompose.g:13842:3: ( ruleEString )
            // InternalDockerCompose.g:13843:4: ruleEString
            {
             before(grammarAccess.getLinkAccess().getServiceServiceEStringParserRuleCall_1_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getLinkAccess().getServiceServiceEStringParserRuleCall_1_0_1()); 

            }

             after(grammarAccess.getLinkAccess().getServiceServiceCrossReference_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__ServiceAssignment_1"


    // $ANTLR start "rule__Link__AliasAssignment_2_1"
    // InternalDockerCompose.g:13854:1: rule__Link__AliasAssignment_2_1 : ( ruleEString ) ;
    public final void rule__Link__AliasAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13858:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:13859:2: ( ruleEString )
            {
            // InternalDockerCompose.g:13859:2: ( ruleEString )
            // InternalDockerCompose.g:13860:3: ruleEString
            {
             before(grammarAccess.getLinkAccess().getAliasEStringParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getLinkAccess().getAliasEStringParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__AliasAssignment_2_1"


    // $ANTLR start "rule__Dependency_short__ServiceAssignment_2"
    // InternalDockerCompose.g:13869:1: rule__Dependency_short__ServiceAssignment_2 : ( ( ruleEString ) ) ;
    public final void rule__Dependency_short__ServiceAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13873:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:13874:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:13874:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:13875:3: ( ruleEString )
            {
             before(grammarAccess.getDependency_shortAccess().getServiceServiceCrossReference_2_0()); 
            // InternalDockerCompose.g:13876:3: ( ruleEString )
            // InternalDockerCompose.g:13877:4: ruleEString
            {
             before(grammarAccess.getDependency_shortAccess().getServiceServiceEStringParserRuleCall_2_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getDependency_shortAccess().getServiceServiceEStringParserRuleCall_2_0_1()); 

            }

             after(grammarAccess.getDependency_shortAccess().getServiceServiceCrossReference_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_short__ServiceAssignment_2"


    // $ANTLR start "rule__Dependency_long__ServiceAssignment_1"
    // InternalDockerCompose.g:13888:1: rule__Dependency_long__ServiceAssignment_1 : ( ( ruleEString ) ) ;
    public final void rule__Dependency_long__ServiceAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13892:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:13893:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:13893:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:13894:3: ( ruleEString )
            {
             before(grammarAccess.getDependency_longAccess().getServiceServiceCrossReference_1_0()); 
            // InternalDockerCompose.g:13895:3: ( ruleEString )
            // InternalDockerCompose.g:13896:4: ruleEString
            {
             before(grammarAccess.getDependency_longAccess().getServiceServiceEStringParserRuleCall_1_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getDependency_longAccess().getServiceServiceEStringParserRuleCall_1_0_1()); 

            }

             after(grammarAccess.getDependency_longAccess().getServiceServiceCrossReference_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_long__ServiceAssignment_1"


    // $ANTLR start "rule__Dependency_long__ConditionAssignment_4"
    // InternalDockerCompose.g:13907:1: rule__Dependency_long__ConditionAssignment_4 : ( ruleCondition ) ;
    public final void rule__Dependency_long__ConditionAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13911:1: ( ( ruleCondition ) )
            // InternalDockerCompose.g:13912:2: ( ruleCondition )
            {
            // InternalDockerCompose.g:13912:2: ( ruleCondition )
            // InternalDockerCompose.g:13913:3: ruleCondition
            {
             before(grammarAccess.getDependency_longAccess().getConditionConditionEnumRuleCall_4_0()); 
            pushFollow(FOLLOW_2);
            ruleCondition();

            state._fsp--;

             after(grammarAccess.getDependency_longAccess().getConditionConditionEnumRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_long__ConditionAssignment_4"


    // $ANTLR start "rule__NetworkConnector__NetworkAssignment_1_0_1"
    // InternalDockerCompose.g:13922:1: rule__NetworkConnector__NetworkAssignment_1_0_1 : ( ( ruleEString ) ) ;
    public final void rule__NetworkConnector__NetworkAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13926:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:13927:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:13927:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:13928:3: ( ruleEString )
            {
             before(grammarAccess.getNetworkConnectorAccess().getNetworkNetworkCrossReference_1_0_1_0()); 
            // InternalDockerCompose.g:13929:3: ( ruleEString )
            // InternalDockerCompose.g:13930:4: ruleEString
            {
             before(grammarAccess.getNetworkConnectorAccess().getNetworkNetworkEStringParserRuleCall_1_0_1_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkConnectorAccess().getNetworkNetworkEStringParserRuleCall_1_0_1_0_1()); 

            }

             after(grammarAccess.getNetworkConnectorAccess().getNetworkNetworkCrossReference_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__NetworkAssignment_1_0_1"


    // $ANTLR start "rule__NetworkConnector__NetworkAssignment_1_1_0"
    // InternalDockerCompose.g:13941:1: rule__NetworkConnector__NetworkAssignment_1_1_0 : ( ( ruleEString ) ) ;
    public final void rule__NetworkConnector__NetworkAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13945:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:13946:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:13946:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:13947:3: ( ruleEString )
            {
             before(grammarAccess.getNetworkConnectorAccess().getNetworkNetworkCrossReference_1_1_0_0()); 
            // InternalDockerCompose.g:13948:3: ( ruleEString )
            // InternalDockerCompose.g:13949:4: ruleEString
            {
             before(grammarAccess.getNetworkConnectorAccess().getNetworkNetworkEStringParserRuleCall_1_1_0_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkConnectorAccess().getNetworkNetworkEStringParserRuleCall_1_1_0_0_1()); 

            }

             after(grammarAccess.getNetworkConnectorAccess().getNetworkNetworkCrossReference_1_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__NetworkAssignment_1_1_0"


    // $ANTLR start "rule__NetworkConnector__Ipv4_addressAssignment_1_1_2_0_1"
    // InternalDockerCompose.g:13960:1: rule__NetworkConnector__Ipv4_addressAssignment_1_1_2_0_1 : ( ruleDNS ) ;
    public final void rule__NetworkConnector__Ipv4_addressAssignment_1_1_2_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13964:1: ( ( ruleDNS ) )
            // InternalDockerCompose.g:13965:2: ( ruleDNS )
            {
            // InternalDockerCompose.g:13965:2: ( ruleDNS )
            // InternalDockerCompose.g:13966:3: ruleDNS
            {
             before(grammarAccess.getNetworkConnectorAccess().getIpv4_addressDNSParserRuleCall_1_1_2_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getNetworkConnectorAccess().getIpv4_addressDNSParserRuleCall_1_1_2_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Ipv4_addressAssignment_1_1_2_0_1"


    // $ANTLR start "rule__NetworkConnector__PriorityAssignment_1_1_2_1_1"
    // InternalDockerCompose.g:13975:1: rule__NetworkConnector__PriorityAssignment_1_1_2_1_1 : ( ruleEInt ) ;
    public final void rule__NetworkConnector__PriorityAssignment_1_1_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13979:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:13980:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:13980:2: ( ruleEInt )
            // InternalDockerCompose.g:13981:3: ruleEInt
            {
             before(grammarAccess.getNetworkConnectorAccess().getPriorityEIntParserRuleCall_1_1_2_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getNetworkConnectorAccess().getPriorityEIntParserRuleCall_1_1_2_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__PriorityAssignment_1_1_2_1_1"


    // $ANTLR start "rule__NetworkConnector__AliasesAssignment_1_1_2_2_1_1"
    // InternalDockerCompose.g:13990:1: rule__NetworkConnector__AliasesAssignment_1_1_2_2_1_1 : ( ruleAlias ) ;
    public final void rule__NetworkConnector__AliasesAssignment_1_1_2_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13994:1: ( ( ruleAlias ) )
            // InternalDockerCompose.g:13995:2: ( ruleAlias )
            {
            // InternalDockerCompose.g:13995:2: ( ruleAlias )
            // InternalDockerCompose.g:13996:3: ruleAlias
            {
             before(grammarAccess.getNetworkConnectorAccess().getAliasesAliasParserRuleCall_1_1_2_2_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleAlias();

            state._fsp--;

             after(grammarAccess.getNetworkConnectorAccess().getAliasesAliasParserRuleCall_1_1_2_2_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__AliasesAssignment_1_1_2_2_1_1"


    // $ANTLR start "rule__NetworkConnector__Link_local_ipsAssignment_1_1_2_3_1_1"
    // InternalDockerCompose.g:14005:1: rule__NetworkConnector__Link_local_ipsAssignment_1_1_2_3_1_1 : ( ruleDNS ) ;
    public final void rule__NetworkConnector__Link_local_ipsAssignment_1_1_2_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14009:1: ( ( ruleDNS ) )
            // InternalDockerCompose.g:14010:2: ( ruleDNS )
            {
            // InternalDockerCompose.g:14010:2: ( ruleDNS )
            // InternalDockerCompose.g:14011:3: ruleDNS
            {
             before(grammarAccess.getNetworkConnectorAccess().getLink_local_ipsDNSParserRuleCall_1_1_2_3_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getNetworkConnectorAccess().getLink_local_ipsDNSParserRuleCall_1_1_2_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Link_local_ipsAssignment_1_1_2_3_1_1"


    // $ANTLR start "rule__Alias__AliasAssignment_1"
    // InternalDockerCompose.g:14020:1: rule__Alias__AliasAssignment_1 : ( ruleEString ) ;
    public final void rule__Alias__AliasAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14024:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:14025:2: ( ruleEString )
            {
            // InternalDockerCompose.g:14025:2: ( ruleEString )
            // InternalDockerCompose.g:14026:3: ruleEString
            {
             before(grammarAccess.getAliasAccess().getAliasEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getAliasAccess().getAliasEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Alias__AliasAssignment_1"


    // $ANTLR start "rule__VolumeConnector_long__VolumeAssignment_1_0_1"
    // InternalDockerCompose.g:14035:1: rule__VolumeConnector_long__VolumeAssignment_1_0_1 : ( ( ruleEString ) ) ;
    public final void rule__VolumeConnector_long__VolumeAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14039:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:14040:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:14040:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:14041:3: ( ruleEString )
            {
             before(grammarAccess.getVolumeConnector_longAccess().getVolumeVolumeCrossReference_1_0_1_0()); 
            // InternalDockerCompose.g:14042:3: ( ruleEString )
            // InternalDockerCompose.g:14043:4: ruleEString
            {
             before(grammarAccess.getVolumeConnector_longAccess().getVolumeVolumeEStringParserRuleCall_1_0_1_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_longAccess().getVolumeVolumeEStringParserRuleCall_1_0_1_0_1()); 

            }

             after(grammarAccess.getVolumeConnector_longAccess().getVolumeVolumeCrossReference_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__VolumeAssignment_1_0_1"


    // $ANTLR start "rule__VolumeConnector_long__TypeAssignment_1_1_1"
    // InternalDockerCompose.g:14054:1: rule__VolumeConnector_long__TypeAssignment_1_1_1 : ( ruleMountType ) ;
    public final void rule__VolumeConnector_long__TypeAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14058:1: ( ( ruleMountType ) )
            // InternalDockerCompose.g:14059:2: ( ruleMountType )
            {
            // InternalDockerCompose.g:14059:2: ( ruleMountType )
            // InternalDockerCompose.g:14060:3: ruleMountType
            {
             before(grammarAccess.getVolumeConnector_longAccess().getTypeMountTypeEnumRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleMountType();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_longAccess().getTypeMountTypeEnumRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__TypeAssignment_1_1_1"


    // $ANTLR start "rule__VolumeConnector_long__Container_pathAssignment_1_2_1"
    // InternalDockerCompose.g:14069:1: rule__VolumeConnector_long__Container_pathAssignment_1_2_1 : ( rulePATH ) ;
    public final void rule__VolumeConnector_long__Container_pathAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14073:1: ( ( rulePATH ) )
            // InternalDockerCompose.g:14074:2: ( rulePATH )
            {
            // InternalDockerCompose.g:14074:2: ( rulePATH )
            // InternalDockerCompose.g:14075:3: rulePATH
            {
             before(grammarAccess.getVolumeConnector_longAccess().getContainer_pathPATHParserRuleCall_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_longAccess().getContainer_pathPATHParserRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Container_pathAssignment_1_2_1"


    // $ANTLR start "rule__VolumeConnector_long__Read_onlyAssignment_1_3_1"
    // InternalDockerCompose.g:14084:1: rule__VolumeConnector_long__Read_onlyAssignment_1_3_1 : ( ruleEBoolean ) ;
    public final void rule__VolumeConnector_long__Read_onlyAssignment_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14088:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:14089:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:14089:2: ( ruleEBoolean )
            // InternalDockerCompose.g:14090:3: ruleEBoolean
            {
             before(grammarAccess.getVolumeConnector_longAccess().getRead_onlyEBooleanParserRuleCall_1_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_longAccess().getRead_onlyEBooleanParserRuleCall_1_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Read_onlyAssignment_1_3_1"


    // $ANTLR start "rule__VolumeConnector_long__PropagationAssignment_1_4_2"
    // InternalDockerCompose.g:14099:1: rule__VolumeConnector_long__PropagationAssignment_1_4_2 : ( rulePropagationType ) ;
    public final void rule__VolumeConnector_long__PropagationAssignment_1_4_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14103:1: ( ( rulePropagationType ) )
            // InternalDockerCompose.g:14104:2: ( rulePropagationType )
            {
            // InternalDockerCompose.g:14104:2: ( rulePropagationType )
            // InternalDockerCompose.g:14105:3: rulePropagationType
            {
             before(grammarAccess.getVolumeConnector_longAccess().getPropagationPropagationTypeEnumRuleCall_1_4_2_0()); 
            pushFollow(FOLLOW_2);
            rulePropagationType();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_longAccess().getPropagationPropagationTypeEnumRuleCall_1_4_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__PropagationAssignment_1_4_2"


    // $ANTLR start "rule__VolumeConnector_long__NocopyAssignment_1_5_2"
    // InternalDockerCompose.g:14114:1: rule__VolumeConnector_long__NocopyAssignment_1_5_2 : ( ruleEBoolean ) ;
    public final void rule__VolumeConnector_long__NocopyAssignment_1_5_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14118:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:14119:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:14119:2: ( ruleEBoolean )
            // InternalDockerCompose.g:14120:3: ruleEBoolean
            {
             before(grammarAccess.getVolumeConnector_longAccess().getNocopyEBooleanParserRuleCall_1_5_2_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_longAccess().getNocopyEBooleanParserRuleCall_1_5_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__NocopyAssignment_1_5_2"


    // $ANTLR start "rule__VolumeConnector_long__SizeAssignment_1_6_2"
    // InternalDockerCompose.g:14129:1: rule__VolumeConnector_long__SizeAssignment_1_6_2 : ( ruleEInt ) ;
    public final void rule__VolumeConnector_long__SizeAssignment_1_6_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14133:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:14134:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:14134:2: ( ruleEInt )
            // InternalDockerCompose.g:14135:3: ruleEInt
            {
             before(grammarAccess.getVolumeConnector_longAccess().getSizeEIntParserRuleCall_1_6_2_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_longAccess().getSizeEIntParserRuleCall_1_6_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__SizeAssignment_1_6_2"


    // $ANTLR start "rule__VolumeConnector_short__VolumeAssignment_1"
    // InternalDockerCompose.g:14144:1: rule__VolumeConnector_short__VolumeAssignment_1 : ( ( ruleEString ) ) ;
    public final void rule__VolumeConnector_short__VolumeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14148:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:14149:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:14149:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:14150:3: ( ruleEString )
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getVolumeVolumeCrossReference_1_0()); 
            // InternalDockerCompose.g:14151:3: ( ruleEString )
            // InternalDockerCompose.g:14152:4: ruleEString
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getVolumeVolumeEStringParserRuleCall_1_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_shortAccess().getVolumeVolumeEStringParserRuleCall_1_0_1()); 

            }

             after(grammarAccess.getVolumeConnector_shortAccess().getVolumeVolumeCrossReference_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__VolumeAssignment_1"


    // $ANTLR start "rule__VolumeConnector_short__Container_pathAssignment_3"
    // InternalDockerCompose.g:14163:1: rule__VolumeConnector_short__Container_pathAssignment_3 : ( rulePATH ) ;
    public final void rule__VolumeConnector_short__Container_pathAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14167:1: ( ( rulePATH ) )
            // InternalDockerCompose.g:14168:2: ( rulePATH )
            {
            // InternalDockerCompose.g:14168:2: ( rulePATH )
            // InternalDockerCompose.g:14169:3: rulePATH
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getContainer_pathPATHParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_shortAccess().getContainer_pathPATHParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Container_pathAssignment_3"


    // $ANTLR start "rule__VolumeConnector_short__Access_modeAssignment_4_1"
    // InternalDockerCompose.g:14178:1: rule__VolumeConnector_short__Access_modeAssignment_4_1 : ( ruleAccessMode ) ;
    public final void rule__VolumeConnector_short__Access_modeAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14182:1: ( ( ruleAccessMode ) )
            // InternalDockerCompose.g:14183:2: ( ruleAccessMode )
            {
            // InternalDockerCompose.g:14183:2: ( ruleAccessMode )
            // InternalDockerCompose.g:14184:3: ruleAccessMode
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getAccess_modeAccessModeEnumRuleCall_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleAccessMode();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_shortAccess().getAccess_modeAccessModeEnumRuleCall_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Access_modeAssignment_4_1"


    // $ANTLR start "rule__ConfigConnector_long__ConfigAssignment_1_0_1"
    // InternalDockerCompose.g:14193:1: rule__ConfigConnector_long__ConfigAssignment_1_0_1 : ( ( ruleEString ) ) ;
    public final void rule__ConfigConnector_long__ConfigAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14197:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:14198:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:14198:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:14199:3: ( ruleEString )
            {
             before(grammarAccess.getConfigConnector_longAccess().getConfigConfigCrossReference_1_0_1_0()); 
            // InternalDockerCompose.g:14200:3: ( ruleEString )
            // InternalDockerCompose.g:14201:4: ruleEString
            {
             before(grammarAccess.getConfigConnector_longAccess().getConfigConfigEStringParserRuleCall_1_0_1_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getConfigConnector_longAccess().getConfigConfigEStringParserRuleCall_1_0_1_0_1()); 

            }

             after(grammarAccess.getConfigConnector_longAccess().getConfigConfigCrossReference_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__ConfigAssignment_1_0_1"


    // $ANTLR start "rule__ConfigConnector_long__TargetAssignment_1_1_1"
    // InternalDockerCompose.g:14212:1: rule__ConfigConnector_long__TargetAssignment_1_1_1 : ( rulePATH ) ;
    public final void rule__ConfigConnector_long__TargetAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14216:1: ( ( rulePATH ) )
            // InternalDockerCompose.g:14217:2: ( rulePATH )
            {
            // InternalDockerCompose.g:14217:2: ( rulePATH )
            // InternalDockerCompose.g:14218:3: rulePATH
            {
             before(grammarAccess.getConfigConnector_longAccess().getTargetPATHParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getConfigConnector_longAccess().getTargetPATHParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__TargetAssignment_1_1_1"


    // $ANTLR start "rule__ConfigConnector_long__UidAssignment_1_2_1"
    // InternalDockerCompose.g:14227:1: rule__ConfigConnector_long__UidAssignment_1_2_1 : ( RULE_QUOTED_INT ) ;
    public final void rule__ConfigConnector_long__UidAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14231:1: ( ( RULE_QUOTED_INT ) )
            // InternalDockerCompose.g:14232:2: ( RULE_QUOTED_INT )
            {
            // InternalDockerCompose.g:14232:2: ( RULE_QUOTED_INT )
            // InternalDockerCompose.g:14233:3: RULE_QUOTED_INT
            {
             before(grammarAccess.getConfigConnector_longAccess().getUidQUOTED_INTTerminalRuleCall_1_2_1_0()); 
            match(input,RULE_QUOTED_INT,FOLLOW_2); 
             after(grammarAccess.getConfigConnector_longAccess().getUidQUOTED_INTTerminalRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__UidAssignment_1_2_1"


    // $ANTLR start "rule__ConfigConnector_long__GidAssignment_1_3_1"
    // InternalDockerCompose.g:14242:1: rule__ConfigConnector_long__GidAssignment_1_3_1 : ( RULE_QUOTED_INT ) ;
    public final void rule__ConfigConnector_long__GidAssignment_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14246:1: ( ( RULE_QUOTED_INT ) )
            // InternalDockerCompose.g:14247:2: ( RULE_QUOTED_INT )
            {
            // InternalDockerCompose.g:14247:2: ( RULE_QUOTED_INT )
            // InternalDockerCompose.g:14248:3: RULE_QUOTED_INT
            {
             before(grammarAccess.getConfigConnector_longAccess().getGidQUOTED_INTTerminalRuleCall_1_3_1_0()); 
            match(input,RULE_QUOTED_INT,FOLLOW_2); 
             after(grammarAccess.getConfigConnector_longAccess().getGidQUOTED_INTTerminalRuleCall_1_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__GidAssignment_1_3_1"


    // $ANTLR start "rule__ConfigConnector_long__ModeAssignment_1_4_1"
    // InternalDockerCompose.g:14257:1: rule__ConfigConnector_long__ModeAssignment_1_4_1 : ( ruleEInt ) ;
    public final void rule__ConfigConnector_long__ModeAssignment_1_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14261:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:14262:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:14262:2: ( ruleEInt )
            // InternalDockerCompose.g:14263:3: ruleEInt
            {
             before(grammarAccess.getConfigConnector_longAccess().getModeEIntParserRuleCall_1_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getConfigConnector_longAccess().getModeEIntParserRuleCall_1_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__ModeAssignment_1_4_1"


    // $ANTLR start "rule__ConfigConnector_short__ConfigAssignment_1"
    // InternalDockerCompose.g:14272:1: rule__ConfigConnector_short__ConfigAssignment_1 : ( ( ruleEString ) ) ;
    public final void rule__ConfigConnector_short__ConfigAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14276:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:14277:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:14277:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:14278:3: ( ruleEString )
            {
             before(grammarAccess.getConfigConnector_shortAccess().getConfigConfigCrossReference_1_0()); 
            // InternalDockerCompose.g:14279:3: ( ruleEString )
            // InternalDockerCompose.g:14280:4: ruleEString
            {
             before(grammarAccess.getConfigConnector_shortAccess().getConfigConfigEStringParserRuleCall_1_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getConfigConnector_shortAccess().getConfigConfigEStringParserRuleCall_1_0_1()); 

            }

             after(grammarAccess.getConfigConnector_shortAccess().getConfigConfigCrossReference_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_short__ConfigAssignment_1"


    // $ANTLR start "rule__SecretConnector_long__SecretAssignment_1_0_1"
    // InternalDockerCompose.g:14291:1: rule__SecretConnector_long__SecretAssignment_1_0_1 : ( ( ruleEString ) ) ;
    public final void rule__SecretConnector_long__SecretAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14295:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:14296:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:14296:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:14297:3: ( ruleEString )
            {
             before(grammarAccess.getSecretConnector_longAccess().getSecretSecretCrossReference_1_0_1_0()); 
            // InternalDockerCompose.g:14298:3: ( ruleEString )
            // InternalDockerCompose.g:14299:4: ruleEString
            {
             before(grammarAccess.getSecretConnector_longAccess().getSecretSecretEStringParserRuleCall_1_0_1_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getSecretConnector_longAccess().getSecretSecretEStringParserRuleCall_1_0_1_0_1()); 

            }

             after(grammarAccess.getSecretConnector_longAccess().getSecretSecretCrossReference_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__SecretAssignment_1_0_1"


    // $ANTLR start "rule__SecretConnector_long__TargetAssignment_1_1_1"
    // InternalDockerCompose.g:14310:1: rule__SecretConnector_long__TargetAssignment_1_1_1 : ( rulePATH ) ;
    public final void rule__SecretConnector_long__TargetAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14314:1: ( ( rulePATH ) )
            // InternalDockerCompose.g:14315:2: ( rulePATH )
            {
            // InternalDockerCompose.g:14315:2: ( rulePATH )
            // InternalDockerCompose.g:14316:3: rulePATH
            {
             before(grammarAccess.getSecretConnector_longAccess().getTargetPATHParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getSecretConnector_longAccess().getTargetPATHParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__TargetAssignment_1_1_1"


    // $ANTLR start "rule__SecretConnector_long__UidAssignment_1_2_1"
    // InternalDockerCompose.g:14325:1: rule__SecretConnector_long__UidAssignment_1_2_1 : ( RULE_QUOTED_INT ) ;
    public final void rule__SecretConnector_long__UidAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14329:1: ( ( RULE_QUOTED_INT ) )
            // InternalDockerCompose.g:14330:2: ( RULE_QUOTED_INT )
            {
            // InternalDockerCompose.g:14330:2: ( RULE_QUOTED_INT )
            // InternalDockerCompose.g:14331:3: RULE_QUOTED_INT
            {
             before(grammarAccess.getSecretConnector_longAccess().getUidQUOTED_INTTerminalRuleCall_1_2_1_0()); 
            match(input,RULE_QUOTED_INT,FOLLOW_2); 
             after(grammarAccess.getSecretConnector_longAccess().getUidQUOTED_INTTerminalRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__UidAssignment_1_2_1"


    // $ANTLR start "rule__SecretConnector_long__GidAssignment_1_3_1"
    // InternalDockerCompose.g:14340:1: rule__SecretConnector_long__GidAssignment_1_3_1 : ( RULE_QUOTED_INT ) ;
    public final void rule__SecretConnector_long__GidAssignment_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14344:1: ( ( RULE_QUOTED_INT ) )
            // InternalDockerCompose.g:14345:2: ( RULE_QUOTED_INT )
            {
            // InternalDockerCompose.g:14345:2: ( RULE_QUOTED_INT )
            // InternalDockerCompose.g:14346:3: RULE_QUOTED_INT
            {
             before(grammarAccess.getSecretConnector_longAccess().getGidQUOTED_INTTerminalRuleCall_1_3_1_0()); 
            match(input,RULE_QUOTED_INT,FOLLOW_2); 
             after(grammarAccess.getSecretConnector_longAccess().getGidQUOTED_INTTerminalRuleCall_1_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__GidAssignment_1_3_1"


    // $ANTLR start "rule__SecretConnector_long__ModeAssignment_1_4_1"
    // InternalDockerCompose.g:14355:1: rule__SecretConnector_long__ModeAssignment_1_4_1 : ( ruleEInt ) ;
    public final void rule__SecretConnector_long__ModeAssignment_1_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14359:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:14360:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:14360:2: ( ruleEInt )
            // InternalDockerCompose.g:14361:3: ruleEInt
            {
             before(grammarAccess.getSecretConnector_longAccess().getModeEIntParserRuleCall_1_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getSecretConnector_longAccess().getModeEIntParserRuleCall_1_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__ModeAssignment_1_4_1"


    // $ANTLR start "rule__SecretConnector_short__SecretAssignment_1"
    // InternalDockerCompose.g:14370:1: rule__SecretConnector_short__SecretAssignment_1 : ( ( ruleEString ) ) ;
    public final void rule__SecretConnector_short__SecretAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14374:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:14375:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:14375:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:14376:3: ( ruleEString )
            {
             before(grammarAccess.getSecretConnector_shortAccess().getSecretSecretCrossReference_1_0()); 
            // InternalDockerCompose.g:14377:3: ( ruleEString )
            // InternalDockerCompose.g:14378:4: ruleEString
            {
             before(grammarAccess.getSecretConnector_shortAccess().getSecretSecretEStringParserRuleCall_1_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getSecretConnector_shortAccess().getSecretSecretEStringParserRuleCall_1_0_1()); 

            }

             after(grammarAccess.getSecretConnector_shortAccess().getSecretSecretCrossReference_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_short__SecretAssignment_1"


    // $ANTLR start "rule__Network__NameAssignment_1"
    // InternalDockerCompose.g:14389:1: rule__Network__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__Network__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14393:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:14394:2: ( ruleEString )
            {
            // InternalDockerCompose.g:14394:2: ( ruleEString )
            // InternalDockerCompose.g:14395:3: ruleEString
            {
             before(grammarAccess.getNetworkAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__NameAssignment_1"


    // $ANTLR start "rule__Network__DriverAssignment_3_1_0_1"
    // InternalDockerCompose.g:14404:1: rule__Network__DriverAssignment_3_1_0_1 : ( ruleEString ) ;
    public final void rule__Network__DriverAssignment_3_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14408:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:14409:2: ( ruleEString )
            {
            // InternalDockerCompose.g:14409:2: ( ruleEString )
            // InternalDockerCompose.g:14410:3: ruleEString
            {
             before(grammarAccess.getNetworkAccess().getDriverEStringParserRuleCall_3_1_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getDriverEStringParserRuleCall_3_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__DriverAssignment_3_1_0_1"


    // $ANTLR start "rule__Network__AttachableAssignment_3_1_1_1"
    // InternalDockerCompose.g:14419:1: rule__Network__AttachableAssignment_3_1_1_1 : ( ruleEBoolean ) ;
    public final void rule__Network__AttachableAssignment_3_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14423:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:14424:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:14424:2: ( ruleEBoolean )
            // InternalDockerCompose.g:14425:3: ruleEBoolean
            {
             before(grammarAccess.getNetworkAccess().getAttachableEBooleanParserRuleCall_3_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getAttachableEBooleanParserRuleCall_3_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__AttachableAssignment_3_1_1_1"


    // $ANTLR start "rule__Network__Enable_ipv6Assignment_3_1_2_1"
    // InternalDockerCompose.g:14434:1: rule__Network__Enable_ipv6Assignment_3_1_2_1 : ( ruleEBoolean ) ;
    public final void rule__Network__Enable_ipv6Assignment_3_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14438:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:14439:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:14439:2: ( ruleEBoolean )
            // InternalDockerCompose.g:14440:3: ruleEBoolean
            {
             before(grammarAccess.getNetworkAccess().getEnable_ipv6EBooleanParserRuleCall_3_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getEnable_ipv6EBooleanParserRuleCall_3_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Enable_ipv6Assignment_3_1_2_1"


    // $ANTLR start "rule__Network__InternalAssignment_3_1_3_1"
    // InternalDockerCompose.g:14449:1: rule__Network__InternalAssignment_3_1_3_1 : ( ruleEBoolean ) ;
    public final void rule__Network__InternalAssignment_3_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14453:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:14454:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:14454:2: ( ruleEBoolean )
            // InternalDockerCompose.g:14455:3: ruleEBoolean
            {
             before(grammarAccess.getNetworkAccess().getInternalEBooleanParserRuleCall_3_1_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getInternalEBooleanParserRuleCall_3_1_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__InternalAssignment_3_1_3_1"


    // $ANTLR start "rule__Network__ExternalAssignment_3_1_4_1"
    // InternalDockerCompose.g:14464:1: rule__Network__ExternalAssignment_3_1_4_1 : ( ruleEBoolean ) ;
    public final void rule__Network__ExternalAssignment_3_1_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14468:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:14469:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:14469:2: ( ruleEBoolean )
            // InternalDockerCompose.g:14470:3: ruleEBoolean
            {
             before(grammarAccess.getNetworkAccess().getExternalEBooleanParserRuleCall_3_1_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getExternalEBooleanParserRuleCall_3_1_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__ExternalAssignment_3_1_4_1"


    // $ANTLR start "rule__Network__Network_nameAssignment_3_1_5_1"
    // InternalDockerCompose.g:14479:1: rule__Network__Network_nameAssignment_3_1_5_1 : ( ruleEString ) ;
    public final void rule__Network__Network_nameAssignment_3_1_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14483:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:14484:2: ( ruleEString )
            {
            // InternalDockerCompose.g:14484:2: ( ruleEString )
            // InternalDockerCompose.g:14485:3: ruleEString
            {
             before(grammarAccess.getNetworkAccess().getNetwork_nameEStringParserRuleCall_3_1_5_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getNetwork_nameEStringParserRuleCall_3_1_5_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Network_nameAssignment_3_1_5_1"


    // $ANTLR start "rule__Network__LabelsAssignment_3_1_6_1"
    // InternalDockerCompose.g:14494:1: rule__Network__LabelsAssignment_3_1_6_1 : ( ruleNetworkLabel ) ;
    public final void rule__Network__LabelsAssignment_3_1_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14498:1: ( ( ruleNetworkLabel ) )
            // InternalDockerCompose.g:14499:2: ( ruleNetworkLabel )
            {
            // InternalDockerCompose.g:14499:2: ( ruleNetworkLabel )
            // InternalDockerCompose.g:14500:3: ruleNetworkLabel
            {
             before(grammarAccess.getNetworkAccess().getLabelsNetworkLabelParserRuleCall_3_1_6_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNetworkLabel();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getLabelsNetworkLabelParserRuleCall_3_1_6_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__LabelsAssignment_3_1_6_1"


    // $ANTLR start "rule__Network__Driver_optsAssignment_3_1_7_1"
    // InternalDockerCompose.g:14509:1: rule__Network__Driver_optsAssignment_3_1_7_1 : ( ruleNetworkDriverOpt ) ;
    public final void rule__Network__Driver_optsAssignment_3_1_7_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14513:1: ( ( ruleNetworkDriverOpt ) )
            // InternalDockerCompose.g:14514:2: ( ruleNetworkDriverOpt )
            {
            // InternalDockerCompose.g:14514:2: ( ruleNetworkDriverOpt )
            // InternalDockerCompose.g:14515:3: ruleNetworkDriverOpt
            {
             before(grammarAccess.getNetworkAccess().getDriver_optsNetworkDriverOptParserRuleCall_3_1_7_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNetworkDriverOpt();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getDriver_optsNetworkDriverOptParserRuleCall_3_1_7_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Driver_optsAssignment_3_1_7_1"


    // $ANTLR start "rule__Network__IpamAssignment_3_1_8_1"
    // InternalDockerCompose.g:14524:1: rule__Network__IpamAssignment_3_1_8_1 : ( ruleIPAM ) ;
    public final void rule__Network__IpamAssignment_3_1_8_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14528:1: ( ( ruleIPAM ) )
            // InternalDockerCompose.g:14529:2: ( ruleIPAM )
            {
            // InternalDockerCompose.g:14529:2: ( ruleIPAM )
            // InternalDockerCompose.g:14530:3: ruleIPAM
            {
             before(grammarAccess.getNetworkAccess().getIpamIPAMParserRuleCall_3_1_8_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIPAM();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getIpamIPAMParserRuleCall_3_1_8_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__IpamAssignment_3_1_8_1"


    // $ANTLR start "rule__Volume__NameAssignment_1"
    // InternalDockerCompose.g:14539:1: rule__Volume__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__Volume__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14543:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:14544:2: ( ruleEString )
            {
            // InternalDockerCompose.g:14544:2: ( ruleEString )
            // InternalDockerCompose.g:14545:3: ruleEString
            {
             before(grammarAccess.getVolumeAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__NameAssignment_1"


    // $ANTLR start "rule__Volume__ExternalAssignment_3_0_1"
    // InternalDockerCompose.g:14554:1: rule__Volume__ExternalAssignment_3_0_1 : ( ruleEBoolean ) ;
    public final void rule__Volume__ExternalAssignment_3_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14558:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:14559:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:14559:2: ( ruleEBoolean )
            // InternalDockerCompose.g:14560:3: ruleEBoolean
            {
             before(grammarAccess.getVolumeAccess().getExternalEBooleanParserRuleCall_3_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getVolumeAccess().getExternalEBooleanParserRuleCall_3_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__ExternalAssignment_3_0_1"


    // $ANTLR start "rule__Volume__DriverAssignment_3_1_1"
    // InternalDockerCompose.g:14569:1: rule__Volume__DriverAssignment_3_1_1 : ( ruleEString ) ;
    public final void rule__Volume__DriverAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14573:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:14574:2: ( ruleEString )
            {
            // InternalDockerCompose.g:14574:2: ( ruleEString )
            // InternalDockerCompose.g:14575:3: ruleEString
            {
             before(grammarAccess.getVolumeAccess().getDriverEStringParserRuleCall_3_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeAccess().getDriverEStringParserRuleCall_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__DriverAssignment_3_1_1"


    // $ANTLR start "rule__Volume__Volume_nameAssignment_3_2_1"
    // InternalDockerCompose.g:14584:1: rule__Volume__Volume_nameAssignment_3_2_1 : ( ruleEString ) ;
    public final void rule__Volume__Volume_nameAssignment_3_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14588:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:14589:2: ( ruleEString )
            {
            // InternalDockerCompose.g:14589:2: ( ruleEString )
            // InternalDockerCompose.g:14590:3: ruleEString
            {
             before(grammarAccess.getVolumeAccess().getVolume_nameEStringParserRuleCall_3_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeAccess().getVolume_nameEStringParserRuleCall_3_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Volume_nameAssignment_3_2_1"


    // $ANTLR start "rule__Volume__LabelsAssignment_3_3_1"
    // InternalDockerCompose.g:14599:1: rule__Volume__LabelsAssignment_3_3_1 : ( ruleVolumeLabel ) ;
    public final void rule__Volume__LabelsAssignment_3_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14603:1: ( ( ruleVolumeLabel ) )
            // InternalDockerCompose.g:14604:2: ( ruleVolumeLabel )
            {
            // InternalDockerCompose.g:14604:2: ( ruleVolumeLabel )
            // InternalDockerCompose.g:14605:3: ruleVolumeLabel
            {
             before(grammarAccess.getVolumeAccess().getLabelsVolumeLabelParserRuleCall_3_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleVolumeLabel();

            state._fsp--;

             after(grammarAccess.getVolumeAccess().getLabelsVolumeLabelParserRuleCall_3_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__LabelsAssignment_3_3_1"


    // $ANTLR start "rule__Volume__Driver_optsAssignment_3_4_1"
    // InternalDockerCompose.g:14614:1: rule__Volume__Driver_optsAssignment_3_4_1 : ( ruleVolumeDriverOpt ) ;
    public final void rule__Volume__Driver_optsAssignment_3_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14618:1: ( ( ruleVolumeDriverOpt ) )
            // InternalDockerCompose.g:14619:2: ( ruleVolumeDriverOpt )
            {
            // InternalDockerCompose.g:14619:2: ( ruleVolumeDriverOpt )
            // InternalDockerCompose.g:14620:3: ruleVolumeDriverOpt
            {
             before(grammarAccess.getVolumeAccess().getDriver_optsVolumeDriverOptParserRuleCall_3_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleVolumeDriverOpt();

            state._fsp--;

             after(grammarAccess.getVolumeAccess().getDriver_optsVolumeDriverOptParserRuleCall_3_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Driver_optsAssignment_3_4_1"


    // $ANTLR start "rule__Config__NameAssignment_1"
    // InternalDockerCompose.g:14629:1: rule__Config__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__Config__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14633:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:14634:2: ( ruleEString )
            {
            // InternalDockerCompose.g:14634:2: ( ruleEString )
            // InternalDockerCompose.g:14635:3: ruleEString
            {
             before(grammarAccess.getConfigAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getConfigAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__NameAssignment_1"


    // $ANTLR start "rule__Config__ExternalAssignment_3_0_1"
    // InternalDockerCompose.g:14644:1: rule__Config__ExternalAssignment_3_0_1 : ( ruleEBoolean ) ;
    public final void rule__Config__ExternalAssignment_3_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14648:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:14649:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:14649:2: ( ruleEBoolean )
            // InternalDockerCompose.g:14650:3: ruleEBoolean
            {
             before(grammarAccess.getConfigAccess().getExternalEBooleanParserRuleCall_3_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getConfigAccess().getExternalEBooleanParserRuleCall_3_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__ExternalAssignment_3_0_1"


    // $ANTLR start "rule__Config__FileAssignment_3_1_1"
    // InternalDockerCompose.g:14659:1: rule__Config__FileAssignment_3_1_1 : ( ruleEString ) ;
    public final void rule__Config__FileAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14663:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:14664:2: ( ruleEString )
            {
            // InternalDockerCompose.g:14664:2: ( ruleEString )
            // InternalDockerCompose.g:14665:3: ruleEString
            {
             before(grammarAccess.getConfigAccess().getFileEStringParserRuleCall_3_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getConfigAccess().getFileEStringParserRuleCall_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__FileAssignment_3_1_1"


    // $ANTLR start "rule__Config__Config_nameAssignment_3_2_1"
    // InternalDockerCompose.g:14674:1: rule__Config__Config_nameAssignment_3_2_1 : ( ruleEString ) ;
    public final void rule__Config__Config_nameAssignment_3_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14678:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:14679:2: ( ruleEString )
            {
            // InternalDockerCompose.g:14679:2: ( ruleEString )
            // InternalDockerCompose.g:14680:3: ruleEString
            {
             before(grammarAccess.getConfigAccess().getConfig_nameEStringParserRuleCall_3_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getConfigAccess().getConfig_nameEStringParserRuleCall_3_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Config_nameAssignment_3_2_1"


    // $ANTLR start "rule__Secret__NameAssignment_1"
    // InternalDockerCompose.g:14689:1: rule__Secret__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__Secret__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14693:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:14694:2: ( ruleEString )
            {
            // InternalDockerCompose.g:14694:2: ( ruleEString )
            // InternalDockerCompose.g:14695:3: ruleEString
            {
             before(grammarAccess.getSecretAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getSecretAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__NameAssignment_1"


    // $ANTLR start "rule__Secret__ExternalAssignment_3_0_1"
    // InternalDockerCompose.g:14704:1: rule__Secret__ExternalAssignment_3_0_1 : ( ruleEBoolean ) ;
    public final void rule__Secret__ExternalAssignment_3_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14708:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:14709:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:14709:2: ( ruleEBoolean )
            // InternalDockerCompose.g:14710:3: ruleEBoolean
            {
             before(grammarAccess.getSecretAccess().getExternalEBooleanParserRuleCall_3_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getSecretAccess().getExternalEBooleanParserRuleCall_3_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__ExternalAssignment_3_0_1"


    // $ANTLR start "rule__Secret__FileAssignment_3_1_1"
    // InternalDockerCompose.g:14719:1: rule__Secret__FileAssignment_3_1_1 : ( ruleEString ) ;
    public final void rule__Secret__FileAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14723:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:14724:2: ( ruleEString )
            {
            // InternalDockerCompose.g:14724:2: ( ruleEString )
            // InternalDockerCompose.g:14725:3: ruleEString
            {
             before(grammarAccess.getSecretAccess().getFileEStringParserRuleCall_3_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getSecretAccess().getFileEStringParserRuleCall_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__FileAssignment_3_1_1"


    // $ANTLR start "rule__Secret__EnvironmentAssignment_3_2_1"
    // InternalDockerCompose.g:14734:1: rule__Secret__EnvironmentAssignment_3_2_1 : ( ruleEString ) ;
    public final void rule__Secret__EnvironmentAssignment_3_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14738:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:14739:2: ( ruleEString )
            {
            // InternalDockerCompose.g:14739:2: ( ruleEString )
            // InternalDockerCompose.g:14740:3: ruleEString
            {
             before(grammarAccess.getSecretAccess().getEnvironmentEStringParserRuleCall_3_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getSecretAccess().getEnvironmentEStringParserRuleCall_3_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__EnvironmentAssignment_3_2_1"


    // $ANTLR start "rule__Secret__Secret_nameAssignment_3_3_1"
    // InternalDockerCompose.g:14749:1: rule__Secret__Secret_nameAssignment_3_3_1 : ( ruleEString ) ;
    public final void rule__Secret__Secret_nameAssignment_3_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14753:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:14754:2: ( ruleEString )
            {
            // InternalDockerCompose.g:14754:2: ( ruleEString )
            // InternalDockerCompose.g:14755:3: ruleEString
            {
             before(grammarAccess.getSecretAccess().getSecret_nameEStringParserRuleCall_3_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getSecretAccess().getSecret_nameEStringParserRuleCall_3_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Secret_nameAssignment_3_3_1"


    // $ANTLR start "rule__VolumeLabel__NameAssignment_1"
    // InternalDockerCompose.g:14764:1: rule__VolumeLabel__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__VolumeLabel__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14768:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:14769:2: ( ruleEString )
            {
            // InternalDockerCompose.g:14769:2: ( ruleEString )
            // InternalDockerCompose.g:14770:3: ruleEString
            {
             before(grammarAccess.getVolumeLabelAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeLabelAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__NameAssignment_1"


    // $ANTLR start "rule__VolumeLabel__ValueAssignment_3"
    // InternalDockerCompose.g:14779:1: rule__VolumeLabel__ValueAssignment_3 : ( ruleEString ) ;
    public final void rule__VolumeLabel__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14783:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:14784:2: ( ruleEString )
            {
            // InternalDockerCompose.g:14784:2: ( ruleEString )
            // InternalDockerCompose.g:14785:3: ruleEString
            {
             before(grammarAccess.getVolumeLabelAccess().getValueEStringParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeLabelAccess().getValueEStringParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__ValueAssignment_3"


    // $ANTLR start "rule__VolumeDriverOpt__NameAssignment_1"
    // InternalDockerCompose.g:14794:1: rule__VolumeDriverOpt__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__VolumeDriverOpt__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14798:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:14799:2: ( ruleEString )
            {
            // InternalDockerCompose.g:14799:2: ( ruleEString )
            // InternalDockerCompose.g:14800:3: ruleEString
            {
             before(grammarAccess.getVolumeDriverOptAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeDriverOptAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__NameAssignment_1"


    // $ANTLR start "rule__VolumeDriverOpt__ValueAssignment_3"
    // InternalDockerCompose.g:14809:1: rule__VolumeDriverOpt__ValueAssignment_3 : ( ruleEString ) ;
    public final void rule__VolumeDriverOpt__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14813:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:14814:2: ( ruleEString )
            {
            // InternalDockerCompose.g:14814:2: ( ruleEString )
            // InternalDockerCompose.g:14815:3: ruleEString
            {
             before(grammarAccess.getVolumeDriverOptAccess().getValueEStringParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeDriverOptAccess().getValueEStringParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__ValueAssignment_3"


    // $ANTLR start "rule__NetworkLabel__NameAssignment_1"
    // InternalDockerCompose.g:14824:1: rule__NetworkLabel__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__NetworkLabel__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14828:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:14829:2: ( ruleEString )
            {
            // InternalDockerCompose.g:14829:2: ( ruleEString )
            // InternalDockerCompose.g:14830:3: ruleEString
            {
             before(grammarAccess.getNetworkLabelAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkLabelAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__NameAssignment_1"


    // $ANTLR start "rule__NetworkLabel__ValueAssignment_3"
    // InternalDockerCompose.g:14839:1: rule__NetworkLabel__ValueAssignment_3 : ( ruleEString ) ;
    public final void rule__NetworkLabel__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14843:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:14844:2: ( ruleEString )
            {
            // InternalDockerCompose.g:14844:2: ( ruleEString )
            // InternalDockerCompose.g:14845:3: ruleEString
            {
             before(grammarAccess.getNetworkLabelAccess().getValueEStringParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkLabelAccess().getValueEStringParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__ValueAssignment_3"


    // $ANTLR start "rule__NetworkDriverOpt__NameAssignment_1"
    // InternalDockerCompose.g:14854:1: rule__NetworkDriverOpt__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__NetworkDriverOpt__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14858:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:14859:2: ( ruleEString )
            {
            // InternalDockerCompose.g:14859:2: ( ruleEString )
            // InternalDockerCompose.g:14860:3: ruleEString
            {
             before(grammarAccess.getNetworkDriverOptAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkDriverOptAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__NameAssignment_1"


    // $ANTLR start "rule__NetworkDriverOpt__ValueAssignment_3"
    // InternalDockerCompose.g:14869:1: rule__NetworkDriverOpt__ValueAssignment_3 : ( ruleEString ) ;
    public final void rule__NetworkDriverOpt__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14873:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:14874:2: ( ruleEString )
            {
            // InternalDockerCompose.g:14874:2: ( ruleEString )
            // InternalDockerCompose.g:14875:3: ruleEString
            {
             before(grammarAccess.getNetworkDriverOptAccess().getValueEStringParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkDriverOptAccess().getValueEStringParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__ValueAssignment_3"


    // $ANTLR start "rule__IPAM__DriverAssignment_1_0_1"
    // InternalDockerCompose.g:14884:1: rule__IPAM__DriverAssignment_1_0_1 : ( ruleEString ) ;
    public final void rule__IPAM__DriverAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14888:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:14889:2: ( ruleEString )
            {
            // InternalDockerCompose.g:14889:2: ( ruleEString )
            // InternalDockerCompose.g:14890:3: ruleEString
            {
             before(grammarAccess.getIPAMAccess().getDriverEStringParserRuleCall_1_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getIPAMAccess().getDriverEStringParserRuleCall_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__DriverAssignment_1_0_1"


    // $ANTLR start "rule__IPAM__ConfigsAssignment_1_1_1_1"
    // InternalDockerCompose.g:14899:1: rule__IPAM__ConfigsAssignment_1_1_1_1 : ( ruleIPAMConfig ) ;
    public final void rule__IPAM__ConfigsAssignment_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14903:1: ( ( ruleIPAMConfig ) )
            // InternalDockerCompose.g:14904:2: ( ruleIPAMConfig )
            {
            // InternalDockerCompose.g:14904:2: ( ruleIPAMConfig )
            // InternalDockerCompose.g:14905:3: ruleIPAMConfig
            {
             before(grammarAccess.getIPAMAccess().getConfigsIPAMConfigParserRuleCall_1_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIPAMConfig();

            state._fsp--;

             after(grammarAccess.getIPAMAccess().getConfigsIPAMConfigParserRuleCall_1_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__ConfigsAssignment_1_1_1_1"


    // $ANTLR start "rule__IPAM__OptionsAssignment_1_2_1"
    // InternalDockerCompose.g:14914:1: rule__IPAM__OptionsAssignment_1_2_1 : ( ruleIPAMOption ) ;
    public final void rule__IPAM__OptionsAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14918:1: ( ( ruleIPAMOption ) )
            // InternalDockerCompose.g:14919:2: ( ruleIPAMOption )
            {
            // InternalDockerCompose.g:14919:2: ( ruleIPAMOption )
            // InternalDockerCompose.g:14920:3: ruleIPAMOption
            {
             before(grammarAccess.getIPAMAccess().getOptionsIPAMOptionParserRuleCall_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIPAMOption();

            state._fsp--;

             after(grammarAccess.getIPAMAccess().getOptionsIPAMOptionParserRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__OptionsAssignment_1_2_1"


    // $ANTLR start "rule__IPAMConfig__SubnetAssignment_1_0_1"
    // InternalDockerCompose.g:14929:1: rule__IPAMConfig__SubnetAssignment_1_0_1 : ( ruleNetworkAddress ) ;
    public final void rule__IPAMConfig__SubnetAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14933:1: ( ( ruleNetworkAddress ) )
            // InternalDockerCompose.g:14934:2: ( ruleNetworkAddress )
            {
            // InternalDockerCompose.g:14934:2: ( ruleNetworkAddress )
            // InternalDockerCompose.g:14935:3: ruleNetworkAddress
            {
             before(grammarAccess.getIPAMConfigAccess().getSubnetNetworkAddressParserRuleCall_1_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNetworkAddress();

            state._fsp--;

             after(grammarAccess.getIPAMConfigAccess().getSubnetNetworkAddressParserRuleCall_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__SubnetAssignment_1_0_1"


    // $ANTLR start "rule__IPAMConfig__Ip_rangeAssignment_1_1_1"
    // InternalDockerCompose.g:14944:1: rule__IPAMConfig__Ip_rangeAssignment_1_1_1 : ( ruleNetworkAddress ) ;
    public final void rule__IPAMConfig__Ip_rangeAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14948:1: ( ( ruleNetworkAddress ) )
            // InternalDockerCompose.g:14949:2: ( ruleNetworkAddress )
            {
            // InternalDockerCompose.g:14949:2: ( ruleNetworkAddress )
            // InternalDockerCompose.g:14950:3: ruleNetworkAddress
            {
             before(grammarAccess.getIPAMConfigAccess().getIp_rangeNetworkAddressParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNetworkAddress();

            state._fsp--;

             after(grammarAccess.getIPAMConfigAccess().getIp_rangeNetworkAddressParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Ip_rangeAssignment_1_1_1"


    // $ANTLR start "rule__IPAMConfig__GatewayAssignment_1_2_1"
    // InternalDockerCompose.g:14959:1: rule__IPAMConfig__GatewayAssignment_1_2_1 : ( ruleDNS ) ;
    public final void rule__IPAMConfig__GatewayAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14963:1: ( ( ruleDNS ) )
            // InternalDockerCompose.g:14964:2: ( ruleDNS )
            {
            // InternalDockerCompose.g:14964:2: ( ruleDNS )
            // InternalDockerCompose.g:14965:3: ruleDNS
            {
             before(grammarAccess.getIPAMConfigAccess().getGatewayDNSParserRuleCall_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getIPAMConfigAccess().getGatewayDNSParserRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__GatewayAssignment_1_2_1"


    // $ANTLR start "rule__IPAMConfig__Aux_addressesAssignment_1_3_1"
    // InternalDockerCompose.g:14974:1: rule__IPAMConfig__Aux_addressesAssignment_1_3_1 : ( ruleIPAMAddress ) ;
    public final void rule__IPAMConfig__Aux_addressesAssignment_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14978:1: ( ( ruleIPAMAddress ) )
            // InternalDockerCompose.g:14979:2: ( ruleIPAMAddress )
            {
            // InternalDockerCompose.g:14979:2: ( ruleIPAMAddress )
            // InternalDockerCompose.g:14980:3: ruleIPAMAddress
            {
             before(grammarAccess.getIPAMConfigAccess().getAux_addressesIPAMAddressParserRuleCall_1_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIPAMAddress();

            state._fsp--;

             after(grammarAccess.getIPAMConfigAccess().getAux_addressesIPAMAddressParserRuleCall_1_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Aux_addressesAssignment_1_3_1"


    // $ANTLR start "rule__IPAMOption__NameAssignment_1"
    // InternalDockerCompose.g:14989:1: rule__IPAMOption__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__IPAMOption__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14993:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:14994:2: ( ruleEString )
            {
            // InternalDockerCompose.g:14994:2: ( ruleEString )
            // InternalDockerCompose.g:14995:3: ruleEString
            {
             before(grammarAccess.getIPAMOptionAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getIPAMOptionAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__NameAssignment_1"


    // $ANTLR start "rule__IPAMOption__ValueAssignment_3"
    // InternalDockerCompose.g:15004:1: rule__IPAMOption__ValueAssignment_3 : ( ruleEString ) ;
    public final void rule__IPAMOption__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15008:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:15009:2: ( ruleEString )
            {
            // InternalDockerCompose.g:15009:2: ( ruleEString )
            // InternalDockerCompose.g:15010:3: ruleEString
            {
             before(grammarAccess.getIPAMOptionAccess().getValueEStringParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getIPAMOptionAccess().getValueEStringParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__ValueAssignment_3"


    // $ANTLR start "rule__IPAMAddress__NameAssignment_1"
    // InternalDockerCompose.g:15019:1: rule__IPAMAddress__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__IPAMAddress__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15023:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:15024:2: ( ruleEString )
            {
            // InternalDockerCompose.g:15024:2: ( ruleEString )
            // InternalDockerCompose.g:15025:3: ruleEString
            {
             before(grammarAccess.getIPAMAddressAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getIPAMAddressAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__NameAssignment_1"


    // $ANTLR start "rule__IPAMAddress__DnsAssignment_3"
    // InternalDockerCompose.g:15034:1: rule__IPAMAddress__DnsAssignment_3 : ( ruleDNS ) ;
    public final void rule__IPAMAddress__DnsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15038:1: ( ( ruleDNS ) )
            // InternalDockerCompose.g:15039:2: ( ruleDNS )
            {
            // InternalDockerCompose.g:15039:2: ( ruleDNS )
            // InternalDockerCompose.g:15040:3: ruleDNS
            {
             before(grammarAccess.getIPAMAddressAccess().getDnsDNSParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getIPAMAddressAccess().getDnsDNSParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__DnsAssignment_3"


    // $ANTLR start "rule__DNS__Dns1Assignment_0"
    // InternalDockerCompose.g:15049:1: rule__DNS__Dns1Assignment_0 : ( ruleEInt ) ;
    public final void rule__DNS__Dns1Assignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15053:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:15054:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:15054:2: ( ruleEInt )
            // InternalDockerCompose.g:15055:3: ruleEInt
            {
             before(grammarAccess.getDNSAccess().getDns1EIntParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getDNSAccess().getDns1EIntParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Dns1Assignment_0"


    // $ANTLR start "rule__DNS__Dns2Assignment_2"
    // InternalDockerCompose.g:15064:1: rule__DNS__Dns2Assignment_2 : ( ruleEInt ) ;
    public final void rule__DNS__Dns2Assignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15068:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:15069:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:15069:2: ( ruleEInt )
            // InternalDockerCompose.g:15070:3: ruleEInt
            {
             before(grammarAccess.getDNSAccess().getDns2EIntParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getDNSAccess().getDns2EIntParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Dns2Assignment_2"


    // $ANTLR start "rule__DNS__Dns3Assignment_4"
    // InternalDockerCompose.g:15079:1: rule__DNS__Dns3Assignment_4 : ( ruleEInt ) ;
    public final void rule__DNS__Dns3Assignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15083:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:15084:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:15084:2: ( ruleEInt )
            // InternalDockerCompose.g:15085:3: ruleEInt
            {
             before(grammarAccess.getDNSAccess().getDns3EIntParserRuleCall_4_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getDNSAccess().getDns3EIntParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Dns3Assignment_4"


    // $ANTLR start "rule__DNS__Dns4Assignment_6"
    // InternalDockerCompose.g:15094:1: rule__DNS__Dns4Assignment_6 : ( ruleEInt ) ;
    public final void rule__DNS__Dns4Assignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15098:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:15099:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:15099:2: ( ruleEInt )
            // InternalDockerCompose.g:15100:3: ruleEInt
            {
             before(grammarAccess.getDNSAccess().getDns4EIntParserRuleCall_6_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getDNSAccess().getDns4EIntParserRuleCall_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Dns4Assignment_6"


    // $ANTLR start "rule__NetworkAddress__Dns1Assignment_0"
    // InternalDockerCompose.g:15109:1: rule__NetworkAddress__Dns1Assignment_0 : ( ruleEInt ) ;
    public final void rule__NetworkAddress__Dns1Assignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15113:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:15114:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:15114:2: ( ruleEInt )
            // InternalDockerCompose.g:15115:3: ruleEInt
            {
             before(grammarAccess.getNetworkAddressAccess().getDns1EIntParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getNetworkAddressAccess().getDns1EIntParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Dns1Assignment_0"


    // $ANTLR start "rule__NetworkAddress__Dns2Assignment_2"
    // InternalDockerCompose.g:15124:1: rule__NetworkAddress__Dns2Assignment_2 : ( ruleEInt ) ;
    public final void rule__NetworkAddress__Dns2Assignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15128:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:15129:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:15129:2: ( ruleEInt )
            // InternalDockerCompose.g:15130:3: ruleEInt
            {
             before(grammarAccess.getNetworkAddressAccess().getDns2EIntParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getNetworkAddressAccess().getDns2EIntParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Dns2Assignment_2"


    // $ANTLR start "rule__NetworkAddress__Dns3Assignment_4"
    // InternalDockerCompose.g:15139:1: rule__NetworkAddress__Dns3Assignment_4 : ( ruleEInt ) ;
    public final void rule__NetworkAddress__Dns3Assignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15143:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:15144:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:15144:2: ( ruleEInt )
            // InternalDockerCompose.g:15145:3: ruleEInt
            {
             before(grammarAccess.getNetworkAddressAccess().getDns3EIntParserRuleCall_4_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getNetworkAddressAccess().getDns3EIntParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Dns3Assignment_4"


    // $ANTLR start "rule__NetworkAddress__Dns4Assignment_6"
    // InternalDockerCompose.g:15154:1: rule__NetworkAddress__Dns4Assignment_6 : ( ruleEInt ) ;
    public final void rule__NetworkAddress__Dns4Assignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15158:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:15159:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:15159:2: ( ruleEInt )
            // InternalDockerCompose.g:15160:3: ruleEInt
            {
             before(grammarAccess.getNetworkAddressAccess().getDns4EIntParserRuleCall_6_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getNetworkAddressAccess().getDns4EIntParserRuleCall_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Dns4Assignment_6"


    // $ANTLR start "rule__NetworkAddress__NetIdAssignment_8"
    // InternalDockerCompose.g:15169:1: rule__NetworkAddress__NetIdAssignment_8 : ( ruleEInt ) ;
    public final void rule__NetworkAddress__NetIdAssignment_8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15173:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:15174:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:15174:2: ( ruleEInt )
            // InternalDockerCompose.g:15175:3: ruleEInt
            {
             before(grammarAccess.getNetworkAddressAccess().getNetIdEIntParserRuleCall_8_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getNetworkAddressAccess().getNetIdEIntParserRuleCall_8_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__NetIdAssignment_8"

    // Delegated rules


    protected DFA14 dfa14 = new DFA14(this);
    protected DFA40 dfa40 = new DFA40(this);
    protected DFA45 dfa45 = new DFA45(this);
    protected DFA66 dfa66 = new DFA66(this);
    protected DFA76 dfa76 = new DFA76(this);
    protected DFA77 dfa77 = new DFA77(this);
    protected DFA78 dfa78 = new DFA78(this);
    protected DFA79 dfa79 = new DFA79(this);
    protected DFA80 dfa80 = new DFA80(this);
    protected DFA81 dfa81 = new DFA81(this);
    protected DFA82 dfa82 = new DFA82(this);
    protected DFA83 dfa83 = new DFA83(this);
    protected DFA84 dfa84 = new DFA84(this);
    protected DFA85 dfa85 = new DFA85(this);
    protected DFA86 dfa86 = new DFA86(this);
    protected DFA87 dfa87 = new DFA87(this);
    protected DFA88 dfa88 = new DFA88(this);
    protected DFA89 dfa89 = new DFA89(this);
    protected DFA90 dfa90 = new DFA90(this);
    protected DFA91 dfa91 = new DFA91(this);
    protected DFA92 dfa92 = new DFA92(this);
    protected DFA99 dfa99 = new DFA99(this);
    protected DFA100 dfa100 = new DFA100(this);
    protected DFA101 dfa101 = new DFA101(this);
    protected DFA102 dfa102 = new DFA102(this);
    protected DFA103 dfa103 = new DFA103(this);
    protected DFA104 dfa104 = new DFA104(this);
    protected DFA115 dfa115 = new DFA115(this);
    protected DFA116 dfa116 = new DFA116(this);
    protected DFA117 dfa117 = new DFA117(this);
    protected DFA118 dfa118 = new DFA118(this);
    protected DFA119 dfa119 = new DFA119(this);
    protected DFA120 dfa120 = new DFA120(this);
    protected DFA121 dfa121 = new DFA121(this);
    protected DFA122 dfa122 = new DFA122(this);
    protected DFA123 dfa123 = new DFA123(this);
    protected DFA124 dfa124 = new DFA124(this);
    static final String dfa_1s = "\u009b\uffff";
    static final String dfa_2s = "\1\1\2\uffff\1\4\u0097\uffff";
    static final String dfa_3s = "\1\5\1\uffff\1\56\1\5\1\uffff\2\6\1\4\1\6\1\5\1\24\2\22\1\70\5\5\1\6\1\70\1\4\1\70\21\uffff\2\5\2\56\1\5\2\56\3\5\1\56\1\6\1\11\1\4\1\20\1\10\4\uffff\1\101\3\uffff\2\56\1\5\1\33\1\6\1\22\1\112\1\114\1\116\1\5\1\6\2\12\1\4\2\uffff\1\5\1\6\2\12\1\4\5\uffff\1\20\1\4\1\uffff\1\45\1\6\14\uffff\1\37\1\22\1\4\22\uffff\1\4\1\20\20\uffff\1\20\2\4\2\20\2\4\2\uffff";
    static final String dfa_4s = "\1\75\1\uffff\1\56\1\75\1\uffff\1\77\1\6\1\4\2\6\1\27\2\23\12\70\21\uffff\2\6\2\56\1\6\2\56\1\115\2\121\1\56\1\6\1\11\1\4\1\20\1\10\4\uffff\1\101\3\uffff\2\56\1\6\1\36\1\77\1\23\1\112\1\114\1\116\1\6\1\77\2\12\1\4\2\uffff\1\6\1\77\2\12\1\4\5\uffff\1\20\1\4\1\uffff\1\47\1\77\14\uffff\1\44\1\23\1\4\22\uffff\1\4\1\20\20\uffff\1\20\2\4\2\20\2\4\2\uffff";
    static final String dfa_5s = "\1\uffff\1\2\2\uffff\1\1\22\uffff\21\1\20\uffff\4\1\1\uffff\3\1\16\uffff\2\1\5\uffff\5\1\2\uffff\1\1\2\uffff\14\1\3\uffff\22\1\2\uffff\20\1\7\uffff\2\1";
    static final String dfa_6s = "\u009b\uffff}>";
    static final String[] dfa_7s = {
            "\1\1\1\2\41\uffff\6\1\1\uffff\11\1\1\uffff\5\1",
            "",
            "\1\3",
            "\2\4\41\uffff\2\4\1\20\1\21\1\22\1\17\1\uffff\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\uffff\1\16\1\23\1\24\1\25\1\26",
            "",
            "\1\27\11\uffff\1\30\1\31\55\uffff\1\32",
            "\1\33",
            "\1\34",
            "\1\35",
            "\1\36\1\37",
            "\1\40\1\41\1\42\1\43",
            "\1\44\1\45",
            "\1\46\1\47",
            "\1\50",
            "\1\52\1\53\61\uffff\1\51",
            "\1\55\1\56\61\uffff\1\54",
            "\2\47\61\uffff\1\57",
            "\2\47\61\uffff\1\60",
            "\2\47\61\uffff\1\61",
            "\1\62\61\uffff\1\63",
            "\1\64",
            "\1\66\63\uffff\1\65",
            "\1\67",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\70\1\71",
            "\1\72\1\73",
            "\1\74",
            "\1\74",
            "\1\75\1\76",
            "\1\77",
            "\1\77",
            "\1\100\1\101\57\uffff\1\105\17\uffff\1\102\1\103\1\104\1\106\1\uffff\1\107\1\uffff\1\110",
            "\1\116\1\117\77\uffff\1\111\1\uffff\1\112\6\uffff\1\113\1\114\1\115",
            "\1\125\1\126\77\uffff\1\120\1\uffff\1\121\6\uffff\1\122\1\123\1\124",
            "\1\127",
            "\1\130",
            "\1\131",
            "\1\132",
            "\1\133",
            "\1\134",
            "",
            "",
            "",
            "",
            "\1\135",
            "",
            "",
            "",
            "\1\136",
            "\1\136",
            "\1\137\1\140",
            "\1\141\1\142\1\143\1\144",
            "\1\145\11\uffff\1\146\1\147\55\uffff\1\150",
            "\1\151\1\152",
            "\1\153",
            "\1\154",
            "\1\155",
            "\1\156\1\157",
            "\1\160\11\uffff\1\161\1\162\55\uffff\1\163",
            "\1\164",
            "\1\165",
            "\1\166",
            "",
            "",
            "\1\167\1\170",
            "\1\171\11\uffff\1\172\1\173\55\uffff\1\174",
            "\1\175",
            "\1\176",
            "\1\177",
            "",
            "",
            "",
            "",
            "",
            "\1\u0080",
            "\1\u0081",
            "",
            "\1\u0082\1\u0083\1\u0084",
            "\1\u0085\11\uffff\1\u0086\1\u0087\55\uffff\1\u0088",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\u0089\1\u008a\1\u008b\1\u008c\1\u008d\1\u008e",
            "\1\u008f\1\u0090",
            "\1\u0091",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\u0092",
            "\1\u0093",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\u0094",
            "\1\u0095",
            "\1\u0096",
            "\1\u0097",
            "\1\u0098",
            "\1\u0099",
            "\1\u009a",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA14 extends DFA {

        public DFA14(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 14;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "()* loopback of 1206:4: ( rule__Service__EnvironmentAssignment_3_13_1_0 )*";
        }
    }
    static final String dfa_8s = "\u009c\uffff";
    static final String dfa_9s = "\1\1\4\uffff\1\4\u0096\uffff";
    static final String dfa_10s = "\1\5\1\uffff\2\56\1\uffff\1\5\2\6\1\4\1\6\1\5\1\24\2\22\1\70\5\5\1\6\1\70\1\4\1\70\21\uffff\2\5\2\56\1\5\2\56\3\5\1\56\1\6\1\11\1\4\1\20\1\10\4\uffff\1\101\3\uffff\2\56\1\5\1\33\1\6\1\22\1\112\1\114\1\116\1\5\1\6\2\12\1\4\2\uffff\1\5\1\6\2\12\1\4\5\uffff\1\20\1\4\1\uffff\1\45\1\6\14\uffff\1\37\1\22\1\4\22\uffff\1\4\1\20\20\uffff\1\20\2\4\2\20\2\4\2\uffff";
    static final String dfa_11s = "\1\75\1\uffff\2\56\1\uffff\1\105\1\77\1\6\1\4\2\6\1\27\2\23\12\70\21\uffff\2\6\2\56\1\6\2\56\1\115\2\121\1\56\1\6\1\11\1\4\1\20\1\10\4\uffff\1\101\3\uffff\2\56\1\6\1\36\1\77\1\23\1\112\1\114\1\116\1\6\1\77\2\12\1\4\2\uffff\1\6\1\77\2\12\1\4\5\uffff\1\20\1\4\1\uffff\1\47\1\77\14\uffff\1\44\1\23\1\4\22\uffff\1\4\1\20\20\uffff\1\20\2\4\2\20\2\4\2\uffff";
    static final String dfa_12s = "\1\uffff\1\2\2\uffff\1\1\23\uffff\21\1\20\uffff\4\1\1\uffff\3\1\16\uffff\2\1\5\uffff\5\1\2\uffff\1\1\2\uffff\14\1\3\uffff\22\1\2\uffff\20\1\7\uffff\2\1";
    static final String dfa_13s = "\u009c\uffff}>";
    static final String[] dfa_14s = {
            "\1\2\1\3\41\uffff\6\1\1\uffff\11\1\1\4\5\1",
            "",
            "\1\5",
            "\1\5",
            "",
            "\2\4\41\uffff\2\4\1\21\1\22\1\23\1\20\1\uffff\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\4\1\17\1\24\1\25\1\26\1\27\4\uffff\4\4",
            "\1\30\11\uffff\1\31\1\32\55\uffff\1\33",
            "\1\34",
            "\1\35",
            "\1\36",
            "\1\37\1\40",
            "\1\41\1\42\1\43\1\44",
            "\1\45\1\46",
            "\1\47\1\50",
            "\1\51",
            "\1\53\1\54\61\uffff\1\52",
            "\1\56\1\57\61\uffff\1\55",
            "\2\50\61\uffff\1\60",
            "\2\50\61\uffff\1\61",
            "\2\50\61\uffff\1\62",
            "\1\63\61\uffff\1\64",
            "\1\65",
            "\1\67\63\uffff\1\66",
            "\1\70",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\71\1\72",
            "\1\73\1\74",
            "\1\75",
            "\1\75",
            "\1\76\1\77",
            "\1\100",
            "\1\100",
            "\1\101\1\102\57\uffff\1\106\17\uffff\1\103\1\104\1\105\1\107\1\uffff\1\110\1\uffff\1\111",
            "\1\117\1\120\77\uffff\1\112\1\uffff\1\113\6\uffff\1\114\1\115\1\116",
            "\1\126\1\127\77\uffff\1\121\1\uffff\1\122\6\uffff\1\123\1\124\1\125",
            "\1\130",
            "\1\131",
            "\1\132",
            "\1\133",
            "\1\134",
            "\1\135",
            "",
            "",
            "",
            "",
            "\1\136",
            "",
            "",
            "",
            "\1\137",
            "\1\137",
            "\1\140\1\141",
            "\1\142\1\143\1\144\1\145",
            "\1\146\11\uffff\1\147\1\150\55\uffff\1\151",
            "\1\152\1\153",
            "\1\154",
            "\1\155",
            "\1\156",
            "\1\157\1\160",
            "\1\161\11\uffff\1\162\1\163\55\uffff\1\164",
            "\1\165",
            "\1\166",
            "\1\167",
            "",
            "",
            "\1\170\1\171",
            "\1\172\11\uffff\1\173\1\174\55\uffff\1\175",
            "\1\176",
            "\1\177",
            "\1\u0080",
            "",
            "",
            "",
            "",
            "",
            "\1\u0081",
            "\1\u0082",
            "",
            "\1\u0083\1\u0084\1\u0085",
            "\1\u0086\11\uffff\1\u0087\1\u0088\55\uffff\1\u0089",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\u008a\1\u008b\1\u008c\1\u008d\1\u008e\1\u008f",
            "\1\u0090\1\u0091",
            "\1\u0092",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\u0093",
            "\1\u0094",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\u0095",
            "\1\u0096",
            "\1\u0097",
            "\1\u0098",
            "\1\u0099",
            "\1\u009a",
            "\1\u009b",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final short[] dfa_9 = DFA.unpackEncodedString(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final char[] dfa_11 = DFA.unpackEncodedStringToUnsignedChars(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[][] dfa_14 = unpackEncodedStringArray(dfa_14s);

    class DFA40 extends DFA {

        public DFA40(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 40;
            this.eot = dfa_8;
            this.eof = dfa_9;
            this.min = dfa_10;
            this.max = dfa_11;
            this.accept = dfa_12;
            this.special = dfa_13;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "()* loopback of 2774:3: ( rule__Service__NetworksAssignment_3_9_1 )*";
        }
    }
    static final String dfa_15s = "\10\uffff";
    static final String dfa_16s = "\1\uffff\1\4\3\uffff\1\4\2\uffff";
    static final String dfa_17s = "\1\6\1\5\1\6\2\uffff\1\5\1\6\1\56";
    static final String dfa_18s = "\1\6\1\100\1\6\2\uffff\1\77\1\6\1\77";
    static final String dfa_19s = "\3\uffff\1\1\1\2\3\uffff";
    static final String dfa_20s = "\10\uffff}>";
    static final String[] dfa_21s = {
            "\1\1",
            "\2\4\41\uffff\6\4\1\2\11\4\1\uffff\5\4\1\uffff\1\3\1\4",
            "\1\5",
            "",
            "",
            "\2\4\41\uffff\6\4\1\6\11\4\1\uffff\5\4\1\uffff\1\3",
            "\1\7",
            "\1\6\20\uffff\1\3"
    };

    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final char[] dfa_18 = DFA.unpackEncodedStringToUnsignedChars(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[][] dfa_21 = unpackEncodedStringArray(dfa_21s);

    class DFA45 extends DFA {

        public DFA45(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 45;
            this.eot = dfa_15;
            this.eof = dfa_16;
            this.min = dfa_17;
            this.max = dfa_18;
            this.accept = dfa_19;
            this.special = dfa_20;
            this.transition = dfa_21;
        }
        public String getDescription() {
            return "4059:2: ( rule__Image__Group_0__0 )?";
        }
    }
    static final String dfa_22s = "\4\4\3\uffff\1\4";
    static final String dfa_23s = "\4\5\1\uffff\1\6\1\uffff\1\5";
    static final String dfa_24s = "\4\121\1\uffff\1\6\1\uffff\1\121";
    static final String dfa_25s = "\4\uffff\1\2\1\uffff\1\1\1\uffff";
    static final String[] dfa_26s = {
            "\1\4\1\1\11\uffff\1\2\1\3\26\uffff\26\4\10\uffff\4\4\1\uffff\1\4\1\uffff\1\4\1\uffff\3\4",
            "\2\4\11\uffff\1\5\27\uffff\26\4\1\uffff\1\6\6\uffff\4\4\1\uffff\1\4\1\uffff\1\4\1\uffff\3\4",
            "\2\4\41\uffff\26\4\1\uffff\1\6\6\uffff\4\4\1\uffff\1\4\1\uffff\1\4\1\uffff\3\4",
            "\2\4\41\uffff\26\4\1\uffff\1\6\6\uffff\4\4\1\uffff\1\4\1\uffff\1\4\1\uffff\3\4",
            "",
            "\1\7",
            "",
            "\2\4\11\uffff\1\5\27\uffff\26\4\1\uffff\1\6\6\uffff\4\4\1\uffff\1\4\1\uffff\1\4\1\uffff\3\4"
    };
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final char[] dfa_24 = DFA.unpackEncodedStringToUnsignedChars(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[][] dfa_26 = unpackEncodedStringArray(dfa_26s);

    class DFA66 extends DFA {

        public DFA66(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 66;
            this.eot = dfa_15;
            this.eof = dfa_22;
            this.min = dfa_23;
            this.max = dfa_24;
            this.accept = dfa_25;
            this.special = dfa_20;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "()* loopback of 10251:2: ( rule__PATH__Group_1_1__0 )*";
        }
    }
    static final String dfa_27s = "\22\uffff";
    static final String dfa_28s = "\1\52\21\uffff";
    static final String dfa_29s = "\1\75\21\uffff";
    static final String dfa_30s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21";
    static final String dfa_31s = "\1\0\21\uffff}>";
    static final String[] dfa_32s = {
            "\1\13\1\14\1\15\1\12\1\uffff\2\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\11\1\16\1\17\1\20\1\21",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[][] dfa_32 = unpackEncodedStringArray(dfa_32s);

    class DFA76 extends DFA {

        public DFA76(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 76;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "11199:3: ( ({...}? => ( ( ( rule__Service__Alternatives_3_0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_15__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_16__0 ) ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA76_0 = input.LA(1);

                         
                        int index76_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA76_0 >= 47 && LA76_0 <= 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA76_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA76_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA76_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA76_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA76_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA76_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA76_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA76_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( LA76_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 10;}

                        else if ( LA76_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 11;}

                        else if ( LA76_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 12;}

                        else if ( LA76_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA76_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA76_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA76_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA76_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                         
                        input.seek(index76_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 76, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_33s = "\32\uffff";
    static final String dfa_34s = "\1\22\31\uffff";
    static final String dfa_35s = "\1\5\11\uffff\4\5\5\uffff\2\56\4\uffff\1\0";
    static final String dfa_36s = "\1\75\11\uffff\4\70\5\uffff\2\56\4\uffff\1\0";
    static final String dfa_37s = "\1\uffff\11\1\4\uffff\4\1\1\2\2\uffff\4\1\1\uffff";
    static final String dfa_38s = "\1\4\11\uffff\1\5\1\1\1\2\1\3\13\uffff\1\0}>";
    static final String[] dfa_39s = {
            "\2\22\41\uffff\2\22\1\13\1\14\1\15\1\12\1\uffff\2\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\11\1\16\1\17\1\20\1\21",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\23\1\24\61\uffff\1\25",
            "\2\22\61\uffff\1\26",
            "\2\22\61\uffff\1\27",
            "\2\22\61\uffff\1\30",
            "",
            "",
            "",
            "",
            "",
            "\1\31",
            "\1\31",
            "",
            "",
            "",
            "",
            "\1\uffff"
    };

    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[][] dfa_39 = unpackEncodedStringArray(dfa_39s);

    class DFA77 extends DFA {

        public DFA77(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 77;
            this.eot = dfa_33;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_38;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "11469:2: ( rule__Service__UnorderedGroup_3__1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA77_25 = input.LA(1);

                         
                        int index77_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 24;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 18;}

                         
                        input.seek(index77_25);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA77_11 = input.LA(1);

                         
                        int index77_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA77_11>=RULE_STRING && LA77_11<=RULE_ID)) ) {s = 18;}

                        else if ( LA77_11 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 22;}

                         
                        input.seek(index77_11);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA77_12 = input.LA(1);

                         
                        int index77_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA77_12>=RULE_STRING && LA77_12<=RULE_ID)) ) {s = 18;}

                        else if ( LA77_12 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 23;}

                         
                        input.seek(index77_12);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA77_13 = input.LA(1);

                         
                        int index77_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA77_13>=RULE_STRING && LA77_13<=RULE_ID)) ) {s = 18;}

                        else if ( LA77_13 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 24;}

                         
                        input.seek(index77_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA77_0 = input.LA(1);

                         
                        int index77_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA77_0 >= 47 && LA77_0 <= 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA77_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA77_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA77_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA77_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA77_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA77_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA77_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA77_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( (LA77_0==45) ) {s = 10;}

                        else if ( (LA77_0==42) ) {s = 11;}

                        else if ( (LA77_0==43) ) {s = 12;}

                        else if ( (LA77_0==44) ) {s = 13;}

                        else if ( LA77_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA77_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA77_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA77_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( (LA77_0==EOF||(LA77_0>=RULE_STRING && LA77_0<=RULE_ID)||(LA77_0>=40 && LA77_0<=41)) ) {s = 18;}

                         
                        input.seek(index77_0);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA77_10 = input.LA(1);

                         
                        int index77_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA77_10==RULE_STRING) ) {s = 19;}

                        else if ( (LA77_10==RULE_ID) ) {s = 20;}

                        else if ( LA77_10 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 21;}

                         
                        input.seek(index77_10);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 77, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_40s = "\1\0\11\uffff\1\5\1\1\1\2\1\3\13\uffff\1\4}>";
    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);

    class DFA78 extends DFA {

        public DFA78(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 78;
            this.eot = dfa_33;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_40;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "11481:2: ( rule__Service__UnorderedGroup_3__2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA78_0 = input.LA(1);

                         
                        int index78_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA78_0 >= 47 && LA78_0 <= 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA78_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA78_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA78_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA78_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA78_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA78_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA78_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA78_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( (LA78_0==45) ) {s = 10;}

                        else if ( (LA78_0==42) ) {s = 11;}

                        else if ( (LA78_0==43) ) {s = 12;}

                        else if ( (LA78_0==44) ) {s = 13;}

                        else if ( LA78_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA78_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA78_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA78_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( (LA78_0==EOF||(LA78_0>=RULE_STRING && LA78_0<=RULE_ID)||(LA78_0>=40 && LA78_0<=41)) ) {s = 18;}

                         
                        input.seek(index78_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA78_11 = input.LA(1);

                         
                        int index78_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA78_11>=RULE_STRING && LA78_11<=RULE_ID)) ) {s = 18;}

                        else if ( LA78_11 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 22;}

                         
                        input.seek(index78_11);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA78_12 = input.LA(1);

                         
                        int index78_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA78_12 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 23;}

                        else if ( ((LA78_12>=RULE_STRING && LA78_12<=RULE_ID)) ) {s = 18;}

                         
                        input.seek(index78_12);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA78_13 = input.LA(1);

                         
                        int index78_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA78_13>=RULE_STRING && LA78_13<=RULE_ID)) ) {s = 18;}

                        else if ( LA78_13 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 24;}

                         
                        input.seek(index78_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA78_25 = input.LA(1);

                         
                        int index78_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 24;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 18;}

                         
                        input.seek(index78_25);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA78_10 = input.LA(1);

                         
                        int index78_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA78_10==RULE_STRING) ) {s = 19;}

                        else if ( (LA78_10==RULE_ID) ) {s = 20;}

                        else if ( LA78_10 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 21;}

                         
                        input.seek(index78_10);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 78, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_41s = "\1\5\11\uffff\4\5\6\uffff\2\56\3\uffff\1\0";
    static final String dfa_42s = "\1\75\11\uffff\4\70\6\uffff\2\56\3\uffff\1\0";
    static final String dfa_43s = "\1\uffff\11\1\4\uffff\4\1\1\2\1\1\2\uffff\3\1\1\uffff";
    static final String dfa_44s = "\1\1\11\uffff\1\4\1\0\1\2\1\3\13\uffff\1\5}>";
    static final String[] dfa_45s = {
            "\2\22\41\uffff\2\22\1\13\1\14\1\15\1\12\1\uffff\2\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\11\1\16\1\17\1\20\1\21",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\24\1\25\61\uffff\1\23",
            "\2\22\61\uffff\1\26",
            "\2\22\61\uffff\1\27",
            "\2\22\61\uffff\1\30",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\31",
            "\1\31",
            "",
            "",
            "",
            "\1\uffff"
    };
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[][] dfa_45 = unpackEncodedStringArray(dfa_45s);

    class DFA79 extends DFA {

        public DFA79(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 79;
            this.eot = dfa_33;
            this.eof = dfa_34;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "11493:2: ( rule__Service__UnorderedGroup_3__3 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA79_11 = input.LA(1);

                         
                        int index79_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA79_11>=RULE_STRING && LA79_11<=RULE_ID)) ) {s = 18;}

                        else if ( LA79_11 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 22;}

                         
                        input.seek(index79_11);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA79_0 = input.LA(1);

                         
                        int index79_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA79_0 >= 47 && LA79_0 <= 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA79_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA79_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA79_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA79_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA79_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA79_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA79_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA79_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( (LA79_0==45) ) {s = 10;}

                        else if ( (LA79_0==42) ) {s = 11;}

                        else if ( (LA79_0==43) ) {s = 12;}

                        else if ( (LA79_0==44) ) {s = 13;}

                        else if ( LA79_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA79_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA79_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA79_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( (LA79_0==EOF||(LA79_0>=RULE_STRING && LA79_0<=RULE_ID)||(LA79_0>=40 && LA79_0<=41)) ) {s = 18;}

                         
                        input.seek(index79_0);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA79_12 = input.LA(1);

                         
                        int index79_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA79_12 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 23;}

                        else if ( ((LA79_12>=RULE_STRING && LA79_12<=RULE_ID)) ) {s = 18;}

                         
                        input.seek(index79_12);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA79_13 = input.LA(1);

                         
                        int index79_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA79_13>=RULE_STRING && LA79_13<=RULE_ID)) ) {s = 18;}

                        else if ( LA79_13 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 24;}

                         
                        input.seek(index79_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA79_10 = input.LA(1);

                         
                        int index79_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA79_10 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 19;}

                        else if ( (LA79_10==RULE_STRING) ) {s = 20;}

                        else if ( (LA79_10==RULE_ID) ) {s = 21;}

                         
                        input.seek(index79_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA79_25 = input.LA(1);

                         
                        int index79_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 24;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 18;}

                         
                        input.seek(index79_25);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 79, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_46s = "\1\1\11\uffff\1\5\1\0\1\2\1\3\13\uffff\1\4}>";
    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);

    class DFA80 extends DFA {

        public DFA80(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 80;
            this.eot = dfa_33;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_46;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "11505:2: ( rule__Service__UnorderedGroup_3__4 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA80_11 = input.LA(1);

                         
                        int index80_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA80_11>=RULE_STRING && LA80_11<=RULE_ID)) ) {s = 18;}

                        else if ( LA80_11 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 22;}

                         
                        input.seek(index80_11);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA80_0 = input.LA(1);

                         
                        int index80_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA80_0 >= 47 && LA80_0 <= 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA80_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA80_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA80_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA80_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA80_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA80_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA80_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA80_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( (LA80_0==45) ) {s = 10;}

                        else if ( (LA80_0==42) ) {s = 11;}

                        else if ( (LA80_0==43) ) {s = 12;}

                        else if ( (LA80_0==44) ) {s = 13;}

                        else if ( LA80_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA80_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA80_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA80_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( (LA80_0==EOF||(LA80_0>=RULE_STRING && LA80_0<=RULE_ID)||(LA80_0>=40 && LA80_0<=41)) ) {s = 18;}

                         
                        input.seek(index80_0);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA80_12 = input.LA(1);

                         
                        int index80_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA80_12>=RULE_STRING && LA80_12<=RULE_ID)) ) {s = 18;}

                        else if ( LA80_12 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 23;}

                         
                        input.seek(index80_12);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA80_13 = input.LA(1);

                         
                        int index80_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA80_13>=RULE_STRING && LA80_13<=RULE_ID)) ) {s = 18;}

                        else if ( LA80_13 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 24;}

                         
                        input.seek(index80_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA80_25 = input.LA(1);

                         
                        int index80_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 24;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 18;}

                         
                        input.seek(index80_25);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA80_10 = input.LA(1);

                         
                        int index80_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA80_10==RULE_STRING) ) {s = 19;}

                        else if ( (LA80_10==RULE_ID) ) {s = 20;}

                        else if ( LA80_10 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 21;}

                         
                        input.seek(index80_10);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 80, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA81 extends DFA {

        public DFA81(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 81;
            this.eot = dfa_33;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_40;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "11517:2: ( rule__Service__UnorderedGroup_3__5 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA81_0 = input.LA(1);

                         
                        int index81_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA81_0 >= 47 && LA81_0 <= 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA81_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA81_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA81_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA81_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA81_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA81_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA81_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA81_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( (LA81_0==45) ) {s = 10;}

                        else if ( (LA81_0==42) ) {s = 11;}

                        else if ( (LA81_0==43) ) {s = 12;}

                        else if ( (LA81_0==44) ) {s = 13;}

                        else if ( LA81_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA81_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA81_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA81_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( (LA81_0==EOF||(LA81_0>=RULE_STRING && LA81_0<=RULE_ID)||(LA81_0>=40 && LA81_0<=41)) ) {s = 18;}

                         
                        input.seek(index81_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA81_11 = input.LA(1);

                         
                        int index81_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA81_11 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 22;}

                        else if ( ((LA81_11>=RULE_STRING && LA81_11<=RULE_ID)) ) {s = 18;}

                         
                        input.seek(index81_11);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA81_12 = input.LA(1);

                         
                        int index81_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA81_12>=RULE_STRING && LA81_12<=RULE_ID)) ) {s = 18;}

                        else if ( LA81_12 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 23;}

                         
                        input.seek(index81_12);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA81_13 = input.LA(1);

                         
                        int index81_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA81_13>=RULE_STRING && LA81_13<=RULE_ID)) ) {s = 18;}

                        else if ( LA81_13 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 24;}

                         
                        input.seek(index81_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA81_25 = input.LA(1);

                         
                        int index81_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 24;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 18;}

                         
                        input.seek(index81_25);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA81_10 = input.LA(1);

                         
                        int index81_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA81_10==RULE_STRING) ) {s = 19;}

                        else if ( (LA81_10==RULE_ID) ) {s = 20;}

                        else if ( LA81_10 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 21;}

                         
                        input.seek(index81_10);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 81, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_47s = "\1\2\11\uffff\1\5\1\0\1\1\1\3\13\uffff\1\4}>";
    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);

    class DFA82 extends DFA {

        public DFA82(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 82;
            this.eot = dfa_33;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_47;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "11529:2: ( rule__Service__UnorderedGroup_3__6 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA82_11 = input.LA(1);

                         
                        int index82_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA82_11 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 22;}

                        else if ( ((LA82_11>=RULE_STRING && LA82_11<=RULE_ID)) ) {s = 18;}

                         
                        input.seek(index82_11);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA82_12 = input.LA(1);

                         
                        int index82_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA82_12>=RULE_STRING && LA82_12<=RULE_ID)) ) {s = 18;}

                        else if ( LA82_12 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 23;}

                         
                        input.seek(index82_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA82_0 = input.LA(1);

                         
                        int index82_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA82_0 >= 47 && LA82_0 <= 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA82_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA82_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA82_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA82_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA82_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA82_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA82_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA82_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( (LA82_0==45) ) {s = 10;}

                        else if ( (LA82_0==42) ) {s = 11;}

                        else if ( (LA82_0==43) ) {s = 12;}

                        else if ( (LA82_0==44) ) {s = 13;}

                        else if ( LA82_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA82_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA82_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA82_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( (LA82_0==EOF||(LA82_0>=RULE_STRING && LA82_0<=RULE_ID)||(LA82_0>=40 && LA82_0<=41)) ) {s = 18;}

                         
                        input.seek(index82_0);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA82_13 = input.LA(1);

                         
                        int index82_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA82_13>=RULE_STRING && LA82_13<=RULE_ID)) ) {s = 18;}

                        else if ( LA82_13 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 24;}

                         
                        input.seek(index82_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA82_25 = input.LA(1);

                         
                        int index82_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 24;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 18;}

                         
                        input.seek(index82_25);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA82_10 = input.LA(1);

                         
                        int index82_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA82_10==RULE_STRING) ) {s = 19;}

                        else if ( (LA82_10==RULE_ID) ) {s = 20;}

                        else if ( LA82_10 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 21;}

                         
                        input.seek(index82_10);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 82, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_48s = "\1\3\11\uffff\1\5\1\0\1\1\1\2\13\uffff\1\4}>";
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);

    class DFA83 extends DFA {

        public DFA83(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 83;
            this.eot = dfa_33;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_48;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "11541:2: ( rule__Service__UnorderedGroup_3__7 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA83_11 = input.LA(1);

                         
                        int index83_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA83_11 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 22;}

                        else if ( ((LA83_11>=RULE_STRING && LA83_11<=RULE_ID)) ) {s = 18;}

                         
                        input.seek(index83_11);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA83_12 = input.LA(1);

                         
                        int index83_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA83_12>=RULE_STRING && LA83_12<=RULE_ID)) ) {s = 18;}

                        else if ( LA83_12 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 23;}

                         
                        input.seek(index83_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA83_13 = input.LA(1);

                         
                        int index83_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA83_13 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 24;}

                        else if ( ((LA83_13>=RULE_STRING && LA83_13<=RULE_ID)) ) {s = 18;}

                         
                        input.seek(index83_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA83_0 = input.LA(1);

                         
                        int index83_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA83_0 >= 47 && LA83_0 <= 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA83_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA83_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA83_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA83_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA83_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA83_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA83_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA83_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( (LA83_0==45) ) {s = 10;}

                        else if ( (LA83_0==42) ) {s = 11;}

                        else if ( (LA83_0==43) ) {s = 12;}

                        else if ( (LA83_0==44) ) {s = 13;}

                        else if ( LA83_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA83_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA83_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA83_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( (LA83_0==EOF||(LA83_0>=RULE_STRING && LA83_0<=RULE_ID)||(LA83_0>=40 && LA83_0<=41)) ) {s = 18;}

                         
                        input.seek(index83_0);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA83_25 = input.LA(1);

                         
                        int index83_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 24;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 18;}

                         
                        input.seek(index83_25);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA83_10 = input.LA(1);

                         
                        int index83_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA83_10==RULE_STRING) ) {s = 19;}

                        else if ( (LA83_10==RULE_ID) ) {s = 20;}

                        else if ( LA83_10 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 21;}

                         
                        input.seek(index83_10);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 83, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_49s = "\1\0\11\uffff\1\5\1\2\1\3\1\4\13\uffff\1\1}>";
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);

    class DFA84 extends DFA {

        public DFA84(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 84;
            this.eot = dfa_33;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_49;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "11553:2: ( rule__Service__UnorderedGroup_3__8 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA84_0 = input.LA(1);

                         
                        int index84_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA84_0 >= 47 && LA84_0 <= 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA84_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA84_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA84_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA84_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA84_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA84_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA84_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA84_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( (LA84_0==45) ) {s = 10;}

                        else if ( (LA84_0==42) ) {s = 11;}

                        else if ( (LA84_0==43) ) {s = 12;}

                        else if ( (LA84_0==44) ) {s = 13;}

                        else if ( LA84_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA84_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA84_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA84_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( (LA84_0==EOF||(LA84_0>=RULE_STRING && LA84_0<=RULE_ID)||(LA84_0>=40 && LA84_0<=41)) ) {s = 18;}

                         
                        input.seek(index84_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA84_25 = input.LA(1);

                         
                        int index84_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 24;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 18;}

                         
                        input.seek(index84_25);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA84_11 = input.LA(1);

                         
                        int index84_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA84_11 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 22;}

                        else if ( ((LA84_11>=RULE_STRING && LA84_11<=RULE_ID)) ) {s = 18;}

                         
                        input.seek(index84_11);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA84_12 = input.LA(1);

                         
                        int index84_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA84_12>=RULE_STRING && LA84_12<=RULE_ID)) ) {s = 18;}

                        else if ( LA84_12 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 23;}

                         
                        input.seek(index84_12);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA84_13 = input.LA(1);

                         
                        int index84_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA84_13>=RULE_STRING && LA84_13<=RULE_ID)) ) {s = 18;}

                        else if ( LA84_13 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 24;}

                         
                        input.seek(index84_13);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA84_10 = input.LA(1);

                         
                        int index84_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA84_10==RULE_STRING) ) {s = 19;}

                        else if ( (LA84_10==RULE_ID) ) {s = 20;}

                        else if ( LA84_10 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 21;}

                         
                        input.seek(index84_10);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 84, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_50s = "\1\4\11\uffff\1\5\1\0\1\1\1\2\13\uffff\1\3}>";
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);

    class DFA85 extends DFA {

        public DFA85(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 85;
            this.eot = dfa_33;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_50;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "11565:2: ( rule__Service__UnorderedGroup_3__9 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA85_11 = input.LA(1);

                         
                        int index85_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA85_11>=RULE_STRING && LA85_11<=RULE_ID)) ) {s = 18;}

                        else if ( LA85_11 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 22;}

                         
                        input.seek(index85_11);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA85_12 = input.LA(1);

                         
                        int index85_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA85_12>=RULE_STRING && LA85_12<=RULE_ID)) ) {s = 18;}

                        else if ( LA85_12 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 23;}

                         
                        input.seek(index85_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA85_13 = input.LA(1);

                         
                        int index85_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA85_13>=RULE_STRING && LA85_13<=RULE_ID)) ) {s = 18;}

                        else if ( LA85_13 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 24;}

                         
                        input.seek(index85_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA85_25 = input.LA(1);

                         
                        int index85_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 24;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 18;}

                         
                        input.seek(index85_25);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA85_0 = input.LA(1);

                         
                        int index85_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA85_0 >= 47 && LA85_0 <= 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA85_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA85_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA85_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA85_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA85_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA85_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA85_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA85_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( (LA85_0==45) ) {s = 10;}

                        else if ( (LA85_0==42) ) {s = 11;}

                        else if ( (LA85_0==43) ) {s = 12;}

                        else if ( (LA85_0==44) ) {s = 13;}

                        else if ( LA85_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA85_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA85_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA85_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( (LA85_0==EOF||(LA85_0>=RULE_STRING && LA85_0<=RULE_ID)||(LA85_0>=40 && LA85_0<=41)) ) {s = 18;}

                         
                        input.seek(index85_0);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA85_10 = input.LA(1);

                         
                        int index85_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA85_10==RULE_STRING) ) {s = 19;}

                        else if ( (LA85_10==RULE_ID) ) {s = 20;}

                        else if ( LA85_10 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 21;}

                         
                        input.seek(index85_10);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 85, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA86 extends DFA {

        public DFA86(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 86;
            this.eot = dfa_33;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_50;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "11577:2: ( rule__Service__UnorderedGroup_3__10 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA86_11 = input.LA(1);

                         
                        int index86_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA86_11>=RULE_STRING && LA86_11<=RULE_ID)) ) {s = 18;}

                        else if ( LA86_11 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 22;}

                         
                        input.seek(index86_11);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA86_12 = input.LA(1);

                         
                        int index86_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA86_12 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 23;}

                        else if ( ((LA86_12>=RULE_STRING && LA86_12<=RULE_ID)) ) {s = 18;}

                         
                        input.seek(index86_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA86_13 = input.LA(1);

                         
                        int index86_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA86_13>=RULE_STRING && LA86_13<=RULE_ID)) ) {s = 18;}

                        else if ( LA86_13 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 24;}

                         
                        input.seek(index86_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA86_25 = input.LA(1);

                         
                        int index86_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 24;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 18;}

                         
                        input.seek(index86_25);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA86_0 = input.LA(1);

                         
                        int index86_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA86_0 >= 47 && LA86_0 <= 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA86_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA86_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA86_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA86_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA86_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA86_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA86_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA86_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( (LA86_0==45) ) {s = 10;}

                        else if ( (LA86_0==42) ) {s = 11;}

                        else if ( (LA86_0==43) ) {s = 12;}

                        else if ( (LA86_0==44) ) {s = 13;}

                        else if ( LA86_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA86_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA86_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA86_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( (LA86_0==EOF||(LA86_0>=RULE_STRING && LA86_0<=RULE_ID)||(LA86_0>=40 && LA86_0<=41)) ) {s = 18;}

                         
                        input.seek(index86_0);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA86_10 = input.LA(1);

                         
                        int index86_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA86_10==RULE_STRING) ) {s = 19;}

                        else if ( (LA86_10==RULE_ID) ) {s = 20;}

                        else if ( LA86_10 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 21;}

                         
                        input.seek(index86_10);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 86, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA87 extends DFA {

        public DFA87(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 87;
            this.eot = dfa_33;
            this.eof = dfa_34;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_38;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "11589:2: ( rule__Service__UnorderedGroup_3__11 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA87_25 = input.LA(1);

                         
                        int index87_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 24;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 18;}

                         
                        input.seek(index87_25);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA87_11 = input.LA(1);

                         
                        int index87_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA87_11>=RULE_STRING && LA87_11<=RULE_ID)) ) {s = 18;}

                        else if ( LA87_11 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 22;}

                         
                        input.seek(index87_11);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA87_12 = input.LA(1);

                         
                        int index87_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA87_12 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 23;}

                        else if ( ((LA87_12>=RULE_STRING && LA87_12<=RULE_ID)) ) {s = 18;}

                         
                        input.seek(index87_12);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA87_13 = input.LA(1);

                         
                        int index87_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA87_13>=RULE_STRING && LA87_13<=RULE_ID)) ) {s = 18;}

                        else if ( LA87_13 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 24;}

                         
                        input.seek(index87_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA87_0 = input.LA(1);

                         
                        int index87_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA87_0 >= 47 && LA87_0 <= 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA87_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA87_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA87_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA87_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA87_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA87_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA87_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA87_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( (LA87_0==45) ) {s = 10;}

                        else if ( (LA87_0==42) ) {s = 11;}

                        else if ( (LA87_0==43) ) {s = 12;}

                        else if ( (LA87_0==44) ) {s = 13;}

                        else if ( LA87_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA87_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA87_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA87_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( (LA87_0==EOF||(LA87_0>=RULE_STRING && LA87_0<=RULE_ID)||(LA87_0>=40 && LA87_0<=41)) ) {s = 18;}

                         
                        input.seek(index87_0);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA87_10 = input.LA(1);

                         
                        int index87_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA87_10 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 19;}

                        else if ( (LA87_10==RULE_STRING) ) {s = 20;}

                        else if ( (LA87_10==RULE_ID) ) {s = 21;}

                         
                        input.seek(index87_10);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 87, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_51s = "\1\5\11\uffff\1\4\1\0\1\1\1\2\13\uffff\1\3}>";
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);

    class DFA88 extends DFA {

        public DFA88(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 88;
            this.eot = dfa_33;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_51;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "11601:2: ( rule__Service__UnorderedGroup_3__12 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA88_11 = input.LA(1);

                         
                        int index88_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA88_11>=RULE_STRING && LA88_11<=RULE_ID)) ) {s = 18;}

                        else if ( LA88_11 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 22;}

                         
                        input.seek(index88_11);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA88_12 = input.LA(1);

                         
                        int index88_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA88_12>=RULE_STRING && LA88_12<=RULE_ID)) ) {s = 18;}

                        else if ( LA88_12 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 23;}

                         
                        input.seek(index88_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA88_13 = input.LA(1);

                         
                        int index88_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA88_13>=RULE_STRING && LA88_13<=RULE_ID)) ) {s = 18;}

                        else if ( LA88_13 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 24;}

                         
                        input.seek(index88_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA88_25 = input.LA(1);

                         
                        int index88_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 24;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 18;}

                         
                        input.seek(index88_25);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA88_10 = input.LA(1);

                         
                        int index88_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA88_10==RULE_STRING) ) {s = 19;}

                        else if ( (LA88_10==RULE_ID) ) {s = 20;}

                        else if ( LA88_10 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 21;}

                         
                        input.seek(index88_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA88_0 = input.LA(1);

                         
                        int index88_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA88_0 >= 47 && LA88_0 <= 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA88_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA88_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA88_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA88_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA88_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA88_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA88_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA88_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( (LA88_0==45) ) {s = 10;}

                        else if ( (LA88_0==42) ) {s = 11;}

                        else if ( (LA88_0==43) ) {s = 12;}

                        else if ( (LA88_0==44) ) {s = 13;}

                        else if ( LA88_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA88_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA88_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA88_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( (LA88_0==EOF||(LA88_0>=RULE_STRING && LA88_0<=RULE_ID)||(LA88_0>=40 && LA88_0<=41)) ) {s = 18;}

                         
                        input.seek(index88_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 88, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA89 extends DFA {

        public DFA89(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 89;
            this.eot = dfa_33;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_50;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "11613:2: ( rule__Service__UnorderedGroup_3__13 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA89_11 = input.LA(1);

                         
                        int index89_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA89_11 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 22;}

                        else if ( ((LA89_11>=RULE_STRING && LA89_11<=RULE_ID)) ) {s = 18;}

                         
                        input.seek(index89_11);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA89_12 = input.LA(1);

                         
                        int index89_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA89_12>=RULE_STRING && LA89_12<=RULE_ID)) ) {s = 18;}

                        else if ( LA89_12 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 23;}

                         
                        input.seek(index89_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA89_13 = input.LA(1);

                         
                        int index89_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA89_13>=RULE_STRING && LA89_13<=RULE_ID)) ) {s = 18;}

                        else if ( LA89_13 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 24;}

                         
                        input.seek(index89_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA89_25 = input.LA(1);

                         
                        int index89_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 24;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 18;}

                         
                        input.seek(index89_25);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA89_0 = input.LA(1);

                         
                        int index89_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA89_0 >= 47 && LA89_0 <= 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA89_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA89_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA89_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA89_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA89_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA89_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA89_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA89_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( (LA89_0==45) ) {s = 10;}

                        else if ( (LA89_0==42) ) {s = 11;}

                        else if ( (LA89_0==43) ) {s = 12;}

                        else if ( (LA89_0==44) ) {s = 13;}

                        else if ( LA89_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA89_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA89_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA89_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( (LA89_0==EOF||(LA89_0>=RULE_STRING && LA89_0<=RULE_ID)||(LA89_0>=40 && LA89_0<=41)) ) {s = 18;}

                         
                        input.seek(index89_0);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA89_10 = input.LA(1);

                         
                        int index89_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA89_10==RULE_STRING) ) {s = 19;}

                        else if ( (LA89_10==RULE_ID) ) {s = 20;}

                        else if ( LA89_10 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 21;}

                         
                        input.seek(index89_10);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 89, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_52s = "\1\4\11\uffff\1\3\1\0\1\1\1\2\13\uffff\1\5}>";
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);

    class DFA90 extends DFA {

        public DFA90(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 90;
            this.eot = dfa_33;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_52;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "11625:2: ( rule__Service__UnorderedGroup_3__14 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA90_11 = input.LA(1);

                         
                        int index90_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA90_11 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 22;}

                        else if ( ((LA90_11>=RULE_STRING && LA90_11<=RULE_ID)) ) {s = 18;}

                         
                        input.seek(index90_11);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA90_12 = input.LA(1);

                         
                        int index90_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA90_12>=RULE_STRING && LA90_12<=RULE_ID)) ) {s = 18;}

                        else if ( LA90_12 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 23;}

                         
                        input.seek(index90_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA90_13 = input.LA(1);

                         
                        int index90_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA90_13>=RULE_STRING && LA90_13<=RULE_ID)) ) {s = 18;}

                        else if ( LA90_13 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 24;}

                         
                        input.seek(index90_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA90_10 = input.LA(1);

                         
                        int index90_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA90_10==RULE_STRING) ) {s = 19;}

                        else if ( (LA90_10==RULE_ID) ) {s = 20;}

                        else if ( LA90_10 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 21;}

                         
                        input.seek(index90_10);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA90_0 = input.LA(1);

                         
                        int index90_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA90_0 >= 47 && LA90_0 <= 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA90_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA90_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA90_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA90_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA90_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA90_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA90_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA90_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( (LA90_0==45) ) {s = 10;}

                        else if ( (LA90_0==42) ) {s = 11;}

                        else if ( (LA90_0==43) ) {s = 12;}

                        else if ( (LA90_0==44) ) {s = 13;}

                        else if ( LA90_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA90_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA90_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA90_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( (LA90_0==EOF||(LA90_0>=RULE_STRING && LA90_0<=RULE_ID)||(LA90_0>=40 && LA90_0<=41)) ) {s = 18;}

                         
                        input.seek(index90_0);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA90_25 = input.LA(1);

                         
                        int index90_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 24;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 18;}

                         
                        input.seek(index90_25);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 90, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_53s = "\1\0\11\uffff\1\4\1\1\1\2\1\3\13\uffff\1\5}>";
    static final short[] dfa_53 = DFA.unpackEncodedString(dfa_53s);

    class DFA91 extends DFA {

        public DFA91(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 91;
            this.eot = dfa_33;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_53;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "11637:2: ( rule__Service__UnorderedGroup_3__15 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA91_0 = input.LA(1);

                         
                        int index91_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA91_0 >= 47 && LA91_0 <= 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA91_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA91_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA91_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA91_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA91_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA91_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA91_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA91_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( (LA91_0==45) ) {s = 10;}

                        else if ( (LA91_0==42) ) {s = 11;}

                        else if ( (LA91_0==43) ) {s = 12;}

                        else if ( (LA91_0==44) ) {s = 13;}

                        else if ( LA91_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA91_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA91_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA91_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( (LA91_0==EOF||(LA91_0>=RULE_STRING && LA91_0<=RULE_ID)||(LA91_0>=40 && LA91_0<=41)) ) {s = 18;}

                         
                        input.seek(index91_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA91_11 = input.LA(1);

                         
                        int index91_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA91_11 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 22;}

                        else if ( ((LA91_11>=RULE_STRING && LA91_11<=RULE_ID)) ) {s = 18;}

                         
                        input.seek(index91_11);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA91_12 = input.LA(1);

                         
                        int index91_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA91_12>=RULE_STRING && LA91_12<=RULE_ID)) ) {s = 18;}

                        else if ( LA91_12 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 23;}

                         
                        input.seek(index91_12);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA91_13 = input.LA(1);

                         
                        int index91_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA91_13 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 24;}

                        else if ( ((LA91_13>=RULE_STRING && LA91_13<=RULE_ID)) ) {s = 18;}

                         
                        input.seek(index91_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA91_10 = input.LA(1);

                         
                        int index91_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA91_10==RULE_STRING) ) {s = 19;}

                        else if ( (LA91_10==RULE_ID) ) {s = 20;}

                        else if ( LA91_10 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 21;}

                         
                        input.seek(index91_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA91_25 = input.LA(1);

                         
                        int index91_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 24;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 18;}

                         
                        input.seek(index91_25);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 91, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA92 extends DFA {

        public DFA92(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 92;
            this.eot = dfa_33;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_51;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "11649:2: ( rule__Service__UnorderedGroup_3__16 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA92_11 = input.LA(1);

                         
                        int index92_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA92_11 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 22;}

                        else if ( ((LA92_11>=RULE_STRING && LA92_11<=RULE_ID)) ) {s = 18;}

                         
                        input.seek(index92_11);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA92_12 = input.LA(1);

                         
                        int index92_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA92_12>=RULE_STRING && LA92_12<=RULE_ID)) ) {s = 18;}

                        else if ( LA92_12 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 23;}

                         
                        input.seek(index92_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA92_13 = input.LA(1);

                         
                        int index92_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA92_13>=RULE_STRING && LA92_13<=RULE_ID)) ) {s = 18;}

                        else if ( LA92_13 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 24;}

                         
                        input.seek(index92_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA92_25 = input.LA(1);

                         
                        int index92_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 24;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 18;}

                         
                        input.seek(index92_25);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA92_10 = input.LA(1);

                         
                        int index92_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA92_10==RULE_STRING) ) {s = 19;}

                        else if ( (LA92_10==RULE_ID) ) {s = 20;}

                        else if ( LA92_10 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 21;}

                         
                        input.seek(index92_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA92_0 = input.LA(1);

                         
                        int index92_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA92_0 >= 47 && LA92_0 <= 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA92_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA92_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA92_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA92_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA92_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA92_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA92_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA92_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( (LA92_0==45) ) {s = 10;}

                        else if ( (LA92_0==42) ) {s = 11;}

                        else if ( (LA92_0==43) ) {s = 12;}

                        else if ( (LA92_0==44) ) {s = 13;}

                        else if ( LA92_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA92_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA92_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA92_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( (LA92_0==EOF||(LA92_0>=RULE_STRING && LA92_0<=RULE_ID)||(LA92_0>=40 && LA92_0<=41)) ) {s = 18;}

                         
                        input.seek(index92_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 92, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_54s = "\13\uffff";
    static final String dfa_55s = "\1\10\12\uffff";
    static final String dfa_56s = "\1\5\3\uffff\1\22\4\uffff\2\0";
    static final String dfa_57s = "\1\115\3\uffff\1\23\4\uffff\2\0";
    static final String dfa_58s = "\1\uffff\3\1\1\uffff\3\1\1\2\2\uffff";
    static final String dfa_59s = "\1\0\10\uffff\1\1\1\2}>";
    static final String[] dfa_60s = {
            "\2\10\41\uffff\6\10\1\uffff\7\10\1\4\7\10\10\uffff\1\1\1\2\1\3\1\5\1\uffff\1\6\1\uffff\1\7",
            "",
            "",
            "",
            "\1\11\1\12",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff"
    };

    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final char[] dfa_56 = DFA.unpackEncodedStringToUnsignedChars(dfa_56s);
    static final char[] dfa_57 = DFA.unpackEncodedStringToUnsignedChars(dfa_57s);
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final short[][] dfa_60 = unpackEncodedStringArray(dfa_60s);

    class DFA99 extends DFA {

        public DFA99(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 99;
            this.eot = dfa_54;
            this.eof = dfa_55;
            this.min = dfa_56;
            this.max = dfa_57;
            this.accept = dfa_58;
            this.special = dfa_59;
            this.transition = dfa_60;
        }
        public String getDescription() {
            return "11944:2: ( rule__VolumeConnector_long__UnorderedGroup_1__1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA99_0 = input.LA(1);

                         
                        int index99_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA99_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 0) ) {s = 1;}

                        else if ( LA99_0 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 1) ) {s = 2;}

                        else if ( LA99_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 2) ) {s = 3;}

                        else if ( (LA99_0==54) ) {s = 4;}

                        else if ( LA99_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 4) ) {s = 5;}

                        else if ( LA99_0 == 75 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 5) ) {s = 6;}

                        else if ( LA99_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 6) ) {s = 7;}

                        else if ( (LA99_0==EOF||(LA99_0>=RULE_STRING && LA99_0<=RULE_ID)||(LA99_0>=40 && LA99_0<=45)||(LA99_0>=47 && LA99_0<=53)||(LA99_0>=55 && LA99_0<=61)) ) {s = 8;}

                         
                        input.seek(index99_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA99_9 = input.LA(1);

                         
                        int index99_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index99_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA99_10 = input.LA(1);

                         
                        int index99_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index99_10);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 99, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA100 extends DFA {

        public DFA100(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 100;
            this.eot = dfa_54;
            this.eof = dfa_55;
            this.min = dfa_56;
            this.max = dfa_57;
            this.accept = dfa_58;
            this.special = dfa_59;
            this.transition = dfa_60;
        }
        public String getDescription() {
            return "11956:2: ( rule__VolumeConnector_long__UnorderedGroup_1__2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA100_0 = input.LA(1);

                         
                        int index100_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA100_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 0) ) {s = 1;}

                        else if ( LA100_0 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 1) ) {s = 2;}

                        else if ( LA100_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 2) ) {s = 3;}

                        else if ( (LA100_0==54) ) {s = 4;}

                        else if ( LA100_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 4) ) {s = 5;}

                        else if ( LA100_0 == 75 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 5) ) {s = 6;}

                        else if ( LA100_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 6) ) {s = 7;}

                        else if ( (LA100_0==EOF||(LA100_0>=RULE_STRING && LA100_0<=RULE_ID)||(LA100_0>=40 && LA100_0<=45)||(LA100_0>=47 && LA100_0<=53)||(LA100_0>=55 && LA100_0<=61)) ) {s = 8;}

                         
                        input.seek(index100_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA100_9 = input.LA(1);

                         
                        int index100_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index100_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA100_10 = input.LA(1);

                         
                        int index100_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index100_10);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 100, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA101 extends DFA {

        public DFA101(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 101;
            this.eot = dfa_54;
            this.eof = dfa_55;
            this.min = dfa_56;
            this.max = dfa_57;
            this.accept = dfa_58;
            this.special = dfa_59;
            this.transition = dfa_60;
        }
        public String getDescription() {
            return "11968:2: ( rule__VolumeConnector_long__UnorderedGroup_1__3 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA101_0 = input.LA(1);

                         
                        int index101_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA101_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 0) ) {s = 1;}

                        else if ( LA101_0 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 1) ) {s = 2;}

                        else if ( LA101_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 2) ) {s = 3;}

                        else if ( (LA101_0==54) ) {s = 4;}

                        else if ( LA101_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 4) ) {s = 5;}

                        else if ( LA101_0 == 75 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 5) ) {s = 6;}

                        else if ( LA101_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 6) ) {s = 7;}

                        else if ( (LA101_0==EOF||(LA101_0>=RULE_STRING && LA101_0<=RULE_ID)||(LA101_0>=40 && LA101_0<=45)||(LA101_0>=47 && LA101_0<=53)||(LA101_0>=55 && LA101_0<=61)) ) {s = 8;}

                         
                        input.seek(index101_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA101_9 = input.LA(1);

                         
                        int index101_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index101_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA101_10 = input.LA(1);

                         
                        int index101_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index101_10);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 101, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_61s = "\1\0\10\uffff\1\2\1\1}>";
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);

    class DFA102 extends DFA {

        public DFA102(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 102;
            this.eot = dfa_54;
            this.eof = dfa_55;
            this.min = dfa_56;
            this.max = dfa_57;
            this.accept = dfa_58;
            this.special = dfa_61;
            this.transition = dfa_60;
        }
        public String getDescription() {
            return "11980:2: ( rule__VolumeConnector_long__UnorderedGroup_1__4 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA102_0 = input.LA(1);

                         
                        int index102_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA102_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 0) ) {s = 1;}

                        else if ( LA102_0 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 1) ) {s = 2;}

                        else if ( LA102_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 2) ) {s = 3;}

                        else if ( (LA102_0==54) ) {s = 4;}

                        else if ( LA102_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 4) ) {s = 5;}

                        else if ( LA102_0 == 75 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 5) ) {s = 6;}

                        else if ( LA102_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 6) ) {s = 7;}

                        else if ( (LA102_0==EOF||(LA102_0>=RULE_STRING && LA102_0<=RULE_ID)||(LA102_0>=40 && LA102_0<=45)||(LA102_0>=47 && LA102_0<=53)||(LA102_0>=55 && LA102_0<=61)) ) {s = 8;}

                         
                        input.seek(index102_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA102_10 = input.LA(1);

                         
                        int index102_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index102_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA102_9 = input.LA(1);

                         
                        int index102_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index102_9);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 102, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_62s = "\1\2\10\uffff\1\1\1\0}>";
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);

    class DFA103 extends DFA {

        public DFA103(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 103;
            this.eot = dfa_54;
            this.eof = dfa_55;
            this.min = dfa_56;
            this.max = dfa_57;
            this.accept = dfa_58;
            this.special = dfa_62;
            this.transition = dfa_60;
        }
        public String getDescription() {
            return "11992:2: ( rule__VolumeConnector_long__UnorderedGroup_1__5 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA103_10 = input.LA(1);

                         
                        int index103_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index103_10);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA103_9 = input.LA(1);

                         
                        int index103_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index103_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA103_0 = input.LA(1);

                         
                        int index103_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA103_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 0) ) {s = 1;}

                        else if ( LA103_0 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 1) ) {s = 2;}

                        else if ( LA103_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 2) ) {s = 3;}

                        else if ( (LA103_0==54) ) {s = 4;}

                        else if ( LA103_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 4) ) {s = 5;}

                        else if ( LA103_0 == 75 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 5) ) {s = 6;}

                        else if ( LA103_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 6) ) {s = 7;}

                        else if ( (LA103_0==EOF||(LA103_0>=RULE_STRING && LA103_0<=RULE_ID)||(LA103_0>=40 && LA103_0<=45)||(LA103_0>=47 && LA103_0<=53)||(LA103_0>=55 && LA103_0<=61)) ) {s = 8;}

                         
                        input.seek(index103_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 103, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_63s = "\1\2\10\uffff\1\0\1\1}>";
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);

    class DFA104 extends DFA {

        public DFA104(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 104;
            this.eot = dfa_54;
            this.eof = dfa_55;
            this.min = dfa_56;
            this.max = dfa_57;
            this.accept = dfa_58;
            this.special = dfa_63;
            this.transition = dfa_60;
        }
        public String getDescription() {
            return "12004:2: ( rule__VolumeConnector_long__UnorderedGroup_1__6 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA104_9 = input.LA(1);

                         
                        int index104_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index104_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA104_10 = input.LA(1);

                         
                        int index104_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index104_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA104_0 = input.LA(1);

                         
                        int index104_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA104_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 0) ) {s = 1;}

                        else if ( LA104_0 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 1) ) {s = 2;}

                        else if ( LA104_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 2) ) {s = 3;}

                        else if ( (LA104_0==54) ) {s = 4;}

                        else if ( LA104_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 4) ) {s = 5;}

                        else if ( LA104_0 == 75 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 5) ) {s = 6;}

                        else if ( LA104_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 6) ) {s = 7;}

                        else if ( (LA104_0==EOF||(LA104_0>=RULE_STRING && LA104_0<=RULE_ID)||(LA104_0>=40 && LA104_0<=45)||(LA104_0>=47 && LA104_0<=53)||(LA104_0>=55 && LA104_0<=61)) ) {s = 8;}

                         
                        input.seek(index104_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 104, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_64s = "\1\12\12\uffff";
    static final String dfa_65s = "\1\5\12\uffff";
    static final String dfa_66s = "\1\134\12\uffff";
    static final String dfa_67s = "\1\uffff\11\1\1\2";
    static final String dfa_68s = "\1\0\12\uffff}>";
    static final String[] dfa_69s = {
            "\2\12\41\uffff\6\12\46\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final char[] dfa_65 = DFA.unpackEncodedStringToUnsignedChars(dfa_65s);
    static final char[] dfa_66 = DFA.unpackEncodedStringToUnsignedChars(dfa_66s);
    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_68s);
    static final short[][] dfa_69 = unpackEncodedStringArray(dfa_69s);

    class DFA115 extends DFA {

        public DFA115(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 115;
            this.eot = dfa_54;
            this.eof = dfa_64;
            this.min = dfa_65;
            this.max = dfa_66;
            this.accept = dfa_67;
            this.special = dfa_68;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "12356:2: ( rule__Network__UnorderedGroup_3_1__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA115_0 = input.LA(1);

                         
                        int index115_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA115_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA115_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA115_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA115_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA115_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA115_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA115_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA115_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA115_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA115_0==EOF||(LA115_0>=RULE_STRING && LA115_0<=RULE_ID)||(LA115_0>=40 && LA115_0<=45)) ) {s = 10;}

                         
                        input.seek(index115_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 115, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_70s = "\12\uffff";
    static final String dfa_71s = "\1\124\11\uffff";
    static final String dfa_72s = "\1\134\11\uffff";
    static final String dfa_73s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11";
    static final String dfa_74s = "\1\0\11\uffff}>";
    static final String[] dfa_75s = {
            "\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final char[] dfa_71 = DFA.unpackEncodedStringToUnsignedChars(dfa_71s);
    static final char[] dfa_72 = DFA.unpackEncodedStringToUnsignedChars(dfa_72s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final short[] dfa_74 = DFA.unpackEncodedString(dfa_74s);
    static final short[][] dfa_75 = unpackEncodedStringArray(dfa_75s);

    class DFA116 extends DFA {

        public DFA116(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 116;
            this.eot = dfa_70;
            this.eof = dfa_70;
            this.min = dfa_71;
            this.max = dfa_72;
            this.accept = dfa_73;
            this.special = dfa_74;
            this.transition = dfa_75;
        }
        public String getDescription() {
            return "12370:3: ( ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA116_0 = input.LA(1);

                         
                        int index116_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA116_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA116_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA116_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA116_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA116_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA116_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA116_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA116_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA116_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                         
                        input.seek(index116_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 116, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA117 extends DFA {

        public DFA117(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 117;
            this.eot = dfa_54;
            this.eof = dfa_64;
            this.min = dfa_65;
            this.max = dfa_66;
            this.accept = dfa_67;
            this.special = dfa_68;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "12520:2: ( rule__Network__UnorderedGroup_3_1__1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA117_0 = input.LA(1);

                         
                        int index117_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA117_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA117_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA117_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA117_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA117_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA117_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA117_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA117_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA117_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA117_0==EOF||(LA117_0>=RULE_STRING && LA117_0<=RULE_ID)||(LA117_0>=40 && LA117_0<=45)) ) {s = 10;}

                         
                        input.seek(index117_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 117, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA118 extends DFA {

        public DFA118(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 118;
            this.eot = dfa_54;
            this.eof = dfa_64;
            this.min = dfa_65;
            this.max = dfa_66;
            this.accept = dfa_67;
            this.special = dfa_68;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "12532:2: ( rule__Network__UnorderedGroup_3_1__2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA118_0 = input.LA(1);

                         
                        int index118_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA118_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA118_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA118_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA118_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA118_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA118_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA118_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA118_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA118_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA118_0==EOF||(LA118_0>=RULE_STRING && LA118_0<=RULE_ID)||(LA118_0>=40 && LA118_0<=45)) ) {s = 10;}

                         
                        input.seek(index118_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 118, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA119 extends DFA {

        public DFA119(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 119;
            this.eot = dfa_54;
            this.eof = dfa_64;
            this.min = dfa_65;
            this.max = dfa_66;
            this.accept = dfa_67;
            this.special = dfa_68;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "12544:2: ( rule__Network__UnorderedGroup_3_1__3 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA119_0 = input.LA(1);

                         
                        int index119_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA119_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA119_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA119_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA119_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA119_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA119_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA119_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA119_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA119_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA119_0==EOF||(LA119_0>=RULE_STRING && LA119_0<=RULE_ID)||(LA119_0>=40 && LA119_0<=45)) ) {s = 10;}

                         
                        input.seek(index119_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 119, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA120 extends DFA {

        public DFA120(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 120;
            this.eot = dfa_54;
            this.eof = dfa_64;
            this.min = dfa_65;
            this.max = dfa_66;
            this.accept = dfa_67;
            this.special = dfa_68;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "12556:2: ( rule__Network__UnorderedGroup_3_1__4 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA120_0 = input.LA(1);

                         
                        int index120_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA120_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA120_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA120_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA120_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA120_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA120_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA120_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA120_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA120_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA120_0==EOF||(LA120_0>=RULE_STRING && LA120_0<=RULE_ID)||(LA120_0>=40 && LA120_0<=45)) ) {s = 10;}

                         
                        input.seek(index120_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 120, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA121 extends DFA {

        public DFA121(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 121;
            this.eot = dfa_54;
            this.eof = dfa_64;
            this.min = dfa_65;
            this.max = dfa_66;
            this.accept = dfa_67;
            this.special = dfa_68;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "12568:2: ( rule__Network__UnorderedGroup_3_1__5 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA121_0 = input.LA(1);

                         
                        int index121_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA121_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA121_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA121_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA121_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA121_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA121_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA121_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA121_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA121_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA121_0==EOF||(LA121_0>=RULE_STRING && LA121_0<=RULE_ID)||(LA121_0>=40 && LA121_0<=45)) ) {s = 10;}

                         
                        input.seek(index121_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 121, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA122 extends DFA {

        public DFA122(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 122;
            this.eot = dfa_54;
            this.eof = dfa_64;
            this.min = dfa_65;
            this.max = dfa_66;
            this.accept = dfa_67;
            this.special = dfa_68;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "12580:2: ( rule__Network__UnorderedGroup_3_1__6 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA122_0 = input.LA(1);

                         
                        int index122_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA122_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA122_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA122_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA122_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA122_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA122_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA122_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA122_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA122_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA122_0==EOF||(LA122_0>=RULE_STRING && LA122_0<=RULE_ID)||(LA122_0>=40 && LA122_0<=45)) ) {s = 10;}

                         
                        input.seek(index122_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 122, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA123 extends DFA {

        public DFA123(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 123;
            this.eot = dfa_54;
            this.eof = dfa_64;
            this.min = dfa_65;
            this.max = dfa_66;
            this.accept = dfa_67;
            this.special = dfa_68;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "12592:2: ( rule__Network__UnorderedGroup_3_1__7 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA123_0 = input.LA(1);

                         
                        int index123_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA123_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA123_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA123_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA123_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA123_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA123_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA123_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA123_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA123_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA123_0==EOF||(LA123_0>=RULE_STRING && LA123_0<=RULE_ID)||(LA123_0>=40 && LA123_0<=45)) ) {s = 10;}

                         
                        input.seek(index123_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 123, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA124 extends DFA {

        public DFA124(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 124;
            this.eot = dfa_54;
            this.eof = dfa_64;
            this.min = dfa_65;
            this.max = dfa_66;
            this.accept = dfa_67;
            this.special = dfa_68;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "12604:2: ( rule__Network__UnorderedGroup_3_1__8 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA124_0 = input.LA(1);

                         
                        int index124_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA124_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA124_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA124_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA124_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA124_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA124_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA124_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA124_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA124_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA124_0==EOF||(LA124_0>=RULE_STRING && LA124_0<=RULE_ID)||(LA124_0>=40 && LA124_0<=45)) ) {s = 10;}

                         
                        input.seek(index124_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 124, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0100000000000002L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000062L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000060L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x3EFFBC0000000000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x8000000000030040L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000F00000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x00000000000C0000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0100000000000060L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0100000000000062L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0040000000000000L,0x0000000000002BC0L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000000L,0x0000000000038140L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0100000000000040L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0100000000000010L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000400000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x8000400000000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000400000000002L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x000000E000000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000000000L,0x000000000000003CL});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000078000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000001F80000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000007000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000000L,0x000000001FF40000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000000L,0x00000000C0100000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000000L,0x000000000F100000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000000L,0x0000000023000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0400000000000000L,0x0000000023000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000000L,0x0000000F00000000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x8000000000000002L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000010002L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000030040L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000030042L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x00003F0000000002L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x3EFFBC0000000002L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000002L,0x000000000000003CL});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0040000000000002L,0x0000000000002BC0L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000002L,0x0000000000038140L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000002L,0x000000001FF00000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000002L,0x000000000F100000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000002L,0x0000000023000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0400000000000002L,0x0000000023000000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000002L,0x00000000C0100000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000002L,0x0000000F00000000L});

}
