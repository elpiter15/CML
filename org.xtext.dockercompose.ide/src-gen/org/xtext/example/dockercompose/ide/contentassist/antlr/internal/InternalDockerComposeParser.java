package org.xtext.example.dockercompose.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.dockercompose.services.DockerComposeGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings("all")
public class InternalDockerComposeParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_INT", "RULE_STRING", "RULE_ID", "RULE_VERSION", "RULE_PORT_DEF", "RULE_DEVICE_DEF", "RULE_QUOTED_INT", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'true'", "'false'", "'\"no\"'", "'always'", "'on-failure'", "'unless-stopped'", "'rw'", "'ro'", "'z'", "'volume'", "'bind'", "'tmpfs'", "'npipe'", "'rprivate'", "'private'", "'rshared'", "'shared'", "'rslave'", "'slave'", "'service_started'", "'service_healthy'", "'service_completed_successfully'", "'version:'", "'services:'", "'volumes:'", "'configs:'", "'secrets:'", "'networks:'", "':'", "'build:'", "'image:'", "'cpu_count:'", "'command:'", "'container_name:'", "'restart:'", "'init:'", "'read_only:'", "'links:'", "'-'", "'depends_on:'", "'devices:'", "'dns:'", "'ports:'", "'condition:'", "'ipv4_address:'", "'priority:'", "'aliases:'", "'link_local_ips:'", "'source:'", "'type:'", "'target:'", "'bind:'", "'propagation:'", "'volume:'", "'nocopy:'", "'tmpfs:'", "'size:'", "'uid:'", "'gid:'", "'mode:'", "'{'", "'}'", "'driver:'", "'attachable:'", "'enable_ipv6:'", "'internal:'", "'external:'", "'name:'", "'labels:'", "'driver_opts:'", "'ipam:'", "'file:'", "'environment:'", "'config:'", "'options:'", "'subnet:'", "'ip_range:'", "'gateway:'", "'aux_addresses:'", "'.'", "'/'"
    };
    public static final int T__50=50;
    public static final int RULE_VERSION=7;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=6;
    public static final int RULE_PORT_DEF=8;
    public static final int RULE_INT=4;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=11;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__92=92;
    public static final int RULE_DEVICE_DEF=9;
    public static final int T__93=93;
    public static final int T__94=94;
    public static final int T__90=90;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__95=95;
    public static final int RULE_QUOTED_INT=10;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=5;
    public static final int RULE_SL_COMMENT=12;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int RULE_WS=13;
    public static final int RULE_ANY_OTHER=14;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int T__84=84;
    public static final int T__85=85;
    public static final int T__86=86;
    public static final int T__87=87;

    // delegates
    // delegators


        public InternalDockerComposeParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalDockerComposeParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalDockerComposeParser.tokenNames; }
    public String getGrammarFileName() { return "InternalDockerCompose.g"; }


    	private DockerComposeGrammarAccess grammarAccess;

    	public void setGrammarAccess(DockerComposeGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		return tokenName;
    	}



    // $ANTLR start "entryRuleDockerCompose"
    // InternalDockerCompose.g:53:1: entryRuleDockerCompose : ruleDockerCompose EOF ;
    public final void entryRuleDockerCompose() throws RecognitionException {
        try {
            // InternalDockerCompose.g:54:1: ( ruleDockerCompose EOF )
            // InternalDockerCompose.g:55:1: ruleDockerCompose EOF
            {
             before(grammarAccess.getDockerComposeRule()); 
            pushFollow(FOLLOW_1);
            ruleDockerCompose();

            state._fsp--;

             after(grammarAccess.getDockerComposeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDockerCompose"


    // $ANTLR start "ruleDockerCompose"
    // InternalDockerCompose.g:62:1: ruleDockerCompose : ( ( rule__DockerCompose__UnorderedGroup ) ) ;
    public final void ruleDockerCompose() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:66:2: ( ( ( rule__DockerCompose__UnorderedGroup ) ) )
            // InternalDockerCompose.g:67:2: ( ( rule__DockerCompose__UnorderedGroup ) )
            {
            // InternalDockerCompose.g:67:2: ( ( rule__DockerCompose__UnorderedGroup ) )
            // InternalDockerCompose.g:68:3: ( rule__DockerCompose__UnorderedGroup )
            {
             before(grammarAccess.getDockerComposeAccess().getUnorderedGroup()); 
            // InternalDockerCompose.g:69:3: ( rule__DockerCompose__UnorderedGroup )
            // InternalDockerCompose.g:69:4: rule__DockerCompose__UnorderedGroup
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__UnorderedGroup();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getUnorderedGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDockerCompose"


    // $ANTLR start "entryRuleService"
    // InternalDockerCompose.g:78:1: entryRuleService : ruleService EOF ;
    public final void entryRuleService() throws RecognitionException {
        try {
            // InternalDockerCompose.g:79:1: ( ruleService EOF )
            // InternalDockerCompose.g:80:1: ruleService EOF
            {
             before(grammarAccess.getServiceRule()); 
            pushFollow(FOLLOW_1);
            ruleService();

            state._fsp--;

             after(grammarAccess.getServiceRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleService"


    // $ANTLR start "ruleService"
    // InternalDockerCompose.g:87:1: ruleService : ( ( rule__Service__Group__0 ) ) ;
    public final void ruleService() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:91:2: ( ( ( rule__Service__Group__0 ) ) )
            // InternalDockerCompose.g:92:2: ( ( rule__Service__Group__0 ) )
            {
            // InternalDockerCompose.g:92:2: ( ( rule__Service__Group__0 ) )
            // InternalDockerCompose.g:93:3: ( rule__Service__Group__0 )
            {
             before(grammarAccess.getServiceAccess().getGroup()); 
            // InternalDockerCompose.g:94:3: ( rule__Service__Group__0 )
            // InternalDockerCompose.g:94:4: rule__Service__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleService"


    // $ANTLR start "entryRulePort"
    // InternalDockerCompose.g:103:1: entryRulePort : rulePort EOF ;
    public final void entryRulePort() throws RecognitionException {
        try {
            // InternalDockerCompose.g:104:1: ( rulePort EOF )
            // InternalDockerCompose.g:105:1: rulePort EOF
            {
             before(grammarAccess.getPortRule()); 
            pushFollow(FOLLOW_1);
            rulePort();

            state._fsp--;

             after(grammarAccess.getPortRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePort"


    // $ANTLR start "rulePort"
    // InternalDockerCompose.g:112:1: rulePort : ( ( rule__Port__Group__0 ) ) ;
    public final void rulePort() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:116:2: ( ( ( rule__Port__Group__0 ) ) )
            // InternalDockerCompose.g:117:2: ( ( rule__Port__Group__0 ) )
            {
            // InternalDockerCompose.g:117:2: ( ( rule__Port__Group__0 ) )
            // InternalDockerCompose.g:118:3: ( rule__Port__Group__0 )
            {
             before(grammarAccess.getPortAccess().getGroup()); 
            // InternalDockerCompose.g:119:3: ( rule__Port__Group__0 )
            // InternalDockerCompose.g:119:4: rule__Port__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Port__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getPortAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePort"


    // $ANTLR start "entryRuleDevice"
    // InternalDockerCompose.g:128:1: entryRuleDevice : ruleDevice EOF ;
    public final void entryRuleDevice() throws RecognitionException {
        try {
            // InternalDockerCompose.g:129:1: ( ruleDevice EOF )
            // InternalDockerCompose.g:130:1: ruleDevice EOF
            {
             before(grammarAccess.getDeviceRule()); 
            pushFollow(FOLLOW_1);
            ruleDevice();

            state._fsp--;

             after(grammarAccess.getDeviceRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDevice"


    // $ANTLR start "ruleDevice"
    // InternalDockerCompose.g:137:1: ruleDevice : ( ( rule__Device__Group__0 ) ) ;
    public final void ruleDevice() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:141:2: ( ( ( rule__Device__Group__0 ) ) )
            // InternalDockerCompose.g:142:2: ( ( rule__Device__Group__0 ) )
            {
            // InternalDockerCompose.g:142:2: ( ( rule__Device__Group__0 ) )
            // InternalDockerCompose.g:143:3: ( rule__Device__Group__0 )
            {
             before(grammarAccess.getDeviceAccess().getGroup()); 
            // InternalDockerCompose.g:144:3: ( rule__Device__Group__0 )
            // InternalDockerCompose.g:144:4: rule__Device__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Device__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDeviceAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDevice"


    // $ANTLR start "entryRuleImage"
    // InternalDockerCompose.g:153:1: entryRuleImage : ruleImage EOF ;
    public final void entryRuleImage() throws RecognitionException {
        try {
            // InternalDockerCompose.g:154:1: ( ruleImage EOF )
            // InternalDockerCompose.g:155:1: ruleImage EOF
            {
             before(grammarAccess.getImageRule()); 
            pushFollow(FOLLOW_1);
            ruleImage();

            state._fsp--;

             after(grammarAccess.getImageRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleImage"


    // $ANTLR start "ruleImage"
    // InternalDockerCompose.g:162:1: ruleImage : ( ( rule__Image__Alternatives ) ) ;
    public final void ruleImage() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:166:2: ( ( ( rule__Image__Alternatives ) ) )
            // InternalDockerCompose.g:167:2: ( ( rule__Image__Alternatives ) )
            {
            // InternalDockerCompose.g:167:2: ( ( rule__Image__Alternatives ) )
            // InternalDockerCompose.g:168:3: ( rule__Image__Alternatives )
            {
             before(grammarAccess.getImageAccess().getAlternatives()); 
            // InternalDockerCompose.g:169:3: ( rule__Image__Alternatives )
            // InternalDockerCompose.g:169:4: rule__Image__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Image__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getImageAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleImage"


    // $ANTLR start "entryRuleLink"
    // InternalDockerCompose.g:178:1: entryRuleLink : ruleLink EOF ;
    public final void entryRuleLink() throws RecognitionException {
        try {
            // InternalDockerCompose.g:179:1: ( ruleLink EOF )
            // InternalDockerCompose.g:180:1: ruleLink EOF
            {
             before(grammarAccess.getLinkRule()); 
            pushFollow(FOLLOW_1);
            ruleLink();

            state._fsp--;

             after(grammarAccess.getLinkRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLink"


    // $ANTLR start "ruleLink"
    // InternalDockerCompose.g:187:1: ruleLink : ( ( rule__Link__Group__0 ) ) ;
    public final void ruleLink() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:191:2: ( ( ( rule__Link__Group__0 ) ) )
            // InternalDockerCompose.g:192:2: ( ( rule__Link__Group__0 ) )
            {
            // InternalDockerCompose.g:192:2: ( ( rule__Link__Group__0 ) )
            // InternalDockerCompose.g:193:3: ( rule__Link__Group__0 )
            {
             before(grammarAccess.getLinkAccess().getGroup()); 
            // InternalDockerCompose.g:194:3: ( rule__Link__Group__0 )
            // InternalDockerCompose.g:194:4: rule__Link__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Link__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getLinkAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLink"


    // $ANTLR start "entryRuleDependency_short"
    // InternalDockerCompose.g:203:1: entryRuleDependency_short : ruleDependency_short EOF ;
    public final void entryRuleDependency_short() throws RecognitionException {
        try {
            // InternalDockerCompose.g:204:1: ( ruleDependency_short EOF )
            // InternalDockerCompose.g:205:1: ruleDependency_short EOF
            {
             before(grammarAccess.getDependency_shortRule()); 
            pushFollow(FOLLOW_1);
            ruleDependency_short();

            state._fsp--;

             after(grammarAccess.getDependency_shortRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDependency_short"


    // $ANTLR start "ruleDependency_short"
    // InternalDockerCompose.g:212:1: ruleDependency_short : ( ( rule__Dependency_short__Group__0 ) ) ;
    public final void ruleDependency_short() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:216:2: ( ( ( rule__Dependency_short__Group__0 ) ) )
            // InternalDockerCompose.g:217:2: ( ( rule__Dependency_short__Group__0 ) )
            {
            // InternalDockerCompose.g:217:2: ( ( rule__Dependency_short__Group__0 ) )
            // InternalDockerCompose.g:218:3: ( rule__Dependency_short__Group__0 )
            {
             before(grammarAccess.getDependency_shortAccess().getGroup()); 
            // InternalDockerCompose.g:219:3: ( rule__Dependency_short__Group__0 )
            // InternalDockerCompose.g:219:4: rule__Dependency_short__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Dependency_short__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDependency_shortAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDependency_short"


    // $ANTLR start "entryRuleDependency_long"
    // InternalDockerCompose.g:228:1: entryRuleDependency_long : ruleDependency_long EOF ;
    public final void entryRuleDependency_long() throws RecognitionException {
        try {
            // InternalDockerCompose.g:229:1: ( ruleDependency_long EOF )
            // InternalDockerCompose.g:230:1: ruleDependency_long EOF
            {
             before(grammarAccess.getDependency_longRule()); 
            pushFollow(FOLLOW_1);
            ruleDependency_long();

            state._fsp--;

             after(grammarAccess.getDependency_longRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDependency_long"


    // $ANTLR start "ruleDependency_long"
    // InternalDockerCompose.g:237:1: ruleDependency_long : ( ( rule__Dependency_long__Group__0 ) ) ;
    public final void ruleDependency_long() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:241:2: ( ( ( rule__Dependency_long__Group__0 ) ) )
            // InternalDockerCompose.g:242:2: ( ( rule__Dependency_long__Group__0 ) )
            {
            // InternalDockerCompose.g:242:2: ( ( rule__Dependency_long__Group__0 ) )
            // InternalDockerCompose.g:243:3: ( rule__Dependency_long__Group__0 )
            {
             before(grammarAccess.getDependency_longAccess().getGroup()); 
            // InternalDockerCompose.g:244:3: ( rule__Dependency_long__Group__0 )
            // InternalDockerCompose.g:244:4: rule__Dependency_long__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Dependency_long__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDependency_longAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDependency_long"


    // $ANTLR start "entryRuleNetworkConnector"
    // InternalDockerCompose.g:253:1: entryRuleNetworkConnector : ruleNetworkConnector EOF ;
    public final void entryRuleNetworkConnector() throws RecognitionException {
        try {
            // InternalDockerCompose.g:254:1: ( ruleNetworkConnector EOF )
            // InternalDockerCompose.g:255:1: ruleNetworkConnector EOF
            {
             before(grammarAccess.getNetworkConnectorRule()); 
            pushFollow(FOLLOW_1);
            ruleNetworkConnector();

            state._fsp--;

             after(grammarAccess.getNetworkConnectorRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNetworkConnector"


    // $ANTLR start "ruleNetworkConnector"
    // InternalDockerCompose.g:262:1: ruleNetworkConnector : ( ( rule__NetworkConnector__Group__0 ) ) ;
    public final void ruleNetworkConnector() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:266:2: ( ( ( rule__NetworkConnector__Group__0 ) ) )
            // InternalDockerCompose.g:267:2: ( ( rule__NetworkConnector__Group__0 ) )
            {
            // InternalDockerCompose.g:267:2: ( ( rule__NetworkConnector__Group__0 ) )
            // InternalDockerCompose.g:268:3: ( rule__NetworkConnector__Group__0 )
            {
             before(grammarAccess.getNetworkConnectorAccess().getGroup()); 
            // InternalDockerCompose.g:269:3: ( rule__NetworkConnector__Group__0 )
            // InternalDockerCompose.g:269:4: rule__NetworkConnector__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNetworkConnector"


    // $ANTLR start "entryRuleAlias"
    // InternalDockerCompose.g:278:1: entryRuleAlias : ruleAlias EOF ;
    public final void entryRuleAlias() throws RecognitionException {
        try {
            // InternalDockerCompose.g:279:1: ( ruleAlias EOF )
            // InternalDockerCompose.g:280:1: ruleAlias EOF
            {
             before(grammarAccess.getAliasRule()); 
            pushFollow(FOLLOW_1);
            ruleAlias();

            state._fsp--;

             after(grammarAccess.getAliasRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAlias"


    // $ANTLR start "ruleAlias"
    // InternalDockerCompose.g:287:1: ruleAlias : ( ( rule__Alias__Group__0 ) ) ;
    public final void ruleAlias() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:291:2: ( ( ( rule__Alias__Group__0 ) ) )
            // InternalDockerCompose.g:292:2: ( ( rule__Alias__Group__0 ) )
            {
            // InternalDockerCompose.g:292:2: ( ( rule__Alias__Group__0 ) )
            // InternalDockerCompose.g:293:3: ( rule__Alias__Group__0 )
            {
             before(grammarAccess.getAliasAccess().getGroup()); 
            // InternalDockerCompose.g:294:3: ( rule__Alias__Group__0 )
            // InternalDockerCompose.g:294:4: rule__Alias__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Alias__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAliasAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAlias"


    // $ANTLR start "entryRuleVolumeConnector_long"
    // InternalDockerCompose.g:303:1: entryRuleVolumeConnector_long : ruleVolumeConnector_long EOF ;
    public final void entryRuleVolumeConnector_long() throws RecognitionException {
        try {
            // InternalDockerCompose.g:304:1: ( ruleVolumeConnector_long EOF )
            // InternalDockerCompose.g:305:1: ruleVolumeConnector_long EOF
            {
             before(grammarAccess.getVolumeConnector_longRule()); 
            pushFollow(FOLLOW_1);
            ruleVolumeConnector_long();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_longRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVolumeConnector_long"


    // $ANTLR start "ruleVolumeConnector_long"
    // InternalDockerCompose.g:312:1: ruleVolumeConnector_long : ( ( rule__VolumeConnector_long__Group__0 ) ) ;
    public final void ruleVolumeConnector_long() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:316:2: ( ( ( rule__VolumeConnector_long__Group__0 ) ) )
            // InternalDockerCompose.g:317:2: ( ( rule__VolumeConnector_long__Group__0 ) )
            {
            // InternalDockerCompose.g:317:2: ( ( rule__VolumeConnector_long__Group__0 ) )
            // InternalDockerCompose.g:318:3: ( rule__VolumeConnector_long__Group__0 )
            {
             before(grammarAccess.getVolumeConnector_longAccess().getGroup()); 
            // InternalDockerCompose.g:319:3: ( rule__VolumeConnector_long__Group__0 )
            // InternalDockerCompose.g:319:4: rule__VolumeConnector_long__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_longAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVolumeConnector_long"


    // $ANTLR start "entryRuleVolumeConnector_short"
    // InternalDockerCompose.g:328:1: entryRuleVolumeConnector_short : ruleVolumeConnector_short EOF ;
    public final void entryRuleVolumeConnector_short() throws RecognitionException {
        try {
            // InternalDockerCompose.g:329:1: ( ruleVolumeConnector_short EOF )
            // InternalDockerCompose.g:330:1: ruleVolumeConnector_short EOF
            {
             before(grammarAccess.getVolumeConnector_shortRule()); 
            pushFollow(FOLLOW_1);
            ruleVolumeConnector_short();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_shortRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVolumeConnector_short"


    // $ANTLR start "ruleVolumeConnector_short"
    // InternalDockerCompose.g:337:1: ruleVolumeConnector_short : ( ( rule__VolumeConnector_short__Group__0 ) ) ;
    public final void ruleVolumeConnector_short() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:341:2: ( ( ( rule__VolumeConnector_short__Group__0 ) ) )
            // InternalDockerCompose.g:342:2: ( ( rule__VolumeConnector_short__Group__0 ) )
            {
            // InternalDockerCompose.g:342:2: ( ( rule__VolumeConnector_short__Group__0 ) )
            // InternalDockerCompose.g:343:3: ( rule__VolumeConnector_short__Group__0 )
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getGroup()); 
            // InternalDockerCompose.g:344:3: ( rule__VolumeConnector_short__Group__0 )
            // InternalDockerCompose.g:344:4: rule__VolumeConnector_short__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_shortAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVolumeConnector_short"


    // $ANTLR start "entryRuleConfigConnector_long"
    // InternalDockerCompose.g:353:1: entryRuleConfigConnector_long : ruleConfigConnector_long EOF ;
    public final void entryRuleConfigConnector_long() throws RecognitionException {
        try {
            // InternalDockerCompose.g:354:1: ( ruleConfigConnector_long EOF )
            // InternalDockerCompose.g:355:1: ruleConfigConnector_long EOF
            {
             before(grammarAccess.getConfigConnector_longRule()); 
            pushFollow(FOLLOW_1);
            ruleConfigConnector_long();

            state._fsp--;

             after(grammarAccess.getConfigConnector_longRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConfigConnector_long"


    // $ANTLR start "ruleConfigConnector_long"
    // InternalDockerCompose.g:362:1: ruleConfigConnector_long : ( ( rule__ConfigConnector_long__Group__0 ) ) ;
    public final void ruleConfigConnector_long() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:366:2: ( ( ( rule__ConfigConnector_long__Group__0 ) ) )
            // InternalDockerCompose.g:367:2: ( ( rule__ConfigConnector_long__Group__0 ) )
            {
            // InternalDockerCompose.g:367:2: ( ( rule__ConfigConnector_long__Group__0 ) )
            // InternalDockerCompose.g:368:3: ( rule__ConfigConnector_long__Group__0 )
            {
             before(grammarAccess.getConfigConnector_longAccess().getGroup()); 
            // InternalDockerCompose.g:369:3: ( rule__ConfigConnector_long__Group__0 )
            // InternalDockerCompose.g:369:4: rule__ConfigConnector_long__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnector_longAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConfigConnector_long"


    // $ANTLR start "entryRuleConfigConnector_short"
    // InternalDockerCompose.g:378:1: entryRuleConfigConnector_short : ruleConfigConnector_short EOF ;
    public final void entryRuleConfigConnector_short() throws RecognitionException {
        try {
            // InternalDockerCompose.g:379:1: ( ruleConfigConnector_short EOF )
            // InternalDockerCompose.g:380:1: ruleConfigConnector_short EOF
            {
             before(grammarAccess.getConfigConnector_shortRule()); 
            pushFollow(FOLLOW_1);
            ruleConfigConnector_short();

            state._fsp--;

             after(grammarAccess.getConfigConnector_shortRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConfigConnector_short"


    // $ANTLR start "ruleConfigConnector_short"
    // InternalDockerCompose.g:387:1: ruleConfigConnector_short : ( ( rule__ConfigConnector_short__Group__0 ) ) ;
    public final void ruleConfigConnector_short() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:391:2: ( ( ( rule__ConfigConnector_short__Group__0 ) ) )
            // InternalDockerCompose.g:392:2: ( ( rule__ConfigConnector_short__Group__0 ) )
            {
            // InternalDockerCompose.g:392:2: ( ( rule__ConfigConnector_short__Group__0 ) )
            // InternalDockerCompose.g:393:3: ( rule__ConfigConnector_short__Group__0 )
            {
             before(grammarAccess.getConfigConnector_shortAccess().getGroup()); 
            // InternalDockerCompose.g:394:3: ( rule__ConfigConnector_short__Group__0 )
            // InternalDockerCompose.g:394:4: rule__ConfigConnector_short__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_short__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnector_shortAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConfigConnector_short"


    // $ANTLR start "entryRuleSecretConnector_long"
    // InternalDockerCompose.g:403:1: entryRuleSecretConnector_long : ruleSecretConnector_long EOF ;
    public final void entryRuleSecretConnector_long() throws RecognitionException {
        try {
            // InternalDockerCompose.g:404:1: ( ruleSecretConnector_long EOF )
            // InternalDockerCompose.g:405:1: ruleSecretConnector_long EOF
            {
             before(grammarAccess.getSecretConnector_longRule()); 
            pushFollow(FOLLOW_1);
            ruleSecretConnector_long();

            state._fsp--;

             after(grammarAccess.getSecretConnector_longRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSecretConnector_long"


    // $ANTLR start "ruleSecretConnector_long"
    // InternalDockerCompose.g:412:1: ruleSecretConnector_long : ( ( rule__SecretConnector_long__Group__0 ) ) ;
    public final void ruleSecretConnector_long() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:416:2: ( ( ( rule__SecretConnector_long__Group__0 ) ) )
            // InternalDockerCompose.g:417:2: ( ( rule__SecretConnector_long__Group__0 ) )
            {
            // InternalDockerCompose.g:417:2: ( ( rule__SecretConnector_long__Group__0 ) )
            // InternalDockerCompose.g:418:3: ( rule__SecretConnector_long__Group__0 )
            {
             before(grammarAccess.getSecretConnector_longAccess().getGroup()); 
            // InternalDockerCompose.g:419:3: ( rule__SecretConnector_long__Group__0 )
            // InternalDockerCompose.g:419:4: rule__SecretConnector_long__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnector_longAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSecretConnector_long"


    // $ANTLR start "entryRuleSecretConnector_short"
    // InternalDockerCompose.g:428:1: entryRuleSecretConnector_short : ruleSecretConnector_short EOF ;
    public final void entryRuleSecretConnector_short() throws RecognitionException {
        try {
            // InternalDockerCompose.g:429:1: ( ruleSecretConnector_short EOF )
            // InternalDockerCompose.g:430:1: ruleSecretConnector_short EOF
            {
             before(grammarAccess.getSecretConnector_shortRule()); 
            pushFollow(FOLLOW_1);
            ruleSecretConnector_short();

            state._fsp--;

             after(grammarAccess.getSecretConnector_shortRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSecretConnector_short"


    // $ANTLR start "ruleSecretConnector_short"
    // InternalDockerCompose.g:437:1: ruleSecretConnector_short : ( ( rule__SecretConnector_short__Group__0 ) ) ;
    public final void ruleSecretConnector_short() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:441:2: ( ( ( rule__SecretConnector_short__Group__0 ) ) )
            // InternalDockerCompose.g:442:2: ( ( rule__SecretConnector_short__Group__0 ) )
            {
            // InternalDockerCompose.g:442:2: ( ( rule__SecretConnector_short__Group__0 ) )
            // InternalDockerCompose.g:443:3: ( rule__SecretConnector_short__Group__0 )
            {
             before(grammarAccess.getSecretConnector_shortAccess().getGroup()); 
            // InternalDockerCompose.g:444:3: ( rule__SecretConnector_short__Group__0 )
            // InternalDockerCompose.g:444:4: rule__SecretConnector_short__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_short__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnector_shortAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSecretConnector_short"


    // $ANTLR start "entryRuleNetwork"
    // InternalDockerCompose.g:453:1: entryRuleNetwork : ruleNetwork EOF ;
    public final void entryRuleNetwork() throws RecognitionException {
        try {
            // InternalDockerCompose.g:454:1: ( ruleNetwork EOF )
            // InternalDockerCompose.g:455:1: ruleNetwork EOF
            {
             before(grammarAccess.getNetworkRule()); 
            pushFollow(FOLLOW_1);
            ruleNetwork();

            state._fsp--;

             after(grammarAccess.getNetworkRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNetwork"


    // $ANTLR start "ruleNetwork"
    // InternalDockerCompose.g:462:1: ruleNetwork : ( ( rule__Network__Group__0 ) ) ;
    public final void ruleNetwork() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:466:2: ( ( ( rule__Network__Group__0 ) ) )
            // InternalDockerCompose.g:467:2: ( ( rule__Network__Group__0 ) )
            {
            // InternalDockerCompose.g:467:2: ( ( rule__Network__Group__0 ) )
            // InternalDockerCompose.g:468:3: ( rule__Network__Group__0 )
            {
             before(grammarAccess.getNetworkAccess().getGroup()); 
            // InternalDockerCompose.g:469:3: ( rule__Network__Group__0 )
            // InternalDockerCompose.g:469:4: rule__Network__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNetwork"


    // $ANTLR start "entryRuleVolume"
    // InternalDockerCompose.g:478:1: entryRuleVolume : ruleVolume EOF ;
    public final void entryRuleVolume() throws RecognitionException {
        try {
            // InternalDockerCompose.g:479:1: ( ruleVolume EOF )
            // InternalDockerCompose.g:480:1: ruleVolume EOF
            {
             before(grammarAccess.getVolumeRule()); 
            pushFollow(FOLLOW_1);
            ruleVolume();

            state._fsp--;

             after(grammarAccess.getVolumeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVolume"


    // $ANTLR start "ruleVolume"
    // InternalDockerCompose.g:487:1: ruleVolume : ( ( rule__Volume__Group__0 ) ) ;
    public final void ruleVolume() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:491:2: ( ( ( rule__Volume__Group__0 ) ) )
            // InternalDockerCompose.g:492:2: ( ( rule__Volume__Group__0 ) )
            {
            // InternalDockerCompose.g:492:2: ( ( rule__Volume__Group__0 ) )
            // InternalDockerCompose.g:493:3: ( rule__Volume__Group__0 )
            {
             before(grammarAccess.getVolumeAccess().getGroup()); 
            // InternalDockerCompose.g:494:3: ( rule__Volume__Group__0 )
            // InternalDockerCompose.g:494:4: rule__Volume__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVolume"


    // $ANTLR start "entryRuleConfig"
    // InternalDockerCompose.g:503:1: entryRuleConfig : ruleConfig EOF ;
    public final void entryRuleConfig() throws RecognitionException {
        try {
            // InternalDockerCompose.g:504:1: ( ruleConfig EOF )
            // InternalDockerCompose.g:505:1: ruleConfig EOF
            {
             before(grammarAccess.getConfigRule()); 
            pushFollow(FOLLOW_1);
            ruleConfig();

            state._fsp--;

             after(grammarAccess.getConfigRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConfig"


    // $ANTLR start "ruleConfig"
    // InternalDockerCompose.g:512:1: ruleConfig : ( ( rule__Config__Group__0 ) ) ;
    public final void ruleConfig() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:516:2: ( ( ( rule__Config__Group__0 ) ) )
            // InternalDockerCompose.g:517:2: ( ( rule__Config__Group__0 ) )
            {
            // InternalDockerCompose.g:517:2: ( ( rule__Config__Group__0 ) )
            // InternalDockerCompose.g:518:3: ( rule__Config__Group__0 )
            {
             before(grammarAccess.getConfigAccess().getGroup()); 
            // InternalDockerCompose.g:519:3: ( rule__Config__Group__0 )
            // InternalDockerCompose.g:519:4: rule__Config__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Config__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getConfigAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConfig"


    // $ANTLR start "entryRuleSecret"
    // InternalDockerCompose.g:528:1: entryRuleSecret : ruleSecret EOF ;
    public final void entryRuleSecret() throws RecognitionException {
        try {
            // InternalDockerCompose.g:529:1: ( ruleSecret EOF )
            // InternalDockerCompose.g:530:1: ruleSecret EOF
            {
             before(grammarAccess.getSecretRule()); 
            pushFollow(FOLLOW_1);
            ruleSecret();

            state._fsp--;

             after(grammarAccess.getSecretRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSecret"


    // $ANTLR start "ruleSecret"
    // InternalDockerCompose.g:537:1: ruleSecret : ( ( rule__Secret__Group__0 ) ) ;
    public final void ruleSecret() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:541:2: ( ( ( rule__Secret__Group__0 ) ) )
            // InternalDockerCompose.g:542:2: ( ( rule__Secret__Group__0 ) )
            {
            // InternalDockerCompose.g:542:2: ( ( rule__Secret__Group__0 ) )
            // InternalDockerCompose.g:543:3: ( rule__Secret__Group__0 )
            {
             before(grammarAccess.getSecretAccess().getGroup()); 
            // InternalDockerCompose.g:544:3: ( rule__Secret__Group__0 )
            // InternalDockerCompose.g:544:4: rule__Secret__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSecret"


    // $ANTLR start "entryRuleVolumeLabel"
    // InternalDockerCompose.g:553:1: entryRuleVolumeLabel : ruleVolumeLabel EOF ;
    public final void entryRuleVolumeLabel() throws RecognitionException {
        try {
            // InternalDockerCompose.g:554:1: ( ruleVolumeLabel EOF )
            // InternalDockerCompose.g:555:1: ruleVolumeLabel EOF
            {
             before(grammarAccess.getVolumeLabelRule()); 
            pushFollow(FOLLOW_1);
            ruleVolumeLabel();

            state._fsp--;

             after(grammarAccess.getVolumeLabelRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVolumeLabel"


    // $ANTLR start "ruleVolumeLabel"
    // InternalDockerCompose.g:562:1: ruleVolumeLabel : ( ( rule__VolumeLabel__Group__0 ) ) ;
    public final void ruleVolumeLabel() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:566:2: ( ( ( rule__VolumeLabel__Group__0 ) ) )
            // InternalDockerCompose.g:567:2: ( ( rule__VolumeLabel__Group__0 ) )
            {
            // InternalDockerCompose.g:567:2: ( ( rule__VolumeLabel__Group__0 ) )
            // InternalDockerCompose.g:568:3: ( rule__VolumeLabel__Group__0 )
            {
             before(grammarAccess.getVolumeLabelAccess().getGroup()); 
            // InternalDockerCompose.g:569:3: ( rule__VolumeLabel__Group__0 )
            // InternalDockerCompose.g:569:4: rule__VolumeLabel__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VolumeLabel__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getVolumeLabelAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVolumeLabel"


    // $ANTLR start "entryRuleVolumeDriverOpt"
    // InternalDockerCompose.g:578:1: entryRuleVolumeDriverOpt : ruleVolumeDriverOpt EOF ;
    public final void entryRuleVolumeDriverOpt() throws RecognitionException {
        try {
            // InternalDockerCompose.g:579:1: ( ruleVolumeDriverOpt EOF )
            // InternalDockerCompose.g:580:1: ruleVolumeDriverOpt EOF
            {
             before(grammarAccess.getVolumeDriverOptRule()); 
            pushFollow(FOLLOW_1);
            ruleVolumeDriverOpt();

            state._fsp--;

             after(grammarAccess.getVolumeDriverOptRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVolumeDriverOpt"


    // $ANTLR start "ruleVolumeDriverOpt"
    // InternalDockerCompose.g:587:1: ruleVolumeDriverOpt : ( ( rule__VolumeDriverOpt__Group__0 ) ) ;
    public final void ruleVolumeDriverOpt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:591:2: ( ( ( rule__VolumeDriverOpt__Group__0 ) ) )
            // InternalDockerCompose.g:592:2: ( ( rule__VolumeDriverOpt__Group__0 ) )
            {
            // InternalDockerCompose.g:592:2: ( ( rule__VolumeDriverOpt__Group__0 ) )
            // InternalDockerCompose.g:593:3: ( rule__VolumeDriverOpt__Group__0 )
            {
             before(grammarAccess.getVolumeDriverOptAccess().getGroup()); 
            // InternalDockerCompose.g:594:3: ( rule__VolumeDriverOpt__Group__0 )
            // InternalDockerCompose.g:594:4: rule__VolumeDriverOpt__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getVolumeDriverOptAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVolumeDriverOpt"


    // $ANTLR start "entryRuleNetworkLabel"
    // InternalDockerCompose.g:603:1: entryRuleNetworkLabel : ruleNetworkLabel EOF ;
    public final void entryRuleNetworkLabel() throws RecognitionException {
        try {
            // InternalDockerCompose.g:604:1: ( ruleNetworkLabel EOF )
            // InternalDockerCompose.g:605:1: ruleNetworkLabel EOF
            {
             before(grammarAccess.getNetworkLabelRule()); 
            pushFollow(FOLLOW_1);
            ruleNetworkLabel();

            state._fsp--;

             after(grammarAccess.getNetworkLabelRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNetworkLabel"


    // $ANTLR start "ruleNetworkLabel"
    // InternalDockerCompose.g:612:1: ruleNetworkLabel : ( ( rule__NetworkLabel__Group__0 ) ) ;
    public final void ruleNetworkLabel() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:616:2: ( ( ( rule__NetworkLabel__Group__0 ) ) )
            // InternalDockerCompose.g:617:2: ( ( rule__NetworkLabel__Group__0 ) )
            {
            // InternalDockerCompose.g:617:2: ( ( rule__NetworkLabel__Group__0 ) )
            // InternalDockerCompose.g:618:3: ( rule__NetworkLabel__Group__0 )
            {
             before(grammarAccess.getNetworkLabelAccess().getGroup()); 
            // InternalDockerCompose.g:619:3: ( rule__NetworkLabel__Group__0 )
            // InternalDockerCompose.g:619:4: rule__NetworkLabel__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NetworkLabel__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkLabelAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNetworkLabel"


    // $ANTLR start "entryRuleNetworkDriverOpt"
    // InternalDockerCompose.g:628:1: entryRuleNetworkDriverOpt : ruleNetworkDriverOpt EOF ;
    public final void entryRuleNetworkDriverOpt() throws RecognitionException {
        try {
            // InternalDockerCompose.g:629:1: ( ruleNetworkDriverOpt EOF )
            // InternalDockerCompose.g:630:1: ruleNetworkDriverOpt EOF
            {
             before(grammarAccess.getNetworkDriverOptRule()); 
            pushFollow(FOLLOW_1);
            ruleNetworkDriverOpt();

            state._fsp--;

             after(grammarAccess.getNetworkDriverOptRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNetworkDriverOpt"


    // $ANTLR start "ruleNetworkDriverOpt"
    // InternalDockerCompose.g:637:1: ruleNetworkDriverOpt : ( ( rule__NetworkDriverOpt__Group__0 ) ) ;
    public final void ruleNetworkDriverOpt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:641:2: ( ( ( rule__NetworkDriverOpt__Group__0 ) ) )
            // InternalDockerCompose.g:642:2: ( ( rule__NetworkDriverOpt__Group__0 ) )
            {
            // InternalDockerCompose.g:642:2: ( ( rule__NetworkDriverOpt__Group__0 ) )
            // InternalDockerCompose.g:643:3: ( rule__NetworkDriverOpt__Group__0 )
            {
             before(grammarAccess.getNetworkDriverOptAccess().getGroup()); 
            // InternalDockerCompose.g:644:3: ( rule__NetworkDriverOpt__Group__0 )
            // InternalDockerCompose.g:644:4: rule__NetworkDriverOpt__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkDriverOptAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNetworkDriverOpt"


    // $ANTLR start "entryRuleIPAM"
    // InternalDockerCompose.g:653:1: entryRuleIPAM : ruleIPAM EOF ;
    public final void entryRuleIPAM() throws RecognitionException {
        try {
            // InternalDockerCompose.g:654:1: ( ruleIPAM EOF )
            // InternalDockerCompose.g:655:1: ruleIPAM EOF
            {
             before(grammarAccess.getIPAMRule()); 
            pushFollow(FOLLOW_1);
            ruleIPAM();

            state._fsp--;

             after(grammarAccess.getIPAMRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIPAM"


    // $ANTLR start "ruleIPAM"
    // InternalDockerCompose.g:662:1: ruleIPAM : ( ( rule__IPAM__Group__0 ) ) ;
    public final void ruleIPAM() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:666:2: ( ( ( rule__IPAM__Group__0 ) ) )
            // InternalDockerCompose.g:667:2: ( ( rule__IPAM__Group__0 ) )
            {
            // InternalDockerCompose.g:667:2: ( ( rule__IPAM__Group__0 ) )
            // InternalDockerCompose.g:668:3: ( rule__IPAM__Group__0 )
            {
             before(grammarAccess.getIPAMAccess().getGroup()); 
            // InternalDockerCompose.g:669:3: ( rule__IPAM__Group__0 )
            // InternalDockerCompose.g:669:4: rule__IPAM__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIPAM"


    // $ANTLR start "entryRuleIPAMConfig"
    // InternalDockerCompose.g:678:1: entryRuleIPAMConfig : ruleIPAMConfig EOF ;
    public final void entryRuleIPAMConfig() throws RecognitionException {
        try {
            // InternalDockerCompose.g:679:1: ( ruleIPAMConfig EOF )
            // InternalDockerCompose.g:680:1: ruleIPAMConfig EOF
            {
             before(grammarAccess.getIPAMConfigRule()); 
            pushFollow(FOLLOW_1);
            ruleIPAMConfig();

            state._fsp--;

             after(grammarAccess.getIPAMConfigRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIPAMConfig"


    // $ANTLR start "ruleIPAMConfig"
    // InternalDockerCompose.g:687:1: ruleIPAMConfig : ( ( rule__IPAMConfig__Group__0 ) ) ;
    public final void ruleIPAMConfig() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:691:2: ( ( ( rule__IPAMConfig__Group__0 ) ) )
            // InternalDockerCompose.g:692:2: ( ( rule__IPAMConfig__Group__0 ) )
            {
            // InternalDockerCompose.g:692:2: ( ( rule__IPAMConfig__Group__0 ) )
            // InternalDockerCompose.g:693:3: ( rule__IPAMConfig__Group__0 )
            {
             before(grammarAccess.getIPAMConfigAccess().getGroup()); 
            // InternalDockerCompose.g:694:3: ( rule__IPAMConfig__Group__0 )
            // InternalDockerCompose.g:694:4: rule__IPAMConfig__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIPAMConfigAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIPAMConfig"


    // $ANTLR start "entryRuleIPAMOption"
    // InternalDockerCompose.g:703:1: entryRuleIPAMOption : ruleIPAMOption EOF ;
    public final void entryRuleIPAMOption() throws RecognitionException {
        try {
            // InternalDockerCompose.g:704:1: ( ruleIPAMOption EOF )
            // InternalDockerCompose.g:705:1: ruleIPAMOption EOF
            {
             before(grammarAccess.getIPAMOptionRule()); 
            pushFollow(FOLLOW_1);
            ruleIPAMOption();

            state._fsp--;

             after(grammarAccess.getIPAMOptionRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIPAMOption"


    // $ANTLR start "ruleIPAMOption"
    // InternalDockerCompose.g:712:1: ruleIPAMOption : ( ( rule__IPAMOption__Group__0 ) ) ;
    public final void ruleIPAMOption() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:716:2: ( ( ( rule__IPAMOption__Group__0 ) ) )
            // InternalDockerCompose.g:717:2: ( ( rule__IPAMOption__Group__0 ) )
            {
            // InternalDockerCompose.g:717:2: ( ( rule__IPAMOption__Group__0 ) )
            // InternalDockerCompose.g:718:3: ( rule__IPAMOption__Group__0 )
            {
             before(grammarAccess.getIPAMOptionAccess().getGroup()); 
            // InternalDockerCompose.g:719:3: ( rule__IPAMOption__Group__0 )
            // InternalDockerCompose.g:719:4: rule__IPAMOption__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IPAMOption__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIPAMOptionAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIPAMOption"


    // $ANTLR start "entryRuleIPAMAddress"
    // InternalDockerCompose.g:728:1: entryRuleIPAMAddress : ruleIPAMAddress EOF ;
    public final void entryRuleIPAMAddress() throws RecognitionException {
        try {
            // InternalDockerCompose.g:729:1: ( ruleIPAMAddress EOF )
            // InternalDockerCompose.g:730:1: ruleIPAMAddress EOF
            {
             before(grammarAccess.getIPAMAddressRule()); 
            pushFollow(FOLLOW_1);
            ruleIPAMAddress();

            state._fsp--;

             after(grammarAccess.getIPAMAddressRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIPAMAddress"


    // $ANTLR start "ruleIPAMAddress"
    // InternalDockerCompose.g:737:1: ruleIPAMAddress : ( ( rule__IPAMAddress__Group__0 ) ) ;
    public final void ruleIPAMAddress() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:741:2: ( ( ( rule__IPAMAddress__Group__0 ) ) )
            // InternalDockerCompose.g:742:2: ( ( rule__IPAMAddress__Group__0 ) )
            {
            // InternalDockerCompose.g:742:2: ( ( rule__IPAMAddress__Group__0 ) )
            // InternalDockerCompose.g:743:3: ( rule__IPAMAddress__Group__0 )
            {
             before(grammarAccess.getIPAMAddressAccess().getGroup()); 
            // InternalDockerCompose.g:744:3: ( rule__IPAMAddress__Group__0 )
            // InternalDockerCompose.g:744:4: rule__IPAMAddress__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IPAMAddress__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAddressAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIPAMAddress"


    // $ANTLR start "entryRulePATH"
    // InternalDockerCompose.g:753:1: entryRulePATH : rulePATH EOF ;
    public final void entryRulePATH() throws RecognitionException {
        try {
            // InternalDockerCompose.g:754:1: ( rulePATH EOF )
            // InternalDockerCompose.g:755:1: rulePATH EOF
            {
             before(grammarAccess.getPATHRule()); 
            pushFollow(FOLLOW_1);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getPATHRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePATH"


    // $ANTLR start "rulePATH"
    // InternalDockerCompose.g:762:1: rulePATH : ( ( rule__PATH__Group__0 ) ) ;
    public final void rulePATH() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:766:2: ( ( ( rule__PATH__Group__0 ) ) )
            // InternalDockerCompose.g:767:2: ( ( rule__PATH__Group__0 ) )
            {
            // InternalDockerCompose.g:767:2: ( ( rule__PATH__Group__0 ) )
            // InternalDockerCompose.g:768:3: ( rule__PATH__Group__0 )
            {
             before(grammarAccess.getPATHAccess().getGroup()); 
            // InternalDockerCompose.g:769:3: ( rule__PATH__Group__0 )
            // InternalDockerCompose.g:769:4: rule__PATH__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getPATHAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePATH"


    // $ANTLR start "entryRuleEString"
    // InternalDockerCompose.g:778:1: entryRuleEString : ruleEString EOF ;
    public final void entryRuleEString() throws RecognitionException {
        try {
            // InternalDockerCompose.g:779:1: ( ruleEString EOF )
            // InternalDockerCompose.g:780:1: ruleEString EOF
            {
             before(grammarAccess.getEStringRule()); 
            pushFollow(FOLLOW_1);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getEStringRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEString"


    // $ANTLR start "ruleEString"
    // InternalDockerCompose.g:787:1: ruleEString : ( ( rule__EString__Alternatives ) ) ;
    public final void ruleEString() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:791:2: ( ( ( rule__EString__Alternatives ) ) )
            // InternalDockerCompose.g:792:2: ( ( rule__EString__Alternatives ) )
            {
            // InternalDockerCompose.g:792:2: ( ( rule__EString__Alternatives ) )
            // InternalDockerCompose.g:793:3: ( rule__EString__Alternatives )
            {
             before(grammarAccess.getEStringAccess().getAlternatives()); 
            // InternalDockerCompose.g:794:3: ( rule__EString__Alternatives )
            // InternalDockerCompose.g:794:4: rule__EString__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EString__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getEStringAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEString"


    // $ANTLR start "entryRuleEInt"
    // InternalDockerCompose.g:803:1: entryRuleEInt : ruleEInt EOF ;
    public final void entryRuleEInt() throws RecognitionException {
        try {
            // InternalDockerCompose.g:804:1: ( ruleEInt EOF )
            // InternalDockerCompose.g:805:1: ruleEInt EOF
            {
             before(grammarAccess.getEIntRule()); 
            pushFollow(FOLLOW_1);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getEIntRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEInt"


    // $ANTLR start "ruleEInt"
    // InternalDockerCompose.g:812:1: ruleEInt : ( RULE_INT ) ;
    public final void ruleEInt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:816:2: ( ( RULE_INT ) )
            // InternalDockerCompose.g:817:2: ( RULE_INT )
            {
            // InternalDockerCompose.g:817:2: ( RULE_INT )
            // InternalDockerCompose.g:818:3: RULE_INT
            {
             before(grammarAccess.getEIntAccess().getINTTerminalRuleCall()); 
            match(input,RULE_INT,FOLLOW_2); 
             after(grammarAccess.getEIntAccess().getINTTerminalRuleCall()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEInt"


    // $ANTLR start "entryRuleDNS"
    // InternalDockerCompose.g:828:1: entryRuleDNS : ruleDNS EOF ;
    public final void entryRuleDNS() throws RecognitionException {
        try {
            // InternalDockerCompose.g:829:1: ( ruleDNS EOF )
            // InternalDockerCompose.g:830:1: ruleDNS EOF
            {
             before(grammarAccess.getDNSRule()); 
            pushFollow(FOLLOW_1);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getDNSRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDNS"


    // $ANTLR start "ruleDNS"
    // InternalDockerCompose.g:837:1: ruleDNS : ( ( rule__DNS__Group__0 ) ) ;
    public final void ruleDNS() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:841:2: ( ( ( rule__DNS__Group__0 ) ) )
            // InternalDockerCompose.g:842:2: ( ( rule__DNS__Group__0 ) )
            {
            // InternalDockerCompose.g:842:2: ( ( rule__DNS__Group__0 ) )
            // InternalDockerCompose.g:843:3: ( rule__DNS__Group__0 )
            {
             before(grammarAccess.getDNSAccess().getGroup()); 
            // InternalDockerCompose.g:844:3: ( rule__DNS__Group__0 )
            // InternalDockerCompose.g:844:4: rule__DNS__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DNS__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDNSAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDNS"


    // $ANTLR start "entryRuleNetworkAddress"
    // InternalDockerCompose.g:853:1: entryRuleNetworkAddress : ruleNetworkAddress EOF ;
    public final void entryRuleNetworkAddress() throws RecognitionException {
        try {
            // InternalDockerCompose.g:854:1: ( ruleNetworkAddress EOF )
            // InternalDockerCompose.g:855:1: ruleNetworkAddress EOF
            {
             before(grammarAccess.getNetworkAddressRule()); 
            pushFollow(FOLLOW_1);
            ruleNetworkAddress();

            state._fsp--;

             after(grammarAccess.getNetworkAddressRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNetworkAddress"


    // $ANTLR start "ruleNetworkAddress"
    // InternalDockerCompose.g:862:1: ruleNetworkAddress : ( ( rule__NetworkAddress__Group__0 ) ) ;
    public final void ruleNetworkAddress() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:866:2: ( ( ( rule__NetworkAddress__Group__0 ) ) )
            // InternalDockerCompose.g:867:2: ( ( rule__NetworkAddress__Group__0 ) )
            {
            // InternalDockerCompose.g:867:2: ( ( rule__NetworkAddress__Group__0 ) )
            // InternalDockerCompose.g:868:3: ( rule__NetworkAddress__Group__0 )
            {
             before(grammarAccess.getNetworkAddressAccess().getGroup()); 
            // InternalDockerCompose.g:869:3: ( rule__NetworkAddress__Group__0 )
            // InternalDockerCompose.g:869:4: rule__NetworkAddress__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAddressAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNetworkAddress"


    // $ANTLR start "entryRuleEBoolean"
    // InternalDockerCompose.g:878:1: entryRuleEBoolean : ruleEBoolean EOF ;
    public final void entryRuleEBoolean() throws RecognitionException {
        try {
            // InternalDockerCompose.g:879:1: ( ruleEBoolean EOF )
            // InternalDockerCompose.g:880:1: ruleEBoolean EOF
            {
             before(grammarAccess.getEBooleanRule()); 
            pushFollow(FOLLOW_1);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getEBooleanRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEBoolean"


    // $ANTLR start "ruleEBoolean"
    // InternalDockerCompose.g:887:1: ruleEBoolean : ( ( rule__EBoolean__Alternatives ) ) ;
    public final void ruleEBoolean() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:891:2: ( ( ( rule__EBoolean__Alternatives ) ) )
            // InternalDockerCompose.g:892:2: ( ( rule__EBoolean__Alternatives ) )
            {
            // InternalDockerCompose.g:892:2: ( ( rule__EBoolean__Alternatives ) )
            // InternalDockerCompose.g:893:3: ( rule__EBoolean__Alternatives )
            {
             before(grammarAccess.getEBooleanAccess().getAlternatives()); 
            // InternalDockerCompose.g:894:3: ( rule__EBoolean__Alternatives )
            // InternalDockerCompose.g:894:4: rule__EBoolean__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EBoolean__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getEBooleanAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEBoolean"


    // $ANTLR start "ruleRestartPolicy"
    // InternalDockerCompose.g:903:1: ruleRestartPolicy : ( ( rule__RestartPolicy__Alternatives ) ) ;
    public final void ruleRestartPolicy() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:907:1: ( ( ( rule__RestartPolicy__Alternatives ) ) )
            // InternalDockerCompose.g:908:2: ( ( rule__RestartPolicy__Alternatives ) )
            {
            // InternalDockerCompose.g:908:2: ( ( rule__RestartPolicy__Alternatives ) )
            // InternalDockerCompose.g:909:3: ( rule__RestartPolicy__Alternatives )
            {
             before(grammarAccess.getRestartPolicyAccess().getAlternatives()); 
            // InternalDockerCompose.g:910:3: ( rule__RestartPolicy__Alternatives )
            // InternalDockerCompose.g:910:4: rule__RestartPolicy__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__RestartPolicy__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getRestartPolicyAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRestartPolicy"


    // $ANTLR start "ruleAccessMode"
    // InternalDockerCompose.g:919:1: ruleAccessMode : ( ( rule__AccessMode__Alternatives ) ) ;
    public final void ruleAccessMode() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:923:1: ( ( ( rule__AccessMode__Alternatives ) ) )
            // InternalDockerCompose.g:924:2: ( ( rule__AccessMode__Alternatives ) )
            {
            // InternalDockerCompose.g:924:2: ( ( rule__AccessMode__Alternatives ) )
            // InternalDockerCompose.g:925:3: ( rule__AccessMode__Alternatives )
            {
             before(grammarAccess.getAccessModeAccess().getAlternatives()); 
            // InternalDockerCompose.g:926:3: ( rule__AccessMode__Alternatives )
            // InternalDockerCompose.g:926:4: rule__AccessMode__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AccessMode__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getAccessModeAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAccessMode"


    // $ANTLR start "ruleMountType"
    // InternalDockerCompose.g:935:1: ruleMountType : ( ( rule__MountType__Alternatives ) ) ;
    public final void ruleMountType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:939:1: ( ( ( rule__MountType__Alternatives ) ) )
            // InternalDockerCompose.g:940:2: ( ( rule__MountType__Alternatives ) )
            {
            // InternalDockerCompose.g:940:2: ( ( rule__MountType__Alternatives ) )
            // InternalDockerCompose.g:941:3: ( rule__MountType__Alternatives )
            {
             before(grammarAccess.getMountTypeAccess().getAlternatives()); 
            // InternalDockerCompose.g:942:3: ( rule__MountType__Alternatives )
            // InternalDockerCompose.g:942:4: rule__MountType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__MountType__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getMountTypeAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMountType"


    // $ANTLR start "rulePropagationType"
    // InternalDockerCompose.g:951:1: rulePropagationType : ( ( rule__PropagationType__Alternatives ) ) ;
    public final void rulePropagationType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:955:1: ( ( ( rule__PropagationType__Alternatives ) ) )
            // InternalDockerCompose.g:956:2: ( ( rule__PropagationType__Alternatives ) )
            {
            // InternalDockerCompose.g:956:2: ( ( rule__PropagationType__Alternatives ) )
            // InternalDockerCompose.g:957:3: ( rule__PropagationType__Alternatives )
            {
             before(grammarAccess.getPropagationTypeAccess().getAlternatives()); 
            // InternalDockerCompose.g:958:3: ( rule__PropagationType__Alternatives )
            // InternalDockerCompose.g:958:4: rule__PropagationType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__PropagationType__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getPropagationTypeAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePropagationType"


    // $ANTLR start "ruleCondition"
    // InternalDockerCompose.g:967:1: ruleCondition : ( ( rule__Condition__Alternatives ) ) ;
    public final void ruleCondition() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:971:1: ( ( ( rule__Condition__Alternatives ) ) )
            // InternalDockerCompose.g:972:2: ( ( rule__Condition__Alternatives ) )
            {
            // InternalDockerCompose.g:972:2: ( ( rule__Condition__Alternatives ) )
            // InternalDockerCompose.g:973:3: ( rule__Condition__Alternatives )
            {
             before(grammarAccess.getConditionAccess().getAlternatives()); 
            // InternalDockerCompose.g:974:3: ( rule__Condition__Alternatives )
            // InternalDockerCompose.g:974:4: rule__Condition__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Condition__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getConditionAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCondition"


    // $ANTLR start "rule__Service__Alternatives_3_0"
    // InternalDockerCompose.g:982:1: rule__Service__Alternatives_3_0 : ( ( ( rule__Service__Group_3_0_0__0 ) ) | ( ( rule__Service__Group_3_0_1__0 ) ) );
    public final void rule__Service__Alternatives_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:986:1: ( ( ( rule__Service__Group_3_0_0__0 ) ) | ( ( rule__Service__Group_3_0_1__0 ) ) )
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==44) ) {
                alt1=1;
            }
            else if ( (LA1_0==45) ) {
                alt1=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 1, 0, input);

                throw nvae;
            }
            switch (alt1) {
                case 1 :
                    // InternalDockerCompose.g:987:2: ( ( rule__Service__Group_3_0_0__0 ) )
                    {
                    // InternalDockerCompose.g:987:2: ( ( rule__Service__Group_3_0_0__0 ) )
                    // InternalDockerCompose.g:988:3: ( rule__Service__Group_3_0_0__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_0_0()); 
                    // InternalDockerCompose.g:989:3: ( rule__Service__Group_3_0_0__0 )
                    // InternalDockerCompose.g:989:4: rule__Service__Group_3_0_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_0_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:993:2: ( ( rule__Service__Group_3_0_1__0 ) )
                    {
                    // InternalDockerCompose.g:993:2: ( ( rule__Service__Group_3_0_1__0 ) )
                    // InternalDockerCompose.g:994:3: ( rule__Service__Group_3_0_1__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_0_1()); 
                    // InternalDockerCompose.g:995:3: ( rule__Service__Group_3_0_1__0 )
                    // InternalDockerCompose.g:995:4: rule__Service__Group_3_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_0_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Alternatives_3_0"


    // $ANTLR start "rule__Service__Alternatives_3_8_1"
    // InternalDockerCompose.g:1003:1: rule__Service__Alternatives_3_8_1 : ( ( ( ( rule__Service__Depends_onAssignment_3_8_1_0 ) ) ( ( rule__Service__Depends_onAssignment_3_8_1_0 )* ) ) | ( ( ( rule__Service__Depends_onAssignment_3_8_1_1 ) ) ( ( rule__Service__Depends_onAssignment_3_8_1_1 )* ) ) );
    public final void rule__Service__Alternatives_3_8_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1007:1: ( ( ( ( rule__Service__Depends_onAssignment_3_8_1_0 ) ) ( ( rule__Service__Depends_onAssignment_3_8_1_0 )* ) ) | ( ( ( rule__Service__Depends_onAssignment_3_8_1_1 ) ) ( ( rule__Service__Depends_onAssignment_3_8_1_1 )* ) ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==53) ) {
                alt4=1;
            }
            else if ( ((LA4_0>=RULE_STRING && LA4_0<=RULE_ID)) ) {
                alt4=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalDockerCompose.g:1008:2: ( ( ( rule__Service__Depends_onAssignment_3_8_1_0 ) ) ( ( rule__Service__Depends_onAssignment_3_8_1_0 )* ) )
                    {
                    // InternalDockerCompose.g:1008:2: ( ( ( rule__Service__Depends_onAssignment_3_8_1_0 ) ) ( ( rule__Service__Depends_onAssignment_3_8_1_0 )* ) )
                    // InternalDockerCompose.g:1009:3: ( ( rule__Service__Depends_onAssignment_3_8_1_0 ) ) ( ( rule__Service__Depends_onAssignment_3_8_1_0 )* )
                    {
                    // InternalDockerCompose.g:1009:3: ( ( rule__Service__Depends_onAssignment_3_8_1_0 ) )
                    // InternalDockerCompose.g:1010:4: ( rule__Service__Depends_onAssignment_3_8_1_0 )
                    {
                     before(grammarAccess.getServiceAccess().getDepends_onAssignment_3_8_1_0()); 
                    // InternalDockerCompose.g:1011:4: ( rule__Service__Depends_onAssignment_3_8_1_0 )
                    // InternalDockerCompose.g:1011:5: rule__Service__Depends_onAssignment_3_8_1_0
                    {
                    pushFollow(FOLLOW_3);
                    rule__Service__Depends_onAssignment_3_8_1_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getDepends_onAssignment_3_8_1_0()); 

                    }

                    // InternalDockerCompose.g:1014:3: ( ( rule__Service__Depends_onAssignment_3_8_1_0 )* )
                    // InternalDockerCompose.g:1015:4: ( rule__Service__Depends_onAssignment_3_8_1_0 )*
                    {
                     before(grammarAccess.getServiceAccess().getDepends_onAssignment_3_8_1_0()); 
                    // InternalDockerCompose.g:1016:4: ( rule__Service__Depends_onAssignment_3_8_1_0 )*
                    loop2:
                    do {
                        int alt2=2;
                        int LA2_0 = input.LA(1);

                        if ( (LA2_0==53) ) {
                            alt2=1;
                        }


                        switch (alt2) {
                    	case 1 :
                    	    // InternalDockerCompose.g:1016:5: rule__Service__Depends_onAssignment_3_8_1_0
                    	    {
                    	    pushFollow(FOLLOW_3);
                    	    rule__Service__Depends_onAssignment_3_8_1_0();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop2;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getDepends_onAssignment_3_8_1_0()); 

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1021:2: ( ( ( rule__Service__Depends_onAssignment_3_8_1_1 ) ) ( ( rule__Service__Depends_onAssignment_3_8_1_1 )* ) )
                    {
                    // InternalDockerCompose.g:1021:2: ( ( ( rule__Service__Depends_onAssignment_3_8_1_1 ) ) ( ( rule__Service__Depends_onAssignment_3_8_1_1 )* ) )
                    // InternalDockerCompose.g:1022:3: ( ( rule__Service__Depends_onAssignment_3_8_1_1 ) ) ( ( rule__Service__Depends_onAssignment_3_8_1_1 )* )
                    {
                    // InternalDockerCompose.g:1022:3: ( ( rule__Service__Depends_onAssignment_3_8_1_1 ) )
                    // InternalDockerCompose.g:1023:4: ( rule__Service__Depends_onAssignment_3_8_1_1 )
                    {
                     before(grammarAccess.getServiceAccess().getDepends_onAssignment_3_8_1_1()); 
                    // InternalDockerCompose.g:1024:4: ( rule__Service__Depends_onAssignment_3_8_1_1 )
                    // InternalDockerCompose.g:1024:5: rule__Service__Depends_onAssignment_3_8_1_1
                    {
                    pushFollow(FOLLOW_4);
                    rule__Service__Depends_onAssignment_3_8_1_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getDepends_onAssignment_3_8_1_1()); 

                    }

                    // InternalDockerCompose.g:1027:3: ( ( rule__Service__Depends_onAssignment_3_8_1_1 )* )
                    // InternalDockerCompose.g:1028:4: ( rule__Service__Depends_onAssignment_3_8_1_1 )*
                    {
                     before(grammarAccess.getServiceAccess().getDepends_onAssignment_3_8_1_1()); 
                    // InternalDockerCompose.g:1029:4: ( rule__Service__Depends_onAssignment_3_8_1_1 )*
                    loop3:
                    do {
                        int alt3=2;
                        int LA3_0 = input.LA(1);

                        if ( (LA3_0==RULE_STRING) ) {
                            int LA3_2 = input.LA(2);

                            if ( (LA3_2==43) ) {
                                int LA3_4 = input.LA(3);

                                if ( (LA3_4==58) ) {
                                    alt3=1;
                                }


                            }


                        }
                        else if ( (LA3_0==RULE_ID) ) {
                            int LA3_3 = input.LA(2);

                            if ( (LA3_3==43) ) {
                                int LA3_4 = input.LA(3);

                                if ( (LA3_4==58) ) {
                                    alt3=1;
                                }


                            }


                        }


                        switch (alt3) {
                    	case 1 :
                    	    // InternalDockerCompose.g:1029:5: rule__Service__Depends_onAssignment_3_8_1_1
                    	    {
                    	    pushFollow(FOLLOW_4);
                    	    rule__Service__Depends_onAssignment_3_8_1_1();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop3;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getDepends_onAssignment_3_8_1_1()); 

                    }


                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Alternatives_3_8_1"


    // $ANTLR start "rule__Service__Alternatives_3_10_1"
    // InternalDockerCompose.g:1038:1: rule__Service__Alternatives_3_10_1 : ( ( ( ( rule__Service__Group_3_10_1_0__0 ) ) ( ( rule__Service__Group_3_10_1_0__0 )* ) ) | ( ( ( rule__Service__Group_3_10_1_1__0 ) ) ( ( rule__Service__Group_3_10_1_1__0 )* ) ) );
    public final void rule__Service__Alternatives_3_10_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1042:1: ( ( ( ( rule__Service__Group_3_10_1_0__0 ) ) ( ( rule__Service__Group_3_10_1_0__0 )* ) ) | ( ( ( rule__Service__Group_3_10_1_1__0 ) ) ( ( rule__Service__Group_3_10_1_1__0 )* ) ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==53) ) {
                int LA7_1 = input.LA(2);

                if ( ((LA7_1>=RULE_STRING && LA7_1<=RULE_ID)) ) {
                    alt7=1;
                }
                else if ( (LA7_1==51||(LA7_1>=63 && LA7_1<=66)||LA7_1==68||LA7_1==70) ) {
                    alt7=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 7, 1, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalDockerCompose.g:1043:2: ( ( ( rule__Service__Group_3_10_1_0__0 ) ) ( ( rule__Service__Group_3_10_1_0__0 )* ) )
                    {
                    // InternalDockerCompose.g:1043:2: ( ( ( rule__Service__Group_3_10_1_0__0 ) ) ( ( rule__Service__Group_3_10_1_0__0 )* ) )
                    // InternalDockerCompose.g:1044:3: ( ( rule__Service__Group_3_10_1_0__0 ) ) ( ( rule__Service__Group_3_10_1_0__0 )* )
                    {
                    // InternalDockerCompose.g:1044:3: ( ( rule__Service__Group_3_10_1_0__0 ) )
                    // InternalDockerCompose.g:1045:4: ( rule__Service__Group_3_10_1_0__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_10_1_0()); 
                    // InternalDockerCompose.g:1046:4: ( rule__Service__Group_3_10_1_0__0 )
                    // InternalDockerCompose.g:1046:5: rule__Service__Group_3_10_1_0__0
                    {
                    pushFollow(FOLLOW_3);
                    rule__Service__Group_3_10_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_10_1_0()); 

                    }

                    // InternalDockerCompose.g:1049:3: ( ( rule__Service__Group_3_10_1_0__0 )* )
                    // InternalDockerCompose.g:1050:4: ( rule__Service__Group_3_10_1_0__0 )*
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_10_1_0()); 
                    // InternalDockerCompose.g:1051:4: ( rule__Service__Group_3_10_1_0__0 )*
                    loop5:
                    do {
                        int alt5=2;
                        int LA5_0 = input.LA(1);

                        if ( (LA5_0==53) ) {
                            alt5=1;
                        }


                        switch (alt5) {
                    	case 1 :
                    	    // InternalDockerCompose.g:1051:5: rule__Service__Group_3_10_1_0__0
                    	    {
                    	    pushFollow(FOLLOW_3);
                    	    rule__Service__Group_3_10_1_0__0();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop5;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getGroup_3_10_1_0()); 

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1056:2: ( ( ( rule__Service__Group_3_10_1_1__0 ) ) ( ( rule__Service__Group_3_10_1_1__0 )* ) )
                    {
                    // InternalDockerCompose.g:1056:2: ( ( ( rule__Service__Group_3_10_1_1__0 ) ) ( ( rule__Service__Group_3_10_1_1__0 )* ) )
                    // InternalDockerCompose.g:1057:3: ( ( rule__Service__Group_3_10_1_1__0 ) ) ( ( rule__Service__Group_3_10_1_1__0 )* )
                    {
                    // InternalDockerCompose.g:1057:3: ( ( rule__Service__Group_3_10_1_1__0 ) )
                    // InternalDockerCompose.g:1058:4: ( rule__Service__Group_3_10_1_1__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_10_1_1()); 
                    // InternalDockerCompose.g:1059:4: ( rule__Service__Group_3_10_1_1__0 )
                    // InternalDockerCompose.g:1059:5: rule__Service__Group_3_10_1_1__0
                    {
                    pushFollow(FOLLOW_3);
                    rule__Service__Group_3_10_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_10_1_1()); 

                    }

                    // InternalDockerCompose.g:1062:3: ( ( rule__Service__Group_3_10_1_1__0 )* )
                    // InternalDockerCompose.g:1063:4: ( rule__Service__Group_3_10_1_1__0 )*
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_10_1_1()); 
                    // InternalDockerCompose.g:1064:4: ( rule__Service__Group_3_10_1_1__0 )*
                    loop6:
                    do {
                        int alt6=2;
                        int LA6_0 = input.LA(1);

                        if ( (LA6_0==53) ) {
                            alt6=1;
                        }


                        switch (alt6) {
                    	case 1 :
                    	    // InternalDockerCompose.g:1064:5: rule__Service__Group_3_10_1_1__0
                    	    {
                    	    pushFollow(FOLLOW_3);
                    	    rule__Service__Group_3_10_1_1__0();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop6;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getGroup_3_10_1_1()); 

                    }


                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Alternatives_3_10_1"


    // $ANTLR start "rule__Service__Alternatives_3_11_1"
    // InternalDockerCompose.g:1073:1: rule__Service__Alternatives_3_11_1 : ( ( ( ( rule__Service__Group_3_11_1_0__0 ) ) ( ( rule__Service__Group_3_11_1_0__0 )* ) ) | ( ( ( rule__Service__Group_3_11_1_1__0 ) ) ( ( rule__Service__Group_3_11_1_1__0 )* ) ) );
    public final void rule__Service__Alternatives_3_11_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1077:1: ( ( ( ( rule__Service__Group_3_11_1_0__0 ) ) ( ( rule__Service__Group_3_11_1_0__0 )* ) ) | ( ( ( rule__Service__Group_3_11_1_1__0 ) ) ( ( rule__Service__Group_3_11_1_1__0 )* ) ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==53) ) {
                int LA10_1 = input.LA(2);

                if ( (LA10_1==63||LA10_1==65||(LA10_1>=72 && LA10_1<=74)) ) {
                    alt10=2;
                }
                else if ( ((LA10_1>=RULE_STRING && LA10_1<=RULE_ID)) ) {
                    alt10=1;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 1, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalDockerCompose.g:1078:2: ( ( ( rule__Service__Group_3_11_1_0__0 ) ) ( ( rule__Service__Group_3_11_1_0__0 )* ) )
                    {
                    // InternalDockerCompose.g:1078:2: ( ( ( rule__Service__Group_3_11_1_0__0 ) ) ( ( rule__Service__Group_3_11_1_0__0 )* ) )
                    // InternalDockerCompose.g:1079:3: ( ( rule__Service__Group_3_11_1_0__0 ) ) ( ( rule__Service__Group_3_11_1_0__0 )* )
                    {
                    // InternalDockerCompose.g:1079:3: ( ( rule__Service__Group_3_11_1_0__0 ) )
                    // InternalDockerCompose.g:1080:4: ( rule__Service__Group_3_11_1_0__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_11_1_0()); 
                    // InternalDockerCompose.g:1081:4: ( rule__Service__Group_3_11_1_0__0 )
                    // InternalDockerCompose.g:1081:5: rule__Service__Group_3_11_1_0__0
                    {
                    pushFollow(FOLLOW_3);
                    rule__Service__Group_3_11_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_11_1_0()); 

                    }

                    // InternalDockerCompose.g:1084:3: ( ( rule__Service__Group_3_11_1_0__0 )* )
                    // InternalDockerCompose.g:1085:4: ( rule__Service__Group_3_11_1_0__0 )*
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_11_1_0()); 
                    // InternalDockerCompose.g:1086:4: ( rule__Service__Group_3_11_1_0__0 )*
                    loop8:
                    do {
                        int alt8=2;
                        int LA8_0 = input.LA(1);

                        if ( (LA8_0==53) ) {
                            alt8=1;
                        }


                        switch (alt8) {
                    	case 1 :
                    	    // InternalDockerCompose.g:1086:5: rule__Service__Group_3_11_1_0__0
                    	    {
                    	    pushFollow(FOLLOW_3);
                    	    rule__Service__Group_3_11_1_0__0();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop8;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getGroup_3_11_1_0()); 

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1091:2: ( ( ( rule__Service__Group_3_11_1_1__0 ) ) ( ( rule__Service__Group_3_11_1_1__0 )* ) )
                    {
                    // InternalDockerCompose.g:1091:2: ( ( ( rule__Service__Group_3_11_1_1__0 ) ) ( ( rule__Service__Group_3_11_1_1__0 )* ) )
                    // InternalDockerCompose.g:1092:3: ( ( rule__Service__Group_3_11_1_1__0 ) ) ( ( rule__Service__Group_3_11_1_1__0 )* )
                    {
                    // InternalDockerCompose.g:1092:3: ( ( rule__Service__Group_3_11_1_1__0 ) )
                    // InternalDockerCompose.g:1093:4: ( rule__Service__Group_3_11_1_1__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_11_1_1()); 
                    // InternalDockerCompose.g:1094:4: ( rule__Service__Group_3_11_1_1__0 )
                    // InternalDockerCompose.g:1094:5: rule__Service__Group_3_11_1_1__0
                    {
                    pushFollow(FOLLOW_3);
                    rule__Service__Group_3_11_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_11_1_1()); 

                    }

                    // InternalDockerCompose.g:1097:3: ( ( rule__Service__Group_3_11_1_1__0 )* )
                    // InternalDockerCompose.g:1098:4: ( rule__Service__Group_3_11_1_1__0 )*
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_11_1_1()); 
                    // InternalDockerCompose.g:1099:4: ( rule__Service__Group_3_11_1_1__0 )*
                    loop9:
                    do {
                        int alt9=2;
                        int LA9_0 = input.LA(1);

                        if ( (LA9_0==53) ) {
                            alt9=1;
                        }


                        switch (alt9) {
                    	case 1 :
                    	    // InternalDockerCompose.g:1099:5: rule__Service__Group_3_11_1_1__0
                    	    {
                    	    pushFollow(FOLLOW_3);
                    	    rule__Service__Group_3_11_1_1__0();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop9;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getGroup_3_11_1_1()); 

                    }


                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Alternatives_3_11_1"


    // $ANTLR start "rule__Service__Alternatives_3_12_1"
    // InternalDockerCompose.g:1108:1: rule__Service__Alternatives_3_12_1 : ( ( ( ( rule__Service__Group_3_12_1_0__0 ) ) ( ( rule__Service__Group_3_12_1_0__0 )* ) ) | ( ( ( rule__Service__Group_3_12_1_1__0 ) ) ( ( rule__Service__Group_3_12_1_1__0 )* ) ) );
    public final void rule__Service__Alternatives_3_12_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1112:1: ( ( ( ( rule__Service__Group_3_12_1_0__0 ) ) ( ( rule__Service__Group_3_12_1_0__0 )* ) ) | ( ( ( rule__Service__Group_3_12_1_1__0 ) ) ( ( rule__Service__Group_3_12_1_1__0 )* ) ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==53) ) {
                int LA13_1 = input.LA(2);

                if ( (LA13_1==63||LA13_1==65||(LA13_1>=72 && LA13_1<=74)) ) {
                    alt13=2;
                }
                else if ( ((LA13_1>=RULE_STRING && LA13_1<=RULE_ID)) ) {
                    alt13=1;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 13, 1, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalDockerCompose.g:1113:2: ( ( ( rule__Service__Group_3_12_1_0__0 ) ) ( ( rule__Service__Group_3_12_1_0__0 )* ) )
                    {
                    // InternalDockerCompose.g:1113:2: ( ( ( rule__Service__Group_3_12_1_0__0 ) ) ( ( rule__Service__Group_3_12_1_0__0 )* ) )
                    // InternalDockerCompose.g:1114:3: ( ( rule__Service__Group_3_12_1_0__0 ) ) ( ( rule__Service__Group_3_12_1_0__0 )* )
                    {
                    // InternalDockerCompose.g:1114:3: ( ( rule__Service__Group_3_12_1_0__0 ) )
                    // InternalDockerCompose.g:1115:4: ( rule__Service__Group_3_12_1_0__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_12_1_0()); 
                    // InternalDockerCompose.g:1116:4: ( rule__Service__Group_3_12_1_0__0 )
                    // InternalDockerCompose.g:1116:5: rule__Service__Group_3_12_1_0__0
                    {
                    pushFollow(FOLLOW_3);
                    rule__Service__Group_3_12_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_12_1_0()); 

                    }

                    // InternalDockerCompose.g:1119:3: ( ( rule__Service__Group_3_12_1_0__0 )* )
                    // InternalDockerCompose.g:1120:4: ( rule__Service__Group_3_12_1_0__0 )*
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_12_1_0()); 
                    // InternalDockerCompose.g:1121:4: ( rule__Service__Group_3_12_1_0__0 )*
                    loop11:
                    do {
                        int alt11=2;
                        int LA11_0 = input.LA(1);

                        if ( (LA11_0==53) ) {
                            alt11=1;
                        }


                        switch (alt11) {
                    	case 1 :
                    	    // InternalDockerCompose.g:1121:5: rule__Service__Group_3_12_1_0__0
                    	    {
                    	    pushFollow(FOLLOW_3);
                    	    rule__Service__Group_3_12_1_0__0();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop11;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getGroup_3_12_1_0()); 

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1126:2: ( ( ( rule__Service__Group_3_12_1_1__0 ) ) ( ( rule__Service__Group_3_12_1_1__0 )* ) )
                    {
                    // InternalDockerCompose.g:1126:2: ( ( ( rule__Service__Group_3_12_1_1__0 ) ) ( ( rule__Service__Group_3_12_1_1__0 )* ) )
                    // InternalDockerCompose.g:1127:3: ( ( rule__Service__Group_3_12_1_1__0 ) ) ( ( rule__Service__Group_3_12_1_1__0 )* )
                    {
                    // InternalDockerCompose.g:1127:3: ( ( rule__Service__Group_3_12_1_1__0 ) )
                    // InternalDockerCompose.g:1128:4: ( rule__Service__Group_3_12_1_1__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_12_1_1()); 
                    // InternalDockerCompose.g:1129:4: ( rule__Service__Group_3_12_1_1__0 )
                    // InternalDockerCompose.g:1129:5: rule__Service__Group_3_12_1_1__0
                    {
                    pushFollow(FOLLOW_3);
                    rule__Service__Group_3_12_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_12_1_1()); 

                    }

                    // InternalDockerCompose.g:1132:3: ( ( rule__Service__Group_3_12_1_1__0 )* )
                    // InternalDockerCompose.g:1133:4: ( rule__Service__Group_3_12_1_1__0 )*
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_12_1_1()); 
                    // InternalDockerCompose.g:1134:4: ( rule__Service__Group_3_12_1_1__0 )*
                    loop12:
                    do {
                        int alt12=2;
                        int LA12_0 = input.LA(1);

                        if ( (LA12_0==53) ) {
                            alt12=1;
                        }


                        switch (alt12) {
                    	case 1 :
                    	    // InternalDockerCompose.g:1134:5: rule__Service__Group_3_12_1_1__0
                    	    {
                    	    pushFollow(FOLLOW_3);
                    	    rule__Service__Group_3_12_1_1__0();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop12;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getGroup_3_12_1_1()); 

                    }


                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Alternatives_3_12_1"


    // $ANTLR start "rule__Service__Alternatives_3_14_1"
    // InternalDockerCompose.g:1143:1: rule__Service__Alternatives_3_14_1 : ( ( ( ( rule__Service__Group_3_14_1_0__0 ) ) ( ( rule__Service__Group_3_14_1_0__0 )* ) ) | ( ( rule__Service__DnsAssignment_3_14_1_1 ) ) );
    public final void rule__Service__Alternatives_3_14_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1147:1: ( ( ( ( rule__Service__Group_3_14_1_0__0 ) ) ( ( rule__Service__Group_3_14_1_0__0 )* ) ) | ( ( rule__Service__DnsAssignment_3_14_1_1 ) ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==53) ) {
                alt15=1;
            }
            else if ( (LA15_0==RULE_INT) ) {
                alt15=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalDockerCompose.g:1148:2: ( ( ( rule__Service__Group_3_14_1_0__0 ) ) ( ( rule__Service__Group_3_14_1_0__0 )* ) )
                    {
                    // InternalDockerCompose.g:1148:2: ( ( ( rule__Service__Group_3_14_1_0__0 ) ) ( ( rule__Service__Group_3_14_1_0__0 )* ) )
                    // InternalDockerCompose.g:1149:3: ( ( rule__Service__Group_3_14_1_0__0 ) ) ( ( rule__Service__Group_3_14_1_0__0 )* )
                    {
                    // InternalDockerCompose.g:1149:3: ( ( rule__Service__Group_3_14_1_0__0 ) )
                    // InternalDockerCompose.g:1150:4: ( rule__Service__Group_3_14_1_0__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_14_1_0()); 
                    // InternalDockerCompose.g:1151:4: ( rule__Service__Group_3_14_1_0__0 )
                    // InternalDockerCompose.g:1151:5: rule__Service__Group_3_14_1_0__0
                    {
                    pushFollow(FOLLOW_3);
                    rule__Service__Group_3_14_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_14_1_0()); 

                    }

                    // InternalDockerCompose.g:1154:3: ( ( rule__Service__Group_3_14_1_0__0 )* )
                    // InternalDockerCompose.g:1155:4: ( rule__Service__Group_3_14_1_0__0 )*
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_14_1_0()); 
                    // InternalDockerCompose.g:1156:4: ( rule__Service__Group_3_14_1_0__0 )*
                    loop14:
                    do {
                        int alt14=2;
                        int LA14_0 = input.LA(1);

                        if ( (LA14_0==53) ) {
                            alt14=1;
                        }


                        switch (alt14) {
                    	case 1 :
                    	    // InternalDockerCompose.g:1156:5: rule__Service__Group_3_14_1_0__0
                    	    {
                    	    pushFollow(FOLLOW_3);
                    	    rule__Service__Group_3_14_1_0__0();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop14;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getGroup_3_14_1_0()); 

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1161:2: ( ( rule__Service__DnsAssignment_3_14_1_1 ) )
                    {
                    // InternalDockerCompose.g:1161:2: ( ( rule__Service__DnsAssignment_3_14_1_1 ) )
                    // InternalDockerCompose.g:1162:3: ( rule__Service__DnsAssignment_3_14_1_1 )
                    {
                     before(grammarAccess.getServiceAccess().getDnsAssignment_3_14_1_1()); 
                    // InternalDockerCompose.g:1163:3: ( rule__Service__DnsAssignment_3_14_1_1 )
                    // InternalDockerCompose.g:1163:4: rule__Service__DnsAssignment_3_14_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__DnsAssignment_3_14_1_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getDnsAssignment_3_14_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Alternatives_3_14_1"


    // $ANTLR start "rule__Image__Alternatives"
    // InternalDockerCompose.g:1171:1: rule__Image__Alternatives : ( ( ruleEString ) | ( ( rule__Image__Group_1__0 ) ) );
    public final void rule__Image__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1175:1: ( ( ruleEString ) | ( ( rule__Image__Group_1__0 ) ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==RULE_STRING) ) {
                alt16=1;
            }
            else if ( (LA16_0==RULE_ID) ) {
                int LA16_2 = input.LA(2);

                if ( (LA16_2==EOF||(LA16_2>=RULE_STRING && LA16_2<=RULE_ID)||(LA16_2>=37 && LA16_2<=42)||(LA16_2>=44 && LA16_2<=52)||(LA16_2>=54 && LA16_2<=57)) ) {
                    alt16=1;
                }
                else if ( (LA16_2==43) ) {
                    alt16=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 16, 2, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalDockerCompose.g:1176:2: ( ruleEString )
                    {
                    // InternalDockerCompose.g:1176:2: ( ruleEString )
                    // InternalDockerCompose.g:1177:3: ruleEString
                    {
                     before(grammarAccess.getImageAccess().getEStringParserRuleCall_0()); 
                    pushFollow(FOLLOW_2);
                    ruleEString();

                    state._fsp--;

                     after(grammarAccess.getImageAccess().getEStringParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1182:2: ( ( rule__Image__Group_1__0 ) )
                    {
                    // InternalDockerCompose.g:1182:2: ( ( rule__Image__Group_1__0 ) )
                    // InternalDockerCompose.g:1183:3: ( rule__Image__Group_1__0 )
                    {
                     before(grammarAccess.getImageAccess().getGroup_1()); 
                    // InternalDockerCompose.g:1184:3: ( rule__Image__Group_1__0 )
                    // InternalDockerCompose.g:1184:4: rule__Image__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Image__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImageAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Alternatives"


    // $ANTLR start "rule__NetworkConnector__Alternatives_1"
    // InternalDockerCompose.g:1192:1: rule__NetworkConnector__Alternatives_1 : ( ( ( rule__NetworkConnector__Group_1_0__0 ) ) | ( ( rule__NetworkConnector__Group_1_1__0 ) ) );
    public final void rule__NetworkConnector__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1196:1: ( ( ( rule__NetworkConnector__Group_1_0__0 ) ) | ( ( rule__NetworkConnector__Group_1_1__0 ) ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==53) ) {
                alt17=1;
            }
            else if ( ((LA17_0>=RULE_STRING && LA17_0<=RULE_ID)) ) {
                alt17=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalDockerCompose.g:1197:2: ( ( rule__NetworkConnector__Group_1_0__0 ) )
                    {
                    // InternalDockerCompose.g:1197:2: ( ( rule__NetworkConnector__Group_1_0__0 ) )
                    // InternalDockerCompose.g:1198:3: ( rule__NetworkConnector__Group_1_0__0 )
                    {
                     before(grammarAccess.getNetworkConnectorAccess().getGroup_1_0()); 
                    // InternalDockerCompose.g:1199:3: ( rule__NetworkConnector__Group_1_0__0 )
                    // InternalDockerCompose.g:1199:4: rule__NetworkConnector__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector__Group_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkConnectorAccess().getGroup_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1203:2: ( ( rule__NetworkConnector__Group_1_1__0 ) )
                    {
                    // InternalDockerCompose.g:1203:2: ( ( rule__NetworkConnector__Group_1_1__0 ) )
                    // InternalDockerCompose.g:1204:3: ( rule__NetworkConnector__Group_1_1__0 )
                    {
                     before(grammarAccess.getNetworkConnectorAccess().getGroup_1_1()); 
                    // InternalDockerCompose.g:1205:3: ( rule__NetworkConnector__Group_1_1__0 )
                    // InternalDockerCompose.g:1205:4: rule__NetworkConnector__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector__Group_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkConnectorAccess().getGroup_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Alternatives_1"


    // $ANTLR start "rule__Network__Alternatives_3"
    // InternalDockerCompose.g:1213:1: rule__Network__Alternatives_3 : ( ( ( rule__Network__Group_3_0__0 ) ) | ( ( rule__Network__UnorderedGroup_3_1 ) ) );
    public final void rule__Network__Alternatives_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1217:1: ( ( ( rule__Network__Group_3_0__0 ) ) | ( ( rule__Network__UnorderedGroup_3_1 ) ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==75) ) {
                alt18=1;
            }
            else if ( (LA18_0==EOF||(LA18_0>=RULE_STRING && LA18_0<=RULE_ID)||(LA18_0>=37 && LA18_0<=42)||(LA18_0>=77 && LA18_0<=85)) ) {
                alt18=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalDockerCompose.g:1218:2: ( ( rule__Network__Group_3_0__0 ) )
                    {
                    // InternalDockerCompose.g:1218:2: ( ( rule__Network__Group_3_0__0 ) )
                    // InternalDockerCompose.g:1219:3: ( rule__Network__Group_3_0__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_0()); 
                    // InternalDockerCompose.g:1220:3: ( rule__Network__Group_3_0__0 )
                    // InternalDockerCompose.g:1220:4: rule__Network__Group_3_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1224:2: ( ( rule__Network__UnorderedGroup_3_1 ) )
                    {
                    // InternalDockerCompose.g:1224:2: ( ( rule__Network__UnorderedGroup_3_1 ) )
                    // InternalDockerCompose.g:1225:3: ( rule__Network__UnorderedGroup_3_1 )
                    {
                     before(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1()); 
                    // InternalDockerCompose.g:1226:3: ( rule__Network__UnorderedGroup_3_1 )
                    // InternalDockerCompose.g:1226:4: rule__Network__UnorderedGroup_3_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Alternatives_3"


    // $ANTLR start "rule__EString__Alternatives"
    // InternalDockerCompose.g:1234:1: rule__EString__Alternatives : ( ( RULE_STRING ) | ( RULE_ID ) );
    public final void rule__EString__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1238:1: ( ( RULE_STRING ) | ( RULE_ID ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==RULE_STRING) ) {
                alt19=1;
            }
            else if ( (LA19_0==RULE_ID) ) {
                alt19=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalDockerCompose.g:1239:2: ( RULE_STRING )
                    {
                    // InternalDockerCompose.g:1239:2: ( RULE_STRING )
                    // InternalDockerCompose.g:1240:3: RULE_STRING
                    {
                     before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
                    match(input,RULE_STRING,FOLLOW_2); 
                     after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1245:2: ( RULE_ID )
                    {
                    // InternalDockerCompose.g:1245:2: ( RULE_ID )
                    // InternalDockerCompose.g:1246:3: RULE_ID
                    {
                     before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
                    match(input,RULE_ID,FOLLOW_2); 
                     after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EString__Alternatives"


    // $ANTLR start "rule__EBoolean__Alternatives"
    // InternalDockerCompose.g:1255:1: rule__EBoolean__Alternatives : ( ( 'true' ) | ( 'false' ) );
    public final void rule__EBoolean__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1259:1: ( ( 'true' ) | ( 'false' ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==15) ) {
                alt20=1;
            }
            else if ( (LA20_0==16) ) {
                alt20=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalDockerCompose.g:1260:2: ( 'true' )
                    {
                    // InternalDockerCompose.g:1260:2: ( 'true' )
                    // InternalDockerCompose.g:1261:3: 'true'
                    {
                     before(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); 
                    match(input,15,FOLLOW_2); 
                     after(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1266:2: ( 'false' )
                    {
                    // InternalDockerCompose.g:1266:2: ( 'false' )
                    // InternalDockerCompose.g:1267:3: 'false'
                    {
                     before(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); 
                    match(input,16,FOLLOW_2); 
                     after(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EBoolean__Alternatives"


    // $ANTLR start "rule__RestartPolicy__Alternatives"
    // InternalDockerCompose.g:1276:1: rule__RestartPolicy__Alternatives : ( ( ( '\"no\"' ) ) | ( ( 'always' ) ) | ( ( 'on-failure' ) ) | ( ( 'unless-stopped' ) ) );
    public final void rule__RestartPolicy__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1280:1: ( ( ( '\"no\"' ) ) | ( ( 'always' ) ) | ( ( 'on-failure' ) ) | ( ( 'unless-stopped' ) ) )
            int alt21=4;
            switch ( input.LA(1) ) {
            case 17:
                {
                alt21=1;
                }
                break;
            case 18:
                {
                alt21=2;
                }
                break;
            case 19:
                {
                alt21=3;
                }
                break;
            case 20:
                {
                alt21=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }

            switch (alt21) {
                case 1 :
                    // InternalDockerCompose.g:1281:2: ( ( '\"no\"' ) )
                    {
                    // InternalDockerCompose.g:1281:2: ( ( '\"no\"' ) )
                    // InternalDockerCompose.g:1282:3: ( '\"no\"' )
                    {
                     before(grammarAccess.getRestartPolicyAccess().getNoEnumLiteralDeclaration_0()); 
                    // InternalDockerCompose.g:1283:3: ( '\"no\"' )
                    // InternalDockerCompose.g:1283:4: '\"no\"'
                    {
                    match(input,17,FOLLOW_2); 

                    }

                     after(grammarAccess.getRestartPolicyAccess().getNoEnumLiteralDeclaration_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1287:2: ( ( 'always' ) )
                    {
                    // InternalDockerCompose.g:1287:2: ( ( 'always' ) )
                    // InternalDockerCompose.g:1288:3: ( 'always' )
                    {
                     before(grammarAccess.getRestartPolicyAccess().getAlwaysEnumLiteralDeclaration_1()); 
                    // InternalDockerCompose.g:1289:3: ( 'always' )
                    // InternalDockerCompose.g:1289:4: 'always'
                    {
                    match(input,18,FOLLOW_2); 

                    }

                     after(grammarAccess.getRestartPolicyAccess().getAlwaysEnumLiteralDeclaration_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1293:2: ( ( 'on-failure' ) )
                    {
                    // InternalDockerCompose.g:1293:2: ( ( 'on-failure' ) )
                    // InternalDockerCompose.g:1294:3: ( 'on-failure' )
                    {
                     before(grammarAccess.getRestartPolicyAccess().getOnfailureEnumLiteralDeclaration_2()); 
                    // InternalDockerCompose.g:1295:3: ( 'on-failure' )
                    // InternalDockerCompose.g:1295:4: 'on-failure'
                    {
                    match(input,19,FOLLOW_2); 

                    }

                     after(grammarAccess.getRestartPolicyAccess().getOnfailureEnumLiteralDeclaration_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:1299:2: ( ( 'unless-stopped' ) )
                    {
                    // InternalDockerCompose.g:1299:2: ( ( 'unless-stopped' ) )
                    // InternalDockerCompose.g:1300:3: ( 'unless-stopped' )
                    {
                     before(grammarAccess.getRestartPolicyAccess().getUnlessstoppedEnumLiteralDeclaration_3()); 
                    // InternalDockerCompose.g:1301:3: ( 'unless-stopped' )
                    // InternalDockerCompose.g:1301:4: 'unless-stopped'
                    {
                    match(input,20,FOLLOW_2); 

                    }

                     after(grammarAccess.getRestartPolicyAccess().getUnlessstoppedEnumLiteralDeclaration_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestartPolicy__Alternatives"


    // $ANTLR start "rule__AccessMode__Alternatives"
    // InternalDockerCompose.g:1309:1: rule__AccessMode__Alternatives : ( ( ( 'rw' ) ) | ( ( 'ro' ) ) | ( ( 'z' ) ) );
    public final void rule__AccessMode__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1313:1: ( ( ( 'rw' ) ) | ( ( 'ro' ) ) | ( ( 'z' ) ) )
            int alt22=3;
            switch ( input.LA(1) ) {
            case 21:
                {
                alt22=1;
                }
                break;
            case 22:
                {
                alt22=2;
                }
                break;
            case 23:
                {
                alt22=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }

            switch (alt22) {
                case 1 :
                    // InternalDockerCompose.g:1314:2: ( ( 'rw' ) )
                    {
                    // InternalDockerCompose.g:1314:2: ( ( 'rw' ) )
                    // InternalDockerCompose.g:1315:3: ( 'rw' )
                    {
                     before(grammarAccess.getAccessModeAccess().getRwEnumLiteralDeclaration_0()); 
                    // InternalDockerCompose.g:1316:3: ( 'rw' )
                    // InternalDockerCompose.g:1316:4: 'rw'
                    {
                    match(input,21,FOLLOW_2); 

                    }

                     after(grammarAccess.getAccessModeAccess().getRwEnumLiteralDeclaration_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1320:2: ( ( 'ro' ) )
                    {
                    // InternalDockerCompose.g:1320:2: ( ( 'ro' ) )
                    // InternalDockerCompose.g:1321:3: ( 'ro' )
                    {
                     before(grammarAccess.getAccessModeAccess().getRoEnumLiteralDeclaration_1()); 
                    // InternalDockerCompose.g:1322:3: ( 'ro' )
                    // InternalDockerCompose.g:1322:4: 'ro'
                    {
                    match(input,22,FOLLOW_2); 

                    }

                     after(grammarAccess.getAccessModeAccess().getRoEnumLiteralDeclaration_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1326:2: ( ( 'z' ) )
                    {
                    // InternalDockerCompose.g:1326:2: ( ( 'z' ) )
                    // InternalDockerCompose.g:1327:3: ( 'z' )
                    {
                     before(grammarAccess.getAccessModeAccess().getZEnumLiteralDeclaration_2()); 
                    // InternalDockerCompose.g:1328:3: ( 'z' )
                    // InternalDockerCompose.g:1328:4: 'z'
                    {
                    match(input,23,FOLLOW_2); 

                    }

                     after(grammarAccess.getAccessModeAccess().getZEnumLiteralDeclaration_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AccessMode__Alternatives"


    // $ANTLR start "rule__MountType__Alternatives"
    // InternalDockerCompose.g:1336:1: rule__MountType__Alternatives : ( ( ( 'volume' ) ) | ( ( 'bind' ) ) | ( ( 'tmpfs' ) ) | ( ( 'npipe' ) ) );
    public final void rule__MountType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1340:1: ( ( ( 'volume' ) ) | ( ( 'bind' ) ) | ( ( 'tmpfs' ) ) | ( ( 'npipe' ) ) )
            int alt23=4;
            switch ( input.LA(1) ) {
            case 24:
                {
                alt23=1;
                }
                break;
            case 25:
                {
                alt23=2;
                }
                break;
            case 26:
                {
                alt23=3;
                }
                break;
            case 27:
                {
                alt23=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }

            switch (alt23) {
                case 1 :
                    // InternalDockerCompose.g:1341:2: ( ( 'volume' ) )
                    {
                    // InternalDockerCompose.g:1341:2: ( ( 'volume' ) )
                    // InternalDockerCompose.g:1342:3: ( 'volume' )
                    {
                     before(grammarAccess.getMountTypeAccess().getVolumeEnumLiteralDeclaration_0()); 
                    // InternalDockerCompose.g:1343:3: ( 'volume' )
                    // InternalDockerCompose.g:1343:4: 'volume'
                    {
                    match(input,24,FOLLOW_2); 

                    }

                     after(grammarAccess.getMountTypeAccess().getVolumeEnumLiteralDeclaration_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1347:2: ( ( 'bind' ) )
                    {
                    // InternalDockerCompose.g:1347:2: ( ( 'bind' ) )
                    // InternalDockerCompose.g:1348:3: ( 'bind' )
                    {
                     before(grammarAccess.getMountTypeAccess().getBindEnumLiteralDeclaration_1()); 
                    // InternalDockerCompose.g:1349:3: ( 'bind' )
                    // InternalDockerCompose.g:1349:4: 'bind'
                    {
                    match(input,25,FOLLOW_2); 

                    }

                     after(grammarAccess.getMountTypeAccess().getBindEnumLiteralDeclaration_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1353:2: ( ( 'tmpfs' ) )
                    {
                    // InternalDockerCompose.g:1353:2: ( ( 'tmpfs' ) )
                    // InternalDockerCompose.g:1354:3: ( 'tmpfs' )
                    {
                     before(grammarAccess.getMountTypeAccess().getTmpfsEnumLiteralDeclaration_2()); 
                    // InternalDockerCompose.g:1355:3: ( 'tmpfs' )
                    // InternalDockerCompose.g:1355:4: 'tmpfs'
                    {
                    match(input,26,FOLLOW_2); 

                    }

                     after(grammarAccess.getMountTypeAccess().getTmpfsEnumLiteralDeclaration_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:1359:2: ( ( 'npipe' ) )
                    {
                    // InternalDockerCompose.g:1359:2: ( ( 'npipe' ) )
                    // InternalDockerCompose.g:1360:3: ( 'npipe' )
                    {
                     before(grammarAccess.getMountTypeAccess().getNpipeEnumLiteralDeclaration_3()); 
                    // InternalDockerCompose.g:1361:3: ( 'npipe' )
                    // InternalDockerCompose.g:1361:4: 'npipe'
                    {
                    match(input,27,FOLLOW_2); 

                    }

                     after(grammarAccess.getMountTypeAccess().getNpipeEnumLiteralDeclaration_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MountType__Alternatives"


    // $ANTLR start "rule__PropagationType__Alternatives"
    // InternalDockerCompose.g:1369:1: rule__PropagationType__Alternatives : ( ( ( 'rprivate' ) ) | ( ( 'private' ) ) | ( ( 'rshared' ) ) | ( ( 'shared' ) ) | ( ( 'rslave' ) ) | ( ( 'slave' ) ) );
    public final void rule__PropagationType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1373:1: ( ( ( 'rprivate' ) ) | ( ( 'private' ) ) | ( ( 'rshared' ) ) | ( ( 'shared' ) ) | ( ( 'rslave' ) ) | ( ( 'slave' ) ) )
            int alt24=6;
            switch ( input.LA(1) ) {
            case 28:
                {
                alt24=1;
                }
                break;
            case 29:
                {
                alt24=2;
                }
                break;
            case 30:
                {
                alt24=3;
                }
                break;
            case 31:
                {
                alt24=4;
                }
                break;
            case 32:
                {
                alt24=5;
                }
                break;
            case 33:
                {
                alt24=6;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // InternalDockerCompose.g:1374:2: ( ( 'rprivate' ) )
                    {
                    // InternalDockerCompose.g:1374:2: ( ( 'rprivate' ) )
                    // InternalDockerCompose.g:1375:3: ( 'rprivate' )
                    {
                     before(grammarAccess.getPropagationTypeAccess().getRprivateEnumLiteralDeclaration_0()); 
                    // InternalDockerCompose.g:1376:3: ( 'rprivate' )
                    // InternalDockerCompose.g:1376:4: 'rprivate'
                    {
                    match(input,28,FOLLOW_2); 

                    }

                     after(grammarAccess.getPropagationTypeAccess().getRprivateEnumLiteralDeclaration_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1380:2: ( ( 'private' ) )
                    {
                    // InternalDockerCompose.g:1380:2: ( ( 'private' ) )
                    // InternalDockerCompose.g:1381:3: ( 'private' )
                    {
                     before(grammarAccess.getPropagationTypeAccess().getPrivateEnumLiteralDeclaration_1()); 
                    // InternalDockerCompose.g:1382:3: ( 'private' )
                    // InternalDockerCompose.g:1382:4: 'private'
                    {
                    match(input,29,FOLLOW_2); 

                    }

                     after(grammarAccess.getPropagationTypeAccess().getPrivateEnumLiteralDeclaration_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1386:2: ( ( 'rshared' ) )
                    {
                    // InternalDockerCompose.g:1386:2: ( ( 'rshared' ) )
                    // InternalDockerCompose.g:1387:3: ( 'rshared' )
                    {
                     before(grammarAccess.getPropagationTypeAccess().getRsharedEnumLiteralDeclaration_2()); 
                    // InternalDockerCompose.g:1388:3: ( 'rshared' )
                    // InternalDockerCompose.g:1388:4: 'rshared'
                    {
                    match(input,30,FOLLOW_2); 

                    }

                     after(grammarAccess.getPropagationTypeAccess().getRsharedEnumLiteralDeclaration_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:1392:2: ( ( 'shared' ) )
                    {
                    // InternalDockerCompose.g:1392:2: ( ( 'shared' ) )
                    // InternalDockerCompose.g:1393:3: ( 'shared' )
                    {
                     before(grammarAccess.getPropagationTypeAccess().getSharedEnumLiteralDeclaration_3()); 
                    // InternalDockerCompose.g:1394:3: ( 'shared' )
                    // InternalDockerCompose.g:1394:4: 'shared'
                    {
                    match(input,31,FOLLOW_2); 

                    }

                     after(grammarAccess.getPropagationTypeAccess().getSharedEnumLiteralDeclaration_3()); 

                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:1398:2: ( ( 'rslave' ) )
                    {
                    // InternalDockerCompose.g:1398:2: ( ( 'rslave' ) )
                    // InternalDockerCompose.g:1399:3: ( 'rslave' )
                    {
                     before(grammarAccess.getPropagationTypeAccess().getRslaveEnumLiteralDeclaration_4()); 
                    // InternalDockerCompose.g:1400:3: ( 'rslave' )
                    // InternalDockerCompose.g:1400:4: 'rslave'
                    {
                    match(input,32,FOLLOW_2); 

                    }

                     after(grammarAccess.getPropagationTypeAccess().getRslaveEnumLiteralDeclaration_4()); 

                    }


                    }
                    break;
                case 6 :
                    // InternalDockerCompose.g:1404:2: ( ( 'slave' ) )
                    {
                    // InternalDockerCompose.g:1404:2: ( ( 'slave' ) )
                    // InternalDockerCompose.g:1405:3: ( 'slave' )
                    {
                     before(grammarAccess.getPropagationTypeAccess().getSlaveEnumLiteralDeclaration_5()); 
                    // InternalDockerCompose.g:1406:3: ( 'slave' )
                    // InternalDockerCompose.g:1406:4: 'slave'
                    {
                    match(input,33,FOLLOW_2); 

                    }

                     after(grammarAccess.getPropagationTypeAccess().getSlaveEnumLiteralDeclaration_5()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PropagationType__Alternatives"


    // $ANTLR start "rule__Condition__Alternatives"
    // InternalDockerCompose.g:1414:1: rule__Condition__Alternatives : ( ( ( 'service_started' ) ) | ( ( 'service_healthy' ) ) | ( ( 'service_completed_successfully' ) ) );
    public final void rule__Condition__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1418:1: ( ( ( 'service_started' ) ) | ( ( 'service_healthy' ) ) | ( ( 'service_completed_successfully' ) ) )
            int alt25=3;
            switch ( input.LA(1) ) {
            case 34:
                {
                alt25=1;
                }
                break;
            case 35:
                {
                alt25=2;
                }
                break;
            case 36:
                {
                alt25=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }

            switch (alt25) {
                case 1 :
                    // InternalDockerCompose.g:1419:2: ( ( 'service_started' ) )
                    {
                    // InternalDockerCompose.g:1419:2: ( ( 'service_started' ) )
                    // InternalDockerCompose.g:1420:3: ( 'service_started' )
                    {
                     before(grammarAccess.getConditionAccess().getService_startedEnumLiteralDeclaration_0()); 
                    // InternalDockerCompose.g:1421:3: ( 'service_started' )
                    // InternalDockerCompose.g:1421:4: 'service_started'
                    {
                    match(input,34,FOLLOW_2); 

                    }

                     after(grammarAccess.getConditionAccess().getService_startedEnumLiteralDeclaration_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1425:2: ( ( 'service_healthy' ) )
                    {
                    // InternalDockerCompose.g:1425:2: ( ( 'service_healthy' ) )
                    // InternalDockerCompose.g:1426:3: ( 'service_healthy' )
                    {
                     before(grammarAccess.getConditionAccess().getService_healthyEnumLiteralDeclaration_1()); 
                    // InternalDockerCompose.g:1427:3: ( 'service_healthy' )
                    // InternalDockerCompose.g:1427:4: 'service_healthy'
                    {
                    match(input,35,FOLLOW_2); 

                    }

                     after(grammarAccess.getConditionAccess().getService_healthyEnumLiteralDeclaration_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1431:2: ( ( 'service_completed_successfully' ) )
                    {
                    // InternalDockerCompose.g:1431:2: ( ( 'service_completed_successfully' ) )
                    // InternalDockerCompose.g:1432:3: ( 'service_completed_successfully' )
                    {
                     before(grammarAccess.getConditionAccess().getService_completed_successfullyEnumLiteralDeclaration_2()); 
                    // InternalDockerCompose.g:1433:3: ( 'service_completed_successfully' )
                    // InternalDockerCompose.g:1433:4: 'service_completed_successfully'
                    {
                    match(input,36,FOLLOW_2); 

                    }

                     after(grammarAccess.getConditionAccess().getService_completed_successfullyEnumLiteralDeclaration_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Condition__Alternatives"


    // $ANTLR start "rule__DockerCompose__Group_0__0"
    // InternalDockerCompose.g:1441:1: rule__DockerCompose__Group_0__0 : rule__DockerCompose__Group_0__0__Impl rule__DockerCompose__Group_0__1 ;
    public final void rule__DockerCompose__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1445:1: ( rule__DockerCompose__Group_0__0__Impl rule__DockerCompose__Group_0__1 )
            // InternalDockerCompose.g:1446:2: rule__DockerCompose__Group_0__0__Impl rule__DockerCompose__Group_0__1
            {
            pushFollow(FOLLOW_5);
            rule__DockerCompose__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_0__0"


    // $ANTLR start "rule__DockerCompose__Group_0__0__Impl"
    // InternalDockerCompose.g:1453:1: rule__DockerCompose__Group_0__0__Impl : ( 'version:' ) ;
    public final void rule__DockerCompose__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1457:1: ( ( 'version:' ) )
            // InternalDockerCompose.g:1458:1: ( 'version:' )
            {
            // InternalDockerCompose.g:1458:1: ( 'version:' )
            // InternalDockerCompose.g:1459:2: 'version:'
            {
             before(grammarAccess.getDockerComposeAccess().getVersionKeyword_0_0()); 
            match(input,37,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getVersionKeyword_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_0__0__Impl"


    // $ANTLR start "rule__DockerCompose__Group_0__1"
    // InternalDockerCompose.g:1468:1: rule__DockerCompose__Group_0__1 : rule__DockerCompose__Group_0__1__Impl ;
    public final void rule__DockerCompose__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1472:1: ( rule__DockerCompose__Group_0__1__Impl )
            // InternalDockerCompose.g:1473:2: rule__DockerCompose__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_0__1"


    // $ANTLR start "rule__DockerCompose__Group_0__1__Impl"
    // InternalDockerCompose.g:1479:1: rule__DockerCompose__Group_0__1__Impl : ( ( rule__DockerCompose__VersionAssignment_0_1 ) ) ;
    public final void rule__DockerCompose__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1483:1: ( ( ( rule__DockerCompose__VersionAssignment_0_1 ) ) )
            // InternalDockerCompose.g:1484:1: ( ( rule__DockerCompose__VersionAssignment_0_1 ) )
            {
            // InternalDockerCompose.g:1484:1: ( ( rule__DockerCompose__VersionAssignment_0_1 ) )
            // InternalDockerCompose.g:1485:2: ( rule__DockerCompose__VersionAssignment_0_1 )
            {
             before(grammarAccess.getDockerComposeAccess().getVersionAssignment_0_1()); 
            // InternalDockerCompose.g:1486:2: ( rule__DockerCompose__VersionAssignment_0_1 )
            // InternalDockerCompose.g:1486:3: rule__DockerCompose__VersionAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__VersionAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getVersionAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_0__1__Impl"


    // $ANTLR start "rule__DockerCompose__Group_1__0"
    // InternalDockerCompose.g:1495:1: rule__DockerCompose__Group_1__0 : rule__DockerCompose__Group_1__0__Impl rule__DockerCompose__Group_1__1 ;
    public final void rule__DockerCompose__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1499:1: ( rule__DockerCompose__Group_1__0__Impl rule__DockerCompose__Group_1__1 )
            // InternalDockerCompose.g:1500:2: rule__DockerCompose__Group_1__0__Impl rule__DockerCompose__Group_1__1
            {
            pushFollow(FOLLOW_6);
            rule__DockerCompose__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_1__0"


    // $ANTLR start "rule__DockerCompose__Group_1__0__Impl"
    // InternalDockerCompose.g:1507:1: rule__DockerCompose__Group_1__0__Impl : ( 'services:' ) ;
    public final void rule__DockerCompose__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1511:1: ( ( 'services:' ) )
            // InternalDockerCompose.g:1512:1: ( 'services:' )
            {
            // InternalDockerCompose.g:1512:1: ( 'services:' )
            // InternalDockerCompose.g:1513:2: 'services:'
            {
             before(grammarAccess.getDockerComposeAccess().getServicesKeyword_1_0()); 
            match(input,38,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getServicesKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_1__0__Impl"


    // $ANTLR start "rule__DockerCompose__Group_1__1"
    // InternalDockerCompose.g:1522:1: rule__DockerCompose__Group_1__1 : rule__DockerCompose__Group_1__1__Impl ;
    public final void rule__DockerCompose__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1526:1: ( rule__DockerCompose__Group_1__1__Impl )
            // InternalDockerCompose.g:1527:2: rule__DockerCompose__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_1__1"


    // $ANTLR start "rule__DockerCompose__Group_1__1__Impl"
    // InternalDockerCompose.g:1533:1: rule__DockerCompose__Group_1__1__Impl : ( ( ( rule__DockerCompose__ServicesAssignment_1_1 ) ) ( ( rule__DockerCompose__ServicesAssignment_1_1 )* ) ) ;
    public final void rule__DockerCompose__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1537:1: ( ( ( ( rule__DockerCompose__ServicesAssignment_1_1 ) ) ( ( rule__DockerCompose__ServicesAssignment_1_1 )* ) ) )
            // InternalDockerCompose.g:1538:1: ( ( ( rule__DockerCompose__ServicesAssignment_1_1 ) ) ( ( rule__DockerCompose__ServicesAssignment_1_1 )* ) )
            {
            // InternalDockerCompose.g:1538:1: ( ( ( rule__DockerCompose__ServicesAssignment_1_1 ) ) ( ( rule__DockerCompose__ServicesAssignment_1_1 )* ) )
            // InternalDockerCompose.g:1539:2: ( ( rule__DockerCompose__ServicesAssignment_1_1 ) ) ( ( rule__DockerCompose__ServicesAssignment_1_1 )* )
            {
            // InternalDockerCompose.g:1539:2: ( ( rule__DockerCompose__ServicesAssignment_1_1 ) )
            // InternalDockerCompose.g:1540:3: ( rule__DockerCompose__ServicesAssignment_1_1 )
            {
             before(grammarAccess.getDockerComposeAccess().getServicesAssignment_1_1()); 
            // InternalDockerCompose.g:1541:3: ( rule__DockerCompose__ServicesAssignment_1_1 )
            // InternalDockerCompose.g:1541:4: rule__DockerCompose__ServicesAssignment_1_1
            {
            pushFollow(FOLLOW_4);
            rule__DockerCompose__ServicesAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getServicesAssignment_1_1()); 

            }

            // InternalDockerCompose.g:1544:2: ( ( rule__DockerCompose__ServicesAssignment_1_1 )* )
            // InternalDockerCompose.g:1545:3: ( rule__DockerCompose__ServicesAssignment_1_1 )*
            {
             before(grammarAccess.getDockerComposeAccess().getServicesAssignment_1_1()); 
            // InternalDockerCompose.g:1546:3: ( rule__DockerCompose__ServicesAssignment_1_1 )*
            loop26:
            do {
                int alt26=2;
                int LA26_0 = input.LA(1);

                if ( ((LA26_0>=RULE_STRING && LA26_0<=RULE_ID)) ) {
                    alt26=1;
                }


                switch (alt26) {
            	case 1 :
            	    // InternalDockerCompose.g:1546:4: rule__DockerCompose__ServicesAssignment_1_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__DockerCompose__ServicesAssignment_1_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop26;
                }
            } while (true);

             after(grammarAccess.getDockerComposeAccess().getServicesAssignment_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_1__1__Impl"


    // $ANTLR start "rule__DockerCompose__Group_2__0"
    // InternalDockerCompose.g:1556:1: rule__DockerCompose__Group_2__0 : rule__DockerCompose__Group_2__0__Impl rule__DockerCompose__Group_2__1 ;
    public final void rule__DockerCompose__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1560:1: ( rule__DockerCompose__Group_2__0__Impl rule__DockerCompose__Group_2__1 )
            // InternalDockerCompose.g:1561:2: rule__DockerCompose__Group_2__0__Impl rule__DockerCompose__Group_2__1
            {
            pushFollow(FOLLOW_6);
            rule__DockerCompose__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_2__0"


    // $ANTLR start "rule__DockerCompose__Group_2__0__Impl"
    // InternalDockerCompose.g:1568:1: rule__DockerCompose__Group_2__0__Impl : ( 'volumes:' ) ;
    public final void rule__DockerCompose__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1572:1: ( ( 'volumes:' ) )
            // InternalDockerCompose.g:1573:1: ( 'volumes:' )
            {
            // InternalDockerCompose.g:1573:1: ( 'volumes:' )
            // InternalDockerCompose.g:1574:2: 'volumes:'
            {
             before(grammarAccess.getDockerComposeAccess().getVolumesKeyword_2_0()); 
            match(input,39,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getVolumesKeyword_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_2__0__Impl"


    // $ANTLR start "rule__DockerCompose__Group_2__1"
    // InternalDockerCompose.g:1583:1: rule__DockerCompose__Group_2__1 : rule__DockerCompose__Group_2__1__Impl ;
    public final void rule__DockerCompose__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1587:1: ( rule__DockerCompose__Group_2__1__Impl )
            // InternalDockerCompose.g:1588:2: rule__DockerCompose__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_2__1"


    // $ANTLR start "rule__DockerCompose__Group_2__1__Impl"
    // InternalDockerCompose.g:1594:1: rule__DockerCompose__Group_2__1__Impl : ( ( ( rule__DockerCompose__VolumesAssignment_2_1 ) ) ( ( rule__DockerCompose__VolumesAssignment_2_1 )* ) ) ;
    public final void rule__DockerCompose__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1598:1: ( ( ( ( rule__DockerCompose__VolumesAssignment_2_1 ) ) ( ( rule__DockerCompose__VolumesAssignment_2_1 )* ) ) )
            // InternalDockerCompose.g:1599:1: ( ( ( rule__DockerCompose__VolumesAssignment_2_1 ) ) ( ( rule__DockerCompose__VolumesAssignment_2_1 )* ) )
            {
            // InternalDockerCompose.g:1599:1: ( ( ( rule__DockerCompose__VolumesAssignment_2_1 ) ) ( ( rule__DockerCompose__VolumesAssignment_2_1 )* ) )
            // InternalDockerCompose.g:1600:2: ( ( rule__DockerCompose__VolumesAssignment_2_1 ) ) ( ( rule__DockerCompose__VolumesAssignment_2_1 )* )
            {
            // InternalDockerCompose.g:1600:2: ( ( rule__DockerCompose__VolumesAssignment_2_1 ) )
            // InternalDockerCompose.g:1601:3: ( rule__DockerCompose__VolumesAssignment_2_1 )
            {
             before(grammarAccess.getDockerComposeAccess().getVolumesAssignment_2_1()); 
            // InternalDockerCompose.g:1602:3: ( rule__DockerCompose__VolumesAssignment_2_1 )
            // InternalDockerCompose.g:1602:4: rule__DockerCompose__VolumesAssignment_2_1
            {
            pushFollow(FOLLOW_4);
            rule__DockerCompose__VolumesAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getVolumesAssignment_2_1()); 

            }

            // InternalDockerCompose.g:1605:2: ( ( rule__DockerCompose__VolumesAssignment_2_1 )* )
            // InternalDockerCompose.g:1606:3: ( rule__DockerCompose__VolumesAssignment_2_1 )*
            {
             before(grammarAccess.getDockerComposeAccess().getVolumesAssignment_2_1()); 
            // InternalDockerCompose.g:1607:3: ( rule__DockerCompose__VolumesAssignment_2_1 )*
            loop27:
            do {
                int alt27=2;
                int LA27_0 = input.LA(1);

                if ( ((LA27_0>=RULE_STRING && LA27_0<=RULE_ID)) ) {
                    alt27=1;
                }


                switch (alt27) {
            	case 1 :
            	    // InternalDockerCompose.g:1607:4: rule__DockerCompose__VolumesAssignment_2_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__DockerCompose__VolumesAssignment_2_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);

             after(grammarAccess.getDockerComposeAccess().getVolumesAssignment_2_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_2__1__Impl"


    // $ANTLR start "rule__DockerCompose__Group_3__0"
    // InternalDockerCompose.g:1617:1: rule__DockerCompose__Group_3__0 : rule__DockerCompose__Group_3__0__Impl rule__DockerCompose__Group_3__1 ;
    public final void rule__DockerCompose__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1621:1: ( rule__DockerCompose__Group_3__0__Impl rule__DockerCompose__Group_3__1 )
            // InternalDockerCompose.g:1622:2: rule__DockerCompose__Group_3__0__Impl rule__DockerCompose__Group_3__1
            {
            pushFollow(FOLLOW_6);
            rule__DockerCompose__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_3__0"


    // $ANTLR start "rule__DockerCompose__Group_3__0__Impl"
    // InternalDockerCompose.g:1629:1: rule__DockerCompose__Group_3__0__Impl : ( 'configs:' ) ;
    public final void rule__DockerCompose__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1633:1: ( ( 'configs:' ) )
            // InternalDockerCompose.g:1634:1: ( 'configs:' )
            {
            // InternalDockerCompose.g:1634:1: ( 'configs:' )
            // InternalDockerCompose.g:1635:2: 'configs:'
            {
             before(grammarAccess.getDockerComposeAccess().getConfigsKeyword_3_0()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getConfigsKeyword_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_3__0__Impl"


    // $ANTLR start "rule__DockerCompose__Group_3__1"
    // InternalDockerCompose.g:1644:1: rule__DockerCompose__Group_3__1 : rule__DockerCompose__Group_3__1__Impl ;
    public final void rule__DockerCompose__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1648:1: ( rule__DockerCompose__Group_3__1__Impl )
            // InternalDockerCompose.g:1649:2: rule__DockerCompose__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_3__1"


    // $ANTLR start "rule__DockerCompose__Group_3__1__Impl"
    // InternalDockerCompose.g:1655:1: rule__DockerCompose__Group_3__1__Impl : ( ( ( rule__DockerCompose__ConfigsAssignment_3_1 ) ) ( ( rule__DockerCompose__ConfigsAssignment_3_1 )* ) ) ;
    public final void rule__DockerCompose__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1659:1: ( ( ( ( rule__DockerCompose__ConfigsAssignment_3_1 ) ) ( ( rule__DockerCompose__ConfigsAssignment_3_1 )* ) ) )
            // InternalDockerCompose.g:1660:1: ( ( ( rule__DockerCompose__ConfigsAssignment_3_1 ) ) ( ( rule__DockerCompose__ConfigsAssignment_3_1 )* ) )
            {
            // InternalDockerCompose.g:1660:1: ( ( ( rule__DockerCompose__ConfigsAssignment_3_1 ) ) ( ( rule__DockerCompose__ConfigsAssignment_3_1 )* ) )
            // InternalDockerCompose.g:1661:2: ( ( rule__DockerCompose__ConfigsAssignment_3_1 ) ) ( ( rule__DockerCompose__ConfigsAssignment_3_1 )* )
            {
            // InternalDockerCompose.g:1661:2: ( ( rule__DockerCompose__ConfigsAssignment_3_1 ) )
            // InternalDockerCompose.g:1662:3: ( rule__DockerCompose__ConfigsAssignment_3_1 )
            {
             before(grammarAccess.getDockerComposeAccess().getConfigsAssignment_3_1()); 
            // InternalDockerCompose.g:1663:3: ( rule__DockerCompose__ConfigsAssignment_3_1 )
            // InternalDockerCompose.g:1663:4: rule__DockerCompose__ConfigsAssignment_3_1
            {
            pushFollow(FOLLOW_4);
            rule__DockerCompose__ConfigsAssignment_3_1();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getConfigsAssignment_3_1()); 

            }

            // InternalDockerCompose.g:1666:2: ( ( rule__DockerCompose__ConfigsAssignment_3_1 )* )
            // InternalDockerCompose.g:1667:3: ( rule__DockerCompose__ConfigsAssignment_3_1 )*
            {
             before(grammarAccess.getDockerComposeAccess().getConfigsAssignment_3_1()); 
            // InternalDockerCompose.g:1668:3: ( rule__DockerCompose__ConfigsAssignment_3_1 )*
            loop28:
            do {
                int alt28=2;
                int LA28_0 = input.LA(1);

                if ( ((LA28_0>=RULE_STRING && LA28_0<=RULE_ID)) ) {
                    alt28=1;
                }


                switch (alt28) {
            	case 1 :
            	    // InternalDockerCompose.g:1668:4: rule__DockerCompose__ConfigsAssignment_3_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__DockerCompose__ConfigsAssignment_3_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop28;
                }
            } while (true);

             after(grammarAccess.getDockerComposeAccess().getConfigsAssignment_3_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_3__1__Impl"


    // $ANTLR start "rule__DockerCompose__Group_4__0"
    // InternalDockerCompose.g:1678:1: rule__DockerCompose__Group_4__0 : rule__DockerCompose__Group_4__0__Impl rule__DockerCompose__Group_4__1 ;
    public final void rule__DockerCompose__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1682:1: ( rule__DockerCompose__Group_4__0__Impl rule__DockerCompose__Group_4__1 )
            // InternalDockerCompose.g:1683:2: rule__DockerCompose__Group_4__0__Impl rule__DockerCompose__Group_4__1
            {
            pushFollow(FOLLOW_6);
            rule__DockerCompose__Group_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_4__0"


    // $ANTLR start "rule__DockerCompose__Group_4__0__Impl"
    // InternalDockerCompose.g:1690:1: rule__DockerCompose__Group_4__0__Impl : ( 'secrets:' ) ;
    public final void rule__DockerCompose__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1694:1: ( ( 'secrets:' ) )
            // InternalDockerCompose.g:1695:1: ( 'secrets:' )
            {
            // InternalDockerCompose.g:1695:1: ( 'secrets:' )
            // InternalDockerCompose.g:1696:2: 'secrets:'
            {
             before(grammarAccess.getDockerComposeAccess().getSecretsKeyword_4_0()); 
            match(input,41,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getSecretsKeyword_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_4__0__Impl"


    // $ANTLR start "rule__DockerCompose__Group_4__1"
    // InternalDockerCompose.g:1705:1: rule__DockerCompose__Group_4__1 : rule__DockerCompose__Group_4__1__Impl ;
    public final void rule__DockerCompose__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1709:1: ( rule__DockerCompose__Group_4__1__Impl )
            // InternalDockerCompose.g:1710:2: rule__DockerCompose__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_4__1"


    // $ANTLR start "rule__DockerCompose__Group_4__1__Impl"
    // InternalDockerCompose.g:1716:1: rule__DockerCompose__Group_4__1__Impl : ( ( ( rule__DockerCompose__SecretsAssignment_4_1 ) ) ( ( rule__DockerCompose__SecretsAssignment_4_1 )* ) ) ;
    public final void rule__DockerCompose__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1720:1: ( ( ( ( rule__DockerCompose__SecretsAssignment_4_1 ) ) ( ( rule__DockerCompose__SecretsAssignment_4_1 )* ) ) )
            // InternalDockerCompose.g:1721:1: ( ( ( rule__DockerCompose__SecretsAssignment_4_1 ) ) ( ( rule__DockerCompose__SecretsAssignment_4_1 )* ) )
            {
            // InternalDockerCompose.g:1721:1: ( ( ( rule__DockerCompose__SecretsAssignment_4_1 ) ) ( ( rule__DockerCompose__SecretsAssignment_4_1 )* ) )
            // InternalDockerCompose.g:1722:2: ( ( rule__DockerCompose__SecretsAssignment_4_1 ) ) ( ( rule__DockerCompose__SecretsAssignment_4_1 )* )
            {
            // InternalDockerCompose.g:1722:2: ( ( rule__DockerCompose__SecretsAssignment_4_1 ) )
            // InternalDockerCompose.g:1723:3: ( rule__DockerCompose__SecretsAssignment_4_1 )
            {
             before(grammarAccess.getDockerComposeAccess().getSecretsAssignment_4_1()); 
            // InternalDockerCompose.g:1724:3: ( rule__DockerCompose__SecretsAssignment_4_1 )
            // InternalDockerCompose.g:1724:4: rule__DockerCompose__SecretsAssignment_4_1
            {
            pushFollow(FOLLOW_4);
            rule__DockerCompose__SecretsAssignment_4_1();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getSecretsAssignment_4_1()); 

            }

            // InternalDockerCompose.g:1727:2: ( ( rule__DockerCompose__SecretsAssignment_4_1 )* )
            // InternalDockerCompose.g:1728:3: ( rule__DockerCompose__SecretsAssignment_4_1 )*
            {
             before(grammarAccess.getDockerComposeAccess().getSecretsAssignment_4_1()); 
            // InternalDockerCompose.g:1729:3: ( rule__DockerCompose__SecretsAssignment_4_1 )*
            loop29:
            do {
                int alt29=2;
                int LA29_0 = input.LA(1);

                if ( ((LA29_0>=RULE_STRING && LA29_0<=RULE_ID)) ) {
                    alt29=1;
                }


                switch (alt29) {
            	case 1 :
            	    // InternalDockerCompose.g:1729:4: rule__DockerCompose__SecretsAssignment_4_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__DockerCompose__SecretsAssignment_4_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop29;
                }
            } while (true);

             after(grammarAccess.getDockerComposeAccess().getSecretsAssignment_4_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_4__1__Impl"


    // $ANTLR start "rule__DockerCompose__Group_5__0"
    // InternalDockerCompose.g:1739:1: rule__DockerCompose__Group_5__0 : rule__DockerCompose__Group_5__0__Impl rule__DockerCompose__Group_5__1 ;
    public final void rule__DockerCompose__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1743:1: ( rule__DockerCompose__Group_5__0__Impl rule__DockerCompose__Group_5__1 )
            // InternalDockerCompose.g:1744:2: rule__DockerCompose__Group_5__0__Impl rule__DockerCompose__Group_5__1
            {
            pushFollow(FOLLOW_6);
            rule__DockerCompose__Group_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_5__0"


    // $ANTLR start "rule__DockerCompose__Group_5__0__Impl"
    // InternalDockerCompose.g:1751:1: rule__DockerCompose__Group_5__0__Impl : ( 'networks:' ) ;
    public final void rule__DockerCompose__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1755:1: ( ( 'networks:' ) )
            // InternalDockerCompose.g:1756:1: ( 'networks:' )
            {
            // InternalDockerCompose.g:1756:1: ( 'networks:' )
            // InternalDockerCompose.g:1757:2: 'networks:'
            {
             before(grammarAccess.getDockerComposeAccess().getNetworksKeyword_5_0()); 
            match(input,42,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getNetworksKeyword_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_5__0__Impl"


    // $ANTLR start "rule__DockerCompose__Group_5__1"
    // InternalDockerCompose.g:1766:1: rule__DockerCompose__Group_5__1 : rule__DockerCompose__Group_5__1__Impl ;
    public final void rule__DockerCompose__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1770:1: ( rule__DockerCompose__Group_5__1__Impl )
            // InternalDockerCompose.g:1771:2: rule__DockerCompose__Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_5__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_5__1"


    // $ANTLR start "rule__DockerCompose__Group_5__1__Impl"
    // InternalDockerCompose.g:1777:1: rule__DockerCompose__Group_5__1__Impl : ( ( ( rule__DockerCompose__NetworksAssignment_5_1 ) ) ( ( rule__DockerCompose__NetworksAssignment_5_1 )* ) ) ;
    public final void rule__DockerCompose__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1781:1: ( ( ( ( rule__DockerCompose__NetworksAssignment_5_1 ) ) ( ( rule__DockerCompose__NetworksAssignment_5_1 )* ) ) )
            // InternalDockerCompose.g:1782:1: ( ( ( rule__DockerCompose__NetworksAssignment_5_1 ) ) ( ( rule__DockerCompose__NetworksAssignment_5_1 )* ) )
            {
            // InternalDockerCompose.g:1782:1: ( ( ( rule__DockerCompose__NetworksAssignment_5_1 ) ) ( ( rule__DockerCompose__NetworksAssignment_5_1 )* ) )
            // InternalDockerCompose.g:1783:2: ( ( rule__DockerCompose__NetworksAssignment_5_1 ) ) ( ( rule__DockerCompose__NetworksAssignment_5_1 )* )
            {
            // InternalDockerCompose.g:1783:2: ( ( rule__DockerCompose__NetworksAssignment_5_1 ) )
            // InternalDockerCompose.g:1784:3: ( rule__DockerCompose__NetworksAssignment_5_1 )
            {
             before(grammarAccess.getDockerComposeAccess().getNetworksAssignment_5_1()); 
            // InternalDockerCompose.g:1785:3: ( rule__DockerCompose__NetworksAssignment_5_1 )
            // InternalDockerCompose.g:1785:4: rule__DockerCompose__NetworksAssignment_5_1
            {
            pushFollow(FOLLOW_4);
            rule__DockerCompose__NetworksAssignment_5_1();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getNetworksAssignment_5_1()); 

            }

            // InternalDockerCompose.g:1788:2: ( ( rule__DockerCompose__NetworksAssignment_5_1 )* )
            // InternalDockerCompose.g:1789:3: ( rule__DockerCompose__NetworksAssignment_5_1 )*
            {
             before(grammarAccess.getDockerComposeAccess().getNetworksAssignment_5_1()); 
            // InternalDockerCompose.g:1790:3: ( rule__DockerCompose__NetworksAssignment_5_1 )*
            loop30:
            do {
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( ((LA30_0>=RULE_STRING && LA30_0<=RULE_ID)) ) {
                    alt30=1;
                }


                switch (alt30) {
            	case 1 :
            	    // InternalDockerCompose.g:1790:4: rule__DockerCompose__NetworksAssignment_5_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__DockerCompose__NetworksAssignment_5_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop30;
                }
            } while (true);

             after(grammarAccess.getDockerComposeAccess().getNetworksAssignment_5_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_5__1__Impl"


    // $ANTLR start "rule__Service__Group__0"
    // InternalDockerCompose.g:1800:1: rule__Service__Group__0 : rule__Service__Group__0__Impl rule__Service__Group__1 ;
    public final void rule__Service__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1804:1: ( rule__Service__Group__0__Impl rule__Service__Group__1 )
            // InternalDockerCompose.g:1805:2: rule__Service__Group__0__Impl rule__Service__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__Service__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__0"


    // $ANTLR start "rule__Service__Group__0__Impl"
    // InternalDockerCompose.g:1812:1: rule__Service__Group__0__Impl : ( () ) ;
    public final void rule__Service__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1816:1: ( ( () ) )
            // InternalDockerCompose.g:1817:1: ( () )
            {
            // InternalDockerCompose.g:1817:1: ( () )
            // InternalDockerCompose.g:1818:2: ()
            {
             before(grammarAccess.getServiceAccess().getServiceAction_0()); 
            // InternalDockerCompose.g:1819:2: ()
            // InternalDockerCompose.g:1819:3: 
            {
            }

             after(grammarAccess.getServiceAccess().getServiceAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__0__Impl"


    // $ANTLR start "rule__Service__Group__1"
    // InternalDockerCompose.g:1827:1: rule__Service__Group__1 : rule__Service__Group__1__Impl rule__Service__Group__2 ;
    public final void rule__Service__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1831:1: ( rule__Service__Group__1__Impl rule__Service__Group__2 )
            // InternalDockerCompose.g:1832:2: rule__Service__Group__1__Impl rule__Service__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__Service__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__1"


    // $ANTLR start "rule__Service__Group__1__Impl"
    // InternalDockerCompose.g:1839:1: rule__Service__Group__1__Impl : ( ( rule__Service__NameAssignment_1 ) ) ;
    public final void rule__Service__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1843:1: ( ( ( rule__Service__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:1844:1: ( ( rule__Service__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:1844:1: ( ( rule__Service__NameAssignment_1 ) )
            // InternalDockerCompose.g:1845:2: ( rule__Service__NameAssignment_1 )
            {
             before(grammarAccess.getServiceAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:1846:2: ( rule__Service__NameAssignment_1 )
            // InternalDockerCompose.g:1846:3: rule__Service__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__1__Impl"


    // $ANTLR start "rule__Service__Group__2"
    // InternalDockerCompose.g:1854:1: rule__Service__Group__2 : rule__Service__Group__2__Impl rule__Service__Group__3 ;
    public final void rule__Service__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1858:1: ( rule__Service__Group__2__Impl rule__Service__Group__3 )
            // InternalDockerCompose.g:1859:2: rule__Service__Group__2__Impl rule__Service__Group__3
            {
            pushFollow(FOLLOW_8);
            rule__Service__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__2"


    // $ANTLR start "rule__Service__Group__2__Impl"
    // InternalDockerCompose.g:1866:1: rule__Service__Group__2__Impl : ( ':' ) ;
    public final void rule__Service__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1870:1: ( ( ':' ) )
            // InternalDockerCompose.g:1871:1: ( ':' )
            {
            // InternalDockerCompose.g:1871:1: ( ':' )
            // InternalDockerCompose.g:1872:2: ':'
            {
             before(grammarAccess.getServiceAccess().getColonKeyword_2()); 
            match(input,43,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__2__Impl"


    // $ANTLR start "rule__Service__Group__3"
    // InternalDockerCompose.g:1881:1: rule__Service__Group__3 : rule__Service__Group__3__Impl ;
    public final void rule__Service__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1885:1: ( rule__Service__Group__3__Impl )
            // InternalDockerCompose.g:1886:2: rule__Service__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__3"


    // $ANTLR start "rule__Service__Group__3__Impl"
    // InternalDockerCompose.g:1892:1: rule__Service__Group__3__Impl : ( ( rule__Service__UnorderedGroup_3 ) ) ;
    public final void rule__Service__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1896:1: ( ( ( rule__Service__UnorderedGroup_3 ) ) )
            // InternalDockerCompose.g:1897:1: ( ( rule__Service__UnorderedGroup_3 ) )
            {
            // InternalDockerCompose.g:1897:1: ( ( rule__Service__UnorderedGroup_3 ) )
            // InternalDockerCompose.g:1898:2: ( rule__Service__UnorderedGroup_3 )
            {
             before(grammarAccess.getServiceAccess().getUnorderedGroup_3()); 
            // InternalDockerCompose.g:1899:2: ( rule__Service__UnorderedGroup_3 )
            // InternalDockerCompose.g:1899:3: rule__Service__UnorderedGroup_3
            {
            pushFollow(FOLLOW_2);
            rule__Service__UnorderedGroup_3();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getUnorderedGroup_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__3__Impl"


    // $ANTLR start "rule__Service__Group_3_0_0__0"
    // InternalDockerCompose.g:1908:1: rule__Service__Group_3_0_0__0 : rule__Service__Group_3_0_0__0__Impl rule__Service__Group_3_0_0__1 ;
    public final void rule__Service__Group_3_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1912:1: ( rule__Service__Group_3_0_0__0__Impl rule__Service__Group_3_0_0__1 )
            // InternalDockerCompose.g:1913:2: rule__Service__Group_3_0_0__0__Impl rule__Service__Group_3_0_0__1
            {
            pushFollow(FOLLOW_9);
            rule__Service__Group_3_0_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_0_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0_0__0"


    // $ANTLR start "rule__Service__Group_3_0_0__0__Impl"
    // InternalDockerCompose.g:1920:1: rule__Service__Group_3_0_0__0__Impl : ( 'build:' ) ;
    public final void rule__Service__Group_3_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1924:1: ( ( 'build:' ) )
            // InternalDockerCompose.g:1925:1: ( 'build:' )
            {
            // InternalDockerCompose.g:1925:1: ( 'build:' )
            // InternalDockerCompose.g:1926:2: 'build:'
            {
             before(grammarAccess.getServiceAccess().getBuildKeyword_3_0_0_0()); 
            match(input,44,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getBuildKeyword_3_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0_0__0__Impl"


    // $ANTLR start "rule__Service__Group_3_0_0__1"
    // InternalDockerCompose.g:1935:1: rule__Service__Group_3_0_0__1 : rule__Service__Group_3_0_0__1__Impl ;
    public final void rule__Service__Group_3_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1939:1: ( rule__Service__Group_3_0_0__1__Impl )
            // InternalDockerCompose.g:1940:2: rule__Service__Group_3_0_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_0_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0_0__1"


    // $ANTLR start "rule__Service__Group_3_0_0__1__Impl"
    // InternalDockerCompose.g:1946:1: rule__Service__Group_3_0_0__1__Impl : ( ( rule__Service__BuildAssignment_3_0_0_1 ) ) ;
    public final void rule__Service__Group_3_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1950:1: ( ( ( rule__Service__BuildAssignment_3_0_0_1 ) ) )
            // InternalDockerCompose.g:1951:1: ( ( rule__Service__BuildAssignment_3_0_0_1 ) )
            {
            // InternalDockerCompose.g:1951:1: ( ( rule__Service__BuildAssignment_3_0_0_1 ) )
            // InternalDockerCompose.g:1952:2: ( rule__Service__BuildAssignment_3_0_0_1 )
            {
             before(grammarAccess.getServiceAccess().getBuildAssignment_3_0_0_1()); 
            // InternalDockerCompose.g:1953:2: ( rule__Service__BuildAssignment_3_0_0_1 )
            // InternalDockerCompose.g:1953:3: rule__Service__BuildAssignment_3_0_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__BuildAssignment_3_0_0_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getBuildAssignment_3_0_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0_0__1__Impl"


    // $ANTLR start "rule__Service__Group_3_0_1__0"
    // InternalDockerCompose.g:1962:1: rule__Service__Group_3_0_1__0 : rule__Service__Group_3_0_1__0__Impl rule__Service__Group_3_0_1__1 ;
    public final void rule__Service__Group_3_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1966:1: ( rule__Service__Group_3_0_1__0__Impl rule__Service__Group_3_0_1__1 )
            // InternalDockerCompose.g:1967:2: rule__Service__Group_3_0_1__0__Impl rule__Service__Group_3_0_1__1
            {
            pushFollow(FOLLOW_6);
            rule__Service__Group_3_0_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_0_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0_1__0"


    // $ANTLR start "rule__Service__Group_3_0_1__0__Impl"
    // InternalDockerCompose.g:1974:1: rule__Service__Group_3_0_1__0__Impl : ( 'image:' ) ;
    public final void rule__Service__Group_3_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1978:1: ( ( 'image:' ) )
            // InternalDockerCompose.g:1979:1: ( 'image:' )
            {
            // InternalDockerCompose.g:1979:1: ( 'image:' )
            // InternalDockerCompose.g:1980:2: 'image:'
            {
             before(grammarAccess.getServiceAccess().getImageKeyword_3_0_1_0()); 
            match(input,45,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getImageKeyword_3_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_0_1__1"
    // InternalDockerCompose.g:1989:1: rule__Service__Group_3_0_1__1 : rule__Service__Group_3_0_1__1__Impl ;
    public final void rule__Service__Group_3_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1993:1: ( rule__Service__Group_3_0_1__1__Impl )
            // InternalDockerCompose.g:1994:2: rule__Service__Group_3_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_0_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0_1__1"


    // $ANTLR start "rule__Service__Group_3_0_1__1__Impl"
    // InternalDockerCompose.g:2000:1: rule__Service__Group_3_0_1__1__Impl : ( ( rule__Service__ImageAssignment_3_0_1_1 ) ) ;
    public final void rule__Service__Group_3_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2004:1: ( ( ( rule__Service__ImageAssignment_3_0_1_1 ) ) )
            // InternalDockerCompose.g:2005:1: ( ( rule__Service__ImageAssignment_3_0_1_1 ) )
            {
            // InternalDockerCompose.g:2005:1: ( ( rule__Service__ImageAssignment_3_0_1_1 ) )
            // InternalDockerCompose.g:2006:2: ( rule__Service__ImageAssignment_3_0_1_1 )
            {
             before(grammarAccess.getServiceAccess().getImageAssignment_3_0_1_1()); 
            // InternalDockerCompose.g:2007:2: ( rule__Service__ImageAssignment_3_0_1_1 )
            // InternalDockerCompose.g:2007:3: rule__Service__ImageAssignment_3_0_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__ImageAssignment_3_0_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getImageAssignment_3_0_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_1__0"
    // InternalDockerCompose.g:2016:1: rule__Service__Group_3_1__0 : rule__Service__Group_3_1__0__Impl rule__Service__Group_3_1__1 ;
    public final void rule__Service__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2020:1: ( rule__Service__Group_3_1__0__Impl rule__Service__Group_3_1__1 )
            // InternalDockerCompose.g:2021:2: rule__Service__Group_3_1__0__Impl rule__Service__Group_3_1__1
            {
            pushFollow(FOLLOW_10);
            rule__Service__Group_3_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_1__0"


    // $ANTLR start "rule__Service__Group_3_1__0__Impl"
    // InternalDockerCompose.g:2028:1: rule__Service__Group_3_1__0__Impl : ( 'cpu_count:' ) ;
    public final void rule__Service__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2032:1: ( ( 'cpu_count:' ) )
            // InternalDockerCompose.g:2033:1: ( 'cpu_count:' )
            {
            // InternalDockerCompose.g:2033:1: ( 'cpu_count:' )
            // InternalDockerCompose.g:2034:2: 'cpu_count:'
            {
             before(grammarAccess.getServiceAccess().getCpu_countKeyword_3_1_0()); 
            match(input,46,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getCpu_countKeyword_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_1__1"
    // InternalDockerCompose.g:2043:1: rule__Service__Group_3_1__1 : rule__Service__Group_3_1__1__Impl ;
    public final void rule__Service__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2047:1: ( rule__Service__Group_3_1__1__Impl )
            // InternalDockerCompose.g:2048:2: rule__Service__Group_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_1__1"


    // $ANTLR start "rule__Service__Group_3_1__1__Impl"
    // InternalDockerCompose.g:2054:1: rule__Service__Group_3_1__1__Impl : ( ( rule__Service__Cpu_countAssignment_3_1_1 ) ) ;
    public final void rule__Service__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2058:1: ( ( ( rule__Service__Cpu_countAssignment_3_1_1 ) ) )
            // InternalDockerCompose.g:2059:1: ( ( rule__Service__Cpu_countAssignment_3_1_1 ) )
            {
            // InternalDockerCompose.g:2059:1: ( ( rule__Service__Cpu_countAssignment_3_1_1 ) )
            // InternalDockerCompose.g:2060:2: ( rule__Service__Cpu_countAssignment_3_1_1 )
            {
             before(grammarAccess.getServiceAccess().getCpu_countAssignment_3_1_1()); 
            // InternalDockerCompose.g:2061:2: ( rule__Service__Cpu_countAssignment_3_1_1 )
            // InternalDockerCompose.g:2061:3: rule__Service__Cpu_countAssignment_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Cpu_countAssignment_3_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getCpu_countAssignment_3_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_2__0"
    // InternalDockerCompose.g:2070:1: rule__Service__Group_3_2__0 : rule__Service__Group_3_2__0__Impl rule__Service__Group_3_2__1 ;
    public final void rule__Service__Group_3_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2074:1: ( rule__Service__Group_3_2__0__Impl rule__Service__Group_3_2__1 )
            // InternalDockerCompose.g:2075:2: rule__Service__Group_3_2__0__Impl rule__Service__Group_3_2__1
            {
            pushFollow(FOLLOW_6);
            rule__Service__Group_3_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_2__0"


    // $ANTLR start "rule__Service__Group_3_2__0__Impl"
    // InternalDockerCompose.g:2082:1: rule__Service__Group_3_2__0__Impl : ( 'command:' ) ;
    public final void rule__Service__Group_3_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2086:1: ( ( 'command:' ) )
            // InternalDockerCompose.g:2087:1: ( 'command:' )
            {
            // InternalDockerCompose.g:2087:1: ( 'command:' )
            // InternalDockerCompose.g:2088:2: 'command:'
            {
             before(grammarAccess.getServiceAccess().getCommandKeyword_3_2_0()); 
            match(input,47,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getCommandKeyword_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_2__0__Impl"


    // $ANTLR start "rule__Service__Group_3_2__1"
    // InternalDockerCompose.g:2097:1: rule__Service__Group_3_2__1 : rule__Service__Group_3_2__1__Impl ;
    public final void rule__Service__Group_3_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2101:1: ( rule__Service__Group_3_2__1__Impl )
            // InternalDockerCompose.g:2102:2: rule__Service__Group_3_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_2__1"


    // $ANTLR start "rule__Service__Group_3_2__1__Impl"
    // InternalDockerCompose.g:2108:1: rule__Service__Group_3_2__1__Impl : ( ( rule__Service__CommandAssignment_3_2_1 ) ) ;
    public final void rule__Service__Group_3_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2112:1: ( ( ( rule__Service__CommandAssignment_3_2_1 ) ) )
            // InternalDockerCompose.g:2113:1: ( ( rule__Service__CommandAssignment_3_2_1 ) )
            {
            // InternalDockerCompose.g:2113:1: ( ( rule__Service__CommandAssignment_3_2_1 ) )
            // InternalDockerCompose.g:2114:2: ( rule__Service__CommandAssignment_3_2_1 )
            {
             before(grammarAccess.getServiceAccess().getCommandAssignment_3_2_1()); 
            // InternalDockerCompose.g:2115:2: ( rule__Service__CommandAssignment_3_2_1 )
            // InternalDockerCompose.g:2115:3: rule__Service__CommandAssignment_3_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__CommandAssignment_3_2_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getCommandAssignment_3_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_2__1__Impl"


    // $ANTLR start "rule__Service__Group_3_3__0"
    // InternalDockerCompose.g:2124:1: rule__Service__Group_3_3__0 : rule__Service__Group_3_3__0__Impl rule__Service__Group_3_3__1 ;
    public final void rule__Service__Group_3_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2128:1: ( rule__Service__Group_3_3__0__Impl rule__Service__Group_3_3__1 )
            // InternalDockerCompose.g:2129:2: rule__Service__Group_3_3__0__Impl rule__Service__Group_3_3__1
            {
            pushFollow(FOLLOW_6);
            rule__Service__Group_3_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_3__0"


    // $ANTLR start "rule__Service__Group_3_3__0__Impl"
    // InternalDockerCompose.g:2136:1: rule__Service__Group_3_3__0__Impl : ( 'container_name:' ) ;
    public final void rule__Service__Group_3_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2140:1: ( ( 'container_name:' ) )
            // InternalDockerCompose.g:2141:1: ( 'container_name:' )
            {
            // InternalDockerCompose.g:2141:1: ( 'container_name:' )
            // InternalDockerCompose.g:2142:2: 'container_name:'
            {
             before(grammarAccess.getServiceAccess().getContainer_nameKeyword_3_3_0()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getContainer_nameKeyword_3_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_3__0__Impl"


    // $ANTLR start "rule__Service__Group_3_3__1"
    // InternalDockerCompose.g:2151:1: rule__Service__Group_3_3__1 : rule__Service__Group_3_3__1__Impl ;
    public final void rule__Service__Group_3_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2155:1: ( rule__Service__Group_3_3__1__Impl )
            // InternalDockerCompose.g:2156:2: rule__Service__Group_3_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_3__1"


    // $ANTLR start "rule__Service__Group_3_3__1__Impl"
    // InternalDockerCompose.g:2162:1: rule__Service__Group_3_3__1__Impl : ( ( rule__Service__Container_nameAssignment_3_3_1 ) ) ;
    public final void rule__Service__Group_3_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2166:1: ( ( ( rule__Service__Container_nameAssignment_3_3_1 ) ) )
            // InternalDockerCompose.g:2167:1: ( ( rule__Service__Container_nameAssignment_3_3_1 ) )
            {
            // InternalDockerCompose.g:2167:1: ( ( rule__Service__Container_nameAssignment_3_3_1 ) )
            // InternalDockerCompose.g:2168:2: ( rule__Service__Container_nameAssignment_3_3_1 )
            {
             before(grammarAccess.getServiceAccess().getContainer_nameAssignment_3_3_1()); 
            // InternalDockerCompose.g:2169:2: ( rule__Service__Container_nameAssignment_3_3_1 )
            // InternalDockerCompose.g:2169:3: rule__Service__Container_nameAssignment_3_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Container_nameAssignment_3_3_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getContainer_nameAssignment_3_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_3__1__Impl"


    // $ANTLR start "rule__Service__Group_3_4__0"
    // InternalDockerCompose.g:2178:1: rule__Service__Group_3_4__0 : rule__Service__Group_3_4__0__Impl rule__Service__Group_3_4__1 ;
    public final void rule__Service__Group_3_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2182:1: ( rule__Service__Group_3_4__0__Impl rule__Service__Group_3_4__1 )
            // InternalDockerCompose.g:2183:2: rule__Service__Group_3_4__0__Impl rule__Service__Group_3_4__1
            {
            pushFollow(FOLLOW_11);
            rule__Service__Group_3_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_4__0"


    // $ANTLR start "rule__Service__Group_3_4__0__Impl"
    // InternalDockerCompose.g:2190:1: rule__Service__Group_3_4__0__Impl : ( 'restart:' ) ;
    public final void rule__Service__Group_3_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2194:1: ( ( 'restart:' ) )
            // InternalDockerCompose.g:2195:1: ( 'restart:' )
            {
            // InternalDockerCompose.g:2195:1: ( 'restart:' )
            // InternalDockerCompose.g:2196:2: 'restart:'
            {
             before(grammarAccess.getServiceAccess().getRestartKeyword_3_4_0()); 
            match(input,49,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getRestartKeyword_3_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_4__0__Impl"


    // $ANTLR start "rule__Service__Group_3_4__1"
    // InternalDockerCompose.g:2205:1: rule__Service__Group_3_4__1 : rule__Service__Group_3_4__1__Impl ;
    public final void rule__Service__Group_3_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2209:1: ( rule__Service__Group_3_4__1__Impl )
            // InternalDockerCompose.g:2210:2: rule__Service__Group_3_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_4__1"


    // $ANTLR start "rule__Service__Group_3_4__1__Impl"
    // InternalDockerCompose.g:2216:1: rule__Service__Group_3_4__1__Impl : ( ( rule__Service__RestartAssignment_3_4_1 ) ) ;
    public final void rule__Service__Group_3_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2220:1: ( ( ( rule__Service__RestartAssignment_3_4_1 ) ) )
            // InternalDockerCompose.g:2221:1: ( ( rule__Service__RestartAssignment_3_4_1 ) )
            {
            // InternalDockerCompose.g:2221:1: ( ( rule__Service__RestartAssignment_3_4_1 ) )
            // InternalDockerCompose.g:2222:2: ( rule__Service__RestartAssignment_3_4_1 )
            {
             before(grammarAccess.getServiceAccess().getRestartAssignment_3_4_1()); 
            // InternalDockerCompose.g:2223:2: ( rule__Service__RestartAssignment_3_4_1 )
            // InternalDockerCompose.g:2223:3: rule__Service__RestartAssignment_3_4_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__RestartAssignment_3_4_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getRestartAssignment_3_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_4__1__Impl"


    // $ANTLR start "rule__Service__Group_3_5__0"
    // InternalDockerCompose.g:2232:1: rule__Service__Group_3_5__0 : rule__Service__Group_3_5__0__Impl rule__Service__Group_3_5__1 ;
    public final void rule__Service__Group_3_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2236:1: ( rule__Service__Group_3_5__0__Impl rule__Service__Group_3_5__1 )
            // InternalDockerCompose.g:2237:2: rule__Service__Group_3_5__0__Impl rule__Service__Group_3_5__1
            {
            pushFollow(FOLLOW_12);
            rule__Service__Group_3_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_5__0"


    // $ANTLR start "rule__Service__Group_3_5__0__Impl"
    // InternalDockerCompose.g:2244:1: rule__Service__Group_3_5__0__Impl : ( 'init:' ) ;
    public final void rule__Service__Group_3_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2248:1: ( ( 'init:' ) )
            // InternalDockerCompose.g:2249:1: ( 'init:' )
            {
            // InternalDockerCompose.g:2249:1: ( 'init:' )
            // InternalDockerCompose.g:2250:2: 'init:'
            {
             before(grammarAccess.getServiceAccess().getInitKeyword_3_5_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getInitKeyword_3_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_5__0__Impl"


    // $ANTLR start "rule__Service__Group_3_5__1"
    // InternalDockerCompose.g:2259:1: rule__Service__Group_3_5__1 : rule__Service__Group_3_5__1__Impl ;
    public final void rule__Service__Group_3_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2263:1: ( rule__Service__Group_3_5__1__Impl )
            // InternalDockerCompose.g:2264:2: rule__Service__Group_3_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_5__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_5__1"


    // $ANTLR start "rule__Service__Group_3_5__1__Impl"
    // InternalDockerCompose.g:2270:1: rule__Service__Group_3_5__1__Impl : ( ( rule__Service__InitAssignment_3_5_1 ) ) ;
    public final void rule__Service__Group_3_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2274:1: ( ( ( rule__Service__InitAssignment_3_5_1 ) ) )
            // InternalDockerCompose.g:2275:1: ( ( rule__Service__InitAssignment_3_5_1 ) )
            {
            // InternalDockerCompose.g:2275:1: ( ( rule__Service__InitAssignment_3_5_1 ) )
            // InternalDockerCompose.g:2276:2: ( rule__Service__InitAssignment_3_5_1 )
            {
             before(grammarAccess.getServiceAccess().getInitAssignment_3_5_1()); 
            // InternalDockerCompose.g:2277:2: ( rule__Service__InitAssignment_3_5_1 )
            // InternalDockerCompose.g:2277:3: rule__Service__InitAssignment_3_5_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__InitAssignment_3_5_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getInitAssignment_3_5_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_5__1__Impl"


    // $ANTLR start "rule__Service__Group_3_6__0"
    // InternalDockerCompose.g:2286:1: rule__Service__Group_3_6__0 : rule__Service__Group_3_6__0__Impl rule__Service__Group_3_6__1 ;
    public final void rule__Service__Group_3_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2290:1: ( rule__Service__Group_3_6__0__Impl rule__Service__Group_3_6__1 )
            // InternalDockerCompose.g:2291:2: rule__Service__Group_3_6__0__Impl rule__Service__Group_3_6__1
            {
            pushFollow(FOLLOW_12);
            rule__Service__Group_3_6__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_6__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_6__0"


    // $ANTLR start "rule__Service__Group_3_6__0__Impl"
    // InternalDockerCompose.g:2298:1: rule__Service__Group_3_6__0__Impl : ( 'read_only:' ) ;
    public final void rule__Service__Group_3_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2302:1: ( ( 'read_only:' ) )
            // InternalDockerCompose.g:2303:1: ( 'read_only:' )
            {
            // InternalDockerCompose.g:2303:1: ( 'read_only:' )
            // InternalDockerCompose.g:2304:2: 'read_only:'
            {
             before(grammarAccess.getServiceAccess().getRead_onlyKeyword_3_6_0()); 
            match(input,51,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getRead_onlyKeyword_3_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_6__0__Impl"


    // $ANTLR start "rule__Service__Group_3_6__1"
    // InternalDockerCompose.g:2313:1: rule__Service__Group_3_6__1 : rule__Service__Group_3_6__1__Impl ;
    public final void rule__Service__Group_3_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2317:1: ( rule__Service__Group_3_6__1__Impl )
            // InternalDockerCompose.g:2318:2: rule__Service__Group_3_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_6__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_6__1"


    // $ANTLR start "rule__Service__Group_3_6__1__Impl"
    // InternalDockerCompose.g:2324:1: rule__Service__Group_3_6__1__Impl : ( ( rule__Service__Read_onlyAssignment_3_6_1 ) ) ;
    public final void rule__Service__Group_3_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2328:1: ( ( ( rule__Service__Read_onlyAssignment_3_6_1 ) ) )
            // InternalDockerCompose.g:2329:1: ( ( rule__Service__Read_onlyAssignment_3_6_1 ) )
            {
            // InternalDockerCompose.g:2329:1: ( ( rule__Service__Read_onlyAssignment_3_6_1 ) )
            // InternalDockerCompose.g:2330:2: ( rule__Service__Read_onlyAssignment_3_6_1 )
            {
             before(grammarAccess.getServiceAccess().getRead_onlyAssignment_3_6_1()); 
            // InternalDockerCompose.g:2331:2: ( rule__Service__Read_onlyAssignment_3_6_1 )
            // InternalDockerCompose.g:2331:3: rule__Service__Read_onlyAssignment_3_6_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Read_onlyAssignment_3_6_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getRead_onlyAssignment_3_6_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_6__1__Impl"


    // $ANTLR start "rule__Service__Group_3_7__0"
    // InternalDockerCompose.g:2340:1: rule__Service__Group_3_7__0 : rule__Service__Group_3_7__0__Impl rule__Service__Group_3_7__1 ;
    public final void rule__Service__Group_3_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2344:1: ( rule__Service__Group_3_7__0__Impl rule__Service__Group_3_7__1 )
            // InternalDockerCompose.g:2345:2: rule__Service__Group_3_7__0__Impl rule__Service__Group_3_7__1
            {
            pushFollow(FOLLOW_13);
            rule__Service__Group_3_7__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_7__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7__0"


    // $ANTLR start "rule__Service__Group_3_7__0__Impl"
    // InternalDockerCompose.g:2352:1: rule__Service__Group_3_7__0__Impl : ( 'links:' ) ;
    public final void rule__Service__Group_3_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2356:1: ( ( 'links:' ) )
            // InternalDockerCompose.g:2357:1: ( 'links:' )
            {
            // InternalDockerCompose.g:2357:1: ( 'links:' )
            // InternalDockerCompose.g:2358:2: 'links:'
            {
             before(grammarAccess.getServiceAccess().getLinksKeyword_3_7_0()); 
            match(input,52,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getLinksKeyword_3_7_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7__0__Impl"


    // $ANTLR start "rule__Service__Group_3_7__1"
    // InternalDockerCompose.g:2367:1: rule__Service__Group_3_7__1 : rule__Service__Group_3_7__1__Impl ;
    public final void rule__Service__Group_3_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2371:1: ( rule__Service__Group_3_7__1__Impl )
            // InternalDockerCompose.g:2372:2: rule__Service__Group_3_7__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_7__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7__1"


    // $ANTLR start "rule__Service__Group_3_7__1__Impl"
    // InternalDockerCompose.g:2378:1: rule__Service__Group_3_7__1__Impl : ( ( ( rule__Service__Group_3_7_1__0 ) ) ( ( rule__Service__Group_3_7_1__0 )* ) ) ;
    public final void rule__Service__Group_3_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2382:1: ( ( ( ( rule__Service__Group_3_7_1__0 ) ) ( ( rule__Service__Group_3_7_1__0 )* ) ) )
            // InternalDockerCompose.g:2383:1: ( ( ( rule__Service__Group_3_7_1__0 ) ) ( ( rule__Service__Group_3_7_1__0 )* ) )
            {
            // InternalDockerCompose.g:2383:1: ( ( ( rule__Service__Group_3_7_1__0 ) ) ( ( rule__Service__Group_3_7_1__0 )* ) )
            // InternalDockerCompose.g:2384:2: ( ( rule__Service__Group_3_7_1__0 ) ) ( ( rule__Service__Group_3_7_1__0 )* )
            {
            // InternalDockerCompose.g:2384:2: ( ( rule__Service__Group_3_7_1__0 ) )
            // InternalDockerCompose.g:2385:3: ( rule__Service__Group_3_7_1__0 )
            {
             before(grammarAccess.getServiceAccess().getGroup_3_7_1()); 
            // InternalDockerCompose.g:2386:3: ( rule__Service__Group_3_7_1__0 )
            // InternalDockerCompose.g:2386:4: rule__Service__Group_3_7_1__0
            {
            pushFollow(FOLLOW_3);
            rule__Service__Group_3_7_1__0();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getGroup_3_7_1()); 

            }

            // InternalDockerCompose.g:2389:2: ( ( rule__Service__Group_3_7_1__0 )* )
            // InternalDockerCompose.g:2390:3: ( rule__Service__Group_3_7_1__0 )*
            {
             before(grammarAccess.getServiceAccess().getGroup_3_7_1()); 
            // InternalDockerCompose.g:2391:3: ( rule__Service__Group_3_7_1__0 )*
            loop31:
            do {
                int alt31=2;
                int LA31_0 = input.LA(1);

                if ( (LA31_0==53) ) {
                    alt31=1;
                }


                switch (alt31) {
            	case 1 :
            	    // InternalDockerCompose.g:2391:4: rule__Service__Group_3_7_1__0
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Service__Group_3_7_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop31;
                }
            } while (true);

             after(grammarAccess.getServiceAccess().getGroup_3_7_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7__1__Impl"


    // $ANTLR start "rule__Service__Group_3_7_1__0"
    // InternalDockerCompose.g:2401:1: rule__Service__Group_3_7_1__0 : rule__Service__Group_3_7_1__0__Impl rule__Service__Group_3_7_1__1 ;
    public final void rule__Service__Group_3_7_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2405:1: ( rule__Service__Group_3_7_1__0__Impl rule__Service__Group_3_7_1__1 )
            // InternalDockerCompose.g:2406:2: rule__Service__Group_3_7_1__0__Impl rule__Service__Group_3_7_1__1
            {
            pushFollow(FOLLOW_6);
            rule__Service__Group_3_7_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_7_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7_1__0"


    // $ANTLR start "rule__Service__Group_3_7_1__0__Impl"
    // InternalDockerCompose.g:2413:1: rule__Service__Group_3_7_1__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_7_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2417:1: ( ( '-' ) )
            // InternalDockerCompose.g:2418:1: ( '-' )
            {
            // InternalDockerCompose.g:2418:1: ( '-' )
            // InternalDockerCompose.g:2419:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_7_1_0()); 
            match(input,53,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_7_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_7_1__1"
    // InternalDockerCompose.g:2428:1: rule__Service__Group_3_7_1__1 : rule__Service__Group_3_7_1__1__Impl ;
    public final void rule__Service__Group_3_7_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2432:1: ( rule__Service__Group_3_7_1__1__Impl )
            // InternalDockerCompose.g:2433:2: rule__Service__Group_3_7_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_7_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7_1__1"


    // $ANTLR start "rule__Service__Group_3_7_1__1__Impl"
    // InternalDockerCompose.g:2439:1: rule__Service__Group_3_7_1__1__Impl : ( ( rule__Service__LinksAssignment_3_7_1_1 ) ) ;
    public final void rule__Service__Group_3_7_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2443:1: ( ( ( rule__Service__LinksAssignment_3_7_1_1 ) ) )
            // InternalDockerCompose.g:2444:1: ( ( rule__Service__LinksAssignment_3_7_1_1 ) )
            {
            // InternalDockerCompose.g:2444:1: ( ( rule__Service__LinksAssignment_3_7_1_1 ) )
            // InternalDockerCompose.g:2445:2: ( rule__Service__LinksAssignment_3_7_1_1 )
            {
             before(grammarAccess.getServiceAccess().getLinksAssignment_3_7_1_1()); 
            // InternalDockerCompose.g:2446:2: ( rule__Service__LinksAssignment_3_7_1_1 )
            // InternalDockerCompose.g:2446:3: rule__Service__LinksAssignment_3_7_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__LinksAssignment_3_7_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getLinksAssignment_3_7_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_8__0"
    // InternalDockerCompose.g:2455:1: rule__Service__Group_3_8__0 : rule__Service__Group_3_8__0__Impl rule__Service__Group_3_8__1 ;
    public final void rule__Service__Group_3_8__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2459:1: ( rule__Service__Group_3_8__0__Impl rule__Service__Group_3_8__1 )
            // InternalDockerCompose.g:2460:2: rule__Service__Group_3_8__0__Impl rule__Service__Group_3_8__1
            {
            pushFollow(FOLLOW_14);
            rule__Service__Group_3_8__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_8__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_8__0"


    // $ANTLR start "rule__Service__Group_3_8__0__Impl"
    // InternalDockerCompose.g:2467:1: rule__Service__Group_3_8__0__Impl : ( 'depends_on:' ) ;
    public final void rule__Service__Group_3_8__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2471:1: ( ( 'depends_on:' ) )
            // InternalDockerCompose.g:2472:1: ( 'depends_on:' )
            {
            // InternalDockerCompose.g:2472:1: ( 'depends_on:' )
            // InternalDockerCompose.g:2473:2: 'depends_on:'
            {
             before(grammarAccess.getServiceAccess().getDepends_onKeyword_3_8_0()); 
            match(input,54,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getDepends_onKeyword_3_8_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_8__0__Impl"


    // $ANTLR start "rule__Service__Group_3_8__1"
    // InternalDockerCompose.g:2482:1: rule__Service__Group_3_8__1 : rule__Service__Group_3_8__1__Impl ;
    public final void rule__Service__Group_3_8__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2486:1: ( rule__Service__Group_3_8__1__Impl )
            // InternalDockerCompose.g:2487:2: rule__Service__Group_3_8__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_8__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_8__1"


    // $ANTLR start "rule__Service__Group_3_8__1__Impl"
    // InternalDockerCompose.g:2493:1: rule__Service__Group_3_8__1__Impl : ( ( rule__Service__Alternatives_3_8_1 ) ) ;
    public final void rule__Service__Group_3_8__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2497:1: ( ( ( rule__Service__Alternatives_3_8_1 ) ) )
            // InternalDockerCompose.g:2498:1: ( ( rule__Service__Alternatives_3_8_1 ) )
            {
            // InternalDockerCompose.g:2498:1: ( ( rule__Service__Alternatives_3_8_1 ) )
            // InternalDockerCompose.g:2499:2: ( rule__Service__Alternatives_3_8_1 )
            {
             before(grammarAccess.getServiceAccess().getAlternatives_3_8_1()); 
            // InternalDockerCompose.g:2500:2: ( rule__Service__Alternatives_3_8_1 )
            // InternalDockerCompose.g:2500:3: rule__Service__Alternatives_3_8_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Alternatives_3_8_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getAlternatives_3_8_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_8__1__Impl"


    // $ANTLR start "rule__Service__Group_3_9__0"
    // InternalDockerCompose.g:2509:1: rule__Service__Group_3_9__0 : rule__Service__Group_3_9__0__Impl rule__Service__Group_3_9__1 ;
    public final void rule__Service__Group_3_9__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2513:1: ( rule__Service__Group_3_9__0__Impl rule__Service__Group_3_9__1 )
            // InternalDockerCompose.g:2514:2: rule__Service__Group_3_9__0__Impl rule__Service__Group_3_9__1
            {
            pushFollow(FOLLOW_14);
            rule__Service__Group_3_9__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_9__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_9__0"


    // $ANTLR start "rule__Service__Group_3_9__0__Impl"
    // InternalDockerCompose.g:2521:1: rule__Service__Group_3_9__0__Impl : ( 'networks:' ) ;
    public final void rule__Service__Group_3_9__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2525:1: ( ( 'networks:' ) )
            // InternalDockerCompose.g:2526:1: ( 'networks:' )
            {
            // InternalDockerCompose.g:2526:1: ( 'networks:' )
            // InternalDockerCompose.g:2527:2: 'networks:'
            {
             before(grammarAccess.getServiceAccess().getNetworksKeyword_3_9_0()); 
            match(input,42,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getNetworksKeyword_3_9_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_9__0__Impl"


    // $ANTLR start "rule__Service__Group_3_9__1"
    // InternalDockerCompose.g:2536:1: rule__Service__Group_3_9__1 : rule__Service__Group_3_9__1__Impl ;
    public final void rule__Service__Group_3_9__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2540:1: ( rule__Service__Group_3_9__1__Impl )
            // InternalDockerCompose.g:2541:2: rule__Service__Group_3_9__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_9__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_9__1"


    // $ANTLR start "rule__Service__Group_3_9__1__Impl"
    // InternalDockerCompose.g:2547:1: rule__Service__Group_3_9__1__Impl : ( ( ( rule__Service__NetworksAssignment_3_9_1 ) ) ( ( rule__Service__NetworksAssignment_3_9_1 )* ) ) ;
    public final void rule__Service__Group_3_9__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2551:1: ( ( ( ( rule__Service__NetworksAssignment_3_9_1 ) ) ( ( rule__Service__NetworksAssignment_3_9_1 )* ) ) )
            // InternalDockerCompose.g:2552:1: ( ( ( rule__Service__NetworksAssignment_3_9_1 ) ) ( ( rule__Service__NetworksAssignment_3_9_1 )* ) )
            {
            // InternalDockerCompose.g:2552:1: ( ( ( rule__Service__NetworksAssignment_3_9_1 ) ) ( ( rule__Service__NetworksAssignment_3_9_1 )* ) )
            // InternalDockerCompose.g:2553:2: ( ( rule__Service__NetworksAssignment_3_9_1 ) ) ( ( rule__Service__NetworksAssignment_3_9_1 )* )
            {
            // InternalDockerCompose.g:2553:2: ( ( rule__Service__NetworksAssignment_3_9_1 ) )
            // InternalDockerCompose.g:2554:3: ( rule__Service__NetworksAssignment_3_9_1 )
            {
             before(grammarAccess.getServiceAccess().getNetworksAssignment_3_9_1()); 
            // InternalDockerCompose.g:2555:3: ( rule__Service__NetworksAssignment_3_9_1 )
            // InternalDockerCompose.g:2555:4: rule__Service__NetworksAssignment_3_9_1
            {
            pushFollow(FOLLOW_15);
            rule__Service__NetworksAssignment_3_9_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getNetworksAssignment_3_9_1()); 

            }

            // InternalDockerCompose.g:2558:2: ( ( rule__Service__NetworksAssignment_3_9_1 )* )
            // InternalDockerCompose.g:2559:3: ( rule__Service__NetworksAssignment_3_9_1 )*
            {
             before(grammarAccess.getServiceAccess().getNetworksAssignment_3_9_1()); 
            // InternalDockerCompose.g:2560:3: ( rule__Service__NetworksAssignment_3_9_1 )*
            loop32:
            do {
                int alt32=2;
                alt32 = dfa32.predict(input);
                switch (alt32) {
            	case 1 :
            	    // InternalDockerCompose.g:2560:4: rule__Service__NetworksAssignment_3_9_1
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__Service__NetworksAssignment_3_9_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);

             after(grammarAccess.getServiceAccess().getNetworksAssignment_3_9_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_9__1__Impl"


    // $ANTLR start "rule__Service__Group_3_10__0"
    // InternalDockerCompose.g:2570:1: rule__Service__Group_3_10__0 : rule__Service__Group_3_10__0__Impl rule__Service__Group_3_10__1 ;
    public final void rule__Service__Group_3_10__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2574:1: ( rule__Service__Group_3_10__0__Impl rule__Service__Group_3_10__1 )
            // InternalDockerCompose.g:2575:2: rule__Service__Group_3_10__0__Impl rule__Service__Group_3_10__1
            {
            pushFollow(FOLLOW_13);
            rule__Service__Group_3_10__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_10__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10__0"


    // $ANTLR start "rule__Service__Group_3_10__0__Impl"
    // InternalDockerCompose.g:2582:1: rule__Service__Group_3_10__0__Impl : ( 'volumes:' ) ;
    public final void rule__Service__Group_3_10__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2586:1: ( ( 'volumes:' ) )
            // InternalDockerCompose.g:2587:1: ( 'volumes:' )
            {
            // InternalDockerCompose.g:2587:1: ( 'volumes:' )
            // InternalDockerCompose.g:2588:2: 'volumes:'
            {
             before(grammarAccess.getServiceAccess().getVolumesKeyword_3_10_0()); 
            match(input,39,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getVolumesKeyword_3_10_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10__0__Impl"


    // $ANTLR start "rule__Service__Group_3_10__1"
    // InternalDockerCompose.g:2597:1: rule__Service__Group_3_10__1 : rule__Service__Group_3_10__1__Impl ;
    public final void rule__Service__Group_3_10__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2601:1: ( rule__Service__Group_3_10__1__Impl )
            // InternalDockerCompose.g:2602:2: rule__Service__Group_3_10__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_10__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10__1"


    // $ANTLR start "rule__Service__Group_3_10__1__Impl"
    // InternalDockerCompose.g:2608:1: rule__Service__Group_3_10__1__Impl : ( ( rule__Service__Alternatives_3_10_1 ) ) ;
    public final void rule__Service__Group_3_10__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2612:1: ( ( ( rule__Service__Alternatives_3_10_1 ) ) )
            // InternalDockerCompose.g:2613:1: ( ( rule__Service__Alternatives_3_10_1 ) )
            {
            // InternalDockerCompose.g:2613:1: ( ( rule__Service__Alternatives_3_10_1 ) )
            // InternalDockerCompose.g:2614:2: ( rule__Service__Alternatives_3_10_1 )
            {
             before(grammarAccess.getServiceAccess().getAlternatives_3_10_1()); 
            // InternalDockerCompose.g:2615:2: ( rule__Service__Alternatives_3_10_1 )
            // InternalDockerCompose.g:2615:3: rule__Service__Alternatives_3_10_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Alternatives_3_10_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getAlternatives_3_10_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10__1__Impl"


    // $ANTLR start "rule__Service__Group_3_10_1_0__0"
    // InternalDockerCompose.g:2624:1: rule__Service__Group_3_10_1_0__0 : rule__Service__Group_3_10_1_0__0__Impl rule__Service__Group_3_10_1_0__1 ;
    public final void rule__Service__Group_3_10_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2628:1: ( rule__Service__Group_3_10_1_0__0__Impl rule__Service__Group_3_10_1_0__1 )
            // InternalDockerCompose.g:2629:2: rule__Service__Group_3_10_1_0__0__Impl rule__Service__Group_3_10_1_0__1
            {
            pushFollow(FOLLOW_6);
            rule__Service__Group_3_10_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_10_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10_1_0__0"


    // $ANTLR start "rule__Service__Group_3_10_1_0__0__Impl"
    // InternalDockerCompose.g:2636:1: rule__Service__Group_3_10_1_0__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_10_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2640:1: ( ( '-' ) )
            // InternalDockerCompose.g:2641:1: ( '-' )
            {
            // InternalDockerCompose.g:2641:1: ( '-' )
            // InternalDockerCompose.g:2642:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_10_1_0_0()); 
            match(input,53,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_10_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10_1_0__0__Impl"


    // $ANTLR start "rule__Service__Group_3_10_1_0__1"
    // InternalDockerCompose.g:2651:1: rule__Service__Group_3_10_1_0__1 : rule__Service__Group_3_10_1_0__1__Impl ;
    public final void rule__Service__Group_3_10_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2655:1: ( rule__Service__Group_3_10_1_0__1__Impl )
            // InternalDockerCompose.g:2656:2: rule__Service__Group_3_10_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_10_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10_1_0__1"


    // $ANTLR start "rule__Service__Group_3_10_1_0__1__Impl"
    // InternalDockerCompose.g:2662:1: rule__Service__Group_3_10_1_0__1__Impl : ( ( rule__Service__VolumesAssignment_3_10_1_0_1 ) ) ;
    public final void rule__Service__Group_3_10_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2666:1: ( ( ( rule__Service__VolumesAssignment_3_10_1_0_1 ) ) )
            // InternalDockerCompose.g:2667:1: ( ( rule__Service__VolumesAssignment_3_10_1_0_1 ) )
            {
            // InternalDockerCompose.g:2667:1: ( ( rule__Service__VolumesAssignment_3_10_1_0_1 ) )
            // InternalDockerCompose.g:2668:2: ( rule__Service__VolumesAssignment_3_10_1_0_1 )
            {
             before(grammarAccess.getServiceAccess().getVolumesAssignment_3_10_1_0_1()); 
            // InternalDockerCompose.g:2669:2: ( rule__Service__VolumesAssignment_3_10_1_0_1 )
            // InternalDockerCompose.g:2669:3: rule__Service__VolumesAssignment_3_10_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__VolumesAssignment_3_10_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getVolumesAssignment_3_10_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10_1_0__1__Impl"


    // $ANTLR start "rule__Service__Group_3_10_1_1__0"
    // InternalDockerCompose.g:2678:1: rule__Service__Group_3_10_1_1__0 : rule__Service__Group_3_10_1_1__0__Impl rule__Service__Group_3_10_1_1__1 ;
    public final void rule__Service__Group_3_10_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2682:1: ( rule__Service__Group_3_10_1_1__0__Impl rule__Service__Group_3_10_1_1__1 )
            // InternalDockerCompose.g:2683:2: rule__Service__Group_3_10_1_1__0__Impl rule__Service__Group_3_10_1_1__1
            {
            pushFollow(FOLLOW_16);
            rule__Service__Group_3_10_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_10_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10_1_1__0"


    // $ANTLR start "rule__Service__Group_3_10_1_1__0__Impl"
    // InternalDockerCompose.g:2690:1: rule__Service__Group_3_10_1_1__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_10_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2694:1: ( ( '-' ) )
            // InternalDockerCompose.g:2695:1: ( '-' )
            {
            // InternalDockerCompose.g:2695:1: ( '-' )
            // InternalDockerCompose.g:2696:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_10_1_1_0()); 
            match(input,53,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_10_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10_1_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_10_1_1__1"
    // InternalDockerCompose.g:2705:1: rule__Service__Group_3_10_1_1__1 : rule__Service__Group_3_10_1_1__1__Impl ;
    public final void rule__Service__Group_3_10_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2709:1: ( rule__Service__Group_3_10_1_1__1__Impl )
            // InternalDockerCompose.g:2710:2: rule__Service__Group_3_10_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_10_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10_1_1__1"


    // $ANTLR start "rule__Service__Group_3_10_1_1__1__Impl"
    // InternalDockerCompose.g:2716:1: rule__Service__Group_3_10_1_1__1__Impl : ( ( rule__Service__VolumesAssignment_3_10_1_1_1 ) ) ;
    public final void rule__Service__Group_3_10_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2720:1: ( ( ( rule__Service__VolumesAssignment_3_10_1_1_1 ) ) )
            // InternalDockerCompose.g:2721:1: ( ( rule__Service__VolumesAssignment_3_10_1_1_1 ) )
            {
            // InternalDockerCompose.g:2721:1: ( ( rule__Service__VolumesAssignment_3_10_1_1_1 ) )
            // InternalDockerCompose.g:2722:2: ( rule__Service__VolumesAssignment_3_10_1_1_1 )
            {
             before(grammarAccess.getServiceAccess().getVolumesAssignment_3_10_1_1_1()); 
            // InternalDockerCompose.g:2723:2: ( rule__Service__VolumesAssignment_3_10_1_1_1 )
            // InternalDockerCompose.g:2723:3: rule__Service__VolumesAssignment_3_10_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__VolumesAssignment_3_10_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getVolumesAssignment_3_10_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10_1_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_11__0"
    // InternalDockerCompose.g:2732:1: rule__Service__Group_3_11__0 : rule__Service__Group_3_11__0__Impl rule__Service__Group_3_11__1 ;
    public final void rule__Service__Group_3_11__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2736:1: ( rule__Service__Group_3_11__0__Impl rule__Service__Group_3_11__1 )
            // InternalDockerCompose.g:2737:2: rule__Service__Group_3_11__0__Impl rule__Service__Group_3_11__1
            {
            pushFollow(FOLLOW_13);
            rule__Service__Group_3_11__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_11__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11__0"


    // $ANTLR start "rule__Service__Group_3_11__0__Impl"
    // InternalDockerCompose.g:2744:1: rule__Service__Group_3_11__0__Impl : ( 'configs:' ) ;
    public final void rule__Service__Group_3_11__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2748:1: ( ( 'configs:' ) )
            // InternalDockerCompose.g:2749:1: ( 'configs:' )
            {
            // InternalDockerCompose.g:2749:1: ( 'configs:' )
            // InternalDockerCompose.g:2750:2: 'configs:'
            {
             before(grammarAccess.getServiceAccess().getConfigsKeyword_3_11_0()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getConfigsKeyword_3_11_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11__0__Impl"


    // $ANTLR start "rule__Service__Group_3_11__1"
    // InternalDockerCompose.g:2759:1: rule__Service__Group_3_11__1 : rule__Service__Group_3_11__1__Impl ;
    public final void rule__Service__Group_3_11__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2763:1: ( rule__Service__Group_3_11__1__Impl )
            // InternalDockerCompose.g:2764:2: rule__Service__Group_3_11__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_11__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11__1"


    // $ANTLR start "rule__Service__Group_3_11__1__Impl"
    // InternalDockerCompose.g:2770:1: rule__Service__Group_3_11__1__Impl : ( ( rule__Service__Alternatives_3_11_1 ) ) ;
    public final void rule__Service__Group_3_11__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2774:1: ( ( ( rule__Service__Alternatives_3_11_1 ) ) )
            // InternalDockerCompose.g:2775:1: ( ( rule__Service__Alternatives_3_11_1 ) )
            {
            // InternalDockerCompose.g:2775:1: ( ( rule__Service__Alternatives_3_11_1 ) )
            // InternalDockerCompose.g:2776:2: ( rule__Service__Alternatives_3_11_1 )
            {
             before(grammarAccess.getServiceAccess().getAlternatives_3_11_1()); 
            // InternalDockerCompose.g:2777:2: ( rule__Service__Alternatives_3_11_1 )
            // InternalDockerCompose.g:2777:3: rule__Service__Alternatives_3_11_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Alternatives_3_11_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getAlternatives_3_11_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11__1__Impl"


    // $ANTLR start "rule__Service__Group_3_11_1_0__0"
    // InternalDockerCompose.g:2786:1: rule__Service__Group_3_11_1_0__0 : rule__Service__Group_3_11_1_0__0__Impl rule__Service__Group_3_11_1_0__1 ;
    public final void rule__Service__Group_3_11_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2790:1: ( rule__Service__Group_3_11_1_0__0__Impl rule__Service__Group_3_11_1_0__1 )
            // InternalDockerCompose.g:2791:2: rule__Service__Group_3_11_1_0__0__Impl rule__Service__Group_3_11_1_0__1
            {
            pushFollow(FOLLOW_6);
            rule__Service__Group_3_11_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_11_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11_1_0__0"


    // $ANTLR start "rule__Service__Group_3_11_1_0__0__Impl"
    // InternalDockerCompose.g:2798:1: rule__Service__Group_3_11_1_0__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_11_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2802:1: ( ( '-' ) )
            // InternalDockerCompose.g:2803:1: ( '-' )
            {
            // InternalDockerCompose.g:2803:1: ( '-' )
            // InternalDockerCompose.g:2804:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_11_1_0_0()); 
            match(input,53,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_11_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11_1_0__0__Impl"


    // $ANTLR start "rule__Service__Group_3_11_1_0__1"
    // InternalDockerCompose.g:2813:1: rule__Service__Group_3_11_1_0__1 : rule__Service__Group_3_11_1_0__1__Impl ;
    public final void rule__Service__Group_3_11_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2817:1: ( rule__Service__Group_3_11_1_0__1__Impl )
            // InternalDockerCompose.g:2818:2: rule__Service__Group_3_11_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_11_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11_1_0__1"


    // $ANTLR start "rule__Service__Group_3_11_1_0__1__Impl"
    // InternalDockerCompose.g:2824:1: rule__Service__Group_3_11_1_0__1__Impl : ( ( rule__Service__ConfigsAssignment_3_11_1_0_1 ) ) ;
    public final void rule__Service__Group_3_11_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2828:1: ( ( ( rule__Service__ConfigsAssignment_3_11_1_0_1 ) ) )
            // InternalDockerCompose.g:2829:1: ( ( rule__Service__ConfigsAssignment_3_11_1_0_1 ) )
            {
            // InternalDockerCompose.g:2829:1: ( ( rule__Service__ConfigsAssignment_3_11_1_0_1 ) )
            // InternalDockerCompose.g:2830:2: ( rule__Service__ConfigsAssignment_3_11_1_0_1 )
            {
             before(grammarAccess.getServiceAccess().getConfigsAssignment_3_11_1_0_1()); 
            // InternalDockerCompose.g:2831:2: ( rule__Service__ConfigsAssignment_3_11_1_0_1 )
            // InternalDockerCompose.g:2831:3: rule__Service__ConfigsAssignment_3_11_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__ConfigsAssignment_3_11_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getConfigsAssignment_3_11_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11_1_0__1__Impl"


    // $ANTLR start "rule__Service__Group_3_11_1_1__0"
    // InternalDockerCompose.g:2840:1: rule__Service__Group_3_11_1_1__0 : rule__Service__Group_3_11_1_1__0__Impl rule__Service__Group_3_11_1_1__1 ;
    public final void rule__Service__Group_3_11_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2844:1: ( rule__Service__Group_3_11_1_1__0__Impl rule__Service__Group_3_11_1_1__1 )
            // InternalDockerCompose.g:2845:2: rule__Service__Group_3_11_1_1__0__Impl rule__Service__Group_3_11_1_1__1
            {
            pushFollow(FOLLOW_17);
            rule__Service__Group_3_11_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_11_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11_1_1__0"


    // $ANTLR start "rule__Service__Group_3_11_1_1__0__Impl"
    // InternalDockerCompose.g:2852:1: rule__Service__Group_3_11_1_1__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_11_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2856:1: ( ( '-' ) )
            // InternalDockerCompose.g:2857:1: ( '-' )
            {
            // InternalDockerCompose.g:2857:1: ( '-' )
            // InternalDockerCompose.g:2858:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_11_1_1_0()); 
            match(input,53,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_11_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11_1_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_11_1_1__1"
    // InternalDockerCompose.g:2867:1: rule__Service__Group_3_11_1_1__1 : rule__Service__Group_3_11_1_1__1__Impl ;
    public final void rule__Service__Group_3_11_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2871:1: ( rule__Service__Group_3_11_1_1__1__Impl )
            // InternalDockerCompose.g:2872:2: rule__Service__Group_3_11_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_11_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11_1_1__1"


    // $ANTLR start "rule__Service__Group_3_11_1_1__1__Impl"
    // InternalDockerCompose.g:2878:1: rule__Service__Group_3_11_1_1__1__Impl : ( ( rule__Service__ConfigsAssignment_3_11_1_1_1 ) ) ;
    public final void rule__Service__Group_3_11_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2882:1: ( ( ( rule__Service__ConfigsAssignment_3_11_1_1_1 ) ) )
            // InternalDockerCompose.g:2883:1: ( ( rule__Service__ConfigsAssignment_3_11_1_1_1 ) )
            {
            // InternalDockerCompose.g:2883:1: ( ( rule__Service__ConfigsAssignment_3_11_1_1_1 ) )
            // InternalDockerCompose.g:2884:2: ( rule__Service__ConfigsAssignment_3_11_1_1_1 )
            {
             before(grammarAccess.getServiceAccess().getConfigsAssignment_3_11_1_1_1()); 
            // InternalDockerCompose.g:2885:2: ( rule__Service__ConfigsAssignment_3_11_1_1_1 )
            // InternalDockerCompose.g:2885:3: rule__Service__ConfigsAssignment_3_11_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__ConfigsAssignment_3_11_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getConfigsAssignment_3_11_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11_1_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_12__0"
    // InternalDockerCompose.g:2894:1: rule__Service__Group_3_12__0 : rule__Service__Group_3_12__0__Impl rule__Service__Group_3_12__1 ;
    public final void rule__Service__Group_3_12__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2898:1: ( rule__Service__Group_3_12__0__Impl rule__Service__Group_3_12__1 )
            // InternalDockerCompose.g:2899:2: rule__Service__Group_3_12__0__Impl rule__Service__Group_3_12__1
            {
            pushFollow(FOLLOW_13);
            rule__Service__Group_3_12__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_12__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12__0"


    // $ANTLR start "rule__Service__Group_3_12__0__Impl"
    // InternalDockerCompose.g:2906:1: rule__Service__Group_3_12__0__Impl : ( 'secrets:' ) ;
    public final void rule__Service__Group_3_12__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2910:1: ( ( 'secrets:' ) )
            // InternalDockerCompose.g:2911:1: ( 'secrets:' )
            {
            // InternalDockerCompose.g:2911:1: ( 'secrets:' )
            // InternalDockerCompose.g:2912:2: 'secrets:'
            {
             before(grammarAccess.getServiceAccess().getSecretsKeyword_3_12_0()); 
            match(input,41,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getSecretsKeyword_3_12_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12__0__Impl"


    // $ANTLR start "rule__Service__Group_3_12__1"
    // InternalDockerCompose.g:2921:1: rule__Service__Group_3_12__1 : rule__Service__Group_3_12__1__Impl ;
    public final void rule__Service__Group_3_12__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2925:1: ( rule__Service__Group_3_12__1__Impl )
            // InternalDockerCompose.g:2926:2: rule__Service__Group_3_12__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_12__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12__1"


    // $ANTLR start "rule__Service__Group_3_12__1__Impl"
    // InternalDockerCompose.g:2932:1: rule__Service__Group_3_12__1__Impl : ( ( rule__Service__Alternatives_3_12_1 ) ) ;
    public final void rule__Service__Group_3_12__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2936:1: ( ( ( rule__Service__Alternatives_3_12_1 ) ) )
            // InternalDockerCompose.g:2937:1: ( ( rule__Service__Alternatives_3_12_1 ) )
            {
            // InternalDockerCompose.g:2937:1: ( ( rule__Service__Alternatives_3_12_1 ) )
            // InternalDockerCompose.g:2938:2: ( rule__Service__Alternatives_3_12_1 )
            {
             before(grammarAccess.getServiceAccess().getAlternatives_3_12_1()); 
            // InternalDockerCompose.g:2939:2: ( rule__Service__Alternatives_3_12_1 )
            // InternalDockerCompose.g:2939:3: rule__Service__Alternatives_3_12_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Alternatives_3_12_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getAlternatives_3_12_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12__1__Impl"


    // $ANTLR start "rule__Service__Group_3_12_1_0__0"
    // InternalDockerCompose.g:2948:1: rule__Service__Group_3_12_1_0__0 : rule__Service__Group_3_12_1_0__0__Impl rule__Service__Group_3_12_1_0__1 ;
    public final void rule__Service__Group_3_12_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2952:1: ( rule__Service__Group_3_12_1_0__0__Impl rule__Service__Group_3_12_1_0__1 )
            // InternalDockerCompose.g:2953:2: rule__Service__Group_3_12_1_0__0__Impl rule__Service__Group_3_12_1_0__1
            {
            pushFollow(FOLLOW_6);
            rule__Service__Group_3_12_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_12_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12_1_0__0"


    // $ANTLR start "rule__Service__Group_3_12_1_0__0__Impl"
    // InternalDockerCompose.g:2960:1: rule__Service__Group_3_12_1_0__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_12_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2964:1: ( ( '-' ) )
            // InternalDockerCompose.g:2965:1: ( '-' )
            {
            // InternalDockerCompose.g:2965:1: ( '-' )
            // InternalDockerCompose.g:2966:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_12_1_0_0()); 
            match(input,53,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_12_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12_1_0__0__Impl"


    // $ANTLR start "rule__Service__Group_3_12_1_0__1"
    // InternalDockerCompose.g:2975:1: rule__Service__Group_3_12_1_0__1 : rule__Service__Group_3_12_1_0__1__Impl ;
    public final void rule__Service__Group_3_12_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2979:1: ( rule__Service__Group_3_12_1_0__1__Impl )
            // InternalDockerCompose.g:2980:2: rule__Service__Group_3_12_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_12_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12_1_0__1"


    // $ANTLR start "rule__Service__Group_3_12_1_0__1__Impl"
    // InternalDockerCompose.g:2986:1: rule__Service__Group_3_12_1_0__1__Impl : ( ( rule__Service__SecretsAssignment_3_12_1_0_1 ) ) ;
    public final void rule__Service__Group_3_12_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2990:1: ( ( ( rule__Service__SecretsAssignment_3_12_1_0_1 ) ) )
            // InternalDockerCompose.g:2991:1: ( ( rule__Service__SecretsAssignment_3_12_1_0_1 ) )
            {
            // InternalDockerCompose.g:2991:1: ( ( rule__Service__SecretsAssignment_3_12_1_0_1 ) )
            // InternalDockerCompose.g:2992:2: ( rule__Service__SecretsAssignment_3_12_1_0_1 )
            {
             before(grammarAccess.getServiceAccess().getSecretsAssignment_3_12_1_0_1()); 
            // InternalDockerCompose.g:2993:2: ( rule__Service__SecretsAssignment_3_12_1_0_1 )
            // InternalDockerCompose.g:2993:3: rule__Service__SecretsAssignment_3_12_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__SecretsAssignment_3_12_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getSecretsAssignment_3_12_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12_1_0__1__Impl"


    // $ANTLR start "rule__Service__Group_3_12_1_1__0"
    // InternalDockerCompose.g:3002:1: rule__Service__Group_3_12_1_1__0 : rule__Service__Group_3_12_1_1__0__Impl rule__Service__Group_3_12_1_1__1 ;
    public final void rule__Service__Group_3_12_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3006:1: ( rule__Service__Group_3_12_1_1__0__Impl rule__Service__Group_3_12_1_1__1 )
            // InternalDockerCompose.g:3007:2: rule__Service__Group_3_12_1_1__0__Impl rule__Service__Group_3_12_1_1__1
            {
            pushFollow(FOLLOW_17);
            rule__Service__Group_3_12_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_12_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12_1_1__0"


    // $ANTLR start "rule__Service__Group_3_12_1_1__0__Impl"
    // InternalDockerCompose.g:3014:1: rule__Service__Group_3_12_1_1__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_12_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3018:1: ( ( '-' ) )
            // InternalDockerCompose.g:3019:1: ( '-' )
            {
            // InternalDockerCompose.g:3019:1: ( '-' )
            // InternalDockerCompose.g:3020:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_12_1_1_0()); 
            match(input,53,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_12_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12_1_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_12_1_1__1"
    // InternalDockerCompose.g:3029:1: rule__Service__Group_3_12_1_1__1 : rule__Service__Group_3_12_1_1__1__Impl ;
    public final void rule__Service__Group_3_12_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3033:1: ( rule__Service__Group_3_12_1_1__1__Impl )
            // InternalDockerCompose.g:3034:2: rule__Service__Group_3_12_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_12_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12_1_1__1"


    // $ANTLR start "rule__Service__Group_3_12_1_1__1__Impl"
    // InternalDockerCompose.g:3040:1: rule__Service__Group_3_12_1_1__1__Impl : ( ( rule__Service__SecretsAssignment_3_12_1_1_1 ) ) ;
    public final void rule__Service__Group_3_12_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3044:1: ( ( ( rule__Service__SecretsAssignment_3_12_1_1_1 ) ) )
            // InternalDockerCompose.g:3045:1: ( ( rule__Service__SecretsAssignment_3_12_1_1_1 ) )
            {
            // InternalDockerCompose.g:3045:1: ( ( rule__Service__SecretsAssignment_3_12_1_1_1 ) )
            // InternalDockerCompose.g:3046:2: ( rule__Service__SecretsAssignment_3_12_1_1_1 )
            {
             before(grammarAccess.getServiceAccess().getSecretsAssignment_3_12_1_1_1()); 
            // InternalDockerCompose.g:3047:2: ( rule__Service__SecretsAssignment_3_12_1_1_1 )
            // InternalDockerCompose.g:3047:3: rule__Service__SecretsAssignment_3_12_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__SecretsAssignment_3_12_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getSecretsAssignment_3_12_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12_1_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_13__0"
    // InternalDockerCompose.g:3056:1: rule__Service__Group_3_13__0 : rule__Service__Group_3_13__0__Impl rule__Service__Group_3_13__1 ;
    public final void rule__Service__Group_3_13__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3060:1: ( rule__Service__Group_3_13__0__Impl rule__Service__Group_3_13__1 )
            // InternalDockerCompose.g:3061:2: rule__Service__Group_3_13__0__Impl rule__Service__Group_3_13__1
            {
            pushFollow(FOLLOW_13);
            rule__Service__Group_3_13__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_13__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13__0"


    // $ANTLR start "rule__Service__Group_3_13__0__Impl"
    // InternalDockerCompose.g:3068:1: rule__Service__Group_3_13__0__Impl : ( 'devices:' ) ;
    public final void rule__Service__Group_3_13__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3072:1: ( ( 'devices:' ) )
            // InternalDockerCompose.g:3073:1: ( 'devices:' )
            {
            // InternalDockerCompose.g:3073:1: ( 'devices:' )
            // InternalDockerCompose.g:3074:2: 'devices:'
            {
             before(grammarAccess.getServiceAccess().getDevicesKeyword_3_13_0()); 
            match(input,55,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getDevicesKeyword_3_13_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13__0__Impl"


    // $ANTLR start "rule__Service__Group_3_13__1"
    // InternalDockerCompose.g:3083:1: rule__Service__Group_3_13__1 : rule__Service__Group_3_13__1__Impl ;
    public final void rule__Service__Group_3_13__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3087:1: ( rule__Service__Group_3_13__1__Impl )
            // InternalDockerCompose.g:3088:2: rule__Service__Group_3_13__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_13__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13__1"


    // $ANTLR start "rule__Service__Group_3_13__1__Impl"
    // InternalDockerCompose.g:3094:1: rule__Service__Group_3_13__1__Impl : ( ( ( rule__Service__Group_3_13_1__0 ) ) ( ( rule__Service__Group_3_13_1__0 )* ) ) ;
    public final void rule__Service__Group_3_13__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3098:1: ( ( ( ( rule__Service__Group_3_13_1__0 ) ) ( ( rule__Service__Group_3_13_1__0 )* ) ) )
            // InternalDockerCompose.g:3099:1: ( ( ( rule__Service__Group_3_13_1__0 ) ) ( ( rule__Service__Group_3_13_1__0 )* ) )
            {
            // InternalDockerCompose.g:3099:1: ( ( ( rule__Service__Group_3_13_1__0 ) ) ( ( rule__Service__Group_3_13_1__0 )* ) )
            // InternalDockerCompose.g:3100:2: ( ( rule__Service__Group_3_13_1__0 ) ) ( ( rule__Service__Group_3_13_1__0 )* )
            {
            // InternalDockerCompose.g:3100:2: ( ( rule__Service__Group_3_13_1__0 ) )
            // InternalDockerCompose.g:3101:3: ( rule__Service__Group_3_13_1__0 )
            {
             before(grammarAccess.getServiceAccess().getGroup_3_13_1()); 
            // InternalDockerCompose.g:3102:3: ( rule__Service__Group_3_13_1__0 )
            // InternalDockerCompose.g:3102:4: rule__Service__Group_3_13_1__0
            {
            pushFollow(FOLLOW_3);
            rule__Service__Group_3_13_1__0();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getGroup_3_13_1()); 

            }

            // InternalDockerCompose.g:3105:2: ( ( rule__Service__Group_3_13_1__0 )* )
            // InternalDockerCompose.g:3106:3: ( rule__Service__Group_3_13_1__0 )*
            {
             before(grammarAccess.getServiceAccess().getGroup_3_13_1()); 
            // InternalDockerCompose.g:3107:3: ( rule__Service__Group_3_13_1__0 )*
            loop33:
            do {
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( (LA33_0==53) ) {
                    alt33=1;
                }


                switch (alt33) {
            	case 1 :
            	    // InternalDockerCompose.g:3107:4: rule__Service__Group_3_13_1__0
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Service__Group_3_13_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop33;
                }
            } while (true);

             after(grammarAccess.getServiceAccess().getGroup_3_13_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13__1__Impl"


    // $ANTLR start "rule__Service__Group_3_13_1__0"
    // InternalDockerCompose.g:3117:1: rule__Service__Group_3_13_1__0 : rule__Service__Group_3_13_1__0__Impl rule__Service__Group_3_13_1__1 ;
    public final void rule__Service__Group_3_13_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3121:1: ( rule__Service__Group_3_13_1__0__Impl rule__Service__Group_3_13_1__1 )
            // InternalDockerCompose.g:3122:2: rule__Service__Group_3_13_1__0__Impl rule__Service__Group_3_13_1__1
            {
            pushFollow(FOLLOW_18);
            rule__Service__Group_3_13_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_13_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13_1__0"


    // $ANTLR start "rule__Service__Group_3_13_1__0__Impl"
    // InternalDockerCompose.g:3129:1: rule__Service__Group_3_13_1__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_13_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3133:1: ( ( '-' ) )
            // InternalDockerCompose.g:3134:1: ( '-' )
            {
            // InternalDockerCompose.g:3134:1: ( '-' )
            // InternalDockerCompose.g:3135:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_13_1_0()); 
            match(input,53,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_13_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_13_1__1"
    // InternalDockerCompose.g:3144:1: rule__Service__Group_3_13_1__1 : rule__Service__Group_3_13_1__1__Impl ;
    public final void rule__Service__Group_3_13_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3148:1: ( rule__Service__Group_3_13_1__1__Impl )
            // InternalDockerCompose.g:3149:2: rule__Service__Group_3_13_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_13_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13_1__1"


    // $ANTLR start "rule__Service__Group_3_13_1__1__Impl"
    // InternalDockerCompose.g:3155:1: rule__Service__Group_3_13_1__1__Impl : ( ( rule__Service__DevicesAssignment_3_13_1_1 ) ) ;
    public final void rule__Service__Group_3_13_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3159:1: ( ( ( rule__Service__DevicesAssignment_3_13_1_1 ) ) )
            // InternalDockerCompose.g:3160:1: ( ( rule__Service__DevicesAssignment_3_13_1_1 ) )
            {
            // InternalDockerCompose.g:3160:1: ( ( rule__Service__DevicesAssignment_3_13_1_1 ) )
            // InternalDockerCompose.g:3161:2: ( rule__Service__DevicesAssignment_3_13_1_1 )
            {
             before(grammarAccess.getServiceAccess().getDevicesAssignment_3_13_1_1()); 
            // InternalDockerCompose.g:3162:2: ( rule__Service__DevicesAssignment_3_13_1_1 )
            // InternalDockerCompose.g:3162:3: rule__Service__DevicesAssignment_3_13_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__DevicesAssignment_3_13_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getDevicesAssignment_3_13_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_14__0"
    // InternalDockerCompose.g:3171:1: rule__Service__Group_3_14__0 : rule__Service__Group_3_14__0__Impl rule__Service__Group_3_14__1 ;
    public final void rule__Service__Group_3_14__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3175:1: ( rule__Service__Group_3_14__0__Impl rule__Service__Group_3_14__1 )
            // InternalDockerCompose.g:3176:2: rule__Service__Group_3_14__0__Impl rule__Service__Group_3_14__1
            {
            pushFollow(FOLLOW_19);
            rule__Service__Group_3_14__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_14__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14__0"


    // $ANTLR start "rule__Service__Group_3_14__0__Impl"
    // InternalDockerCompose.g:3183:1: rule__Service__Group_3_14__0__Impl : ( 'dns:' ) ;
    public final void rule__Service__Group_3_14__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3187:1: ( ( 'dns:' ) )
            // InternalDockerCompose.g:3188:1: ( 'dns:' )
            {
            // InternalDockerCompose.g:3188:1: ( 'dns:' )
            // InternalDockerCompose.g:3189:2: 'dns:'
            {
             before(grammarAccess.getServiceAccess().getDnsKeyword_3_14_0()); 
            match(input,56,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getDnsKeyword_3_14_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14__0__Impl"


    // $ANTLR start "rule__Service__Group_3_14__1"
    // InternalDockerCompose.g:3198:1: rule__Service__Group_3_14__1 : rule__Service__Group_3_14__1__Impl ;
    public final void rule__Service__Group_3_14__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3202:1: ( rule__Service__Group_3_14__1__Impl )
            // InternalDockerCompose.g:3203:2: rule__Service__Group_3_14__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_14__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14__1"


    // $ANTLR start "rule__Service__Group_3_14__1__Impl"
    // InternalDockerCompose.g:3209:1: rule__Service__Group_3_14__1__Impl : ( ( rule__Service__Alternatives_3_14_1 ) ) ;
    public final void rule__Service__Group_3_14__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3213:1: ( ( ( rule__Service__Alternatives_3_14_1 ) ) )
            // InternalDockerCompose.g:3214:1: ( ( rule__Service__Alternatives_3_14_1 ) )
            {
            // InternalDockerCompose.g:3214:1: ( ( rule__Service__Alternatives_3_14_1 ) )
            // InternalDockerCompose.g:3215:2: ( rule__Service__Alternatives_3_14_1 )
            {
             before(grammarAccess.getServiceAccess().getAlternatives_3_14_1()); 
            // InternalDockerCompose.g:3216:2: ( rule__Service__Alternatives_3_14_1 )
            // InternalDockerCompose.g:3216:3: rule__Service__Alternatives_3_14_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Alternatives_3_14_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getAlternatives_3_14_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14__1__Impl"


    // $ANTLR start "rule__Service__Group_3_14_1_0__0"
    // InternalDockerCompose.g:3225:1: rule__Service__Group_3_14_1_0__0 : rule__Service__Group_3_14_1_0__0__Impl rule__Service__Group_3_14_1_0__1 ;
    public final void rule__Service__Group_3_14_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3229:1: ( rule__Service__Group_3_14_1_0__0__Impl rule__Service__Group_3_14_1_0__1 )
            // InternalDockerCompose.g:3230:2: rule__Service__Group_3_14_1_0__0__Impl rule__Service__Group_3_14_1_0__1
            {
            pushFollow(FOLLOW_19);
            rule__Service__Group_3_14_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_14_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14_1_0__0"


    // $ANTLR start "rule__Service__Group_3_14_1_0__0__Impl"
    // InternalDockerCompose.g:3237:1: rule__Service__Group_3_14_1_0__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_14_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3241:1: ( ( '-' ) )
            // InternalDockerCompose.g:3242:1: ( '-' )
            {
            // InternalDockerCompose.g:3242:1: ( '-' )
            // InternalDockerCompose.g:3243:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_14_1_0_0()); 
            match(input,53,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_14_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14_1_0__0__Impl"


    // $ANTLR start "rule__Service__Group_3_14_1_0__1"
    // InternalDockerCompose.g:3252:1: rule__Service__Group_3_14_1_0__1 : rule__Service__Group_3_14_1_0__1__Impl ;
    public final void rule__Service__Group_3_14_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3256:1: ( rule__Service__Group_3_14_1_0__1__Impl )
            // InternalDockerCompose.g:3257:2: rule__Service__Group_3_14_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_14_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14_1_0__1"


    // $ANTLR start "rule__Service__Group_3_14_1_0__1__Impl"
    // InternalDockerCompose.g:3263:1: rule__Service__Group_3_14_1_0__1__Impl : ( ( rule__Service__DnsAssignment_3_14_1_0_1 ) ) ;
    public final void rule__Service__Group_3_14_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3267:1: ( ( ( rule__Service__DnsAssignment_3_14_1_0_1 ) ) )
            // InternalDockerCompose.g:3268:1: ( ( rule__Service__DnsAssignment_3_14_1_0_1 ) )
            {
            // InternalDockerCompose.g:3268:1: ( ( rule__Service__DnsAssignment_3_14_1_0_1 ) )
            // InternalDockerCompose.g:3269:2: ( rule__Service__DnsAssignment_3_14_1_0_1 )
            {
             before(grammarAccess.getServiceAccess().getDnsAssignment_3_14_1_0_1()); 
            // InternalDockerCompose.g:3270:2: ( rule__Service__DnsAssignment_3_14_1_0_1 )
            // InternalDockerCompose.g:3270:3: rule__Service__DnsAssignment_3_14_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__DnsAssignment_3_14_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getDnsAssignment_3_14_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14_1_0__1__Impl"


    // $ANTLR start "rule__Service__Group_3_15__0"
    // InternalDockerCompose.g:3279:1: rule__Service__Group_3_15__0 : rule__Service__Group_3_15__0__Impl rule__Service__Group_3_15__1 ;
    public final void rule__Service__Group_3_15__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3283:1: ( rule__Service__Group_3_15__0__Impl rule__Service__Group_3_15__1 )
            // InternalDockerCompose.g:3284:2: rule__Service__Group_3_15__0__Impl rule__Service__Group_3_15__1
            {
            pushFollow(FOLLOW_13);
            rule__Service__Group_3_15__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_15__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_15__0"


    // $ANTLR start "rule__Service__Group_3_15__0__Impl"
    // InternalDockerCompose.g:3291:1: rule__Service__Group_3_15__0__Impl : ( 'ports:' ) ;
    public final void rule__Service__Group_3_15__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3295:1: ( ( 'ports:' ) )
            // InternalDockerCompose.g:3296:1: ( 'ports:' )
            {
            // InternalDockerCompose.g:3296:1: ( 'ports:' )
            // InternalDockerCompose.g:3297:2: 'ports:'
            {
             before(grammarAccess.getServiceAccess().getPortsKeyword_3_15_0()); 
            match(input,57,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getPortsKeyword_3_15_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_15__0__Impl"


    // $ANTLR start "rule__Service__Group_3_15__1"
    // InternalDockerCompose.g:3306:1: rule__Service__Group_3_15__1 : rule__Service__Group_3_15__1__Impl ;
    public final void rule__Service__Group_3_15__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3310:1: ( rule__Service__Group_3_15__1__Impl )
            // InternalDockerCompose.g:3311:2: rule__Service__Group_3_15__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_15__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_15__1"


    // $ANTLR start "rule__Service__Group_3_15__1__Impl"
    // InternalDockerCompose.g:3317:1: rule__Service__Group_3_15__1__Impl : ( ( ( rule__Service__Group_3_15_1__0 ) ) ( ( rule__Service__Group_3_15_1__0 )* ) ) ;
    public final void rule__Service__Group_3_15__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3321:1: ( ( ( ( rule__Service__Group_3_15_1__0 ) ) ( ( rule__Service__Group_3_15_1__0 )* ) ) )
            // InternalDockerCompose.g:3322:1: ( ( ( rule__Service__Group_3_15_1__0 ) ) ( ( rule__Service__Group_3_15_1__0 )* ) )
            {
            // InternalDockerCompose.g:3322:1: ( ( ( rule__Service__Group_3_15_1__0 ) ) ( ( rule__Service__Group_3_15_1__0 )* ) )
            // InternalDockerCompose.g:3323:2: ( ( rule__Service__Group_3_15_1__0 ) ) ( ( rule__Service__Group_3_15_1__0 )* )
            {
            // InternalDockerCompose.g:3323:2: ( ( rule__Service__Group_3_15_1__0 ) )
            // InternalDockerCompose.g:3324:3: ( rule__Service__Group_3_15_1__0 )
            {
             before(grammarAccess.getServiceAccess().getGroup_3_15_1()); 
            // InternalDockerCompose.g:3325:3: ( rule__Service__Group_3_15_1__0 )
            // InternalDockerCompose.g:3325:4: rule__Service__Group_3_15_1__0
            {
            pushFollow(FOLLOW_3);
            rule__Service__Group_3_15_1__0();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getGroup_3_15_1()); 

            }

            // InternalDockerCompose.g:3328:2: ( ( rule__Service__Group_3_15_1__0 )* )
            // InternalDockerCompose.g:3329:3: ( rule__Service__Group_3_15_1__0 )*
            {
             before(grammarAccess.getServiceAccess().getGroup_3_15_1()); 
            // InternalDockerCompose.g:3330:3: ( rule__Service__Group_3_15_1__0 )*
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==53) ) {
                    alt34=1;
                }


                switch (alt34) {
            	case 1 :
            	    // InternalDockerCompose.g:3330:4: rule__Service__Group_3_15_1__0
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Service__Group_3_15_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);

             after(grammarAccess.getServiceAccess().getGroup_3_15_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_15__1__Impl"


    // $ANTLR start "rule__Service__Group_3_15_1__0"
    // InternalDockerCompose.g:3340:1: rule__Service__Group_3_15_1__0 : rule__Service__Group_3_15_1__0__Impl rule__Service__Group_3_15_1__1 ;
    public final void rule__Service__Group_3_15_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3344:1: ( rule__Service__Group_3_15_1__0__Impl rule__Service__Group_3_15_1__1 )
            // InternalDockerCompose.g:3345:2: rule__Service__Group_3_15_1__0__Impl rule__Service__Group_3_15_1__1
            {
            pushFollow(FOLLOW_20);
            rule__Service__Group_3_15_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_15_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_15_1__0"


    // $ANTLR start "rule__Service__Group_3_15_1__0__Impl"
    // InternalDockerCompose.g:3352:1: rule__Service__Group_3_15_1__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_15_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3356:1: ( ( '-' ) )
            // InternalDockerCompose.g:3357:1: ( '-' )
            {
            // InternalDockerCompose.g:3357:1: ( '-' )
            // InternalDockerCompose.g:3358:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_15_1_0()); 
            match(input,53,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_15_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_15_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_15_1__1"
    // InternalDockerCompose.g:3367:1: rule__Service__Group_3_15_1__1 : rule__Service__Group_3_15_1__1__Impl ;
    public final void rule__Service__Group_3_15_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3371:1: ( rule__Service__Group_3_15_1__1__Impl )
            // InternalDockerCompose.g:3372:2: rule__Service__Group_3_15_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_15_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_15_1__1"


    // $ANTLR start "rule__Service__Group_3_15_1__1__Impl"
    // InternalDockerCompose.g:3378:1: rule__Service__Group_3_15_1__1__Impl : ( ( rule__Service__PortsAssignment_3_15_1_1 ) ) ;
    public final void rule__Service__Group_3_15_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3382:1: ( ( ( rule__Service__PortsAssignment_3_15_1_1 ) ) )
            // InternalDockerCompose.g:3383:1: ( ( rule__Service__PortsAssignment_3_15_1_1 ) )
            {
            // InternalDockerCompose.g:3383:1: ( ( rule__Service__PortsAssignment_3_15_1_1 ) )
            // InternalDockerCompose.g:3384:2: ( rule__Service__PortsAssignment_3_15_1_1 )
            {
             before(grammarAccess.getServiceAccess().getPortsAssignment_3_15_1_1()); 
            // InternalDockerCompose.g:3385:2: ( rule__Service__PortsAssignment_3_15_1_1 )
            // InternalDockerCompose.g:3385:3: rule__Service__PortsAssignment_3_15_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__PortsAssignment_3_15_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getPortsAssignment_3_15_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_15_1__1__Impl"


    // $ANTLR start "rule__Port__Group__0"
    // InternalDockerCompose.g:3394:1: rule__Port__Group__0 : rule__Port__Group__0__Impl rule__Port__Group__1 ;
    public final void rule__Port__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3398:1: ( rule__Port__Group__0__Impl rule__Port__Group__1 )
            // InternalDockerCompose.g:3399:2: rule__Port__Group__0__Impl rule__Port__Group__1
            {
            pushFollow(FOLLOW_20);
            rule__Port__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Port__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__Group__0"


    // $ANTLR start "rule__Port__Group__0__Impl"
    // InternalDockerCompose.g:3406:1: rule__Port__Group__0__Impl : ( () ) ;
    public final void rule__Port__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3410:1: ( ( () ) )
            // InternalDockerCompose.g:3411:1: ( () )
            {
            // InternalDockerCompose.g:3411:1: ( () )
            // InternalDockerCompose.g:3412:2: ()
            {
             before(grammarAccess.getPortAccess().getPortAction_0()); 
            // InternalDockerCompose.g:3413:2: ()
            // InternalDockerCompose.g:3413:3: 
            {
            }

             after(grammarAccess.getPortAccess().getPortAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__Group__0__Impl"


    // $ANTLR start "rule__Port__Group__1"
    // InternalDockerCompose.g:3421:1: rule__Port__Group__1 : rule__Port__Group__1__Impl ;
    public final void rule__Port__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3425:1: ( rule__Port__Group__1__Impl )
            // InternalDockerCompose.g:3426:2: rule__Port__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Port__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__Group__1"


    // $ANTLR start "rule__Port__Group__1__Impl"
    // InternalDockerCompose.g:3432:1: rule__Port__Group__1__Impl : ( ( rule__Port__ValueAssignment_1 ) ) ;
    public final void rule__Port__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3436:1: ( ( ( rule__Port__ValueAssignment_1 ) ) )
            // InternalDockerCompose.g:3437:1: ( ( rule__Port__ValueAssignment_1 ) )
            {
            // InternalDockerCompose.g:3437:1: ( ( rule__Port__ValueAssignment_1 ) )
            // InternalDockerCompose.g:3438:2: ( rule__Port__ValueAssignment_1 )
            {
             before(grammarAccess.getPortAccess().getValueAssignment_1()); 
            // InternalDockerCompose.g:3439:2: ( rule__Port__ValueAssignment_1 )
            // InternalDockerCompose.g:3439:3: rule__Port__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Port__ValueAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getPortAccess().getValueAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__Group__1__Impl"


    // $ANTLR start "rule__Device__Group__0"
    // InternalDockerCompose.g:3448:1: rule__Device__Group__0 : rule__Device__Group__0__Impl rule__Device__Group__1 ;
    public final void rule__Device__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3452:1: ( rule__Device__Group__0__Impl rule__Device__Group__1 )
            // InternalDockerCompose.g:3453:2: rule__Device__Group__0__Impl rule__Device__Group__1
            {
            pushFollow(FOLLOW_18);
            rule__Device__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Device__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Device__Group__0"


    // $ANTLR start "rule__Device__Group__0__Impl"
    // InternalDockerCompose.g:3460:1: rule__Device__Group__0__Impl : ( () ) ;
    public final void rule__Device__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3464:1: ( ( () ) )
            // InternalDockerCompose.g:3465:1: ( () )
            {
            // InternalDockerCompose.g:3465:1: ( () )
            // InternalDockerCompose.g:3466:2: ()
            {
             before(grammarAccess.getDeviceAccess().getDeviceAction_0()); 
            // InternalDockerCompose.g:3467:2: ()
            // InternalDockerCompose.g:3467:3: 
            {
            }

             after(grammarAccess.getDeviceAccess().getDeviceAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Device__Group__0__Impl"


    // $ANTLR start "rule__Device__Group__1"
    // InternalDockerCompose.g:3475:1: rule__Device__Group__1 : rule__Device__Group__1__Impl ;
    public final void rule__Device__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3479:1: ( rule__Device__Group__1__Impl )
            // InternalDockerCompose.g:3480:2: rule__Device__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Device__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Device__Group__1"


    // $ANTLR start "rule__Device__Group__1__Impl"
    // InternalDockerCompose.g:3486:1: rule__Device__Group__1__Impl : ( ( rule__Device__ValueAssignment_1 ) ) ;
    public final void rule__Device__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3490:1: ( ( ( rule__Device__ValueAssignment_1 ) ) )
            // InternalDockerCompose.g:3491:1: ( ( rule__Device__ValueAssignment_1 ) )
            {
            // InternalDockerCompose.g:3491:1: ( ( rule__Device__ValueAssignment_1 ) )
            // InternalDockerCompose.g:3492:2: ( rule__Device__ValueAssignment_1 )
            {
             before(grammarAccess.getDeviceAccess().getValueAssignment_1()); 
            // InternalDockerCompose.g:3493:2: ( rule__Device__ValueAssignment_1 )
            // InternalDockerCompose.g:3493:3: rule__Device__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Device__ValueAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getDeviceAccess().getValueAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Device__Group__1__Impl"


    // $ANTLR start "rule__Image__Group_1__0"
    // InternalDockerCompose.g:3502:1: rule__Image__Group_1__0 : rule__Image__Group_1__0__Impl rule__Image__Group_1__1 ;
    public final void rule__Image__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3506:1: ( rule__Image__Group_1__0__Impl rule__Image__Group_1__1 )
            // InternalDockerCompose.g:3507:2: rule__Image__Group_1__0__Impl rule__Image__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__Image__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1__0"


    // $ANTLR start "rule__Image__Group_1__0__Impl"
    // InternalDockerCompose.g:3514:1: rule__Image__Group_1__0__Impl : ( RULE_ID ) ;
    public final void rule__Image__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3518:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:3519:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:3519:1: ( RULE_ID )
            // InternalDockerCompose.g:3520:2: RULE_ID
            {
             before(grammarAccess.getImageAccess().getIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getImageAccess().getIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1__0__Impl"


    // $ANTLR start "rule__Image__Group_1__1"
    // InternalDockerCompose.g:3529:1: rule__Image__Group_1__1 : rule__Image__Group_1__1__Impl ;
    public final void rule__Image__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3533:1: ( rule__Image__Group_1__1__Impl )
            // InternalDockerCompose.g:3534:2: rule__Image__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Image__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1__1"


    // $ANTLR start "rule__Image__Group_1__1__Impl"
    // InternalDockerCompose.g:3540:1: rule__Image__Group_1__1__Impl : ( ( ( rule__Image__Group_1_1__0 ) ) ( ( rule__Image__Group_1_1__0 )* ) ) ;
    public final void rule__Image__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3544:1: ( ( ( ( rule__Image__Group_1_1__0 ) ) ( ( rule__Image__Group_1_1__0 )* ) ) )
            // InternalDockerCompose.g:3545:1: ( ( ( rule__Image__Group_1_1__0 ) ) ( ( rule__Image__Group_1_1__0 )* ) )
            {
            // InternalDockerCompose.g:3545:1: ( ( ( rule__Image__Group_1_1__0 ) ) ( ( rule__Image__Group_1_1__0 )* ) )
            // InternalDockerCompose.g:3546:2: ( ( rule__Image__Group_1_1__0 ) ) ( ( rule__Image__Group_1_1__0 )* )
            {
            // InternalDockerCompose.g:3546:2: ( ( rule__Image__Group_1_1__0 ) )
            // InternalDockerCompose.g:3547:3: ( rule__Image__Group_1_1__0 )
            {
             before(grammarAccess.getImageAccess().getGroup_1_1()); 
            // InternalDockerCompose.g:3548:3: ( rule__Image__Group_1_1__0 )
            // InternalDockerCompose.g:3548:4: rule__Image__Group_1_1__0
            {
            pushFollow(FOLLOW_21);
            rule__Image__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getImageAccess().getGroup_1_1()); 

            }

            // InternalDockerCompose.g:3551:2: ( ( rule__Image__Group_1_1__0 )* )
            // InternalDockerCompose.g:3552:3: ( rule__Image__Group_1_1__0 )*
            {
             before(grammarAccess.getImageAccess().getGroup_1_1()); 
            // InternalDockerCompose.g:3553:3: ( rule__Image__Group_1_1__0 )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( (LA35_0==43) ) {
                    alt35=1;
                }


                switch (alt35) {
            	case 1 :
            	    // InternalDockerCompose.g:3553:4: rule__Image__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_21);
            	    rule__Image__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);

             after(grammarAccess.getImageAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1__1__Impl"


    // $ANTLR start "rule__Image__Group_1_1__0"
    // InternalDockerCompose.g:3563:1: rule__Image__Group_1_1__0 : rule__Image__Group_1_1__0__Impl rule__Image__Group_1_1__1 ;
    public final void rule__Image__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3567:1: ( rule__Image__Group_1_1__0__Impl rule__Image__Group_1_1__1 )
            // InternalDockerCompose.g:3568:2: rule__Image__Group_1_1__0__Impl rule__Image__Group_1_1__1
            {
            pushFollow(FOLLOW_22);
            rule__Image__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1_1__0"


    // $ANTLR start "rule__Image__Group_1_1__0__Impl"
    // InternalDockerCompose.g:3575:1: rule__Image__Group_1_1__0__Impl : ( ':' ) ;
    public final void rule__Image__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3579:1: ( ( ':' ) )
            // InternalDockerCompose.g:3580:1: ( ':' )
            {
            // InternalDockerCompose.g:3580:1: ( ':' )
            // InternalDockerCompose.g:3581:2: ':'
            {
             before(grammarAccess.getImageAccess().getColonKeyword_1_1_0()); 
            match(input,43,FOLLOW_2); 
             after(grammarAccess.getImageAccess().getColonKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1_1__0__Impl"


    // $ANTLR start "rule__Image__Group_1_1__1"
    // InternalDockerCompose.g:3590:1: rule__Image__Group_1_1__1 : rule__Image__Group_1_1__1__Impl ;
    public final void rule__Image__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3594:1: ( rule__Image__Group_1_1__1__Impl )
            // InternalDockerCompose.g:3595:2: rule__Image__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Image__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1_1__1"


    // $ANTLR start "rule__Image__Group_1_1__1__Impl"
    // InternalDockerCompose.g:3601:1: rule__Image__Group_1_1__1__Impl : ( RULE_ID ) ;
    public final void rule__Image__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3605:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:3606:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:3606:1: ( RULE_ID )
            // InternalDockerCompose.g:3607:2: RULE_ID
            {
             before(grammarAccess.getImageAccess().getIDTerminalRuleCall_1_1_1()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getImageAccess().getIDTerminalRuleCall_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1_1__1__Impl"


    // $ANTLR start "rule__Link__Group__0"
    // InternalDockerCompose.g:3617:1: rule__Link__Group__0 : rule__Link__Group__0__Impl rule__Link__Group__1 ;
    public final void rule__Link__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3621:1: ( rule__Link__Group__0__Impl rule__Link__Group__1 )
            // InternalDockerCompose.g:3622:2: rule__Link__Group__0__Impl rule__Link__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__Link__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Link__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__Group__0"


    // $ANTLR start "rule__Link__Group__0__Impl"
    // InternalDockerCompose.g:3629:1: rule__Link__Group__0__Impl : ( () ) ;
    public final void rule__Link__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3633:1: ( ( () ) )
            // InternalDockerCompose.g:3634:1: ( () )
            {
            // InternalDockerCompose.g:3634:1: ( () )
            // InternalDockerCompose.g:3635:2: ()
            {
             before(grammarAccess.getLinkAccess().getLinkAction_0()); 
            // InternalDockerCompose.g:3636:2: ()
            // InternalDockerCompose.g:3636:3: 
            {
            }

             after(grammarAccess.getLinkAccess().getLinkAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__Group__0__Impl"


    // $ANTLR start "rule__Link__Group__1"
    // InternalDockerCompose.g:3644:1: rule__Link__Group__1 : rule__Link__Group__1__Impl rule__Link__Group__2 ;
    public final void rule__Link__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3648:1: ( rule__Link__Group__1__Impl rule__Link__Group__2 )
            // InternalDockerCompose.g:3649:2: rule__Link__Group__1__Impl rule__Link__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__Link__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Link__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__Group__1"


    // $ANTLR start "rule__Link__Group__1__Impl"
    // InternalDockerCompose.g:3656:1: rule__Link__Group__1__Impl : ( ( rule__Link__ServiceAssignment_1 ) ) ;
    public final void rule__Link__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3660:1: ( ( ( rule__Link__ServiceAssignment_1 ) ) )
            // InternalDockerCompose.g:3661:1: ( ( rule__Link__ServiceAssignment_1 ) )
            {
            // InternalDockerCompose.g:3661:1: ( ( rule__Link__ServiceAssignment_1 ) )
            // InternalDockerCompose.g:3662:2: ( rule__Link__ServiceAssignment_1 )
            {
             before(grammarAccess.getLinkAccess().getServiceAssignment_1()); 
            // InternalDockerCompose.g:3663:2: ( rule__Link__ServiceAssignment_1 )
            // InternalDockerCompose.g:3663:3: rule__Link__ServiceAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Link__ServiceAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getLinkAccess().getServiceAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__Group__1__Impl"


    // $ANTLR start "rule__Link__Group__2"
    // InternalDockerCompose.g:3671:1: rule__Link__Group__2 : rule__Link__Group__2__Impl ;
    public final void rule__Link__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3675:1: ( rule__Link__Group__2__Impl )
            // InternalDockerCompose.g:3676:2: rule__Link__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Link__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__Group__2"


    // $ANTLR start "rule__Link__Group__2__Impl"
    // InternalDockerCompose.g:3682:1: rule__Link__Group__2__Impl : ( ( rule__Link__Group_2__0 )? ) ;
    public final void rule__Link__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3686:1: ( ( ( rule__Link__Group_2__0 )? ) )
            // InternalDockerCompose.g:3687:1: ( ( rule__Link__Group_2__0 )? )
            {
            // InternalDockerCompose.g:3687:1: ( ( rule__Link__Group_2__0 )? )
            // InternalDockerCompose.g:3688:2: ( rule__Link__Group_2__0 )?
            {
             before(grammarAccess.getLinkAccess().getGroup_2()); 
            // InternalDockerCompose.g:3689:2: ( rule__Link__Group_2__0 )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==43) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalDockerCompose.g:3689:3: rule__Link__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Link__Group_2__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getLinkAccess().getGroup_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__Group__2__Impl"


    // $ANTLR start "rule__Link__Group_2__0"
    // InternalDockerCompose.g:3698:1: rule__Link__Group_2__0 : rule__Link__Group_2__0__Impl rule__Link__Group_2__1 ;
    public final void rule__Link__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3702:1: ( rule__Link__Group_2__0__Impl rule__Link__Group_2__1 )
            // InternalDockerCompose.g:3703:2: rule__Link__Group_2__0__Impl rule__Link__Group_2__1
            {
            pushFollow(FOLLOW_6);
            rule__Link__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Link__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__Group_2__0"


    // $ANTLR start "rule__Link__Group_2__0__Impl"
    // InternalDockerCompose.g:3710:1: rule__Link__Group_2__0__Impl : ( ':' ) ;
    public final void rule__Link__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3714:1: ( ( ':' ) )
            // InternalDockerCompose.g:3715:1: ( ':' )
            {
            // InternalDockerCompose.g:3715:1: ( ':' )
            // InternalDockerCompose.g:3716:2: ':'
            {
             before(grammarAccess.getLinkAccess().getColonKeyword_2_0()); 
            match(input,43,FOLLOW_2); 
             after(grammarAccess.getLinkAccess().getColonKeyword_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__Group_2__0__Impl"


    // $ANTLR start "rule__Link__Group_2__1"
    // InternalDockerCompose.g:3725:1: rule__Link__Group_2__1 : rule__Link__Group_2__1__Impl ;
    public final void rule__Link__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3729:1: ( rule__Link__Group_2__1__Impl )
            // InternalDockerCompose.g:3730:2: rule__Link__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Link__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__Group_2__1"


    // $ANTLR start "rule__Link__Group_2__1__Impl"
    // InternalDockerCompose.g:3736:1: rule__Link__Group_2__1__Impl : ( ( rule__Link__AliasAssignment_2_1 ) ) ;
    public final void rule__Link__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3740:1: ( ( ( rule__Link__AliasAssignment_2_1 ) ) )
            // InternalDockerCompose.g:3741:1: ( ( rule__Link__AliasAssignment_2_1 ) )
            {
            // InternalDockerCompose.g:3741:1: ( ( rule__Link__AliasAssignment_2_1 ) )
            // InternalDockerCompose.g:3742:2: ( rule__Link__AliasAssignment_2_1 )
            {
             before(grammarAccess.getLinkAccess().getAliasAssignment_2_1()); 
            // InternalDockerCompose.g:3743:2: ( rule__Link__AliasAssignment_2_1 )
            // InternalDockerCompose.g:3743:3: rule__Link__AliasAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Link__AliasAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getLinkAccess().getAliasAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__Group_2__1__Impl"


    // $ANTLR start "rule__Dependency_short__Group__0"
    // InternalDockerCompose.g:3752:1: rule__Dependency_short__Group__0 : rule__Dependency_short__Group__0__Impl rule__Dependency_short__Group__1 ;
    public final void rule__Dependency_short__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3756:1: ( rule__Dependency_short__Group__0__Impl rule__Dependency_short__Group__1 )
            // InternalDockerCompose.g:3757:2: rule__Dependency_short__Group__0__Impl rule__Dependency_short__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__Dependency_short__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Dependency_short__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_short__Group__0"


    // $ANTLR start "rule__Dependency_short__Group__0__Impl"
    // InternalDockerCompose.g:3764:1: rule__Dependency_short__Group__0__Impl : ( () ) ;
    public final void rule__Dependency_short__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3768:1: ( ( () ) )
            // InternalDockerCompose.g:3769:1: ( () )
            {
            // InternalDockerCompose.g:3769:1: ( () )
            // InternalDockerCompose.g:3770:2: ()
            {
             before(grammarAccess.getDependency_shortAccess().getDependencyAction_0()); 
            // InternalDockerCompose.g:3771:2: ()
            // InternalDockerCompose.g:3771:3: 
            {
            }

             after(grammarAccess.getDependency_shortAccess().getDependencyAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_short__Group__0__Impl"


    // $ANTLR start "rule__Dependency_short__Group__1"
    // InternalDockerCompose.g:3779:1: rule__Dependency_short__Group__1 : rule__Dependency_short__Group__1__Impl rule__Dependency_short__Group__2 ;
    public final void rule__Dependency_short__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3783:1: ( rule__Dependency_short__Group__1__Impl rule__Dependency_short__Group__2 )
            // InternalDockerCompose.g:3784:2: rule__Dependency_short__Group__1__Impl rule__Dependency_short__Group__2
            {
            pushFollow(FOLLOW_6);
            rule__Dependency_short__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Dependency_short__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_short__Group__1"


    // $ANTLR start "rule__Dependency_short__Group__1__Impl"
    // InternalDockerCompose.g:3791:1: rule__Dependency_short__Group__1__Impl : ( '-' ) ;
    public final void rule__Dependency_short__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3795:1: ( ( '-' ) )
            // InternalDockerCompose.g:3796:1: ( '-' )
            {
            // InternalDockerCompose.g:3796:1: ( '-' )
            // InternalDockerCompose.g:3797:2: '-'
            {
             before(grammarAccess.getDependency_shortAccess().getHyphenMinusKeyword_1()); 
            match(input,53,FOLLOW_2); 
             after(grammarAccess.getDependency_shortAccess().getHyphenMinusKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_short__Group__1__Impl"


    // $ANTLR start "rule__Dependency_short__Group__2"
    // InternalDockerCompose.g:3806:1: rule__Dependency_short__Group__2 : rule__Dependency_short__Group__2__Impl ;
    public final void rule__Dependency_short__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3810:1: ( rule__Dependency_short__Group__2__Impl )
            // InternalDockerCompose.g:3811:2: rule__Dependency_short__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Dependency_short__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_short__Group__2"


    // $ANTLR start "rule__Dependency_short__Group__2__Impl"
    // InternalDockerCompose.g:3817:1: rule__Dependency_short__Group__2__Impl : ( ( rule__Dependency_short__ServiceAssignment_2 ) ) ;
    public final void rule__Dependency_short__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3821:1: ( ( ( rule__Dependency_short__ServiceAssignment_2 ) ) )
            // InternalDockerCompose.g:3822:1: ( ( rule__Dependency_short__ServiceAssignment_2 ) )
            {
            // InternalDockerCompose.g:3822:1: ( ( rule__Dependency_short__ServiceAssignment_2 ) )
            // InternalDockerCompose.g:3823:2: ( rule__Dependency_short__ServiceAssignment_2 )
            {
             before(grammarAccess.getDependency_shortAccess().getServiceAssignment_2()); 
            // InternalDockerCompose.g:3824:2: ( rule__Dependency_short__ServiceAssignment_2 )
            // InternalDockerCompose.g:3824:3: rule__Dependency_short__ServiceAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Dependency_short__ServiceAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getDependency_shortAccess().getServiceAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_short__Group__2__Impl"


    // $ANTLR start "rule__Dependency_long__Group__0"
    // InternalDockerCompose.g:3833:1: rule__Dependency_long__Group__0 : rule__Dependency_long__Group__0__Impl rule__Dependency_long__Group__1 ;
    public final void rule__Dependency_long__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3837:1: ( rule__Dependency_long__Group__0__Impl rule__Dependency_long__Group__1 )
            // InternalDockerCompose.g:3838:2: rule__Dependency_long__Group__0__Impl rule__Dependency_long__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__Dependency_long__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Dependency_long__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_long__Group__0"


    // $ANTLR start "rule__Dependency_long__Group__0__Impl"
    // InternalDockerCompose.g:3845:1: rule__Dependency_long__Group__0__Impl : ( () ) ;
    public final void rule__Dependency_long__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3849:1: ( ( () ) )
            // InternalDockerCompose.g:3850:1: ( () )
            {
            // InternalDockerCompose.g:3850:1: ( () )
            // InternalDockerCompose.g:3851:2: ()
            {
             before(grammarAccess.getDependency_longAccess().getDependencyAction_0()); 
            // InternalDockerCompose.g:3852:2: ()
            // InternalDockerCompose.g:3852:3: 
            {
            }

             after(grammarAccess.getDependency_longAccess().getDependencyAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_long__Group__0__Impl"


    // $ANTLR start "rule__Dependency_long__Group__1"
    // InternalDockerCompose.g:3860:1: rule__Dependency_long__Group__1 : rule__Dependency_long__Group__1__Impl rule__Dependency_long__Group__2 ;
    public final void rule__Dependency_long__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3864:1: ( rule__Dependency_long__Group__1__Impl rule__Dependency_long__Group__2 )
            // InternalDockerCompose.g:3865:2: rule__Dependency_long__Group__1__Impl rule__Dependency_long__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__Dependency_long__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Dependency_long__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_long__Group__1"


    // $ANTLR start "rule__Dependency_long__Group__1__Impl"
    // InternalDockerCompose.g:3872:1: rule__Dependency_long__Group__1__Impl : ( ( rule__Dependency_long__ServiceAssignment_1 ) ) ;
    public final void rule__Dependency_long__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3876:1: ( ( ( rule__Dependency_long__ServiceAssignment_1 ) ) )
            // InternalDockerCompose.g:3877:1: ( ( rule__Dependency_long__ServiceAssignment_1 ) )
            {
            // InternalDockerCompose.g:3877:1: ( ( rule__Dependency_long__ServiceAssignment_1 ) )
            // InternalDockerCompose.g:3878:2: ( rule__Dependency_long__ServiceAssignment_1 )
            {
             before(grammarAccess.getDependency_longAccess().getServiceAssignment_1()); 
            // InternalDockerCompose.g:3879:2: ( rule__Dependency_long__ServiceAssignment_1 )
            // InternalDockerCompose.g:3879:3: rule__Dependency_long__ServiceAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Dependency_long__ServiceAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getDependency_longAccess().getServiceAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_long__Group__1__Impl"


    // $ANTLR start "rule__Dependency_long__Group__2"
    // InternalDockerCompose.g:3887:1: rule__Dependency_long__Group__2 : rule__Dependency_long__Group__2__Impl rule__Dependency_long__Group__3 ;
    public final void rule__Dependency_long__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3891:1: ( rule__Dependency_long__Group__2__Impl rule__Dependency_long__Group__3 )
            // InternalDockerCompose.g:3892:2: rule__Dependency_long__Group__2__Impl rule__Dependency_long__Group__3
            {
            pushFollow(FOLLOW_23);
            rule__Dependency_long__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Dependency_long__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_long__Group__2"


    // $ANTLR start "rule__Dependency_long__Group__2__Impl"
    // InternalDockerCompose.g:3899:1: rule__Dependency_long__Group__2__Impl : ( ':' ) ;
    public final void rule__Dependency_long__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3903:1: ( ( ':' ) )
            // InternalDockerCompose.g:3904:1: ( ':' )
            {
            // InternalDockerCompose.g:3904:1: ( ':' )
            // InternalDockerCompose.g:3905:2: ':'
            {
             before(grammarAccess.getDependency_longAccess().getColonKeyword_2()); 
            match(input,43,FOLLOW_2); 
             after(grammarAccess.getDependency_longAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_long__Group__2__Impl"


    // $ANTLR start "rule__Dependency_long__Group__3"
    // InternalDockerCompose.g:3914:1: rule__Dependency_long__Group__3 : rule__Dependency_long__Group__3__Impl rule__Dependency_long__Group__4 ;
    public final void rule__Dependency_long__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3918:1: ( rule__Dependency_long__Group__3__Impl rule__Dependency_long__Group__4 )
            // InternalDockerCompose.g:3919:2: rule__Dependency_long__Group__3__Impl rule__Dependency_long__Group__4
            {
            pushFollow(FOLLOW_24);
            rule__Dependency_long__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Dependency_long__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_long__Group__3"


    // $ANTLR start "rule__Dependency_long__Group__3__Impl"
    // InternalDockerCompose.g:3926:1: rule__Dependency_long__Group__3__Impl : ( 'condition:' ) ;
    public final void rule__Dependency_long__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3930:1: ( ( 'condition:' ) )
            // InternalDockerCompose.g:3931:1: ( 'condition:' )
            {
            // InternalDockerCompose.g:3931:1: ( 'condition:' )
            // InternalDockerCompose.g:3932:2: 'condition:'
            {
             before(grammarAccess.getDependency_longAccess().getConditionKeyword_3()); 
            match(input,58,FOLLOW_2); 
             after(grammarAccess.getDependency_longAccess().getConditionKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_long__Group__3__Impl"


    // $ANTLR start "rule__Dependency_long__Group__4"
    // InternalDockerCompose.g:3941:1: rule__Dependency_long__Group__4 : rule__Dependency_long__Group__4__Impl ;
    public final void rule__Dependency_long__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3945:1: ( rule__Dependency_long__Group__4__Impl )
            // InternalDockerCompose.g:3946:2: rule__Dependency_long__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Dependency_long__Group__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_long__Group__4"


    // $ANTLR start "rule__Dependency_long__Group__4__Impl"
    // InternalDockerCompose.g:3952:1: rule__Dependency_long__Group__4__Impl : ( ( rule__Dependency_long__ConditionAssignment_4 ) ) ;
    public final void rule__Dependency_long__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3956:1: ( ( ( rule__Dependency_long__ConditionAssignment_4 ) ) )
            // InternalDockerCompose.g:3957:1: ( ( rule__Dependency_long__ConditionAssignment_4 ) )
            {
            // InternalDockerCompose.g:3957:1: ( ( rule__Dependency_long__ConditionAssignment_4 ) )
            // InternalDockerCompose.g:3958:2: ( rule__Dependency_long__ConditionAssignment_4 )
            {
             before(grammarAccess.getDependency_longAccess().getConditionAssignment_4()); 
            // InternalDockerCompose.g:3959:2: ( rule__Dependency_long__ConditionAssignment_4 )
            // InternalDockerCompose.g:3959:3: rule__Dependency_long__ConditionAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__Dependency_long__ConditionAssignment_4();

            state._fsp--;


            }

             after(grammarAccess.getDependency_longAccess().getConditionAssignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_long__Group__4__Impl"


    // $ANTLR start "rule__NetworkConnector__Group__0"
    // InternalDockerCompose.g:3968:1: rule__NetworkConnector__Group__0 : rule__NetworkConnector__Group__0__Impl rule__NetworkConnector__Group__1 ;
    public final void rule__NetworkConnector__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3972:1: ( rule__NetworkConnector__Group__0__Impl rule__NetworkConnector__Group__1 )
            // InternalDockerCompose.g:3973:2: rule__NetworkConnector__Group__0__Impl rule__NetworkConnector__Group__1
            {
            pushFollow(FOLLOW_14);
            rule__NetworkConnector__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group__0"


    // $ANTLR start "rule__NetworkConnector__Group__0__Impl"
    // InternalDockerCompose.g:3980:1: rule__NetworkConnector__Group__0__Impl : ( () ) ;
    public final void rule__NetworkConnector__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3984:1: ( ( () ) )
            // InternalDockerCompose.g:3985:1: ( () )
            {
            // InternalDockerCompose.g:3985:1: ( () )
            // InternalDockerCompose.g:3986:2: ()
            {
             before(grammarAccess.getNetworkConnectorAccess().getNetworkConnectorAction_0()); 
            // InternalDockerCompose.g:3987:2: ()
            // InternalDockerCompose.g:3987:3: 
            {
            }

             after(grammarAccess.getNetworkConnectorAccess().getNetworkConnectorAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group__0__Impl"


    // $ANTLR start "rule__NetworkConnector__Group__1"
    // InternalDockerCompose.g:3995:1: rule__NetworkConnector__Group__1 : rule__NetworkConnector__Group__1__Impl ;
    public final void rule__NetworkConnector__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3999:1: ( rule__NetworkConnector__Group__1__Impl )
            // InternalDockerCompose.g:4000:2: rule__NetworkConnector__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group__1"


    // $ANTLR start "rule__NetworkConnector__Group__1__Impl"
    // InternalDockerCompose.g:4006:1: rule__NetworkConnector__Group__1__Impl : ( ( rule__NetworkConnector__Alternatives_1 ) ) ;
    public final void rule__NetworkConnector__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4010:1: ( ( ( rule__NetworkConnector__Alternatives_1 ) ) )
            // InternalDockerCompose.g:4011:1: ( ( rule__NetworkConnector__Alternatives_1 ) )
            {
            // InternalDockerCompose.g:4011:1: ( ( rule__NetworkConnector__Alternatives_1 ) )
            // InternalDockerCompose.g:4012:2: ( rule__NetworkConnector__Alternatives_1 )
            {
             before(grammarAccess.getNetworkConnectorAccess().getAlternatives_1()); 
            // InternalDockerCompose.g:4013:2: ( rule__NetworkConnector__Alternatives_1 )
            // InternalDockerCompose.g:4013:3: rule__NetworkConnector__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Alternatives_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group__1__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_0__0"
    // InternalDockerCompose.g:4022:1: rule__NetworkConnector__Group_1_0__0 : rule__NetworkConnector__Group_1_0__0__Impl rule__NetworkConnector__Group_1_0__1 ;
    public final void rule__NetworkConnector__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4026:1: ( rule__NetworkConnector__Group_1_0__0__Impl rule__NetworkConnector__Group_1_0__1 )
            // InternalDockerCompose.g:4027:2: rule__NetworkConnector__Group_1_0__0__Impl rule__NetworkConnector__Group_1_0__1
            {
            pushFollow(FOLLOW_6);
            rule__NetworkConnector__Group_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_0__0"


    // $ANTLR start "rule__NetworkConnector__Group_1_0__0__Impl"
    // InternalDockerCompose.g:4034:1: rule__NetworkConnector__Group_1_0__0__Impl : ( '-' ) ;
    public final void rule__NetworkConnector__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4038:1: ( ( '-' ) )
            // InternalDockerCompose.g:4039:1: ( '-' )
            {
            // InternalDockerCompose.g:4039:1: ( '-' )
            // InternalDockerCompose.g:4040:2: '-'
            {
             before(grammarAccess.getNetworkConnectorAccess().getHyphenMinusKeyword_1_0_0()); 
            match(input,53,FOLLOW_2); 
             after(grammarAccess.getNetworkConnectorAccess().getHyphenMinusKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_0__0__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_0__1"
    // InternalDockerCompose.g:4049:1: rule__NetworkConnector__Group_1_0__1 : rule__NetworkConnector__Group_1_0__1__Impl ;
    public final void rule__NetworkConnector__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4053:1: ( rule__NetworkConnector__Group_1_0__1__Impl )
            // InternalDockerCompose.g:4054:2: rule__NetworkConnector__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_0__1"


    // $ANTLR start "rule__NetworkConnector__Group_1_0__1__Impl"
    // InternalDockerCompose.g:4060:1: rule__NetworkConnector__Group_1_0__1__Impl : ( ( rule__NetworkConnector__NetworkAssignment_1_0_1 ) ) ;
    public final void rule__NetworkConnector__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4064:1: ( ( ( rule__NetworkConnector__NetworkAssignment_1_0_1 ) ) )
            // InternalDockerCompose.g:4065:1: ( ( rule__NetworkConnector__NetworkAssignment_1_0_1 ) )
            {
            // InternalDockerCompose.g:4065:1: ( ( rule__NetworkConnector__NetworkAssignment_1_0_1 ) )
            // InternalDockerCompose.g:4066:2: ( rule__NetworkConnector__NetworkAssignment_1_0_1 )
            {
             before(grammarAccess.getNetworkConnectorAccess().getNetworkAssignment_1_0_1()); 
            // InternalDockerCompose.g:4067:2: ( rule__NetworkConnector__NetworkAssignment_1_0_1 )
            // InternalDockerCompose.g:4067:3: rule__NetworkConnector__NetworkAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__NetworkAssignment_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getNetworkAssignment_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_0__1__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_1__0"
    // InternalDockerCompose.g:4076:1: rule__NetworkConnector__Group_1_1__0 : rule__NetworkConnector__Group_1_1__0__Impl rule__NetworkConnector__Group_1_1__1 ;
    public final void rule__NetworkConnector__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4080:1: ( rule__NetworkConnector__Group_1_1__0__Impl rule__NetworkConnector__Group_1_1__1 )
            // InternalDockerCompose.g:4081:2: rule__NetworkConnector__Group_1_1__0__Impl rule__NetworkConnector__Group_1_1__1
            {
            pushFollow(FOLLOW_7);
            rule__NetworkConnector__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1__0"


    // $ANTLR start "rule__NetworkConnector__Group_1_1__0__Impl"
    // InternalDockerCompose.g:4088:1: rule__NetworkConnector__Group_1_1__0__Impl : ( ( rule__NetworkConnector__NetworkAssignment_1_1_0 ) ) ;
    public final void rule__NetworkConnector__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4092:1: ( ( ( rule__NetworkConnector__NetworkAssignment_1_1_0 ) ) )
            // InternalDockerCompose.g:4093:1: ( ( rule__NetworkConnector__NetworkAssignment_1_1_0 ) )
            {
            // InternalDockerCompose.g:4093:1: ( ( rule__NetworkConnector__NetworkAssignment_1_1_0 ) )
            // InternalDockerCompose.g:4094:2: ( rule__NetworkConnector__NetworkAssignment_1_1_0 )
            {
             before(grammarAccess.getNetworkConnectorAccess().getNetworkAssignment_1_1_0()); 
            // InternalDockerCompose.g:4095:2: ( rule__NetworkConnector__NetworkAssignment_1_1_0 )
            // InternalDockerCompose.g:4095:3: rule__NetworkConnector__NetworkAssignment_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__NetworkAssignment_1_1_0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getNetworkAssignment_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1__0__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_1__1"
    // InternalDockerCompose.g:4103:1: rule__NetworkConnector__Group_1_1__1 : rule__NetworkConnector__Group_1_1__1__Impl rule__NetworkConnector__Group_1_1__2 ;
    public final void rule__NetworkConnector__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4107:1: ( rule__NetworkConnector__Group_1_1__1__Impl rule__NetworkConnector__Group_1_1__2 )
            // InternalDockerCompose.g:4108:2: rule__NetworkConnector__Group_1_1__1__Impl rule__NetworkConnector__Group_1_1__2
            {
            pushFollow(FOLLOW_25);
            rule__NetworkConnector__Group_1_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1__1"


    // $ANTLR start "rule__NetworkConnector__Group_1_1__1__Impl"
    // InternalDockerCompose.g:4115:1: rule__NetworkConnector__Group_1_1__1__Impl : ( ':' ) ;
    public final void rule__NetworkConnector__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4119:1: ( ( ':' ) )
            // InternalDockerCompose.g:4120:1: ( ':' )
            {
            // InternalDockerCompose.g:4120:1: ( ':' )
            // InternalDockerCompose.g:4121:2: ':'
            {
             before(grammarAccess.getNetworkConnectorAccess().getColonKeyword_1_1_1()); 
            match(input,43,FOLLOW_2); 
             after(grammarAccess.getNetworkConnectorAccess().getColonKeyword_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1__1__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_1__2"
    // InternalDockerCompose.g:4130:1: rule__NetworkConnector__Group_1_1__2 : rule__NetworkConnector__Group_1_1__2__Impl ;
    public final void rule__NetworkConnector__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4134:1: ( rule__NetworkConnector__Group_1_1__2__Impl )
            // InternalDockerCompose.g:4135:2: rule__NetworkConnector__Group_1_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1__2"


    // $ANTLR start "rule__NetworkConnector__Group_1_1__2__Impl"
    // InternalDockerCompose.g:4141:1: rule__NetworkConnector__Group_1_1__2__Impl : ( ( rule__NetworkConnector__UnorderedGroup_1_1_2 ) ) ;
    public final void rule__NetworkConnector__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4145:1: ( ( ( rule__NetworkConnector__UnorderedGroup_1_1_2 ) ) )
            // InternalDockerCompose.g:4146:1: ( ( rule__NetworkConnector__UnorderedGroup_1_1_2 ) )
            {
            // InternalDockerCompose.g:4146:1: ( ( rule__NetworkConnector__UnorderedGroup_1_1_2 ) )
            // InternalDockerCompose.g:4147:2: ( rule__NetworkConnector__UnorderedGroup_1_1_2 )
            {
             before(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2()); 
            // InternalDockerCompose.g:4148:2: ( rule__NetworkConnector__UnorderedGroup_1_1_2 )
            // InternalDockerCompose.g:4148:3: rule__NetworkConnector__UnorderedGroup_1_1_2
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__UnorderedGroup_1_1_2();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1__2__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_0__0"
    // InternalDockerCompose.g:4157:1: rule__NetworkConnector__Group_1_1_2_0__0 : rule__NetworkConnector__Group_1_1_2_0__0__Impl rule__NetworkConnector__Group_1_1_2_0__1 ;
    public final void rule__NetworkConnector__Group_1_1_2_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4161:1: ( rule__NetworkConnector__Group_1_1_2_0__0__Impl rule__NetworkConnector__Group_1_1_2_0__1 )
            // InternalDockerCompose.g:4162:2: rule__NetworkConnector__Group_1_1_2_0__0__Impl rule__NetworkConnector__Group_1_1_2_0__1
            {
            pushFollow(FOLLOW_19);
            rule__NetworkConnector__Group_1_1_2_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_1_2_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_0__0"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_0__0__Impl"
    // InternalDockerCompose.g:4169:1: rule__NetworkConnector__Group_1_1_2_0__0__Impl : ( 'ipv4_address:' ) ;
    public final void rule__NetworkConnector__Group_1_1_2_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4173:1: ( ( 'ipv4_address:' ) )
            // InternalDockerCompose.g:4174:1: ( 'ipv4_address:' )
            {
            // InternalDockerCompose.g:4174:1: ( 'ipv4_address:' )
            // InternalDockerCompose.g:4175:2: 'ipv4_address:'
            {
             before(grammarAccess.getNetworkConnectorAccess().getIpv4_addressKeyword_1_1_2_0_0()); 
            match(input,59,FOLLOW_2); 
             after(grammarAccess.getNetworkConnectorAccess().getIpv4_addressKeyword_1_1_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_0__0__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_0__1"
    // InternalDockerCompose.g:4184:1: rule__NetworkConnector__Group_1_1_2_0__1 : rule__NetworkConnector__Group_1_1_2_0__1__Impl ;
    public final void rule__NetworkConnector__Group_1_1_2_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4188:1: ( rule__NetworkConnector__Group_1_1_2_0__1__Impl )
            // InternalDockerCompose.g:4189:2: rule__NetworkConnector__Group_1_1_2_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_1_2_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_0__1"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_0__1__Impl"
    // InternalDockerCompose.g:4195:1: rule__NetworkConnector__Group_1_1_2_0__1__Impl : ( ( rule__NetworkConnector__Ipv4_addressAssignment_1_1_2_0_1 ) ) ;
    public final void rule__NetworkConnector__Group_1_1_2_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4199:1: ( ( ( rule__NetworkConnector__Ipv4_addressAssignment_1_1_2_0_1 ) ) )
            // InternalDockerCompose.g:4200:1: ( ( rule__NetworkConnector__Ipv4_addressAssignment_1_1_2_0_1 ) )
            {
            // InternalDockerCompose.g:4200:1: ( ( rule__NetworkConnector__Ipv4_addressAssignment_1_1_2_0_1 ) )
            // InternalDockerCompose.g:4201:2: ( rule__NetworkConnector__Ipv4_addressAssignment_1_1_2_0_1 )
            {
             before(grammarAccess.getNetworkConnectorAccess().getIpv4_addressAssignment_1_1_2_0_1()); 
            // InternalDockerCompose.g:4202:2: ( rule__NetworkConnector__Ipv4_addressAssignment_1_1_2_0_1 )
            // InternalDockerCompose.g:4202:3: rule__NetworkConnector__Ipv4_addressAssignment_1_1_2_0_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Ipv4_addressAssignment_1_1_2_0_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getIpv4_addressAssignment_1_1_2_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_0__1__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_1__0"
    // InternalDockerCompose.g:4211:1: rule__NetworkConnector__Group_1_1_2_1__0 : rule__NetworkConnector__Group_1_1_2_1__0__Impl rule__NetworkConnector__Group_1_1_2_1__1 ;
    public final void rule__NetworkConnector__Group_1_1_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4215:1: ( rule__NetworkConnector__Group_1_1_2_1__0__Impl rule__NetworkConnector__Group_1_1_2_1__1 )
            // InternalDockerCompose.g:4216:2: rule__NetworkConnector__Group_1_1_2_1__0__Impl rule__NetworkConnector__Group_1_1_2_1__1
            {
            pushFollow(FOLLOW_10);
            rule__NetworkConnector__Group_1_1_2_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_1_2_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_1__0"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_1__0__Impl"
    // InternalDockerCompose.g:4223:1: rule__NetworkConnector__Group_1_1_2_1__0__Impl : ( 'priority:' ) ;
    public final void rule__NetworkConnector__Group_1_1_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4227:1: ( ( 'priority:' ) )
            // InternalDockerCompose.g:4228:1: ( 'priority:' )
            {
            // InternalDockerCompose.g:4228:1: ( 'priority:' )
            // InternalDockerCompose.g:4229:2: 'priority:'
            {
             before(grammarAccess.getNetworkConnectorAccess().getPriorityKeyword_1_1_2_1_0()); 
            match(input,60,FOLLOW_2); 
             after(grammarAccess.getNetworkConnectorAccess().getPriorityKeyword_1_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_1__0__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_1__1"
    // InternalDockerCompose.g:4238:1: rule__NetworkConnector__Group_1_1_2_1__1 : rule__NetworkConnector__Group_1_1_2_1__1__Impl ;
    public final void rule__NetworkConnector__Group_1_1_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4242:1: ( rule__NetworkConnector__Group_1_1_2_1__1__Impl )
            // InternalDockerCompose.g:4243:2: rule__NetworkConnector__Group_1_1_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_1_2_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_1__1"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_1__1__Impl"
    // InternalDockerCompose.g:4249:1: rule__NetworkConnector__Group_1_1_2_1__1__Impl : ( ( rule__NetworkConnector__PriorityAssignment_1_1_2_1_1 ) ) ;
    public final void rule__NetworkConnector__Group_1_1_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4253:1: ( ( ( rule__NetworkConnector__PriorityAssignment_1_1_2_1_1 ) ) )
            // InternalDockerCompose.g:4254:1: ( ( rule__NetworkConnector__PriorityAssignment_1_1_2_1_1 ) )
            {
            // InternalDockerCompose.g:4254:1: ( ( rule__NetworkConnector__PriorityAssignment_1_1_2_1_1 ) )
            // InternalDockerCompose.g:4255:2: ( rule__NetworkConnector__PriorityAssignment_1_1_2_1_1 )
            {
             before(grammarAccess.getNetworkConnectorAccess().getPriorityAssignment_1_1_2_1_1()); 
            // InternalDockerCompose.g:4256:2: ( rule__NetworkConnector__PriorityAssignment_1_1_2_1_1 )
            // InternalDockerCompose.g:4256:3: rule__NetworkConnector__PriorityAssignment_1_1_2_1_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__PriorityAssignment_1_1_2_1_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getPriorityAssignment_1_1_2_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_1__1__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_2__0"
    // InternalDockerCompose.g:4265:1: rule__NetworkConnector__Group_1_1_2_2__0 : rule__NetworkConnector__Group_1_1_2_2__0__Impl rule__NetworkConnector__Group_1_1_2_2__1 ;
    public final void rule__NetworkConnector__Group_1_1_2_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4269:1: ( rule__NetworkConnector__Group_1_1_2_2__0__Impl rule__NetworkConnector__Group_1_1_2_2__1 )
            // InternalDockerCompose.g:4270:2: rule__NetworkConnector__Group_1_1_2_2__0__Impl rule__NetworkConnector__Group_1_1_2_2__1
            {
            pushFollow(FOLLOW_13);
            rule__NetworkConnector__Group_1_1_2_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_1_2_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_2__0"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_2__0__Impl"
    // InternalDockerCompose.g:4277:1: rule__NetworkConnector__Group_1_1_2_2__0__Impl : ( 'aliases:' ) ;
    public final void rule__NetworkConnector__Group_1_1_2_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4281:1: ( ( 'aliases:' ) )
            // InternalDockerCompose.g:4282:1: ( 'aliases:' )
            {
            // InternalDockerCompose.g:4282:1: ( 'aliases:' )
            // InternalDockerCompose.g:4283:2: 'aliases:'
            {
             before(grammarAccess.getNetworkConnectorAccess().getAliasesKeyword_1_1_2_2_0()); 
            match(input,61,FOLLOW_2); 
             after(grammarAccess.getNetworkConnectorAccess().getAliasesKeyword_1_1_2_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_2__0__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_2__1"
    // InternalDockerCompose.g:4292:1: rule__NetworkConnector__Group_1_1_2_2__1 : rule__NetworkConnector__Group_1_1_2_2__1__Impl ;
    public final void rule__NetworkConnector__Group_1_1_2_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4296:1: ( rule__NetworkConnector__Group_1_1_2_2__1__Impl )
            // InternalDockerCompose.g:4297:2: rule__NetworkConnector__Group_1_1_2_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_1_2_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_2__1"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_2__1__Impl"
    // InternalDockerCompose.g:4303:1: rule__NetworkConnector__Group_1_1_2_2__1__Impl : ( ( ( rule__NetworkConnector__Group_1_1_2_2_1__0 ) ) ( ( rule__NetworkConnector__Group_1_1_2_2_1__0 )* ) ) ;
    public final void rule__NetworkConnector__Group_1_1_2_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4307:1: ( ( ( ( rule__NetworkConnector__Group_1_1_2_2_1__0 ) ) ( ( rule__NetworkConnector__Group_1_1_2_2_1__0 )* ) ) )
            // InternalDockerCompose.g:4308:1: ( ( ( rule__NetworkConnector__Group_1_1_2_2_1__0 ) ) ( ( rule__NetworkConnector__Group_1_1_2_2_1__0 )* ) )
            {
            // InternalDockerCompose.g:4308:1: ( ( ( rule__NetworkConnector__Group_1_1_2_2_1__0 ) ) ( ( rule__NetworkConnector__Group_1_1_2_2_1__0 )* ) )
            // InternalDockerCompose.g:4309:2: ( ( rule__NetworkConnector__Group_1_1_2_2_1__0 ) ) ( ( rule__NetworkConnector__Group_1_1_2_2_1__0 )* )
            {
            // InternalDockerCompose.g:4309:2: ( ( rule__NetworkConnector__Group_1_1_2_2_1__0 ) )
            // InternalDockerCompose.g:4310:3: ( rule__NetworkConnector__Group_1_1_2_2_1__0 )
            {
             before(grammarAccess.getNetworkConnectorAccess().getGroup_1_1_2_2_1()); 
            // InternalDockerCompose.g:4311:3: ( rule__NetworkConnector__Group_1_1_2_2_1__0 )
            // InternalDockerCompose.g:4311:4: rule__NetworkConnector__Group_1_1_2_2_1__0
            {
            pushFollow(FOLLOW_3);
            rule__NetworkConnector__Group_1_1_2_2_1__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getGroup_1_1_2_2_1()); 

            }

            // InternalDockerCompose.g:4314:2: ( ( rule__NetworkConnector__Group_1_1_2_2_1__0 )* )
            // InternalDockerCompose.g:4315:3: ( rule__NetworkConnector__Group_1_1_2_2_1__0 )*
            {
             before(grammarAccess.getNetworkConnectorAccess().getGroup_1_1_2_2_1()); 
            // InternalDockerCompose.g:4316:3: ( rule__NetworkConnector__Group_1_1_2_2_1__0 )*
            loop37:
            do {
                int alt37=2;
                int LA37_0 = input.LA(1);

                if ( (LA37_0==53) ) {
                    int LA37_2 = input.LA(2);

                    if ( (LA37_2==RULE_STRING) ) {
                        alt37=1;
                    }
                    else if ( (LA37_2==RULE_ID) ) {
                        alt37=1;
                    }


                }


                switch (alt37) {
            	case 1 :
            	    // InternalDockerCompose.g:4316:4: rule__NetworkConnector__Group_1_1_2_2_1__0
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__NetworkConnector__Group_1_1_2_2_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop37;
                }
            } while (true);

             after(grammarAccess.getNetworkConnectorAccess().getGroup_1_1_2_2_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_2__1__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_2_1__0"
    // InternalDockerCompose.g:4326:1: rule__NetworkConnector__Group_1_1_2_2_1__0 : rule__NetworkConnector__Group_1_1_2_2_1__0__Impl rule__NetworkConnector__Group_1_1_2_2_1__1 ;
    public final void rule__NetworkConnector__Group_1_1_2_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4330:1: ( rule__NetworkConnector__Group_1_1_2_2_1__0__Impl rule__NetworkConnector__Group_1_1_2_2_1__1 )
            // InternalDockerCompose.g:4331:2: rule__NetworkConnector__Group_1_1_2_2_1__0__Impl rule__NetworkConnector__Group_1_1_2_2_1__1
            {
            pushFollow(FOLLOW_6);
            rule__NetworkConnector__Group_1_1_2_2_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_1_2_2_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_2_1__0"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_2_1__0__Impl"
    // InternalDockerCompose.g:4338:1: rule__NetworkConnector__Group_1_1_2_2_1__0__Impl : ( '-' ) ;
    public final void rule__NetworkConnector__Group_1_1_2_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4342:1: ( ( '-' ) )
            // InternalDockerCompose.g:4343:1: ( '-' )
            {
            // InternalDockerCompose.g:4343:1: ( '-' )
            // InternalDockerCompose.g:4344:2: '-'
            {
             before(grammarAccess.getNetworkConnectorAccess().getHyphenMinusKeyword_1_1_2_2_1_0()); 
            match(input,53,FOLLOW_2); 
             after(grammarAccess.getNetworkConnectorAccess().getHyphenMinusKeyword_1_1_2_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_2_1__0__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_2_1__1"
    // InternalDockerCompose.g:4353:1: rule__NetworkConnector__Group_1_1_2_2_1__1 : rule__NetworkConnector__Group_1_1_2_2_1__1__Impl ;
    public final void rule__NetworkConnector__Group_1_1_2_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4357:1: ( rule__NetworkConnector__Group_1_1_2_2_1__1__Impl )
            // InternalDockerCompose.g:4358:2: rule__NetworkConnector__Group_1_1_2_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_1_2_2_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_2_1__1"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_2_1__1__Impl"
    // InternalDockerCompose.g:4364:1: rule__NetworkConnector__Group_1_1_2_2_1__1__Impl : ( ( rule__NetworkConnector__AliasesAssignment_1_1_2_2_1_1 ) ) ;
    public final void rule__NetworkConnector__Group_1_1_2_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4368:1: ( ( ( rule__NetworkConnector__AliasesAssignment_1_1_2_2_1_1 ) ) )
            // InternalDockerCompose.g:4369:1: ( ( rule__NetworkConnector__AliasesAssignment_1_1_2_2_1_1 ) )
            {
            // InternalDockerCompose.g:4369:1: ( ( rule__NetworkConnector__AliasesAssignment_1_1_2_2_1_1 ) )
            // InternalDockerCompose.g:4370:2: ( rule__NetworkConnector__AliasesAssignment_1_1_2_2_1_1 )
            {
             before(grammarAccess.getNetworkConnectorAccess().getAliasesAssignment_1_1_2_2_1_1()); 
            // InternalDockerCompose.g:4371:2: ( rule__NetworkConnector__AliasesAssignment_1_1_2_2_1_1 )
            // InternalDockerCompose.g:4371:3: rule__NetworkConnector__AliasesAssignment_1_1_2_2_1_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__AliasesAssignment_1_1_2_2_1_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getAliasesAssignment_1_1_2_2_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_2_1__1__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_3__0"
    // InternalDockerCompose.g:4380:1: rule__NetworkConnector__Group_1_1_2_3__0 : rule__NetworkConnector__Group_1_1_2_3__0__Impl rule__NetworkConnector__Group_1_1_2_3__1 ;
    public final void rule__NetworkConnector__Group_1_1_2_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4384:1: ( rule__NetworkConnector__Group_1_1_2_3__0__Impl rule__NetworkConnector__Group_1_1_2_3__1 )
            // InternalDockerCompose.g:4385:2: rule__NetworkConnector__Group_1_1_2_3__0__Impl rule__NetworkConnector__Group_1_1_2_3__1
            {
            pushFollow(FOLLOW_13);
            rule__NetworkConnector__Group_1_1_2_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_1_2_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_3__0"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_3__0__Impl"
    // InternalDockerCompose.g:4392:1: rule__NetworkConnector__Group_1_1_2_3__0__Impl : ( 'link_local_ips:' ) ;
    public final void rule__NetworkConnector__Group_1_1_2_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4396:1: ( ( 'link_local_ips:' ) )
            // InternalDockerCompose.g:4397:1: ( 'link_local_ips:' )
            {
            // InternalDockerCompose.g:4397:1: ( 'link_local_ips:' )
            // InternalDockerCompose.g:4398:2: 'link_local_ips:'
            {
             before(grammarAccess.getNetworkConnectorAccess().getLink_local_ipsKeyword_1_1_2_3_0()); 
            match(input,62,FOLLOW_2); 
             after(grammarAccess.getNetworkConnectorAccess().getLink_local_ipsKeyword_1_1_2_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_3__0__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_3__1"
    // InternalDockerCompose.g:4407:1: rule__NetworkConnector__Group_1_1_2_3__1 : rule__NetworkConnector__Group_1_1_2_3__1__Impl ;
    public final void rule__NetworkConnector__Group_1_1_2_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4411:1: ( rule__NetworkConnector__Group_1_1_2_3__1__Impl )
            // InternalDockerCompose.g:4412:2: rule__NetworkConnector__Group_1_1_2_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_1_2_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_3__1"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_3__1__Impl"
    // InternalDockerCompose.g:4418:1: rule__NetworkConnector__Group_1_1_2_3__1__Impl : ( ( ( rule__NetworkConnector__Group_1_1_2_3_1__0 ) ) ( ( rule__NetworkConnector__Group_1_1_2_3_1__0 )* ) ) ;
    public final void rule__NetworkConnector__Group_1_1_2_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4422:1: ( ( ( ( rule__NetworkConnector__Group_1_1_2_3_1__0 ) ) ( ( rule__NetworkConnector__Group_1_1_2_3_1__0 )* ) ) )
            // InternalDockerCompose.g:4423:1: ( ( ( rule__NetworkConnector__Group_1_1_2_3_1__0 ) ) ( ( rule__NetworkConnector__Group_1_1_2_3_1__0 )* ) )
            {
            // InternalDockerCompose.g:4423:1: ( ( ( rule__NetworkConnector__Group_1_1_2_3_1__0 ) ) ( ( rule__NetworkConnector__Group_1_1_2_3_1__0 )* ) )
            // InternalDockerCompose.g:4424:2: ( ( rule__NetworkConnector__Group_1_1_2_3_1__0 ) ) ( ( rule__NetworkConnector__Group_1_1_2_3_1__0 )* )
            {
            // InternalDockerCompose.g:4424:2: ( ( rule__NetworkConnector__Group_1_1_2_3_1__0 ) )
            // InternalDockerCompose.g:4425:3: ( rule__NetworkConnector__Group_1_1_2_3_1__0 )
            {
             before(grammarAccess.getNetworkConnectorAccess().getGroup_1_1_2_3_1()); 
            // InternalDockerCompose.g:4426:3: ( rule__NetworkConnector__Group_1_1_2_3_1__0 )
            // InternalDockerCompose.g:4426:4: rule__NetworkConnector__Group_1_1_2_3_1__0
            {
            pushFollow(FOLLOW_3);
            rule__NetworkConnector__Group_1_1_2_3_1__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getGroup_1_1_2_3_1()); 

            }

            // InternalDockerCompose.g:4429:2: ( ( rule__NetworkConnector__Group_1_1_2_3_1__0 )* )
            // InternalDockerCompose.g:4430:3: ( rule__NetworkConnector__Group_1_1_2_3_1__0 )*
            {
             before(grammarAccess.getNetworkConnectorAccess().getGroup_1_1_2_3_1()); 
            // InternalDockerCompose.g:4431:3: ( rule__NetworkConnector__Group_1_1_2_3_1__0 )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==53) ) {
                    int LA38_2 = input.LA(2);

                    if ( (LA38_2==RULE_INT) ) {
                        alt38=1;
                    }


                }


                switch (alt38) {
            	case 1 :
            	    // InternalDockerCompose.g:4431:4: rule__NetworkConnector__Group_1_1_2_3_1__0
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__NetworkConnector__Group_1_1_2_3_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);

             after(grammarAccess.getNetworkConnectorAccess().getGroup_1_1_2_3_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_3__1__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_3_1__0"
    // InternalDockerCompose.g:4441:1: rule__NetworkConnector__Group_1_1_2_3_1__0 : rule__NetworkConnector__Group_1_1_2_3_1__0__Impl rule__NetworkConnector__Group_1_1_2_3_1__1 ;
    public final void rule__NetworkConnector__Group_1_1_2_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4445:1: ( rule__NetworkConnector__Group_1_1_2_3_1__0__Impl rule__NetworkConnector__Group_1_1_2_3_1__1 )
            // InternalDockerCompose.g:4446:2: rule__NetworkConnector__Group_1_1_2_3_1__0__Impl rule__NetworkConnector__Group_1_1_2_3_1__1
            {
            pushFollow(FOLLOW_19);
            rule__NetworkConnector__Group_1_1_2_3_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_1_2_3_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_3_1__0"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_3_1__0__Impl"
    // InternalDockerCompose.g:4453:1: rule__NetworkConnector__Group_1_1_2_3_1__0__Impl : ( '-' ) ;
    public final void rule__NetworkConnector__Group_1_1_2_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4457:1: ( ( '-' ) )
            // InternalDockerCompose.g:4458:1: ( '-' )
            {
            // InternalDockerCompose.g:4458:1: ( '-' )
            // InternalDockerCompose.g:4459:2: '-'
            {
             before(grammarAccess.getNetworkConnectorAccess().getHyphenMinusKeyword_1_1_2_3_1_0()); 
            match(input,53,FOLLOW_2); 
             after(grammarAccess.getNetworkConnectorAccess().getHyphenMinusKeyword_1_1_2_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_3_1__0__Impl"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_3_1__1"
    // InternalDockerCompose.g:4468:1: rule__NetworkConnector__Group_1_1_2_3_1__1 : rule__NetworkConnector__Group_1_1_2_3_1__1__Impl ;
    public final void rule__NetworkConnector__Group_1_1_2_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4472:1: ( rule__NetworkConnector__Group_1_1_2_3_1__1__Impl )
            // InternalDockerCompose.g:4473:2: rule__NetworkConnector__Group_1_1_2_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Group_1_1_2_3_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_3_1__1"


    // $ANTLR start "rule__NetworkConnector__Group_1_1_2_3_1__1__Impl"
    // InternalDockerCompose.g:4479:1: rule__NetworkConnector__Group_1_1_2_3_1__1__Impl : ( ( rule__NetworkConnector__Link_local_ipsAssignment_1_1_2_3_1_1 ) ) ;
    public final void rule__NetworkConnector__Group_1_1_2_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4483:1: ( ( ( rule__NetworkConnector__Link_local_ipsAssignment_1_1_2_3_1_1 ) ) )
            // InternalDockerCompose.g:4484:1: ( ( rule__NetworkConnector__Link_local_ipsAssignment_1_1_2_3_1_1 ) )
            {
            // InternalDockerCompose.g:4484:1: ( ( rule__NetworkConnector__Link_local_ipsAssignment_1_1_2_3_1_1 ) )
            // InternalDockerCompose.g:4485:2: ( rule__NetworkConnector__Link_local_ipsAssignment_1_1_2_3_1_1 )
            {
             before(grammarAccess.getNetworkConnectorAccess().getLink_local_ipsAssignment_1_1_2_3_1_1()); 
            // InternalDockerCompose.g:4486:2: ( rule__NetworkConnector__Link_local_ipsAssignment_1_1_2_3_1_1 )
            // InternalDockerCompose.g:4486:3: rule__NetworkConnector__Link_local_ipsAssignment_1_1_2_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__Link_local_ipsAssignment_1_1_2_3_1_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnectorAccess().getLink_local_ipsAssignment_1_1_2_3_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Group_1_1_2_3_1__1__Impl"


    // $ANTLR start "rule__Alias__Group__0"
    // InternalDockerCompose.g:4495:1: rule__Alias__Group__0 : rule__Alias__Group__0__Impl rule__Alias__Group__1 ;
    public final void rule__Alias__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4499:1: ( rule__Alias__Group__0__Impl rule__Alias__Group__1 )
            // InternalDockerCompose.g:4500:2: rule__Alias__Group__0__Impl rule__Alias__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__Alias__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Alias__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Alias__Group__0"


    // $ANTLR start "rule__Alias__Group__0__Impl"
    // InternalDockerCompose.g:4507:1: rule__Alias__Group__0__Impl : ( () ) ;
    public final void rule__Alias__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4511:1: ( ( () ) )
            // InternalDockerCompose.g:4512:1: ( () )
            {
            // InternalDockerCompose.g:4512:1: ( () )
            // InternalDockerCompose.g:4513:2: ()
            {
             before(grammarAccess.getAliasAccess().getAliasAction_0()); 
            // InternalDockerCompose.g:4514:2: ()
            // InternalDockerCompose.g:4514:3: 
            {
            }

             after(grammarAccess.getAliasAccess().getAliasAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Alias__Group__0__Impl"


    // $ANTLR start "rule__Alias__Group__1"
    // InternalDockerCompose.g:4522:1: rule__Alias__Group__1 : rule__Alias__Group__1__Impl ;
    public final void rule__Alias__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4526:1: ( rule__Alias__Group__1__Impl )
            // InternalDockerCompose.g:4527:2: rule__Alias__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Alias__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Alias__Group__1"


    // $ANTLR start "rule__Alias__Group__1__Impl"
    // InternalDockerCompose.g:4533:1: rule__Alias__Group__1__Impl : ( ( rule__Alias__AliasAssignment_1 ) ) ;
    public final void rule__Alias__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4537:1: ( ( ( rule__Alias__AliasAssignment_1 ) ) )
            // InternalDockerCompose.g:4538:1: ( ( rule__Alias__AliasAssignment_1 ) )
            {
            // InternalDockerCompose.g:4538:1: ( ( rule__Alias__AliasAssignment_1 ) )
            // InternalDockerCompose.g:4539:2: ( rule__Alias__AliasAssignment_1 )
            {
             before(grammarAccess.getAliasAccess().getAliasAssignment_1()); 
            // InternalDockerCompose.g:4540:2: ( rule__Alias__AliasAssignment_1 )
            // InternalDockerCompose.g:4540:3: rule__Alias__AliasAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Alias__AliasAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getAliasAccess().getAliasAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Alias__Group__1__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group__0"
    // InternalDockerCompose.g:4549:1: rule__VolumeConnector_long__Group__0 : rule__VolumeConnector_long__Group__0__Impl rule__VolumeConnector_long__Group__1 ;
    public final void rule__VolumeConnector_long__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4553:1: ( rule__VolumeConnector_long__Group__0__Impl rule__VolumeConnector_long__Group__1 )
            // InternalDockerCompose.g:4554:2: rule__VolumeConnector_long__Group__0__Impl rule__VolumeConnector_long__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__VolumeConnector_long__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group__0"


    // $ANTLR start "rule__VolumeConnector_long__Group__0__Impl"
    // InternalDockerCompose.g:4561:1: rule__VolumeConnector_long__Group__0__Impl : ( () ) ;
    public final void rule__VolumeConnector_long__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4565:1: ( ( () ) )
            // InternalDockerCompose.g:4566:1: ( () )
            {
            // InternalDockerCompose.g:4566:1: ( () )
            // InternalDockerCompose.g:4567:2: ()
            {
             before(grammarAccess.getVolumeConnector_longAccess().getVolumeConnectorAction_0()); 
            // InternalDockerCompose.g:4568:2: ()
            // InternalDockerCompose.g:4568:3: 
            {
            }

             after(grammarAccess.getVolumeConnector_longAccess().getVolumeConnectorAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group__0__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group__1"
    // InternalDockerCompose.g:4576:1: rule__VolumeConnector_long__Group__1 : rule__VolumeConnector_long__Group__1__Impl ;
    public final void rule__VolumeConnector_long__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4580:1: ( rule__VolumeConnector_long__Group__1__Impl )
            // InternalDockerCompose.g:4581:2: rule__VolumeConnector_long__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group__1"


    // $ANTLR start "rule__VolumeConnector_long__Group__1__Impl"
    // InternalDockerCompose.g:4587:1: rule__VolumeConnector_long__Group__1__Impl : ( ( rule__VolumeConnector_long__UnorderedGroup_1 ) ) ;
    public final void rule__VolumeConnector_long__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4591:1: ( ( ( rule__VolumeConnector_long__UnorderedGroup_1 ) ) )
            // InternalDockerCompose.g:4592:1: ( ( rule__VolumeConnector_long__UnorderedGroup_1 ) )
            {
            // InternalDockerCompose.g:4592:1: ( ( rule__VolumeConnector_long__UnorderedGroup_1 ) )
            // InternalDockerCompose.g:4593:2: ( rule__VolumeConnector_long__UnorderedGroup_1 )
            {
             before(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()); 
            // InternalDockerCompose.g:4594:2: ( rule__VolumeConnector_long__UnorderedGroup_1 )
            // InternalDockerCompose.g:4594:3: rule__VolumeConnector_long__UnorderedGroup_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__UnorderedGroup_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group__1__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_0__0"
    // InternalDockerCompose.g:4603:1: rule__VolumeConnector_long__Group_1_0__0 : rule__VolumeConnector_long__Group_1_0__0__Impl rule__VolumeConnector_long__Group_1_0__1 ;
    public final void rule__VolumeConnector_long__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4607:1: ( rule__VolumeConnector_long__Group_1_0__0__Impl rule__VolumeConnector_long__Group_1_0__1 )
            // InternalDockerCompose.g:4608:2: rule__VolumeConnector_long__Group_1_0__0__Impl rule__VolumeConnector_long__Group_1_0__1
            {
            pushFollow(FOLLOW_6);
            rule__VolumeConnector_long__Group_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_0__0"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_0__0__Impl"
    // InternalDockerCompose.g:4615:1: rule__VolumeConnector_long__Group_1_0__0__Impl : ( 'source:' ) ;
    public final void rule__VolumeConnector_long__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4619:1: ( ( 'source:' ) )
            // InternalDockerCompose.g:4620:1: ( 'source:' )
            {
            // InternalDockerCompose.g:4620:1: ( 'source:' )
            // InternalDockerCompose.g:4621:2: 'source:'
            {
             before(grammarAccess.getVolumeConnector_longAccess().getSourceKeyword_1_0_0()); 
            match(input,63,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_longAccess().getSourceKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_0__0__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_0__1"
    // InternalDockerCompose.g:4630:1: rule__VolumeConnector_long__Group_1_0__1 : rule__VolumeConnector_long__Group_1_0__1__Impl ;
    public final void rule__VolumeConnector_long__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4634:1: ( rule__VolumeConnector_long__Group_1_0__1__Impl )
            // InternalDockerCompose.g:4635:2: rule__VolumeConnector_long__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_0__1"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_0__1__Impl"
    // InternalDockerCompose.g:4641:1: rule__VolumeConnector_long__Group_1_0__1__Impl : ( ( rule__VolumeConnector_long__VolumeAssignment_1_0_1 ) ) ;
    public final void rule__VolumeConnector_long__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4645:1: ( ( ( rule__VolumeConnector_long__VolumeAssignment_1_0_1 ) ) )
            // InternalDockerCompose.g:4646:1: ( ( rule__VolumeConnector_long__VolumeAssignment_1_0_1 ) )
            {
            // InternalDockerCompose.g:4646:1: ( ( rule__VolumeConnector_long__VolumeAssignment_1_0_1 ) )
            // InternalDockerCompose.g:4647:2: ( rule__VolumeConnector_long__VolumeAssignment_1_0_1 )
            {
             before(grammarAccess.getVolumeConnector_longAccess().getVolumeAssignment_1_0_1()); 
            // InternalDockerCompose.g:4648:2: ( rule__VolumeConnector_long__VolumeAssignment_1_0_1 )
            // InternalDockerCompose.g:4648:3: rule__VolumeConnector_long__VolumeAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__VolumeAssignment_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_longAccess().getVolumeAssignment_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_0__1__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_1__0"
    // InternalDockerCompose.g:4657:1: rule__VolumeConnector_long__Group_1_1__0 : rule__VolumeConnector_long__Group_1_1__0__Impl rule__VolumeConnector_long__Group_1_1__1 ;
    public final void rule__VolumeConnector_long__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4661:1: ( rule__VolumeConnector_long__Group_1_1__0__Impl rule__VolumeConnector_long__Group_1_1__1 )
            // InternalDockerCompose.g:4662:2: rule__VolumeConnector_long__Group_1_1__0__Impl rule__VolumeConnector_long__Group_1_1__1
            {
            pushFollow(FOLLOW_26);
            rule__VolumeConnector_long__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_1__0"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_1__0__Impl"
    // InternalDockerCompose.g:4669:1: rule__VolumeConnector_long__Group_1_1__0__Impl : ( 'type:' ) ;
    public final void rule__VolumeConnector_long__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4673:1: ( ( 'type:' ) )
            // InternalDockerCompose.g:4674:1: ( 'type:' )
            {
            // InternalDockerCompose.g:4674:1: ( 'type:' )
            // InternalDockerCompose.g:4675:2: 'type:'
            {
             before(grammarAccess.getVolumeConnector_longAccess().getTypeKeyword_1_1_0()); 
            match(input,64,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_longAccess().getTypeKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_1__0__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_1__1"
    // InternalDockerCompose.g:4684:1: rule__VolumeConnector_long__Group_1_1__1 : rule__VolumeConnector_long__Group_1_1__1__Impl ;
    public final void rule__VolumeConnector_long__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4688:1: ( rule__VolumeConnector_long__Group_1_1__1__Impl )
            // InternalDockerCompose.g:4689:2: rule__VolumeConnector_long__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_1__1"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_1__1__Impl"
    // InternalDockerCompose.g:4695:1: rule__VolumeConnector_long__Group_1_1__1__Impl : ( ( rule__VolumeConnector_long__TypeAssignment_1_1_1 ) ) ;
    public final void rule__VolumeConnector_long__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4699:1: ( ( ( rule__VolumeConnector_long__TypeAssignment_1_1_1 ) ) )
            // InternalDockerCompose.g:4700:1: ( ( rule__VolumeConnector_long__TypeAssignment_1_1_1 ) )
            {
            // InternalDockerCompose.g:4700:1: ( ( rule__VolumeConnector_long__TypeAssignment_1_1_1 ) )
            // InternalDockerCompose.g:4701:2: ( rule__VolumeConnector_long__TypeAssignment_1_1_1 )
            {
             before(grammarAccess.getVolumeConnector_longAccess().getTypeAssignment_1_1_1()); 
            // InternalDockerCompose.g:4702:2: ( rule__VolumeConnector_long__TypeAssignment_1_1_1 )
            // InternalDockerCompose.g:4702:3: rule__VolumeConnector_long__TypeAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__TypeAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_longAccess().getTypeAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_1__1__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_2__0"
    // InternalDockerCompose.g:4711:1: rule__VolumeConnector_long__Group_1_2__0 : rule__VolumeConnector_long__Group_1_2__0__Impl rule__VolumeConnector_long__Group_1_2__1 ;
    public final void rule__VolumeConnector_long__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4715:1: ( rule__VolumeConnector_long__Group_1_2__0__Impl rule__VolumeConnector_long__Group_1_2__1 )
            // InternalDockerCompose.g:4716:2: rule__VolumeConnector_long__Group_1_2__0__Impl rule__VolumeConnector_long__Group_1_2__1
            {
            pushFollow(FOLLOW_9);
            rule__VolumeConnector_long__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_2__0"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_2__0__Impl"
    // InternalDockerCompose.g:4723:1: rule__VolumeConnector_long__Group_1_2__0__Impl : ( 'target:' ) ;
    public final void rule__VolumeConnector_long__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4727:1: ( ( 'target:' ) )
            // InternalDockerCompose.g:4728:1: ( 'target:' )
            {
            // InternalDockerCompose.g:4728:1: ( 'target:' )
            // InternalDockerCompose.g:4729:2: 'target:'
            {
             before(grammarAccess.getVolumeConnector_longAccess().getTargetKeyword_1_2_0()); 
            match(input,65,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_longAccess().getTargetKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_2__0__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_2__1"
    // InternalDockerCompose.g:4738:1: rule__VolumeConnector_long__Group_1_2__1 : rule__VolumeConnector_long__Group_1_2__1__Impl ;
    public final void rule__VolumeConnector_long__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4742:1: ( rule__VolumeConnector_long__Group_1_2__1__Impl )
            // InternalDockerCompose.g:4743:2: rule__VolumeConnector_long__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_2__1"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_2__1__Impl"
    // InternalDockerCompose.g:4749:1: rule__VolumeConnector_long__Group_1_2__1__Impl : ( ( rule__VolumeConnector_long__Container_pathAssignment_1_2_1 ) ) ;
    public final void rule__VolumeConnector_long__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4753:1: ( ( ( rule__VolumeConnector_long__Container_pathAssignment_1_2_1 ) ) )
            // InternalDockerCompose.g:4754:1: ( ( rule__VolumeConnector_long__Container_pathAssignment_1_2_1 ) )
            {
            // InternalDockerCompose.g:4754:1: ( ( rule__VolumeConnector_long__Container_pathAssignment_1_2_1 ) )
            // InternalDockerCompose.g:4755:2: ( rule__VolumeConnector_long__Container_pathAssignment_1_2_1 )
            {
             before(grammarAccess.getVolumeConnector_longAccess().getContainer_pathAssignment_1_2_1()); 
            // InternalDockerCompose.g:4756:2: ( rule__VolumeConnector_long__Container_pathAssignment_1_2_1 )
            // InternalDockerCompose.g:4756:3: rule__VolumeConnector_long__Container_pathAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Container_pathAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_longAccess().getContainer_pathAssignment_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_2__1__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_3__0"
    // InternalDockerCompose.g:4765:1: rule__VolumeConnector_long__Group_1_3__0 : rule__VolumeConnector_long__Group_1_3__0__Impl rule__VolumeConnector_long__Group_1_3__1 ;
    public final void rule__VolumeConnector_long__Group_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4769:1: ( rule__VolumeConnector_long__Group_1_3__0__Impl rule__VolumeConnector_long__Group_1_3__1 )
            // InternalDockerCompose.g:4770:2: rule__VolumeConnector_long__Group_1_3__0__Impl rule__VolumeConnector_long__Group_1_3__1
            {
            pushFollow(FOLLOW_12);
            rule__VolumeConnector_long__Group_1_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_3__0"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_3__0__Impl"
    // InternalDockerCompose.g:4777:1: rule__VolumeConnector_long__Group_1_3__0__Impl : ( 'read_only:' ) ;
    public final void rule__VolumeConnector_long__Group_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4781:1: ( ( 'read_only:' ) )
            // InternalDockerCompose.g:4782:1: ( 'read_only:' )
            {
            // InternalDockerCompose.g:4782:1: ( 'read_only:' )
            // InternalDockerCompose.g:4783:2: 'read_only:'
            {
             before(grammarAccess.getVolumeConnector_longAccess().getRead_onlyKeyword_1_3_0()); 
            match(input,51,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_longAccess().getRead_onlyKeyword_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_3__0__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_3__1"
    // InternalDockerCompose.g:4792:1: rule__VolumeConnector_long__Group_1_3__1 : rule__VolumeConnector_long__Group_1_3__1__Impl ;
    public final void rule__VolumeConnector_long__Group_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4796:1: ( rule__VolumeConnector_long__Group_1_3__1__Impl )
            // InternalDockerCompose.g:4797:2: rule__VolumeConnector_long__Group_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_3__1"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_3__1__Impl"
    // InternalDockerCompose.g:4803:1: rule__VolumeConnector_long__Group_1_3__1__Impl : ( ( rule__VolumeConnector_long__Read_onlyAssignment_1_3_1 ) ) ;
    public final void rule__VolumeConnector_long__Group_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4807:1: ( ( ( rule__VolumeConnector_long__Read_onlyAssignment_1_3_1 ) ) )
            // InternalDockerCompose.g:4808:1: ( ( rule__VolumeConnector_long__Read_onlyAssignment_1_3_1 ) )
            {
            // InternalDockerCompose.g:4808:1: ( ( rule__VolumeConnector_long__Read_onlyAssignment_1_3_1 ) )
            // InternalDockerCompose.g:4809:2: ( rule__VolumeConnector_long__Read_onlyAssignment_1_3_1 )
            {
             before(grammarAccess.getVolumeConnector_longAccess().getRead_onlyAssignment_1_3_1()); 
            // InternalDockerCompose.g:4810:2: ( rule__VolumeConnector_long__Read_onlyAssignment_1_3_1 )
            // InternalDockerCompose.g:4810:3: rule__VolumeConnector_long__Read_onlyAssignment_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Read_onlyAssignment_1_3_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_longAccess().getRead_onlyAssignment_1_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_3__1__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_4__0"
    // InternalDockerCompose.g:4819:1: rule__VolumeConnector_long__Group_1_4__0 : rule__VolumeConnector_long__Group_1_4__0__Impl rule__VolumeConnector_long__Group_1_4__1 ;
    public final void rule__VolumeConnector_long__Group_1_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4823:1: ( rule__VolumeConnector_long__Group_1_4__0__Impl rule__VolumeConnector_long__Group_1_4__1 )
            // InternalDockerCompose.g:4824:2: rule__VolumeConnector_long__Group_1_4__0__Impl rule__VolumeConnector_long__Group_1_4__1
            {
            pushFollow(FOLLOW_27);
            rule__VolumeConnector_long__Group_1_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_4__0"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_4__0__Impl"
    // InternalDockerCompose.g:4831:1: rule__VolumeConnector_long__Group_1_4__0__Impl : ( 'bind:' ) ;
    public final void rule__VolumeConnector_long__Group_1_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4835:1: ( ( 'bind:' ) )
            // InternalDockerCompose.g:4836:1: ( 'bind:' )
            {
            // InternalDockerCompose.g:4836:1: ( 'bind:' )
            // InternalDockerCompose.g:4837:2: 'bind:'
            {
             before(grammarAccess.getVolumeConnector_longAccess().getBindKeyword_1_4_0()); 
            match(input,66,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_longAccess().getBindKeyword_1_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_4__0__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_4__1"
    // InternalDockerCompose.g:4846:1: rule__VolumeConnector_long__Group_1_4__1 : rule__VolumeConnector_long__Group_1_4__1__Impl rule__VolumeConnector_long__Group_1_4__2 ;
    public final void rule__VolumeConnector_long__Group_1_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4850:1: ( rule__VolumeConnector_long__Group_1_4__1__Impl rule__VolumeConnector_long__Group_1_4__2 )
            // InternalDockerCompose.g:4851:2: rule__VolumeConnector_long__Group_1_4__1__Impl rule__VolumeConnector_long__Group_1_4__2
            {
            pushFollow(FOLLOW_28);
            rule__VolumeConnector_long__Group_1_4__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_4__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_4__1"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_4__1__Impl"
    // InternalDockerCompose.g:4858:1: rule__VolumeConnector_long__Group_1_4__1__Impl : ( 'propagation:' ) ;
    public final void rule__VolumeConnector_long__Group_1_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4862:1: ( ( 'propagation:' ) )
            // InternalDockerCompose.g:4863:1: ( 'propagation:' )
            {
            // InternalDockerCompose.g:4863:1: ( 'propagation:' )
            // InternalDockerCompose.g:4864:2: 'propagation:'
            {
             before(grammarAccess.getVolumeConnector_longAccess().getPropagationKeyword_1_4_1()); 
            match(input,67,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_longAccess().getPropagationKeyword_1_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_4__1__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_4__2"
    // InternalDockerCompose.g:4873:1: rule__VolumeConnector_long__Group_1_4__2 : rule__VolumeConnector_long__Group_1_4__2__Impl ;
    public final void rule__VolumeConnector_long__Group_1_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4877:1: ( rule__VolumeConnector_long__Group_1_4__2__Impl )
            // InternalDockerCompose.g:4878:2: rule__VolumeConnector_long__Group_1_4__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_4__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_4__2"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_4__2__Impl"
    // InternalDockerCompose.g:4884:1: rule__VolumeConnector_long__Group_1_4__2__Impl : ( ( rule__VolumeConnector_long__PropagationAssignment_1_4_2 ) ) ;
    public final void rule__VolumeConnector_long__Group_1_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4888:1: ( ( ( rule__VolumeConnector_long__PropagationAssignment_1_4_2 ) ) )
            // InternalDockerCompose.g:4889:1: ( ( rule__VolumeConnector_long__PropagationAssignment_1_4_2 ) )
            {
            // InternalDockerCompose.g:4889:1: ( ( rule__VolumeConnector_long__PropagationAssignment_1_4_2 ) )
            // InternalDockerCompose.g:4890:2: ( rule__VolumeConnector_long__PropagationAssignment_1_4_2 )
            {
             before(grammarAccess.getVolumeConnector_longAccess().getPropagationAssignment_1_4_2()); 
            // InternalDockerCompose.g:4891:2: ( rule__VolumeConnector_long__PropagationAssignment_1_4_2 )
            // InternalDockerCompose.g:4891:3: rule__VolumeConnector_long__PropagationAssignment_1_4_2
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__PropagationAssignment_1_4_2();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_longAccess().getPropagationAssignment_1_4_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_4__2__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_5__0"
    // InternalDockerCompose.g:4900:1: rule__VolumeConnector_long__Group_1_5__0 : rule__VolumeConnector_long__Group_1_5__0__Impl rule__VolumeConnector_long__Group_1_5__1 ;
    public final void rule__VolumeConnector_long__Group_1_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4904:1: ( rule__VolumeConnector_long__Group_1_5__0__Impl rule__VolumeConnector_long__Group_1_5__1 )
            // InternalDockerCompose.g:4905:2: rule__VolumeConnector_long__Group_1_5__0__Impl rule__VolumeConnector_long__Group_1_5__1
            {
            pushFollow(FOLLOW_29);
            rule__VolumeConnector_long__Group_1_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_5__0"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_5__0__Impl"
    // InternalDockerCompose.g:4912:1: rule__VolumeConnector_long__Group_1_5__0__Impl : ( 'volume:' ) ;
    public final void rule__VolumeConnector_long__Group_1_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4916:1: ( ( 'volume:' ) )
            // InternalDockerCompose.g:4917:1: ( 'volume:' )
            {
            // InternalDockerCompose.g:4917:1: ( 'volume:' )
            // InternalDockerCompose.g:4918:2: 'volume:'
            {
             before(grammarAccess.getVolumeConnector_longAccess().getVolumeKeyword_1_5_0()); 
            match(input,68,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_longAccess().getVolumeKeyword_1_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_5__0__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_5__1"
    // InternalDockerCompose.g:4927:1: rule__VolumeConnector_long__Group_1_5__1 : rule__VolumeConnector_long__Group_1_5__1__Impl rule__VolumeConnector_long__Group_1_5__2 ;
    public final void rule__VolumeConnector_long__Group_1_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4931:1: ( rule__VolumeConnector_long__Group_1_5__1__Impl rule__VolumeConnector_long__Group_1_5__2 )
            // InternalDockerCompose.g:4932:2: rule__VolumeConnector_long__Group_1_5__1__Impl rule__VolumeConnector_long__Group_1_5__2
            {
            pushFollow(FOLLOW_12);
            rule__VolumeConnector_long__Group_1_5__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_5__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_5__1"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_5__1__Impl"
    // InternalDockerCompose.g:4939:1: rule__VolumeConnector_long__Group_1_5__1__Impl : ( 'nocopy:' ) ;
    public final void rule__VolumeConnector_long__Group_1_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4943:1: ( ( 'nocopy:' ) )
            // InternalDockerCompose.g:4944:1: ( 'nocopy:' )
            {
            // InternalDockerCompose.g:4944:1: ( 'nocopy:' )
            // InternalDockerCompose.g:4945:2: 'nocopy:'
            {
             before(grammarAccess.getVolumeConnector_longAccess().getNocopyKeyword_1_5_1()); 
            match(input,69,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_longAccess().getNocopyKeyword_1_5_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_5__1__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_5__2"
    // InternalDockerCompose.g:4954:1: rule__VolumeConnector_long__Group_1_5__2 : rule__VolumeConnector_long__Group_1_5__2__Impl ;
    public final void rule__VolumeConnector_long__Group_1_5__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4958:1: ( rule__VolumeConnector_long__Group_1_5__2__Impl )
            // InternalDockerCompose.g:4959:2: rule__VolumeConnector_long__Group_1_5__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_5__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_5__2"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_5__2__Impl"
    // InternalDockerCompose.g:4965:1: rule__VolumeConnector_long__Group_1_5__2__Impl : ( ( rule__VolumeConnector_long__NocopyAssignment_1_5_2 ) ) ;
    public final void rule__VolumeConnector_long__Group_1_5__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4969:1: ( ( ( rule__VolumeConnector_long__NocopyAssignment_1_5_2 ) ) )
            // InternalDockerCompose.g:4970:1: ( ( rule__VolumeConnector_long__NocopyAssignment_1_5_2 ) )
            {
            // InternalDockerCompose.g:4970:1: ( ( rule__VolumeConnector_long__NocopyAssignment_1_5_2 ) )
            // InternalDockerCompose.g:4971:2: ( rule__VolumeConnector_long__NocopyAssignment_1_5_2 )
            {
             before(grammarAccess.getVolumeConnector_longAccess().getNocopyAssignment_1_5_2()); 
            // InternalDockerCompose.g:4972:2: ( rule__VolumeConnector_long__NocopyAssignment_1_5_2 )
            // InternalDockerCompose.g:4972:3: rule__VolumeConnector_long__NocopyAssignment_1_5_2
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__NocopyAssignment_1_5_2();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_longAccess().getNocopyAssignment_1_5_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_5__2__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_6__0"
    // InternalDockerCompose.g:4981:1: rule__VolumeConnector_long__Group_1_6__0 : rule__VolumeConnector_long__Group_1_6__0__Impl rule__VolumeConnector_long__Group_1_6__1 ;
    public final void rule__VolumeConnector_long__Group_1_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4985:1: ( rule__VolumeConnector_long__Group_1_6__0__Impl rule__VolumeConnector_long__Group_1_6__1 )
            // InternalDockerCompose.g:4986:2: rule__VolumeConnector_long__Group_1_6__0__Impl rule__VolumeConnector_long__Group_1_6__1
            {
            pushFollow(FOLLOW_30);
            rule__VolumeConnector_long__Group_1_6__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_6__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_6__0"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_6__0__Impl"
    // InternalDockerCompose.g:4993:1: rule__VolumeConnector_long__Group_1_6__0__Impl : ( 'tmpfs:' ) ;
    public final void rule__VolumeConnector_long__Group_1_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4997:1: ( ( 'tmpfs:' ) )
            // InternalDockerCompose.g:4998:1: ( 'tmpfs:' )
            {
            // InternalDockerCompose.g:4998:1: ( 'tmpfs:' )
            // InternalDockerCompose.g:4999:2: 'tmpfs:'
            {
             before(grammarAccess.getVolumeConnector_longAccess().getTmpfsKeyword_1_6_0()); 
            match(input,70,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_longAccess().getTmpfsKeyword_1_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_6__0__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_6__1"
    // InternalDockerCompose.g:5008:1: rule__VolumeConnector_long__Group_1_6__1 : rule__VolumeConnector_long__Group_1_6__1__Impl rule__VolumeConnector_long__Group_1_6__2 ;
    public final void rule__VolumeConnector_long__Group_1_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5012:1: ( rule__VolumeConnector_long__Group_1_6__1__Impl rule__VolumeConnector_long__Group_1_6__2 )
            // InternalDockerCompose.g:5013:2: rule__VolumeConnector_long__Group_1_6__1__Impl rule__VolumeConnector_long__Group_1_6__2
            {
            pushFollow(FOLLOW_10);
            rule__VolumeConnector_long__Group_1_6__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_6__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_6__1"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_6__1__Impl"
    // InternalDockerCompose.g:5020:1: rule__VolumeConnector_long__Group_1_6__1__Impl : ( 'size:' ) ;
    public final void rule__VolumeConnector_long__Group_1_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5024:1: ( ( 'size:' ) )
            // InternalDockerCompose.g:5025:1: ( 'size:' )
            {
            // InternalDockerCompose.g:5025:1: ( 'size:' )
            // InternalDockerCompose.g:5026:2: 'size:'
            {
             before(grammarAccess.getVolumeConnector_longAccess().getSizeKeyword_1_6_1()); 
            match(input,71,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_longAccess().getSizeKeyword_1_6_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_6__1__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_6__2"
    // InternalDockerCompose.g:5035:1: rule__VolumeConnector_long__Group_1_6__2 : rule__VolumeConnector_long__Group_1_6__2__Impl ;
    public final void rule__VolumeConnector_long__Group_1_6__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5039:1: ( rule__VolumeConnector_long__Group_1_6__2__Impl )
            // InternalDockerCompose.g:5040:2: rule__VolumeConnector_long__Group_1_6__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_6__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_6__2"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_6__2__Impl"
    // InternalDockerCompose.g:5046:1: rule__VolumeConnector_long__Group_1_6__2__Impl : ( ( rule__VolumeConnector_long__SizeAssignment_1_6_2 ) ) ;
    public final void rule__VolumeConnector_long__Group_1_6__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5050:1: ( ( ( rule__VolumeConnector_long__SizeAssignment_1_6_2 ) ) )
            // InternalDockerCompose.g:5051:1: ( ( rule__VolumeConnector_long__SizeAssignment_1_6_2 ) )
            {
            // InternalDockerCompose.g:5051:1: ( ( rule__VolumeConnector_long__SizeAssignment_1_6_2 ) )
            // InternalDockerCompose.g:5052:2: ( rule__VolumeConnector_long__SizeAssignment_1_6_2 )
            {
             before(grammarAccess.getVolumeConnector_longAccess().getSizeAssignment_1_6_2()); 
            // InternalDockerCompose.g:5053:2: ( rule__VolumeConnector_long__SizeAssignment_1_6_2 )
            // InternalDockerCompose.g:5053:3: rule__VolumeConnector_long__SizeAssignment_1_6_2
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__SizeAssignment_1_6_2();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_longAccess().getSizeAssignment_1_6_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_6__2__Impl"


    // $ANTLR start "rule__VolumeConnector_short__Group__0"
    // InternalDockerCompose.g:5062:1: rule__VolumeConnector_short__Group__0 : rule__VolumeConnector_short__Group__0__Impl rule__VolumeConnector_short__Group__1 ;
    public final void rule__VolumeConnector_short__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5066:1: ( rule__VolumeConnector_short__Group__0__Impl rule__VolumeConnector_short__Group__1 )
            // InternalDockerCompose.g:5067:2: rule__VolumeConnector_short__Group__0__Impl rule__VolumeConnector_short__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__VolumeConnector_short__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group__0"


    // $ANTLR start "rule__VolumeConnector_short__Group__0__Impl"
    // InternalDockerCompose.g:5074:1: rule__VolumeConnector_short__Group__0__Impl : ( () ) ;
    public final void rule__VolumeConnector_short__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5078:1: ( ( () ) )
            // InternalDockerCompose.g:5079:1: ( () )
            {
            // InternalDockerCompose.g:5079:1: ( () )
            // InternalDockerCompose.g:5080:2: ()
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getVolumeConnectorAction_0()); 
            // InternalDockerCompose.g:5081:2: ()
            // InternalDockerCompose.g:5081:3: 
            {
            }

             after(grammarAccess.getVolumeConnector_shortAccess().getVolumeConnectorAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group__0__Impl"


    // $ANTLR start "rule__VolumeConnector_short__Group__1"
    // InternalDockerCompose.g:5089:1: rule__VolumeConnector_short__Group__1 : rule__VolumeConnector_short__Group__1__Impl rule__VolumeConnector_short__Group__2 ;
    public final void rule__VolumeConnector_short__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5093:1: ( rule__VolumeConnector_short__Group__1__Impl rule__VolumeConnector_short__Group__2 )
            // InternalDockerCompose.g:5094:2: rule__VolumeConnector_short__Group__1__Impl rule__VolumeConnector_short__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__VolumeConnector_short__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group__1"


    // $ANTLR start "rule__VolumeConnector_short__Group__1__Impl"
    // InternalDockerCompose.g:5101:1: rule__VolumeConnector_short__Group__1__Impl : ( ( rule__VolumeConnector_short__VolumeAssignment_1 ) ) ;
    public final void rule__VolumeConnector_short__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5105:1: ( ( ( rule__VolumeConnector_short__VolumeAssignment_1 ) ) )
            // InternalDockerCompose.g:5106:1: ( ( rule__VolumeConnector_short__VolumeAssignment_1 ) )
            {
            // InternalDockerCompose.g:5106:1: ( ( rule__VolumeConnector_short__VolumeAssignment_1 ) )
            // InternalDockerCompose.g:5107:2: ( rule__VolumeConnector_short__VolumeAssignment_1 )
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getVolumeAssignment_1()); 
            // InternalDockerCompose.g:5108:2: ( rule__VolumeConnector_short__VolumeAssignment_1 )
            // InternalDockerCompose.g:5108:3: rule__VolumeConnector_short__VolumeAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__VolumeAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_shortAccess().getVolumeAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group__1__Impl"


    // $ANTLR start "rule__VolumeConnector_short__Group__2"
    // InternalDockerCompose.g:5116:1: rule__VolumeConnector_short__Group__2 : rule__VolumeConnector_short__Group__2__Impl rule__VolumeConnector_short__Group__3 ;
    public final void rule__VolumeConnector_short__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5120:1: ( rule__VolumeConnector_short__Group__2__Impl rule__VolumeConnector_short__Group__3 )
            // InternalDockerCompose.g:5121:2: rule__VolumeConnector_short__Group__2__Impl rule__VolumeConnector_short__Group__3
            {
            pushFollow(FOLLOW_9);
            rule__VolumeConnector_short__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group__2"


    // $ANTLR start "rule__VolumeConnector_short__Group__2__Impl"
    // InternalDockerCompose.g:5128:1: rule__VolumeConnector_short__Group__2__Impl : ( ':' ) ;
    public final void rule__VolumeConnector_short__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5132:1: ( ( ':' ) )
            // InternalDockerCompose.g:5133:1: ( ':' )
            {
            // InternalDockerCompose.g:5133:1: ( ':' )
            // InternalDockerCompose.g:5134:2: ':'
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getColonKeyword_2()); 
            match(input,43,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_shortAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group__2__Impl"


    // $ANTLR start "rule__VolumeConnector_short__Group__3"
    // InternalDockerCompose.g:5143:1: rule__VolumeConnector_short__Group__3 : rule__VolumeConnector_short__Group__3__Impl rule__VolumeConnector_short__Group__4 ;
    public final void rule__VolumeConnector_short__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5147:1: ( rule__VolumeConnector_short__Group__3__Impl rule__VolumeConnector_short__Group__4 )
            // InternalDockerCompose.g:5148:2: rule__VolumeConnector_short__Group__3__Impl rule__VolumeConnector_short__Group__4
            {
            pushFollow(FOLLOW_7);
            rule__VolumeConnector_short__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group__3"


    // $ANTLR start "rule__VolumeConnector_short__Group__3__Impl"
    // InternalDockerCompose.g:5155:1: rule__VolumeConnector_short__Group__3__Impl : ( ( rule__VolumeConnector_short__Container_pathAssignment_3 ) ) ;
    public final void rule__VolumeConnector_short__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5159:1: ( ( ( rule__VolumeConnector_short__Container_pathAssignment_3 ) ) )
            // InternalDockerCompose.g:5160:1: ( ( rule__VolumeConnector_short__Container_pathAssignment_3 ) )
            {
            // InternalDockerCompose.g:5160:1: ( ( rule__VolumeConnector_short__Container_pathAssignment_3 ) )
            // InternalDockerCompose.g:5161:2: ( rule__VolumeConnector_short__Container_pathAssignment_3 )
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getContainer_pathAssignment_3()); 
            // InternalDockerCompose.g:5162:2: ( rule__VolumeConnector_short__Container_pathAssignment_3 )
            // InternalDockerCompose.g:5162:3: rule__VolumeConnector_short__Container_pathAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__Container_pathAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_shortAccess().getContainer_pathAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group__3__Impl"


    // $ANTLR start "rule__VolumeConnector_short__Group__4"
    // InternalDockerCompose.g:5170:1: rule__VolumeConnector_short__Group__4 : rule__VolumeConnector_short__Group__4__Impl ;
    public final void rule__VolumeConnector_short__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5174:1: ( rule__VolumeConnector_short__Group__4__Impl )
            // InternalDockerCompose.g:5175:2: rule__VolumeConnector_short__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__Group__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group__4"


    // $ANTLR start "rule__VolumeConnector_short__Group__4__Impl"
    // InternalDockerCompose.g:5181:1: rule__VolumeConnector_short__Group__4__Impl : ( ( rule__VolumeConnector_short__Group_4__0 )? ) ;
    public final void rule__VolumeConnector_short__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5185:1: ( ( ( rule__VolumeConnector_short__Group_4__0 )? ) )
            // InternalDockerCompose.g:5186:1: ( ( rule__VolumeConnector_short__Group_4__0 )? )
            {
            // InternalDockerCompose.g:5186:1: ( ( rule__VolumeConnector_short__Group_4__0 )? )
            // InternalDockerCompose.g:5187:2: ( rule__VolumeConnector_short__Group_4__0 )?
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getGroup_4()); 
            // InternalDockerCompose.g:5188:2: ( rule__VolumeConnector_short__Group_4__0 )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==43) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalDockerCompose.g:5188:3: rule__VolumeConnector_short__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_short__Group_4__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getVolumeConnector_shortAccess().getGroup_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group__4__Impl"


    // $ANTLR start "rule__VolumeConnector_short__Group_4__0"
    // InternalDockerCompose.g:5197:1: rule__VolumeConnector_short__Group_4__0 : rule__VolumeConnector_short__Group_4__0__Impl rule__VolumeConnector_short__Group_4__1 ;
    public final void rule__VolumeConnector_short__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5201:1: ( rule__VolumeConnector_short__Group_4__0__Impl rule__VolumeConnector_short__Group_4__1 )
            // InternalDockerCompose.g:5202:2: rule__VolumeConnector_short__Group_4__0__Impl rule__VolumeConnector_short__Group_4__1
            {
            pushFollow(FOLLOW_31);
            rule__VolumeConnector_short__Group_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__Group_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group_4__0"


    // $ANTLR start "rule__VolumeConnector_short__Group_4__0__Impl"
    // InternalDockerCompose.g:5209:1: rule__VolumeConnector_short__Group_4__0__Impl : ( ':' ) ;
    public final void rule__VolumeConnector_short__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5213:1: ( ( ':' ) )
            // InternalDockerCompose.g:5214:1: ( ':' )
            {
            // InternalDockerCompose.g:5214:1: ( ':' )
            // InternalDockerCompose.g:5215:2: ':'
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getColonKeyword_4_0()); 
            match(input,43,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_shortAccess().getColonKeyword_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group_4__0__Impl"


    // $ANTLR start "rule__VolumeConnector_short__Group_4__1"
    // InternalDockerCompose.g:5224:1: rule__VolumeConnector_short__Group_4__1 : rule__VolumeConnector_short__Group_4__1__Impl ;
    public final void rule__VolumeConnector_short__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5228:1: ( rule__VolumeConnector_short__Group_4__1__Impl )
            // InternalDockerCompose.g:5229:2: rule__VolumeConnector_short__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__Group_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group_4__1"


    // $ANTLR start "rule__VolumeConnector_short__Group_4__1__Impl"
    // InternalDockerCompose.g:5235:1: rule__VolumeConnector_short__Group_4__1__Impl : ( ( rule__VolumeConnector_short__Access_modeAssignment_4_1 ) ) ;
    public final void rule__VolumeConnector_short__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5239:1: ( ( ( rule__VolumeConnector_short__Access_modeAssignment_4_1 ) ) )
            // InternalDockerCompose.g:5240:1: ( ( rule__VolumeConnector_short__Access_modeAssignment_4_1 ) )
            {
            // InternalDockerCompose.g:5240:1: ( ( rule__VolumeConnector_short__Access_modeAssignment_4_1 ) )
            // InternalDockerCompose.g:5241:2: ( rule__VolumeConnector_short__Access_modeAssignment_4_1 )
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getAccess_modeAssignment_4_1()); 
            // InternalDockerCompose.g:5242:2: ( rule__VolumeConnector_short__Access_modeAssignment_4_1 )
            // InternalDockerCompose.g:5242:3: rule__VolumeConnector_short__Access_modeAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__Access_modeAssignment_4_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_shortAccess().getAccess_modeAssignment_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group_4__1__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group__0"
    // InternalDockerCompose.g:5251:1: rule__ConfigConnector_long__Group__0 : rule__ConfigConnector_long__Group__0__Impl rule__ConfigConnector_long__Group__1 ;
    public final void rule__ConfigConnector_long__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5255:1: ( rule__ConfigConnector_long__Group__0__Impl rule__ConfigConnector_long__Group__1 )
            // InternalDockerCompose.g:5256:2: rule__ConfigConnector_long__Group__0__Impl rule__ConfigConnector_long__Group__1
            {
            pushFollow(FOLLOW_17);
            rule__ConfigConnector_long__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group__0"


    // $ANTLR start "rule__ConfigConnector_long__Group__0__Impl"
    // InternalDockerCompose.g:5263:1: rule__ConfigConnector_long__Group__0__Impl : ( () ) ;
    public final void rule__ConfigConnector_long__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5267:1: ( ( () ) )
            // InternalDockerCompose.g:5268:1: ( () )
            {
            // InternalDockerCompose.g:5268:1: ( () )
            // InternalDockerCompose.g:5269:2: ()
            {
             before(grammarAccess.getConfigConnector_longAccess().getConfigConnectorAction_0()); 
            // InternalDockerCompose.g:5270:2: ()
            // InternalDockerCompose.g:5270:3: 
            {
            }

             after(grammarAccess.getConfigConnector_longAccess().getConfigConnectorAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group__0__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group__1"
    // InternalDockerCompose.g:5278:1: rule__ConfigConnector_long__Group__1 : rule__ConfigConnector_long__Group__1__Impl ;
    public final void rule__ConfigConnector_long__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5282:1: ( rule__ConfigConnector_long__Group__1__Impl )
            // InternalDockerCompose.g:5283:2: rule__ConfigConnector_long__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group__1"


    // $ANTLR start "rule__ConfigConnector_long__Group__1__Impl"
    // InternalDockerCompose.g:5289:1: rule__ConfigConnector_long__Group__1__Impl : ( ( rule__ConfigConnector_long__UnorderedGroup_1 ) ) ;
    public final void rule__ConfigConnector_long__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5293:1: ( ( ( rule__ConfigConnector_long__UnorderedGroup_1 ) ) )
            // InternalDockerCompose.g:5294:1: ( ( rule__ConfigConnector_long__UnorderedGroup_1 ) )
            {
            // InternalDockerCompose.g:5294:1: ( ( rule__ConfigConnector_long__UnorderedGroup_1 ) )
            // InternalDockerCompose.g:5295:2: ( rule__ConfigConnector_long__UnorderedGroup_1 )
            {
             before(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1()); 
            // InternalDockerCompose.g:5296:2: ( rule__ConfigConnector_long__UnorderedGroup_1 )
            // InternalDockerCompose.g:5296:3: rule__ConfigConnector_long__UnorderedGroup_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__UnorderedGroup_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group__1__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_0__0"
    // InternalDockerCompose.g:5305:1: rule__ConfigConnector_long__Group_1_0__0 : rule__ConfigConnector_long__Group_1_0__0__Impl rule__ConfigConnector_long__Group_1_0__1 ;
    public final void rule__ConfigConnector_long__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5309:1: ( rule__ConfigConnector_long__Group_1_0__0__Impl rule__ConfigConnector_long__Group_1_0__1 )
            // InternalDockerCompose.g:5310:2: rule__ConfigConnector_long__Group_1_0__0__Impl rule__ConfigConnector_long__Group_1_0__1
            {
            pushFollow(FOLLOW_6);
            rule__ConfigConnector_long__Group_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_0__0"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_0__0__Impl"
    // InternalDockerCompose.g:5317:1: rule__ConfigConnector_long__Group_1_0__0__Impl : ( 'source:' ) ;
    public final void rule__ConfigConnector_long__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5321:1: ( ( 'source:' ) )
            // InternalDockerCompose.g:5322:1: ( 'source:' )
            {
            // InternalDockerCompose.g:5322:1: ( 'source:' )
            // InternalDockerCompose.g:5323:2: 'source:'
            {
             before(grammarAccess.getConfigConnector_longAccess().getSourceKeyword_1_0_0()); 
            match(input,63,FOLLOW_2); 
             after(grammarAccess.getConfigConnector_longAccess().getSourceKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_0__0__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_0__1"
    // InternalDockerCompose.g:5332:1: rule__ConfigConnector_long__Group_1_0__1 : rule__ConfigConnector_long__Group_1_0__1__Impl ;
    public final void rule__ConfigConnector_long__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5336:1: ( rule__ConfigConnector_long__Group_1_0__1__Impl )
            // InternalDockerCompose.g:5337:2: rule__ConfigConnector_long__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_0__1"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_0__1__Impl"
    // InternalDockerCompose.g:5343:1: rule__ConfigConnector_long__Group_1_0__1__Impl : ( ( rule__ConfigConnector_long__ConfigAssignment_1_0_1 ) ) ;
    public final void rule__ConfigConnector_long__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5347:1: ( ( ( rule__ConfigConnector_long__ConfigAssignment_1_0_1 ) ) )
            // InternalDockerCompose.g:5348:1: ( ( rule__ConfigConnector_long__ConfigAssignment_1_0_1 ) )
            {
            // InternalDockerCompose.g:5348:1: ( ( rule__ConfigConnector_long__ConfigAssignment_1_0_1 ) )
            // InternalDockerCompose.g:5349:2: ( rule__ConfigConnector_long__ConfigAssignment_1_0_1 )
            {
             before(grammarAccess.getConfigConnector_longAccess().getConfigAssignment_1_0_1()); 
            // InternalDockerCompose.g:5350:2: ( rule__ConfigConnector_long__ConfigAssignment_1_0_1 )
            // InternalDockerCompose.g:5350:3: rule__ConfigConnector_long__ConfigAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__ConfigAssignment_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnector_longAccess().getConfigAssignment_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_0__1__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_1__0"
    // InternalDockerCompose.g:5359:1: rule__ConfigConnector_long__Group_1_1__0 : rule__ConfigConnector_long__Group_1_1__0__Impl rule__ConfigConnector_long__Group_1_1__1 ;
    public final void rule__ConfigConnector_long__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5363:1: ( rule__ConfigConnector_long__Group_1_1__0__Impl rule__ConfigConnector_long__Group_1_1__1 )
            // InternalDockerCompose.g:5364:2: rule__ConfigConnector_long__Group_1_1__0__Impl rule__ConfigConnector_long__Group_1_1__1
            {
            pushFollow(FOLLOW_9);
            rule__ConfigConnector_long__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_1__0"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_1__0__Impl"
    // InternalDockerCompose.g:5371:1: rule__ConfigConnector_long__Group_1_1__0__Impl : ( 'target:' ) ;
    public final void rule__ConfigConnector_long__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5375:1: ( ( 'target:' ) )
            // InternalDockerCompose.g:5376:1: ( 'target:' )
            {
            // InternalDockerCompose.g:5376:1: ( 'target:' )
            // InternalDockerCompose.g:5377:2: 'target:'
            {
             before(grammarAccess.getConfigConnector_longAccess().getTargetKeyword_1_1_0()); 
            match(input,65,FOLLOW_2); 
             after(grammarAccess.getConfigConnector_longAccess().getTargetKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_1__0__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_1__1"
    // InternalDockerCompose.g:5386:1: rule__ConfigConnector_long__Group_1_1__1 : rule__ConfigConnector_long__Group_1_1__1__Impl ;
    public final void rule__ConfigConnector_long__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5390:1: ( rule__ConfigConnector_long__Group_1_1__1__Impl )
            // InternalDockerCompose.g:5391:2: rule__ConfigConnector_long__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_1__1"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_1__1__Impl"
    // InternalDockerCompose.g:5397:1: rule__ConfigConnector_long__Group_1_1__1__Impl : ( ( rule__ConfigConnector_long__TargetAssignment_1_1_1 ) ) ;
    public final void rule__ConfigConnector_long__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5401:1: ( ( ( rule__ConfigConnector_long__TargetAssignment_1_1_1 ) ) )
            // InternalDockerCompose.g:5402:1: ( ( rule__ConfigConnector_long__TargetAssignment_1_1_1 ) )
            {
            // InternalDockerCompose.g:5402:1: ( ( rule__ConfigConnector_long__TargetAssignment_1_1_1 ) )
            // InternalDockerCompose.g:5403:2: ( rule__ConfigConnector_long__TargetAssignment_1_1_1 )
            {
             before(grammarAccess.getConfigConnector_longAccess().getTargetAssignment_1_1_1()); 
            // InternalDockerCompose.g:5404:2: ( rule__ConfigConnector_long__TargetAssignment_1_1_1 )
            // InternalDockerCompose.g:5404:3: rule__ConfigConnector_long__TargetAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__TargetAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnector_longAccess().getTargetAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_1__1__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_2__0"
    // InternalDockerCompose.g:5413:1: rule__ConfigConnector_long__Group_1_2__0 : rule__ConfigConnector_long__Group_1_2__0__Impl rule__ConfigConnector_long__Group_1_2__1 ;
    public final void rule__ConfigConnector_long__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5417:1: ( rule__ConfigConnector_long__Group_1_2__0__Impl rule__ConfigConnector_long__Group_1_2__1 )
            // InternalDockerCompose.g:5418:2: rule__ConfigConnector_long__Group_1_2__0__Impl rule__ConfigConnector_long__Group_1_2__1
            {
            pushFollow(FOLLOW_32);
            rule__ConfigConnector_long__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_2__0"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_2__0__Impl"
    // InternalDockerCompose.g:5425:1: rule__ConfigConnector_long__Group_1_2__0__Impl : ( 'uid:' ) ;
    public final void rule__ConfigConnector_long__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5429:1: ( ( 'uid:' ) )
            // InternalDockerCompose.g:5430:1: ( 'uid:' )
            {
            // InternalDockerCompose.g:5430:1: ( 'uid:' )
            // InternalDockerCompose.g:5431:2: 'uid:'
            {
             before(grammarAccess.getConfigConnector_longAccess().getUidKeyword_1_2_0()); 
            match(input,72,FOLLOW_2); 
             after(grammarAccess.getConfigConnector_longAccess().getUidKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_2__0__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_2__1"
    // InternalDockerCompose.g:5440:1: rule__ConfigConnector_long__Group_1_2__1 : rule__ConfigConnector_long__Group_1_2__1__Impl ;
    public final void rule__ConfigConnector_long__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5444:1: ( rule__ConfigConnector_long__Group_1_2__1__Impl )
            // InternalDockerCompose.g:5445:2: rule__ConfigConnector_long__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_2__1"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_2__1__Impl"
    // InternalDockerCompose.g:5451:1: rule__ConfigConnector_long__Group_1_2__1__Impl : ( ( rule__ConfigConnector_long__UidAssignment_1_2_1 ) ) ;
    public final void rule__ConfigConnector_long__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5455:1: ( ( ( rule__ConfigConnector_long__UidAssignment_1_2_1 ) ) )
            // InternalDockerCompose.g:5456:1: ( ( rule__ConfigConnector_long__UidAssignment_1_2_1 ) )
            {
            // InternalDockerCompose.g:5456:1: ( ( rule__ConfigConnector_long__UidAssignment_1_2_1 ) )
            // InternalDockerCompose.g:5457:2: ( rule__ConfigConnector_long__UidAssignment_1_2_1 )
            {
             before(grammarAccess.getConfigConnector_longAccess().getUidAssignment_1_2_1()); 
            // InternalDockerCompose.g:5458:2: ( rule__ConfigConnector_long__UidAssignment_1_2_1 )
            // InternalDockerCompose.g:5458:3: rule__ConfigConnector_long__UidAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__UidAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnector_longAccess().getUidAssignment_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_2__1__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_3__0"
    // InternalDockerCompose.g:5467:1: rule__ConfigConnector_long__Group_1_3__0 : rule__ConfigConnector_long__Group_1_3__0__Impl rule__ConfigConnector_long__Group_1_3__1 ;
    public final void rule__ConfigConnector_long__Group_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5471:1: ( rule__ConfigConnector_long__Group_1_3__0__Impl rule__ConfigConnector_long__Group_1_3__1 )
            // InternalDockerCompose.g:5472:2: rule__ConfigConnector_long__Group_1_3__0__Impl rule__ConfigConnector_long__Group_1_3__1
            {
            pushFollow(FOLLOW_32);
            rule__ConfigConnector_long__Group_1_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group_1_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_3__0"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_3__0__Impl"
    // InternalDockerCompose.g:5479:1: rule__ConfigConnector_long__Group_1_3__0__Impl : ( 'gid:' ) ;
    public final void rule__ConfigConnector_long__Group_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5483:1: ( ( 'gid:' ) )
            // InternalDockerCompose.g:5484:1: ( 'gid:' )
            {
            // InternalDockerCompose.g:5484:1: ( 'gid:' )
            // InternalDockerCompose.g:5485:2: 'gid:'
            {
             before(grammarAccess.getConfigConnector_longAccess().getGidKeyword_1_3_0()); 
            match(input,73,FOLLOW_2); 
             after(grammarAccess.getConfigConnector_longAccess().getGidKeyword_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_3__0__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_3__1"
    // InternalDockerCompose.g:5494:1: rule__ConfigConnector_long__Group_1_3__1 : rule__ConfigConnector_long__Group_1_3__1__Impl ;
    public final void rule__ConfigConnector_long__Group_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5498:1: ( rule__ConfigConnector_long__Group_1_3__1__Impl )
            // InternalDockerCompose.g:5499:2: rule__ConfigConnector_long__Group_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group_1_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_3__1"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_3__1__Impl"
    // InternalDockerCompose.g:5505:1: rule__ConfigConnector_long__Group_1_3__1__Impl : ( ( rule__ConfigConnector_long__GidAssignment_1_3_1 ) ) ;
    public final void rule__ConfigConnector_long__Group_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5509:1: ( ( ( rule__ConfigConnector_long__GidAssignment_1_3_1 ) ) )
            // InternalDockerCompose.g:5510:1: ( ( rule__ConfigConnector_long__GidAssignment_1_3_1 ) )
            {
            // InternalDockerCompose.g:5510:1: ( ( rule__ConfigConnector_long__GidAssignment_1_3_1 ) )
            // InternalDockerCompose.g:5511:2: ( rule__ConfigConnector_long__GidAssignment_1_3_1 )
            {
             before(grammarAccess.getConfigConnector_longAccess().getGidAssignment_1_3_1()); 
            // InternalDockerCompose.g:5512:2: ( rule__ConfigConnector_long__GidAssignment_1_3_1 )
            // InternalDockerCompose.g:5512:3: rule__ConfigConnector_long__GidAssignment_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__GidAssignment_1_3_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnector_longAccess().getGidAssignment_1_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_3__1__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_4__0"
    // InternalDockerCompose.g:5521:1: rule__ConfigConnector_long__Group_1_4__0 : rule__ConfigConnector_long__Group_1_4__0__Impl rule__ConfigConnector_long__Group_1_4__1 ;
    public final void rule__ConfigConnector_long__Group_1_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5525:1: ( rule__ConfigConnector_long__Group_1_4__0__Impl rule__ConfigConnector_long__Group_1_4__1 )
            // InternalDockerCompose.g:5526:2: rule__ConfigConnector_long__Group_1_4__0__Impl rule__ConfigConnector_long__Group_1_4__1
            {
            pushFollow(FOLLOW_10);
            rule__ConfigConnector_long__Group_1_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group_1_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_4__0"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_4__0__Impl"
    // InternalDockerCompose.g:5533:1: rule__ConfigConnector_long__Group_1_4__0__Impl : ( 'mode:' ) ;
    public final void rule__ConfigConnector_long__Group_1_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5537:1: ( ( 'mode:' ) )
            // InternalDockerCompose.g:5538:1: ( 'mode:' )
            {
            // InternalDockerCompose.g:5538:1: ( 'mode:' )
            // InternalDockerCompose.g:5539:2: 'mode:'
            {
             before(grammarAccess.getConfigConnector_longAccess().getModeKeyword_1_4_0()); 
            match(input,74,FOLLOW_2); 
             after(grammarAccess.getConfigConnector_longAccess().getModeKeyword_1_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_4__0__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_4__1"
    // InternalDockerCompose.g:5548:1: rule__ConfigConnector_long__Group_1_4__1 : rule__ConfigConnector_long__Group_1_4__1__Impl ;
    public final void rule__ConfigConnector_long__Group_1_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5552:1: ( rule__ConfigConnector_long__Group_1_4__1__Impl )
            // InternalDockerCompose.g:5553:2: rule__ConfigConnector_long__Group_1_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group_1_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_4__1"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_4__1__Impl"
    // InternalDockerCompose.g:5559:1: rule__ConfigConnector_long__Group_1_4__1__Impl : ( ( rule__ConfigConnector_long__ModeAssignment_1_4_1 ) ) ;
    public final void rule__ConfigConnector_long__Group_1_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5563:1: ( ( ( rule__ConfigConnector_long__ModeAssignment_1_4_1 ) ) )
            // InternalDockerCompose.g:5564:1: ( ( rule__ConfigConnector_long__ModeAssignment_1_4_1 ) )
            {
            // InternalDockerCompose.g:5564:1: ( ( rule__ConfigConnector_long__ModeAssignment_1_4_1 ) )
            // InternalDockerCompose.g:5565:2: ( rule__ConfigConnector_long__ModeAssignment_1_4_1 )
            {
             before(grammarAccess.getConfigConnector_longAccess().getModeAssignment_1_4_1()); 
            // InternalDockerCompose.g:5566:2: ( rule__ConfigConnector_long__ModeAssignment_1_4_1 )
            // InternalDockerCompose.g:5566:3: rule__ConfigConnector_long__ModeAssignment_1_4_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__ModeAssignment_1_4_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnector_longAccess().getModeAssignment_1_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_4__1__Impl"


    // $ANTLR start "rule__ConfigConnector_short__Group__0"
    // InternalDockerCompose.g:5575:1: rule__ConfigConnector_short__Group__0 : rule__ConfigConnector_short__Group__0__Impl rule__ConfigConnector_short__Group__1 ;
    public final void rule__ConfigConnector_short__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5579:1: ( rule__ConfigConnector_short__Group__0__Impl rule__ConfigConnector_short__Group__1 )
            // InternalDockerCompose.g:5580:2: rule__ConfigConnector_short__Group__0__Impl rule__ConfigConnector_short__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__ConfigConnector_short__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector_short__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_short__Group__0"


    // $ANTLR start "rule__ConfigConnector_short__Group__0__Impl"
    // InternalDockerCompose.g:5587:1: rule__ConfigConnector_short__Group__0__Impl : ( () ) ;
    public final void rule__ConfigConnector_short__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5591:1: ( ( () ) )
            // InternalDockerCompose.g:5592:1: ( () )
            {
            // InternalDockerCompose.g:5592:1: ( () )
            // InternalDockerCompose.g:5593:2: ()
            {
             before(grammarAccess.getConfigConnector_shortAccess().getConfigConnectorAction_0()); 
            // InternalDockerCompose.g:5594:2: ()
            // InternalDockerCompose.g:5594:3: 
            {
            }

             after(grammarAccess.getConfigConnector_shortAccess().getConfigConnectorAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_short__Group__0__Impl"


    // $ANTLR start "rule__ConfigConnector_short__Group__1"
    // InternalDockerCompose.g:5602:1: rule__ConfigConnector_short__Group__1 : rule__ConfigConnector_short__Group__1__Impl ;
    public final void rule__ConfigConnector_short__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5606:1: ( rule__ConfigConnector_short__Group__1__Impl )
            // InternalDockerCompose.g:5607:2: rule__ConfigConnector_short__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_short__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_short__Group__1"


    // $ANTLR start "rule__ConfigConnector_short__Group__1__Impl"
    // InternalDockerCompose.g:5613:1: rule__ConfigConnector_short__Group__1__Impl : ( ( rule__ConfigConnector_short__ConfigAssignment_1 ) ) ;
    public final void rule__ConfigConnector_short__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5617:1: ( ( ( rule__ConfigConnector_short__ConfigAssignment_1 ) ) )
            // InternalDockerCompose.g:5618:1: ( ( rule__ConfigConnector_short__ConfigAssignment_1 ) )
            {
            // InternalDockerCompose.g:5618:1: ( ( rule__ConfigConnector_short__ConfigAssignment_1 ) )
            // InternalDockerCompose.g:5619:2: ( rule__ConfigConnector_short__ConfigAssignment_1 )
            {
             before(grammarAccess.getConfigConnector_shortAccess().getConfigAssignment_1()); 
            // InternalDockerCompose.g:5620:2: ( rule__ConfigConnector_short__ConfigAssignment_1 )
            // InternalDockerCompose.g:5620:3: rule__ConfigConnector_short__ConfigAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_short__ConfigAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnector_shortAccess().getConfigAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_short__Group__1__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group__0"
    // InternalDockerCompose.g:5629:1: rule__SecretConnector_long__Group__0 : rule__SecretConnector_long__Group__0__Impl rule__SecretConnector_long__Group__1 ;
    public final void rule__SecretConnector_long__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5633:1: ( rule__SecretConnector_long__Group__0__Impl rule__SecretConnector_long__Group__1 )
            // InternalDockerCompose.g:5634:2: rule__SecretConnector_long__Group__0__Impl rule__SecretConnector_long__Group__1
            {
            pushFollow(FOLLOW_17);
            rule__SecretConnector_long__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group__0"


    // $ANTLR start "rule__SecretConnector_long__Group__0__Impl"
    // InternalDockerCompose.g:5641:1: rule__SecretConnector_long__Group__0__Impl : ( () ) ;
    public final void rule__SecretConnector_long__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5645:1: ( ( () ) )
            // InternalDockerCompose.g:5646:1: ( () )
            {
            // InternalDockerCompose.g:5646:1: ( () )
            // InternalDockerCompose.g:5647:2: ()
            {
             before(grammarAccess.getSecretConnector_longAccess().getSecretConnectorAction_0()); 
            // InternalDockerCompose.g:5648:2: ()
            // InternalDockerCompose.g:5648:3: 
            {
            }

             after(grammarAccess.getSecretConnector_longAccess().getSecretConnectorAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group__0__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group__1"
    // InternalDockerCompose.g:5656:1: rule__SecretConnector_long__Group__1 : rule__SecretConnector_long__Group__1__Impl ;
    public final void rule__SecretConnector_long__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5660:1: ( rule__SecretConnector_long__Group__1__Impl )
            // InternalDockerCompose.g:5661:2: rule__SecretConnector_long__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group__1"


    // $ANTLR start "rule__SecretConnector_long__Group__1__Impl"
    // InternalDockerCompose.g:5667:1: rule__SecretConnector_long__Group__1__Impl : ( ( rule__SecretConnector_long__UnorderedGroup_1 ) ) ;
    public final void rule__SecretConnector_long__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5671:1: ( ( ( rule__SecretConnector_long__UnorderedGroup_1 ) ) )
            // InternalDockerCompose.g:5672:1: ( ( rule__SecretConnector_long__UnorderedGroup_1 ) )
            {
            // InternalDockerCompose.g:5672:1: ( ( rule__SecretConnector_long__UnorderedGroup_1 ) )
            // InternalDockerCompose.g:5673:2: ( rule__SecretConnector_long__UnorderedGroup_1 )
            {
             before(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1()); 
            // InternalDockerCompose.g:5674:2: ( rule__SecretConnector_long__UnorderedGroup_1 )
            // InternalDockerCompose.g:5674:3: rule__SecretConnector_long__UnorderedGroup_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__UnorderedGroup_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group__1__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group_1_0__0"
    // InternalDockerCompose.g:5683:1: rule__SecretConnector_long__Group_1_0__0 : rule__SecretConnector_long__Group_1_0__0__Impl rule__SecretConnector_long__Group_1_0__1 ;
    public final void rule__SecretConnector_long__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5687:1: ( rule__SecretConnector_long__Group_1_0__0__Impl rule__SecretConnector_long__Group_1_0__1 )
            // InternalDockerCompose.g:5688:2: rule__SecretConnector_long__Group_1_0__0__Impl rule__SecretConnector_long__Group_1_0__1
            {
            pushFollow(FOLLOW_6);
            rule__SecretConnector_long__Group_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_0__0"


    // $ANTLR start "rule__SecretConnector_long__Group_1_0__0__Impl"
    // InternalDockerCompose.g:5695:1: rule__SecretConnector_long__Group_1_0__0__Impl : ( 'source:' ) ;
    public final void rule__SecretConnector_long__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5699:1: ( ( 'source:' ) )
            // InternalDockerCompose.g:5700:1: ( 'source:' )
            {
            // InternalDockerCompose.g:5700:1: ( 'source:' )
            // InternalDockerCompose.g:5701:2: 'source:'
            {
             before(grammarAccess.getSecretConnector_longAccess().getSourceKeyword_1_0_0()); 
            match(input,63,FOLLOW_2); 
             after(grammarAccess.getSecretConnector_longAccess().getSourceKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_0__0__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group_1_0__1"
    // InternalDockerCompose.g:5710:1: rule__SecretConnector_long__Group_1_0__1 : rule__SecretConnector_long__Group_1_0__1__Impl ;
    public final void rule__SecretConnector_long__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5714:1: ( rule__SecretConnector_long__Group_1_0__1__Impl )
            // InternalDockerCompose.g:5715:2: rule__SecretConnector_long__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_0__1"


    // $ANTLR start "rule__SecretConnector_long__Group_1_0__1__Impl"
    // InternalDockerCompose.g:5721:1: rule__SecretConnector_long__Group_1_0__1__Impl : ( ( rule__SecretConnector_long__SecretAssignment_1_0_1 ) ) ;
    public final void rule__SecretConnector_long__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5725:1: ( ( ( rule__SecretConnector_long__SecretAssignment_1_0_1 ) ) )
            // InternalDockerCompose.g:5726:1: ( ( rule__SecretConnector_long__SecretAssignment_1_0_1 ) )
            {
            // InternalDockerCompose.g:5726:1: ( ( rule__SecretConnector_long__SecretAssignment_1_0_1 ) )
            // InternalDockerCompose.g:5727:2: ( rule__SecretConnector_long__SecretAssignment_1_0_1 )
            {
             before(grammarAccess.getSecretConnector_longAccess().getSecretAssignment_1_0_1()); 
            // InternalDockerCompose.g:5728:2: ( rule__SecretConnector_long__SecretAssignment_1_0_1 )
            // InternalDockerCompose.g:5728:3: rule__SecretConnector_long__SecretAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__SecretAssignment_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnector_longAccess().getSecretAssignment_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_0__1__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group_1_1__0"
    // InternalDockerCompose.g:5737:1: rule__SecretConnector_long__Group_1_1__0 : rule__SecretConnector_long__Group_1_1__0__Impl rule__SecretConnector_long__Group_1_1__1 ;
    public final void rule__SecretConnector_long__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5741:1: ( rule__SecretConnector_long__Group_1_1__0__Impl rule__SecretConnector_long__Group_1_1__1 )
            // InternalDockerCompose.g:5742:2: rule__SecretConnector_long__Group_1_1__0__Impl rule__SecretConnector_long__Group_1_1__1
            {
            pushFollow(FOLLOW_9);
            rule__SecretConnector_long__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_1__0"


    // $ANTLR start "rule__SecretConnector_long__Group_1_1__0__Impl"
    // InternalDockerCompose.g:5749:1: rule__SecretConnector_long__Group_1_1__0__Impl : ( 'target:' ) ;
    public final void rule__SecretConnector_long__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5753:1: ( ( 'target:' ) )
            // InternalDockerCompose.g:5754:1: ( 'target:' )
            {
            // InternalDockerCompose.g:5754:1: ( 'target:' )
            // InternalDockerCompose.g:5755:2: 'target:'
            {
             before(grammarAccess.getSecretConnector_longAccess().getTargetKeyword_1_1_0()); 
            match(input,65,FOLLOW_2); 
             after(grammarAccess.getSecretConnector_longAccess().getTargetKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_1__0__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group_1_1__1"
    // InternalDockerCompose.g:5764:1: rule__SecretConnector_long__Group_1_1__1 : rule__SecretConnector_long__Group_1_1__1__Impl ;
    public final void rule__SecretConnector_long__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5768:1: ( rule__SecretConnector_long__Group_1_1__1__Impl )
            // InternalDockerCompose.g:5769:2: rule__SecretConnector_long__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_1__1"


    // $ANTLR start "rule__SecretConnector_long__Group_1_1__1__Impl"
    // InternalDockerCompose.g:5775:1: rule__SecretConnector_long__Group_1_1__1__Impl : ( ( rule__SecretConnector_long__TargetAssignment_1_1_1 ) ) ;
    public final void rule__SecretConnector_long__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5779:1: ( ( ( rule__SecretConnector_long__TargetAssignment_1_1_1 ) ) )
            // InternalDockerCompose.g:5780:1: ( ( rule__SecretConnector_long__TargetAssignment_1_1_1 ) )
            {
            // InternalDockerCompose.g:5780:1: ( ( rule__SecretConnector_long__TargetAssignment_1_1_1 ) )
            // InternalDockerCompose.g:5781:2: ( rule__SecretConnector_long__TargetAssignment_1_1_1 )
            {
             before(grammarAccess.getSecretConnector_longAccess().getTargetAssignment_1_1_1()); 
            // InternalDockerCompose.g:5782:2: ( rule__SecretConnector_long__TargetAssignment_1_1_1 )
            // InternalDockerCompose.g:5782:3: rule__SecretConnector_long__TargetAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__TargetAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnector_longAccess().getTargetAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_1__1__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group_1_2__0"
    // InternalDockerCompose.g:5791:1: rule__SecretConnector_long__Group_1_2__0 : rule__SecretConnector_long__Group_1_2__0__Impl rule__SecretConnector_long__Group_1_2__1 ;
    public final void rule__SecretConnector_long__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5795:1: ( rule__SecretConnector_long__Group_1_2__0__Impl rule__SecretConnector_long__Group_1_2__1 )
            // InternalDockerCompose.g:5796:2: rule__SecretConnector_long__Group_1_2__0__Impl rule__SecretConnector_long__Group_1_2__1
            {
            pushFollow(FOLLOW_32);
            rule__SecretConnector_long__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_2__0"


    // $ANTLR start "rule__SecretConnector_long__Group_1_2__0__Impl"
    // InternalDockerCompose.g:5803:1: rule__SecretConnector_long__Group_1_2__0__Impl : ( 'uid:' ) ;
    public final void rule__SecretConnector_long__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5807:1: ( ( 'uid:' ) )
            // InternalDockerCompose.g:5808:1: ( 'uid:' )
            {
            // InternalDockerCompose.g:5808:1: ( 'uid:' )
            // InternalDockerCompose.g:5809:2: 'uid:'
            {
             before(grammarAccess.getSecretConnector_longAccess().getUidKeyword_1_2_0()); 
            match(input,72,FOLLOW_2); 
             after(grammarAccess.getSecretConnector_longAccess().getUidKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_2__0__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group_1_2__1"
    // InternalDockerCompose.g:5818:1: rule__SecretConnector_long__Group_1_2__1 : rule__SecretConnector_long__Group_1_2__1__Impl ;
    public final void rule__SecretConnector_long__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5822:1: ( rule__SecretConnector_long__Group_1_2__1__Impl )
            // InternalDockerCompose.g:5823:2: rule__SecretConnector_long__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_2__1"


    // $ANTLR start "rule__SecretConnector_long__Group_1_2__1__Impl"
    // InternalDockerCompose.g:5829:1: rule__SecretConnector_long__Group_1_2__1__Impl : ( ( rule__SecretConnector_long__UidAssignment_1_2_1 ) ) ;
    public final void rule__SecretConnector_long__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5833:1: ( ( ( rule__SecretConnector_long__UidAssignment_1_2_1 ) ) )
            // InternalDockerCompose.g:5834:1: ( ( rule__SecretConnector_long__UidAssignment_1_2_1 ) )
            {
            // InternalDockerCompose.g:5834:1: ( ( rule__SecretConnector_long__UidAssignment_1_2_1 ) )
            // InternalDockerCompose.g:5835:2: ( rule__SecretConnector_long__UidAssignment_1_2_1 )
            {
             before(grammarAccess.getSecretConnector_longAccess().getUidAssignment_1_2_1()); 
            // InternalDockerCompose.g:5836:2: ( rule__SecretConnector_long__UidAssignment_1_2_1 )
            // InternalDockerCompose.g:5836:3: rule__SecretConnector_long__UidAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__UidAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnector_longAccess().getUidAssignment_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_2__1__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group_1_3__0"
    // InternalDockerCompose.g:5845:1: rule__SecretConnector_long__Group_1_3__0 : rule__SecretConnector_long__Group_1_3__0__Impl rule__SecretConnector_long__Group_1_3__1 ;
    public final void rule__SecretConnector_long__Group_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5849:1: ( rule__SecretConnector_long__Group_1_3__0__Impl rule__SecretConnector_long__Group_1_3__1 )
            // InternalDockerCompose.g:5850:2: rule__SecretConnector_long__Group_1_3__0__Impl rule__SecretConnector_long__Group_1_3__1
            {
            pushFollow(FOLLOW_32);
            rule__SecretConnector_long__Group_1_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group_1_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_3__0"


    // $ANTLR start "rule__SecretConnector_long__Group_1_3__0__Impl"
    // InternalDockerCompose.g:5857:1: rule__SecretConnector_long__Group_1_3__0__Impl : ( 'gid:' ) ;
    public final void rule__SecretConnector_long__Group_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5861:1: ( ( 'gid:' ) )
            // InternalDockerCompose.g:5862:1: ( 'gid:' )
            {
            // InternalDockerCompose.g:5862:1: ( 'gid:' )
            // InternalDockerCompose.g:5863:2: 'gid:'
            {
             before(grammarAccess.getSecretConnector_longAccess().getGidKeyword_1_3_0()); 
            match(input,73,FOLLOW_2); 
             after(grammarAccess.getSecretConnector_longAccess().getGidKeyword_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_3__0__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group_1_3__1"
    // InternalDockerCompose.g:5872:1: rule__SecretConnector_long__Group_1_3__1 : rule__SecretConnector_long__Group_1_3__1__Impl ;
    public final void rule__SecretConnector_long__Group_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5876:1: ( rule__SecretConnector_long__Group_1_3__1__Impl )
            // InternalDockerCompose.g:5877:2: rule__SecretConnector_long__Group_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group_1_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_3__1"


    // $ANTLR start "rule__SecretConnector_long__Group_1_3__1__Impl"
    // InternalDockerCompose.g:5883:1: rule__SecretConnector_long__Group_1_3__1__Impl : ( ( rule__SecretConnector_long__GidAssignment_1_3_1 ) ) ;
    public final void rule__SecretConnector_long__Group_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5887:1: ( ( ( rule__SecretConnector_long__GidAssignment_1_3_1 ) ) )
            // InternalDockerCompose.g:5888:1: ( ( rule__SecretConnector_long__GidAssignment_1_3_1 ) )
            {
            // InternalDockerCompose.g:5888:1: ( ( rule__SecretConnector_long__GidAssignment_1_3_1 ) )
            // InternalDockerCompose.g:5889:2: ( rule__SecretConnector_long__GidAssignment_1_3_1 )
            {
             before(grammarAccess.getSecretConnector_longAccess().getGidAssignment_1_3_1()); 
            // InternalDockerCompose.g:5890:2: ( rule__SecretConnector_long__GidAssignment_1_3_1 )
            // InternalDockerCompose.g:5890:3: rule__SecretConnector_long__GidAssignment_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__GidAssignment_1_3_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnector_longAccess().getGidAssignment_1_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_3__1__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group_1_4__0"
    // InternalDockerCompose.g:5899:1: rule__SecretConnector_long__Group_1_4__0 : rule__SecretConnector_long__Group_1_4__0__Impl rule__SecretConnector_long__Group_1_4__1 ;
    public final void rule__SecretConnector_long__Group_1_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5903:1: ( rule__SecretConnector_long__Group_1_4__0__Impl rule__SecretConnector_long__Group_1_4__1 )
            // InternalDockerCompose.g:5904:2: rule__SecretConnector_long__Group_1_4__0__Impl rule__SecretConnector_long__Group_1_4__1
            {
            pushFollow(FOLLOW_10);
            rule__SecretConnector_long__Group_1_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group_1_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_4__0"


    // $ANTLR start "rule__SecretConnector_long__Group_1_4__0__Impl"
    // InternalDockerCompose.g:5911:1: rule__SecretConnector_long__Group_1_4__0__Impl : ( 'mode:' ) ;
    public final void rule__SecretConnector_long__Group_1_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5915:1: ( ( 'mode:' ) )
            // InternalDockerCompose.g:5916:1: ( 'mode:' )
            {
            // InternalDockerCompose.g:5916:1: ( 'mode:' )
            // InternalDockerCompose.g:5917:2: 'mode:'
            {
             before(grammarAccess.getSecretConnector_longAccess().getModeKeyword_1_4_0()); 
            match(input,74,FOLLOW_2); 
             after(grammarAccess.getSecretConnector_longAccess().getModeKeyword_1_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_4__0__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group_1_4__1"
    // InternalDockerCompose.g:5926:1: rule__SecretConnector_long__Group_1_4__1 : rule__SecretConnector_long__Group_1_4__1__Impl ;
    public final void rule__SecretConnector_long__Group_1_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5930:1: ( rule__SecretConnector_long__Group_1_4__1__Impl )
            // InternalDockerCompose.g:5931:2: rule__SecretConnector_long__Group_1_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group_1_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_4__1"


    // $ANTLR start "rule__SecretConnector_long__Group_1_4__1__Impl"
    // InternalDockerCompose.g:5937:1: rule__SecretConnector_long__Group_1_4__1__Impl : ( ( rule__SecretConnector_long__ModeAssignment_1_4_1 ) ) ;
    public final void rule__SecretConnector_long__Group_1_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5941:1: ( ( ( rule__SecretConnector_long__ModeAssignment_1_4_1 ) ) )
            // InternalDockerCompose.g:5942:1: ( ( rule__SecretConnector_long__ModeAssignment_1_4_1 ) )
            {
            // InternalDockerCompose.g:5942:1: ( ( rule__SecretConnector_long__ModeAssignment_1_4_1 ) )
            // InternalDockerCompose.g:5943:2: ( rule__SecretConnector_long__ModeAssignment_1_4_1 )
            {
             before(grammarAccess.getSecretConnector_longAccess().getModeAssignment_1_4_1()); 
            // InternalDockerCompose.g:5944:2: ( rule__SecretConnector_long__ModeAssignment_1_4_1 )
            // InternalDockerCompose.g:5944:3: rule__SecretConnector_long__ModeAssignment_1_4_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__ModeAssignment_1_4_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnector_longAccess().getModeAssignment_1_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_4__1__Impl"


    // $ANTLR start "rule__SecretConnector_short__Group__0"
    // InternalDockerCompose.g:5953:1: rule__SecretConnector_short__Group__0 : rule__SecretConnector_short__Group__0__Impl rule__SecretConnector_short__Group__1 ;
    public final void rule__SecretConnector_short__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5957:1: ( rule__SecretConnector_short__Group__0__Impl rule__SecretConnector_short__Group__1 )
            // InternalDockerCompose.g:5958:2: rule__SecretConnector_short__Group__0__Impl rule__SecretConnector_short__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__SecretConnector_short__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector_short__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_short__Group__0"


    // $ANTLR start "rule__SecretConnector_short__Group__0__Impl"
    // InternalDockerCompose.g:5965:1: rule__SecretConnector_short__Group__0__Impl : ( () ) ;
    public final void rule__SecretConnector_short__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5969:1: ( ( () ) )
            // InternalDockerCompose.g:5970:1: ( () )
            {
            // InternalDockerCompose.g:5970:1: ( () )
            // InternalDockerCompose.g:5971:2: ()
            {
             before(grammarAccess.getSecretConnector_shortAccess().getSecretConnectorAction_0()); 
            // InternalDockerCompose.g:5972:2: ()
            // InternalDockerCompose.g:5972:3: 
            {
            }

             after(grammarAccess.getSecretConnector_shortAccess().getSecretConnectorAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_short__Group__0__Impl"


    // $ANTLR start "rule__SecretConnector_short__Group__1"
    // InternalDockerCompose.g:5980:1: rule__SecretConnector_short__Group__1 : rule__SecretConnector_short__Group__1__Impl ;
    public final void rule__SecretConnector_short__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5984:1: ( rule__SecretConnector_short__Group__1__Impl )
            // InternalDockerCompose.g:5985:2: rule__SecretConnector_short__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_short__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_short__Group__1"


    // $ANTLR start "rule__SecretConnector_short__Group__1__Impl"
    // InternalDockerCompose.g:5991:1: rule__SecretConnector_short__Group__1__Impl : ( ( rule__SecretConnector_short__SecretAssignment_1 ) ) ;
    public final void rule__SecretConnector_short__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5995:1: ( ( ( rule__SecretConnector_short__SecretAssignment_1 ) ) )
            // InternalDockerCompose.g:5996:1: ( ( rule__SecretConnector_short__SecretAssignment_1 ) )
            {
            // InternalDockerCompose.g:5996:1: ( ( rule__SecretConnector_short__SecretAssignment_1 ) )
            // InternalDockerCompose.g:5997:2: ( rule__SecretConnector_short__SecretAssignment_1 )
            {
             before(grammarAccess.getSecretConnector_shortAccess().getSecretAssignment_1()); 
            // InternalDockerCompose.g:5998:2: ( rule__SecretConnector_short__SecretAssignment_1 )
            // InternalDockerCompose.g:5998:3: rule__SecretConnector_short__SecretAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_short__SecretAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnector_shortAccess().getSecretAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_short__Group__1__Impl"


    // $ANTLR start "rule__Network__Group__0"
    // InternalDockerCompose.g:6007:1: rule__Network__Group__0 : rule__Network__Group__0__Impl rule__Network__Group__1 ;
    public final void rule__Network__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6011:1: ( rule__Network__Group__0__Impl rule__Network__Group__1 )
            // InternalDockerCompose.g:6012:2: rule__Network__Group__0__Impl rule__Network__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__Network__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__0"


    // $ANTLR start "rule__Network__Group__0__Impl"
    // InternalDockerCompose.g:6019:1: rule__Network__Group__0__Impl : ( () ) ;
    public final void rule__Network__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6023:1: ( ( () ) )
            // InternalDockerCompose.g:6024:1: ( () )
            {
            // InternalDockerCompose.g:6024:1: ( () )
            // InternalDockerCompose.g:6025:2: ()
            {
             before(grammarAccess.getNetworkAccess().getNetworkAction_0()); 
            // InternalDockerCompose.g:6026:2: ()
            // InternalDockerCompose.g:6026:3: 
            {
            }

             after(grammarAccess.getNetworkAccess().getNetworkAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__0__Impl"


    // $ANTLR start "rule__Network__Group__1"
    // InternalDockerCompose.g:6034:1: rule__Network__Group__1 : rule__Network__Group__1__Impl rule__Network__Group__2 ;
    public final void rule__Network__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6038:1: ( rule__Network__Group__1__Impl rule__Network__Group__2 )
            // InternalDockerCompose.g:6039:2: rule__Network__Group__1__Impl rule__Network__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__Network__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__1"


    // $ANTLR start "rule__Network__Group__1__Impl"
    // InternalDockerCompose.g:6046:1: rule__Network__Group__1__Impl : ( ( rule__Network__NameAssignment_1 ) ) ;
    public final void rule__Network__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6050:1: ( ( ( rule__Network__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:6051:1: ( ( rule__Network__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:6051:1: ( ( rule__Network__NameAssignment_1 ) )
            // InternalDockerCompose.g:6052:2: ( rule__Network__NameAssignment_1 )
            {
             before(grammarAccess.getNetworkAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:6053:2: ( rule__Network__NameAssignment_1 )
            // InternalDockerCompose.g:6053:3: rule__Network__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__1__Impl"


    // $ANTLR start "rule__Network__Group__2"
    // InternalDockerCompose.g:6061:1: rule__Network__Group__2 : rule__Network__Group__2__Impl rule__Network__Group__3 ;
    public final void rule__Network__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6065:1: ( rule__Network__Group__2__Impl rule__Network__Group__3 )
            // InternalDockerCompose.g:6066:2: rule__Network__Group__2__Impl rule__Network__Group__3
            {
            pushFollow(FOLLOW_33);
            rule__Network__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__2"


    // $ANTLR start "rule__Network__Group__2__Impl"
    // InternalDockerCompose.g:6073:1: rule__Network__Group__2__Impl : ( ':' ) ;
    public final void rule__Network__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6077:1: ( ( ':' ) )
            // InternalDockerCompose.g:6078:1: ( ':' )
            {
            // InternalDockerCompose.g:6078:1: ( ':' )
            // InternalDockerCompose.g:6079:2: ':'
            {
             before(grammarAccess.getNetworkAccess().getColonKeyword_2()); 
            match(input,43,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__2__Impl"


    // $ANTLR start "rule__Network__Group__3"
    // InternalDockerCompose.g:6088:1: rule__Network__Group__3 : rule__Network__Group__3__Impl ;
    public final void rule__Network__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6092:1: ( rule__Network__Group__3__Impl )
            // InternalDockerCompose.g:6093:2: rule__Network__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__3"


    // $ANTLR start "rule__Network__Group__3__Impl"
    // InternalDockerCompose.g:6099:1: rule__Network__Group__3__Impl : ( ( rule__Network__Alternatives_3 ) ) ;
    public final void rule__Network__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6103:1: ( ( ( rule__Network__Alternatives_3 ) ) )
            // InternalDockerCompose.g:6104:1: ( ( rule__Network__Alternatives_3 ) )
            {
            // InternalDockerCompose.g:6104:1: ( ( rule__Network__Alternatives_3 ) )
            // InternalDockerCompose.g:6105:2: ( rule__Network__Alternatives_3 )
            {
             before(grammarAccess.getNetworkAccess().getAlternatives_3()); 
            // InternalDockerCompose.g:6106:2: ( rule__Network__Alternatives_3 )
            // InternalDockerCompose.g:6106:3: rule__Network__Alternatives_3
            {
            pushFollow(FOLLOW_2);
            rule__Network__Alternatives_3();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getAlternatives_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__3__Impl"


    // $ANTLR start "rule__Network__Group_3_0__0"
    // InternalDockerCompose.g:6115:1: rule__Network__Group_3_0__0 : rule__Network__Group_3_0__0__Impl rule__Network__Group_3_0__1 ;
    public final void rule__Network__Group_3_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6119:1: ( rule__Network__Group_3_0__0__Impl rule__Network__Group_3_0__1 )
            // InternalDockerCompose.g:6120:2: rule__Network__Group_3_0__0__Impl rule__Network__Group_3_0__1
            {
            pushFollow(FOLLOW_34);
            rule__Network__Group_3_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_0__0"


    // $ANTLR start "rule__Network__Group_3_0__0__Impl"
    // InternalDockerCompose.g:6127:1: rule__Network__Group_3_0__0__Impl : ( '{' ) ;
    public final void rule__Network__Group_3_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6131:1: ( ( '{' ) )
            // InternalDockerCompose.g:6132:1: ( '{' )
            {
            // InternalDockerCompose.g:6132:1: ( '{' )
            // InternalDockerCompose.g:6133:2: '{'
            {
             before(grammarAccess.getNetworkAccess().getLeftCurlyBracketKeyword_3_0_0()); 
            match(input,75,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getLeftCurlyBracketKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_0__0__Impl"


    // $ANTLR start "rule__Network__Group_3_0__1"
    // InternalDockerCompose.g:6142:1: rule__Network__Group_3_0__1 : rule__Network__Group_3_0__1__Impl ;
    public final void rule__Network__Group_3_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6146:1: ( rule__Network__Group_3_0__1__Impl )
            // InternalDockerCompose.g:6147:2: rule__Network__Group_3_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_0__1"


    // $ANTLR start "rule__Network__Group_3_0__1__Impl"
    // InternalDockerCompose.g:6153:1: rule__Network__Group_3_0__1__Impl : ( '}' ) ;
    public final void rule__Network__Group_3_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6157:1: ( ( '}' ) )
            // InternalDockerCompose.g:6158:1: ( '}' )
            {
            // InternalDockerCompose.g:6158:1: ( '}' )
            // InternalDockerCompose.g:6159:2: '}'
            {
             before(grammarAccess.getNetworkAccess().getRightCurlyBracketKeyword_3_0_1()); 
            match(input,76,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getRightCurlyBracketKeyword_3_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_0__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_0__0"
    // InternalDockerCompose.g:6169:1: rule__Network__Group_3_1_0__0 : rule__Network__Group_3_1_0__0__Impl rule__Network__Group_3_1_0__1 ;
    public final void rule__Network__Group_3_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6173:1: ( rule__Network__Group_3_1_0__0__Impl rule__Network__Group_3_1_0__1 )
            // InternalDockerCompose.g:6174:2: rule__Network__Group_3_1_0__0__Impl rule__Network__Group_3_1_0__1
            {
            pushFollow(FOLLOW_6);
            rule__Network__Group_3_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_0__0"


    // $ANTLR start "rule__Network__Group_3_1_0__0__Impl"
    // InternalDockerCompose.g:6181:1: rule__Network__Group_3_1_0__0__Impl : ( 'driver:' ) ;
    public final void rule__Network__Group_3_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6185:1: ( ( 'driver:' ) )
            // InternalDockerCompose.g:6186:1: ( 'driver:' )
            {
            // InternalDockerCompose.g:6186:1: ( 'driver:' )
            // InternalDockerCompose.g:6187:2: 'driver:'
            {
             before(grammarAccess.getNetworkAccess().getDriverKeyword_3_1_0_0()); 
            match(input,77,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getDriverKeyword_3_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_0__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_0__1"
    // InternalDockerCompose.g:6196:1: rule__Network__Group_3_1_0__1 : rule__Network__Group_3_1_0__1__Impl ;
    public final void rule__Network__Group_3_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6200:1: ( rule__Network__Group_3_1_0__1__Impl )
            // InternalDockerCompose.g:6201:2: rule__Network__Group_3_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_0__1"


    // $ANTLR start "rule__Network__Group_3_1_0__1__Impl"
    // InternalDockerCompose.g:6207:1: rule__Network__Group_3_1_0__1__Impl : ( ( rule__Network__DriverAssignment_3_1_0_1 ) ) ;
    public final void rule__Network__Group_3_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6211:1: ( ( ( rule__Network__DriverAssignment_3_1_0_1 ) ) )
            // InternalDockerCompose.g:6212:1: ( ( rule__Network__DriverAssignment_3_1_0_1 ) )
            {
            // InternalDockerCompose.g:6212:1: ( ( rule__Network__DriverAssignment_3_1_0_1 ) )
            // InternalDockerCompose.g:6213:2: ( rule__Network__DriverAssignment_3_1_0_1 )
            {
             before(grammarAccess.getNetworkAccess().getDriverAssignment_3_1_0_1()); 
            // InternalDockerCompose.g:6214:2: ( rule__Network__DriverAssignment_3_1_0_1 )
            // InternalDockerCompose.g:6214:3: rule__Network__DriverAssignment_3_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__DriverAssignment_3_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getDriverAssignment_3_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_0__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_1__0"
    // InternalDockerCompose.g:6223:1: rule__Network__Group_3_1_1__0 : rule__Network__Group_3_1_1__0__Impl rule__Network__Group_3_1_1__1 ;
    public final void rule__Network__Group_3_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6227:1: ( rule__Network__Group_3_1_1__0__Impl rule__Network__Group_3_1_1__1 )
            // InternalDockerCompose.g:6228:2: rule__Network__Group_3_1_1__0__Impl rule__Network__Group_3_1_1__1
            {
            pushFollow(FOLLOW_12);
            rule__Network__Group_3_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_1__0"


    // $ANTLR start "rule__Network__Group_3_1_1__0__Impl"
    // InternalDockerCompose.g:6235:1: rule__Network__Group_3_1_1__0__Impl : ( 'attachable:' ) ;
    public final void rule__Network__Group_3_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6239:1: ( ( 'attachable:' ) )
            // InternalDockerCompose.g:6240:1: ( 'attachable:' )
            {
            // InternalDockerCompose.g:6240:1: ( 'attachable:' )
            // InternalDockerCompose.g:6241:2: 'attachable:'
            {
             before(grammarAccess.getNetworkAccess().getAttachableKeyword_3_1_1_0()); 
            match(input,78,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getAttachableKeyword_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_1__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_1__1"
    // InternalDockerCompose.g:6250:1: rule__Network__Group_3_1_1__1 : rule__Network__Group_3_1_1__1__Impl ;
    public final void rule__Network__Group_3_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6254:1: ( rule__Network__Group_3_1_1__1__Impl )
            // InternalDockerCompose.g:6255:2: rule__Network__Group_3_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_1__1"


    // $ANTLR start "rule__Network__Group_3_1_1__1__Impl"
    // InternalDockerCompose.g:6261:1: rule__Network__Group_3_1_1__1__Impl : ( ( rule__Network__AttachableAssignment_3_1_1_1 ) ) ;
    public final void rule__Network__Group_3_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6265:1: ( ( ( rule__Network__AttachableAssignment_3_1_1_1 ) ) )
            // InternalDockerCompose.g:6266:1: ( ( rule__Network__AttachableAssignment_3_1_1_1 ) )
            {
            // InternalDockerCompose.g:6266:1: ( ( rule__Network__AttachableAssignment_3_1_1_1 ) )
            // InternalDockerCompose.g:6267:2: ( rule__Network__AttachableAssignment_3_1_1_1 )
            {
             before(grammarAccess.getNetworkAccess().getAttachableAssignment_3_1_1_1()); 
            // InternalDockerCompose.g:6268:2: ( rule__Network__AttachableAssignment_3_1_1_1 )
            // InternalDockerCompose.g:6268:3: rule__Network__AttachableAssignment_3_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__AttachableAssignment_3_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getAttachableAssignment_3_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_1__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_2__0"
    // InternalDockerCompose.g:6277:1: rule__Network__Group_3_1_2__0 : rule__Network__Group_3_1_2__0__Impl rule__Network__Group_3_1_2__1 ;
    public final void rule__Network__Group_3_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6281:1: ( rule__Network__Group_3_1_2__0__Impl rule__Network__Group_3_1_2__1 )
            // InternalDockerCompose.g:6282:2: rule__Network__Group_3_1_2__0__Impl rule__Network__Group_3_1_2__1
            {
            pushFollow(FOLLOW_12);
            rule__Network__Group_3_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_2__0"


    // $ANTLR start "rule__Network__Group_3_1_2__0__Impl"
    // InternalDockerCompose.g:6289:1: rule__Network__Group_3_1_2__0__Impl : ( 'enable_ipv6:' ) ;
    public final void rule__Network__Group_3_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6293:1: ( ( 'enable_ipv6:' ) )
            // InternalDockerCompose.g:6294:1: ( 'enable_ipv6:' )
            {
            // InternalDockerCompose.g:6294:1: ( 'enable_ipv6:' )
            // InternalDockerCompose.g:6295:2: 'enable_ipv6:'
            {
             before(grammarAccess.getNetworkAccess().getEnable_ipv6Keyword_3_1_2_0()); 
            match(input,79,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getEnable_ipv6Keyword_3_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_2__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_2__1"
    // InternalDockerCompose.g:6304:1: rule__Network__Group_3_1_2__1 : rule__Network__Group_3_1_2__1__Impl ;
    public final void rule__Network__Group_3_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6308:1: ( rule__Network__Group_3_1_2__1__Impl )
            // InternalDockerCompose.g:6309:2: rule__Network__Group_3_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_2__1"


    // $ANTLR start "rule__Network__Group_3_1_2__1__Impl"
    // InternalDockerCompose.g:6315:1: rule__Network__Group_3_1_2__1__Impl : ( ( rule__Network__Enable_ipv6Assignment_3_1_2_1 ) ) ;
    public final void rule__Network__Group_3_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6319:1: ( ( ( rule__Network__Enable_ipv6Assignment_3_1_2_1 ) ) )
            // InternalDockerCompose.g:6320:1: ( ( rule__Network__Enable_ipv6Assignment_3_1_2_1 ) )
            {
            // InternalDockerCompose.g:6320:1: ( ( rule__Network__Enable_ipv6Assignment_3_1_2_1 ) )
            // InternalDockerCompose.g:6321:2: ( rule__Network__Enable_ipv6Assignment_3_1_2_1 )
            {
             before(grammarAccess.getNetworkAccess().getEnable_ipv6Assignment_3_1_2_1()); 
            // InternalDockerCompose.g:6322:2: ( rule__Network__Enable_ipv6Assignment_3_1_2_1 )
            // InternalDockerCompose.g:6322:3: rule__Network__Enable_ipv6Assignment_3_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__Enable_ipv6Assignment_3_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getEnable_ipv6Assignment_3_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_2__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_3__0"
    // InternalDockerCompose.g:6331:1: rule__Network__Group_3_1_3__0 : rule__Network__Group_3_1_3__0__Impl rule__Network__Group_3_1_3__1 ;
    public final void rule__Network__Group_3_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6335:1: ( rule__Network__Group_3_1_3__0__Impl rule__Network__Group_3_1_3__1 )
            // InternalDockerCompose.g:6336:2: rule__Network__Group_3_1_3__0__Impl rule__Network__Group_3_1_3__1
            {
            pushFollow(FOLLOW_12);
            rule__Network__Group_3_1_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_3__0"


    // $ANTLR start "rule__Network__Group_3_1_3__0__Impl"
    // InternalDockerCompose.g:6343:1: rule__Network__Group_3_1_3__0__Impl : ( 'internal:' ) ;
    public final void rule__Network__Group_3_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6347:1: ( ( 'internal:' ) )
            // InternalDockerCompose.g:6348:1: ( 'internal:' )
            {
            // InternalDockerCompose.g:6348:1: ( 'internal:' )
            // InternalDockerCompose.g:6349:2: 'internal:'
            {
             before(grammarAccess.getNetworkAccess().getInternalKeyword_3_1_3_0()); 
            match(input,80,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getInternalKeyword_3_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_3__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_3__1"
    // InternalDockerCompose.g:6358:1: rule__Network__Group_3_1_3__1 : rule__Network__Group_3_1_3__1__Impl ;
    public final void rule__Network__Group_3_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6362:1: ( rule__Network__Group_3_1_3__1__Impl )
            // InternalDockerCompose.g:6363:2: rule__Network__Group_3_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_3__1"


    // $ANTLR start "rule__Network__Group_3_1_3__1__Impl"
    // InternalDockerCompose.g:6369:1: rule__Network__Group_3_1_3__1__Impl : ( ( rule__Network__InternalAssignment_3_1_3_1 ) ) ;
    public final void rule__Network__Group_3_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6373:1: ( ( ( rule__Network__InternalAssignment_3_1_3_1 ) ) )
            // InternalDockerCompose.g:6374:1: ( ( rule__Network__InternalAssignment_3_1_3_1 ) )
            {
            // InternalDockerCompose.g:6374:1: ( ( rule__Network__InternalAssignment_3_1_3_1 ) )
            // InternalDockerCompose.g:6375:2: ( rule__Network__InternalAssignment_3_1_3_1 )
            {
             before(grammarAccess.getNetworkAccess().getInternalAssignment_3_1_3_1()); 
            // InternalDockerCompose.g:6376:2: ( rule__Network__InternalAssignment_3_1_3_1 )
            // InternalDockerCompose.g:6376:3: rule__Network__InternalAssignment_3_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__InternalAssignment_3_1_3_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getInternalAssignment_3_1_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_3__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_4__0"
    // InternalDockerCompose.g:6385:1: rule__Network__Group_3_1_4__0 : rule__Network__Group_3_1_4__0__Impl rule__Network__Group_3_1_4__1 ;
    public final void rule__Network__Group_3_1_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6389:1: ( rule__Network__Group_3_1_4__0__Impl rule__Network__Group_3_1_4__1 )
            // InternalDockerCompose.g:6390:2: rule__Network__Group_3_1_4__0__Impl rule__Network__Group_3_1_4__1
            {
            pushFollow(FOLLOW_12);
            rule__Network__Group_3_1_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_4__0"


    // $ANTLR start "rule__Network__Group_3_1_4__0__Impl"
    // InternalDockerCompose.g:6397:1: rule__Network__Group_3_1_4__0__Impl : ( 'external:' ) ;
    public final void rule__Network__Group_3_1_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6401:1: ( ( 'external:' ) )
            // InternalDockerCompose.g:6402:1: ( 'external:' )
            {
            // InternalDockerCompose.g:6402:1: ( 'external:' )
            // InternalDockerCompose.g:6403:2: 'external:'
            {
             before(grammarAccess.getNetworkAccess().getExternalKeyword_3_1_4_0()); 
            match(input,81,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getExternalKeyword_3_1_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_4__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_4__1"
    // InternalDockerCompose.g:6412:1: rule__Network__Group_3_1_4__1 : rule__Network__Group_3_1_4__1__Impl ;
    public final void rule__Network__Group_3_1_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6416:1: ( rule__Network__Group_3_1_4__1__Impl )
            // InternalDockerCompose.g:6417:2: rule__Network__Group_3_1_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_4__1"


    // $ANTLR start "rule__Network__Group_3_1_4__1__Impl"
    // InternalDockerCompose.g:6423:1: rule__Network__Group_3_1_4__1__Impl : ( ( rule__Network__ExternalAssignment_3_1_4_1 ) ) ;
    public final void rule__Network__Group_3_1_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6427:1: ( ( ( rule__Network__ExternalAssignment_3_1_4_1 ) ) )
            // InternalDockerCompose.g:6428:1: ( ( rule__Network__ExternalAssignment_3_1_4_1 ) )
            {
            // InternalDockerCompose.g:6428:1: ( ( rule__Network__ExternalAssignment_3_1_4_1 ) )
            // InternalDockerCompose.g:6429:2: ( rule__Network__ExternalAssignment_3_1_4_1 )
            {
             before(grammarAccess.getNetworkAccess().getExternalAssignment_3_1_4_1()); 
            // InternalDockerCompose.g:6430:2: ( rule__Network__ExternalAssignment_3_1_4_1 )
            // InternalDockerCompose.g:6430:3: rule__Network__ExternalAssignment_3_1_4_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__ExternalAssignment_3_1_4_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getExternalAssignment_3_1_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_4__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_5__0"
    // InternalDockerCompose.g:6439:1: rule__Network__Group_3_1_5__0 : rule__Network__Group_3_1_5__0__Impl rule__Network__Group_3_1_5__1 ;
    public final void rule__Network__Group_3_1_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6443:1: ( rule__Network__Group_3_1_5__0__Impl rule__Network__Group_3_1_5__1 )
            // InternalDockerCompose.g:6444:2: rule__Network__Group_3_1_5__0__Impl rule__Network__Group_3_1_5__1
            {
            pushFollow(FOLLOW_6);
            rule__Network__Group_3_1_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_5__0"


    // $ANTLR start "rule__Network__Group_3_1_5__0__Impl"
    // InternalDockerCompose.g:6451:1: rule__Network__Group_3_1_5__0__Impl : ( 'name:' ) ;
    public final void rule__Network__Group_3_1_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6455:1: ( ( 'name:' ) )
            // InternalDockerCompose.g:6456:1: ( 'name:' )
            {
            // InternalDockerCompose.g:6456:1: ( 'name:' )
            // InternalDockerCompose.g:6457:2: 'name:'
            {
             before(grammarAccess.getNetworkAccess().getNameKeyword_3_1_5_0()); 
            match(input,82,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getNameKeyword_3_1_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_5__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_5__1"
    // InternalDockerCompose.g:6466:1: rule__Network__Group_3_1_5__1 : rule__Network__Group_3_1_5__1__Impl ;
    public final void rule__Network__Group_3_1_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6470:1: ( rule__Network__Group_3_1_5__1__Impl )
            // InternalDockerCompose.g:6471:2: rule__Network__Group_3_1_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_5__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_5__1"


    // $ANTLR start "rule__Network__Group_3_1_5__1__Impl"
    // InternalDockerCompose.g:6477:1: rule__Network__Group_3_1_5__1__Impl : ( ( rule__Network__Network_nameAssignment_3_1_5_1 ) ) ;
    public final void rule__Network__Group_3_1_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6481:1: ( ( ( rule__Network__Network_nameAssignment_3_1_5_1 ) ) )
            // InternalDockerCompose.g:6482:1: ( ( rule__Network__Network_nameAssignment_3_1_5_1 ) )
            {
            // InternalDockerCompose.g:6482:1: ( ( rule__Network__Network_nameAssignment_3_1_5_1 ) )
            // InternalDockerCompose.g:6483:2: ( rule__Network__Network_nameAssignment_3_1_5_1 )
            {
             before(grammarAccess.getNetworkAccess().getNetwork_nameAssignment_3_1_5_1()); 
            // InternalDockerCompose.g:6484:2: ( rule__Network__Network_nameAssignment_3_1_5_1 )
            // InternalDockerCompose.g:6484:3: rule__Network__Network_nameAssignment_3_1_5_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__Network_nameAssignment_3_1_5_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getNetwork_nameAssignment_3_1_5_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_5__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_6__0"
    // InternalDockerCompose.g:6493:1: rule__Network__Group_3_1_6__0 : rule__Network__Group_3_1_6__0__Impl rule__Network__Group_3_1_6__1 ;
    public final void rule__Network__Group_3_1_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6497:1: ( rule__Network__Group_3_1_6__0__Impl rule__Network__Group_3_1_6__1 )
            // InternalDockerCompose.g:6498:2: rule__Network__Group_3_1_6__0__Impl rule__Network__Group_3_1_6__1
            {
            pushFollow(FOLLOW_6);
            rule__Network__Group_3_1_6__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_6__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_6__0"


    // $ANTLR start "rule__Network__Group_3_1_6__0__Impl"
    // InternalDockerCompose.g:6505:1: rule__Network__Group_3_1_6__0__Impl : ( 'labels:' ) ;
    public final void rule__Network__Group_3_1_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6509:1: ( ( 'labels:' ) )
            // InternalDockerCompose.g:6510:1: ( 'labels:' )
            {
            // InternalDockerCompose.g:6510:1: ( 'labels:' )
            // InternalDockerCompose.g:6511:2: 'labels:'
            {
             before(grammarAccess.getNetworkAccess().getLabelsKeyword_3_1_6_0()); 
            match(input,83,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getLabelsKeyword_3_1_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_6__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_6__1"
    // InternalDockerCompose.g:6520:1: rule__Network__Group_3_1_6__1 : rule__Network__Group_3_1_6__1__Impl ;
    public final void rule__Network__Group_3_1_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6524:1: ( rule__Network__Group_3_1_6__1__Impl )
            // InternalDockerCompose.g:6525:2: rule__Network__Group_3_1_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_6__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_6__1"


    // $ANTLR start "rule__Network__Group_3_1_6__1__Impl"
    // InternalDockerCompose.g:6531:1: rule__Network__Group_3_1_6__1__Impl : ( ( ( rule__Network__LabelsAssignment_3_1_6_1 ) ) ( ( rule__Network__LabelsAssignment_3_1_6_1 )* ) ) ;
    public final void rule__Network__Group_3_1_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6535:1: ( ( ( ( rule__Network__LabelsAssignment_3_1_6_1 ) ) ( ( rule__Network__LabelsAssignment_3_1_6_1 )* ) ) )
            // InternalDockerCompose.g:6536:1: ( ( ( rule__Network__LabelsAssignment_3_1_6_1 ) ) ( ( rule__Network__LabelsAssignment_3_1_6_1 )* ) )
            {
            // InternalDockerCompose.g:6536:1: ( ( ( rule__Network__LabelsAssignment_3_1_6_1 ) ) ( ( rule__Network__LabelsAssignment_3_1_6_1 )* ) )
            // InternalDockerCompose.g:6537:2: ( ( rule__Network__LabelsAssignment_3_1_6_1 ) ) ( ( rule__Network__LabelsAssignment_3_1_6_1 )* )
            {
            // InternalDockerCompose.g:6537:2: ( ( rule__Network__LabelsAssignment_3_1_6_1 ) )
            // InternalDockerCompose.g:6538:3: ( rule__Network__LabelsAssignment_3_1_6_1 )
            {
             before(grammarAccess.getNetworkAccess().getLabelsAssignment_3_1_6_1()); 
            // InternalDockerCompose.g:6539:3: ( rule__Network__LabelsAssignment_3_1_6_1 )
            // InternalDockerCompose.g:6539:4: rule__Network__LabelsAssignment_3_1_6_1
            {
            pushFollow(FOLLOW_4);
            rule__Network__LabelsAssignment_3_1_6_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getLabelsAssignment_3_1_6_1()); 

            }

            // InternalDockerCompose.g:6542:2: ( ( rule__Network__LabelsAssignment_3_1_6_1 )* )
            // InternalDockerCompose.g:6543:3: ( rule__Network__LabelsAssignment_3_1_6_1 )*
            {
             before(grammarAccess.getNetworkAccess().getLabelsAssignment_3_1_6_1()); 
            // InternalDockerCompose.g:6544:3: ( rule__Network__LabelsAssignment_3_1_6_1 )*
            loop40:
            do {
                int alt40=2;
                int LA40_0 = input.LA(1);

                if ( (LA40_0==RULE_STRING) ) {
                    int LA40_2 = input.LA(2);

                    if ( (LA40_2==43) ) {
                        int LA40_4 = input.LA(3);

                        if ( (LA40_4==RULE_STRING) ) {
                            int LA40_5 = input.LA(4);

                            if ( (LA40_5==EOF||(LA40_5>=RULE_STRING && LA40_5<=RULE_ID)||(LA40_5>=37 && LA40_5<=42)||(LA40_5>=77 && LA40_5<=85)) ) {
                                alt40=1;
                            }


                        }
                        else if ( (LA40_4==RULE_ID) ) {
                            int LA40_6 = input.LA(4);

                            if ( (LA40_6==EOF||(LA40_6>=RULE_STRING && LA40_6<=RULE_ID)||(LA40_6>=37 && LA40_6<=42)||(LA40_6>=77 && LA40_6<=85)) ) {
                                alt40=1;
                            }


                        }


                    }


                }
                else if ( (LA40_0==RULE_ID) ) {
                    int LA40_3 = input.LA(2);

                    if ( (LA40_3==43) ) {
                        int LA40_4 = input.LA(3);

                        if ( (LA40_4==RULE_STRING) ) {
                            int LA40_5 = input.LA(4);

                            if ( (LA40_5==EOF||(LA40_5>=RULE_STRING && LA40_5<=RULE_ID)||(LA40_5>=37 && LA40_5<=42)||(LA40_5>=77 && LA40_5<=85)) ) {
                                alt40=1;
                            }


                        }
                        else if ( (LA40_4==RULE_ID) ) {
                            int LA40_6 = input.LA(4);

                            if ( (LA40_6==EOF||(LA40_6>=RULE_STRING && LA40_6<=RULE_ID)||(LA40_6>=37 && LA40_6<=42)||(LA40_6>=77 && LA40_6<=85)) ) {
                                alt40=1;
                            }


                        }


                    }


                }


                switch (alt40) {
            	case 1 :
            	    // InternalDockerCompose.g:6544:4: rule__Network__LabelsAssignment_3_1_6_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__Network__LabelsAssignment_3_1_6_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);

             after(grammarAccess.getNetworkAccess().getLabelsAssignment_3_1_6_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_6__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_7__0"
    // InternalDockerCompose.g:6554:1: rule__Network__Group_3_1_7__0 : rule__Network__Group_3_1_7__0__Impl rule__Network__Group_3_1_7__1 ;
    public final void rule__Network__Group_3_1_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6558:1: ( rule__Network__Group_3_1_7__0__Impl rule__Network__Group_3_1_7__1 )
            // InternalDockerCompose.g:6559:2: rule__Network__Group_3_1_7__0__Impl rule__Network__Group_3_1_7__1
            {
            pushFollow(FOLLOW_6);
            rule__Network__Group_3_1_7__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_7__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_7__0"


    // $ANTLR start "rule__Network__Group_3_1_7__0__Impl"
    // InternalDockerCompose.g:6566:1: rule__Network__Group_3_1_7__0__Impl : ( 'driver_opts:' ) ;
    public final void rule__Network__Group_3_1_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6570:1: ( ( 'driver_opts:' ) )
            // InternalDockerCompose.g:6571:1: ( 'driver_opts:' )
            {
            // InternalDockerCompose.g:6571:1: ( 'driver_opts:' )
            // InternalDockerCompose.g:6572:2: 'driver_opts:'
            {
             before(grammarAccess.getNetworkAccess().getDriver_optsKeyword_3_1_7_0()); 
            match(input,84,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getDriver_optsKeyword_3_1_7_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_7__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_7__1"
    // InternalDockerCompose.g:6581:1: rule__Network__Group_3_1_7__1 : rule__Network__Group_3_1_7__1__Impl ;
    public final void rule__Network__Group_3_1_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6585:1: ( rule__Network__Group_3_1_7__1__Impl )
            // InternalDockerCompose.g:6586:2: rule__Network__Group_3_1_7__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_7__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_7__1"


    // $ANTLR start "rule__Network__Group_3_1_7__1__Impl"
    // InternalDockerCompose.g:6592:1: rule__Network__Group_3_1_7__1__Impl : ( ( ( rule__Network__Driver_optsAssignment_3_1_7_1 ) ) ( ( rule__Network__Driver_optsAssignment_3_1_7_1 )* ) ) ;
    public final void rule__Network__Group_3_1_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6596:1: ( ( ( ( rule__Network__Driver_optsAssignment_3_1_7_1 ) ) ( ( rule__Network__Driver_optsAssignment_3_1_7_1 )* ) ) )
            // InternalDockerCompose.g:6597:1: ( ( ( rule__Network__Driver_optsAssignment_3_1_7_1 ) ) ( ( rule__Network__Driver_optsAssignment_3_1_7_1 )* ) )
            {
            // InternalDockerCompose.g:6597:1: ( ( ( rule__Network__Driver_optsAssignment_3_1_7_1 ) ) ( ( rule__Network__Driver_optsAssignment_3_1_7_1 )* ) )
            // InternalDockerCompose.g:6598:2: ( ( rule__Network__Driver_optsAssignment_3_1_7_1 ) ) ( ( rule__Network__Driver_optsAssignment_3_1_7_1 )* )
            {
            // InternalDockerCompose.g:6598:2: ( ( rule__Network__Driver_optsAssignment_3_1_7_1 ) )
            // InternalDockerCompose.g:6599:3: ( rule__Network__Driver_optsAssignment_3_1_7_1 )
            {
             before(grammarAccess.getNetworkAccess().getDriver_optsAssignment_3_1_7_1()); 
            // InternalDockerCompose.g:6600:3: ( rule__Network__Driver_optsAssignment_3_1_7_1 )
            // InternalDockerCompose.g:6600:4: rule__Network__Driver_optsAssignment_3_1_7_1
            {
            pushFollow(FOLLOW_4);
            rule__Network__Driver_optsAssignment_3_1_7_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getDriver_optsAssignment_3_1_7_1()); 

            }

            // InternalDockerCompose.g:6603:2: ( ( rule__Network__Driver_optsAssignment_3_1_7_1 )* )
            // InternalDockerCompose.g:6604:3: ( rule__Network__Driver_optsAssignment_3_1_7_1 )*
            {
             before(grammarAccess.getNetworkAccess().getDriver_optsAssignment_3_1_7_1()); 
            // InternalDockerCompose.g:6605:3: ( rule__Network__Driver_optsAssignment_3_1_7_1 )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==RULE_STRING) ) {
                    int LA41_2 = input.LA(2);

                    if ( (LA41_2==43) ) {
                        int LA41_4 = input.LA(3);

                        if ( (LA41_4==RULE_STRING) ) {
                            int LA41_5 = input.LA(4);

                            if ( (LA41_5==EOF||(LA41_5>=RULE_STRING && LA41_5<=RULE_ID)||(LA41_5>=37 && LA41_5<=42)||(LA41_5>=77 && LA41_5<=85)) ) {
                                alt41=1;
                            }


                        }
                        else if ( (LA41_4==RULE_ID) ) {
                            int LA41_6 = input.LA(4);

                            if ( (LA41_6==EOF||(LA41_6>=RULE_STRING && LA41_6<=RULE_ID)||(LA41_6>=37 && LA41_6<=42)||(LA41_6>=77 && LA41_6<=85)) ) {
                                alt41=1;
                            }


                        }


                    }


                }
                else if ( (LA41_0==RULE_ID) ) {
                    int LA41_3 = input.LA(2);

                    if ( (LA41_3==43) ) {
                        int LA41_4 = input.LA(3);

                        if ( (LA41_4==RULE_STRING) ) {
                            int LA41_5 = input.LA(4);

                            if ( (LA41_5==EOF||(LA41_5>=RULE_STRING && LA41_5<=RULE_ID)||(LA41_5>=37 && LA41_5<=42)||(LA41_5>=77 && LA41_5<=85)) ) {
                                alt41=1;
                            }


                        }
                        else if ( (LA41_4==RULE_ID) ) {
                            int LA41_6 = input.LA(4);

                            if ( (LA41_6==EOF||(LA41_6>=RULE_STRING && LA41_6<=RULE_ID)||(LA41_6>=37 && LA41_6<=42)||(LA41_6>=77 && LA41_6<=85)) ) {
                                alt41=1;
                            }


                        }


                    }


                }


                switch (alt41) {
            	case 1 :
            	    // InternalDockerCompose.g:6605:4: rule__Network__Driver_optsAssignment_3_1_7_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__Network__Driver_optsAssignment_3_1_7_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);

             after(grammarAccess.getNetworkAccess().getDriver_optsAssignment_3_1_7_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_7__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_8__0"
    // InternalDockerCompose.g:6615:1: rule__Network__Group_3_1_8__0 : rule__Network__Group_3_1_8__0__Impl rule__Network__Group_3_1_8__1 ;
    public final void rule__Network__Group_3_1_8__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6619:1: ( rule__Network__Group_3_1_8__0__Impl rule__Network__Group_3_1_8__1 )
            // InternalDockerCompose.g:6620:2: rule__Network__Group_3_1_8__0__Impl rule__Network__Group_3_1_8__1
            {
            pushFollow(FOLLOW_35);
            rule__Network__Group_3_1_8__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_8__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_8__0"


    // $ANTLR start "rule__Network__Group_3_1_8__0__Impl"
    // InternalDockerCompose.g:6627:1: rule__Network__Group_3_1_8__0__Impl : ( 'ipam:' ) ;
    public final void rule__Network__Group_3_1_8__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6631:1: ( ( 'ipam:' ) )
            // InternalDockerCompose.g:6632:1: ( 'ipam:' )
            {
            // InternalDockerCompose.g:6632:1: ( 'ipam:' )
            // InternalDockerCompose.g:6633:2: 'ipam:'
            {
             before(grammarAccess.getNetworkAccess().getIpamKeyword_3_1_8_0()); 
            match(input,85,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getIpamKeyword_3_1_8_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_8__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_8__1"
    // InternalDockerCompose.g:6642:1: rule__Network__Group_3_1_8__1 : rule__Network__Group_3_1_8__1__Impl ;
    public final void rule__Network__Group_3_1_8__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6646:1: ( rule__Network__Group_3_1_8__1__Impl )
            // InternalDockerCompose.g:6647:2: rule__Network__Group_3_1_8__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_8__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_8__1"


    // $ANTLR start "rule__Network__Group_3_1_8__1__Impl"
    // InternalDockerCompose.g:6653:1: rule__Network__Group_3_1_8__1__Impl : ( ( rule__Network__IpamAssignment_3_1_8_1 ) ) ;
    public final void rule__Network__Group_3_1_8__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6657:1: ( ( ( rule__Network__IpamAssignment_3_1_8_1 ) ) )
            // InternalDockerCompose.g:6658:1: ( ( rule__Network__IpamAssignment_3_1_8_1 ) )
            {
            // InternalDockerCompose.g:6658:1: ( ( rule__Network__IpamAssignment_3_1_8_1 ) )
            // InternalDockerCompose.g:6659:2: ( rule__Network__IpamAssignment_3_1_8_1 )
            {
             before(grammarAccess.getNetworkAccess().getIpamAssignment_3_1_8_1()); 
            // InternalDockerCompose.g:6660:2: ( rule__Network__IpamAssignment_3_1_8_1 )
            // InternalDockerCompose.g:6660:3: rule__Network__IpamAssignment_3_1_8_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__IpamAssignment_3_1_8_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getIpamAssignment_3_1_8_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_8__1__Impl"


    // $ANTLR start "rule__Volume__Group__0"
    // InternalDockerCompose.g:6669:1: rule__Volume__Group__0 : rule__Volume__Group__0__Impl rule__Volume__Group__1 ;
    public final void rule__Volume__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6673:1: ( rule__Volume__Group__0__Impl rule__Volume__Group__1 )
            // InternalDockerCompose.g:6674:2: rule__Volume__Group__0__Impl rule__Volume__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__Volume__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__0"


    // $ANTLR start "rule__Volume__Group__0__Impl"
    // InternalDockerCompose.g:6681:1: rule__Volume__Group__0__Impl : ( () ) ;
    public final void rule__Volume__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6685:1: ( ( () ) )
            // InternalDockerCompose.g:6686:1: ( () )
            {
            // InternalDockerCompose.g:6686:1: ( () )
            // InternalDockerCompose.g:6687:2: ()
            {
             before(grammarAccess.getVolumeAccess().getVolumeAction_0()); 
            // InternalDockerCompose.g:6688:2: ()
            // InternalDockerCompose.g:6688:3: 
            {
            }

             after(grammarAccess.getVolumeAccess().getVolumeAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__0__Impl"


    // $ANTLR start "rule__Volume__Group__1"
    // InternalDockerCompose.g:6696:1: rule__Volume__Group__1 : rule__Volume__Group__1__Impl rule__Volume__Group__2 ;
    public final void rule__Volume__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6700:1: ( rule__Volume__Group__1__Impl rule__Volume__Group__2 )
            // InternalDockerCompose.g:6701:2: rule__Volume__Group__1__Impl rule__Volume__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__Volume__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__1"


    // $ANTLR start "rule__Volume__Group__1__Impl"
    // InternalDockerCompose.g:6708:1: rule__Volume__Group__1__Impl : ( ( rule__Volume__NameAssignment_1 ) ) ;
    public final void rule__Volume__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6712:1: ( ( ( rule__Volume__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:6713:1: ( ( rule__Volume__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:6713:1: ( ( rule__Volume__NameAssignment_1 ) )
            // InternalDockerCompose.g:6714:2: ( rule__Volume__NameAssignment_1 )
            {
             before(grammarAccess.getVolumeAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:6715:2: ( rule__Volume__NameAssignment_1 )
            // InternalDockerCompose.g:6715:3: rule__Volume__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Volume__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__1__Impl"


    // $ANTLR start "rule__Volume__Group__2"
    // InternalDockerCompose.g:6723:1: rule__Volume__Group__2 : rule__Volume__Group__2__Impl rule__Volume__Group__3 ;
    public final void rule__Volume__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6727:1: ( rule__Volume__Group__2__Impl rule__Volume__Group__3 )
            // InternalDockerCompose.g:6728:2: rule__Volume__Group__2__Impl rule__Volume__Group__3
            {
            pushFollow(FOLLOW_36);
            rule__Volume__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__2"


    // $ANTLR start "rule__Volume__Group__2__Impl"
    // InternalDockerCompose.g:6735:1: rule__Volume__Group__2__Impl : ( ':' ) ;
    public final void rule__Volume__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6739:1: ( ( ':' ) )
            // InternalDockerCompose.g:6740:1: ( ':' )
            {
            // InternalDockerCompose.g:6740:1: ( ':' )
            // InternalDockerCompose.g:6741:2: ':'
            {
             before(grammarAccess.getVolumeAccess().getColonKeyword_2()); 
            match(input,43,FOLLOW_2); 
             after(grammarAccess.getVolumeAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__2__Impl"


    // $ANTLR start "rule__Volume__Group__3"
    // InternalDockerCompose.g:6750:1: rule__Volume__Group__3 : rule__Volume__Group__3__Impl ;
    public final void rule__Volume__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6754:1: ( rule__Volume__Group__3__Impl )
            // InternalDockerCompose.g:6755:2: rule__Volume__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__3"


    // $ANTLR start "rule__Volume__Group__3__Impl"
    // InternalDockerCompose.g:6761:1: rule__Volume__Group__3__Impl : ( ( rule__Volume__UnorderedGroup_3 ) ) ;
    public final void rule__Volume__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6765:1: ( ( ( rule__Volume__UnorderedGroup_3 ) ) )
            // InternalDockerCompose.g:6766:1: ( ( rule__Volume__UnorderedGroup_3 ) )
            {
            // InternalDockerCompose.g:6766:1: ( ( rule__Volume__UnorderedGroup_3 ) )
            // InternalDockerCompose.g:6767:2: ( rule__Volume__UnorderedGroup_3 )
            {
             before(grammarAccess.getVolumeAccess().getUnorderedGroup_3()); 
            // InternalDockerCompose.g:6768:2: ( rule__Volume__UnorderedGroup_3 )
            // InternalDockerCompose.g:6768:3: rule__Volume__UnorderedGroup_3
            {
            pushFollow(FOLLOW_2);
            rule__Volume__UnorderedGroup_3();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getUnorderedGroup_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__3__Impl"


    // $ANTLR start "rule__Volume__Group_3_0__0"
    // InternalDockerCompose.g:6777:1: rule__Volume__Group_3_0__0 : rule__Volume__Group_3_0__0__Impl rule__Volume__Group_3_0__1 ;
    public final void rule__Volume__Group_3_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6781:1: ( rule__Volume__Group_3_0__0__Impl rule__Volume__Group_3_0__1 )
            // InternalDockerCompose.g:6782:2: rule__Volume__Group_3_0__0__Impl rule__Volume__Group_3_0__1
            {
            pushFollow(FOLLOW_12);
            rule__Volume__Group_3_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_0__0"


    // $ANTLR start "rule__Volume__Group_3_0__0__Impl"
    // InternalDockerCompose.g:6789:1: rule__Volume__Group_3_0__0__Impl : ( 'external:' ) ;
    public final void rule__Volume__Group_3_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6793:1: ( ( 'external:' ) )
            // InternalDockerCompose.g:6794:1: ( 'external:' )
            {
            // InternalDockerCompose.g:6794:1: ( 'external:' )
            // InternalDockerCompose.g:6795:2: 'external:'
            {
             before(grammarAccess.getVolumeAccess().getExternalKeyword_3_0_0()); 
            match(input,81,FOLLOW_2); 
             after(grammarAccess.getVolumeAccess().getExternalKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_0__0__Impl"


    // $ANTLR start "rule__Volume__Group_3_0__1"
    // InternalDockerCompose.g:6804:1: rule__Volume__Group_3_0__1 : rule__Volume__Group_3_0__1__Impl ;
    public final void rule__Volume__Group_3_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6808:1: ( rule__Volume__Group_3_0__1__Impl )
            // InternalDockerCompose.g:6809:2: rule__Volume__Group_3_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_0__1"


    // $ANTLR start "rule__Volume__Group_3_0__1__Impl"
    // InternalDockerCompose.g:6815:1: rule__Volume__Group_3_0__1__Impl : ( ( rule__Volume__ExternalAssignment_3_0_1 ) ) ;
    public final void rule__Volume__Group_3_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6819:1: ( ( ( rule__Volume__ExternalAssignment_3_0_1 ) ) )
            // InternalDockerCompose.g:6820:1: ( ( rule__Volume__ExternalAssignment_3_0_1 ) )
            {
            // InternalDockerCompose.g:6820:1: ( ( rule__Volume__ExternalAssignment_3_0_1 ) )
            // InternalDockerCompose.g:6821:2: ( rule__Volume__ExternalAssignment_3_0_1 )
            {
             before(grammarAccess.getVolumeAccess().getExternalAssignment_3_0_1()); 
            // InternalDockerCompose.g:6822:2: ( rule__Volume__ExternalAssignment_3_0_1 )
            // InternalDockerCompose.g:6822:3: rule__Volume__ExternalAssignment_3_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Volume__ExternalAssignment_3_0_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getExternalAssignment_3_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_0__1__Impl"


    // $ANTLR start "rule__Volume__Group_3_1__0"
    // InternalDockerCompose.g:6831:1: rule__Volume__Group_3_1__0 : rule__Volume__Group_3_1__0__Impl rule__Volume__Group_3_1__1 ;
    public final void rule__Volume__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6835:1: ( rule__Volume__Group_3_1__0__Impl rule__Volume__Group_3_1__1 )
            // InternalDockerCompose.g:6836:2: rule__Volume__Group_3_1__0__Impl rule__Volume__Group_3_1__1
            {
            pushFollow(FOLLOW_6);
            rule__Volume__Group_3_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_1__0"


    // $ANTLR start "rule__Volume__Group_3_1__0__Impl"
    // InternalDockerCompose.g:6843:1: rule__Volume__Group_3_1__0__Impl : ( 'driver:' ) ;
    public final void rule__Volume__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6847:1: ( ( 'driver:' ) )
            // InternalDockerCompose.g:6848:1: ( 'driver:' )
            {
            // InternalDockerCompose.g:6848:1: ( 'driver:' )
            // InternalDockerCompose.g:6849:2: 'driver:'
            {
             before(grammarAccess.getVolumeAccess().getDriverKeyword_3_1_0()); 
            match(input,77,FOLLOW_2); 
             after(grammarAccess.getVolumeAccess().getDriverKeyword_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_1__0__Impl"


    // $ANTLR start "rule__Volume__Group_3_1__1"
    // InternalDockerCompose.g:6858:1: rule__Volume__Group_3_1__1 : rule__Volume__Group_3_1__1__Impl ;
    public final void rule__Volume__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6862:1: ( rule__Volume__Group_3_1__1__Impl )
            // InternalDockerCompose.g:6863:2: rule__Volume__Group_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_1__1"


    // $ANTLR start "rule__Volume__Group_3_1__1__Impl"
    // InternalDockerCompose.g:6869:1: rule__Volume__Group_3_1__1__Impl : ( ( rule__Volume__DriverAssignment_3_1_1 ) ) ;
    public final void rule__Volume__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6873:1: ( ( ( rule__Volume__DriverAssignment_3_1_1 ) ) )
            // InternalDockerCompose.g:6874:1: ( ( rule__Volume__DriverAssignment_3_1_1 ) )
            {
            // InternalDockerCompose.g:6874:1: ( ( rule__Volume__DriverAssignment_3_1_1 ) )
            // InternalDockerCompose.g:6875:2: ( rule__Volume__DriverAssignment_3_1_1 )
            {
             before(grammarAccess.getVolumeAccess().getDriverAssignment_3_1_1()); 
            // InternalDockerCompose.g:6876:2: ( rule__Volume__DriverAssignment_3_1_1 )
            // InternalDockerCompose.g:6876:3: rule__Volume__DriverAssignment_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Volume__DriverAssignment_3_1_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getDriverAssignment_3_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_1__1__Impl"


    // $ANTLR start "rule__Volume__Group_3_2__0"
    // InternalDockerCompose.g:6885:1: rule__Volume__Group_3_2__0 : rule__Volume__Group_3_2__0__Impl rule__Volume__Group_3_2__1 ;
    public final void rule__Volume__Group_3_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6889:1: ( rule__Volume__Group_3_2__0__Impl rule__Volume__Group_3_2__1 )
            // InternalDockerCompose.g:6890:2: rule__Volume__Group_3_2__0__Impl rule__Volume__Group_3_2__1
            {
            pushFollow(FOLLOW_6);
            rule__Volume__Group_3_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_2__0"


    // $ANTLR start "rule__Volume__Group_3_2__0__Impl"
    // InternalDockerCompose.g:6897:1: rule__Volume__Group_3_2__0__Impl : ( 'name:' ) ;
    public final void rule__Volume__Group_3_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6901:1: ( ( 'name:' ) )
            // InternalDockerCompose.g:6902:1: ( 'name:' )
            {
            // InternalDockerCompose.g:6902:1: ( 'name:' )
            // InternalDockerCompose.g:6903:2: 'name:'
            {
             before(grammarAccess.getVolumeAccess().getNameKeyword_3_2_0()); 
            match(input,82,FOLLOW_2); 
             after(grammarAccess.getVolumeAccess().getNameKeyword_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_2__0__Impl"


    // $ANTLR start "rule__Volume__Group_3_2__1"
    // InternalDockerCompose.g:6912:1: rule__Volume__Group_3_2__1 : rule__Volume__Group_3_2__1__Impl ;
    public final void rule__Volume__Group_3_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6916:1: ( rule__Volume__Group_3_2__1__Impl )
            // InternalDockerCompose.g:6917:2: rule__Volume__Group_3_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_2__1"


    // $ANTLR start "rule__Volume__Group_3_2__1__Impl"
    // InternalDockerCompose.g:6923:1: rule__Volume__Group_3_2__1__Impl : ( ( rule__Volume__Volume_nameAssignment_3_2_1 ) ) ;
    public final void rule__Volume__Group_3_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6927:1: ( ( ( rule__Volume__Volume_nameAssignment_3_2_1 ) ) )
            // InternalDockerCompose.g:6928:1: ( ( rule__Volume__Volume_nameAssignment_3_2_1 ) )
            {
            // InternalDockerCompose.g:6928:1: ( ( rule__Volume__Volume_nameAssignment_3_2_1 ) )
            // InternalDockerCompose.g:6929:2: ( rule__Volume__Volume_nameAssignment_3_2_1 )
            {
             before(grammarAccess.getVolumeAccess().getVolume_nameAssignment_3_2_1()); 
            // InternalDockerCompose.g:6930:2: ( rule__Volume__Volume_nameAssignment_3_2_1 )
            // InternalDockerCompose.g:6930:3: rule__Volume__Volume_nameAssignment_3_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Volume_nameAssignment_3_2_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getVolume_nameAssignment_3_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_2__1__Impl"


    // $ANTLR start "rule__Volume__Group_3_3__0"
    // InternalDockerCompose.g:6939:1: rule__Volume__Group_3_3__0 : rule__Volume__Group_3_3__0__Impl rule__Volume__Group_3_3__1 ;
    public final void rule__Volume__Group_3_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6943:1: ( rule__Volume__Group_3_3__0__Impl rule__Volume__Group_3_3__1 )
            // InternalDockerCompose.g:6944:2: rule__Volume__Group_3_3__0__Impl rule__Volume__Group_3_3__1
            {
            pushFollow(FOLLOW_6);
            rule__Volume__Group_3_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_3__0"


    // $ANTLR start "rule__Volume__Group_3_3__0__Impl"
    // InternalDockerCompose.g:6951:1: rule__Volume__Group_3_3__0__Impl : ( 'labels:' ) ;
    public final void rule__Volume__Group_3_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6955:1: ( ( 'labels:' ) )
            // InternalDockerCompose.g:6956:1: ( 'labels:' )
            {
            // InternalDockerCompose.g:6956:1: ( 'labels:' )
            // InternalDockerCompose.g:6957:2: 'labels:'
            {
             before(grammarAccess.getVolumeAccess().getLabelsKeyword_3_3_0()); 
            match(input,83,FOLLOW_2); 
             after(grammarAccess.getVolumeAccess().getLabelsKeyword_3_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_3__0__Impl"


    // $ANTLR start "rule__Volume__Group_3_3__1"
    // InternalDockerCompose.g:6966:1: rule__Volume__Group_3_3__1 : rule__Volume__Group_3_3__1__Impl ;
    public final void rule__Volume__Group_3_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6970:1: ( rule__Volume__Group_3_3__1__Impl )
            // InternalDockerCompose.g:6971:2: rule__Volume__Group_3_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_3__1"


    // $ANTLR start "rule__Volume__Group_3_3__1__Impl"
    // InternalDockerCompose.g:6977:1: rule__Volume__Group_3_3__1__Impl : ( ( ( rule__Volume__LabelsAssignment_3_3_1 ) ) ( ( rule__Volume__LabelsAssignment_3_3_1 )* ) ) ;
    public final void rule__Volume__Group_3_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6981:1: ( ( ( ( rule__Volume__LabelsAssignment_3_3_1 ) ) ( ( rule__Volume__LabelsAssignment_3_3_1 )* ) ) )
            // InternalDockerCompose.g:6982:1: ( ( ( rule__Volume__LabelsAssignment_3_3_1 ) ) ( ( rule__Volume__LabelsAssignment_3_3_1 )* ) )
            {
            // InternalDockerCompose.g:6982:1: ( ( ( rule__Volume__LabelsAssignment_3_3_1 ) ) ( ( rule__Volume__LabelsAssignment_3_3_1 )* ) )
            // InternalDockerCompose.g:6983:2: ( ( rule__Volume__LabelsAssignment_3_3_1 ) ) ( ( rule__Volume__LabelsAssignment_3_3_1 )* )
            {
            // InternalDockerCompose.g:6983:2: ( ( rule__Volume__LabelsAssignment_3_3_1 ) )
            // InternalDockerCompose.g:6984:3: ( rule__Volume__LabelsAssignment_3_3_1 )
            {
             before(grammarAccess.getVolumeAccess().getLabelsAssignment_3_3_1()); 
            // InternalDockerCompose.g:6985:3: ( rule__Volume__LabelsAssignment_3_3_1 )
            // InternalDockerCompose.g:6985:4: rule__Volume__LabelsAssignment_3_3_1
            {
            pushFollow(FOLLOW_4);
            rule__Volume__LabelsAssignment_3_3_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getLabelsAssignment_3_3_1()); 

            }

            // InternalDockerCompose.g:6988:2: ( ( rule__Volume__LabelsAssignment_3_3_1 )* )
            // InternalDockerCompose.g:6989:3: ( rule__Volume__LabelsAssignment_3_3_1 )*
            {
             before(grammarAccess.getVolumeAccess().getLabelsAssignment_3_3_1()); 
            // InternalDockerCompose.g:6990:3: ( rule__Volume__LabelsAssignment_3_3_1 )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( (LA42_0==RULE_STRING) ) {
                    int LA42_2 = input.LA(2);

                    if ( (LA42_2==43) ) {
                        int LA42_4 = input.LA(3);

                        if ( (LA42_4==RULE_STRING) ) {
                            int LA42_5 = input.LA(4);

                            if ( (LA42_5==EOF||(LA42_5>=RULE_STRING && LA42_5<=RULE_ID)||(LA42_5>=37 && LA42_5<=42)||LA42_5==77||(LA42_5>=81 && LA42_5<=84)) ) {
                                alt42=1;
                            }


                        }
                        else if ( (LA42_4==RULE_ID) ) {
                            int LA42_6 = input.LA(4);

                            if ( (LA42_6==EOF||(LA42_6>=RULE_STRING && LA42_6<=RULE_ID)||(LA42_6>=37 && LA42_6<=42)||LA42_6==77||(LA42_6>=81 && LA42_6<=84)) ) {
                                alt42=1;
                            }


                        }


                    }


                }
                else if ( (LA42_0==RULE_ID) ) {
                    int LA42_3 = input.LA(2);

                    if ( (LA42_3==43) ) {
                        int LA42_4 = input.LA(3);

                        if ( (LA42_4==RULE_STRING) ) {
                            int LA42_5 = input.LA(4);

                            if ( (LA42_5==EOF||(LA42_5>=RULE_STRING && LA42_5<=RULE_ID)||(LA42_5>=37 && LA42_5<=42)||LA42_5==77||(LA42_5>=81 && LA42_5<=84)) ) {
                                alt42=1;
                            }


                        }
                        else if ( (LA42_4==RULE_ID) ) {
                            int LA42_6 = input.LA(4);

                            if ( (LA42_6==EOF||(LA42_6>=RULE_STRING && LA42_6<=RULE_ID)||(LA42_6>=37 && LA42_6<=42)||LA42_6==77||(LA42_6>=81 && LA42_6<=84)) ) {
                                alt42=1;
                            }


                        }


                    }


                }


                switch (alt42) {
            	case 1 :
            	    // InternalDockerCompose.g:6990:4: rule__Volume__LabelsAssignment_3_3_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__Volume__LabelsAssignment_3_3_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

             after(grammarAccess.getVolumeAccess().getLabelsAssignment_3_3_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_3__1__Impl"


    // $ANTLR start "rule__Volume__Group_3_4__0"
    // InternalDockerCompose.g:7000:1: rule__Volume__Group_3_4__0 : rule__Volume__Group_3_4__0__Impl rule__Volume__Group_3_4__1 ;
    public final void rule__Volume__Group_3_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7004:1: ( rule__Volume__Group_3_4__0__Impl rule__Volume__Group_3_4__1 )
            // InternalDockerCompose.g:7005:2: rule__Volume__Group_3_4__0__Impl rule__Volume__Group_3_4__1
            {
            pushFollow(FOLLOW_6);
            rule__Volume__Group_3_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_4__0"


    // $ANTLR start "rule__Volume__Group_3_4__0__Impl"
    // InternalDockerCompose.g:7012:1: rule__Volume__Group_3_4__0__Impl : ( 'driver_opts:' ) ;
    public final void rule__Volume__Group_3_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7016:1: ( ( 'driver_opts:' ) )
            // InternalDockerCompose.g:7017:1: ( 'driver_opts:' )
            {
            // InternalDockerCompose.g:7017:1: ( 'driver_opts:' )
            // InternalDockerCompose.g:7018:2: 'driver_opts:'
            {
             before(grammarAccess.getVolumeAccess().getDriver_optsKeyword_3_4_0()); 
            match(input,84,FOLLOW_2); 
             after(grammarAccess.getVolumeAccess().getDriver_optsKeyword_3_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_4__0__Impl"


    // $ANTLR start "rule__Volume__Group_3_4__1"
    // InternalDockerCompose.g:7027:1: rule__Volume__Group_3_4__1 : rule__Volume__Group_3_4__1__Impl ;
    public final void rule__Volume__Group_3_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7031:1: ( rule__Volume__Group_3_4__1__Impl )
            // InternalDockerCompose.g:7032:2: rule__Volume__Group_3_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_4__1"


    // $ANTLR start "rule__Volume__Group_3_4__1__Impl"
    // InternalDockerCompose.g:7038:1: rule__Volume__Group_3_4__1__Impl : ( ( ( rule__Volume__Driver_optsAssignment_3_4_1 ) ) ( ( rule__Volume__Driver_optsAssignment_3_4_1 )* ) ) ;
    public final void rule__Volume__Group_3_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7042:1: ( ( ( ( rule__Volume__Driver_optsAssignment_3_4_1 ) ) ( ( rule__Volume__Driver_optsAssignment_3_4_1 )* ) ) )
            // InternalDockerCompose.g:7043:1: ( ( ( rule__Volume__Driver_optsAssignment_3_4_1 ) ) ( ( rule__Volume__Driver_optsAssignment_3_4_1 )* ) )
            {
            // InternalDockerCompose.g:7043:1: ( ( ( rule__Volume__Driver_optsAssignment_3_4_1 ) ) ( ( rule__Volume__Driver_optsAssignment_3_4_1 )* ) )
            // InternalDockerCompose.g:7044:2: ( ( rule__Volume__Driver_optsAssignment_3_4_1 ) ) ( ( rule__Volume__Driver_optsAssignment_3_4_1 )* )
            {
            // InternalDockerCompose.g:7044:2: ( ( rule__Volume__Driver_optsAssignment_3_4_1 ) )
            // InternalDockerCompose.g:7045:3: ( rule__Volume__Driver_optsAssignment_3_4_1 )
            {
             before(grammarAccess.getVolumeAccess().getDriver_optsAssignment_3_4_1()); 
            // InternalDockerCompose.g:7046:3: ( rule__Volume__Driver_optsAssignment_3_4_1 )
            // InternalDockerCompose.g:7046:4: rule__Volume__Driver_optsAssignment_3_4_1
            {
            pushFollow(FOLLOW_4);
            rule__Volume__Driver_optsAssignment_3_4_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getDriver_optsAssignment_3_4_1()); 

            }

            // InternalDockerCompose.g:7049:2: ( ( rule__Volume__Driver_optsAssignment_3_4_1 )* )
            // InternalDockerCompose.g:7050:3: ( rule__Volume__Driver_optsAssignment_3_4_1 )*
            {
             before(grammarAccess.getVolumeAccess().getDriver_optsAssignment_3_4_1()); 
            // InternalDockerCompose.g:7051:3: ( rule__Volume__Driver_optsAssignment_3_4_1 )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( (LA43_0==RULE_STRING) ) {
                    int LA43_2 = input.LA(2);

                    if ( (LA43_2==43) ) {
                        int LA43_4 = input.LA(3);

                        if ( (LA43_4==RULE_STRING) ) {
                            int LA43_5 = input.LA(4);

                            if ( (LA43_5==EOF||(LA43_5>=RULE_STRING && LA43_5<=RULE_ID)||(LA43_5>=37 && LA43_5<=42)||LA43_5==77||(LA43_5>=81 && LA43_5<=84)) ) {
                                alt43=1;
                            }


                        }
                        else if ( (LA43_4==RULE_ID) ) {
                            int LA43_6 = input.LA(4);

                            if ( (LA43_6==EOF||(LA43_6>=RULE_STRING && LA43_6<=RULE_ID)||(LA43_6>=37 && LA43_6<=42)||LA43_6==77||(LA43_6>=81 && LA43_6<=84)) ) {
                                alt43=1;
                            }


                        }


                    }


                }
                else if ( (LA43_0==RULE_ID) ) {
                    int LA43_3 = input.LA(2);

                    if ( (LA43_3==43) ) {
                        int LA43_4 = input.LA(3);

                        if ( (LA43_4==RULE_STRING) ) {
                            int LA43_5 = input.LA(4);

                            if ( (LA43_5==EOF||(LA43_5>=RULE_STRING && LA43_5<=RULE_ID)||(LA43_5>=37 && LA43_5<=42)||LA43_5==77||(LA43_5>=81 && LA43_5<=84)) ) {
                                alt43=1;
                            }


                        }
                        else if ( (LA43_4==RULE_ID) ) {
                            int LA43_6 = input.LA(4);

                            if ( (LA43_6==EOF||(LA43_6>=RULE_STRING && LA43_6<=RULE_ID)||(LA43_6>=37 && LA43_6<=42)||LA43_6==77||(LA43_6>=81 && LA43_6<=84)) ) {
                                alt43=1;
                            }


                        }


                    }


                }


                switch (alt43) {
            	case 1 :
            	    // InternalDockerCompose.g:7051:4: rule__Volume__Driver_optsAssignment_3_4_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__Volume__Driver_optsAssignment_3_4_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);

             after(grammarAccess.getVolumeAccess().getDriver_optsAssignment_3_4_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_4__1__Impl"


    // $ANTLR start "rule__Config__Group__0"
    // InternalDockerCompose.g:7061:1: rule__Config__Group__0 : rule__Config__Group__0__Impl rule__Config__Group__1 ;
    public final void rule__Config__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7065:1: ( rule__Config__Group__0__Impl rule__Config__Group__1 )
            // InternalDockerCompose.g:7066:2: rule__Config__Group__0__Impl rule__Config__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__Config__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Config__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__0"


    // $ANTLR start "rule__Config__Group__0__Impl"
    // InternalDockerCompose.g:7073:1: rule__Config__Group__0__Impl : ( () ) ;
    public final void rule__Config__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7077:1: ( ( () ) )
            // InternalDockerCompose.g:7078:1: ( () )
            {
            // InternalDockerCompose.g:7078:1: ( () )
            // InternalDockerCompose.g:7079:2: ()
            {
             before(grammarAccess.getConfigAccess().getConfigAction_0()); 
            // InternalDockerCompose.g:7080:2: ()
            // InternalDockerCompose.g:7080:3: 
            {
            }

             after(grammarAccess.getConfigAccess().getConfigAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__0__Impl"


    // $ANTLR start "rule__Config__Group__1"
    // InternalDockerCompose.g:7088:1: rule__Config__Group__1 : rule__Config__Group__1__Impl rule__Config__Group__2 ;
    public final void rule__Config__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7092:1: ( rule__Config__Group__1__Impl rule__Config__Group__2 )
            // InternalDockerCompose.g:7093:2: rule__Config__Group__1__Impl rule__Config__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__Config__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Config__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__1"


    // $ANTLR start "rule__Config__Group__1__Impl"
    // InternalDockerCompose.g:7100:1: rule__Config__Group__1__Impl : ( ( rule__Config__NameAssignment_1 ) ) ;
    public final void rule__Config__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7104:1: ( ( ( rule__Config__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:7105:1: ( ( rule__Config__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:7105:1: ( ( rule__Config__NameAssignment_1 ) )
            // InternalDockerCompose.g:7106:2: ( rule__Config__NameAssignment_1 )
            {
             before(grammarAccess.getConfigAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:7107:2: ( rule__Config__NameAssignment_1 )
            // InternalDockerCompose.g:7107:3: rule__Config__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Config__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__1__Impl"


    // $ANTLR start "rule__Config__Group__2"
    // InternalDockerCompose.g:7115:1: rule__Config__Group__2 : rule__Config__Group__2__Impl rule__Config__Group__3 ;
    public final void rule__Config__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7119:1: ( rule__Config__Group__2__Impl rule__Config__Group__3 )
            // InternalDockerCompose.g:7120:2: rule__Config__Group__2__Impl rule__Config__Group__3
            {
            pushFollow(FOLLOW_37);
            rule__Config__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Config__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__2"


    // $ANTLR start "rule__Config__Group__2__Impl"
    // InternalDockerCompose.g:7127:1: rule__Config__Group__2__Impl : ( ':' ) ;
    public final void rule__Config__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7131:1: ( ( ':' ) )
            // InternalDockerCompose.g:7132:1: ( ':' )
            {
            // InternalDockerCompose.g:7132:1: ( ':' )
            // InternalDockerCompose.g:7133:2: ':'
            {
             before(grammarAccess.getConfigAccess().getColonKeyword_2()); 
            match(input,43,FOLLOW_2); 
             after(grammarAccess.getConfigAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__2__Impl"


    // $ANTLR start "rule__Config__Group__3"
    // InternalDockerCompose.g:7142:1: rule__Config__Group__3 : rule__Config__Group__3__Impl ;
    public final void rule__Config__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7146:1: ( rule__Config__Group__3__Impl )
            // InternalDockerCompose.g:7147:2: rule__Config__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Config__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__3"


    // $ANTLR start "rule__Config__Group__3__Impl"
    // InternalDockerCompose.g:7153:1: rule__Config__Group__3__Impl : ( ( rule__Config__UnorderedGroup_3 ) ) ;
    public final void rule__Config__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7157:1: ( ( ( rule__Config__UnorderedGroup_3 ) ) )
            // InternalDockerCompose.g:7158:1: ( ( rule__Config__UnorderedGroup_3 ) )
            {
            // InternalDockerCompose.g:7158:1: ( ( rule__Config__UnorderedGroup_3 ) )
            // InternalDockerCompose.g:7159:2: ( rule__Config__UnorderedGroup_3 )
            {
             before(grammarAccess.getConfigAccess().getUnorderedGroup_3()); 
            // InternalDockerCompose.g:7160:2: ( rule__Config__UnorderedGroup_3 )
            // InternalDockerCompose.g:7160:3: rule__Config__UnorderedGroup_3
            {
            pushFollow(FOLLOW_2);
            rule__Config__UnorderedGroup_3();

            state._fsp--;


            }

             after(grammarAccess.getConfigAccess().getUnorderedGroup_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__3__Impl"


    // $ANTLR start "rule__Config__Group_3_0__0"
    // InternalDockerCompose.g:7169:1: rule__Config__Group_3_0__0 : rule__Config__Group_3_0__0__Impl rule__Config__Group_3_0__1 ;
    public final void rule__Config__Group_3_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7173:1: ( rule__Config__Group_3_0__0__Impl rule__Config__Group_3_0__1 )
            // InternalDockerCompose.g:7174:2: rule__Config__Group_3_0__0__Impl rule__Config__Group_3_0__1
            {
            pushFollow(FOLLOW_12);
            rule__Config__Group_3_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Config__Group_3_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_0__0"


    // $ANTLR start "rule__Config__Group_3_0__0__Impl"
    // InternalDockerCompose.g:7181:1: rule__Config__Group_3_0__0__Impl : ( 'external:' ) ;
    public final void rule__Config__Group_3_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7185:1: ( ( 'external:' ) )
            // InternalDockerCompose.g:7186:1: ( 'external:' )
            {
            // InternalDockerCompose.g:7186:1: ( 'external:' )
            // InternalDockerCompose.g:7187:2: 'external:'
            {
             before(grammarAccess.getConfigAccess().getExternalKeyword_3_0_0()); 
            match(input,81,FOLLOW_2); 
             after(grammarAccess.getConfigAccess().getExternalKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_0__0__Impl"


    // $ANTLR start "rule__Config__Group_3_0__1"
    // InternalDockerCompose.g:7196:1: rule__Config__Group_3_0__1 : rule__Config__Group_3_0__1__Impl ;
    public final void rule__Config__Group_3_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7200:1: ( rule__Config__Group_3_0__1__Impl )
            // InternalDockerCompose.g:7201:2: rule__Config__Group_3_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Config__Group_3_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_0__1"


    // $ANTLR start "rule__Config__Group_3_0__1__Impl"
    // InternalDockerCompose.g:7207:1: rule__Config__Group_3_0__1__Impl : ( ( rule__Config__ExternalAssignment_3_0_1 ) ) ;
    public final void rule__Config__Group_3_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7211:1: ( ( ( rule__Config__ExternalAssignment_3_0_1 ) ) )
            // InternalDockerCompose.g:7212:1: ( ( rule__Config__ExternalAssignment_3_0_1 ) )
            {
            // InternalDockerCompose.g:7212:1: ( ( rule__Config__ExternalAssignment_3_0_1 ) )
            // InternalDockerCompose.g:7213:2: ( rule__Config__ExternalAssignment_3_0_1 )
            {
             before(grammarAccess.getConfigAccess().getExternalAssignment_3_0_1()); 
            // InternalDockerCompose.g:7214:2: ( rule__Config__ExternalAssignment_3_0_1 )
            // InternalDockerCompose.g:7214:3: rule__Config__ExternalAssignment_3_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Config__ExternalAssignment_3_0_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigAccess().getExternalAssignment_3_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_0__1__Impl"


    // $ANTLR start "rule__Config__Group_3_1__0"
    // InternalDockerCompose.g:7223:1: rule__Config__Group_3_1__0 : rule__Config__Group_3_1__0__Impl rule__Config__Group_3_1__1 ;
    public final void rule__Config__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7227:1: ( rule__Config__Group_3_1__0__Impl rule__Config__Group_3_1__1 )
            // InternalDockerCompose.g:7228:2: rule__Config__Group_3_1__0__Impl rule__Config__Group_3_1__1
            {
            pushFollow(FOLLOW_6);
            rule__Config__Group_3_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Config__Group_3_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_1__0"


    // $ANTLR start "rule__Config__Group_3_1__0__Impl"
    // InternalDockerCompose.g:7235:1: rule__Config__Group_3_1__0__Impl : ( 'file:' ) ;
    public final void rule__Config__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7239:1: ( ( 'file:' ) )
            // InternalDockerCompose.g:7240:1: ( 'file:' )
            {
            // InternalDockerCompose.g:7240:1: ( 'file:' )
            // InternalDockerCompose.g:7241:2: 'file:'
            {
             before(grammarAccess.getConfigAccess().getFileKeyword_3_1_0()); 
            match(input,86,FOLLOW_2); 
             after(grammarAccess.getConfigAccess().getFileKeyword_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_1__0__Impl"


    // $ANTLR start "rule__Config__Group_3_1__1"
    // InternalDockerCompose.g:7250:1: rule__Config__Group_3_1__1 : rule__Config__Group_3_1__1__Impl ;
    public final void rule__Config__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7254:1: ( rule__Config__Group_3_1__1__Impl )
            // InternalDockerCompose.g:7255:2: rule__Config__Group_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Config__Group_3_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_1__1"


    // $ANTLR start "rule__Config__Group_3_1__1__Impl"
    // InternalDockerCompose.g:7261:1: rule__Config__Group_3_1__1__Impl : ( ( rule__Config__FileAssignment_3_1_1 ) ) ;
    public final void rule__Config__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7265:1: ( ( ( rule__Config__FileAssignment_3_1_1 ) ) )
            // InternalDockerCompose.g:7266:1: ( ( rule__Config__FileAssignment_3_1_1 ) )
            {
            // InternalDockerCompose.g:7266:1: ( ( rule__Config__FileAssignment_3_1_1 ) )
            // InternalDockerCompose.g:7267:2: ( rule__Config__FileAssignment_3_1_1 )
            {
             before(grammarAccess.getConfigAccess().getFileAssignment_3_1_1()); 
            // InternalDockerCompose.g:7268:2: ( rule__Config__FileAssignment_3_1_1 )
            // InternalDockerCompose.g:7268:3: rule__Config__FileAssignment_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Config__FileAssignment_3_1_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigAccess().getFileAssignment_3_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_1__1__Impl"


    // $ANTLR start "rule__Config__Group_3_2__0"
    // InternalDockerCompose.g:7277:1: rule__Config__Group_3_2__0 : rule__Config__Group_3_2__0__Impl rule__Config__Group_3_2__1 ;
    public final void rule__Config__Group_3_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7281:1: ( rule__Config__Group_3_2__0__Impl rule__Config__Group_3_2__1 )
            // InternalDockerCompose.g:7282:2: rule__Config__Group_3_2__0__Impl rule__Config__Group_3_2__1
            {
            pushFollow(FOLLOW_6);
            rule__Config__Group_3_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Config__Group_3_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_2__0"


    // $ANTLR start "rule__Config__Group_3_2__0__Impl"
    // InternalDockerCompose.g:7289:1: rule__Config__Group_3_2__0__Impl : ( 'name:' ) ;
    public final void rule__Config__Group_3_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7293:1: ( ( 'name:' ) )
            // InternalDockerCompose.g:7294:1: ( 'name:' )
            {
            // InternalDockerCompose.g:7294:1: ( 'name:' )
            // InternalDockerCompose.g:7295:2: 'name:'
            {
             before(grammarAccess.getConfigAccess().getNameKeyword_3_2_0()); 
            match(input,82,FOLLOW_2); 
             after(grammarAccess.getConfigAccess().getNameKeyword_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_2__0__Impl"


    // $ANTLR start "rule__Config__Group_3_2__1"
    // InternalDockerCompose.g:7304:1: rule__Config__Group_3_2__1 : rule__Config__Group_3_2__1__Impl ;
    public final void rule__Config__Group_3_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7308:1: ( rule__Config__Group_3_2__1__Impl )
            // InternalDockerCompose.g:7309:2: rule__Config__Group_3_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Config__Group_3_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_2__1"


    // $ANTLR start "rule__Config__Group_3_2__1__Impl"
    // InternalDockerCompose.g:7315:1: rule__Config__Group_3_2__1__Impl : ( ( rule__Config__Config_nameAssignment_3_2_1 ) ) ;
    public final void rule__Config__Group_3_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7319:1: ( ( ( rule__Config__Config_nameAssignment_3_2_1 ) ) )
            // InternalDockerCompose.g:7320:1: ( ( rule__Config__Config_nameAssignment_3_2_1 ) )
            {
            // InternalDockerCompose.g:7320:1: ( ( rule__Config__Config_nameAssignment_3_2_1 ) )
            // InternalDockerCompose.g:7321:2: ( rule__Config__Config_nameAssignment_3_2_1 )
            {
             before(grammarAccess.getConfigAccess().getConfig_nameAssignment_3_2_1()); 
            // InternalDockerCompose.g:7322:2: ( rule__Config__Config_nameAssignment_3_2_1 )
            // InternalDockerCompose.g:7322:3: rule__Config__Config_nameAssignment_3_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Config__Config_nameAssignment_3_2_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigAccess().getConfig_nameAssignment_3_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_2__1__Impl"


    // $ANTLR start "rule__Secret__Group__0"
    // InternalDockerCompose.g:7331:1: rule__Secret__Group__0 : rule__Secret__Group__0__Impl rule__Secret__Group__1 ;
    public final void rule__Secret__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7335:1: ( rule__Secret__Group__0__Impl rule__Secret__Group__1 )
            // InternalDockerCompose.g:7336:2: rule__Secret__Group__0__Impl rule__Secret__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__Secret__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__0"


    // $ANTLR start "rule__Secret__Group__0__Impl"
    // InternalDockerCompose.g:7343:1: rule__Secret__Group__0__Impl : ( () ) ;
    public final void rule__Secret__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7347:1: ( ( () ) )
            // InternalDockerCompose.g:7348:1: ( () )
            {
            // InternalDockerCompose.g:7348:1: ( () )
            // InternalDockerCompose.g:7349:2: ()
            {
             before(grammarAccess.getSecretAccess().getSecretAction_0()); 
            // InternalDockerCompose.g:7350:2: ()
            // InternalDockerCompose.g:7350:3: 
            {
            }

             after(grammarAccess.getSecretAccess().getSecretAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__0__Impl"


    // $ANTLR start "rule__Secret__Group__1"
    // InternalDockerCompose.g:7358:1: rule__Secret__Group__1 : rule__Secret__Group__1__Impl rule__Secret__Group__2 ;
    public final void rule__Secret__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7362:1: ( rule__Secret__Group__1__Impl rule__Secret__Group__2 )
            // InternalDockerCompose.g:7363:2: rule__Secret__Group__1__Impl rule__Secret__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__Secret__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__1"


    // $ANTLR start "rule__Secret__Group__1__Impl"
    // InternalDockerCompose.g:7370:1: rule__Secret__Group__1__Impl : ( ( rule__Secret__NameAssignment_1 ) ) ;
    public final void rule__Secret__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7374:1: ( ( ( rule__Secret__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:7375:1: ( ( rule__Secret__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:7375:1: ( ( rule__Secret__NameAssignment_1 ) )
            // InternalDockerCompose.g:7376:2: ( rule__Secret__NameAssignment_1 )
            {
             before(grammarAccess.getSecretAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:7377:2: ( rule__Secret__NameAssignment_1 )
            // InternalDockerCompose.g:7377:3: rule__Secret__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Secret__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__1__Impl"


    // $ANTLR start "rule__Secret__Group__2"
    // InternalDockerCompose.g:7385:1: rule__Secret__Group__2 : rule__Secret__Group__2__Impl rule__Secret__Group__3 ;
    public final void rule__Secret__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7389:1: ( rule__Secret__Group__2__Impl rule__Secret__Group__3 )
            // InternalDockerCompose.g:7390:2: rule__Secret__Group__2__Impl rule__Secret__Group__3
            {
            pushFollow(FOLLOW_38);
            rule__Secret__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__2"


    // $ANTLR start "rule__Secret__Group__2__Impl"
    // InternalDockerCompose.g:7397:1: rule__Secret__Group__2__Impl : ( ':' ) ;
    public final void rule__Secret__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7401:1: ( ( ':' ) )
            // InternalDockerCompose.g:7402:1: ( ':' )
            {
            // InternalDockerCompose.g:7402:1: ( ':' )
            // InternalDockerCompose.g:7403:2: ':'
            {
             before(grammarAccess.getSecretAccess().getColonKeyword_2()); 
            match(input,43,FOLLOW_2); 
             after(grammarAccess.getSecretAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__2__Impl"


    // $ANTLR start "rule__Secret__Group__3"
    // InternalDockerCompose.g:7412:1: rule__Secret__Group__3 : rule__Secret__Group__3__Impl ;
    public final void rule__Secret__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7416:1: ( rule__Secret__Group__3__Impl )
            // InternalDockerCompose.g:7417:2: rule__Secret__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__3"


    // $ANTLR start "rule__Secret__Group__3__Impl"
    // InternalDockerCompose.g:7423:1: rule__Secret__Group__3__Impl : ( ( rule__Secret__UnorderedGroup_3 ) ) ;
    public final void rule__Secret__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7427:1: ( ( ( rule__Secret__UnorderedGroup_3 ) ) )
            // InternalDockerCompose.g:7428:1: ( ( rule__Secret__UnorderedGroup_3 ) )
            {
            // InternalDockerCompose.g:7428:1: ( ( rule__Secret__UnorderedGroup_3 ) )
            // InternalDockerCompose.g:7429:2: ( rule__Secret__UnorderedGroup_3 )
            {
             before(grammarAccess.getSecretAccess().getUnorderedGroup_3()); 
            // InternalDockerCompose.g:7430:2: ( rule__Secret__UnorderedGroup_3 )
            // InternalDockerCompose.g:7430:3: rule__Secret__UnorderedGroup_3
            {
            pushFollow(FOLLOW_2);
            rule__Secret__UnorderedGroup_3();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getUnorderedGroup_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__3__Impl"


    // $ANTLR start "rule__Secret__Group_3_0__0"
    // InternalDockerCompose.g:7439:1: rule__Secret__Group_3_0__0 : rule__Secret__Group_3_0__0__Impl rule__Secret__Group_3_0__1 ;
    public final void rule__Secret__Group_3_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7443:1: ( rule__Secret__Group_3_0__0__Impl rule__Secret__Group_3_0__1 )
            // InternalDockerCompose.g:7444:2: rule__Secret__Group_3_0__0__Impl rule__Secret__Group_3_0__1
            {
            pushFollow(FOLLOW_12);
            rule__Secret__Group_3_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_0__0"


    // $ANTLR start "rule__Secret__Group_3_0__0__Impl"
    // InternalDockerCompose.g:7451:1: rule__Secret__Group_3_0__0__Impl : ( 'external:' ) ;
    public final void rule__Secret__Group_3_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7455:1: ( ( 'external:' ) )
            // InternalDockerCompose.g:7456:1: ( 'external:' )
            {
            // InternalDockerCompose.g:7456:1: ( 'external:' )
            // InternalDockerCompose.g:7457:2: 'external:'
            {
             before(grammarAccess.getSecretAccess().getExternalKeyword_3_0_0()); 
            match(input,81,FOLLOW_2); 
             after(grammarAccess.getSecretAccess().getExternalKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_0__0__Impl"


    // $ANTLR start "rule__Secret__Group_3_0__1"
    // InternalDockerCompose.g:7466:1: rule__Secret__Group_3_0__1 : rule__Secret__Group_3_0__1__Impl ;
    public final void rule__Secret__Group_3_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7470:1: ( rule__Secret__Group_3_0__1__Impl )
            // InternalDockerCompose.g:7471:2: rule__Secret__Group_3_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_0__1"


    // $ANTLR start "rule__Secret__Group_3_0__1__Impl"
    // InternalDockerCompose.g:7477:1: rule__Secret__Group_3_0__1__Impl : ( ( rule__Secret__ExternalAssignment_3_0_1 ) ) ;
    public final void rule__Secret__Group_3_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7481:1: ( ( ( rule__Secret__ExternalAssignment_3_0_1 ) ) )
            // InternalDockerCompose.g:7482:1: ( ( rule__Secret__ExternalAssignment_3_0_1 ) )
            {
            // InternalDockerCompose.g:7482:1: ( ( rule__Secret__ExternalAssignment_3_0_1 ) )
            // InternalDockerCompose.g:7483:2: ( rule__Secret__ExternalAssignment_3_0_1 )
            {
             before(grammarAccess.getSecretAccess().getExternalAssignment_3_0_1()); 
            // InternalDockerCompose.g:7484:2: ( rule__Secret__ExternalAssignment_3_0_1 )
            // InternalDockerCompose.g:7484:3: rule__Secret__ExternalAssignment_3_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Secret__ExternalAssignment_3_0_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getExternalAssignment_3_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_0__1__Impl"


    // $ANTLR start "rule__Secret__Group_3_1__0"
    // InternalDockerCompose.g:7493:1: rule__Secret__Group_3_1__0 : rule__Secret__Group_3_1__0__Impl rule__Secret__Group_3_1__1 ;
    public final void rule__Secret__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7497:1: ( rule__Secret__Group_3_1__0__Impl rule__Secret__Group_3_1__1 )
            // InternalDockerCompose.g:7498:2: rule__Secret__Group_3_1__0__Impl rule__Secret__Group_3_1__1
            {
            pushFollow(FOLLOW_6);
            rule__Secret__Group_3_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_1__0"


    // $ANTLR start "rule__Secret__Group_3_1__0__Impl"
    // InternalDockerCompose.g:7505:1: rule__Secret__Group_3_1__0__Impl : ( 'file:' ) ;
    public final void rule__Secret__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7509:1: ( ( 'file:' ) )
            // InternalDockerCompose.g:7510:1: ( 'file:' )
            {
            // InternalDockerCompose.g:7510:1: ( 'file:' )
            // InternalDockerCompose.g:7511:2: 'file:'
            {
             before(grammarAccess.getSecretAccess().getFileKeyword_3_1_0()); 
            match(input,86,FOLLOW_2); 
             after(grammarAccess.getSecretAccess().getFileKeyword_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_1__0__Impl"


    // $ANTLR start "rule__Secret__Group_3_1__1"
    // InternalDockerCompose.g:7520:1: rule__Secret__Group_3_1__1 : rule__Secret__Group_3_1__1__Impl ;
    public final void rule__Secret__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7524:1: ( rule__Secret__Group_3_1__1__Impl )
            // InternalDockerCompose.g:7525:2: rule__Secret__Group_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_1__1"


    // $ANTLR start "rule__Secret__Group_3_1__1__Impl"
    // InternalDockerCompose.g:7531:1: rule__Secret__Group_3_1__1__Impl : ( ( rule__Secret__FileAssignment_3_1_1 ) ) ;
    public final void rule__Secret__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7535:1: ( ( ( rule__Secret__FileAssignment_3_1_1 ) ) )
            // InternalDockerCompose.g:7536:1: ( ( rule__Secret__FileAssignment_3_1_1 ) )
            {
            // InternalDockerCompose.g:7536:1: ( ( rule__Secret__FileAssignment_3_1_1 ) )
            // InternalDockerCompose.g:7537:2: ( rule__Secret__FileAssignment_3_1_1 )
            {
             before(grammarAccess.getSecretAccess().getFileAssignment_3_1_1()); 
            // InternalDockerCompose.g:7538:2: ( rule__Secret__FileAssignment_3_1_1 )
            // InternalDockerCompose.g:7538:3: rule__Secret__FileAssignment_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Secret__FileAssignment_3_1_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getFileAssignment_3_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_1__1__Impl"


    // $ANTLR start "rule__Secret__Group_3_2__0"
    // InternalDockerCompose.g:7547:1: rule__Secret__Group_3_2__0 : rule__Secret__Group_3_2__0__Impl rule__Secret__Group_3_2__1 ;
    public final void rule__Secret__Group_3_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7551:1: ( rule__Secret__Group_3_2__0__Impl rule__Secret__Group_3_2__1 )
            // InternalDockerCompose.g:7552:2: rule__Secret__Group_3_2__0__Impl rule__Secret__Group_3_2__1
            {
            pushFollow(FOLLOW_6);
            rule__Secret__Group_3_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_2__0"


    // $ANTLR start "rule__Secret__Group_3_2__0__Impl"
    // InternalDockerCompose.g:7559:1: rule__Secret__Group_3_2__0__Impl : ( 'environment:' ) ;
    public final void rule__Secret__Group_3_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7563:1: ( ( 'environment:' ) )
            // InternalDockerCompose.g:7564:1: ( 'environment:' )
            {
            // InternalDockerCompose.g:7564:1: ( 'environment:' )
            // InternalDockerCompose.g:7565:2: 'environment:'
            {
             before(grammarAccess.getSecretAccess().getEnvironmentKeyword_3_2_0()); 
            match(input,87,FOLLOW_2); 
             after(grammarAccess.getSecretAccess().getEnvironmentKeyword_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_2__0__Impl"


    // $ANTLR start "rule__Secret__Group_3_2__1"
    // InternalDockerCompose.g:7574:1: rule__Secret__Group_3_2__1 : rule__Secret__Group_3_2__1__Impl ;
    public final void rule__Secret__Group_3_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7578:1: ( rule__Secret__Group_3_2__1__Impl )
            // InternalDockerCompose.g:7579:2: rule__Secret__Group_3_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_2__1"


    // $ANTLR start "rule__Secret__Group_3_2__1__Impl"
    // InternalDockerCompose.g:7585:1: rule__Secret__Group_3_2__1__Impl : ( ( rule__Secret__EnvironmentAssignment_3_2_1 ) ) ;
    public final void rule__Secret__Group_3_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7589:1: ( ( ( rule__Secret__EnvironmentAssignment_3_2_1 ) ) )
            // InternalDockerCompose.g:7590:1: ( ( rule__Secret__EnvironmentAssignment_3_2_1 ) )
            {
            // InternalDockerCompose.g:7590:1: ( ( rule__Secret__EnvironmentAssignment_3_2_1 ) )
            // InternalDockerCompose.g:7591:2: ( rule__Secret__EnvironmentAssignment_3_2_1 )
            {
             before(grammarAccess.getSecretAccess().getEnvironmentAssignment_3_2_1()); 
            // InternalDockerCompose.g:7592:2: ( rule__Secret__EnvironmentAssignment_3_2_1 )
            // InternalDockerCompose.g:7592:3: rule__Secret__EnvironmentAssignment_3_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Secret__EnvironmentAssignment_3_2_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getEnvironmentAssignment_3_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_2__1__Impl"


    // $ANTLR start "rule__Secret__Group_3_3__0"
    // InternalDockerCompose.g:7601:1: rule__Secret__Group_3_3__0 : rule__Secret__Group_3_3__0__Impl rule__Secret__Group_3_3__1 ;
    public final void rule__Secret__Group_3_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7605:1: ( rule__Secret__Group_3_3__0__Impl rule__Secret__Group_3_3__1 )
            // InternalDockerCompose.g:7606:2: rule__Secret__Group_3_3__0__Impl rule__Secret__Group_3_3__1
            {
            pushFollow(FOLLOW_6);
            rule__Secret__Group_3_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_3__0"


    // $ANTLR start "rule__Secret__Group_3_3__0__Impl"
    // InternalDockerCompose.g:7613:1: rule__Secret__Group_3_3__0__Impl : ( 'name:' ) ;
    public final void rule__Secret__Group_3_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7617:1: ( ( 'name:' ) )
            // InternalDockerCompose.g:7618:1: ( 'name:' )
            {
            // InternalDockerCompose.g:7618:1: ( 'name:' )
            // InternalDockerCompose.g:7619:2: 'name:'
            {
             before(grammarAccess.getSecretAccess().getNameKeyword_3_3_0()); 
            match(input,82,FOLLOW_2); 
             after(grammarAccess.getSecretAccess().getNameKeyword_3_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_3__0__Impl"


    // $ANTLR start "rule__Secret__Group_3_3__1"
    // InternalDockerCompose.g:7628:1: rule__Secret__Group_3_3__1 : rule__Secret__Group_3_3__1__Impl ;
    public final void rule__Secret__Group_3_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7632:1: ( rule__Secret__Group_3_3__1__Impl )
            // InternalDockerCompose.g:7633:2: rule__Secret__Group_3_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_3__1"


    // $ANTLR start "rule__Secret__Group_3_3__1__Impl"
    // InternalDockerCompose.g:7639:1: rule__Secret__Group_3_3__1__Impl : ( ( rule__Secret__Secret_nameAssignment_3_3_1 ) ) ;
    public final void rule__Secret__Group_3_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7643:1: ( ( ( rule__Secret__Secret_nameAssignment_3_3_1 ) ) )
            // InternalDockerCompose.g:7644:1: ( ( rule__Secret__Secret_nameAssignment_3_3_1 ) )
            {
            // InternalDockerCompose.g:7644:1: ( ( rule__Secret__Secret_nameAssignment_3_3_1 ) )
            // InternalDockerCompose.g:7645:2: ( rule__Secret__Secret_nameAssignment_3_3_1 )
            {
             before(grammarAccess.getSecretAccess().getSecret_nameAssignment_3_3_1()); 
            // InternalDockerCompose.g:7646:2: ( rule__Secret__Secret_nameAssignment_3_3_1 )
            // InternalDockerCompose.g:7646:3: rule__Secret__Secret_nameAssignment_3_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Secret_nameAssignment_3_3_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getSecret_nameAssignment_3_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_3__1__Impl"


    // $ANTLR start "rule__VolumeLabel__Group__0"
    // InternalDockerCompose.g:7655:1: rule__VolumeLabel__Group__0 : rule__VolumeLabel__Group__0__Impl rule__VolumeLabel__Group__1 ;
    public final void rule__VolumeLabel__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7659:1: ( rule__VolumeLabel__Group__0__Impl rule__VolumeLabel__Group__1 )
            // InternalDockerCompose.g:7660:2: rule__VolumeLabel__Group__0__Impl rule__VolumeLabel__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__VolumeLabel__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeLabel__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__0"


    // $ANTLR start "rule__VolumeLabel__Group__0__Impl"
    // InternalDockerCompose.g:7667:1: rule__VolumeLabel__Group__0__Impl : ( () ) ;
    public final void rule__VolumeLabel__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7671:1: ( ( () ) )
            // InternalDockerCompose.g:7672:1: ( () )
            {
            // InternalDockerCompose.g:7672:1: ( () )
            // InternalDockerCompose.g:7673:2: ()
            {
             before(grammarAccess.getVolumeLabelAccess().getVolumeLabelAction_0()); 
            // InternalDockerCompose.g:7674:2: ()
            // InternalDockerCompose.g:7674:3: 
            {
            }

             after(grammarAccess.getVolumeLabelAccess().getVolumeLabelAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__0__Impl"


    // $ANTLR start "rule__VolumeLabel__Group__1"
    // InternalDockerCompose.g:7682:1: rule__VolumeLabel__Group__1 : rule__VolumeLabel__Group__1__Impl rule__VolumeLabel__Group__2 ;
    public final void rule__VolumeLabel__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7686:1: ( rule__VolumeLabel__Group__1__Impl rule__VolumeLabel__Group__2 )
            // InternalDockerCompose.g:7687:2: rule__VolumeLabel__Group__1__Impl rule__VolumeLabel__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__VolumeLabel__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeLabel__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__1"


    // $ANTLR start "rule__VolumeLabel__Group__1__Impl"
    // InternalDockerCompose.g:7694:1: rule__VolumeLabel__Group__1__Impl : ( ( rule__VolumeLabel__NameAssignment_1 ) ) ;
    public final void rule__VolumeLabel__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7698:1: ( ( ( rule__VolumeLabel__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:7699:1: ( ( rule__VolumeLabel__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:7699:1: ( ( rule__VolumeLabel__NameAssignment_1 ) )
            // InternalDockerCompose.g:7700:2: ( rule__VolumeLabel__NameAssignment_1 )
            {
             before(grammarAccess.getVolumeLabelAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:7701:2: ( rule__VolumeLabel__NameAssignment_1 )
            // InternalDockerCompose.g:7701:3: rule__VolumeLabel__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeLabel__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeLabelAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__1__Impl"


    // $ANTLR start "rule__VolumeLabel__Group__2"
    // InternalDockerCompose.g:7709:1: rule__VolumeLabel__Group__2 : rule__VolumeLabel__Group__2__Impl rule__VolumeLabel__Group__3 ;
    public final void rule__VolumeLabel__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7713:1: ( rule__VolumeLabel__Group__2__Impl rule__VolumeLabel__Group__3 )
            // InternalDockerCompose.g:7714:2: rule__VolumeLabel__Group__2__Impl rule__VolumeLabel__Group__3
            {
            pushFollow(FOLLOW_6);
            rule__VolumeLabel__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeLabel__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__2"


    // $ANTLR start "rule__VolumeLabel__Group__2__Impl"
    // InternalDockerCompose.g:7721:1: rule__VolumeLabel__Group__2__Impl : ( ':' ) ;
    public final void rule__VolumeLabel__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7725:1: ( ( ':' ) )
            // InternalDockerCompose.g:7726:1: ( ':' )
            {
            // InternalDockerCompose.g:7726:1: ( ':' )
            // InternalDockerCompose.g:7727:2: ':'
            {
             before(grammarAccess.getVolumeLabelAccess().getColonKeyword_2()); 
            match(input,43,FOLLOW_2); 
             after(grammarAccess.getVolumeLabelAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__2__Impl"


    // $ANTLR start "rule__VolumeLabel__Group__3"
    // InternalDockerCompose.g:7736:1: rule__VolumeLabel__Group__3 : rule__VolumeLabel__Group__3__Impl ;
    public final void rule__VolumeLabel__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7740:1: ( rule__VolumeLabel__Group__3__Impl )
            // InternalDockerCompose.g:7741:2: rule__VolumeLabel__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeLabel__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__3"


    // $ANTLR start "rule__VolumeLabel__Group__3__Impl"
    // InternalDockerCompose.g:7747:1: rule__VolumeLabel__Group__3__Impl : ( ( rule__VolumeLabel__ValueAssignment_3 ) ) ;
    public final void rule__VolumeLabel__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7751:1: ( ( ( rule__VolumeLabel__ValueAssignment_3 ) ) )
            // InternalDockerCompose.g:7752:1: ( ( rule__VolumeLabel__ValueAssignment_3 ) )
            {
            // InternalDockerCompose.g:7752:1: ( ( rule__VolumeLabel__ValueAssignment_3 ) )
            // InternalDockerCompose.g:7753:2: ( rule__VolumeLabel__ValueAssignment_3 )
            {
             before(grammarAccess.getVolumeLabelAccess().getValueAssignment_3()); 
            // InternalDockerCompose.g:7754:2: ( rule__VolumeLabel__ValueAssignment_3 )
            // InternalDockerCompose.g:7754:3: rule__VolumeLabel__ValueAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__VolumeLabel__ValueAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getVolumeLabelAccess().getValueAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__3__Impl"


    // $ANTLR start "rule__VolumeDriverOpt__Group__0"
    // InternalDockerCompose.g:7763:1: rule__VolumeDriverOpt__Group__0 : rule__VolumeDriverOpt__Group__0__Impl rule__VolumeDriverOpt__Group__1 ;
    public final void rule__VolumeDriverOpt__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7767:1: ( rule__VolumeDriverOpt__Group__0__Impl rule__VolumeDriverOpt__Group__1 )
            // InternalDockerCompose.g:7768:2: rule__VolumeDriverOpt__Group__0__Impl rule__VolumeDriverOpt__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__VolumeDriverOpt__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__0"


    // $ANTLR start "rule__VolumeDriverOpt__Group__0__Impl"
    // InternalDockerCompose.g:7775:1: rule__VolumeDriverOpt__Group__0__Impl : ( () ) ;
    public final void rule__VolumeDriverOpt__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7779:1: ( ( () ) )
            // InternalDockerCompose.g:7780:1: ( () )
            {
            // InternalDockerCompose.g:7780:1: ( () )
            // InternalDockerCompose.g:7781:2: ()
            {
             before(grammarAccess.getVolumeDriverOptAccess().getVolumeDriverOptAction_0()); 
            // InternalDockerCompose.g:7782:2: ()
            // InternalDockerCompose.g:7782:3: 
            {
            }

             after(grammarAccess.getVolumeDriverOptAccess().getVolumeDriverOptAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__0__Impl"


    // $ANTLR start "rule__VolumeDriverOpt__Group__1"
    // InternalDockerCompose.g:7790:1: rule__VolumeDriverOpt__Group__1 : rule__VolumeDriverOpt__Group__1__Impl rule__VolumeDriverOpt__Group__2 ;
    public final void rule__VolumeDriverOpt__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7794:1: ( rule__VolumeDriverOpt__Group__1__Impl rule__VolumeDriverOpt__Group__2 )
            // InternalDockerCompose.g:7795:2: rule__VolumeDriverOpt__Group__1__Impl rule__VolumeDriverOpt__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__VolumeDriverOpt__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__1"


    // $ANTLR start "rule__VolumeDriverOpt__Group__1__Impl"
    // InternalDockerCompose.g:7802:1: rule__VolumeDriverOpt__Group__1__Impl : ( ( rule__VolumeDriverOpt__NameAssignment_1 ) ) ;
    public final void rule__VolumeDriverOpt__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7806:1: ( ( ( rule__VolumeDriverOpt__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:7807:1: ( ( rule__VolumeDriverOpt__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:7807:1: ( ( rule__VolumeDriverOpt__NameAssignment_1 ) )
            // InternalDockerCompose.g:7808:2: ( rule__VolumeDriverOpt__NameAssignment_1 )
            {
             before(grammarAccess.getVolumeDriverOptAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:7809:2: ( rule__VolumeDriverOpt__NameAssignment_1 )
            // InternalDockerCompose.g:7809:3: rule__VolumeDriverOpt__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeDriverOptAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__1__Impl"


    // $ANTLR start "rule__VolumeDriverOpt__Group__2"
    // InternalDockerCompose.g:7817:1: rule__VolumeDriverOpt__Group__2 : rule__VolumeDriverOpt__Group__2__Impl rule__VolumeDriverOpt__Group__3 ;
    public final void rule__VolumeDriverOpt__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7821:1: ( rule__VolumeDriverOpt__Group__2__Impl rule__VolumeDriverOpt__Group__3 )
            // InternalDockerCompose.g:7822:2: rule__VolumeDriverOpt__Group__2__Impl rule__VolumeDriverOpt__Group__3
            {
            pushFollow(FOLLOW_6);
            rule__VolumeDriverOpt__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__2"


    // $ANTLR start "rule__VolumeDriverOpt__Group__2__Impl"
    // InternalDockerCompose.g:7829:1: rule__VolumeDriverOpt__Group__2__Impl : ( ':' ) ;
    public final void rule__VolumeDriverOpt__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7833:1: ( ( ':' ) )
            // InternalDockerCompose.g:7834:1: ( ':' )
            {
            // InternalDockerCompose.g:7834:1: ( ':' )
            // InternalDockerCompose.g:7835:2: ':'
            {
             before(grammarAccess.getVolumeDriverOptAccess().getColonKeyword_2()); 
            match(input,43,FOLLOW_2); 
             after(grammarAccess.getVolumeDriverOptAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__2__Impl"


    // $ANTLR start "rule__VolumeDriverOpt__Group__3"
    // InternalDockerCompose.g:7844:1: rule__VolumeDriverOpt__Group__3 : rule__VolumeDriverOpt__Group__3__Impl ;
    public final void rule__VolumeDriverOpt__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7848:1: ( rule__VolumeDriverOpt__Group__3__Impl )
            // InternalDockerCompose.g:7849:2: rule__VolumeDriverOpt__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__3"


    // $ANTLR start "rule__VolumeDriverOpt__Group__3__Impl"
    // InternalDockerCompose.g:7855:1: rule__VolumeDriverOpt__Group__3__Impl : ( ( rule__VolumeDriverOpt__ValueAssignment_3 ) ) ;
    public final void rule__VolumeDriverOpt__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7859:1: ( ( ( rule__VolumeDriverOpt__ValueAssignment_3 ) ) )
            // InternalDockerCompose.g:7860:1: ( ( rule__VolumeDriverOpt__ValueAssignment_3 ) )
            {
            // InternalDockerCompose.g:7860:1: ( ( rule__VolumeDriverOpt__ValueAssignment_3 ) )
            // InternalDockerCompose.g:7861:2: ( rule__VolumeDriverOpt__ValueAssignment_3 )
            {
             before(grammarAccess.getVolumeDriverOptAccess().getValueAssignment_3()); 
            // InternalDockerCompose.g:7862:2: ( rule__VolumeDriverOpt__ValueAssignment_3 )
            // InternalDockerCompose.g:7862:3: rule__VolumeDriverOpt__ValueAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__ValueAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getVolumeDriverOptAccess().getValueAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__3__Impl"


    // $ANTLR start "rule__NetworkLabel__Group__0"
    // InternalDockerCompose.g:7871:1: rule__NetworkLabel__Group__0 : rule__NetworkLabel__Group__0__Impl rule__NetworkLabel__Group__1 ;
    public final void rule__NetworkLabel__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7875:1: ( rule__NetworkLabel__Group__0__Impl rule__NetworkLabel__Group__1 )
            // InternalDockerCompose.g:7876:2: rule__NetworkLabel__Group__0__Impl rule__NetworkLabel__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__NetworkLabel__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkLabel__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__0"


    // $ANTLR start "rule__NetworkLabel__Group__0__Impl"
    // InternalDockerCompose.g:7883:1: rule__NetworkLabel__Group__0__Impl : ( () ) ;
    public final void rule__NetworkLabel__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7887:1: ( ( () ) )
            // InternalDockerCompose.g:7888:1: ( () )
            {
            // InternalDockerCompose.g:7888:1: ( () )
            // InternalDockerCompose.g:7889:2: ()
            {
             before(grammarAccess.getNetworkLabelAccess().getNetworkLabelAction_0()); 
            // InternalDockerCompose.g:7890:2: ()
            // InternalDockerCompose.g:7890:3: 
            {
            }

             after(grammarAccess.getNetworkLabelAccess().getNetworkLabelAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__0__Impl"


    // $ANTLR start "rule__NetworkLabel__Group__1"
    // InternalDockerCompose.g:7898:1: rule__NetworkLabel__Group__1 : rule__NetworkLabel__Group__1__Impl rule__NetworkLabel__Group__2 ;
    public final void rule__NetworkLabel__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7902:1: ( rule__NetworkLabel__Group__1__Impl rule__NetworkLabel__Group__2 )
            // InternalDockerCompose.g:7903:2: rule__NetworkLabel__Group__1__Impl rule__NetworkLabel__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__NetworkLabel__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkLabel__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__1"


    // $ANTLR start "rule__NetworkLabel__Group__1__Impl"
    // InternalDockerCompose.g:7910:1: rule__NetworkLabel__Group__1__Impl : ( ( rule__NetworkLabel__NameAssignment_1 ) ) ;
    public final void rule__NetworkLabel__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7914:1: ( ( ( rule__NetworkLabel__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:7915:1: ( ( rule__NetworkLabel__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:7915:1: ( ( rule__NetworkLabel__NameAssignment_1 ) )
            // InternalDockerCompose.g:7916:2: ( rule__NetworkLabel__NameAssignment_1 )
            {
             before(grammarAccess.getNetworkLabelAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:7917:2: ( rule__NetworkLabel__NameAssignment_1 )
            // InternalDockerCompose.g:7917:3: rule__NetworkLabel__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkLabel__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkLabelAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__1__Impl"


    // $ANTLR start "rule__NetworkLabel__Group__2"
    // InternalDockerCompose.g:7925:1: rule__NetworkLabel__Group__2 : rule__NetworkLabel__Group__2__Impl rule__NetworkLabel__Group__3 ;
    public final void rule__NetworkLabel__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7929:1: ( rule__NetworkLabel__Group__2__Impl rule__NetworkLabel__Group__3 )
            // InternalDockerCompose.g:7930:2: rule__NetworkLabel__Group__2__Impl rule__NetworkLabel__Group__3
            {
            pushFollow(FOLLOW_6);
            rule__NetworkLabel__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkLabel__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__2"


    // $ANTLR start "rule__NetworkLabel__Group__2__Impl"
    // InternalDockerCompose.g:7937:1: rule__NetworkLabel__Group__2__Impl : ( ':' ) ;
    public final void rule__NetworkLabel__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7941:1: ( ( ':' ) )
            // InternalDockerCompose.g:7942:1: ( ':' )
            {
            // InternalDockerCompose.g:7942:1: ( ':' )
            // InternalDockerCompose.g:7943:2: ':'
            {
             before(grammarAccess.getNetworkLabelAccess().getColonKeyword_2()); 
            match(input,43,FOLLOW_2); 
             after(grammarAccess.getNetworkLabelAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__2__Impl"


    // $ANTLR start "rule__NetworkLabel__Group__3"
    // InternalDockerCompose.g:7952:1: rule__NetworkLabel__Group__3 : rule__NetworkLabel__Group__3__Impl ;
    public final void rule__NetworkLabel__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7956:1: ( rule__NetworkLabel__Group__3__Impl )
            // InternalDockerCompose.g:7957:2: rule__NetworkLabel__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkLabel__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__3"


    // $ANTLR start "rule__NetworkLabel__Group__3__Impl"
    // InternalDockerCompose.g:7963:1: rule__NetworkLabel__Group__3__Impl : ( ( rule__NetworkLabel__ValueAssignment_3 ) ) ;
    public final void rule__NetworkLabel__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7967:1: ( ( ( rule__NetworkLabel__ValueAssignment_3 ) ) )
            // InternalDockerCompose.g:7968:1: ( ( rule__NetworkLabel__ValueAssignment_3 ) )
            {
            // InternalDockerCompose.g:7968:1: ( ( rule__NetworkLabel__ValueAssignment_3 ) )
            // InternalDockerCompose.g:7969:2: ( rule__NetworkLabel__ValueAssignment_3 )
            {
             before(grammarAccess.getNetworkLabelAccess().getValueAssignment_3()); 
            // InternalDockerCompose.g:7970:2: ( rule__NetworkLabel__ValueAssignment_3 )
            // InternalDockerCompose.g:7970:3: rule__NetworkLabel__ValueAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__NetworkLabel__ValueAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getNetworkLabelAccess().getValueAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__3__Impl"


    // $ANTLR start "rule__NetworkDriverOpt__Group__0"
    // InternalDockerCompose.g:7979:1: rule__NetworkDriverOpt__Group__0 : rule__NetworkDriverOpt__Group__0__Impl rule__NetworkDriverOpt__Group__1 ;
    public final void rule__NetworkDriverOpt__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7983:1: ( rule__NetworkDriverOpt__Group__0__Impl rule__NetworkDriverOpt__Group__1 )
            // InternalDockerCompose.g:7984:2: rule__NetworkDriverOpt__Group__0__Impl rule__NetworkDriverOpt__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__NetworkDriverOpt__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__0"


    // $ANTLR start "rule__NetworkDriverOpt__Group__0__Impl"
    // InternalDockerCompose.g:7991:1: rule__NetworkDriverOpt__Group__0__Impl : ( () ) ;
    public final void rule__NetworkDriverOpt__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7995:1: ( ( () ) )
            // InternalDockerCompose.g:7996:1: ( () )
            {
            // InternalDockerCompose.g:7996:1: ( () )
            // InternalDockerCompose.g:7997:2: ()
            {
             before(grammarAccess.getNetworkDriverOptAccess().getNetworkDriverOptAction_0()); 
            // InternalDockerCompose.g:7998:2: ()
            // InternalDockerCompose.g:7998:3: 
            {
            }

             after(grammarAccess.getNetworkDriverOptAccess().getNetworkDriverOptAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__0__Impl"


    // $ANTLR start "rule__NetworkDriverOpt__Group__1"
    // InternalDockerCompose.g:8006:1: rule__NetworkDriverOpt__Group__1 : rule__NetworkDriverOpt__Group__1__Impl rule__NetworkDriverOpt__Group__2 ;
    public final void rule__NetworkDriverOpt__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8010:1: ( rule__NetworkDriverOpt__Group__1__Impl rule__NetworkDriverOpt__Group__2 )
            // InternalDockerCompose.g:8011:2: rule__NetworkDriverOpt__Group__1__Impl rule__NetworkDriverOpt__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__NetworkDriverOpt__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__1"


    // $ANTLR start "rule__NetworkDriverOpt__Group__1__Impl"
    // InternalDockerCompose.g:8018:1: rule__NetworkDriverOpt__Group__1__Impl : ( ( rule__NetworkDriverOpt__NameAssignment_1 ) ) ;
    public final void rule__NetworkDriverOpt__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8022:1: ( ( ( rule__NetworkDriverOpt__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:8023:1: ( ( rule__NetworkDriverOpt__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:8023:1: ( ( rule__NetworkDriverOpt__NameAssignment_1 ) )
            // InternalDockerCompose.g:8024:2: ( rule__NetworkDriverOpt__NameAssignment_1 )
            {
             before(grammarAccess.getNetworkDriverOptAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:8025:2: ( rule__NetworkDriverOpt__NameAssignment_1 )
            // InternalDockerCompose.g:8025:3: rule__NetworkDriverOpt__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkDriverOptAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__1__Impl"


    // $ANTLR start "rule__NetworkDriverOpt__Group__2"
    // InternalDockerCompose.g:8033:1: rule__NetworkDriverOpt__Group__2 : rule__NetworkDriverOpt__Group__2__Impl rule__NetworkDriverOpt__Group__3 ;
    public final void rule__NetworkDriverOpt__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8037:1: ( rule__NetworkDriverOpt__Group__2__Impl rule__NetworkDriverOpt__Group__3 )
            // InternalDockerCompose.g:8038:2: rule__NetworkDriverOpt__Group__2__Impl rule__NetworkDriverOpt__Group__3
            {
            pushFollow(FOLLOW_6);
            rule__NetworkDriverOpt__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__2"


    // $ANTLR start "rule__NetworkDriverOpt__Group__2__Impl"
    // InternalDockerCompose.g:8045:1: rule__NetworkDriverOpt__Group__2__Impl : ( ':' ) ;
    public final void rule__NetworkDriverOpt__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8049:1: ( ( ':' ) )
            // InternalDockerCompose.g:8050:1: ( ':' )
            {
            // InternalDockerCompose.g:8050:1: ( ':' )
            // InternalDockerCompose.g:8051:2: ':'
            {
             before(grammarAccess.getNetworkDriverOptAccess().getColonKeyword_2()); 
            match(input,43,FOLLOW_2); 
             after(grammarAccess.getNetworkDriverOptAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__2__Impl"


    // $ANTLR start "rule__NetworkDriverOpt__Group__3"
    // InternalDockerCompose.g:8060:1: rule__NetworkDriverOpt__Group__3 : rule__NetworkDriverOpt__Group__3__Impl ;
    public final void rule__NetworkDriverOpt__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8064:1: ( rule__NetworkDriverOpt__Group__3__Impl )
            // InternalDockerCompose.g:8065:2: rule__NetworkDriverOpt__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__3"


    // $ANTLR start "rule__NetworkDriverOpt__Group__3__Impl"
    // InternalDockerCompose.g:8071:1: rule__NetworkDriverOpt__Group__3__Impl : ( ( rule__NetworkDriverOpt__ValueAssignment_3 ) ) ;
    public final void rule__NetworkDriverOpt__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8075:1: ( ( ( rule__NetworkDriverOpt__ValueAssignment_3 ) ) )
            // InternalDockerCompose.g:8076:1: ( ( rule__NetworkDriverOpt__ValueAssignment_3 ) )
            {
            // InternalDockerCompose.g:8076:1: ( ( rule__NetworkDriverOpt__ValueAssignment_3 ) )
            // InternalDockerCompose.g:8077:2: ( rule__NetworkDriverOpt__ValueAssignment_3 )
            {
             before(grammarAccess.getNetworkDriverOptAccess().getValueAssignment_3()); 
            // InternalDockerCompose.g:8078:2: ( rule__NetworkDriverOpt__ValueAssignment_3 )
            // InternalDockerCompose.g:8078:3: rule__NetworkDriverOpt__ValueAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__ValueAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getNetworkDriverOptAccess().getValueAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__3__Impl"


    // $ANTLR start "rule__IPAM__Group__0"
    // InternalDockerCompose.g:8087:1: rule__IPAM__Group__0 : rule__IPAM__Group__0__Impl rule__IPAM__Group__1 ;
    public final void rule__IPAM__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8091:1: ( rule__IPAM__Group__0__Impl rule__IPAM__Group__1 )
            // InternalDockerCompose.g:8092:2: rule__IPAM__Group__0__Impl rule__IPAM__Group__1
            {
            pushFollow(FOLLOW_35);
            rule__IPAM__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAM__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group__0"


    // $ANTLR start "rule__IPAM__Group__0__Impl"
    // InternalDockerCompose.g:8099:1: rule__IPAM__Group__0__Impl : ( () ) ;
    public final void rule__IPAM__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8103:1: ( ( () ) )
            // InternalDockerCompose.g:8104:1: ( () )
            {
            // InternalDockerCompose.g:8104:1: ( () )
            // InternalDockerCompose.g:8105:2: ()
            {
             before(grammarAccess.getIPAMAccess().getIPAMAction_0()); 
            // InternalDockerCompose.g:8106:2: ()
            // InternalDockerCompose.g:8106:3: 
            {
            }

             after(grammarAccess.getIPAMAccess().getIPAMAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group__0__Impl"


    // $ANTLR start "rule__IPAM__Group__1"
    // InternalDockerCompose.g:8114:1: rule__IPAM__Group__1 : rule__IPAM__Group__1__Impl ;
    public final void rule__IPAM__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8118:1: ( rule__IPAM__Group__1__Impl )
            // InternalDockerCompose.g:8119:2: rule__IPAM__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group__1"


    // $ANTLR start "rule__IPAM__Group__1__Impl"
    // InternalDockerCompose.g:8125:1: rule__IPAM__Group__1__Impl : ( ( rule__IPAM__UnorderedGroup_1 ) ) ;
    public final void rule__IPAM__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8129:1: ( ( ( rule__IPAM__UnorderedGroup_1 ) ) )
            // InternalDockerCompose.g:8130:1: ( ( rule__IPAM__UnorderedGroup_1 ) )
            {
            // InternalDockerCompose.g:8130:1: ( ( rule__IPAM__UnorderedGroup_1 ) )
            // InternalDockerCompose.g:8131:2: ( rule__IPAM__UnorderedGroup_1 )
            {
             before(grammarAccess.getIPAMAccess().getUnorderedGroup_1()); 
            // InternalDockerCompose.g:8132:2: ( rule__IPAM__UnorderedGroup_1 )
            // InternalDockerCompose.g:8132:3: rule__IPAM__UnorderedGroup_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__UnorderedGroup_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAccess().getUnorderedGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group__1__Impl"


    // $ANTLR start "rule__IPAM__Group_1_0__0"
    // InternalDockerCompose.g:8141:1: rule__IPAM__Group_1_0__0 : rule__IPAM__Group_1_0__0__Impl rule__IPAM__Group_1_0__1 ;
    public final void rule__IPAM__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8145:1: ( rule__IPAM__Group_1_0__0__Impl rule__IPAM__Group_1_0__1 )
            // InternalDockerCompose.g:8146:2: rule__IPAM__Group_1_0__0__Impl rule__IPAM__Group_1_0__1
            {
            pushFollow(FOLLOW_6);
            rule__IPAM__Group_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_0__0"


    // $ANTLR start "rule__IPAM__Group_1_0__0__Impl"
    // InternalDockerCompose.g:8153:1: rule__IPAM__Group_1_0__0__Impl : ( 'driver:' ) ;
    public final void rule__IPAM__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8157:1: ( ( 'driver:' ) )
            // InternalDockerCompose.g:8158:1: ( 'driver:' )
            {
            // InternalDockerCompose.g:8158:1: ( 'driver:' )
            // InternalDockerCompose.g:8159:2: 'driver:'
            {
             before(grammarAccess.getIPAMAccess().getDriverKeyword_1_0_0()); 
            match(input,77,FOLLOW_2); 
             after(grammarAccess.getIPAMAccess().getDriverKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_0__0__Impl"


    // $ANTLR start "rule__IPAM__Group_1_0__1"
    // InternalDockerCompose.g:8168:1: rule__IPAM__Group_1_0__1 : rule__IPAM__Group_1_0__1__Impl ;
    public final void rule__IPAM__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8172:1: ( rule__IPAM__Group_1_0__1__Impl )
            // InternalDockerCompose.g:8173:2: rule__IPAM__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_0__1"


    // $ANTLR start "rule__IPAM__Group_1_0__1__Impl"
    // InternalDockerCompose.g:8179:1: rule__IPAM__Group_1_0__1__Impl : ( ( rule__IPAM__DriverAssignment_1_0_1 ) ) ;
    public final void rule__IPAM__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8183:1: ( ( ( rule__IPAM__DriverAssignment_1_0_1 ) ) )
            // InternalDockerCompose.g:8184:1: ( ( rule__IPAM__DriverAssignment_1_0_1 ) )
            {
            // InternalDockerCompose.g:8184:1: ( ( rule__IPAM__DriverAssignment_1_0_1 ) )
            // InternalDockerCompose.g:8185:2: ( rule__IPAM__DriverAssignment_1_0_1 )
            {
             before(grammarAccess.getIPAMAccess().getDriverAssignment_1_0_1()); 
            // InternalDockerCompose.g:8186:2: ( rule__IPAM__DriverAssignment_1_0_1 )
            // InternalDockerCompose.g:8186:3: rule__IPAM__DriverAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__DriverAssignment_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAccess().getDriverAssignment_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_0__1__Impl"


    // $ANTLR start "rule__IPAM__Group_1_1__0"
    // InternalDockerCompose.g:8195:1: rule__IPAM__Group_1_1__0 : rule__IPAM__Group_1_1__0__Impl rule__IPAM__Group_1_1__1 ;
    public final void rule__IPAM__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8199:1: ( rule__IPAM__Group_1_1__0__Impl rule__IPAM__Group_1_1__1 )
            // InternalDockerCompose.g:8200:2: rule__IPAM__Group_1_1__0__Impl rule__IPAM__Group_1_1__1
            {
            pushFollow(FOLLOW_13);
            rule__IPAM__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1__0"


    // $ANTLR start "rule__IPAM__Group_1_1__0__Impl"
    // InternalDockerCompose.g:8207:1: rule__IPAM__Group_1_1__0__Impl : ( 'config:' ) ;
    public final void rule__IPAM__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8211:1: ( ( 'config:' ) )
            // InternalDockerCompose.g:8212:1: ( 'config:' )
            {
            // InternalDockerCompose.g:8212:1: ( 'config:' )
            // InternalDockerCompose.g:8213:2: 'config:'
            {
             before(grammarAccess.getIPAMAccess().getConfigKeyword_1_1_0()); 
            match(input,88,FOLLOW_2); 
             after(grammarAccess.getIPAMAccess().getConfigKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1__0__Impl"


    // $ANTLR start "rule__IPAM__Group_1_1__1"
    // InternalDockerCompose.g:8222:1: rule__IPAM__Group_1_1__1 : rule__IPAM__Group_1_1__1__Impl ;
    public final void rule__IPAM__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8226:1: ( rule__IPAM__Group_1_1__1__Impl )
            // InternalDockerCompose.g:8227:2: rule__IPAM__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1__1"


    // $ANTLR start "rule__IPAM__Group_1_1__1__Impl"
    // InternalDockerCompose.g:8233:1: rule__IPAM__Group_1_1__1__Impl : ( ( ( rule__IPAM__Group_1_1_1__0 ) ) ( ( rule__IPAM__Group_1_1_1__0 )* ) ) ;
    public final void rule__IPAM__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8237:1: ( ( ( ( rule__IPAM__Group_1_1_1__0 ) ) ( ( rule__IPAM__Group_1_1_1__0 )* ) ) )
            // InternalDockerCompose.g:8238:1: ( ( ( rule__IPAM__Group_1_1_1__0 ) ) ( ( rule__IPAM__Group_1_1_1__0 )* ) )
            {
            // InternalDockerCompose.g:8238:1: ( ( ( rule__IPAM__Group_1_1_1__0 ) ) ( ( rule__IPAM__Group_1_1_1__0 )* ) )
            // InternalDockerCompose.g:8239:2: ( ( rule__IPAM__Group_1_1_1__0 ) ) ( ( rule__IPAM__Group_1_1_1__0 )* )
            {
            // InternalDockerCompose.g:8239:2: ( ( rule__IPAM__Group_1_1_1__0 ) )
            // InternalDockerCompose.g:8240:3: ( rule__IPAM__Group_1_1_1__0 )
            {
             before(grammarAccess.getIPAMAccess().getGroup_1_1_1()); 
            // InternalDockerCompose.g:8241:3: ( rule__IPAM__Group_1_1_1__0 )
            // InternalDockerCompose.g:8241:4: rule__IPAM__Group_1_1_1__0
            {
            pushFollow(FOLLOW_3);
            rule__IPAM__Group_1_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAccess().getGroup_1_1_1()); 

            }

            // InternalDockerCompose.g:8244:2: ( ( rule__IPAM__Group_1_1_1__0 )* )
            // InternalDockerCompose.g:8245:3: ( rule__IPAM__Group_1_1_1__0 )*
            {
             before(grammarAccess.getIPAMAccess().getGroup_1_1_1()); 
            // InternalDockerCompose.g:8246:3: ( rule__IPAM__Group_1_1_1__0 )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==53) ) {
                    alt44=1;
                }


                switch (alt44) {
            	case 1 :
            	    // InternalDockerCompose.g:8246:4: rule__IPAM__Group_1_1_1__0
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__IPAM__Group_1_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);

             after(grammarAccess.getIPAMAccess().getGroup_1_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1__1__Impl"


    // $ANTLR start "rule__IPAM__Group_1_1_1__0"
    // InternalDockerCompose.g:8256:1: rule__IPAM__Group_1_1_1__0 : rule__IPAM__Group_1_1_1__0__Impl rule__IPAM__Group_1_1_1__1 ;
    public final void rule__IPAM__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8260:1: ( rule__IPAM__Group_1_1_1__0__Impl rule__IPAM__Group_1_1_1__1 )
            // InternalDockerCompose.g:8261:2: rule__IPAM__Group_1_1_1__0__Impl rule__IPAM__Group_1_1_1__1
            {
            pushFollow(FOLLOW_39);
            rule__IPAM__Group_1_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1_1__0"


    // $ANTLR start "rule__IPAM__Group_1_1_1__0__Impl"
    // InternalDockerCompose.g:8268:1: rule__IPAM__Group_1_1_1__0__Impl : ( '-' ) ;
    public final void rule__IPAM__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8272:1: ( ( '-' ) )
            // InternalDockerCompose.g:8273:1: ( '-' )
            {
            // InternalDockerCompose.g:8273:1: ( '-' )
            // InternalDockerCompose.g:8274:2: '-'
            {
             before(grammarAccess.getIPAMAccess().getHyphenMinusKeyword_1_1_1_0()); 
            match(input,53,FOLLOW_2); 
             after(grammarAccess.getIPAMAccess().getHyphenMinusKeyword_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__IPAM__Group_1_1_1__1"
    // InternalDockerCompose.g:8283:1: rule__IPAM__Group_1_1_1__1 : rule__IPAM__Group_1_1_1__1__Impl ;
    public final void rule__IPAM__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8287:1: ( rule__IPAM__Group_1_1_1__1__Impl )
            // InternalDockerCompose.g:8288:2: rule__IPAM__Group_1_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1_1__1"


    // $ANTLR start "rule__IPAM__Group_1_1_1__1__Impl"
    // InternalDockerCompose.g:8294:1: rule__IPAM__Group_1_1_1__1__Impl : ( ( rule__IPAM__ConfigsAssignment_1_1_1_1 ) ) ;
    public final void rule__IPAM__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8298:1: ( ( ( rule__IPAM__ConfigsAssignment_1_1_1_1 ) ) )
            // InternalDockerCompose.g:8299:1: ( ( rule__IPAM__ConfigsAssignment_1_1_1_1 ) )
            {
            // InternalDockerCompose.g:8299:1: ( ( rule__IPAM__ConfigsAssignment_1_1_1_1 ) )
            // InternalDockerCompose.g:8300:2: ( rule__IPAM__ConfigsAssignment_1_1_1_1 )
            {
             before(grammarAccess.getIPAMAccess().getConfigsAssignment_1_1_1_1()); 
            // InternalDockerCompose.g:8301:2: ( rule__IPAM__ConfigsAssignment_1_1_1_1 )
            // InternalDockerCompose.g:8301:3: rule__IPAM__ConfigsAssignment_1_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__ConfigsAssignment_1_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAccess().getConfigsAssignment_1_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__IPAM__Group_1_2__0"
    // InternalDockerCompose.g:8310:1: rule__IPAM__Group_1_2__0 : rule__IPAM__Group_1_2__0__Impl rule__IPAM__Group_1_2__1 ;
    public final void rule__IPAM__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8314:1: ( rule__IPAM__Group_1_2__0__Impl rule__IPAM__Group_1_2__1 )
            // InternalDockerCompose.g:8315:2: rule__IPAM__Group_1_2__0__Impl rule__IPAM__Group_1_2__1
            {
            pushFollow(FOLLOW_6);
            rule__IPAM__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_2__0"


    // $ANTLR start "rule__IPAM__Group_1_2__0__Impl"
    // InternalDockerCompose.g:8322:1: rule__IPAM__Group_1_2__0__Impl : ( 'options:' ) ;
    public final void rule__IPAM__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8326:1: ( ( 'options:' ) )
            // InternalDockerCompose.g:8327:1: ( 'options:' )
            {
            // InternalDockerCompose.g:8327:1: ( 'options:' )
            // InternalDockerCompose.g:8328:2: 'options:'
            {
             before(grammarAccess.getIPAMAccess().getOptionsKeyword_1_2_0()); 
            match(input,89,FOLLOW_2); 
             after(grammarAccess.getIPAMAccess().getOptionsKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_2__0__Impl"


    // $ANTLR start "rule__IPAM__Group_1_2__1"
    // InternalDockerCompose.g:8337:1: rule__IPAM__Group_1_2__1 : rule__IPAM__Group_1_2__1__Impl ;
    public final void rule__IPAM__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8341:1: ( rule__IPAM__Group_1_2__1__Impl )
            // InternalDockerCompose.g:8342:2: rule__IPAM__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_2__1"


    // $ANTLR start "rule__IPAM__Group_1_2__1__Impl"
    // InternalDockerCompose.g:8348:1: rule__IPAM__Group_1_2__1__Impl : ( ( ( rule__IPAM__OptionsAssignment_1_2_1 ) ) ( ( rule__IPAM__OptionsAssignment_1_2_1 )* ) ) ;
    public final void rule__IPAM__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8352:1: ( ( ( ( rule__IPAM__OptionsAssignment_1_2_1 ) ) ( ( rule__IPAM__OptionsAssignment_1_2_1 )* ) ) )
            // InternalDockerCompose.g:8353:1: ( ( ( rule__IPAM__OptionsAssignment_1_2_1 ) ) ( ( rule__IPAM__OptionsAssignment_1_2_1 )* ) )
            {
            // InternalDockerCompose.g:8353:1: ( ( ( rule__IPAM__OptionsAssignment_1_2_1 ) ) ( ( rule__IPAM__OptionsAssignment_1_2_1 )* ) )
            // InternalDockerCompose.g:8354:2: ( ( rule__IPAM__OptionsAssignment_1_2_1 ) ) ( ( rule__IPAM__OptionsAssignment_1_2_1 )* )
            {
            // InternalDockerCompose.g:8354:2: ( ( rule__IPAM__OptionsAssignment_1_2_1 ) )
            // InternalDockerCompose.g:8355:3: ( rule__IPAM__OptionsAssignment_1_2_1 )
            {
             before(grammarAccess.getIPAMAccess().getOptionsAssignment_1_2_1()); 
            // InternalDockerCompose.g:8356:3: ( rule__IPAM__OptionsAssignment_1_2_1 )
            // InternalDockerCompose.g:8356:4: rule__IPAM__OptionsAssignment_1_2_1
            {
            pushFollow(FOLLOW_4);
            rule__IPAM__OptionsAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAccess().getOptionsAssignment_1_2_1()); 

            }

            // InternalDockerCompose.g:8359:2: ( ( rule__IPAM__OptionsAssignment_1_2_1 )* )
            // InternalDockerCompose.g:8360:3: ( rule__IPAM__OptionsAssignment_1_2_1 )*
            {
             before(grammarAccess.getIPAMAccess().getOptionsAssignment_1_2_1()); 
            // InternalDockerCompose.g:8361:3: ( rule__IPAM__OptionsAssignment_1_2_1 )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==RULE_STRING) ) {
                    int LA45_2 = input.LA(2);

                    if ( (LA45_2==43) ) {
                        int LA45_4 = input.LA(3);

                        if ( (LA45_4==RULE_STRING) ) {
                            int LA45_5 = input.LA(4);

                            if ( (LA45_5==EOF||(LA45_5>=RULE_STRING && LA45_5<=RULE_ID)||(LA45_5>=37 && LA45_5<=42)||(LA45_5>=77 && LA45_5<=85)||(LA45_5>=88 && LA45_5<=89)) ) {
                                alt45=1;
                            }


                        }
                        else if ( (LA45_4==RULE_ID) ) {
                            int LA45_6 = input.LA(4);

                            if ( (LA45_6==EOF||(LA45_6>=RULE_STRING && LA45_6<=RULE_ID)||(LA45_6>=37 && LA45_6<=42)||(LA45_6>=77 && LA45_6<=85)||(LA45_6>=88 && LA45_6<=89)) ) {
                                alt45=1;
                            }


                        }


                    }


                }
                else if ( (LA45_0==RULE_ID) ) {
                    int LA45_3 = input.LA(2);

                    if ( (LA45_3==43) ) {
                        int LA45_4 = input.LA(3);

                        if ( (LA45_4==RULE_STRING) ) {
                            int LA45_5 = input.LA(4);

                            if ( (LA45_5==EOF||(LA45_5>=RULE_STRING && LA45_5<=RULE_ID)||(LA45_5>=37 && LA45_5<=42)||(LA45_5>=77 && LA45_5<=85)||(LA45_5>=88 && LA45_5<=89)) ) {
                                alt45=1;
                            }


                        }
                        else if ( (LA45_4==RULE_ID) ) {
                            int LA45_6 = input.LA(4);

                            if ( (LA45_6==EOF||(LA45_6>=RULE_STRING && LA45_6<=RULE_ID)||(LA45_6>=37 && LA45_6<=42)||(LA45_6>=77 && LA45_6<=85)||(LA45_6>=88 && LA45_6<=89)) ) {
                                alt45=1;
                            }


                        }


                    }


                }


                switch (alt45) {
            	case 1 :
            	    // InternalDockerCompose.g:8361:4: rule__IPAM__OptionsAssignment_1_2_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__IPAM__OptionsAssignment_1_2_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);

             after(grammarAccess.getIPAMAccess().getOptionsAssignment_1_2_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_2__1__Impl"


    // $ANTLR start "rule__IPAMConfig__Group__0"
    // InternalDockerCompose.g:8371:1: rule__IPAMConfig__Group__0 : rule__IPAMConfig__Group__0__Impl rule__IPAMConfig__Group__1 ;
    public final void rule__IPAMConfig__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8375:1: ( rule__IPAMConfig__Group__0__Impl rule__IPAMConfig__Group__1 )
            // InternalDockerCompose.g:8376:2: rule__IPAMConfig__Group__0__Impl rule__IPAMConfig__Group__1
            {
            pushFollow(FOLLOW_39);
            rule__IPAMConfig__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group__0"


    // $ANTLR start "rule__IPAMConfig__Group__0__Impl"
    // InternalDockerCompose.g:8383:1: rule__IPAMConfig__Group__0__Impl : ( () ) ;
    public final void rule__IPAMConfig__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8387:1: ( ( () ) )
            // InternalDockerCompose.g:8388:1: ( () )
            {
            // InternalDockerCompose.g:8388:1: ( () )
            // InternalDockerCompose.g:8389:2: ()
            {
             before(grammarAccess.getIPAMConfigAccess().getIPAMConfigAction_0()); 
            // InternalDockerCompose.g:8390:2: ()
            // InternalDockerCompose.g:8390:3: 
            {
            }

             after(grammarAccess.getIPAMConfigAccess().getIPAMConfigAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group__0__Impl"


    // $ANTLR start "rule__IPAMConfig__Group__1"
    // InternalDockerCompose.g:8398:1: rule__IPAMConfig__Group__1 : rule__IPAMConfig__Group__1__Impl ;
    public final void rule__IPAMConfig__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8402:1: ( rule__IPAMConfig__Group__1__Impl )
            // InternalDockerCompose.g:8403:2: rule__IPAMConfig__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group__1"


    // $ANTLR start "rule__IPAMConfig__Group__1__Impl"
    // InternalDockerCompose.g:8409:1: rule__IPAMConfig__Group__1__Impl : ( ( rule__IPAMConfig__UnorderedGroup_1 ) ) ;
    public final void rule__IPAMConfig__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8413:1: ( ( ( rule__IPAMConfig__UnorderedGroup_1 ) ) )
            // InternalDockerCompose.g:8414:1: ( ( rule__IPAMConfig__UnorderedGroup_1 ) )
            {
            // InternalDockerCompose.g:8414:1: ( ( rule__IPAMConfig__UnorderedGroup_1 ) )
            // InternalDockerCompose.g:8415:2: ( rule__IPAMConfig__UnorderedGroup_1 )
            {
             before(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1()); 
            // InternalDockerCompose.g:8416:2: ( rule__IPAMConfig__UnorderedGroup_1 )
            // InternalDockerCompose.g:8416:3: rule__IPAMConfig__UnorderedGroup_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__UnorderedGroup_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group__1__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_0__0"
    // InternalDockerCompose.g:8425:1: rule__IPAMConfig__Group_1_0__0 : rule__IPAMConfig__Group_1_0__0__Impl rule__IPAMConfig__Group_1_0__1 ;
    public final void rule__IPAMConfig__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8429:1: ( rule__IPAMConfig__Group_1_0__0__Impl rule__IPAMConfig__Group_1_0__1 )
            // InternalDockerCompose.g:8430:2: rule__IPAMConfig__Group_1_0__0__Impl rule__IPAMConfig__Group_1_0__1
            {
            pushFollow(FOLLOW_10);
            rule__IPAMConfig__Group_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_0__0"


    // $ANTLR start "rule__IPAMConfig__Group_1_0__0__Impl"
    // InternalDockerCompose.g:8437:1: rule__IPAMConfig__Group_1_0__0__Impl : ( 'subnet:' ) ;
    public final void rule__IPAMConfig__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8441:1: ( ( 'subnet:' ) )
            // InternalDockerCompose.g:8442:1: ( 'subnet:' )
            {
            // InternalDockerCompose.g:8442:1: ( 'subnet:' )
            // InternalDockerCompose.g:8443:2: 'subnet:'
            {
             before(grammarAccess.getIPAMConfigAccess().getSubnetKeyword_1_0_0()); 
            match(input,90,FOLLOW_2); 
             after(grammarAccess.getIPAMConfigAccess().getSubnetKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_0__0__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_0__1"
    // InternalDockerCompose.g:8452:1: rule__IPAMConfig__Group_1_0__1 : rule__IPAMConfig__Group_1_0__1__Impl ;
    public final void rule__IPAMConfig__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8456:1: ( rule__IPAMConfig__Group_1_0__1__Impl )
            // InternalDockerCompose.g:8457:2: rule__IPAMConfig__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_0__1"


    // $ANTLR start "rule__IPAMConfig__Group_1_0__1__Impl"
    // InternalDockerCompose.g:8463:1: rule__IPAMConfig__Group_1_0__1__Impl : ( ( rule__IPAMConfig__SubnetAssignment_1_0_1 ) ) ;
    public final void rule__IPAMConfig__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8467:1: ( ( ( rule__IPAMConfig__SubnetAssignment_1_0_1 ) ) )
            // InternalDockerCompose.g:8468:1: ( ( rule__IPAMConfig__SubnetAssignment_1_0_1 ) )
            {
            // InternalDockerCompose.g:8468:1: ( ( rule__IPAMConfig__SubnetAssignment_1_0_1 ) )
            // InternalDockerCompose.g:8469:2: ( rule__IPAMConfig__SubnetAssignment_1_0_1 )
            {
             before(grammarAccess.getIPAMConfigAccess().getSubnetAssignment_1_0_1()); 
            // InternalDockerCompose.g:8470:2: ( rule__IPAMConfig__SubnetAssignment_1_0_1 )
            // InternalDockerCompose.g:8470:3: rule__IPAMConfig__SubnetAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__SubnetAssignment_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMConfigAccess().getSubnetAssignment_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_0__1__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_1__0"
    // InternalDockerCompose.g:8479:1: rule__IPAMConfig__Group_1_1__0 : rule__IPAMConfig__Group_1_1__0__Impl rule__IPAMConfig__Group_1_1__1 ;
    public final void rule__IPAMConfig__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8483:1: ( rule__IPAMConfig__Group_1_1__0__Impl rule__IPAMConfig__Group_1_1__1 )
            // InternalDockerCompose.g:8484:2: rule__IPAMConfig__Group_1_1__0__Impl rule__IPAMConfig__Group_1_1__1
            {
            pushFollow(FOLLOW_10);
            rule__IPAMConfig__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_1__0"


    // $ANTLR start "rule__IPAMConfig__Group_1_1__0__Impl"
    // InternalDockerCompose.g:8491:1: rule__IPAMConfig__Group_1_1__0__Impl : ( 'ip_range:' ) ;
    public final void rule__IPAMConfig__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8495:1: ( ( 'ip_range:' ) )
            // InternalDockerCompose.g:8496:1: ( 'ip_range:' )
            {
            // InternalDockerCompose.g:8496:1: ( 'ip_range:' )
            // InternalDockerCompose.g:8497:2: 'ip_range:'
            {
             before(grammarAccess.getIPAMConfigAccess().getIp_rangeKeyword_1_1_0()); 
            match(input,91,FOLLOW_2); 
             after(grammarAccess.getIPAMConfigAccess().getIp_rangeKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_1__0__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_1__1"
    // InternalDockerCompose.g:8506:1: rule__IPAMConfig__Group_1_1__1 : rule__IPAMConfig__Group_1_1__1__Impl ;
    public final void rule__IPAMConfig__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8510:1: ( rule__IPAMConfig__Group_1_1__1__Impl )
            // InternalDockerCompose.g:8511:2: rule__IPAMConfig__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_1__1"


    // $ANTLR start "rule__IPAMConfig__Group_1_1__1__Impl"
    // InternalDockerCompose.g:8517:1: rule__IPAMConfig__Group_1_1__1__Impl : ( ( rule__IPAMConfig__Ip_rangeAssignment_1_1_1 ) ) ;
    public final void rule__IPAMConfig__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8521:1: ( ( ( rule__IPAMConfig__Ip_rangeAssignment_1_1_1 ) ) )
            // InternalDockerCompose.g:8522:1: ( ( rule__IPAMConfig__Ip_rangeAssignment_1_1_1 ) )
            {
            // InternalDockerCompose.g:8522:1: ( ( rule__IPAMConfig__Ip_rangeAssignment_1_1_1 ) )
            // InternalDockerCompose.g:8523:2: ( rule__IPAMConfig__Ip_rangeAssignment_1_1_1 )
            {
             before(grammarAccess.getIPAMConfigAccess().getIp_rangeAssignment_1_1_1()); 
            // InternalDockerCompose.g:8524:2: ( rule__IPAMConfig__Ip_rangeAssignment_1_1_1 )
            // InternalDockerCompose.g:8524:3: rule__IPAMConfig__Ip_rangeAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Ip_rangeAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMConfigAccess().getIp_rangeAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_1__1__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_2__0"
    // InternalDockerCompose.g:8533:1: rule__IPAMConfig__Group_1_2__0 : rule__IPAMConfig__Group_1_2__0__Impl rule__IPAMConfig__Group_1_2__1 ;
    public final void rule__IPAMConfig__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8537:1: ( rule__IPAMConfig__Group_1_2__0__Impl rule__IPAMConfig__Group_1_2__1 )
            // InternalDockerCompose.g:8538:2: rule__IPAMConfig__Group_1_2__0__Impl rule__IPAMConfig__Group_1_2__1
            {
            pushFollow(FOLLOW_19);
            rule__IPAMConfig__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_2__0"


    // $ANTLR start "rule__IPAMConfig__Group_1_2__0__Impl"
    // InternalDockerCompose.g:8545:1: rule__IPAMConfig__Group_1_2__0__Impl : ( 'gateway:' ) ;
    public final void rule__IPAMConfig__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8549:1: ( ( 'gateway:' ) )
            // InternalDockerCompose.g:8550:1: ( 'gateway:' )
            {
            // InternalDockerCompose.g:8550:1: ( 'gateway:' )
            // InternalDockerCompose.g:8551:2: 'gateway:'
            {
             before(grammarAccess.getIPAMConfigAccess().getGatewayKeyword_1_2_0()); 
            match(input,92,FOLLOW_2); 
             after(grammarAccess.getIPAMConfigAccess().getGatewayKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_2__0__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_2__1"
    // InternalDockerCompose.g:8560:1: rule__IPAMConfig__Group_1_2__1 : rule__IPAMConfig__Group_1_2__1__Impl ;
    public final void rule__IPAMConfig__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8564:1: ( rule__IPAMConfig__Group_1_2__1__Impl )
            // InternalDockerCompose.g:8565:2: rule__IPAMConfig__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_2__1"


    // $ANTLR start "rule__IPAMConfig__Group_1_2__1__Impl"
    // InternalDockerCompose.g:8571:1: rule__IPAMConfig__Group_1_2__1__Impl : ( ( rule__IPAMConfig__GatewayAssignment_1_2_1 ) ) ;
    public final void rule__IPAMConfig__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8575:1: ( ( ( rule__IPAMConfig__GatewayAssignment_1_2_1 ) ) )
            // InternalDockerCompose.g:8576:1: ( ( rule__IPAMConfig__GatewayAssignment_1_2_1 ) )
            {
            // InternalDockerCompose.g:8576:1: ( ( rule__IPAMConfig__GatewayAssignment_1_2_1 ) )
            // InternalDockerCompose.g:8577:2: ( rule__IPAMConfig__GatewayAssignment_1_2_1 )
            {
             before(grammarAccess.getIPAMConfigAccess().getGatewayAssignment_1_2_1()); 
            // InternalDockerCompose.g:8578:2: ( rule__IPAMConfig__GatewayAssignment_1_2_1 )
            // InternalDockerCompose.g:8578:3: rule__IPAMConfig__GatewayAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__GatewayAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMConfigAccess().getGatewayAssignment_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_2__1__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_3__0"
    // InternalDockerCompose.g:8587:1: rule__IPAMConfig__Group_1_3__0 : rule__IPAMConfig__Group_1_3__0__Impl rule__IPAMConfig__Group_1_3__1 ;
    public final void rule__IPAMConfig__Group_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8591:1: ( rule__IPAMConfig__Group_1_3__0__Impl rule__IPAMConfig__Group_1_3__1 )
            // InternalDockerCompose.g:8592:2: rule__IPAMConfig__Group_1_3__0__Impl rule__IPAMConfig__Group_1_3__1
            {
            pushFollow(FOLLOW_6);
            rule__IPAMConfig__Group_1_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_3__0"


    // $ANTLR start "rule__IPAMConfig__Group_1_3__0__Impl"
    // InternalDockerCompose.g:8599:1: rule__IPAMConfig__Group_1_3__0__Impl : ( 'aux_addresses:' ) ;
    public final void rule__IPAMConfig__Group_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8603:1: ( ( 'aux_addresses:' ) )
            // InternalDockerCompose.g:8604:1: ( 'aux_addresses:' )
            {
            // InternalDockerCompose.g:8604:1: ( 'aux_addresses:' )
            // InternalDockerCompose.g:8605:2: 'aux_addresses:'
            {
             before(grammarAccess.getIPAMConfigAccess().getAux_addressesKeyword_1_3_0()); 
            match(input,93,FOLLOW_2); 
             after(grammarAccess.getIPAMConfigAccess().getAux_addressesKeyword_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_3__0__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_3__1"
    // InternalDockerCompose.g:8614:1: rule__IPAMConfig__Group_1_3__1 : rule__IPAMConfig__Group_1_3__1__Impl ;
    public final void rule__IPAMConfig__Group_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8618:1: ( rule__IPAMConfig__Group_1_3__1__Impl )
            // InternalDockerCompose.g:8619:2: rule__IPAMConfig__Group_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_3__1"


    // $ANTLR start "rule__IPAMConfig__Group_1_3__1__Impl"
    // InternalDockerCompose.g:8625:1: rule__IPAMConfig__Group_1_3__1__Impl : ( ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 ) ) ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )* ) ) ;
    public final void rule__IPAMConfig__Group_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8629:1: ( ( ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 ) ) ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )* ) ) )
            // InternalDockerCompose.g:8630:1: ( ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 ) ) ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )* ) )
            {
            // InternalDockerCompose.g:8630:1: ( ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 ) ) ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )* ) )
            // InternalDockerCompose.g:8631:2: ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 ) ) ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )* )
            {
            // InternalDockerCompose.g:8631:2: ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 ) )
            // InternalDockerCompose.g:8632:3: ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )
            {
             before(grammarAccess.getIPAMConfigAccess().getAux_addressesAssignment_1_3_1()); 
            // InternalDockerCompose.g:8633:3: ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )
            // InternalDockerCompose.g:8633:4: rule__IPAMConfig__Aux_addressesAssignment_1_3_1
            {
            pushFollow(FOLLOW_4);
            rule__IPAMConfig__Aux_addressesAssignment_1_3_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMConfigAccess().getAux_addressesAssignment_1_3_1()); 

            }

            // InternalDockerCompose.g:8636:2: ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )* )
            // InternalDockerCompose.g:8637:3: ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )*
            {
             before(grammarAccess.getIPAMConfigAccess().getAux_addressesAssignment_1_3_1()); 
            // InternalDockerCompose.g:8638:3: ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )*
            loop46:
            do {
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( (LA46_0==RULE_STRING) ) {
                    int LA46_2 = input.LA(2);

                    if ( (LA46_2==43) ) {
                        int LA46_4 = input.LA(3);

                        if ( (LA46_4==RULE_INT) ) {
                            alt46=1;
                        }


                    }


                }
                else if ( (LA46_0==RULE_ID) ) {
                    int LA46_3 = input.LA(2);

                    if ( (LA46_3==43) ) {
                        int LA46_4 = input.LA(3);

                        if ( (LA46_4==RULE_INT) ) {
                            alt46=1;
                        }


                    }


                }


                switch (alt46) {
            	case 1 :
            	    // InternalDockerCompose.g:8638:4: rule__IPAMConfig__Aux_addressesAssignment_1_3_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__IPAMConfig__Aux_addressesAssignment_1_3_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop46;
                }
            } while (true);

             after(grammarAccess.getIPAMConfigAccess().getAux_addressesAssignment_1_3_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_3__1__Impl"


    // $ANTLR start "rule__IPAMOption__Group__0"
    // InternalDockerCompose.g:8648:1: rule__IPAMOption__Group__0 : rule__IPAMOption__Group__0__Impl rule__IPAMOption__Group__1 ;
    public final void rule__IPAMOption__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8652:1: ( rule__IPAMOption__Group__0__Impl rule__IPAMOption__Group__1 )
            // InternalDockerCompose.g:8653:2: rule__IPAMOption__Group__0__Impl rule__IPAMOption__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__IPAMOption__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMOption__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__0"


    // $ANTLR start "rule__IPAMOption__Group__0__Impl"
    // InternalDockerCompose.g:8660:1: rule__IPAMOption__Group__0__Impl : ( () ) ;
    public final void rule__IPAMOption__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8664:1: ( ( () ) )
            // InternalDockerCompose.g:8665:1: ( () )
            {
            // InternalDockerCompose.g:8665:1: ( () )
            // InternalDockerCompose.g:8666:2: ()
            {
             before(grammarAccess.getIPAMOptionAccess().getIPAMOptionAction_0()); 
            // InternalDockerCompose.g:8667:2: ()
            // InternalDockerCompose.g:8667:3: 
            {
            }

             after(grammarAccess.getIPAMOptionAccess().getIPAMOptionAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__0__Impl"


    // $ANTLR start "rule__IPAMOption__Group__1"
    // InternalDockerCompose.g:8675:1: rule__IPAMOption__Group__1 : rule__IPAMOption__Group__1__Impl rule__IPAMOption__Group__2 ;
    public final void rule__IPAMOption__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8679:1: ( rule__IPAMOption__Group__1__Impl rule__IPAMOption__Group__2 )
            // InternalDockerCompose.g:8680:2: rule__IPAMOption__Group__1__Impl rule__IPAMOption__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__IPAMOption__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMOption__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__1"


    // $ANTLR start "rule__IPAMOption__Group__1__Impl"
    // InternalDockerCompose.g:8687:1: rule__IPAMOption__Group__1__Impl : ( ( rule__IPAMOption__NameAssignment_1 ) ) ;
    public final void rule__IPAMOption__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8691:1: ( ( ( rule__IPAMOption__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:8692:1: ( ( rule__IPAMOption__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:8692:1: ( ( rule__IPAMOption__NameAssignment_1 ) )
            // InternalDockerCompose.g:8693:2: ( rule__IPAMOption__NameAssignment_1 )
            {
             before(grammarAccess.getIPAMOptionAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:8694:2: ( rule__IPAMOption__NameAssignment_1 )
            // InternalDockerCompose.g:8694:3: rule__IPAMOption__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAMOption__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMOptionAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__1__Impl"


    // $ANTLR start "rule__IPAMOption__Group__2"
    // InternalDockerCompose.g:8702:1: rule__IPAMOption__Group__2 : rule__IPAMOption__Group__2__Impl rule__IPAMOption__Group__3 ;
    public final void rule__IPAMOption__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8706:1: ( rule__IPAMOption__Group__2__Impl rule__IPAMOption__Group__3 )
            // InternalDockerCompose.g:8707:2: rule__IPAMOption__Group__2__Impl rule__IPAMOption__Group__3
            {
            pushFollow(FOLLOW_6);
            rule__IPAMOption__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMOption__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__2"


    // $ANTLR start "rule__IPAMOption__Group__2__Impl"
    // InternalDockerCompose.g:8714:1: rule__IPAMOption__Group__2__Impl : ( ':' ) ;
    public final void rule__IPAMOption__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8718:1: ( ( ':' ) )
            // InternalDockerCompose.g:8719:1: ( ':' )
            {
            // InternalDockerCompose.g:8719:1: ( ':' )
            // InternalDockerCompose.g:8720:2: ':'
            {
             before(grammarAccess.getIPAMOptionAccess().getColonKeyword_2()); 
            match(input,43,FOLLOW_2); 
             after(grammarAccess.getIPAMOptionAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__2__Impl"


    // $ANTLR start "rule__IPAMOption__Group__3"
    // InternalDockerCompose.g:8729:1: rule__IPAMOption__Group__3 : rule__IPAMOption__Group__3__Impl ;
    public final void rule__IPAMOption__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8733:1: ( rule__IPAMOption__Group__3__Impl )
            // InternalDockerCompose.g:8734:2: rule__IPAMOption__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMOption__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__3"


    // $ANTLR start "rule__IPAMOption__Group__3__Impl"
    // InternalDockerCompose.g:8740:1: rule__IPAMOption__Group__3__Impl : ( ( rule__IPAMOption__ValueAssignment_3 ) ) ;
    public final void rule__IPAMOption__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8744:1: ( ( ( rule__IPAMOption__ValueAssignment_3 ) ) )
            // InternalDockerCompose.g:8745:1: ( ( rule__IPAMOption__ValueAssignment_3 ) )
            {
            // InternalDockerCompose.g:8745:1: ( ( rule__IPAMOption__ValueAssignment_3 ) )
            // InternalDockerCompose.g:8746:2: ( rule__IPAMOption__ValueAssignment_3 )
            {
             before(grammarAccess.getIPAMOptionAccess().getValueAssignment_3()); 
            // InternalDockerCompose.g:8747:2: ( rule__IPAMOption__ValueAssignment_3 )
            // InternalDockerCompose.g:8747:3: rule__IPAMOption__ValueAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__IPAMOption__ValueAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getIPAMOptionAccess().getValueAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__3__Impl"


    // $ANTLR start "rule__IPAMAddress__Group__0"
    // InternalDockerCompose.g:8756:1: rule__IPAMAddress__Group__0 : rule__IPAMAddress__Group__0__Impl rule__IPAMAddress__Group__1 ;
    public final void rule__IPAMAddress__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8760:1: ( rule__IPAMAddress__Group__0__Impl rule__IPAMAddress__Group__1 )
            // InternalDockerCompose.g:8761:2: rule__IPAMAddress__Group__0__Impl rule__IPAMAddress__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__IPAMAddress__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMAddress__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__0"


    // $ANTLR start "rule__IPAMAddress__Group__0__Impl"
    // InternalDockerCompose.g:8768:1: rule__IPAMAddress__Group__0__Impl : ( () ) ;
    public final void rule__IPAMAddress__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8772:1: ( ( () ) )
            // InternalDockerCompose.g:8773:1: ( () )
            {
            // InternalDockerCompose.g:8773:1: ( () )
            // InternalDockerCompose.g:8774:2: ()
            {
             before(grammarAccess.getIPAMAddressAccess().getIPAMAddressAction_0()); 
            // InternalDockerCompose.g:8775:2: ()
            // InternalDockerCompose.g:8775:3: 
            {
            }

             after(grammarAccess.getIPAMAddressAccess().getIPAMAddressAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__0__Impl"


    // $ANTLR start "rule__IPAMAddress__Group__1"
    // InternalDockerCompose.g:8783:1: rule__IPAMAddress__Group__1 : rule__IPAMAddress__Group__1__Impl rule__IPAMAddress__Group__2 ;
    public final void rule__IPAMAddress__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8787:1: ( rule__IPAMAddress__Group__1__Impl rule__IPAMAddress__Group__2 )
            // InternalDockerCompose.g:8788:2: rule__IPAMAddress__Group__1__Impl rule__IPAMAddress__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__IPAMAddress__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMAddress__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__1"


    // $ANTLR start "rule__IPAMAddress__Group__1__Impl"
    // InternalDockerCompose.g:8795:1: rule__IPAMAddress__Group__1__Impl : ( ( rule__IPAMAddress__NameAssignment_1 ) ) ;
    public final void rule__IPAMAddress__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8799:1: ( ( ( rule__IPAMAddress__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:8800:1: ( ( rule__IPAMAddress__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:8800:1: ( ( rule__IPAMAddress__NameAssignment_1 ) )
            // InternalDockerCompose.g:8801:2: ( rule__IPAMAddress__NameAssignment_1 )
            {
             before(grammarAccess.getIPAMAddressAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:8802:2: ( rule__IPAMAddress__NameAssignment_1 )
            // InternalDockerCompose.g:8802:3: rule__IPAMAddress__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAMAddress__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAddressAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__1__Impl"


    // $ANTLR start "rule__IPAMAddress__Group__2"
    // InternalDockerCompose.g:8810:1: rule__IPAMAddress__Group__2 : rule__IPAMAddress__Group__2__Impl rule__IPAMAddress__Group__3 ;
    public final void rule__IPAMAddress__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8814:1: ( rule__IPAMAddress__Group__2__Impl rule__IPAMAddress__Group__3 )
            // InternalDockerCompose.g:8815:2: rule__IPAMAddress__Group__2__Impl rule__IPAMAddress__Group__3
            {
            pushFollow(FOLLOW_19);
            rule__IPAMAddress__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMAddress__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__2"


    // $ANTLR start "rule__IPAMAddress__Group__2__Impl"
    // InternalDockerCompose.g:8822:1: rule__IPAMAddress__Group__2__Impl : ( ':' ) ;
    public final void rule__IPAMAddress__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8826:1: ( ( ':' ) )
            // InternalDockerCompose.g:8827:1: ( ':' )
            {
            // InternalDockerCompose.g:8827:1: ( ':' )
            // InternalDockerCompose.g:8828:2: ':'
            {
             before(grammarAccess.getIPAMAddressAccess().getColonKeyword_2()); 
            match(input,43,FOLLOW_2); 
             after(grammarAccess.getIPAMAddressAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__2__Impl"


    // $ANTLR start "rule__IPAMAddress__Group__3"
    // InternalDockerCompose.g:8837:1: rule__IPAMAddress__Group__3 : rule__IPAMAddress__Group__3__Impl ;
    public final void rule__IPAMAddress__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8841:1: ( rule__IPAMAddress__Group__3__Impl )
            // InternalDockerCompose.g:8842:2: rule__IPAMAddress__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMAddress__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__3"


    // $ANTLR start "rule__IPAMAddress__Group__3__Impl"
    // InternalDockerCompose.g:8848:1: rule__IPAMAddress__Group__3__Impl : ( ( rule__IPAMAddress__DnsAssignment_3 ) ) ;
    public final void rule__IPAMAddress__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8852:1: ( ( ( rule__IPAMAddress__DnsAssignment_3 ) ) )
            // InternalDockerCompose.g:8853:1: ( ( rule__IPAMAddress__DnsAssignment_3 ) )
            {
            // InternalDockerCompose.g:8853:1: ( ( rule__IPAMAddress__DnsAssignment_3 ) )
            // InternalDockerCompose.g:8854:2: ( rule__IPAMAddress__DnsAssignment_3 )
            {
             before(grammarAccess.getIPAMAddressAccess().getDnsAssignment_3()); 
            // InternalDockerCompose.g:8855:2: ( rule__IPAMAddress__DnsAssignment_3 )
            // InternalDockerCompose.g:8855:3: rule__IPAMAddress__DnsAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__IPAMAddress__DnsAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAddressAccess().getDnsAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__3__Impl"


    // $ANTLR start "rule__PATH__Group__0"
    // InternalDockerCompose.g:8864:1: rule__PATH__Group__0 : rule__PATH__Group__0__Impl rule__PATH__Group__1 ;
    public final void rule__PATH__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8868:1: ( rule__PATH__Group__0__Impl rule__PATH__Group__1 )
            // InternalDockerCompose.g:8869:2: rule__PATH__Group__0__Impl rule__PATH__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__PATH__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group__0"


    // $ANTLR start "rule__PATH__Group__0__Impl"
    // InternalDockerCompose.g:8876:1: rule__PATH__Group__0__Impl : ( ( '.' )? ) ;
    public final void rule__PATH__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8880:1: ( ( ( '.' )? ) )
            // InternalDockerCompose.g:8881:1: ( ( '.' )? )
            {
            // InternalDockerCompose.g:8881:1: ( ( '.' )? )
            // InternalDockerCompose.g:8882:2: ( '.' )?
            {
             before(grammarAccess.getPATHAccess().getFullStopKeyword_0()); 
            // InternalDockerCompose.g:8883:2: ( '.' )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==94) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalDockerCompose.g:8883:3: '.'
                    {
                    match(input,94,FOLLOW_2); 

                    }
                    break;

            }

             after(grammarAccess.getPATHAccess().getFullStopKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group__0__Impl"


    // $ANTLR start "rule__PATH__Group__1"
    // InternalDockerCompose.g:8891:1: rule__PATH__Group__1 : rule__PATH__Group__1__Impl rule__PATH__Group__2 ;
    public final void rule__PATH__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8895:1: ( rule__PATH__Group__1__Impl rule__PATH__Group__2 )
            // InternalDockerCompose.g:8896:2: rule__PATH__Group__1__Impl rule__PATH__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__PATH__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group__1"


    // $ANTLR start "rule__PATH__Group__1__Impl"
    // InternalDockerCompose.g:8903:1: rule__PATH__Group__1__Impl : ( ( '/' )? ) ;
    public final void rule__PATH__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8907:1: ( ( ( '/' )? ) )
            // InternalDockerCompose.g:8908:1: ( ( '/' )? )
            {
            // InternalDockerCompose.g:8908:1: ( ( '/' )? )
            // InternalDockerCompose.g:8909:2: ( '/' )?
            {
             before(grammarAccess.getPATHAccess().getSolidusKeyword_1()); 
            // InternalDockerCompose.g:8910:2: ( '/' )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==95) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalDockerCompose.g:8910:3: '/'
                    {
                    match(input,95,FOLLOW_2); 

                    }
                    break;

            }

             after(grammarAccess.getPATHAccess().getSolidusKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group__1__Impl"


    // $ANTLR start "rule__PATH__Group__2"
    // InternalDockerCompose.g:8918:1: rule__PATH__Group__2 : rule__PATH__Group__2__Impl ;
    public final void rule__PATH__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8922:1: ( rule__PATH__Group__2__Impl )
            // InternalDockerCompose.g:8923:2: rule__PATH__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group__2"


    // $ANTLR start "rule__PATH__Group__2__Impl"
    // InternalDockerCompose.g:8929:1: rule__PATH__Group__2__Impl : ( ( RULE_ID )* ) ;
    public final void rule__PATH__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8933:1: ( ( ( RULE_ID )* ) )
            // InternalDockerCompose.g:8934:1: ( ( RULE_ID )* )
            {
            // InternalDockerCompose.g:8934:1: ( ( RULE_ID )* )
            // InternalDockerCompose.g:8935:2: ( RULE_ID )*
            {
             before(grammarAccess.getPATHAccess().getIDTerminalRuleCall_2()); 
            // InternalDockerCompose.g:8936:2: ( RULE_ID )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( (LA49_0==RULE_ID) ) {
                    int LA49_2 = input.LA(2);

                    if ( (LA49_2==EOF||(LA49_2>=RULE_STRING && LA49_2<=RULE_ID)||(LA49_2>=37 && LA49_2<=42)||(LA49_2>=44 && LA49_2<=57)||(LA49_2>=63 && LA49_2<=66)||LA49_2==68||LA49_2==70||(LA49_2>=72 && LA49_2<=74)) ) {
                        alt49=1;
                    }
                    else if ( (LA49_2==43) ) {
                        int LA49_4 = input.LA(3);

                        if ( ((LA49_4>=21 && LA49_4<=23)) ) {
                            alt49=1;
                        }


                    }


                }


                switch (alt49) {
            	case 1 :
            	    // InternalDockerCompose.g:8936:3: RULE_ID
            	    {
            	    match(input,RULE_ID,FOLLOW_40); 

            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);

             after(grammarAccess.getPATHAccess().getIDTerminalRuleCall_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group__2__Impl"


    // $ANTLR start "rule__DNS__Group__0"
    // InternalDockerCompose.g:8945:1: rule__DNS__Group__0 : rule__DNS__Group__0__Impl rule__DNS__Group__1 ;
    public final void rule__DNS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8949:1: ( rule__DNS__Group__0__Impl rule__DNS__Group__1 )
            // InternalDockerCompose.g:8950:2: rule__DNS__Group__0__Impl rule__DNS__Group__1
            {
            pushFollow(FOLLOW_41);
            rule__DNS__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DNS__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__0"


    // $ANTLR start "rule__DNS__Group__0__Impl"
    // InternalDockerCompose.g:8957:1: rule__DNS__Group__0__Impl : ( ( rule__DNS__Dns1Assignment_0 ) ) ;
    public final void rule__DNS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8961:1: ( ( ( rule__DNS__Dns1Assignment_0 ) ) )
            // InternalDockerCompose.g:8962:1: ( ( rule__DNS__Dns1Assignment_0 ) )
            {
            // InternalDockerCompose.g:8962:1: ( ( rule__DNS__Dns1Assignment_0 ) )
            // InternalDockerCompose.g:8963:2: ( rule__DNS__Dns1Assignment_0 )
            {
             before(grammarAccess.getDNSAccess().getDns1Assignment_0()); 
            // InternalDockerCompose.g:8964:2: ( rule__DNS__Dns1Assignment_0 )
            // InternalDockerCompose.g:8964:3: rule__DNS__Dns1Assignment_0
            {
            pushFollow(FOLLOW_2);
            rule__DNS__Dns1Assignment_0();

            state._fsp--;


            }

             after(grammarAccess.getDNSAccess().getDns1Assignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__0__Impl"


    // $ANTLR start "rule__DNS__Group__1"
    // InternalDockerCompose.g:8972:1: rule__DNS__Group__1 : rule__DNS__Group__1__Impl rule__DNS__Group__2 ;
    public final void rule__DNS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8976:1: ( rule__DNS__Group__1__Impl rule__DNS__Group__2 )
            // InternalDockerCompose.g:8977:2: rule__DNS__Group__1__Impl rule__DNS__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__DNS__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DNS__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__1"


    // $ANTLR start "rule__DNS__Group__1__Impl"
    // InternalDockerCompose.g:8984:1: rule__DNS__Group__1__Impl : ( '.' ) ;
    public final void rule__DNS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8988:1: ( ( '.' ) )
            // InternalDockerCompose.g:8989:1: ( '.' )
            {
            // InternalDockerCompose.g:8989:1: ( '.' )
            // InternalDockerCompose.g:8990:2: '.'
            {
             before(grammarAccess.getDNSAccess().getFullStopKeyword_1()); 
            match(input,94,FOLLOW_2); 
             after(grammarAccess.getDNSAccess().getFullStopKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__1__Impl"


    // $ANTLR start "rule__DNS__Group__2"
    // InternalDockerCompose.g:8999:1: rule__DNS__Group__2 : rule__DNS__Group__2__Impl rule__DNS__Group__3 ;
    public final void rule__DNS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9003:1: ( rule__DNS__Group__2__Impl rule__DNS__Group__3 )
            // InternalDockerCompose.g:9004:2: rule__DNS__Group__2__Impl rule__DNS__Group__3
            {
            pushFollow(FOLLOW_41);
            rule__DNS__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DNS__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__2"


    // $ANTLR start "rule__DNS__Group__2__Impl"
    // InternalDockerCompose.g:9011:1: rule__DNS__Group__2__Impl : ( ( rule__DNS__Dns2Assignment_2 ) ) ;
    public final void rule__DNS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9015:1: ( ( ( rule__DNS__Dns2Assignment_2 ) ) )
            // InternalDockerCompose.g:9016:1: ( ( rule__DNS__Dns2Assignment_2 ) )
            {
            // InternalDockerCompose.g:9016:1: ( ( rule__DNS__Dns2Assignment_2 ) )
            // InternalDockerCompose.g:9017:2: ( rule__DNS__Dns2Assignment_2 )
            {
             before(grammarAccess.getDNSAccess().getDns2Assignment_2()); 
            // InternalDockerCompose.g:9018:2: ( rule__DNS__Dns2Assignment_2 )
            // InternalDockerCompose.g:9018:3: rule__DNS__Dns2Assignment_2
            {
            pushFollow(FOLLOW_2);
            rule__DNS__Dns2Assignment_2();

            state._fsp--;


            }

             after(grammarAccess.getDNSAccess().getDns2Assignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__2__Impl"


    // $ANTLR start "rule__DNS__Group__3"
    // InternalDockerCompose.g:9026:1: rule__DNS__Group__3 : rule__DNS__Group__3__Impl rule__DNS__Group__4 ;
    public final void rule__DNS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9030:1: ( rule__DNS__Group__3__Impl rule__DNS__Group__4 )
            // InternalDockerCompose.g:9031:2: rule__DNS__Group__3__Impl rule__DNS__Group__4
            {
            pushFollow(FOLLOW_10);
            rule__DNS__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DNS__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__3"


    // $ANTLR start "rule__DNS__Group__3__Impl"
    // InternalDockerCompose.g:9038:1: rule__DNS__Group__3__Impl : ( '.' ) ;
    public final void rule__DNS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9042:1: ( ( '.' ) )
            // InternalDockerCompose.g:9043:1: ( '.' )
            {
            // InternalDockerCompose.g:9043:1: ( '.' )
            // InternalDockerCompose.g:9044:2: '.'
            {
             before(grammarAccess.getDNSAccess().getFullStopKeyword_3()); 
            match(input,94,FOLLOW_2); 
             after(grammarAccess.getDNSAccess().getFullStopKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__3__Impl"


    // $ANTLR start "rule__DNS__Group__4"
    // InternalDockerCompose.g:9053:1: rule__DNS__Group__4 : rule__DNS__Group__4__Impl rule__DNS__Group__5 ;
    public final void rule__DNS__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9057:1: ( rule__DNS__Group__4__Impl rule__DNS__Group__5 )
            // InternalDockerCompose.g:9058:2: rule__DNS__Group__4__Impl rule__DNS__Group__5
            {
            pushFollow(FOLLOW_41);
            rule__DNS__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DNS__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__4"


    // $ANTLR start "rule__DNS__Group__4__Impl"
    // InternalDockerCompose.g:9065:1: rule__DNS__Group__4__Impl : ( ( rule__DNS__Dns3Assignment_4 ) ) ;
    public final void rule__DNS__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9069:1: ( ( ( rule__DNS__Dns3Assignment_4 ) ) )
            // InternalDockerCompose.g:9070:1: ( ( rule__DNS__Dns3Assignment_4 ) )
            {
            // InternalDockerCompose.g:9070:1: ( ( rule__DNS__Dns3Assignment_4 ) )
            // InternalDockerCompose.g:9071:2: ( rule__DNS__Dns3Assignment_4 )
            {
             before(grammarAccess.getDNSAccess().getDns3Assignment_4()); 
            // InternalDockerCompose.g:9072:2: ( rule__DNS__Dns3Assignment_4 )
            // InternalDockerCompose.g:9072:3: rule__DNS__Dns3Assignment_4
            {
            pushFollow(FOLLOW_2);
            rule__DNS__Dns3Assignment_4();

            state._fsp--;


            }

             after(grammarAccess.getDNSAccess().getDns3Assignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__4__Impl"


    // $ANTLR start "rule__DNS__Group__5"
    // InternalDockerCompose.g:9080:1: rule__DNS__Group__5 : rule__DNS__Group__5__Impl rule__DNS__Group__6 ;
    public final void rule__DNS__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9084:1: ( rule__DNS__Group__5__Impl rule__DNS__Group__6 )
            // InternalDockerCompose.g:9085:2: rule__DNS__Group__5__Impl rule__DNS__Group__6
            {
            pushFollow(FOLLOW_10);
            rule__DNS__Group__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DNS__Group__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__5"


    // $ANTLR start "rule__DNS__Group__5__Impl"
    // InternalDockerCompose.g:9092:1: rule__DNS__Group__5__Impl : ( '.' ) ;
    public final void rule__DNS__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9096:1: ( ( '.' ) )
            // InternalDockerCompose.g:9097:1: ( '.' )
            {
            // InternalDockerCompose.g:9097:1: ( '.' )
            // InternalDockerCompose.g:9098:2: '.'
            {
             before(grammarAccess.getDNSAccess().getFullStopKeyword_5()); 
            match(input,94,FOLLOW_2); 
             after(grammarAccess.getDNSAccess().getFullStopKeyword_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__5__Impl"


    // $ANTLR start "rule__DNS__Group__6"
    // InternalDockerCompose.g:9107:1: rule__DNS__Group__6 : rule__DNS__Group__6__Impl ;
    public final void rule__DNS__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9111:1: ( rule__DNS__Group__6__Impl )
            // InternalDockerCompose.g:9112:2: rule__DNS__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DNS__Group__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__6"


    // $ANTLR start "rule__DNS__Group__6__Impl"
    // InternalDockerCompose.g:9118:1: rule__DNS__Group__6__Impl : ( ( rule__DNS__Dns4Assignment_6 ) ) ;
    public final void rule__DNS__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9122:1: ( ( ( rule__DNS__Dns4Assignment_6 ) ) )
            // InternalDockerCompose.g:9123:1: ( ( rule__DNS__Dns4Assignment_6 ) )
            {
            // InternalDockerCompose.g:9123:1: ( ( rule__DNS__Dns4Assignment_6 ) )
            // InternalDockerCompose.g:9124:2: ( rule__DNS__Dns4Assignment_6 )
            {
             before(grammarAccess.getDNSAccess().getDns4Assignment_6()); 
            // InternalDockerCompose.g:9125:2: ( rule__DNS__Dns4Assignment_6 )
            // InternalDockerCompose.g:9125:3: rule__DNS__Dns4Assignment_6
            {
            pushFollow(FOLLOW_2);
            rule__DNS__Dns4Assignment_6();

            state._fsp--;


            }

             after(grammarAccess.getDNSAccess().getDns4Assignment_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__6__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__0"
    // InternalDockerCompose.g:9134:1: rule__NetworkAddress__Group__0 : rule__NetworkAddress__Group__0__Impl rule__NetworkAddress__Group__1 ;
    public final void rule__NetworkAddress__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9138:1: ( rule__NetworkAddress__Group__0__Impl rule__NetworkAddress__Group__1 )
            // InternalDockerCompose.g:9139:2: rule__NetworkAddress__Group__0__Impl rule__NetworkAddress__Group__1
            {
            pushFollow(FOLLOW_41);
            rule__NetworkAddress__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__0"


    // $ANTLR start "rule__NetworkAddress__Group__0__Impl"
    // InternalDockerCompose.g:9146:1: rule__NetworkAddress__Group__0__Impl : ( ( rule__NetworkAddress__Dns1Assignment_0 ) ) ;
    public final void rule__NetworkAddress__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9150:1: ( ( ( rule__NetworkAddress__Dns1Assignment_0 ) ) )
            // InternalDockerCompose.g:9151:1: ( ( rule__NetworkAddress__Dns1Assignment_0 ) )
            {
            // InternalDockerCompose.g:9151:1: ( ( rule__NetworkAddress__Dns1Assignment_0 ) )
            // InternalDockerCompose.g:9152:2: ( rule__NetworkAddress__Dns1Assignment_0 )
            {
             before(grammarAccess.getNetworkAddressAccess().getDns1Assignment_0()); 
            // InternalDockerCompose.g:9153:2: ( rule__NetworkAddress__Dns1Assignment_0 )
            // InternalDockerCompose.g:9153:3: rule__NetworkAddress__Dns1Assignment_0
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Dns1Assignment_0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAddressAccess().getDns1Assignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__0__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__1"
    // InternalDockerCompose.g:9161:1: rule__NetworkAddress__Group__1 : rule__NetworkAddress__Group__1__Impl rule__NetworkAddress__Group__2 ;
    public final void rule__NetworkAddress__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9165:1: ( rule__NetworkAddress__Group__1__Impl rule__NetworkAddress__Group__2 )
            // InternalDockerCompose.g:9166:2: rule__NetworkAddress__Group__1__Impl rule__NetworkAddress__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__NetworkAddress__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__1"


    // $ANTLR start "rule__NetworkAddress__Group__1__Impl"
    // InternalDockerCompose.g:9173:1: rule__NetworkAddress__Group__1__Impl : ( '.' ) ;
    public final void rule__NetworkAddress__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9177:1: ( ( '.' ) )
            // InternalDockerCompose.g:9178:1: ( '.' )
            {
            // InternalDockerCompose.g:9178:1: ( '.' )
            // InternalDockerCompose.g:9179:2: '.'
            {
             before(grammarAccess.getNetworkAddressAccess().getFullStopKeyword_1()); 
            match(input,94,FOLLOW_2); 
             after(grammarAccess.getNetworkAddressAccess().getFullStopKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__1__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__2"
    // InternalDockerCompose.g:9188:1: rule__NetworkAddress__Group__2 : rule__NetworkAddress__Group__2__Impl rule__NetworkAddress__Group__3 ;
    public final void rule__NetworkAddress__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9192:1: ( rule__NetworkAddress__Group__2__Impl rule__NetworkAddress__Group__3 )
            // InternalDockerCompose.g:9193:2: rule__NetworkAddress__Group__2__Impl rule__NetworkAddress__Group__3
            {
            pushFollow(FOLLOW_41);
            rule__NetworkAddress__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__2"


    // $ANTLR start "rule__NetworkAddress__Group__2__Impl"
    // InternalDockerCompose.g:9200:1: rule__NetworkAddress__Group__2__Impl : ( ( rule__NetworkAddress__Dns2Assignment_2 ) ) ;
    public final void rule__NetworkAddress__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9204:1: ( ( ( rule__NetworkAddress__Dns2Assignment_2 ) ) )
            // InternalDockerCompose.g:9205:1: ( ( rule__NetworkAddress__Dns2Assignment_2 ) )
            {
            // InternalDockerCompose.g:9205:1: ( ( rule__NetworkAddress__Dns2Assignment_2 ) )
            // InternalDockerCompose.g:9206:2: ( rule__NetworkAddress__Dns2Assignment_2 )
            {
             before(grammarAccess.getNetworkAddressAccess().getDns2Assignment_2()); 
            // InternalDockerCompose.g:9207:2: ( rule__NetworkAddress__Dns2Assignment_2 )
            // InternalDockerCompose.g:9207:3: rule__NetworkAddress__Dns2Assignment_2
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Dns2Assignment_2();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAddressAccess().getDns2Assignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__2__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__3"
    // InternalDockerCompose.g:9215:1: rule__NetworkAddress__Group__3 : rule__NetworkAddress__Group__3__Impl rule__NetworkAddress__Group__4 ;
    public final void rule__NetworkAddress__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9219:1: ( rule__NetworkAddress__Group__3__Impl rule__NetworkAddress__Group__4 )
            // InternalDockerCompose.g:9220:2: rule__NetworkAddress__Group__3__Impl rule__NetworkAddress__Group__4
            {
            pushFollow(FOLLOW_10);
            rule__NetworkAddress__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__3"


    // $ANTLR start "rule__NetworkAddress__Group__3__Impl"
    // InternalDockerCompose.g:9227:1: rule__NetworkAddress__Group__3__Impl : ( '.' ) ;
    public final void rule__NetworkAddress__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9231:1: ( ( '.' ) )
            // InternalDockerCompose.g:9232:1: ( '.' )
            {
            // InternalDockerCompose.g:9232:1: ( '.' )
            // InternalDockerCompose.g:9233:2: '.'
            {
             before(grammarAccess.getNetworkAddressAccess().getFullStopKeyword_3()); 
            match(input,94,FOLLOW_2); 
             after(grammarAccess.getNetworkAddressAccess().getFullStopKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__3__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__4"
    // InternalDockerCompose.g:9242:1: rule__NetworkAddress__Group__4 : rule__NetworkAddress__Group__4__Impl rule__NetworkAddress__Group__5 ;
    public final void rule__NetworkAddress__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9246:1: ( rule__NetworkAddress__Group__4__Impl rule__NetworkAddress__Group__5 )
            // InternalDockerCompose.g:9247:2: rule__NetworkAddress__Group__4__Impl rule__NetworkAddress__Group__5
            {
            pushFollow(FOLLOW_41);
            rule__NetworkAddress__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__4"


    // $ANTLR start "rule__NetworkAddress__Group__4__Impl"
    // InternalDockerCompose.g:9254:1: rule__NetworkAddress__Group__4__Impl : ( ( rule__NetworkAddress__Dns3Assignment_4 ) ) ;
    public final void rule__NetworkAddress__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9258:1: ( ( ( rule__NetworkAddress__Dns3Assignment_4 ) ) )
            // InternalDockerCompose.g:9259:1: ( ( rule__NetworkAddress__Dns3Assignment_4 ) )
            {
            // InternalDockerCompose.g:9259:1: ( ( rule__NetworkAddress__Dns3Assignment_4 ) )
            // InternalDockerCompose.g:9260:2: ( rule__NetworkAddress__Dns3Assignment_4 )
            {
             before(grammarAccess.getNetworkAddressAccess().getDns3Assignment_4()); 
            // InternalDockerCompose.g:9261:2: ( rule__NetworkAddress__Dns3Assignment_4 )
            // InternalDockerCompose.g:9261:3: rule__NetworkAddress__Dns3Assignment_4
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Dns3Assignment_4();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAddressAccess().getDns3Assignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__4__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__5"
    // InternalDockerCompose.g:9269:1: rule__NetworkAddress__Group__5 : rule__NetworkAddress__Group__5__Impl rule__NetworkAddress__Group__6 ;
    public final void rule__NetworkAddress__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9273:1: ( rule__NetworkAddress__Group__5__Impl rule__NetworkAddress__Group__6 )
            // InternalDockerCompose.g:9274:2: rule__NetworkAddress__Group__5__Impl rule__NetworkAddress__Group__6
            {
            pushFollow(FOLLOW_10);
            rule__NetworkAddress__Group__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__5"


    // $ANTLR start "rule__NetworkAddress__Group__5__Impl"
    // InternalDockerCompose.g:9281:1: rule__NetworkAddress__Group__5__Impl : ( '.' ) ;
    public final void rule__NetworkAddress__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9285:1: ( ( '.' ) )
            // InternalDockerCompose.g:9286:1: ( '.' )
            {
            // InternalDockerCompose.g:9286:1: ( '.' )
            // InternalDockerCompose.g:9287:2: '.'
            {
             before(grammarAccess.getNetworkAddressAccess().getFullStopKeyword_5()); 
            match(input,94,FOLLOW_2); 
             after(grammarAccess.getNetworkAddressAccess().getFullStopKeyword_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__5__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__6"
    // InternalDockerCompose.g:9296:1: rule__NetworkAddress__Group__6 : rule__NetworkAddress__Group__6__Impl rule__NetworkAddress__Group__7 ;
    public final void rule__NetworkAddress__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9300:1: ( rule__NetworkAddress__Group__6__Impl rule__NetworkAddress__Group__7 )
            // InternalDockerCompose.g:9301:2: rule__NetworkAddress__Group__6__Impl rule__NetworkAddress__Group__7
            {
            pushFollow(FOLLOW_42);
            rule__NetworkAddress__Group__6__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__7();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__6"


    // $ANTLR start "rule__NetworkAddress__Group__6__Impl"
    // InternalDockerCompose.g:9308:1: rule__NetworkAddress__Group__6__Impl : ( ( rule__NetworkAddress__Dns4Assignment_6 ) ) ;
    public final void rule__NetworkAddress__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9312:1: ( ( ( rule__NetworkAddress__Dns4Assignment_6 ) ) )
            // InternalDockerCompose.g:9313:1: ( ( rule__NetworkAddress__Dns4Assignment_6 ) )
            {
            // InternalDockerCompose.g:9313:1: ( ( rule__NetworkAddress__Dns4Assignment_6 ) )
            // InternalDockerCompose.g:9314:2: ( rule__NetworkAddress__Dns4Assignment_6 )
            {
             before(grammarAccess.getNetworkAddressAccess().getDns4Assignment_6()); 
            // InternalDockerCompose.g:9315:2: ( rule__NetworkAddress__Dns4Assignment_6 )
            // InternalDockerCompose.g:9315:3: rule__NetworkAddress__Dns4Assignment_6
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Dns4Assignment_6();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAddressAccess().getDns4Assignment_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__6__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__7"
    // InternalDockerCompose.g:9323:1: rule__NetworkAddress__Group__7 : rule__NetworkAddress__Group__7__Impl rule__NetworkAddress__Group__8 ;
    public final void rule__NetworkAddress__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9327:1: ( rule__NetworkAddress__Group__7__Impl rule__NetworkAddress__Group__8 )
            // InternalDockerCompose.g:9328:2: rule__NetworkAddress__Group__7__Impl rule__NetworkAddress__Group__8
            {
            pushFollow(FOLLOW_10);
            rule__NetworkAddress__Group__7__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__8();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__7"


    // $ANTLR start "rule__NetworkAddress__Group__7__Impl"
    // InternalDockerCompose.g:9335:1: rule__NetworkAddress__Group__7__Impl : ( '/' ) ;
    public final void rule__NetworkAddress__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9339:1: ( ( '/' ) )
            // InternalDockerCompose.g:9340:1: ( '/' )
            {
            // InternalDockerCompose.g:9340:1: ( '/' )
            // InternalDockerCompose.g:9341:2: '/'
            {
             before(grammarAccess.getNetworkAddressAccess().getSolidusKeyword_7()); 
            match(input,95,FOLLOW_2); 
             after(grammarAccess.getNetworkAddressAccess().getSolidusKeyword_7()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__7__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__8"
    // InternalDockerCompose.g:9350:1: rule__NetworkAddress__Group__8 : rule__NetworkAddress__Group__8__Impl ;
    public final void rule__NetworkAddress__Group__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9354:1: ( rule__NetworkAddress__Group__8__Impl )
            // InternalDockerCompose.g:9355:2: rule__NetworkAddress__Group__8__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__8__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__8"


    // $ANTLR start "rule__NetworkAddress__Group__8__Impl"
    // InternalDockerCompose.g:9361:1: rule__NetworkAddress__Group__8__Impl : ( ( rule__NetworkAddress__NetIdAssignment_8 ) ) ;
    public final void rule__NetworkAddress__Group__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9365:1: ( ( ( rule__NetworkAddress__NetIdAssignment_8 ) ) )
            // InternalDockerCompose.g:9366:1: ( ( rule__NetworkAddress__NetIdAssignment_8 ) )
            {
            // InternalDockerCompose.g:9366:1: ( ( rule__NetworkAddress__NetIdAssignment_8 ) )
            // InternalDockerCompose.g:9367:2: ( rule__NetworkAddress__NetIdAssignment_8 )
            {
             before(grammarAccess.getNetworkAddressAccess().getNetIdAssignment_8()); 
            // InternalDockerCompose.g:9368:2: ( rule__NetworkAddress__NetIdAssignment_8 )
            // InternalDockerCompose.g:9368:3: rule__NetworkAddress__NetIdAssignment_8
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__NetIdAssignment_8();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAddressAccess().getNetIdAssignment_8()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__8__Impl"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup"
    // InternalDockerCompose.g:9377:1: rule__DockerCompose__UnorderedGroup : rule__DockerCompose__UnorderedGroup__0 {...}?;
    public final void rule__DockerCompose__UnorderedGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getDockerComposeAccess().getUnorderedGroup());
        	
        try {
            // InternalDockerCompose.g:9382:1: ( rule__DockerCompose__UnorderedGroup__0 {...}?)
            // InternalDockerCompose.g:9383:2: rule__DockerCompose__UnorderedGroup__0 {...}?
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__UnorderedGroup__0();

            state._fsp--;

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getDockerComposeAccess().getUnorderedGroup()) ) {
                throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup", "getUnorderedGroupHelper().canLeave(grammarAccess.getDockerComposeAccess().getUnorderedGroup())");
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getDockerComposeAccess().getUnorderedGroup());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__Impl"
    // InternalDockerCompose.g:9391:1: rule__DockerCompose__UnorderedGroup__Impl : ( ({...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) ) ) ) ;
    public final void rule__DockerCompose__UnorderedGroup__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:9396:1: ( ( ({...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) ) ) ) )
            // InternalDockerCompose.g:9397:3: ( ({...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:9397:3: ( ({...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) ) ) )
            int alt50=6;
            int LA50_0 = input.LA(1);

            if ( LA50_0 == 37 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                alt50=1;
            }
            else if ( LA50_0 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                alt50=2;
            }
            else if ( LA50_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                alt50=3;
            }
            else if ( LA50_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                alt50=4;
            }
            else if ( LA50_0 == 41 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                alt50=5;
            }
            else if ( LA50_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                alt50=6;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }
            switch (alt50) {
                case 1 :
                    // InternalDockerCompose.g:9398:3: ({...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9398:3: ({...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) ) )
                    // InternalDockerCompose.g:9399:4: {...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                        throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0)");
                    }
                    // InternalDockerCompose.g:9399:107: ( ( ( rule__DockerCompose__Group_0__0 ) ) )
                    // InternalDockerCompose.g:9400:5: ( ( rule__DockerCompose__Group_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9406:5: ( ( rule__DockerCompose__Group_0__0 ) )
                    // InternalDockerCompose.g:9407:6: ( rule__DockerCompose__Group_0__0 )
                    {
                     before(grammarAccess.getDockerComposeAccess().getGroup_0()); 
                    // InternalDockerCompose.g:9408:6: ( rule__DockerCompose__Group_0__0 )
                    // InternalDockerCompose.g:9408:7: rule__DockerCompose__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDockerComposeAccess().getGroup_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:9413:3: ({...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9413:3: ({...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) ) )
                    // InternalDockerCompose.g:9414:4: {...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                        throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1)");
                    }
                    // InternalDockerCompose.g:9414:107: ( ( ( rule__DockerCompose__Group_1__0 ) ) )
                    // InternalDockerCompose.g:9415:5: ( ( rule__DockerCompose__Group_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9421:5: ( ( rule__DockerCompose__Group_1__0 ) )
                    // InternalDockerCompose.g:9422:6: ( rule__DockerCompose__Group_1__0 )
                    {
                     before(grammarAccess.getDockerComposeAccess().getGroup_1()); 
                    // InternalDockerCompose.g:9423:6: ( rule__DockerCompose__Group_1__0 )
                    // InternalDockerCompose.g:9423:7: rule__DockerCompose__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDockerComposeAccess().getGroup_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:9428:3: ({...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9428:3: ({...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) ) )
                    // InternalDockerCompose.g:9429:4: {...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                        throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2)");
                    }
                    // InternalDockerCompose.g:9429:107: ( ( ( rule__DockerCompose__Group_2__0 ) ) )
                    // InternalDockerCompose.g:9430:5: ( ( rule__DockerCompose__Group_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9436:5: ( ( rule__DockerCompose__Group_2__0 ) )
                    // InternalDockerCompose.g:9437:6: ( rule__DockerCompose__Group_2__0 )
                    {
                     before(grammarAccess.getDockerComposeAccess().getGroup_2()); 
                    // InternalDockerCompose.g:9438:6: ( rule__DockerCompose__Group_2__0 )
                    // InternalDockerCompose.g:9438:7: rule__DockerCompose__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDockerComposeAccess().getGroup_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:9443:3: ({...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9443:3: ({...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) ) )
                    // InternalDockerCompose.g:9444:4: {...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                        throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3)");
                    }
                    // InternalDockerCompose.g:9444:107: ( ( ( rule__DockerCompose__Group_3__0 ) ) )
                    // InternalDockerCompose.g:9445:5: ( ( rule__DockerCompose__Group_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9451:5: ( ( rule__DockerCompose__Group_3__0 ) )
                    // InternalDockerCompose.g:9452:6: ( rule__DockerCompose__Group_3__0 )
                    {
                     before(grammarAccess.getDockerComposeAccess().getGroup_3()); 
                    // InternalDockerCompose.g:9453:6: ( rule__DockerCompose__Group_3__0 )
                    // InternalDockerCompose.g:9453:7: rule__DockerCompose__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__Group_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDockerComposeAccess().getGroup_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:9458:3: ({...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9458:3: ({...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) ) )
                    // InternalDockerCompose.g:9459:4: {...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                        throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4)");
                    }
                    // InternalDockerCompose.g:9459:107: ( ( ( rule__DockerCompose__Group_4__0 ) ) )
                    // InternalDockerCompose.g:9460:5: ( ( rule__DockerCompose__Group_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9466:5: ( ( rule__DockerCompose__Group_4__0 ) )
                    // InternalDockerCompose.g:9467:6: ( rule__DockerCompose__Group_4__0 )
                    {
                     before(grammarAccess.getDockerComposeAccess().getGroup_4()); 
                    // InternalDockerCompose.g:9468:6: ( rule__DockerCompose__Group_4__0 )
                    // InternalDockerCompose.g:9468:7: rule__DockerCompose__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__Group_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDockerComposeAccess().getGroup_4()); 

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDockerCompose.g:9473:3: ({...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9473:3: ({...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) ) )
                    // InternalDockerCompose.g:9474:4: {...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                        throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5)");
                    }
                    // InternalDockerCompose.g:9474:107: ( ( ( rule__DockerCompose__Group_5__0 ) ) )
                    // InternalDockerCompose.g:9475:5: ( ( rule__DockerCompose__Group_5__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9481:5: ( ( rule__DockerCompose__Group_5__0 ) )
                    // InternalDockerCompose.g:9482:6: ( rule__DockerCompose__Group_5__0 )
                    {
                     before(grammarAccess.getDockerComposeAccess().getGroup_5()); 
                    // InternalDockerCompose.g:9483:6: ( rule__DockerCompose__Group_5__0 )
                    // InternalDockerCompose.g:9483:7: rule__DockerCompose__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__Group_5__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDockerComposeAccess().getGroup_5()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDockerComposeAccess().getUnorderedGroup());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__Impl"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__0"
    // InternalDockerCompose.g:9496:1: rule__DockerCompose__UnorderedGroup__0 : rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__1 )? ;
    public final void rule__DockerCompose__UnorderedGroup__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9500:1: ( rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__1 )? )
            // InternalDockerCompose.g:9501:2: rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__1 )?
            {
            pushFollow(FOLLOW_43);
            rule__DockerCompose__UnorderedGroup__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9502:2: ( rule__DockerCompose__UnorderedGroup__1 )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( LA51_0 == 37 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                alt51=1;
            }
            else if ( LA51_0 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                alt51=1;
            }
            else if ( LA51_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                alt51=1;
            }
            else if ( LA51_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                alt51=1;
            }
            else if ( LA51_0 == 41 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                alt51=1;
            }
            else if ( LA51_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalDockerCompose.g:9502:2: rule__DockerCompose__UnorderedGroup__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__UnorderedGroup__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__0"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__1"
    // InternalDockerCompose.g:9508:1: rule__DockerCompose__UnorderedGroup__1 : rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__2 )? ;
    public final void rule__DockerCompose__UnorderedGroup__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9512:1: ( rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__2 )? )
            // InternalDockerCompose.g:9513:2: rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__2 )?
            {
            pushFollow(FOLLOW_43);
            rule__DockerCompose__UnorderedGroup__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9514:2: ( rule__DockerCompose__UnorderedGroup__2 )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( LA52_0 == 37 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                alt52=1;
            }
            else if ( LA52_0 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                alt52=1;
            }
            else if ( LA52_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                alt52=1;
            }
            else if ( LA52_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                alt52=1;
            }
            else if ( LA52_0 == 41 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                alt52=1;
            }
            else if ( LA52_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalDockerCompose.g:9514:2: rule__DockerCompose__UnorderedGroup__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__UnorderedGroup__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__1"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__2"
    // InternalDockerCompose.g:9520:1: rule__DockerCompose__UnorderedGroup__2 : rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__3 )? ;
    public final void rule__DockerCompose__UnorderedGroup__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9524:1: ( rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__3 )? )
            // InternalDockerCompose.g:9525:2: rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__3 )?
            {
            pushFollow(FOLLOW_43);
            rule__DockerCompose__UnorderedGroup__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9526:2: ( rule__DockerCompose__UnorderedGroup__3 )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( LA53_0 == 37 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                alt53=1;
            }
            else if ( LA53_0 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                alt53=1;
            }
            else if ( LA53_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                alt53=1;
            }
            else if ( LA53_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                alt53=1;
            }
            else if ( LA53_0 == 41 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                alt53=1;
            }
            else if ( LA53_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalDockerCompose.g:9526:2: rule__DockerCompose__UnorderedGroup__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__UnorderedGroup__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__2"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__3"
    // InternalDockerCompose.g:9532:1: rule__DockerCompose__UnorderedGroup__3 : rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__4 )? ;
    public final void rule__DockerCompose__UnorderedGroup__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9536:1: ( rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__4 )? )
            // InternalDockerCompose.g:9537:2: rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__4 )?
            {
            pushFollow(FOLLOW_43);
            rule__DockerCompose__UnorderedGroup__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9538:2: ( rule__DockerCompose__UnorderedGroup__4 )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( LA54_0 == 37 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                alt54=1;
            }
            else if ( LA54_0 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                alt54=1;
            }
            else if ( LA54_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                alt54=1;
            }
            else if ( LA54_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                alt54=1;
            }
            else if ( LA54_0 == 41 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                alt54=1;
            }
            else if ( LA54_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalDockerCompose.g:9538:2: rule__DockerCompose__UnorderedGroup__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__UnorderedGroup__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__3"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__4"
    // InternalDockerCompose.g:9544:1: rule__DockerCompose__UnorderedGroup__4 : rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__5 )? ;
    public final void rule__DockerCompose__UnorderedGroup__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9548:1: ( rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__5 )? )
            // InternalDockerCompose.g:9549:2: rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__5 )?
            {
            pushFollow(FOLLOW_43);
            rule__DockerCompose__UnorderedGroup__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9550:2: ( rule__DockerCompose__UnorderedGroup__5 )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( LA55_0 == 37 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                alt55=1;
            }
            else if ( LA55_0 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                alt55=1;
            }
            else if ( LA55_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                alt55=1;
            }
            else if ( LA55_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                alt55=1;
            }
            else if ( LA55_0 == 41 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                alt55=1;
            }
            else if ( LA55_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // InternalDockerCompose.g:9550:2: rule__DockerCompose__UnorderedGroup__5
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__UnorderedGroup__5();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__4"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__5"
    // InternalDockerCompose.g:9556:1: rule__DockerCompose__UnorderedGroup__5 : rule__DockerCompose__UnorderedGroup__Impl ;
    public final void rule__DockerCompose__UnorderedGroup__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9560:1: ( rule__DockerCompose__UnorderedGroup__Impl )
            // InternalDockerCompose.g:9561:2: rule__DockerCompose__UnorderedGroup__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__UnorderedGroup__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__5"


    // $ANTLR start "rule__Service__UnorderedGroup_3"
    // InternalDockerCompose.g:9568:1: rule__Service__UnorderedGroup_3 : rule__Service__UnorderedGroup_3__0 {...}?;
    public final void rule__Service__UnorderedGroup_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getServiceAccess().getUnorderedGroup_3());
        	
        try {
            // InternalDockerCompose.g:9573:1: ( rule__Service__UnorderedGroup_3__0 {...}?)
            // InternalDockerCompose.g:9574:2: rule__Service__UnorderedGroup_3__0 {...}?
            {
            pushFollow(FOLLOW_2);
            rule__Service__UnorderedGroup_3__0();

            state._fsp--;

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {
                throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3", "getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3())");
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getServiceAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3"


    // $ANTLR start "rule__Service__UnorderedGroup_3__Impl"
    // InternalDockerCompose.g:9582:1: rule__Service__UnorderedGroup_3__Impl : ( ({...}? => ( ( ( rule__Service__Alternatives_3_0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_15__0 ) ) ) ) ) ;
    public final void rule__Service__UnorderedGroup_3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:9587:1: ( ( ({...}? => ( ( ( rule__Service__Alternatives_3_0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_15__0 ) ) ) ) ) )
            // InternalDockerCompose.g:9588:3: ( ({...}? => ( ( ( rule__Service__Alternatives_3_0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_15__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:9588:3: ( ({...}? => ( ( ( rule__Service__Alternatives_3_0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_15__0 ) ) ) ) )
            int alt56=16;
            alt56 = dfa56.predict(input);
            switch (alt56) {
                case 1 :
                    // InternalDockerCompose.g:9589:3: ({...}? => ( ( ( rule__Service__Alternatives_3_0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9589:3: ({...}? => ( ( ( rule__Service__Alternatives_3_0 ) ) ) )
                    // InternalDockerCompose.g:9590:4: {...}? => ( ( ( rule__Service__Alternatives_3_0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0)");
                    }
                    // InternalDockerCompose.g:9590:103: ( ( ( rule__Service__Alternatives_3_0 ) ) )
                    // InternalDockerCompose.g:9591:5: ( ( rule__Service__Alternatives_3_0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9597:5: ( ( rule__Service__Alternatives_3_0 ) )
                    // InternalDockerCompose.g:9598:6: ( rule__Service__Alternatives_3_0 )
                    {
                     before(grammarAccess.getServiceAccess().getAlternatives_3_0()); 
                    // InternalDockerCompose.g:9599:6: ( rule__Service__Alternatives_3_0 )
                    // InternalDockerCompose.g:9599:7: rule__Service__Alternatives_3_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Alternatives_3_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getAlternatives_3_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:9604:3: ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9604:3: ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) )
                    // InternalDockerCompose.g:9605:4: {...}? => ( ( ( rule__Service__Group_3_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1)");
                    }
                    // InternalDockerCompose.g:9605:103: ( ( ( rule__Service__Group_3_1__0 ) ) )
                    // InternalDockerCompose.g:9606:5: ( ( rule__Service__Group_3_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9612:5: ( ( rule__Service__Group_3_1__0 ) )
                    // InternalDockerCompose.g:9613:6: ( rule__Service__Group_3_1__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_1()); 
                    // InternalDockerCompose.g:9614:6: ( rule__Service__Group_3_1__0 )
                    // InternalDockerCompose.g:9614:7: rule__Service__Group_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:9619:3: ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9619:3: ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) )
                    // InternalDockerCompose.g:9620:4: {...}? => ( ( ( rule__Service__Group_3_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2)");
                    }
                    // InternalDockerCompose.g:9620:103: ( ( ( rule__Service__Group_3_2__0 ) ) )
                    // InternalDockerCompose.g:9621:5: ( ( rule__Service__Group_3_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9627:5: ( ( rule__Service__Group_3_2__0 ) )
                    // InternalDockerCompose.g:9628:6: ( rule__Service__Group_3_2__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_2()); 
                    // InternalDockerCompose.g:9629:6: ( rule__Service__Group_3_2__0 )
                    // InternalDockerCompose.g:9629:7: rule__Service__Group_3_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:9634:3: ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9634:3: ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) )
                    // InternalDockerCompose.g:9635:4: {...}? => ( ( ( rule__Service__Group_3_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3)");
                    }
                    // InternalDockerCompose.g:9635:103: ( ( ( rule__Service__Group_3_3__0 ) ) )
                    // InternalDockerCompose.g:9636:5: ( ( rule__Service__Group_3_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9642:5: ( ( rule__Service__Group_3_3__0 ) )
                    // InternalDockerCompose.g:9643:6: ( rule__Service__Group_3_3__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_3()); 
                    // InternalDockerCompose.g:9644:6: ( rule__Service__Group_3_3__0 )
                    // InternalDockerCompose.g:9644:7: rule__Service__Group_3_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:9649:3: ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9649:3: ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) )
                    // InternalDockerCompose.g:9650:4: {...}? => ( ( ( rule__Service__Group_3_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4)");
                    }
                    // InternalDockerCompose.g:9650:103: ( ( ( rule__Service__Group_3_4__0 ) ) )
                    // InternalDockerCompose.g:9651:5: ( ( rule__Service__Group_3_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9657:5: ( ( rule__Service__Group_3_4__0 ) )
                    // InternalDockerCompose.g:9658:6: ( rule__Service__Group_3_4__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_4()); 
                    // InternalDockerCompose.g:9659:6: ( rule__Service__Group_3_4__0 )
                    // InternalDockerCompose.g:9659:7: rule__Service__Group_3_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_4()); 

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDockerCompose.g:9664:3: ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9664:3: ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) )
                    // InternalDockerCompose.g:9665:4: {...}? => ( ( ( rule__Service__Group_3_5__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5)");
                    }
                    // InternalDockerCompose.g:9665:103: ( ( ( rule__Service__Group_3_5__0 ) ) )
                    // InternalDockerCompose.g:9666:5: ( ( rule__Service__Group_3_5__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9672:5: ( ( rule__Service__Group_3_5__0 ) )
                    // InternalDockerCompose.g:9673:6: ( rule__Service__Group_3_5__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_5()); 
                    // InternalDockerCompose.g:9674:6: ( rule__Service__Group_3_5__0 )
                    // InternalDockerCompose.g:9674:7: rule__Service__Group_3_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_5__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_5()); 

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalDockerCompose.g:9679:3: ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9679:3: ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) )
                    // InternalDockerCompose.g:9680:4: {...}? => ( ( ( rule__Service__Group_3_6__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6)");
                    }
                    // InternalDockerCompose.g:9680:103: ( ( ( rule__Service__Group_3_6__0 ) ) )
                    // InternalDockerCompose.g:9681:5: ( ( rule__Service__Group_3_6__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9687:5: ( ( rule__Service__Group_3_6__0 ) )
                    // InternalDockerCompose.g:9688:6: ( rule__Service__Group_3_6__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_6()); 
                    // InternalDockerCompose.g:9689:6: ( rule__Service__Group_3_6__0 )
                    // InternalDockerCompose.g:9689:7: rule__Service__Group_3_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_6__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_6()); 

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalDockerCompose.g:9694:3: ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9694:3: ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) )
                    // InternalDockerCompose.g:9695:4: {...}? => ( ( ( rule__Service__Group_3_7__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7)");
                    }
                    // InternalDockerCompose.g:9695:103: ( ( ( rule__Service__Group_3_7__0 ) ) )
                    // InternalDockerCompose.g:9696:5: ( ( rule__Service__Group_3_7__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9702:5: ( ( rule__Service__Group_3_7__0 ) )
                    // InternalDockerCompose.g:9703:6: ( rule__Service__Group_3_7__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_7()); 
                    // InternalDockerCompose.g:9704:6: ( rule__Service__Group_3_7__0 )
                    // InternalDockerCompose.g:9704:7: rule__Service__Group_3_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_7__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_7()); 

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalDockerCompose.g:9709:3: ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9709:3: ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) )
                    // InternalDockerCompose.g:9710:4: {...}? => ( ( ( rule__Service__Group_3_8__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8)");
                    }
                    // InternalDockerCompose.g:9710:103: ( ( ( rule__Service__Group_3_8__0 ) ) )
                    // InternalDockerCompose.g:9711:5: ( ( rule__Service__Group_3_8__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9717:5: ( ( rule__Service__Group_3_8__0 ) )
                    // InternalDockerCompose.g:9718:6: ( rule__Service__Group_3_8__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_8()); 
                    // InternalDockerCompose.g:9719:6: ( rule__Service__Group_3_8__0 )
                    // InternalDockerCompose.g:9719:7: rule__Service__Group_3_8__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_8__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_8()); 

                    }


                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalDockerCompose.g:9724:3: ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9724:3: ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) )
                    // InternalDockerCompose.g:9725:4: {...}? => ( ( ( rule__Service__Group_3_9__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9)");
                    }
                    // InternalDockerCompose.g:9725:103: ( ( ( rule__Service__Group_3_9__0 ) ) )
                    // InternalDockerCompose.g:9726:5: ( ( rule__Service__Group_3_9__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9732:5: ( ( rule__Service__Group_3_9__0 ) )
                    // InternalDockerCompose.g:9733:6: ( rule__Service__Group_3_9__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_9()); 
                    // InternalDockerCompose.g:9734:6: ( rule__Service__Group_3_9__0 )
                    // InternalDockerCompose.g:9734:7: rule__Service__Group_3_9__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_9__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_9()); 

                    }


                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalDockerCompose.g:9739:3: ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9739:3: ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) )
                    // InternalDockerCompose.g:9740:4: {...}? => ( ( ( rule__Service__Group_3_10__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10)");
                    }
                    // InternalDockerCompose.g:9740:104: ( ( ( rule__Service__Group_3_10__0 ) ) )
                    // InternalDockerCompose.g:9741:5: ( ( rule__Service__Group_3_10__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9747:5: ( ( rule__Service__Group_3_10__0 ) )
                    // InternalDockerCompose.g:9748:6: ( rule__Service__Group_3_10__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_10()); 
                    // InternalDockerCompose.g:9749:6: ( rule__Service__Group_3_10__0 )
                    // InternalDockerCompose.g:9749:7: rule__Service__Group_3_10__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_10__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_10()); 

                    }


                    }


                    }


                    }
                    break;
                case 12 :
                    // InternalDockerCompose.g:9754:3: ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9754:3: ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) )
                    // InternalDockerCompose.g:9755:4: {...}? => ( ( ( rule__Service__Group_3_11__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11)");
                    }
                    // InternalDockerCompose.g:9755:104: ( ( ( rule__Service__Group_3_11__0 ) ) )
                    // InternalDockerCompose.g:9756:5: ( ( rule__Service__Group_3_11__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9762:5: ( ( rule__Service__Group_3_11__0 ) )
                    // InternalDockerCompose.g:9763:6: ( rule__Service__Group_3_11__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_11()); 
                    // InternalDockerCompose.g:9764:6: ( rule__Service__Group_3_11__0 )
                    // InternalDockerCompose.g:9764:7: rule__Service__Group_3_11__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_11__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_11()); 

                    }


                    }


                    }


                    }
                    break;
                case 13 :
                    // InternalDockerCompose.g:9769:3: ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9769:3: ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) )
                    // InternalDockerCompose.g:9770:4: {...}? => ( ( ( rule__Service__Group_3_12__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12)");
                    }
                    // InternalDockerCompose.g:9770:104: ( ( ( rule__Service__Group_3_12__0 ) ) )
                    // InternalDockerCompose.g:9771:5: ( ( rule__Service__Group_3_12__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9777:5: ( ( rule__Service__Group_3_12__0 ) )
                    // InternalDockerCompose.g:9778:6: ( rule__Service__Group_3_12__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_12()); 
                    // InternalDockerCompose.g:9779:6: ( rule__Service__Group_3_12__0 )
                    // InternalDockerCompose.g:9779:7: rule__Service__Group_3_12__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_12__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_12()); 

                    }


                    }


                    }


                    }
                    break;
                case 14 :
                    // InternalDockerCompose.g:9784:3: ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9784:3: ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) )
                    // InternalDockerCompose.g:9785:4: {...}? => ( ( ( rule__Service__Group_3_13__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13)");
                    }
                    // InternalDockerCompose.g:9785:104: ( ( ( rule__Service__Group_3_13__0 ) ) )
                    // InternalDockerCompose.g:9786:5: ( ( rule__Service__Group_3_13__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9792:5: ( ( rule__Service__Group_3_13__0 ) )
                    // InternalDockerCompose.g:9793:6: ( rule__Service__Group_3_13__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_13()); 
                    // InternalDockerCompose.g:9794:6: ( rule__Service__Group_3_13__0 )
                    // InternalDockerCompose.g:9794:7: rule__Service__Group_3_13__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_13__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_13()); 

                    }


                    }


                    }


                    }
                    break;
                case 15 :
                    // InternalDockerCompose.g:9799:3: ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9799:3: ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) )
                    // InternalDockerCompose.g:9800:4: {...}? => ( ( ( rule__Service__Group_3_14__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14)");
                    }
                    // InternalDockerCompose.g:9800:104: ( ( ( rule__Service__Group_3_14__0 ) ) )
                    // InternalDockerCompose.g:9801:5: ( ( rule__Service__Group_3_14__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9807:5: ( ( rule__Service__Group_3_14__0 ) )
                    // InternalDockerCompose.g:9808:6: ( rule__Service__Group_3_14__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_14()); 
                    // InternalDockerCompose.g:9809:6: ( rule__Service__Group_3_14__0 )
                    // InternalDockerCompose.g:9809:7: rule__Service__Group_3_14__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_14__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_14()); 

                    }


                    }


                    }


                    }
                    break;
                case 16 :
                    // InternalDockerCompose.g:9814:3: ({...}? => ( ( ( rule__Service__Group_3_15__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9814:3: ({...}? => ( ( ( rule__Service__Group_3_15__0 ) ) ) )
                    // InternalDockerCompose.g:9815:4: {...}? => ( ( ( rule__Service__Group_3_15__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15)");
                    }
                    // InternalDockerCompose.g:9815:104: ( ( ( rule__Service__Group_3_15__0 ) ) )
                    // InternalDockerCompose.g:9816:5: ( ( rule__Service__Group_3_15__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9822:5: ( ( rule__Service__Group_3_15__0 ) )
                    // InternalDockerCompose.g:9823:6: ( rule__Service__Group_3_15__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_15()); 
                    // InternalDockerCompose.g:9824:6: ( rule__Service__Group_3_15__0 )
                    // InternalDockerCompose.g:9824:7: rule__Service__Group_3_15__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_15__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_15()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getServiceAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__Impl"


    // $ANTLR start "rule__Service__UnorderedGroup_3__0"
    // InternalDockerCompose.g:9837:1: rule__Service__UnorderedGroup_3__0 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__1 )? ;
    public final void rule__Service__UnorderedGroup_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9841:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__1 )? )
            // InternalDockerCompose.g:9842:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__1 )?
            {
            pushFollow(FOLLOW_44);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9843:2: ( rule__Service__UnorderedGroup_3__1 )?
            int alt57=2;
            alt57 = dfa57.predict(input);
            switch (alt57) {
                case 1 :
                    // InternalDockerCompose.g:9843:2: rule__Service__UnorderedGroup_3__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__0"


    // $ANTLR start "rule__Service__UnorderedGroup_3__1"
    // InternalDockerCompose.g:9849:1: rule__Service__UnorderedGroup_3__1 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__2 )? ;
    public final void rule__Service__UnorderedGroup_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9853:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__2 )? )
            // InternalDockerCompose.g:9854:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__2 )?
            {
            pushFollow(FOLLOW_44);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9855:2: ( rule__Service__UnorderedGroup_3__2 )?
            int alt58=2;
            alt58 = dfa58.predict(input);
            switch (alt58) {
                case 1 :
                    // InternalDockerCompose.g:9855:2: rule__Service__UnorderedGroup_3__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__1"


    // $ANTLR start "rule__Service__UnorderedGroup_3__2"
    // InternalDockerCompose.g:9861:1: rule__Service__UnorderedGroup_3__2 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__3 )? ;
    public final void rule__Service__UnorderedGroup_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9865:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__3 )? )
            // InternalDockerCompose.g:9866:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__3 )?
            {
            pushFollow(FOLLOW_44);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9867:2: ( rule__Service__UnorderedGroup_3__3 )?
            int alt59=2;
            alt59 = dfa59.predict(input);
            switch (alt59) {
                case 1 :
                    // InternalDockerCompose.g:9867:2: rule__Service__UnorderedGroup_3__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__2"


    // $ANTLR start "rule__Service__UnorderedGroup_3__3"
    // InternalDockerCompose.g:9873:1: rule__Service__UnorderedGroup_3__3 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__4 )? ;
    public final void rule__Service__UnorderedGroup_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9877:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__4 )? )
            // InternalDockerCompose.g:9878:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__4 )?
            {
            pushFollow(FOLLOW_44);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9879:2: ( rule__Service__UnorderedGroup_3__4 )?
            int alt60=2;
            alt60 = dfa60.predict(input);
            switch (alt60) {
                case 1 :
                    // InternalDockerCompose.g:9879:2: rule__Service__UnorderedGroup_3__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__3"


    // $ANTLR start "rule__Service__UnorderedGroup_3__4"
    // InternalDockerCompose.g:9885:1: rule__Service__UnorderedGroup_3__4 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__5 )? ;
    public final void rule__Service__UnorderedGroup_3__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9889:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__5 )? )
            // InternalDockerCompose.g:9890:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__5 )?
            {
            pushFollow(FOLLOW_44);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9891:2: ( rule__Service__UnorderedGroup_3__5 )?
            int alt61=2;
            alt61 = dfa61.predict(input);
            switch (alt61) {
                case 1 :
                    // InternalDockerCompose.g:9891:2: rule__Service__UnorderedGroup_3__5
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__5();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__4"


    // $ANTLR start "rule__Service__UnorderedGroup_3__5"
    // InternalDockerCompose.g:9897:1: rule__Service__UnorderedGroup_3__5 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__6 )? ;
    public final void rule__Service__UnorderedGroup_3__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9901:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__6 )? )
            // InternalDockerCompose.g:9902:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__6 )?
            {
            pushFollow(FOLLOW_44);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9903:2: ( rule__Service__UnorderedGroup_3__6 )?
            int alt62=2;
            alt62 = dfa62.predict(input);
            switch (alt62) {
                case 1 :
                    // InternalDockerCompose.g:9903:2: rule__Service__UnorderedGroup_3__6
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__6();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__5"


    // $ANTLR start "rule__Service__UnorderedGroup_3__6"
    // InternalDockerCompose.g:9909:1: rule__Service__UnorderedGroup_3__6 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__7 )? ;
    public final void rule__Service__UnorderedGroup_3__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9913:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__7 )? )
            // InternalDockerCompose.g:9914:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__7 )?
            {
            pushFollow(FOLLOW_44);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9915:2: ( rule__Service__UnorderedGroup_3__7 )?
            int alt63=2;
            alt63 = dfa63.predict(input);
            switch (alt63) {
                case 1 :
                    // InternalDockerCompose.g:9915:2: rule__Service__UnorderedGroup_3__7
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__7();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__6"


    // $ANTLR start "rule__Service__UnorderedGroup_3__7"
    // InternalDockerCompose.g:9921:1: rule__Service__UnorderedGroup_3__7 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__8 )? ;
    public final void rule__Service__UnorderedGroup_3__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9925:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__8 )? )
            // InternalDockerCompose.g:9926:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__8 )?
            {
            pushFollow(FOLLOW_44);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9927:2: ( rule__Service__UnorderedGroup_3__8 )?
            int alt64=2;
            alt64 = dfa64.predict(input);
            switch (alt64) {
                case 1 :
                    // InternalDockerCompose.g:9927:2: rule__Service__UnorderedGroup_3__8
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__8();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__7"


    // $ANTLR start "rule__Service__UnorderedGroup_3__8"
    // InternalDockerCompose.g:9933:1: rule__Service__UnorderedGroup_3__8 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__9 )? ;
    public final void rule__Service__UnorderedGroup_3__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9937:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__9 )? )
            // InternalDockerCompose.g:9938:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__9 )?
            {
            pushFollow(FOLLOW_44);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9939:2: ( rule__Service__UnorderedGroup_3__9 )?
            int alt65=2;
            alt65 = dfa65.predict(input);
            switch (alt65) {
                case 1 :
                    // InternalDockerCompose.g:9939:2: rule__Service__UnorderedGroup_3__9
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__9();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__8"


    // $ANTLR start "rule__Service__UnorderedGroup_3__9"
    // InternalDockerCompose.g:9945:1: rule__Service__UnorderedGroup_3__9 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__10 )? ;
    public final void rule__Service__UnorderedGroup_3__9() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9949:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__10 )? )
            // InternalDockerCompose.g:9950:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__10 )?
            {
            pushFollow(FOLLOW_44);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9951:2: ( rule__Service__UnorderedGroup_3__10 )?
            int alt66=2;
            alt66 = dfa66.predict(input);
            switch (alt66) {
                case 1 :
                    // InternalDockerCompose.g:9951:2: rule__Service__UnorderedGroup_3__10
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__10();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__9"


    // $ANTLR start "rule__Service__UnorderedGroup_3__10"
    // InternalDockerCompose.g:9957:1: rule__Service__UnorderedGroup_3__10 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__11 )? ;
    public final void rule__Service__UnorderedGroup_3__10() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9961:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__11 )? )
            // InternalDockerCompose.g:9962:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__11 )?
            {
            pushFollow(FOLLOW_44);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9963:2: ( rule__Service__UnorderedGroup_3__11 )?
            int alt67=2;
            alt67 = dfa67.predict(input);
            switch (alt67) {
                case 1 :
                    // InternalDockerCompose.g:9963:2: rule__Service__UnorderedGroup_3__11
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__11();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__10"


    // $ANTLR start "rule__Service__UnorderedGroup_3__11"
    // InternalDockerCompose.g:9969:1: rule__Service__UnorderedGroup_3__11 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__12 )? ;
    public final void rule__Service__UnorderedGroup_3__11() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9973:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__12 )? )
            // InternalDockerCompose.g:9974:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__12 )?
            {
            pushFollow(FOLLOW_44);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9975:2: ( rule__Service__UnorderedGroup_3__12 )?
            int alt68=2;
            alt68 = dfa68.predict(input);
            switch (alt68) {
                case 1 :
                    // InternalDockerCompose.g:9975:2: rule__Service__UnorderedGroup_3__12
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__12();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__11"


    // $ANTLR start "rule__Service__UnorderedGroup_3__12"
    // InternalDockerCompose.g:9981:1: rule__Service__UnorderedGroup_3__12 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__13 )? ;
    public final void rule__Service__UnorderedGroup_3__12() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9985:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__13 )? )
            // InternalDockerCompose.g:9986:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__13 )?
            {
            pushFollow(FOLLOW_44);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9987:2: ( rule__Service__UnorderedGroup_3__13 )?
            int alt69=2;
            alt69 = dfa69.predict(input);
            switch (alt69) {
                case 1 :
                    // InternalDockerCompose.g:9987:2: rule__Service__UnorderedGroup_3__13
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__13();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__12"


    // $ANTLR start "rule__Service__UnorderedGroup_3__13"
    // InternalDockerCompose.g:9993:1: rule__Service__UnorderedGroup_3__13 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__14 )? ;
    public final void rule__Service__UnorderedGroup_3__13() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9997:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__14 )? )
            // InternalDockerCompose.g:9998:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__14 )?
            {
            pushFollow(FOLLOW_44);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9999:2: ( rule__Service__UnorderedGroup_3__14 )?
            int alt70=2;
            alt70 = dfa70.predict(input);
            switch (alt70) {
                case 1 :
                    // InternalDockerCompose.g:9999:2: rule__Service__UnorderedGroup_3__14
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__14();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__13"


    // $ANTLR start "rule__Service__UnorderedGroup_3__14"
    // InternalDockerCompose.g:10005:1: rule__Service__UnorderedGroup_3__14 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__15 )? ;
    public final void rule__Service__UnorderedGroup_3__14() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10009:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__15 )? )
            // InternalDockerCompose.g:10010:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__15 )?
            {
            pushFollow(FOLLOW_44);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10011:2: ( rule__Service__UnorderedGroup_3__15 )?
            int alt71=2;
            alt71 = dfa71.predict(input);
            switch (alt71) {
                case 1 :
                    // InternalDockerCompose.g:10011:2: rule__Service__UnorderedGroup_3__15
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__15();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__14"


    // $ANTLR start "rule__Service__UnorderedGroup_3__15"
    // InternalDockerCompose.g:10017:1: rule__Service__UnorderedGroup_3__15 : rule__Service__UnorderedGroup_3__Impl ;
    public final void rule__Service__UnorderedGroup_3__15() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10021:1: ( rule__Service__UnorderedGroup_3__Impl )
            // InternalDockerCompose.g:10022:2: rule__Service__UnorderedGroup_3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__15"


    // $ANTLR start "rule__NetworkConnector__UnorderedGroup_1_1_2"
    // InternalDockerCompose.g:10029:1: rule__NetworkConnector__UnorderedGroup_1_1_2 : ( rule__NetworkConnector__UnorderedGroup_1_1_2__0 )? ;
    public final void rule__NetworkConnector__UnorderedGroup_1_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2());
        	
        try {
            // InternalDockerCompose.g:10034:1: ( ( rule__NetworkConnector__UnorderedGroup_1_1_2__0 )? )
            // InternalDockerCompose.g:10035:2: ( rule__NetworkConnector__UnorderedGroup_1_1_2__0 )?
            {
            // InternalDockerCompose.g:10035:2: ( rule__NetworkConnector__UnorderedGroup_1_1_2__0 )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( LA72_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 0) ) {
                alt72=1;
            }
            else if ( LA72_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 1) ) {
                alt72=1;
            }
            else if ( LA72_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 2) ) {
                alt72=1;
            }
            else if ( LA72_0 == 62 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 3) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalDockerCompose.g:10035:2: rule__NetworkConnector__UnorderedGroup_1_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector__UnorderedGroup_1_1_2__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__UnorderedGroup_1_1_2"


    // $ANTLR start "rule__NetworkConnector__UnorderedGroup_1_1_2__Impl"
    // InternalDockerCompose.g:10043:1: rule__NetworkConnector__UnorderedGroup_1_1_2__Impl : ( ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_0__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_1__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_2__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_3__0 ) ) ) ) ) ;
    public final void rule__NetworkConnector__UnorderedGroup_1_1_2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:10048:1: ( ( ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_0__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_1__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_2__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_3__0 ) ) ) ) ) )
            // InternalDockerCompose.g:10049:3: ( ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_0__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_1__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_2__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_3__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:10049:3: ( ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_0__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_1__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_2__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_3__0 ) ) ) ) )
            int alt73=4;
            int LA73_0 = input.LA(1);

            if ( LA73_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 0) ) {
                alt73=1;
            }
            else if ( LA73_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 1) ) {
                alt73=2;
            }
            else if ( LA73_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 2) ) {
                alt73=3;
            }
            else if ( LA73_0 == 62 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 3) ) {
                alt73=4;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 73, 0, input);

                throw nvae;
            }
            switch (alt73) {
                case 1 :
                    // InternalDockerCompose.g:10050:3: ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10050:3: ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_0__0 ) ) ) )
                    // InternalDockerCompose.g:10051:4: {...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 0) ) {
                        throw new FailedPredicateException(input, "rule__NetworkConnector__UnorderedGroup_1_1_2__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 0)");
                    }
                    // InternalDockerCompose.g:10051:116: ( ( ( rule__NetworkConnector__Group_1_1_2_0__0 ) ) )
                    // InternalDockerCompose.g:10052:5: ( ( rule__NetworkConnector__Group_1_1_2_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10058:5: ( ( rule__NetworkConnector__Group_1_1_2_0__0 ) )
                    // InternalDockerCompose.g:10059:6: ( rule__NetworkConnector__Group_1_1_2_0__0 )
                    {
                     before(grammarAccess.getNetworkConnectorAccess().getGroup_1_1_2_0()); 
                    // InternalDockerCompose.g:10060:6: ( rule__NetworkConnector__Group_1_1_2_0__0 )
                    // InternalDockerCompose.g:10060:7: rule__NetworkConnector__Group_1_1_2_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector__Group_1_1_2_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkConnectorAccess().getGroup_1_1_2_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:10065:3: ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10065:3: ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_1__0 ) ) ) )
                    // InternalDockerCompose.g:10066:4: {...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 1) ) {
                        throw new FailedPredicateException(input, "rule__NetworkConnector__UnorderedGroup_1_1_2__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 1)");
                    }
                    // InternalDockerCompose.g:10066:116: ( ( ( rule__NetworkConnector__Group_1_1_2_1__0 ) ) )
                    // InternalDockerCompose.g:10067:5: ( ( rule__NetworkConnector__Group_1_1_2_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10073:5: ( ( rule__NetworkConnector__Group_1_1_2_1__0 ) )
                    // InternalDockerCompose.g:10074:6: ( rule__NetworkConnector__Group_1_1_2_1__0 )
                    {
                     before(grammarAccess.getNetworkConnectorAccess().getGroup_1_1_2_1()); 
                    // InternalDockerCompose.g:10075:6: ( rule__NetworkConnector__Group_1_1_2_1__0 )
                    // InternalDockerCompose.g:10075:7: rule__NetworkConnector__Group_1_1_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector__Group_1_1_2_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkConnectorAccess().getGroup_1_1_2_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:10080:3: ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10080:3: ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_2__0 ) ) ) )
                    // InternalDockerCompose.g:10081:4: {...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 2) ) {
                        throw new FailedPredicateException(input, "rule__NetworkConnector__UnorderedGroup_1_1_2__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 2)");
                    }
                    // InternalDockerCompose.g:10081:116: ( ( ( rule__NetworkConnector__Group_1_1_2_2__0 ) ) )
                    // InternalDockerCompose.g:10082:5: ( ( rule__NetworkConnector__Group_1_1_2_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10088:5: ( ( rule__NetworkConnector__Group_1_1_2_2__0 ) )
                    // InternalDockerCompose.g:10089:6: ( rule__NetworkConnector__Group_1_1_2_2__0 )
                    {
                     before(grammarAccess.getNetworkConnectorAccess().getGroup_1_1_2_2()); 
                    // InternalDockerCompose.g:10090:6: ( rule__NetworkConnector__Group_1_1_2_2__0 )
                    // InternalDockerCompose.g:10090:7: rule__NetworkConnector__Group_1_1_2_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector__Group_1_1_2_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkConnectorAccess().getGroup_1_1_2_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:10095:3: ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10095:3: ({...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_3__0 ) ) ) )
                    // InternalDockerCompose.g:10096:4: {...}? => ( ( ( rule__NetworkConnector__Group_1_1_2_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 3) ) {
                        throw new FailedPredicateException(input, "rule__NetworkConnector__UnorderedGroup_1_1_2__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 3)");
                    }
                    // InternalDockerCompose.g:10096:116: ( ( ( rule__NetworkConnector__Group_1_1_2_3__0 ) ) )
                    // InternalDockerCompose.g:10097:5: ( ( rule__NetworkConnector__Group_1_1_2_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10103:5: ( ( rule__NetworkConnector__Group_1_1_2_3__0 ) )
                    // InternalDockerCompose.g:10104:6: ( rule__NetworkConnector__Group_1_1_2_3__0 )
                    {
                     before(grammarAccess.getNetworkConnectorAccess().getGroup_1_1_2_3()); 
                    // InternalDockerCompose.g:10105:6: ( rule__NetworkConnector__Group_1_1_2_3__0 )
                    // InternalDockerCompose.g:10105:7: rule__NetworkConnector__Group_1_1_2_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector__Group_1_1_2_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkConnectorAccess().getGroup_1_1_2_3()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__UnorderedGroup_1_1_2__Impl"


    // $ANTLR start "rule__NetworkConnector__UnorderedGroup_1_1_2__0"
    // InternalDockerCompose.g:10118:1: rule__NetworkConnector__UnorderedGroup_1_1_2__0 : rule__NetworkConnector__UnorderedGroup_1_1_2__Impl ( rule__NetworkConnector__UnorderedGroup_1_1_2__1 )? ;
    public final void rule__NetworkConnector__UnorderedGroup_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10122:1: ( rule__NetworkConnector__UnorderedGroup_1_1_2__Impl ( rule__NetworkConnector__UnorderedGroup_1_1_2__1 )? )
            // InternalDockerCompose.g:10123:2: rule__NetworkConnector__UnorderedGroup_1_1_2__Impl ( rule__NetworkConnector__UnorderedGroup_1_1_2__1 )?
            {
            pushFollow(FOLLOW_45);
            rule__NetworkConnector__UnorderedGroup_1_1_2__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10124:2: ( rule__NetworkConnector__UnorderedGroup_1_1_2__1 )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( LA74_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 0) ) {
                alt74=1;
            }
            else if ( LA74_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 1) ) {
                alt74=1;
            }
            else if ( LA74_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 2) ) {
                alt74=1;
            }
            else if ( LA74_0 == 62 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 3) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // InternalDockerCompose.g:10124:2: rule__NetworkConnector__UnorderedGroup_1_1_2__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector__UnorderedGroup_1_1_2__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__UnorderedGroup_1_1_2__0"


    // $ANTLR start "rule__NetworkConnector__UnorderedGroup_1_1_2__1"
    // InternalDockerCompose.g:10130:1: rule__NetworkConnector__UnorderedGroup_1_1_2__1 : rule__NetworkConnector__UnorderedGroup_1_1_2__Impl ( rule__NetworkConnector__UnorderedGroup_1_1_2__2 )? ;
    public final void rule__NetworkConnector__UnorderedGroup_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10134:1: ( rule__NetworkConnector__UnorderedGroup_1_1_2__Impl ( rule__NetworkConnector__UnorderedGroup_1_1_2__2 )? )
            // InternalDockerCompose.g:10135:2: rule__NetworkConnector__UnorderedGroup_1_1_2__Impl ( rule__NetworkConnector__UnorderedGroup_1_1_2__2 )?
            {
            pushFollow(FOLLOW_45);
            rule__NetworkConnector__UnorderedGroup_1_1_2__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10136:2: ( rule__NetworkConnector__UnorderedGroup_1_1_2__2 )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( LA75_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 0) ) {
                alt75=1;
            }
            else if ( LA75_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 1) ) {
                alt75=1;
            }
            else if ( LA75_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 2) ) {
                alt75=1;
            }
            else if ( LA75_0 == 62 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 3) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // InternalDockerCompose.g:10136:2: rule__NetworkConnector__UnorderedGroup_1_1_2__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector__UnorderedGroup_1_1_2__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__UnorderedGroup_1_1_2__1"


    // $ANTLR start "rule__NetworkConnector__UnorderedGroup_1_1_2__2"
    // InternalDockerCompose.g:10142:1: rule__NetworkConnector__UnorderedGroup_1_1_2__2 : rule__NetworkConnector__UnorderedGroup_1_1_2__Impl ( rule__NetworkConnector__UnorderedGroup_1_1_2__3 )? ;
    public final void rule__NetworkConnector__UnorderedGroup_1_1_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10146:1: ( rule__NetworkConnector__UnorderedGroup_1_1_2__Impl ( rule__NetworkConnector__UnorderedGroup_1_1_2__3 )? )
            // InternalDockerCompose.g:10147:2: rule__NetworkConnector__UnorderedGroup_1_1_2__Impl ( rule__NetworkConnector__UnorderedGroup_1_1_2__3 )?
            {
            pushFollow(FOLLOW_45);
            rule__NetworkConnector__UnorderedGroup_1_1_2__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10148:2: ( rule__NetworkConnector__UnorderedGroup_1_1_2__3 )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( LA76_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 0) ) {
                alt76=1;
            }
            else if ( LA76_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 1) ) {
                alt76=1;
            }
            else if ( LA76_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 2) ) {
                alt76=1;
            }
            else if ( LA76_0 == 62 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnectorAccess().getUnorderedGroup_1_1_2(), 3) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalDockerCompose.g:10148:2: rule__NetworkConnector__UnorderedGroup_1_1_2__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector__UnorderedGroup_1_1_2__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__UnorderedGroup_1_1_2__2"


    // $ANTLR start "rule__NetworkConnector__UnorderedGroup_1_1_2__3"
    // InternalDockerCompose.g:10154:1: rule__NetworkConnector__UnorderedGroup_1_1_2__3 : rule__NetworkConnector__UnorderedGroup_1_1_2__Impl ;
    public final void rule__NetworkConnector__UnorderedGroup_1_1_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10158:1: ( rule__NetworkConnector__UnorderedGroup_1_1_2__Impl )
            // InternalDockerCompose.g:10159:2: rule__NetworkConnector__UnorderedGroup_1_1_2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector__UnorderedGroup_1_1_2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__UnorderedGroup_1_1_2__3"


    // $ANTLR start "rule__VolumeConnector_long__UnorderedGroup_1"
    // InternalDockerCompose.g:10166:1: rule__VolumeConnector_long__UnorderedGroup_1 : rule__VolumeConnector_long__UnorderedGroup_1__0 {...}?;
    public final void rule__VolumeConnector_long__UnorderedGroup_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1());
        	
        try {
            // InternalDockerCompose.g:10171:1: ( rule__VolumeConnector_long__UnorderedGroup_1__0 {...}?)
            // InternalDockerCompose.g:10172:2: rule__VolumeConnector_long__UnorderedGroup_1__0 {...}?
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__UnorderedGroup_1__0();

            state._fsp--;

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "rule__VolumeConnector_long__UnorderedGroup_1", "getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1())");
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__UnorderedGroup_1"


    // $ANTLR start "rule__VolumeConnector_long__UnorderedGroup_1__Impl"
    // InternalDockerCompose.g:10180:1: rule__VolumeConnector_long__UnorderedGroup_1__Impl : ( ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_6__0 ) ) ) ) ) ;
    public final void rule__VolumeConnector_long__UnorderedGroup_1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:10185:1: ( ( ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_6__0 ) ) ) ) ) )
            // InternalDockerCompose.g:10186:3: ( ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_6__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:10186:3: ( ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_6__0 ) ) ) ) )
            int alt77=7;
            int LA77_0 = input.LA(1);

            if ( LA77_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt77=1;
            }
            else if ( LA77_0 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt77=2;
            }
            else if ( LA77_0 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt77=3;
            }
            else if ( LA77_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt77=4;
            }
            else if ( LA77_0 == 66 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt77=5;
            }
            else if ( LA77_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 5) ) {
                alt77=6;
            }
            else if ( LA77_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 6) ) {
                alt77=7;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 77, 0, input);

                throw nvae;
            }
            switch (alt77) {
                case 1 :
                    // InternalDockerCompose.g:10187:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10187:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_0__0 ) ) ) )
                    // InternalDockerCompose.g:10188:4: {...}? => ( ( ( rule__VolumeConnector_long__Group_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 0)");
                    }
                    // InternalDockerCompose.g:10188:116: ( ( ( rule__VolumeConnector_long__Group_1_0__0 ) ) )
                    // InternalDockerCompose.g:10189:5: ( ( rule__VolumeConnector_long__Group_1_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10195:5: ( ( rule__VolumeConnector_long__Group_1_0__0 ) )
                    // InternalDockerCompose.g:10196:6: ( rule__VolumeConnector_long__Group_1_0__0 )
                    {
                     before(grammarAccess.getVolumeConnector_longAccess().getGroup_1_0()); 
                    // InternalDockerCompose.g:10197:6: ( rule__VolumeConnector_long__Group_1_0__0 )
                    // InternalDockerCompose.g:10197:7: rule__VolumeConnector_long__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__Group_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnector_longAccess().getGroup_1_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:10202:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10202:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_1__0 ) ) ) )
                    // InternalDockerCompose.g:10203:4: {...}? => ( ( ( rule__VolumeConnector_long__Group_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 1)");
                    }
                    // InternalDockerCompose.g:10203:116: ( ( ( rule__VolumeConnector_long__Group_1_1__0 ) ) )
                    // InternalDockerCompose.g:10204:5: ( ( rule__VolumeConnector_long__Group_1_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10210:5: ( ( rule__VolumeConnector_long__Group_1_1__0 ) )
                    // InternalDockerCompose.g:10211:6: ( rule__VolumeConnector_long__Group_1_1__0 )
                    {
                     before(grammarAccess.getVolumeConnector_longAccess().getGroup_1_1()); 
                    // InternalDockerCompose.g:10212:6: ( rule__VolumeConnector_long__Group_1_1__0 )
                    // InternalDockerCompose.g:10212:7: rule__VolumeConnector_long__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__Group_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnector_longAccess().getGroup_1_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:10217:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10217:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_2__0 ) ) ) )
                    // InternalDockerCompose.g:10218:4: {...}? => ( ( ( rule__VolumeConnector_long__Group_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 2)");
                    }
                    // InternalDockerCompose.g:10218:116: ( ( ( rule__VolumeConnector_long__Group_1_2__0 ) ) )
                    // InternalDockerCompose.g:10219:5: ( ( rule__VolumeConnector_long__Group_1_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10225:5: ( ( rule__VolumeConnector_long__Group_1_2__0 ) )
                    // InternalDockerCompose.g:10226:6: ( rule__VolumeConnector_long__Group_1_2__0 )
                    {
                     before(grammarAccess.getVolumeConnector_longAccess().getGroup_1_2()); 
                    // InternalDockerCompose.g:10227:6: ( rule__VolumeConnector_long__Group_1_2__0 )
                    // InternalDockerCompose.g:10227:7: rule__VolumeConnector_long__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__Group_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnector_longAccess().getGroup_1_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:10232:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10232:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_3__0 ) ) ) )
                    // InternalDockerCompose.g:10233:4: {...}? => ( ( ( rule__VolumeConnector_long__Group_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3)");
                    }
                    // InternalDockerCompose.g:10233:116: ( ( ( rule__VolumeConnector_long__Group_1_3__0 ) ) )
                    // InternalDockerCompose.g:10234:5: ( ( rule__VolumeConnector_long__Group_1_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10240:5: ( ( rule__VolumeConnector_long__Group_1_3__0 ) )
                    // InternalDockerCompose.g:10241:6: ( rule__VolumeConnector_long__Group_1_3__0 )
                    {
                     before(grammarAccess.getVolumeConnector_longAccess().getGroup_1_3()); 
                    // InternalDockerCompose.g:10242:6: ( rule__VolumeConnector_long__Group_1_3__0 )
                    // InternalDockerCompose.g:10242:7: rule__VolumeConnector_long__Group_1_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__Group_1_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnector_longAccess().getGroup_1_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:10247:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10247:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_4__0 ) ) ) )
                    // InternalDockerCompose.g:10248:4: {...}? => ( ( ( rule__VolumeConnector_long__Group_1_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 4)");
                    }
                    // InternalDockerCompose.g:10248:116: ( ( ( rule__VolumeConnector_long__Group_1_4__0 ) ) )
                    // InternalDockerCompose.g:10249:5: ( ( rule__VolumeConnector_long__Group_1_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10255:5: ( ( rule__VolumeConnector_long__Group_1_4__0 ) )
                    // InternalDockerCompose.g:10256:6: ( rule__VolumeConnector_long__Group_1_4__0 )
                    {
                     before(grammarAccess.getVolumeConnector_longAccess().getGroup_1_4()); 
                    // InternalDockerCompose.g:10257:6: ( rule__VolumeConnector_long__Group_1_4__0 )
                    // InternalDockerCompose.g:10257:7: rule__VolumeConnector_long__Group_1_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__Group_1_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnector_longAccess().getGroup_1_4()); 

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDockerCompose.g:10262:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_5__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10262:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_5__0 ) ) ) )
                    // InternalDockerCompose.g:10263:4: {...}? => ( ( ( rule__VolumeConnector_long__Group_1_5__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 5) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 5)");
                    }
                    // InternalDockerCompose.g:10263:116: ( ( ( rule__VolumeConnector_long__Group_1_5__0 ) ) )
                    // InternalDockerCompose.g:10264:5: ( ( rule__VolumeConnector_long__Group_1_5__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 5);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10270:5: ( ( rule__VolumeConnector_long__Group_1_5__0 ) )
                    // InternalDockerCompose.g:10271:6: ( rule__VolumeConnector_long__Group_1_5__0 )
                    {
                     before(grammarAccess.getVolumeConnector_longAccess().getGroup_1_5()); 
                    // InternalDockerCompose.g:10272:6: ( rule__VolumeConnector_long__Group_1_5__0 )
                    // InternalDockerCompose.g:10272:7: rule__VolumeConnector_long__Group_1_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__Group_1_5__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnector_longAccess().getGroup_1_5()); 

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalDockerCompose.g:10277:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_6__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10277:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_6__0 ) ) ) )
                    // InternalDockerCompose.g:10278:4: {...}? => ( ( ( rule__VolumeConnector_long__Group_1_6__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 6) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 6)");
                    }
                    // InternalDockerCompose.g:10278:116: ( ( ( rule__VolumeConnector_long__Group_1_6__0 ) ) )
                    // InternalDockerCompose.g:10279:5: ( ( rule__VolumeConnector_long__Group_1_6__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 6);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10285:5: ( ( rule__VolumeConnector_long__Group_1_6__0 ) )
                    // InternalDockerCompose.g:10286:6: ( rule__VolumeConnector_long__Group_1_6__0 )
                    {
                     before(grammarAccess.getVolumeConnector_longAccess().getGroup_1_6()); 
                    // InternalDockerCompose.g:10287:6: ( rule__VolumeConnector_long__Group_1_6__0 )
                    // InternalDockerCompose.g:10287:7: rule__VolumeConnector_long__Group_1_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__Group_1_6__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnector_longAccess().getGroup_1_6()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__UnorderedGroup_1__Impl"


    // $ANTLR start "rule__VolumeConnector_long__UnorderedGroup_1__0"
    // InternalDockerCompose.g:10300:1: rule__VolumeConnector_long__UnorderedGroup_1__0 : rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__1 )? ;
    public final void rule__VolumeConnector_long__UnorderedGroup_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10304:1: ( rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__1 )? )
            // InternalDockerCompose.g:10305:2: rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__1 )?
            {
            pushFollow(FOLLOW_46);
            rule__VolumeConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10306:2: ( rule__VolumeConnector_long__UnorderedGroup_1__1 )?
            int alt78=2;
            alt78 = dfa78.predict(input);
            switch (alt78) {
                case 1 :
                    // InternalDockerCompose.g:10306:2: rule__VolumeConnector_long__UnorderedGroup_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__UnorderedGroup_1__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__UnorderedGroup_1__0"


    // $ANTLR start "rule__VolumeConnector_long__UnorderedGroup_1__1"
    // InternalDockerCompose.g:10312:1: rule__VolumeConnector_long__UnorderedGroup_1__1 : rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__2 )? ;
    public final void rule__VolumeConnector_long__UnorderedGroup_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10316:1: ( rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__2 )? )
            // InternalDockerCompose.g:10317:2: rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__2 )?
            {
            pushFollow(FOLLOW_46);
            rule__VolumeConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10318:2: ( rule__VolumeConnector_long__UnorderedGroup_1__2 )?
            int alt79=2;
            alt79 = dfa79.predict(input);
            switch (alt79) {
                case 1 :
                    // InternalDockerCompose.g:10318:2: rule__VolumeConnector_long__UnorderedGroup_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__UnorderedGroup_1__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__UnorderedGroup_1__1"


    // $ANTLR start "rule__VolumeConnector_long__UnorderedGroup_1__2"
    // InternalDockerCompose.g:10324:1: rule__VolumeConnector_long__UnorderedGroup_1__2 : rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__3 )? ;
    public final void rule__VolumeConnector_long__UnorderedGroup_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10328:1: ( rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__3 )? )
            // InternalDockerCompose.g:10329:2: rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__3 )?
            {
            pushFollow(FOLLOW_46);
            rule__VolumeConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10330:2: ( rule__VolumeConnector_long__UnorderedGroup_1__3 )?
            int alt80=2;
            alt80 = dfa80.predict(input);
            switch (alt80) {
                case 1 :
                    // InternalDockerCompose.g:10330:2: rule__VolumeConnector_long__UnorderedGroup_1__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__UnorderedGroup_1__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__UnorderedGroup_1__2"


    // $ANTLR start "rule__VolumeConnector_long__UnorderedGroup_1__3"
    // InternalDockerCompose.g:10336:1: rule__VolumeConnector_long__UnorderedGroup_1__3 : rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__4 )? ;
    public final void rule__VolumeConnector_long__UnorderedGroup_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10340:1: ( rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__4 )? )
            // InternalDockerCompose.g:10341:2: rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__4 )?
            {
            pushFollow(FOLLOW_46);
            rule__VolumeConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10342:2: ( rule__VolumeConnector_long__UnorderedGroup_1__4 )?
            int alt81=2;
            alt81 = dfa81.predict(input);
            switch (alt81) {
                case 1 :
                    // InternalDockerCompose.g:10342:2: rule__VolumeConnector_long__UnorderedGroup_1__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__UnorderedGroup_1__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__UnorderedGroup_1__3"


    // $ANTLR start "rule__VolumeConnector_long__UnorderedGroup_1__4"
    // InternalDockerCompose.g:10348:1: rule__VolumeConnector_long__UnorderedGroup_1__4 : rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__5 )? ;
    public final void rule__VolumeConnector_long__UnorderedGroup_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10352:1: ( rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__5 )? )
            // InternalDockerCompose.g:10353:2: rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__5 )?
            {
            pushFollow(FOLLOW_46);
            rule__VolumeConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10354:2: ( rule__VolumeConnector_long__UnorderedGroup_1__5 )?
            int alt82=2;
            alt82 = dfa82.predict(input);
            switch (alt82) {
                case 1 :
                    // InternalDockerCompose.g:10354:2: rule__VolumeConnector_long__UnorderedGroup_1__5
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__UnorderedGroup_1__5();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__UnorderedGroup_1__4"


    // $ANTLR start "rule__VolumeConnector_long__UnorderedGroup_1__5"
    // InternalDockerCompose.g:10360:1: rule__VolumeConnector_long__UnorderedGroup_1__5 : rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__6 )? ;
    public final void rule__VolumeConnector_long__UnorderedGroup_1__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10364:1: ( rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__6 )? )
            // InternalDockerCompose.g:10365:2: rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__6 )?
            {
            pushFollow(FOLLOW_46);
            rule__VolumeConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10366:2: ( rule__VolumeConnector_long__UnorderedGroup_1__6 )?
            int alt83=2;
            alt83 = dfa83.predict(input);
            switch (alt83) {
                case 1 :
                    // InternalDockerCompose.g:10366:2: rule__VolumeConnector_long__UnorderedGroup_1__6
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__UnorderedGroup_1__6();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__UnorderedGroup_1__5"


    // $ANTLR start "rule__VolumeConnector_long__UnorderedGroup_1__6"
    // InternalDockerCompose.g:10372:1: rule__VolumeConnector_long__UnorderedGroup_1__6 : rule__VolumeConnector_long__UnorderedGroup_1__Impl ;
    public final void rule__VolumeConnector_long__UnorderedGroup_1__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10376:1: ( rule__VolumeConnector_long__UnorderedGroup_1__Impl )
            // InternalDockerCompose.g:10377:2: rule__VolumeConnector_long__UnorderedGroup_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__UnorderedGroup_1__6"


    // $ANTLR start "rule__ConfigConnector_long__UnorderedGroup_1"
    // InternalDockerCompose.g:10384:1: rule__ConfigConnector_long__UnorderedGroup_1 : rule__ConfigConnector_long__UnorderedGroup_1__0 {...}?;
    public final void rule__ConfigConnector_long__UnorderedGroup_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1());
        	
        try {
            // InternalDockerCompose.g:10389:1: ( rule__ConfigConnector_long__UnorderedGroup_1__0 {...}?)
            // InternalDockerCompose.g:10390:2: rule__ConfigConnector_long__UnorderedGroup_1__0 {...}?
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__UnorderedGroup_1__0();

            state._fsp--;

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "rule__ConfigConnector_long__UnorderedGroup_1", "getUnorderedGroupHelper().canLeave(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1())");
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__UnorderedGroup_1"


    // $ANTLR start "rule__ConfigConnector_long__UnorderedGroup_1__Impl"
    // InternalDockerCompose.g:10398:1: rule__ConfigConnector_long__UnorderedGroup_1__Impl : ( ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_4__0 ) ) ) ) ) ;
    public final void rule__ConfigConnector_long__UnorderedGroup_1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:10403:1: ( ( ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_4__0 ) ) ) ) ) )
            // InternalDockerCompose.g:10404:3: ( ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_4__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:10404:3: ( ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_4__0 ) ) ) ) )
            int alt84=5;
            int LA84_0 = input.LA(1);

            if ( LA84_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt84=1;
            }
            else if ( LA84_0 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt84=2;
            }
            else if ( LA84_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt84=3;
            }
            else if ( LA84_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt84=4;
            }
            else if ( LA84_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt84=5;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 84, 0, input);

                throw nvae;
            }
            switch (alt84) {
                case 1 :
                    // InternalDockerCompose.g:10405:3: ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10405:3: ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_0__0 ) ) ) )
                    // InternalDockerCompose.g:10406:4: {...}? => ( ( ( rule__ConfigConnector_long__Group_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                        throw new FailedPredicateException(input, "rule__ConfigConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 0)");
                    }
                    // InternalDockerCompose.g:10406:116: ( ( ( rule__ConfigConnector_long__Group_1_0__0 ) ) )
                    // InternalDockerCompose.g:10407:5: ( ( rule__ConfigConnector_long__Group_1_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10413:5: ( ( rule__ConfigConnector_long__Group_1_0__0 ) )
                    // InternalDockerCompose.g:10414:6: ( rule__ConfigConnector_long__Group_1_0__0 )
                    {
                     before(grammarAccess.getConfigConnector_longAccess().getGroup_1_0()); 
                    // InternalDockerCompose.g:10415:6: ( rule__ConfigConnector_long__Group_1_0__0 )
                    // InternalDockerCompose.g:10415:7: rule__ConfigConnector_long__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector_long__Group_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigConnector_longAccess().getGroup_1_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:10420:3: ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10420:3: ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_1__0 ) ) ) )
                    // InternalDockerCompose.g:10421:4: {...}? => ( ( ( rule__ConfigConnector_long__Group_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                        throw new FailedPredicateException(input, "rule__ConfigConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 1)");
                    }
                    // InternalDockerCompose.g:10421:116: ( ( ( rule__ConfigConnector_long__Group_1_1__0 ) ) )
                    // InternalDockerCompose.g:10422:5: ( ( rule__ConfigConnector_long__Group_1_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10428:5: ( ( rule__ConfigConnector_long__Group_1_1__0 ) )
                    // InternalDockerCompose.g:10429:6: ( rule__ConfigConnector_long__Group_1_1__0 )
                    {
                     before(grammarAccess.getConfigConnector_longAccess().getGroup_1_1()); 
                    // InternalDockerCompose.g:10430:6: ( rule__ConfigConnector_long__Group_1_1__0 )
                    // InternalDockerCompose.g:10430:7: rule__ConfigConnector_long__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector_long__Group_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigConnector_longAccess().getGroup_1_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:10435:3: ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10435:3: ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_2__0 ) ) ) )
                    // InternalDockerCompose.g:10436:4: {...}? => ( ( ( rule__ConfigConnector_long__Group_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                        throw new FailedPredicateException(input, "rule__ConfigConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 2)");
                    }
                    // InternalDockerCompose.g:10436:116: ( ( ( rule__ConfigConnector_long__Group_1_2__0 ) ) )
                    // InternalDockerCompose.g:10437:5: ( ( rule__ConfigConnector_long__Group_1_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10443:5: ( ( rule__ConfigConnector_long__Group_1_2__0 ) )
                    // InternalDockerCompose.g:10444:6: ( rule__ConfigConnector_long__Group_1_2__0 )
                    {
                     before(grammarAccess.getConfigConnector_longAccess().getGroup_1_2()); 
                    // InternalDockerCompose.g:10445:6: ( rule__ConfigConnector_long__Group_1_2__0 )
                    // InternalDockerCompose.g:10445:7: rule__ConfigConnector_long__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector_long__Group_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigConnector_longAccess().getGroup_1_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:10450:3: ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10450:3: ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_3__0 ) ) ) )
                    // InternalDockerCompose.g:10451:4: {...}? => ( ( ( rule__ConfigConnector_long__Group_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                        throw new FailedPredicateException(input, "rule__ConfigConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 3)");
                    }
                    // InternalDockerCompose.g:10451:116: ( ( ( rule__ConfigConnector_long__Group_1_3__0 ) ) )
                    // InternalDockerCompose.g:10452:5: ( ( rule__ConfigConnector_long__Group_1_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10458:5: ( ( rule__ConfigConnector_long__Group_1_3__0 ) )
                    // InternalDockerCompose.g:10459:6: ( rule__ConfigConnector_long__Group_1_3__0 )
                    {
                     before(grammarAccess.getConfigConnector_longAccess().getGroup_1_3()); 
                    // InternalDockerCompose.g:10460:6: ( rule__ConfigConnector_long__Group_1_3__0 )
                    // InternalDockerCompose.g:10460:7: rule__ConfigConnector_long__Group_1_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector_long__Group_1_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigConnector_longAccess().getGroup_1_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:10465:3: ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10465:3: ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_4__0 ) ) ) )
                    // InternalDockerCompose.g:10466:4: {...}? => ( ( ( rule__ConfigConnector_long__Group_1_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                        throw new FailedPredicateException(input, "rule__ConfigConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 4)");
                    }
                    // InternalDockerCompose.g:10466:116: ( ( ( rule__ConfigConnector_long__Group_1_4__0 ) ) )
                    // InternalDockerCompose.g:10467:5: ( ( rule__ConfigConnector_long__Group_1_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10473:5: ( ( rule__ConfigConnector_long__Group_1_4__0 ) )
                    // InternalDockerCompose.g:10474:6: ( rule__ConfigConnector_long__Group_1_4__0 )
                    {
                     before(grammarAccess.getConfigConnector_longAccess().getGroup_1_4()); 
                    // InternalDockerCompose.g:10475:6: ( rule__ConfigConnector_long__Group_1_4__0 )
                    // InternalDockerCompose.g:10475:7: rule__ConfigConnector_long__Group_1_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector_long__Group_1_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigConnector_longAccess().getGroup_1_4()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__UnorderedGroup_1__Impl"


    // $ANTLR start "rule__ConfigConnector_long__UnorderedGroup_1__0"
    // InternalDockerCompose.g:10488:1: rule__ConfigConnector_long__UnorderedGroup_1__0 : rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__1 )? ;
    public final void rule__ConfigConnector_long__UnorderedGroup_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10492:1: ( rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__1 )? )
            // InternalDockerCompose.g:10493:2: rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__1 )?
            {
            pushFollow(FOLLOW_47);
            rule__ConfigConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10494:2: ( rule__ConfigConnector_long__UnorderedGroup_1__1 )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( LA85_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt85=1;
            }
            else if ( LA85_0 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt85=1;
            }
            else if ( LA85_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt85=1;
            }
            else if ( LA85_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt85=1;
            }
            else if ( LA85_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalDockerCompose.g:10494:2: rule__ConfigConnector_long__UnorderedGroup_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector_long__UnorderedGroup_1__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__UnorderedGroup_1__0"


    // $ANTLR start "rule__ConfigConnector_long__UnorderedGroup_1__1"
    // InternalDockerCompose.g:10500:1: rule__ConfigConnector_long__UnorderedGroup_1__1 : rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__2 )? ;
    public final void rule__ConfigConnector_long__UnorderedGroup_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10504:1: ( rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__2 )? )
            // InternalDockerCompose.g:10505:2: rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__2 )?
            {
            pushFollow(FOLLOW_47);
            rule__ConfigConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10506:2: ( rule__ConfigConnector_long__UnorderedGroup_1__2 )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( LA86_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt86=1;
            }
            else if ( LA86_0 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt86=1;
            }
            else if ( LA86_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt86=1;
            }
            else if ( LA86_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt86=1;
            }
            else if ( LA86_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // InternalDockerCompose.g:10506:2: rule__ConfigConnector_long__UnorderedGroup_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector_long__UnorderedGroup_1__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__UnorderedGroup_1__1"


    // $ANTLR start "rule__ConfigConnector_long__UnorderedGroup_1__2"
    // InternalDockerCompose.g:10512:1: rule__ConfigConnector_long__UnorderedGroup_1__2 : rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__3 )? ;
    public final void rule__ConfigConnector_long__UnorderedGroup_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10516:1: ( rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__3 )? )
            // InternalDockerCompose.g:10517:2: rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__3 )?
            {
            pushFollow(FOLLOW_47);
            rule__ConfigConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10518:2: ( rule__ConfigConnector_long__UnorderedGroup_1__3 )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( LA87_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt87=1;
            }
            else if ( LA87_0 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt87=1;
            }
            else if ( LA87_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt87=1;
            }
            else if ( LA87_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt87=1;
            }
            else if ( LA87_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalDockerCompose.g:10518:2: rule__ConfigConnector_long__UnorderedGroup_1__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector_long__UnorderedGroup_1__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__UnorderedGroup_1__2"


    // $ANTLR start "rule__ConfigConnector_long__UnorderedGroup_1__3"
    // InternalDockerCompose.g:10524:1: rule__ConfigConnector_long__UnorderedGroup_1__3 : rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__4 )? ;
    public final void rule__ConfigConnector_long__UnorderedGroup_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10528:1: ( rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__4 )? )
            // InternalDockerCompose.g:10529:2: rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__4 )?
            {
            pushFollow(FOLLOW_47);
            rule__ConfigConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10530:2: ( rule__ConfigConnector_long__UnorderedGroup_1__4 )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( LA88_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt88=1;
            }
            else if ( LA88_0 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt88=1;
            }
            else if ( LA88_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt88=1;
            }
            else if ( LA88_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt88=1;
            }
            else if ( LA88_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // InternalDockerCompose.g:10530:2: rule__ConfigConnector_long__UnorderedGroup_1__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector_long__UnorderedGroup_1__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__UnorderedGroup_1__3"


    // $ANTLR start "rule__ConfigConnector_long__UnorderedGroup_1__4"
    // InternalDockerCompose.g:10536:1: rule__ConfigConnector_long__UnorderedGroup_1__4 : rule__ConfigConnector_long__UnorderedGroup_1__Impl ;
    public final void rule__ConfigConnector_long__UnorderedGroup_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10540:1: ( rule__ConfigConnector_long__UnorderedGroup_1__Impl )
            // InternalDockerCompose.g:10541:2: rule__ConfigConnector_long__UnorderedGroup_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__UnorderedGroup_1__4"


    // $ANTLR start "rule__SecretConnector_long__UnorderedGroup_1"
    // InternalDockerCompose.g:10548:1: rule__SecretConnector_long__UnorderedGroup_1 : rule__SecretConnector_long__UnorderedGroup_1__0 {...}?;
    public final void rule__SecretConnector_long__UnorderedGroup_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1());
        	
        try {
            // InternalDockerCompose.g:10553:1: ( rule__SecretConnector_long__UnorderedGroup_1__0 {...}?)
            // InternalDockerCompose.g:10554:2: rule__SecretConnector_long__UnorderedGroup_1__0 {...}?
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__UnorderedGroup_1__0();

            state._fsp--;

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "rule__SecretConnector_long__UnorderedGroup_1", "getUnorderedGroupHelper().canLeave(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1())");
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__UnorderedGroup_1"


    // $ANTLR start "rule__SecretConnector_long__UnorderedGroup_1__Impl"
    // InternalDockerCompose.g:10562:1: rule__SecretConnector_long__UnorderedGroup_1__Impl : ( ({...}? => ( ( ( rule__SecretConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_4__0 ) ) ) ) ) ;
    public final void rule__SecretConnector_long__UnorderedGroup_1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:10567:1: ( ( ({...}? => ( ( ( rule__SecretConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_4__0 ) ) ) ) ) )
            // InternalDockerCompose.g:10568:3: ( ({...}? => ( ( ( rule__SecretConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_4__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:10568:3: ( ({...}? => ( ( ( rule__SecretConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_4__0 ) ) ) ) )
            int alt89=5;
            int LA89_0 = input.LA(1);

            if ( LA89_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt89=1;
            }
            else if ( LA89_0 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt89=2;
            }
            else if ( LA89_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt89=3;
            }
            else if ( LA89_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt89=4;
            }
            else if ( LA89_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt89=5;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 89, 0, input);

                throw nvae;
            }
            switch (alt89) {
                case 1 :
                    // InternalDockerCompose.g:10569:3: ({...}? => ( ( ( rule__SecretConnector_long__Group_1_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10569:3: ({...}? => ( ( ( rule__SecretConnector_long__Group_1_0__0 ) ) ) )
                    // InternalDockerCompose.g:10570:4: {...}? => ( ( ( rule__SecretConnector_long__Group_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                        throw new FailedPredicateException(input, "rule__SecretConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 0)");
                    }
                    // InternalDockerCompose.g:10570:116: ( ( ( rule__SecretConnector_long__Group_1_0__0 ) ) )
                    // InternalDockerCompose.g:10571:5: ( ( rule__SecretConnector_long__Group_1_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10577:5: ( ( rule__SecretConnector_long__Group_1_0__0 ) )
                    // InternalDockerCompose.g:10578:6: ( rule__SecretConnector_long__Group_1_0__0 )
                    {
                     before(grammarAccess.getSecretConnector_longAccess().getGroup_1_0()); 
                    // InternalDockerCompose.g:10579:6: ( rule__SecretConnector_long__Group_1_0__0 )
                    // InternalDockerCompose.g:10579:7: rule__SecretConnector_long__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector_long__Group_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretConnector_longAccess().getGroup_1_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:10584:3: ({...}? => ( ( ( rule__SecretConnector_long__Group_1_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10584:3: ({...}? => ( ( ( rule__SecretConnector_long__Group_1_1__0 ) ) ) )
                    // InternalDockerCompose.g:10585:4: {...}? => ( ( ( rule__SecretConnector_long__Group_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                        throw new FailedPredicateException(input, "rule__SecretConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 1)");
                    }
                    // InternalDockerCompose.g:10585:116: ( ( ( rule__SecretConnector_long__Group_1_1__0 ) ) )
                    // InternalDockerCompose.g:10586:5: ( ( rule__SecretConnector_long__Group_1_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10592:5: ( ( rule__SecretConnector_long__Group_1_1__0 ) )
                    // InternalDockerCompose.g:10593:6: ( rule__SecretConnector_long__Group_1_1__0 )
                    {
                     before(grammarAccess.getSecretConnector_longAccess().getGroup_1_1()); 
                    // InternalDockerCompose.g:10594:6: ( rule__SecretConnector_long__Group_1_1__0 )
                    // InternalDockerCompose.g:10594:7: rule__SecretConnector_long__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector_long__Group_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretConnector_longAccess().getGroup_1_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:10599:3: ({...}? => ( ( ( rule__SecretConnector_long__Group_1_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10599:3: ({...}? => ( ( ( rule__SecretConnector_long__Group_1_2__0 ) ) ) )
                    // InternalDockerCompose.g:10600:4: {...}? => ( ( ( rule__SecretConnector_long__Group_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                        throw new FailedPredicateException(input, "rule__SecretConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 2)");
                    }
                    // InternalDockerCompose.g:10600:116: ( ( ( rule__SecretConnector_long__Group_1_2__0 ) ) )
                    // InternalDockerCompose.g:10601:5: ( ( rule__SecretConnector_long__Group_1_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10607:5: ( ( rule__SecretConnector_long__Group_1_2__0 ) )
                    // InternalDockerCompose.g:10608:6: ( rule__SecretConnector_long__Group_1_2__0 )
                    {
                     before(grammarAccess.getSecretConnector_longAccess().getGroup_1_2()); 
                    // InternalDockerCompose.g:10609:6: ( rule__SecretConnector_long__Group_1_2__0 )
                    // InternalDockerCompose.g:10609:7: rule__SecretConnector_long__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector_long__Group_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretConnector_longAccess().getGroup_1_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:10614:3: ({...}? => ( ( ( rule__SecretConnector_long__Group_1_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10614:3: ({...}? => ( ( ( rule__SecretConnector_long__Group_1_3__0 ) ) ) )
                    // InternalDockerCompose.g:10615:4: {...}? => ( ( ( rule__SecretConnector_long__Group_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                        throw new FailedPredicateException(input, "rule__SecretConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 3)");
                    }
                    // InternalDockerCompose.g:10615:116: ( ( ( rule__SecretConnector_long__Group_1_3__0 ) ) )
                    // InternalDockerCompose.g:10616:5: ( ( rule__SecretConnector_long__Group_1_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10622:5: ( ( rule__SecretConnector_long__Group_1_3__0 ) )
                    // InternalDockerCompose.g:10623:6: ( rule__SecretConnector_long__Group_1_3__0 )
                    {
                     before(grammarAccess.getSecretConnector_longAccess().getGroup_1_3()); 
                    // InternalDockerCompose.g:10624:6: ( rule__SecretConnector_long__Group_1_3__0 )
                    // InternalDockerCompose.g:10624:7: rule__SecretConnector_long__Group_1_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector_long__Group_1_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretConnector_longAccess().getGroup_1_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:10629:3: ({...}? => ( ( ( rule__SecretConnector_long__Group_1_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10629:3: ({...}? => ( ( ( rule__SecretConnector_long__Group_1_4__0 ) ) ) )
                    // InternalDockerCompose.g:10630:4: {...}? => ( ( ( rule__SecretConnector_long__Group_1_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                        throw new FailedPredicateException(input, "rule__SecretConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 4)");
                    }
                    // InternalDockerCompose.g:10630:116: ( ( ( rule__SecretConnector_long__Group_1_4__0 ) ) )
                    // InternalDockerCompose.g:10631:5: ( ( rule__SecretConnector_long__Group_1_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10637:5: ( ( rule__SecretConnector_long__Group_1_4__0 ) )
                    // InternalDockerCompose.g:10638:6: ( rule__SecretConnector_long__Group_1_4__0 )
                    {
                     before(grammarAccess.getSecretConnector_longAccess().getGroup_1_4()); 
                    // InternalDockerCompose.g:10639:6: ( rule__SecretConnector_long__Group_1_4__0 )
                    // InternalDockerCompose.g:10639:7: rule__SecretConnector_long__Group_1_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector_long__Group_1_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretConnector_longAccess().getGroup_1_4()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__UnorderedGroup_1__Impl"


    // $ANTLR start "rule__SecretConnector_long__UnorderedGroup_1__0"
    // InternalDockerCompose.g:10652:1: rule__SecretConnector_long__UnorderedGroup_1__0 : rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__1 )? ;
    public final void rule__SecretConnector_long__UnorderedGroup_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10656:1: ( rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__1 )? )
            // InternalDockerCompose.g:10657:2: rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__1 )?
            {
            pushFollow(FOLLOW_47);
            rule__SecretConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10658:2: ( rule__SecretConnector_long__UnorderedGroup_1__1 )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( LA90_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt90=1;
            }
            else if ( LA90_0 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt90=1;
            }
            else if ( LA90_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt90=1;
            }
            else if ( LA90_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt90=1;
            }
            else if ( LA90_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalDockerCompose.g:10658:2: rule__SecretConnector_long__UnorderedGroup_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector_long__UnorderedGroup_1__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__UnorderedGroup_1__0"


    // $ANTLR start "rule__SecretConnector_long__UnorderedGroup_1__1"
    // InternalDockerCompose.g:10664:1: rule__SecretConnector_long__UnorderedGroup_1__1 : rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__2 )? ;
    public final void rule__SecretConnector_long__UnorderedGroup_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10668:1: ( rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__2 )? )
            // InternalDockerCompose.g:10669:2: rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__2 )?
            {
            pushFollow(FOLLOW_47);
            rule__SecretConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10670:2: ( rule__SecretConnector_long__UnorderedGroup_1__2 )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( LA91_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt91=1;
            }
            else if ( LA91_0 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt91=1;
            }
            else if ( LA91_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt91=1;
            }
            else if ( LA91_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt91=1;
            }
            else if ( LA91_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // InternalDockerCompose.g:10670:2: rule__SecretConnector_long__UnorderedGroup_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector_long__UnorderedGroup_1__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__UnorderedGroup_1__1"


    // $ANTLR start "rule__SecretConnector_long__UnorderedGroup_1__2"
    // InternalDockerCompose.g:10676:1: rule__SecretConnector_long__UnorderedGroup_1__2 : rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__3 )? ;
    public final void rule__SecretConnector_long__UnorderedGroup_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10680:1: ( rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__3 )? )
            // InternalDockerCompose.g:10681:2: rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__3 )?
            {
            pushFollow(FOLLOW_47);
            rule__SecretConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10682:2: ( rule__SecretConnector_long__UnorderedGroup_1__3 )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( LA92_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt92=1;
            }
            else if ( LA92_0 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt92=1;
            }
            else if ( LA92_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt92=1;
            }
            else if ( LA92_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt92=1;
            }
            else if ( LA92_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // InternalDockerCompose.g:10682:2: rule__SecretConnector_long__UnorderedGroup_1__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector_long__UnorderedGroup_1__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__UnorderedGroup_1__2"


    // $ANTLR start "rule__SecretConnector_long__UnorderedGroup_1__3"
    // InternalDockerCompose.g:10688:1: rule__SecretConnector_long__UnorderedGroup_1__3 : rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__4 )? ;
    public final void rule__SecretConnector_long__UnorderedGroup_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10692:1: ( rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__4 )? )
            // InternalDockerCompose.g:10693:2: rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__4 )?
            {
            pushFollow(FOLLOW_47);
            rule__SecretConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10694:2: ( rule__SecretConnector_long__UnorderedGroup_1__4 )?
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( LA93_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt93=1;
            }
            else if ( LA93_0 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt93=1;
            }
            else if ( LA93_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt93=1;
            }
            else if ( LA93_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt93=1;
            }
            else if ( LA93_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt93=1;
            }
            switch (alt93) {
                case 1 :
                    // InternalDockerCompose.g:10694:2: rule__SecretConnector_long__UnorderedGroup_1__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector_long__UnorderedGroup_1__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__UnorderedGroup_1__3"


    // $ANTLR start "rule__SecretConnector_long__UnorderedGroup_1__4"
    // InternalDockerCompose.g:10700:1: rule__SecretConnector_long__UnorderedGroup_1__4 : rule__SecretConnector_long__UnorderedGroup_1__Impl ;
    public final void rule__SecretConnector_long__UnorderedGroup_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10704:1: ( rule__SecretConnector_long__UnorderedGroup_1__Impl )
            // InternalDockerCompose.g:10705:2: rule__SecretConnector_long__UnorderedGroup_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__UnorderedGroup_1__4"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1"
    // InternalDockerCompose.g:10712:1: rule__Network__UnorderedGroup_3_1 : ( rule__Network__UnorderedGroup_3_1__0 )? ;
    public final void rule__Network__UnorderedGroup_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1());
        	
        try {
            // InternalDockerCompose.g:10717:1: ( ( rule__Network__UnorderedGroup_3_1__0 )? )
            // InternalDockerCompose.g:10718:2: ( rule__Network__UnorderedGroup_3_1__0 )?
            {
            // InternalDockerCompose.g:10718:2: ( rule__Network__UnorderedGroup_3_1__0 )?
            int alt94=2;
            alt94 = dfa94.predict(input);
            switch (alt94) {
                case 1 :
                    // InternalDockerCompose.g:10718:2: rule__Network__UnorderedGroup_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__Impl"
    // InternalDockerCompose.g:10726:1: rule__Network__UnorderedGroup_3_1__Impl : ( ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) ) ) ;
    public final void rule__Network__UnorderedGroup_3_1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:10731:1: ( ( ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) ) ) )
            // InternalDockerCompose.g:10732:3: ( ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:10732:3: ( ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) ) )
            int alt95=9;
            alt95 = dfa95.predict(input);
            switch (alt95) {
                case 1 :
                    // InternalDockerCompose.g:10733:3: ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10733:3: ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) )
                    // InternalDockerCompose.g:10734:4: {...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0)");
                    }
                    // InternalDockerCompose.g:10734:105: ( ( ( rule__Network__Group_3_1_0__0 ) ) )
                    // InternalDockerCompose.g:10735:5: ( ( rule__Network__Group_3_1_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10741:5: ( ( rule__Network__Group_3_1_0__0 ) )
                    // InternalDockerCompose.g:10742:6: ( rule__Network__Group_3_1_0__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_0()); 
                    // InternalDockerCompose.g:10743:6: ( rule__Network__Group_3_1_0__0 )
                    // InternalDockerCompose.g:10743:7: rule__Network__Group_3_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:10748:3: ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10748:3: ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) )
                    // InternalDockerCompose.g:10749:4: {...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1)");
                    }
                    // InternalDockerCompose.g:10749:105: ( ( ( rule__Network__Group_3_1_1__0 ) ) )
                    // InternalDockerCompose.g:10750:5: ( ( rule__Network__Group_3_1_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10756:5: ( ( rule__Network__Group_3_1_1__0 ) )
                    // InternalDockerCompose.g:10757:6: ( rule__Network__Group_3_1_1__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_1()); 
                    // InternalDockerCompose.g:10758:6: ( rule__Network__Group_3_1_1__0 )
                    // InternalDockerCompose.g:10758:7: rule__Network__Group_3_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:10763:3: ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10763:3: ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) )
                    // InternalDockerCompose.g:10764:4: {...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2)");
                    }
                    // InternalDockerCompose.g:10764:105: ( ( ( rule__Network__Group_3_1_2__0 ) ) )
                    // InternalDockerCompose.g:10765:5: ( ( rule__Network__Group_3_1_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10771:5: ( ( rule__Network__Group_3_1_2__0 ) )
                    // InternalDockerCompose.g:10772:6: ( rule__Network__Group_3_1_2__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_2()); 
                    // InternalDockerCompose.g:10773:6: ( rule__Network__Group_3_1_2__0 )
                    // InternalDockerCompose.g:10773:7: rule__Network__Group_3_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:10778:3: ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10778:3: ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) )
                    // InternalDockerCompose.g:10779:4: {...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3)");
                    }
                    // InternalDockerCompose.g:10779:105: ( ( ( rule__Network__Group_3_1_3__0 ) ) )
                    // InternalDockerCompose.g:10780:5: ( ( rule__Network__Group_3_1_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10786:5: ( ( rule__Network__Group_3_1_3__0 ) )
                    // InternalDockerCompose.g:10787:6: ( rule__Network__Group_3_1_3__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_3()); 
                    // InternalDockerCompose.g:10788:6: ( rule__Network__Group_3_1_3__0 )
                    // InternalDockerCompose.g:10788:7: rule__Network__Group_3_1_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:10793:3: ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10793:3: ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) )
                    // InternalDockerCompose.g:10794:4: {...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4)");
                    }
                    // InternalDockerCompose.g:10794:105: ( ( ( rule__Network__Group_3_1_4__0 ) ) )
                    // InternalDockerCompose.g:10795:5: ( ( rule__Network__Group_3_1_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10801:5: ( ( rule__Network__Group_3_1_4__0 ) )
                    // InternalDockerCompose.g:10802:6: ( rule__Network__Group_3_1_4__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_4()); 
                    // InternalDockerCompose.g:10803:6: ( rule__Network__Group_3_1_4__0 )
                    // InternalDockerCompose.g:10803:7: rule__Network__Group_3_1_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_4()); 

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDockerCompose.g:10808:3: ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10808:3: ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) )
                    // InternalDockerCompose.g:10809:4: {...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5)");
                    }
                    // InternalDockerCompose.g:10809:105: ( ( ( rule__Network__Group_3_1_5__0 ) ) )
                    // InternalDockerCompose.g:10810:5: ( ( rule__Network__Group_3_1_5__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10816:5: ( ( rule__Network__Group_3_1_5__0 ) )
                    // InternalDockerCompose.g:10817:6: ( rule__Network__Group_3_1_5__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_5()); 
                    // InternalDockerCompose.g:10818:6: ( rule__Network__Group_3_1_5__0 )
                    // InternalDockerCompose.g:10818:7: rule__Network__Group_3_1_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_5__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_5()); 

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalDockerCompose.g:10823:3: ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10823:3: ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) )
                    // InternalDockerCompose.g:10824:4: {...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6)");
                    }
                    // InternalDockerCompose.g:10824:105: ( ( ( rule__Network__Group_3_1_6__0 ) ) )
                    // InternalDockerCompose.g:10825:5: ( ( rule__Network__Group_3_1_6__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10831:5: ( ( rule__Network__Group_3_1_6__0 ) )
                    // InternalDockerCompose.g:10832:6: ( rule__Network__Group_3_1_6__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_6()); 
                    // InternalDockerCompose.g:10833:6: ( rule__Network__Group_3_1_6__0 )
                    // InternalDockerCompose.g:10833:7: rule__Network__Group_3_1_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_6__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_6()); 

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalDockerCompose.g:10838:3: ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10838:3: ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) )
                    // InternalDockerCompose.g:10839:4: {...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7)");
                    }
                    // InternalDockerCompose.g:10839:105: ( ( ( rule__Network__Group_3_1_7__0 ) ) )
                    // InternalDockerCompose.g:10840:5: ( ( rule__Network__Group_3_1_7__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10846:5: ( ( rule__Network__Group_3_1_7__0 ) )
                    // InternalDockerCompose.g:10847:6: ( rule__Network__Group_3_1_7__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_7()); 
                    // InternalDockerCompose.g:10848:6: ( rule__Network__Group_3_1_7__0 )
                    // InternalDockerCompose.g:10848:7: rule__Network__Group_3_1_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_7__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_7()); 

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalDockerCompose.g:10853:3: ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10853:3: ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) )
                    // InternalDockerCompose.g:10854:4: {...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8)");
                    }
                    // InternalDockerCompose.g:10854:105: ( ( ( rule__Network__Group_3_1_8__0 ) ) )
                    // InternalDockerCompose.g:10855:5: ( ( rule__Network__Group_3_1_8__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10861:5: ( ( rule__Network__Group_3_1_8__0 ) )
                    // InternalDockerCompose.g:10862:6: ( rule__Network__Group_3_1_8__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_8()); 
                    // InternalDockerCompose.g:10863:6: ( rule__Network__Group_3_1_8__0 )
                    // InternalDockerCompose.g:10863:7: rule__Network__Group_3_1_8__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_8__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_8()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__Impl"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__0"
    // InternalDockerCompose.g:10876:1: rule__Network__UnorderedGroup_3_1__0 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__1 )? ;
    public final void rule__Network__UnorderedGroup_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10880:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__1 )? )
            // InternalDockerCompose.g:10881:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__1 )?
            {
            pushFollow(FOLLOW_48);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10882:2: ( rule__Network__UnorderedGroup_3_1__1 )?
            int alt96=2;
            alt96 = dfa96.predict(input);
            switch (alt96) {
                case 1 :
                    // InternalDockerCompose.g:10882:2: rule__Network__UnorderedGroup_3_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__0"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__1"
    // InternalDockerCompose.g:10888:1: rule__Network__UnorderedGroup_3_1__1 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__2 )? ;
    public final void rule__Network__UnorderedGroup_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10892:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__2 )? )
            // InternalDockerCompose.g:10893:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__2 )?
            {
            pushFollow(FOLLOW_48);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10894:2: ( rule__Network__UnorderedGroup_3_1__2 )?
            int alt97=2;
            alt97 = dfa97.predict(input);
            switch (alt97) {
                case 1 :
                    // InternalDockerCompose.g:10894:2: rule__Network__UnorderedGroup_3_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__1"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__2"
    // InternalDockerCompose.g:10900:1: rule__Network__UnorderedGroup_3_1__2 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__3 )? ;
    public final void rule__Network__UnorderedGroup_3_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10904:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__3 )? )
            // InternalDockerCompose.g:10905:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__3 )?
            {
            pushFollow(FOLLOW_48);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10906:2: ( rule__Network__UnorderedGroup_3_1__3 )?
            int alt98=2;
            alt98 = dfa98.predict(input);
            switch (alt98) {
                case 1 :
                    // InternalDockerCompose.g:10906:2: rule__Network__UnorderedGroup_3_1__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__2"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__3"
    // InternalDockerCompose.g:10912:1: rule__Network__UnorderedGroup_3_1__3 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__4 )? ;
    public final void rule__Network__UnorderedGroup_3_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10916:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__4 )? )
            // InternalDockerCompose.g:10917:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__4 )?
            {
            pushFollow(FOLLOW_48);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10918:2: ( rule__Network__UnorderedGroup_3_1__4 )?
            int alt99=2;
            alt99 = dfa99.predict(input);
            switch (alt99) {
                case 1 :
                    // InternalDockerCompose.g:10918:2: rule__Network__UnorderedGroup_3_1__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__3"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__4"
    // InternalDockerCompose.g:10924:1: rule__Network__UnorderedGroup_3_1__4 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__5 )? ;
    public final void rule__Network__UnorderedGroup_3_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10928:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__5 )? )
            // InternalDockerCompose.g:10929:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__5 )?
            {
            pushFollow(FOLLOW_48);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10930:2: ( rule__Network__UnorderedGroup_3_1__5 )?
            int alt100=2;
            alt100 = dfa100.predict(input);
            switch (alt100) {
                case 1 :
                    // InternalDockerCompose.g:10930:2: rule__Network__UnorderedGroup_3_1__5
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__5();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__4"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__5"
    // InternalDockerCompose.g:10936:1: rule__Network__UnorderedGroup_3_1__5 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__6 )? ;
    public final void rule__Network__UnorderedGroup_3_1__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10940:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__6 )? )
            // InternalDockerCompose.g:10941:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__6 )?
            {
            pushFollow(FOLLOW_48);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10942:2: ( rule__Network__UnorderedGroup_3_1__6 )?
            int alt101=2;
            alt101 = dfa101.predict(input);
            switch (alt101) {
                case 1 :
                    // InternalDockerCompose.g:10942:2: rule__Network__UnorderedGroup_3_1__6
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__6();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__5"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__6"
    // InternalDockerCompose.g:10948:1: rule__Network__UnorderedGroup_3_1__6 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__7 )? ;
    public final void rule__Network__UnorderedGroup_3_1__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10952:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__7 )? )
            // InternalDockerCompose.g:10953:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__7 )?
            {
            pushFollow(FOLLOW_48);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10954:2: ( rule__Network__UnorderedGroup_3_1__7 )?
            int alt102=2;
            alt102 = dfa102.predict(input);
            switch (alt102) {
                case 1 :
                    // InternalDockerCompose.g:10954:2: rule__Network__UnorderedGroup_3_1__7
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__7();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__6"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__7"
    // InternalDockerCompose.g:10960:1: rule__Network__UnorderedGroup_3_1__7 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__8 )? ;
    public final void rule__Network__UnorderedGroup_3_1__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10964:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__8 )? )
            // InternalDockerCompose.g:10965:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__8 )?
            {
            pushFollow(FOLLOW_48);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10966:2: ( rule__Network__UnorderedGroup_3_1__8 )?
            int alt103=2;
            alt103 = dfa103.predict(input);
            switch (alt103) {
                case 1 :
                    // InternalDockerCompose.g:10966:2: rule__Network__UnorderedGroup_3_1__8
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__8();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__7"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__8"
    // InternalDockerCompose.g:10972:1: rule__Network__UnorderedGroup_3_1__8 : rule__Network__UnorderedGroup_3_1__Impl ;
    public final void rule__Network__UnorderedGroup_3_1__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10976:1: ( rule__Network__UnorderedGroup_3_1__Impl )
            // InternalDockerCompose.g:10977:2: rule__Network__UnorderedGroup_3_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__8"


    // $ANTLR start "rule__Volume__UnorderedGroup_3"
    // InternalDockerCompose.g:10984:1: rule__Volume__UnorderedGroup_3 : ( rule__Volume__UnorderedGroup_3__0 )? ;
    public final void rule__Volume__UnorderedGroup_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getVolumeAccess().getUnorderedGroup_3());
        	
        try {
            // InternalDockerCompose.g:10989:1: ( ( rule__Volume__UnorderedGroup_3__0 )? )
            // InternalDockerCompose.g:10990:2: ( rule__Volume__UnorderedGroup_3__0 )?
            {
            // InternalDockerCompose.g:10990:2: ( rule__Volume__UnorderedGroup_3__0 )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( LA104_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                alt104=1;
            }
            else if ( LA104_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                alt104=1;
            }
            else if ( LA104_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                alt104=1;
            }
            else if ( LA104_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                alt104=1;
            }
            else if ( LA104_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalDockerCompose.g:10990:2: rule__Volume__UnorderedGroup_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__UnorderedGroup_3__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getVolumeAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3"


    // $ANTLR start "rule__Volume__UnorderedGroup_3__Impl"
    // InternalDockerCompose.g:10998:1: rule__Volume__UnorderedGroup_3__Impl : ( ({...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) ) ) ) ;
    public final void rule__Volume__UnorderedGroup_3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:11003:1: ( ( ({...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) ) ) ) )
            // InternalDockerCompose.g:11004:3: ( ({...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:11004:3: ( ({...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) ) ) )
            int alt105=5;
            int LA105_0 = input.LA(1);

            if ( LA105_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                alt105=1;
            }
            else if ( LA105_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                alt105=2;
            }
            else if ( LA105_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                alt105=3;
            }
            else if ( LA105_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                alt105=4;
            }
            else if ( LA105_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                alt105=5;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 105, 0, input);

                throw nvae;
            }
            switch (alt105) {
                case 1 :
                    // InternalDockerCompose.g:11005:3: ({...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11005:3: ({...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) ) )
                    // InternalDockerCompose.g:11006:4: {...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                        throw new FailedPredicateException(input, "rule__Volume__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0)");
                    }
                    // InternalDockerCompose.g:11006:102: ( ( ( rule__Volume__Group_3_0__0 ) ) )
                    // InternalDockerCompose.g:11007:5: ( ( rule__Volume__Group_3_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11013:5: ( ( rule__Volume__Group_3_0__0 ) )
                    // InternalDockerCompose.g:11014:6: ( rule__Volume__Group_3_0__0 )
                    {
                     before(grammarAccess.getVolumeAccess().getGroup_3_0()); 
                    // InternalDockerCompose.g:11015:6: ( rule__Volume__Group_3_0__0 )
                    // InternalDockerCompose.g:11015:7: rule__Volume__Group_3_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__Group_3_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeAccess().getGroup_3_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:11020:3: ({...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11020:3: ({...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) ) )
                    // InternalDockerCompose.g:11021:4: {...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                        throw new FailedPredicateException(input, "rule__Volume__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1)");
                    }
                    // InternalDockerCompose.g:11021:102: ( ( ( rule__Volume__Group_3_1__0 ) ) )
                    // InternalDockerCompose.g:11022:5: ( ( rule__Volume__Group_3_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11028:5: ( ( rule__Volume__Group_3_1__0 ) )
                    // InternalDockerCompose.g:11029:6: ( rule__Volume__Group_3_1__0 )
                    {
                     before(grammarAccess.getVolumeAccess().getGroup_3_1()); 
                    // InternalDockerCompose.g:11030:6: ( rule__Volume__Group_3_1__0 )
                    // InternalDockerCompose.g:11030:7: rule__Volume__Group_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__Group_3_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeAccess().getGroup_3_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:11035:3: ({...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11035:3: ({...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) ) )
                    // InternalDockerCompose.g:11036:4: {...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                        throw new FailedPredicateException(input, "rule__Volume__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2)");
                    }
                    // InternalDockerCompose.g:11036:102: ( ( ( rule__Volume__Group_3_2__0 ) ) )
                    // InternalDockerCompose.g:11037:5: ( ( rule__Volume__Group_3_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11043:5: ( ( rule__Volume__Group_3_2__0 ) )
                    // InternalDockerCompose.g:11044:6: ( rule__Volume__Group_3_2__0 )
                    {
                     before(grammarAccess.getVolumeAccess().getGroup_3_2()); 
                    // InternalDockerCompose.g:11045:6: ( rule__Volume__Group_3_2__0 )
                    // InternalDockerCompose.g:11045:7: rule__Volume__Group_3_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__Group_3_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeAccess().getGroup_3_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:11050:3: ({...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11050:3: ({...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) ) )
                    // InternalDockerCompose.g:11051:4: {...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                        throw new FailedPredicateException(input, "rule__Volume__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3)");
                    }
                    // InternalDockerCompose.g:11051:102: ( ( ( rule__Volume__Group_3_3__0 ) ) )
                    // InternalDockerCompose.g:11052:5: ( ( rule__Volume__Group_3_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11058:5: ( ( rule__Volume__Group_3_3__0 ) )
                    // InternalDockerCompose.g:11059:6: ( rule__Volume__Group_3_3__0 )
                    {
                     before(grammarAccess.getVolumeAccess().getGroup_3_3()); 
                    // InternalDockerCompose.g:11060:6: ( rule__Volume__Group_3_3__0 )
                    // InternalDockerCompose.g:11060:7: rule__Volume__Group_3_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__Group_3_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeAccess().getGroup_3_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:11065:3: ({...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11065:3: ({...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) ) )
                    // InternalDockerCompose.g:11066:4: {...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                        throw new FailedPredicateException(input, "rule__Volume__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4)");
                    }
                    // InternalDockerCompose.g:11066:102: ( ( ( rule__Volume__Group_3_4__0 ) ) )
                    // InternalDockerCompose.g:11067:5: ( ( rule__Volume__Group_3_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11073:5: ( ( rule__Volume__Group_3_4__0 ) )
                    // InternalDockerCompose.g:11074:6: ( rule__Volume__Group_3_4__0 )
                    {
                     before(grammarAccess.getVolumeAccess().getGroup_3_4()); 
                    // InternalDockerCompose.g:11075:6: ( rule__Volume__Group_3_4__0 )
                    // InternalDockerCompose.g:11075:7: rule__Volume__Group_3_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__Group_3_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeAccess().getGroup_3_4()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVolumeAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3__Impl"


    // $ANTLR start "rule__Volume__UnorderedGroup_3__0"
    // InternalDockerCompose.g:11088:1: rule__Volume__UnorderedGroup_3__0 : rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__1 )? ;
    public final void rule__Volume__UnorderedGroup_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11092:1: ( rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__1 )? )
            // InternalDockerCompose.g:11093:2: rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__1 )?
            {
            pushFollow(FOLLOW_49);
            rule__Volume__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11094:2: ( rule__Volume__UnorderedGroup_3__1 )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( LA106_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                alt106=1;
            }
            else if ( LA106_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                alt106=1;
            }
            else if ( LA106_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                alt106=1;
            }
            else if ( LA106_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                alt106=1;
            }
            else if ( LA106_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // InternalDockerCompose.g:11094:2: rule__Volume__UnorderedGroup_3__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__UnorderedGroup_3__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3__0"


    // $ANTLR start "rule__Volume__UnorderedGroup_3__1"
    // InternalDockerCompose.g:11100:1: rule__Volume__UnorderedGroup_3__1 : rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__2 )? ;
    public final void rule__Volume__UnorderedGroup_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11104:1: ( rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__2 )? )
            // InternalDockerCompose.g:11105:2: rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__2 )?
            {
            pushFollow(FOLLOW_49);
            rule__Volume__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11106:2: ( rule__Volume__UnorderedGroup_3__2 )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( LA107_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                alt107=1;
            }
            else if ( LA107_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                alt107=1;
            }
            else if ( LA107_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                alt107=1;
            }
            else if ( LA107_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                alt107=1;
            }
            else if ( LA107_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalDockerCompose.g:11106:2: rule__Volume__UnorderedGroup_3__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__UnorderedGroup_3__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3__1"


    // $ANTLR start "rule__Volume__UnorderedGroup_3__2"
    // InternalDockerCompose.g:11112:1: rule__Volume__UnorderedGroup_3__2 : rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__3 )? ;
    public final void rule__Volume__UnorderedGroup_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11116:1: ( rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__3 )? )
            // InternalDockerCompose.g:11117:2: rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__3 )?
            {
            pushFollow(FOLLOW_49);
            rule__Volume__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11118:2: ( rule__Volume__UnorderedGroup_3__3 )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( LA108_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                alt108=1;
            }
            else if ( LA108_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                alt108=1;
            }
            else if ( LA108_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                alt108=1;
            }
            else if ( LA108_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                alt108=1;
            }
            else if ( LA108_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalDockerCompose.g:11118:2: rule__Volume__UnorderedGroup_3__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__UnorderedGroup_3__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3__2"


    // $ANTLR start "rule__Volume__UnorderedGroup_3__3"
    // InternalDockerCompose.g:11124:1: rule__Volume__UnorderedGroup_3__3 : rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__4 )? ;
    public final void rule__Volume__UnorderedGroup_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11128:1: ( rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__4 )? )
            // InternalDockerCompose.g:11129:2: rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__4 )?
            {
            pushFollow(FOLLOW_49);
            rule__Volume__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11130:2: ( rule__Volume__UnorderedGroup_3__4 )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( LA109_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                alt109=1;
            }
            else if ( LA109_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                alt109=1;
            }
            else if ( LA109_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                alt109=1;
            }
            else if ( LA109_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                alt109=1;
            }
            else if ( LA109_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // InternalDockerCompose.g:11130:2: rule__Volume__UnorderedGroup_3__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__UnorderedGroup_3__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3__3"


    // $ANTLR start "rule__Volume__UnorderedGroup_3__4"
    // InternalDockerCompose.g:11136:1: rule__Volume__UnorderedGroup_3__4 : rule__Volume__UnorderedGroup_3__Impl ;
    public final void rule__Volume__UnorderedGroup_3__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11140:1: ( rule__Volume__UnorderedGroup_3__Impl )
            // InternalDockerCompose.g:11141:2: rule__Volume__UnorderedGroup_3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__UnorderedGroup_3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3__4"


    // $ANTLR start "rule__Config__UnorderedGroup_3"
    // InternalDockerCompose.g:11148:1: rule__Config__UnorderedGroup_3 : ( rule__Config__UnorderedGroup_3__0 )? ;
    public final void rule__Config__UnorderedGroup_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getConfigAccess().getUnorderedGroup_3());
        	
        try {
            // InternalDockerCompose.g:11153:1: ( ( rule__Config__UnorderedGroup_3__0 )? )
            // InternalDockerCompose.g:11154:2: ( rule__Config__UnorderedGroup_3__0 )?
            {
            // InternalDockerCompose.g:11154:2: ( rule__Config__UnorderedGroup_3__0 )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( LA110_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0) ) {
                alt110=1;
            }
            else if ( LA110_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1) ) {
                alt110=1;
            }
            else if ( LA110_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // InternalDockerCompose.g:11154:2: rule__Config__UnorderedGroup_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Config__UnorderedGroup_3__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getConfigAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__UnorderedGroup_3"


    // $ANTLR start "rule__Config__UnorderedGroup_3__Impl"
    // InternalDockerCompose.g:11162:1: rule__Config__UnorderedGroup_3__Impl : ( ({...}? => ( ( ( rule__Config__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_2__0 ) ) ) ) ) ;
    public final void rule__Config__UnorderedGroup_3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:11167:1: ( ( ({...}? => ( ( ( rule__Config__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_2__0 ) ) ) ) ) )
            // InternalDockerCompose.g:11168:3: ( ({...}? => ( ( ( rule__Config__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_2__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:11168:3: ( ({...}? => ( ( ( rule__Config__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_2__0 ) ) ) ) )
            int alt111=3;
            int LA111_0 = input.LA(1);

            if ( LA111_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0) ) {
                alt111=1;
            }
            else if ( LA111_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1) ) {
                alt111=2;
            }
            else if ( LA111_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2) ) {
                alt111=3;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 111, 0, input);

                throw nvae;
            }
            switch (alt111) {
                case 1 :
                    // InternalDockerCompose.g:11169:3: ({...}? => ( ( ( rule__Config__Group_3_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11169:3: ({...}? => ( ( ( rule__Config__Group_3_0__0 ) ) ) )
                    // InternalDockerCompose.g:11170:4: {...}? => ( ( ( rule__Config__Group_3_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0) ) {
                        throw new FailedPredicateException(input, "rule__Config__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0)");
                    }
                    // InternalDockerCompose.g:11170:102: ( ( ( rule__Config__Group_3_0__0 ) ) )
                    // InternalDockerCompose.g:11171:5: ( ( rule__Config__Group_3_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11177:5: ( ( rule__Config__Group_3_0__0 ) )
                    // InternalDockerCompose.g:11178:6: ( rule__Config__Group_3_0__0 )
                    {
                     before(grammarAccess.getConfigAccess().getGroup_3_0()); 
                    // InternalDockerCompose.g:11179:6: ( rule__Config__Group_3_0__0 )
                    // InternalDockerCompose.g:11179:7: rule__Config__Group_3_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Config__Group_3_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigAccess().getGroup_3_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:11184:3: ({...}? => ( ( ( rule__Config__Group_3_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11184:3: ({...}? => ( ( ( rule__Config__Group_3_1__0 ) ) ) )
                    // InternalDockerCompose.g:11185:4: {...}? => ( ( ( rule__Config__Group_3_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1) ) {
                        throw new FailedPredicateException(input, "rule__Config__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1)");
                    }
                    // InternalDockerCompose.g:11185:102: ( ( ( rule__Config__Group_3_1__0 ) ) )
                    // InternalDockerCompose.g:11186:5: ( ( rule__Config__Group_3_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11192:5: ( ( rule__Config__Group_3_1__0 ) )
                    // InternalDockerCompose.g:11193:6: ( rule__Config__Group_3_1__0 )
                    {
                     before(grammarAccess.getConfigAccess().getGroup_3_1()); 
                    // InternalDockerCompose.g:11194:6: ( rule__Config__Group_3_1__0 )
                    // InternalDockerCompose.g:11194:7: rule__Config__Group_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Config__Group_3_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigAccess().getGroup_3_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:11199:3: ({...}? => ( ( ( rule__Config__Group_3_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11199:3: ({...}? => ( ( ( rule__Config__Group_3_2__0 ) ) ) )
                    // InternalDockerCompose.g:11200:4: {...}? => ( ( ( rule__Config__Group_3_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2) ) {
                        throw new FailedPredicateException(input, "rule__Config__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2)");
                    }
                    // InternalDockerCompose.g:11200:102: ( ( ( rule__Config__Group_3_2__0 ) ) )
                    // InternalDockerCompose.g:11201:5: ( ( rule__Config__Group_3_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11207:5: ( ( rule__Config__Group_3_2__0 ) )
                    // InternalDockerCompose.g:11208:6: ( rule__Config__Group_3_2__0 )
                    {
                     before(grammarAccess.getConfigAccess().getGroup_3_2()); 
                    // InternalDockerCompose.g:11209:6: ( rule__Config__Group_3_2__0 )
                    // InternalDockerCompose.g:11209:7: rule__Config__Group_3_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Config__Group_3_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigAccess().getGroup_3_2()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConfigAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__UnorderedGroup_3__Impl"


    // $ANTLR start "rule__Config__UnorderedGroup_3__0"
    // InternalDockerCompose.g:11222:1: rule__Config__UnorderedGroup_3__0 : rule__Config__UnorderedGroup_3__Impl ( rule__Config__UnorderedGroup_3__1 )? ;
    public final void rule__Config__UnorderedGroup_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11226:1: ( rule__Config__UnorderedGroup_3__Impl ( rule__Config__UnorderedGroup_3__1 )? )
            // InternalDockerCompose.g:11227:2: rule__Config__UnorderedGroup_3__Impl ( rule__Config__UnorderedGroup_3__1 )?
            {
            pushFollow(FOLLOW_50);
            rule__Config__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11228:2: ( rule__Config__UnorderedGroup_3__1 )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( LA112_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0) ) {
                alt112=1;
            }
            else if ( LA112_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1) ) {
                alt112=1;
            }
            else if ( LA112_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // InternalDockerCompose.g:11228:2: rule__Config__UnorderedGroup_3__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Config__UnorderedGroup_3__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__UnorderedGroup_3__0"


    // $ANTLR start "rule__Config__UnorderedGroup_3__1"
    // InternalDockerCompose.g:11234:1: rule__Config__UnorderedGroup_3__1 : rule__Config__UnorderedGroup_3__Impl ( rule__Config__UnorderedGroup_3__2 )? ;
    public final void rule__Config__UnorderedGroup_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11238:1: ( rule__Config__UnorderedGroup_3__Impl ( rule__Config__UnorderedGroup_3__2 )? )
            // InternalDockerCompose.g:11239:2: rule__Config__UnorderedGroup_3__Impl ( rule__Config__UnorderedGroup_3__2 )?
            {
            pushFollow(FOLLOW_50);
            rule__Config__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11240:2: ( rule__Config__UnorderedGroup_3__2 )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( LA113_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0) ) {
                alt113=1;
            }
            else if ( LA113_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1) ) {
                alt113=1;
            }
            else if ( LA113_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalDockerCompose.g:11240:2: rule__Config__UnorderedGroup_3__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Config__UnorderedGroup_3__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__UnorderedGroup_3__1"


    // $ANTLR start "rule__Config__UnorderedGroup_3__2"
    // InternalDockerCompose.g:11246:1: rule__Config__UnorderedGroup_3__2 : rule__Config__UnorderedGroup_3__Impl ;
    public final void rule__Config__UnorderedGroup_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11250:1: ( rule__Config__UnorderedGroup_3__Impl )
            // InternalDockerCompose.g:11251:2: rule__Config__UnorderedGroup_3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Config__UnorderedGroup_3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__UnorderedGroup_3__2"


    // $ANTLR start "rule__Secret__UnorderedGroup_3"
    // InternalDockerCompose.g:11258:1: rule__Secret__UnorderedGroup_3 : ( rule__Secret__UnorderedGroup_3__0 )? ;
    public final void rule__Secret__UnorderedGroup_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getSecretAccess().getUnorderedGroup_3());
        	
        try {
            // InternalDockerCompose.g:11263:1: ( ( rule__Secret__UnorderedGroup_3__0 )? )
            // InternalDockerCompose.g:11264:2: ( rule__Secret__UnorderedGroup_3__0 )?
            {
            // InternalDockerCompose.g:11264:2: ( rule__Secret__UnorderedGroup_3__0 )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( LA114_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0) ) {
                alt114=1;
            }
            else if ( LA114_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1) ) {
                alt114=1;
            }
            else if ( LA114_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2) ) {
                alt114=1;
            }
            else if ( LA114_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalDockerCompose.g:11264:2: rule__Secret__UnorderedGroup_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__UnorderedGroup_3__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getSecretAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__UnorderedGroup_3"


    // $ANTLR start "rule__Secret__UnorderedGroup_3__Impl"
    // InternalDockerCompose.g:11272:1: rule__Secret__UnorderedGroup_3__Impl : ( ({...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) ) ) ) ;
    public final void rule__Secret__UnorderedGroup_3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:11277:1: ( ( ({...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) ) ) ) )
            // InternalDockerCompose.g:11278:3: ( ({...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:11278:3: ( ({...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) ) ) )
            int alt115=4;
            int LA115_0 = input.LA(1);

            if ( LA115_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0) ) {
                alt115=1;
            }
            else if ( LA115_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1) ) {
                alt115=2;
            }
            else if ( LA115_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2) ) {
                alt115=3;
            }
            else if ( LA115_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3) ) {
                alt115=4;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 115, 0, input);

                throw nvae;
            }
            switch (alt115) {
                case 1 :
                    // InternalDockerCompose.g:11279:3: ({...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11279:3: ({...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) ) )
                    // InternalDockerCompose.g:11280:4: {...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0) ) {
                        throw new FailedPredicateException(input, "rule__Secret__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0)");
                    }
                    // InternalDockerCompose.g:11280:102: ( ( ( rule__Secret__Group_3_0__0 ) ) )
                    // InternalDockerCompose.g:11281:5: ( ( rule__Secret__Group_3_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11287:5: ( ( rule__Secret__Group_3_0__0 ) )
                    // InternalDockerCompose.g:11288:6: ( rule__Secret__Group_3_0__0 )
                    {
                     before(grammarAccess.getSecretAccess().getGroup_3_0()); 
                    // InternalDockerCompose.g:11289:6: ( rule__Secret__Group_3_0__0 )
                    // InternalDockerCompose.g:11289:7: rule__Secret__Group_3_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__Group_3_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretAccess().getGroup_3_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:11294:3: ({...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11294:3: ({...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) ) )
                    // InternalDockerCompose.g:11295:4: {...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1) ) {
                        throw new FailedPredicateException(input, "rule__Secret__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1)");
                    }
                    // InternalDockerCompose.g:11295:102: ( ( ( rule__Secret__Group_3_1__0 ) ) )
                    // InternalDockerCompose.g:11296:5: ( ( rule__Secret__Group_3_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11302:5: ( ( rule__Secret__Group_3_1__0 ) )
                    // InternalDockerCompose.g:11303:6: ( rule__Secret__Group_3_1__0 )
                    {
                     before(grammarAccess.getSecretAccess().getGroup_3_1()); 
                    // InternalDockerCompose.g:11304:6: ( rule__Secret__Group_3_1__0 )
                    // InternalDockerCompose.g:11304:7: rule__Secret__Group_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__Group_3_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretAccess().getGroup_3_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:11309:3: ({...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11309:3: ({...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) ) )
                    // InternalDockerCompose.g:11310:4: {...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2) ) {
                        throw new FailedPredicateException(input, "rule__Secret__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2)");
                    }
                    // InternalDockerCompose.g:11310:102: ( ( ( rule__Secret__Group_3_2__0 ) ) )
                    // InternalDockerCompose.g:11311:5: ( ( rule__Secret__Group_3_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11317:5: ( ( rule__Secret__Group_3_2__0 ) )
                    // InternalDockerCompose.g:11318:6: ( rule__Secret__Group_3_2__0 )
                    {
                     before(grammarAccess.getSecretAccess().getGroup_3_2()); 
                    // InternalDockerCompose.g:11319:6: ( rule__Secret__Group_3_2__0 )
                    // InternalDockerCompose.g:11319:7: rule__Secret__Group_3_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__Group_3_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretAccess().getGroup_3_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:11324:3: ({...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11324:3: ({...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) ) )
                    // InternalDockerCompose.g:11325:4: {...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3) ) {
                        throw new FailedPredicateException(input, "rule__Secret__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3)");
                    }
                    // InternalDockerCompose.g:11325:102: ( ( ( rule__Secret__Group_3_3__0 ) ) )
                    // InternalDockerCompose.g:11326:5: ( ( rule__Secret__Group_3_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11332:5: ( ( rule__Secret__Group_3_3__0 ) )
                    // InternalDockerCompose.g:11333:6: ( rule__Secret__Group_3_3__0 )
                    {
                     before(grammarAccess.getSecretAccess().getGroup_3_3()); 
                    // InternalDockerCompose.g:11334:6: ( rule__Secret__Group_3_3__0 )
                    // InternalDockerCompose.g:11334:7: rule__Secret__Group_3_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__Group_3_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretAccess().getGroup_3_3()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSecretAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__UnorderedGroup_3__Impl"


    // $ANTLR start "rule__Secret__UnorderedGroup_3__0"
    // InternalDockerCompose.g:11347:1: rule__Secret__UnorderedGroup_3__0 : rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__1 )? ;
    public final void rule__Secret__UnorderedGroup_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11351:1: ( rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__1 )? )
            // InternalDockerCompose.g:11352:2: rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__1 )?
            {
            pushFollow(FOLLOW_51);
            rule__Secret__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11353:2: ( rule__Secret__UnorderedGroup_3__1 )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( LA116_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0) ) {
                alt116=1;
            }
            else if ( LA116_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1) ) {
                alt116=1;
            }
            else if ( LA116_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2) ) {
                alt116=1;
            }
            else if ( LA116_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalDockerCompose.g:11353:2: rule__Secret__UnorderedGroup_3__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__UnorderedGroup_3__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__UnorderedGroup_3__0"


    // $ANTLR start "rule__Secret__UnorderedGroup_3__1"
    // InternalDockerCompose.g:11359:1: rule__Secret__UnorderedGroup_3__1 : rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__2 )? ;
    public final void rule__Secret__UnorderedGroup_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11363:1: ( rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__2 )? )
            // InternalDockerCompose.g:11364:2: rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__2 )?
            {
            pushFollow(FOLLOW_51);
            rule__Secret__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11365:2: ( rule__Secret__UnorderedGroup_3__2 )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( LA117_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0) ) {
                alt117=1;
            }
            else if ( LA117_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1) ) {
                alt117=1;
            }
            else if ( LA117_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2) ) {
                alt117=1;
            }
            else if ( LA117_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalDockerCompose.g:11365:2: rule__Secret__UnorderedGroup_3__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__UnorderedGroup_3__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__UnorderedGroup_3__1"


    // $ANTLR start "rule__Secret__UnorderedGroup_3__2"
    // InternalDockerCompose.g:11371:1: rule__Secret__UnorderedGroup_3__2 : rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__3 )? ;
    public final void rule__Secret__UnorderedGroup_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11375:1: ( rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__3 )? )
            // InternalDockerCompose.g:11376:2: rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__3 )?
            {
            pushFollow(FOLLOW_51);
            rule__Secret__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11377:2: ( rule__Secret__UnorderedGroup_3__3 )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( LA118_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0) ) {
                alt118=1;
            }
            else if ( LA118_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1) ) {
                alt118=1;
            }
            else if ( LA118_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2) ) {
                alt118=1;
            }
            else if ( LA118_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalDockerCompose.g:11377:2: rule__Secret__UnorderedGroup_3__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__UnorderedGroup_3__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__UnorderedGroup_3__2"


    // $ANTLR start "rule__Secret__UnorderedGroup_3__3"
    // InternalDockerCompose.g:11383:1: rule__Secret__UnorderedGroup_3__3 : rule__Secret__UnorderedGroup_3__Impl ;
    public final void rule__Secret__UnorderedGroup_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11387:1: ( rule__Secret__UnorderedGroup_3__Impl )
            // InternalDockerCompose.g:11388:2: rule__Secret__UnorderedGroup_3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Secret__UnorderedGroup_3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__UnorderedGroup_3__3"


    // $ANTLR start "rule__IPAM__UnorderedGroup_1"
    // InternalDockerCompose.g:11395:1: rule__IPAM__UnorderedGroup_1 : ( rule__IPAM__UnorderedGroup_1__0 )? ;
    public final void rule__IPAM__UnorderedGroup_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getIPAMAccess().getUnorderedGroup_1());
        	
        try {
            // InternalDockerCompose.g:11400:1: ( ( rule__IPAM__UnorderedGroup_1__0 )? )
            // InternalDockerCompose.g:11401:2: ( rule__IPAM__UnorderedGroup_1__0 )?
            {
            // InternalDockerCompose.g:11401:2: ( rule__IPAM__UnorderedGroup_1__0 )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==77) ) {
                int LA119_1 = input.LA(2);

                if ( (LA119_1==RULE_STRING) ) {
                    int LA119_5 = input.LA(3);

                    if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                        alt119=1;
                    }
                }
                else if ( (LA119_1==RULE_ID) ) {
                    int LA119_6 = input.LA(3);

                    if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                        alt119=1;
                    }
                }
            }
            else if ( LA119_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1) ) {
                alt119=1;
            }
            else if ( LA119_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // InternalDockerCompose.g:11401:2: rule__IPAM__UnorderedGroup_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAM__UnorderedGroup_1__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getIPAMAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__UnorderedGroup_1"


    // $ANTLR start "rule__IPAM__UnorderedGroup_1__Impl"
    // InternalDockerCompose.g:11409:1: rule__IPAM__UnorderedGroup_1__Impl : ( ({...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) ) ) ) ;
    public final void rule__IPAM__UnorderedGroup_1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:11414:1: ( ( ({...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) ) ) ) )
            // InternalDockerCompose.g:11415:3: ( ({...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:11415:3: ( ({...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) ) ) )
            int alt120=3;
            int LA120_0 = input.LA(1);

            if ( LA120_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                alt120=1;
            }
            else if ( LA120_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1) ) {
                alt120=2;
            }
            else if ( LA120_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2) ) {
                alt120=3;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 120, 0, input);

                throw nvae;
            }
            switch (alt120) {
                case 1 :
                    // InternalDockerCompose.g:11416:3: ({...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11416:3: ({...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) ) )
                    // InternalDockerCompose.g:11417:4: {...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                        throw new FailedPredicateException(input, "rule__IPAM__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0)");
                    }
                    // InternalDockerCompose.g:11417:100: ( ( ( rule__IPAM__Group_1_0__0 ) ) )
                    // InternalDockerCompose.g:11418:5: ( ( rule__IPAM__Group_1_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11424:5: ( ( rule__IPAM__Group_1_0__0 ) )
                    // InternalDockerCompose.g:11425:6: ( rule__IPAM__Group_1_0__0 )
                    {
                     before(grammarAccess.getIPAMAccess().getGroup_1_0()); 
                    // InternalDockerCompose.g:11426:6: ( rule__IPAM__Group_1_0__0 )
                    // InternalDockerCompose.g:11426:7: rule__IPAM__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAM__Group_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMAccess().getGroup_1_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:11431:3: ({...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11431:3: ({...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) ) )
                    // InternalDockerCompose.g:11432:4: {...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1) ) {
                        throw new FailedPredicateException(input, "rule__IPAM__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1)");
                    }
                    // InternalDockerCompose.g:11432:100: ( ( ( rule__IPAM__Group_1_1__0 ) ) )
                    // InternalDockerCompose.g:11433:5: ( ( rule__IPAM__Group_1_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11439:5: ( ( rule__IPAM__Group_1_1__0 ) )
                    // InternalDockerCompose.g:11440:6: ( rule__IPAM__Group_1_1__0 )
                    {
                     before(grammarAccess.getIPAMAccess().getGroup_1_1()); 
                    // InternalDockerCompose.g:11441:6: ( rule__IPAM__Group_1_1__0 )
                    // InternalDockerCompose.g:11441:7: rule__IPAM__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAM__Group_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMAccess().getGroup_1_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:11446:3: ({...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11446:3: ({...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) ) )
                    // InternalDockerCompose.g:11447:4: {...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2) ) {
                        throw new FailedPredicateException(input, "rule__IPAM__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2)");
                    }
                    // InternalDockerCompose.g:11447:100: ( ( ( rule__IPAM__Group_1_2__0 ) ) )
                    // InternalDockerCompose.g:11448:5: ( ( rule__IPAM__Group_1_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11454:5: ( ( rule__IPAM__Group_1_2__0 ) )
                    // InternalDockerCompose.g:11455:6: ( rule__IPAM__Group_1_2__0 )
                    {
                     before(grammarAccess.getIPAMAccess().getGroup_1_2()); 
                    // InternalDockerCompose.g:11456:6: ( rule__IPAM__Group_1_2__0 )
                    // InternalDockerCompose.g:11456:7: rule__IPAM__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAM__Group_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMAccess().getGroup_1_2()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIPAMAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__UnorderedGroup_1__Impl"


    // $ANTLR start "rule__IPAM__UnorderedGroup_1__0"
    // InternalDockerCompose.g:11469:1: rule__IPAM__UnorderedGroup_1__0 : rule__IPAM__UnorderedGroup_1__Impl ( rule__IPAM__UnorderedGroup_1__1 )? ;
    public final void rule__IPAM__UnorderedGroup_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11473:1: ( rule__IPAM__UnorderedGroup_1__Impl ( rule__IPAM__UnorderedGroup_1__1 )? )
            // InternalDockerCompose.g:11474:2: rule__IPAM__UnorderedGroup_1__Impl ( rule__IPAM__UnorderedGroup_1__1 )?
            {
            pushFollow(FOLLOW_52);
            rule__IPAM__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11475:2: ( rule__IPAM__UnorderedGroup_1__1 )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==77) ) {
                int LA121_1 = input.LA(2);

                if ( (LA121_1==RULE_STRING) ) {
                    int LA121_5 = input.LA(3);

                    if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                        alt121=1;
                    }
                }
                else if ( (LA121_1==RULE_ID) ) {
                    int LA121_6 = input.LA(3);

                    if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                        alt121=1;
                    }
                }
            }
            else if ( LA121_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1) ) {
                alt121=1;
            }
            else if ( LA121_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // InternalDockerCompose.g:11475:2: rule__IPAM__UnorderedGroup_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAM__UnorderedGroup_1__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__UnorderedGroup_1__0"


    // $ANTLR start "rule__IPAM__UnorderedGroup_1__1"
    // InternalDockerCompose.g:11481:1: rule__IPAM__UnorderedGroup_1__1 : rule__IPAM__UnorderedGroup_1__Impl ( rule__IPAM__UnorderedGroup_1__2 )? ;
    public final void rule__IPAM__UnorderedGroup_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11485:1: ( rule__IPAM__UnorderedGroup_1__Impl ( rule__IPAM__UnorderedGroup_1__2 )? )
            // InternalDockerCompose.g:11486:2: rule__IPAM__UnorderedGroup_1__Impl ( rule__IPAM__UnorderedGroup_1__2 )?
            {
            pushFollow(FOLLOW_52);
            rule__IPAM__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11487:2: ( rule__IPAM__UnorderedGroup_1__2 )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==77) ) {
                int LA122_1 = input.LA(2);

                if ( (LA122_1==RULE_STRING) ) {
                    int LA122_5 = input.LA(3);

                    if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                        alt122=1;
                    }
                }
                else if ( (LA122_1==RULE_ID) ) {
                    int LA122_6 = input.LA(3);

                    if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                        alt122=1;
                    }
                }
            }
            else if ( LA122_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1) ) {
                alt122=1;
            }
            else if ( LA122_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // InternalDockerCompose.g:11487:2: rule__IPAM__UnorderedGroup_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAM__UnorderedGroup_1__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__UnorderedGroup_1__1"


    // $ANTLR start "rule__IPAM__UnorderedGroup_1__2"
    // InternalDockerCompose.g:11493:1: rule__IPAM__UnorderedGroup_1__2 : rule__IPAM__UnorderedGroup_1__Impl ;
    public final void rule__IPAM__UnorderedGroup_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11497:1: ( rule__IPAM__UnorderedGroup_1__Impl )
            // InternalDockerCompose.g:11498:2: rule__IPAM__UnorderedGroup_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__UnorderedGroup_1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__UnorderedGroup_1__2"


    // $ANTLR start "rule__IPAMConfig__UnorderedGroup_1"
    // InternalDockerCompose.g:11505:1: rule__IPAMConfig__UnorderedGroup_1 : ( rule__IPAMConfig__UnorderedGroup_1__0 )? ;
    public final void rule__IPAMConfig__UnorderedGroup_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1());
        	
        try {
            // InternalDockerCompose.g:11510:1: ( ( rule__IPAMConfig__UnorderedGroup_1__0 )? )
            // InternalDockerCompose.g:11511:2: ( rule__IPAMConfig__UnorderedGroup_1__0 )?
            {
            // InternalDockerCompose.g:11511:2: ( rule__IPAMConfig__UnorderedGroup_1__0 )?
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( LA123_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0) ) {
                alt123=1;
            }
            else if ( LA123_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1) ) {
                alt123=1;
            }
            else if ( LA123_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2) ) {
                alt123=1;
            }
            else if ( LA123_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3) ) {
                alt123=1;
            }
            switch (alt123) {
                case 1 :
                    // InternalDockerCompose.g:11511:2: rule__IPAMConfig__UnorderedGroup_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__UnorderedGroup_1__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__UnorderedGroup_1"


    // $ANTLR start "rule__IPAMConfig__UnorderedGroup_1__Impl"
    // InternalDockerCompose.g:11519:1: rule__IPAMConfig__UnorderedGroup_1__Impl : ( ({...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) ) ) ) ;
    public final void rule__IPAMConfig__UnorderedGroup_1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:11524:1: ( ( ({...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) ) ) ) )
            // InternalDockerCompose.g:11525:3: ( ({...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:11525:3: ( ({...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) ) ) )
            int alt124=4;
            int LA124_0 = input.LA(1);

            if ( LA124_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0) ) {
                alt124=1;
            }
            else if ( LA124_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1) ) {
                alt124=2;
            }
            else if ( LA124_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2) ) {
                alt124=3;
            }
            else if ( LA124_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3) ) {
                alt124=4;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 124, 0, input);

                throw nvae;
            }
            switch (alt124) {
                case 1 :
                    // InternalDockerCompose.g:11526:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11526:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) ) )
                    // InternalDockerCompose.g:11527:4: {...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0) ) {
                        throw new FailedPredicateException(input, "rule__IPAMConfig__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0)");
                    }
                    // InternalDockerCompose.g:11527:106: ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) )
                    // InternalDockerCompose.g:11528:5: ( ( rule__IPAMConfig__Group_1_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11534:5: ( ( rule__IPAMConfig__Group_1_0__0 ) )
                    // InternalDockerCompose.g:11535:6: ( rule__IPAMConfig__Group_1_0__0 )
                    {
                     before(grammarAccess.getIPAMConfigAccess().getGroup_1_0()); 
                    // InternalDockerCompose.g:11536:6: ( rule__IPAMConfig__Group_1_0__0 )
                    // InternalDockerCompose.g:11536:7: rule__IPAMConfig__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__Group_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMConfigAccess().getGroup_1_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:11541:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11541:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) ) )
                    // InternalDockerCompose.g:11542:4: {...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1) ) {
                        throw new FailedPredicateException(input, "rule__IPAMConfig__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1)");
                    }
                    // InternalDockerCompose.g:11542:106: ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) )
                    // InternalDockerCompose.g:11543:5: ( ( rule__IPAMConfig__Group_1_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11549:5: ( ( rule__IPAMConfig__Group_1_1__0 ) )
                    // InternalDockerCompose.g:11550:6: ( rule__IPAMConfig__Group_1_1__0 )
                    {
                     before(grammarAccess.getIPAMConfigAccess().getGroup_1_1()); 
                    // InternalDockerCompose.g:11551:6: ( rule__IPAMConfig__Group_1_1__0 )
                    // InternalDockerCompose.g:11551:7: rule__IPAMConfig__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__Group_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMConfigAccess().getGroup_1_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:11556:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11556:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) ) )
                    // InternalDockerCompose.g:11557:4: {...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2) ) {
                        throw new FailedPredicateException(input, "rule__IPAMConfig__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2)");
                    }
                    // InternalDockerCompose.g:11557:106: ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) )
                    // InternalDockerCompose.g:11558:5: ( ( rule__IPAMConfig__Group_1_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11564:5: ( ( rule__IPAMConfig__Group_1_2__0 ) )
                    // InternalDockerCompose.g:11565:6: ( rule__IPAMConfig__Group_1_2__0 )
                    {
                     before(grammarAccess.getIPAMConfigAccess().getGroup_1_2()); 
                    // InternalDockerCompose.g:11566:6: ( rule__IPAMConfig__Group_1_2__0 )
                    // InternalDockerCompose.g:11566:7: rule__IPAMConfig__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__Group_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMConfigAccess().getGroup_1_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:11571:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11571:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) ) )
                    // InternalDockerCompose.g:11572:4: {...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3) ) {
                        throw new FailedPredicateException(input, "rule__IPAMConfig__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3)");
                    }
                    // InternalDockerCompose.g:11572:106: ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) )
                    // InternalDockerCompose.g:11573:5: ( ( rule__IPAMConfig__Group_1_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11579:5: ( ( rule__IPAMConfig__Group_1_3__0 ) )
                    // InternalDockerCompose.g:11580:6: ( rule__IPAMConfig__Group_1_3__0 )
                    {
                     before(grammarAccess.getIPAMConfigAccess().getGroup_1_3()); 
                    // InternalDockerCompose.g:11581:6: ( rule__IPAMConfig__Group_1_3__0 )
                    // InternalDockerCompose.g:11581:7: rule__IPAMConfig__Group_1_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__Group_1_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMConfigAccess().getGroup_1_3()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__UnorderedGroup_1__Impl"


    // $ANTLR start "rule__IPAMConfig__UnorderedGroup_1__0"
    // InternalDockerCompose.g:11594:1: rule__IPAMConfig__UnorderedGroup_1__0 : rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__1 )? ;
    public final void rule__IPAMConfig__UnorderedGroup_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11598:1: ( rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__1 )? )
            // InternalDockerCompose.g:11599:2: rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__1 )?
            {
            pushFollow(FOLLOW_53);
            rule__IPAMConfig__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11600:2: ( rule__IPAMConfig__UnorderedGroup_1__1 )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( LA125_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0) ) {
                alt125=1;
            }
            else if ( LA125_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1) ) {
                alt125=1;
            }
            else if ( LA125_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2) ) {
                alt125=1;
            }
            else if ( LA125_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // InternalDockerCompose.g:11600:2: rule__IPAMConfig__UnorderedGroup_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__UnorderedGroup_1__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__UnorderedGroup_1__0"


    // $ANTLR start "rule__IPAMConfig__UnorderedGroup_1__1"
    // InternalDockerCompose.g:11606:1: rule__IPAMConfig__UnorderedGroup_1__1 : rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__2 )? ;
    public final void rule__IPAMConfig__UnorderedGroup_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11610:1: ( rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__2 )? )
            // InternalDockerCompose.g:11611:2: rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__2 )?
            {
            pushFollow(FOLLOW_53);
            rule__IPAMConfig__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11612:2: ( rule__IPAMConfig__UnorderedGroup_1__2 )?
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( LA126_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0) ) {
                alt126=1;
            }
            else if ( LA126_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1) ) {
                alt126=1;
            }
            else if ( LA126_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2) ) {
                alt126=1;
            }
            else if ( LA126_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3) ) {
                alt126=1;
            }
            switch (alt126) {
                case 1 :
                    // InternalDockerCompose.g:11612:2: rule__IPAMConfig__UnorderedGroup_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__UnorderedGroup_1__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__UnorderedGroup_1__1"


    // $ANTLR start "rule__IPAMConfig__UnorderedGroup_1__2"
    // InternalDockerCompose.g:11618:1: rule__IPAMConfig__UnorderedGroup_1__2 : rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__3 )? ;
    public final void rule__IPAMConfig__UnorderedGroup_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11622:1: ( rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__3 )? )
            // InternalDockerCompose.g:11623:2: rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__3 )?
            {
            pushFollow(FOLLOW_53);
            rule__IPAMConfig__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11624:2: ( rule__IPAMConfig__UnorderedGroup_1__3 )?
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( LA127_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0) ) {
                alt127=1;
            }
            else if ( LA127_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1) ) {
                alt127=1;
            }
            else if ( LA127_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2) ) {
                alt127=1;
            }
            else if ( LA127_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    // InternalDockerCompose.g:11624:2: rule__IPAMConfig__UnorderedGroup_1__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__UnorderedGroup_1__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__UnorderedGroup_1__2"


    // $ANTLR start "rule__IPAMConfig__UnorderedGroup_1__3"
    // InternalDockerCompose.g:11630:1: rule__IPAMConfig__UnorderedGroup_1__3 : rule__IPAMConfig__UnorderedGroup_1__Impl ;
    public final void rule__IPAMConfig__UnorderedGroup_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11634:1: ( rule__IPAMConfig__UnorderedGroup_1__Impl )
            // InternalDockerCompose.g:11635:2: rule__IPAMConfig__UnorderedGroup_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__UnorderedGroup_1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__UnorderedGroup_1__3"


    // $ANTLR start "rule__DockerCompose__VersionAssignment_0_1"
    // InternalDockerCompose.g:11642:1: rule__DockerCompose__VersionAssignment_0_1 : ( RULE_VERSION ) ;
    public final void rule__DockerCompose__VersionAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11646:1: ( ( RULE_VERSION ) )
            // InternalDockerCompose.g:11647:2: ( RULE_VERSION )
            {
            // InternalDockerCompose.g:11647:2: ( RULE_VERSION )
            // InternalDockerCompose.g:11648:3: RULE_VERSION
            {
             before(grammarAccess.getDockerComposeAccess().getVersionVERSIONTerminalRuleCall_0_1_0()); 
            match(input,RULE_VERSION,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getVersionVERSIONTerminalRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__VersionAssignment_0_1"


    // $ANTLR start "rule__DockerCompose__ServicesAssignment_1_1"
    // InternalDockerCompose.g:11657:1: rule__DockerCompose__ServicesAssignment_1_1 : ( ruleService ) ;
    public final void rule__DockerCompose__ServicesAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11661:1: ( ( ruleService ) )
            // InternalDockerCompose.g:11662:2: ( ruleService )
            {
            // InternalDockerCompose.g:11662:2: ( ruleService )
            // InternalDockerCompose.g:11663:3: ruleService
            {
             before(grammarAccess.getDockerComposeAccess().getServicesServiceParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleService();

            state._fsp--;

             after(grammarAccess.getDockerComposeAccess().getServicesServiceParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__ServicesAssignment_1_1"


    // $ANTLR start "rule__DockerCompose__VolumesAssignment_2_1"
    // InternalDockerCompose.g:11672:1: rule__DockerCompose__VolumesAssignment_2_1 : ( ruleVolume ) ;
    public final void rule__DockerCompose__VolumesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11676:1: ( ( ruleVolume ) )
            // InternalDockerCompose.g:11677:2: ( ruleVolume )
            {
            // InternalDockerCompose.g:11677:2: ( ruleVolume )
            // InternalDockerCompose.g:11678:3: ruleVolume
            {
             before(grammarAccess.getDockerComposeAccess().getVolumesVolumeParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleVolume();

            state._fsp--;

             after(grammarAccess.getDockerComposeAccess().getVolumesVolumeParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__VolumesAssignment_2_1"


    // $ANTLR start "rule__DockerCompose__ConfigsAssignment_3_1"
    // InternalDockerCompose.g:11687:1: rule__DockerCompose__ConfigsAssignment_3_1 : ( ruleConfig ) ;
    public final void rule__DockerCompose__ConfigsAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11691:1: ( ( ruleConfig ) )
            // InternalDockerCompose.g:11692:2: ( ruleConfig )
            {
            // InternalDockerCompose.g:11692:2: ( ruleConfig )
            // InternalDockerCompose.g:11693:3: ruleConfig
            {
             before(grammarAccess.getDockerComposeAccess().getConfigsConfigParserRuleCall_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleConfig();

            state._fsp--;

             after(grammarAccess.getDockerComposeAccess().getConfigsConfigParserRuleCall_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__ConfigsAssignment_3_1"


    // $ANTLR start "rule__DockerCompose__SecretsAssignment_4_1"
    // InternalDockerCompose.g:11702:1: rule__DockerCompose__SecretsAssignment_4_1 : ( ruleSecret ) ;
    public final void rule__DockerCompose__SecretsAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11706:1: ( ( ruleSecret ) )
            // InternalDockerCompose.g:11707:2: ( ruleSecret )
            {
            // InternalDockerCompose.g:11707:2: ( ruleSecret )
            // InternalDockerCompose.g:11708:3: ruleSecret
            {
             before(grammarAccess.getDockerComposeAccess().getSecretsSecretParserRuleCall_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSecret();

            state._fsp--;

             after(grammarAccess.getDockerComposeAccess().getSecretsSecretParserRuleCall_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__SecretsAssignment_4_1"


    // $ANTLR start "rule__DockerCompose__NetworksAssignment_5_1"
    // InternalDockerCompose.g:11717:1: rule__DockerCompose__NetworksAssignment_5_1 : ( ruleNetwork ) ;
    public final void rule__DockerCompose__NetworksAssignment_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11721:1: ( ( ruleNetwork ) )
            // InternalDockerCompose.g:11722:2: ( ruleNetwork )
            {
            // InternalDockerCompose.g:11722:2: ( ruleNetwork )
            // InternalDockerCompose.g:11723:3: ruleNetwork
            {
             before(grammarAccess.getDockerComposeAccess().getNetworksNetworkParserRuleCall_5_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNetwork();

            state._fsp--;

             after(grammarAccess.getDockerComposeAccess().getNetworksNetworkParserRuleCall_5_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__NetworksAssignment_5_1"


    // $ANTLR start "rule__Service__NameAssignment_1"
    // InternalDockerCompose.g:11732:1: rule__Service__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__Service__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11736:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:11737:2: ( ruleEString )
            {
            // InternalDockerCompose.g:11737:2: ( ruleEString )
            // InternalDockerCompose.g:11738:3: ruleEString
            {
             before(grammarAccess.getServiceAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__NameAssignment_1"


    // $ANTLR start "rule__Service__BuildAssignment_3_0_0_1"
    // InternalDockerCompose.g:11747:1: rule__Service__BuildAssignment_3_0_0_1 : ( rulePATH ) ;
    public final void rule__Service__BuildAssignment_3_0_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11751:1: ( ( rulePATH ) )
            // InternalDockerCompose.g:11752:2: ( rulePATH )
            {
            // InternalDockerCompose.g:11752:2: ( rulePATH )
            // InternalDockerCompose.g:11753:3: rulePATH
            {
             before(grammarAccess.getServiceAccess().getBuildPATHParserRuleCall_3_0_0_1_0()); 
            pushFollow(FOLLOW_2);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getBuildPATHParserRuleCall_3_0_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__BuildAssignment_3_0_0_1"


    // $ANTLR start "rule__Service__ImageAssignment_3_0_1_1"
    // InternalDockerCompose.g:11762:1: rule__Service__ImageAssignment_3_0_1_1 : ( ruleImage ) ;
    public final void rule__Service__ImageAssignment_3_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11766:1: ( ( ruleImage ) )
            // InternalDockerCompose.g:11767:2: ( ruleImage )
            {
            // InternalDockerCompose.g:11767:2: ( ruleImage )
            // InternalDockerCompose.g:11768:3: ruleImage
            {
             before(grammarAccess.getServiceAccess().getImageImageParserRuleCall_3_0_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleImage();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getImageImageParserRuleCall_3_0_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__ImageAssignment_3_0_1_1"


    // $ANTLR start "rule__Service__Cpu_countAssignment_3_1_1"
    // InternalDockerCompose.g:11777:1: rule__Service__Cpu_countAssignment_3_1_1 : ( ruleEInt ) ;
    public final void rule__Service__Cpu_countAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11781:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:11782:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:11782:2: ( ruleEInt )
            // InternalDockerCompose.g:11783:3: ruleEInt
            {
             before(grammarAccess.getServiceAccess().getCpu_countEIntParserRuleCall_3_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getCpu_countEIntParserRuleCall_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Cpu_countAssignment_3_1_1"


    // $ANTLR start "rule__Service__CommandAssignment_3_2_1"
    // InternalDockerCompose.g:11792:1: rule__Service__CommandAssignment_3_2_1 : ( ruleEString ) ;
    public final void rule__Service__CommandAssignment_3_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11796:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:11797:2: ( ruleEString )
            {
            // InternalDockerCompose.g:11797:2: ( ruleEString )
            // InternalDockerCompose.g:11798:3: ruleEString
            {
             before(grammarAccess.getServiceAccess().getCommandEStringParserRuleCall_3_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getCommandEStringParserRuleCall_3_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__CommandAssignment_3_2_1"


    // $ANTLR start "rule__Service__Container_nameAssignment_3_3_1"
    // InternalDockerCompose.g:11807:1: rule__Service__Container_nameAssignment_3_3_1 : ( ruleEString ) ;
    public final void rule__Service__Container_nameAssignment_3_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11811:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:11812:2: ( ruleEString )
            {
            // InternalDockerCompose.g:11812:2: ( ruleEString )
            // InternalDockerCompose.g:11813:3: ruleEString
            {
             before(grammarAccess.getServiceAccess().getContainer_nameEStringParserRuleCall_3_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getContainer_nameEStringParserRuleCall_3_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Container_nameAssignment_3_3_1"


    // $ANTLR start "rule__Service__RestartAssignment_3_4_1"
    // InternalDockerCompose.g:11822:1: rule__Service__RestartAssignment_3_4_1 : ( ruleRestartPolicy ) ;
    public final void rule__Service__RestartAssignment_3_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11826:1: ( ( ruleRestartPolicy ) )
            // InternalDockerCompose.g:11827:2: ( ruleRestartPolicy )
            {
            // InternalDockerCompose.g:11827:2: ( ruleRestartPolicy )
            // InternalDockerCompose.g:11828:3: ruleRestartPolicy
            {
             before(grammarAccess.getServiceAccess().getRestartRestartPolicyEnumRuleCall_3_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleRestartPolicy();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getRestartRestartPolicyEnumRuleCall_3_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__RestartAssignment_3_4_1"


    // $ANTLR start "rule__Service__InitAssignment_3_5_1"
    // InternalDockerCompose.g:11837:1: rule__Service__InitAssignment_3_5_1 : ( ruleEBoolean ) ;
    public final void rule__Service__InitAssignment_3_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11841:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:11842:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:11842:2: ( ruleEBoolean )
            // InternalDockerCompose.g:11843:3: ruleEBoolean
            {
             before(grammarAccess.getServiceAccess().getInitEBooleanParserRuleCall_3_5_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getInitEBooleanParserRuleCall_3_5_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__InitAssignment_3_5_1"


    // $ANTLR start "rule__Service__Read_onlyAssignment_3_6_1"
    // InternalDockerCompose.g:11852:1: rule__Service__Read_onlyAssignment_3_6_1 : ( ruleEBoolean ) ;
    public final void rule__Service__Read_onlyAssignment_3_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11856:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:11857:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:11857:2: ( ruleEBoolean )
            // InternalDockerCompose.g:11858:3: ruleEBoolean
            {
             before(grammarAccess.getServiceAccess().getRead_onlyEBooleanParserRuleCall_3_6_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getRead_onlyEBooleanParserRuleCall_3_6_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Read_onlyAssignment_3_6_1"


    // $ANTLR start "rule__Service__LinksAssignment_3_7_1_1"
    // InternalDockerCompose.g:11867:1: rule__Service__LinksAssignment_3_7_1_1 : ( ruleLink ) ;
    public final void rule__Service__LinksAssignment_3_7_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11871:1: ( ( ruleLink ) )
            // InternalDockerCompose.g:11872:2: ( ruleLink )
            {
            // InternalDockerCompose.g:11872:2: ( ruleLink )
            // InternalDockerCompose.g:11873:3: ruleLink
            {
             before(grammarAccess.getServiceAccess().getLinksLinkParserRuleCall_3_7_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleLink();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getLinksLinkParserRuleCall_3_7_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__LinksAssignment_3_7_1_1"


    // $ANTLR start "rule__Service__Depends_onAssignment_3_8_1_0"
    // InternalDockerCompose.g:11882:1: rule__Service__Depends_onAssignment_3_8_1_0 : ( ruleDependency_short ) ;
    public final void rule__Service__Depends_onAssignment_3_8_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11886:1: ( ( ruleDependency_short ) )
            // InternalDockerCompose.g:11887:2: ( ruleDependency_short )
            {
            // InternalDockerCompose.g:11887:2: ( ruleDependency_short )
            // InternalDockerCompose.g:11888:3: ruleDependency_short
            {
             before(grammarAccess.getServiceAccess().getDepends_onDependency_shortParserRuleCall_3_8_1_0_0()); 
            pushFollow(FOLLOW_2);
            ruleDependency_short();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getDepends_onDependency_shortParserRuleCall_3_8_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Depends_onAssignment_3_8_1_0"


    // $ANTLR start "rule__Service__Depends_onAssignment_3_8_1_1"
    // InternalDockerCompose.g:11897:1: rule__Service__Depends_onAssignment_3_8_1_1 : ( ruleDependency_long ) ;
    public final void rule__Service__Depends_onAssignment_3_8_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11901:1: ( ( ruleDependency_long ) )
            // InternalDockerCompose.g:11902:2: ( ruleDependency_long )
            {
            // InternalDockerCompose.g:11902:2: ( ruleDependency_long )
            // InternalDockerCompose.g:11903:3: ruleDependency_long
            {
             before(grammarAccess.getServiceAccess().getDepends_onDependency_longParserRuleCall_3_8_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDependency_long();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getDepends_onDependency_longParserRuleCall_3_8_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Depends_onAssignment_3_8_1_1"


    // $ANTLR start "rule__Service__NetworksAssignment_3_9_1"
    // InternalDockerCompose.g:11912:1: rule__Service__NetworksAssignment_3_9_1 : ( ruleNetworkConnector ) ;
    public final void rule__Service__NetworksAssignment_3_9_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11916:1: ( ( ruleNetworkConnector ) )
            // InternalDockerCompose.g:11917:2: ( ruleNetworkConnector )
            {
            // InternalDockerCompose.g:11917:2: ( ruleNetworkConnector )
            // InternalDockerCompose.g:11918:3: ruleNetworkConnector
            {
             before(grammarAccess.getServiceAccess().getNetworksNetworkConnectorParserRuleCall_3_9_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNetworkConnector();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getNetworksNetworkConnectorParserRuleCall_3_9_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__NetworksAssignment_3_9_1"


    // $ANTLR start "rule__Service__VolumesAssignment_3_10_1_0_1"
    // InternalDockerCompose.g:11927:1: rule__Service__VolumesAssignment_3_10_1_0_1 : ( ruleVolumeConnector_short ) ;
    public final void rule__Service__VolumesAssignment_3_10_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11931:1: ( ( ruleVolumeConnector_short ) )
            // InternalDockerCompose.g:11932:2: ( ruleVolumeConnector_short )
            {
            // InternalDockerCompose.g:11932:2: ( ruleVolumeConnector_short )
            // InternalDockerCompose.g:11933:3: ruleVolumeConnector_short
            {
             before(grammarAccess.getServiceAccess().getVolumesVolumeConnector_shortParserRuleCall_3_10_1_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleVolumeConnector_short();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getVolumesVolumeConnector_shortParserRuleCall_3_10_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__VolumesAssignment_3_10_1_0_1"


    // $ANTLR start "rule__Service__VolumesAssignment_3_10_1_1_1"
    // InternalDockerCompose.g:11942:1: rule__Service__VolumesAssignment_3_10_1_1_1 : ( ruleVolumeConnector_long ) ;
    public final void rule__Service__VolumesAssignment_3_10_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11946:1: ( ( ruleVolumeConnector_long ) )
            // InternalDockerCompose.g:11947:2: ( ruleVolumeConnector_long )
            {
            // InternalDockerCompose.g:11947:2: ( ruleVolumeConnector_long )
            // InternalDockerCompose.g:11948:3: ruleVolumeConnector_long
            {
             before(grammarAccess.getServiceAccess().getVolumesVolumeConnector_longParserRuleCall_3_10_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleVolumeConnector_long();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getVolumesVolumeConnector_longParserRuleCall_3_10_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__VolumesAssignment_3_10_1_1_1"


    // $ANTLR start "rule__Service__ConfigsAssignment_3_11_1_0_1"
    // InternalDockerCompose.g:11957:1: rule__Service__ConfigsAssignment_3_11_1_0_1 : ( ruleConfigConnector_short ) ;
    public final void rule__Service__ConfigsAssignment_3_11_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11961:1: ( ( ruleConfigConnector_short ) )
            // InternalDockerCompose.g:11962:2: ( ruleConfigConnector_short )
            {
            // InternalDockerCompose.g:11962:2: ( ruleConfigConnector_short )
            // InternalDockerCompose.g:11963:3: ruleConfigConnector_short
            {
             before(grammarAccess.getServiceAccess().getConfigsConfigConnector_shortParserRuleCall_3_11_1_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleConfigConnector_short();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getConfigsConfigConnector_shortParserRuleCall_3_11_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__ConfigsAssignment_3_11_1_0_1"


    // $ANTLR start "rule__Service__ConfigsAssignment_3_11_1_1_1"
    // InternalDockerCompose.g:11972:1: rule__Service__ConfigsAssignment_3_11_1_1_1 : ( ruleConfigConnector_long ) ;
    public final void rule__Service__ConfigsAssignment_3_11_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11976:1: ( ( ruleConfigConnector_long ) )
            // InternalDockerCompose.g:11977:2: ( ruleConfigConnector_long )
            {
            // InternalDockerCompose.g:11977:2: ( ruleConfigConnector_long )
            // InternalDockerCompose.g:11978:3: ruleConfigConnector_long
            {
             before(grammarAccess.getServiceAccess().getConfigsConfigConnector_longParserRuleCall_3_11_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleConfigConnector_long();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getConfigsConfigConnector_longParserRuleCall_3_11_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__ConfigsAssignment_3_11_1_1_1"


    // $ANTLR start "rule__Service__SecretsAssignment_3_12_1_0_1"
    // InternalDockerCompose.g:11987:1: rule__Service__SecretsAssignment_3_12_1_0_1 : ( ruleSecretConnector_short ) ;
    public final void rule__Service__SecretsAssignment_3_12_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11991:1: ( ( ruleSecretConnector_short ) )
            // InternalDockerCompose.g:11992:2: ( ruleSecretConnector_short )
            {
            // InternalDockerCompose.g:11992:2: ( ruleSecretConnector_short )
            // InternalDockerCompose.g:11993:3: ruleSecretConnector_short
            {
             before(grammarAccess.getServiceAccess().getSecretsSecretConnector_shortParserRuleCall_3_12_1_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSecretConnector_short();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getSecretsSecretConnector_shortParserRuleCall_3_12_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__SecretsAssignment_3_12_1_0_1"


    // $ANTLR start "rule__Service__SecretsAssignment_3_12_1_1_1"
    // InternalDockerCompose.g:12002:1: rule__Service__SecretsAssignment_3_12_1_1_1 : ( ruleSecretConnector_long ) ;
    public final void rule__Service__SecretsAssignment_3_12_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12006:1: ( ( ruleSecretConnector_long ) )
            // InternalDockerCompose.g:12007:2: ( ruleSecretConnector_long )
            {
            // InternalDockerCompose.g:12007:2: ( ruleSecretConnector_long )
            // InternalDockerCompose.g:12008:3: ruleSecretConnector_long
            {
             before(grammarAccess.getServiceAccess().getSecretsSecretConnector_longParserRuleCall_3_12_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSecretConnector_long();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getSecretsSecretConnector_longParserRuleCall_3_12_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__SecretsAssignment_3_12_1_1_1"


    // $ANTLR start "rule__Service__DevicesAssignment_3_13_1_1"
    // InternalDockerCompose.g:12017:1: rule__Service__DevicesAssignment_3_13_1_1 : ( ruleDevice ) ;
    public final void rule__Service__DevicesAssignment_3_13_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12021:1: ( ( ruleDevice ) )
            // InternalDockerCompose.g:12022:2: ( ruleDevice )
            {
            // InternalDockerCompose.g:12022:2: ( ruleDevice )
            // InternalDockerCompose.g:12023:3: ruleDevice
            {
             before(grammarAccess.getServiceAccess().getDevicesDeviceParserRuleCall_3_13_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDevice();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getDevicesDeviceParserRuleCall_3_13_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__DevicesAssignment_3_13_1_1"


    // $ANTLR start "rule__Service__DnsAssignment_3_14_1_0_1"
    // InternalDockerCompose.g:12032:1: rule__Service__DnsAssignment_3_14_1_0_1 : ( ruleDNS ) ;
    public final void rule__Service__DnsAssignment_3_14_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12036:1: ( ( ruleDNS ) )
            // InternalDockerCompose.g:12037:2: ( ruleDNS )
            {
            // InternalDockerCompose.g:12037:2: ( ruleDNS )
            // InternalDockerCompose.g:12038:3: ruleDNS
            {
             before(grammarAccess.getServiceAccess().getDnsDNSParserRuleCall_3_14_1_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getDnsDNSParserRuleCall_3_14_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__DnsAssignment_3_14_1_0_1"


    // $ANTLR start "rule__Service__DnsAssignment_3_14_1_1"
    // InternalDockerCompose.g:12047:1: rule__Service__DnsAssignment_3_14_1_1 : ( ruleDNS ) ;
    public final void rule__Service__DnsAssignment_3_14_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12051:1: ( ( ruleDNS ) )
            // InternalDockerCompose.g:12052:2: ( ruleDNS )
            {
            // InternalDockerCompose.g:12052:2: ( ruleDNS )
            // InternalDockerCompose.g:12053:3: ruleDNS
            {
             before(grammarAccess.getServiceAccess().getDnsDNSParserRuleCall_3_14_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getDnsDNSParserRuleCall_3_14_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__DnsAssignment_3_14_1_1"


    // $ANTLR start "rule__Service__PortsAssignment_3_15_1_1"
    // InternalDockerCompose.g:12062:1: rule__Service__PortsAssignment_3_15_1_1 : ( rulePort ) ;
    public final void rule__Service__PortsAssignment_3_15_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12066:1: ( ( rulePort ) )
            // InternalDockerCompose.g:12067:2: ( rulePort )
            {
            // InternalDockerCompose.g:12067:2: ( rulePort )
            // InternalDockerCompose.g:12068:3: rulePort
            {
             before(grammarAccess.getServiceAccess().getPortsPortParserRuleCall_3_15_1_1_0()); 
            pushFollow(FOLLOW_2);
            rulePort();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getPortsPortParserRuleCall_3_15_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__PortsAssignment_3_15_1_1"


    // $ANTLR start "rule__Port__ValueAssignment_1"
    // InternalDockerCompose.g:12077:1: rule__Port__ValueAssignment_1 : ( RULE_PORT_DEF ) ;
    public final void rule__Port__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12081:1: ( ( RULE_PORT_DEF ) )
            // InternalDockerCompose.g:12082:2: ( RULE_PORT_DEF )
            {
            // InternalDockerCompose.g:12082:2: ( RULE_PORT_DEF )
            // InternalDockerCompose.g:12083:3: RULE_PORT_DEF
            {
             before(grammarAccess.getPortAccess().getValuePORT_DEFTerminalRuleCall_1_0()); 
            match(input,RULE_PORT_DEF,FOLLOW_2); 
             after(grammarAccess.getPortAccess().getValuePORT_DEFTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__ValueAssignment_1"


    // $ANTLR start "rule__Device__ValueAssignment_1"
    // InternalDockerCompose.g:12092:1: rule__Device__ValueAssignment_1 : ( RULE_DEVICE_DEF ) ;
    public final void rule__Device__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12096:1: ( ( RULE_DEVICE_DEF ) )
            // InternalDockerCompose.g:12097:2: ( RULE_DEVICE_DEF )
            {
            // InternalDockerCompose.g:12097:2: ( RULE_DEVICE_DEF )
            // InternalDockerCompose.g:12098:3: RULE_DEVICE_DEF
            {
             before(grammarAccess.getDeviceAccess().getValueDEVICE_DEFTerminalRuleCall_1_0()); 
            match(input,RULE_DEVICE_DEF,FOLLOW_2); 
             after(grammarAccess.getDeviceAccess().getValueDEVICE_DEFTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Device__ValueAssignment_1"


    // $ANTLR start "rule__Link__ServiceAssignment_1"
    // InternalDockerCompose.g:12107:1: rule__Link__ServiceAssignment_1 : ( ( ruleEString ) ) ;
    public final void rule__Link__ServiceAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12111:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:12112:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:12112:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:12113:3: ( ruleEString )
            {
             before(grammarAccess.getLinkAccess().getServiceServiceCrossReference_1_0()); 
            // InternalDockerCompose.g:12114:3: ( ruleEString )
            // InternalDockerCompose.g:12115:4: ruleEString
            {
             before(grammarAccess.getLinkAccess().getServiceServiceEStringParserRuleCall_1_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getLinkAccess().getServiceServiceEStringParserRuleCall_1_0_1()); 

            }

             after(grammarAccess.getLinkAccess().getServiceServiceCrossReference_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__ServiceAssignment_1"


    // $ANTLR start "rule__Link__AliasAssignment_2_1"
    // InternalDockerCompose.g:12126:1: rule__Link__AliasAssignment_2_1 : ( ruleEString ) ;
    public final void rule__Link__AliasAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12130:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12131:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12131:2: ( ruleEString )
            // InternalDockerCompose.g:12132:3: ruleEString
            {
             before(grammarAccess.getLinkAccess().getAliasEStringParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getLinkAccess().getAliasEStringParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__AliasAssignment_2_1"


    // $ANTLR start "rule__Dependency_short__ServiceAssignment_2"
    // InternalDockerCompose.g:12141:1: rule__Dependency_short__ServiceAssignment_2 : ( ( ruleEString ) ) ;
    public final void rule__Dependency_short__ServiceAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12145:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:12146:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:12146:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:12147:3: ( ruleEString )
            {
             before(grammarAccess.getDependency_shortAccess().getServiceServiceCrossReference_2_0()); 
            // InternalDockerCompose.g:12148:3: ( ruleEString )
            // InternalDockerCompose.g:12149:4: ruleEString
            {
             before(grammarAccess.getDependency_shortAccess().getServiceServiceEStringParserRuleCall_2_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getDependency_shortAccess().getServiceServiceEStringParserRuleCall_2_0_1()); 

            }

             after(grammarAccess.getDependency_shortAccess().getServiceServiceCrossReference_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_short__ServiceAssignment_2"


    // $ANTLR start "rule__Dependency_long__ServiceAssignment_1"
    // InternalDockerCompose.g:12160:1: rule__Dependency_long__ServiceAssignment_1 : ( ( ruleEString ) ) ;
    public final void rule__Dependency_long__ServiceAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12164:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:12165:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:12165:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:12166:3: ( ruleEString )
            {
             before(grammarAccess.getDependency_longAccess().getServiceServiceCrossReference_1_0()); 
            // InternalDockerCompose.g:12167:3: ( ruleEString )
            // InternalDockerCompose.g:12168:4: ruleEString
            {
             before(grammarAccess.getDependency_longAccess().getServiceServiceEStringParserRuleCall_1_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getDependency_longAccess().getServiceServiceEStringParserRuleCall_1_0_1()); 

            }

             after(grammarAccess.getDependency_longAccess().getServiceServiceCrossReference_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_long__ServiceAssignment_1"


    // $ANTLR start "rule__Dependency_long__ConditionAssignment_4"
    // InternalDockerCompose.g:12179:1: rule__Dependency_long__ConditionAssignment_4 : ( ruleCondition ) ;
    public final void rule__Dependency_long__ConditionAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12183:1: ( ( ruleCondition ) )
            // InternalDockerCompose.g:12184:2: ( ruleCondition )
            {
            // InternalDockerCompose.g:12184:2: ( ruleCondition )
            // InternalDockerCompose.g:12185:3: ruleCondition
            {
             before(grammarAccess.getDependency_longAccess().getConditionConditionEnumRuleCall_4_0()); 
            pushFollow(FOLLOW_2);
            ruleCondition();

            state._fsp--;

             after(grammarAccess.getDependency_longAccess().getConditionConditionEnumRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency_long__ConditionAssignment_4"


    // $ANTLR start "rule__NetworkConnector__NetworkAssignment_1_0_1"
    // InternalDockerCompose.g:12194:1: rule__NetworkConnector__NetworkAssignment_1_0_1 : ( ( ruleEString ) ) ;
    public final void rule__NetworkConnector__NetworkAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12198:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:12199:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:12199:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:12200:3: ( ruleEString )
            {
             before(grammarAccess.getNetworkConnectorAccess().getNetworkNetworkCrossReference_1_0_1_0()); 
            // InternalDockerCompose.g:12201:3: ( ruleEString )
            // InternalDockerCompose.g:12202:4: ruleEString
            {
             before(grammarAccess.getNetworkConnectorAccess().getNetworkNetworkEStringParserRuleCall_1_0_1_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkConnectorAccess().getNetworkNetworkEStringParserRuleCall_1_0_1_0_1()); 

            }

             after(grammarAccess.getNetworkConnectorAccess().getNetworkNetworkCrossReference_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__NetworkAssignment_1_0_1"


    // $ANTLR start "rule__NetworkConnector__NetworkAssignment_1_1_0"
    // InternalDockerCompose.g:12213:1: rule__NetworkConnector__NetworkAssignment_1_1_0 : ( ( ruleEString ) ) ;
    public final void rule__NetworkConnector__NetworkAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12217:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:12218:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:12218:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:12219:3: ( ruleEString )
            {
             before(grammarAccess.getNetworkConnectorAccess().getNetworkNetworkCrossReference_1_1_0_0()); 
            // InternalDockerCompose.g:12220:3: ( ruleEString )
            // InternalDockerCompose.g:12221:4: ruleEString
            {
             before(grammarAccess.getNetworkConnectorAccess().getNetworkNetworkEStringParserRuleCall_1_1_0_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkConnectorAccess().getNetworkNetworkEStringParserRuleCall_1_1_0_0_1()); 

            }

             after(grammarAccess.getNetworkConnectorAccess().getNetworkNetworkCrossReference_1_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__NetworkAssignment_1_1_0"


    // $ANTLR start "rule__NetworkConnector__Ipv4_addressAssignment_1_1_2_0_1"
    // InternalDockerCompose.g:12232:1: rule__NetworkConnector__Ipv4_addressAssignment_1_1_2_0_1 : ( ruleDNS ) ;
    public final void rule__NetworkConnector__Ipv4_addressAssignment_1_1_2_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12236:1: ( ( ruleDNS ) )
            // InternalDockerCompose.g:12237:2: ( ruleDNS )
            {
            // InternalDockerCompose.g:12237:2: ( ruleDNS )
            // InternalDockerCompose.g:12238:3: ruleDNS
            {
             before(grammarAccess.getNetworkConnectorAccess().getIpv4_addressDNSParserRuleCall_1_1_2_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getNetworkConnectorAccess().getIpv4_addressDNSParserRuleCall_1_1_2_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Ipv4_addressAssignment_1_1_2_0_1"


    // $ANTLR start "rule__NetworkConnector__PriorityAssignment_1_1_2_1_1"
    // InternalDockerCompose.g:12247:1: rule__NetworkConnector__PriorityAssignment_1_1_2_1_1 : ( ruleEInt ) ;
    public final void rule__NetworkConnector__PriorityAssignment_1_1_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12251:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:12252:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:12252:2: ( ruleEInt )
            // InternalDockerCompose.g:12253:3: ruleEInt
            {
             before(grammarAccess.getNetworkConnectorAccess().getPriorityEIntParserRuleCall_1_1_2_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getNetworkConnectorAccess().getPriorityEIntParserRuleCall_1_1_2_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__PriorityAssignment_1_1_2_1_1"


    // $ANTLR start "rule__NetworkConnector__AliasesAssignment_1_1_2_2_1_1"
    // InternalDockerCompose.g:12262:1: rule__NetworkConnector__AliasesAssignment_1_1_2_2_1_1 : ( ruleAlias ) ;
    public final void rule__NetworkConnector__AliasesAssignment_1_1_2_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12266:1: ( ( ruleAlias ) )
            // InternalDockerCompose.g:12267:2: ( ruleAlias )
            {
            // InternalDockerCompose.g:12267:2: ( ruleAlias )
            // InternalDockerCompose.g:12268:3: ruleAlias
            {
             before(grammarAccess.getNetworkConnectorAccess().getAliasesAliasParserRuleCall_1_1_2_2_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleAlias();

            state._fsp--;

             after(grammarAccess.getNetworkConnectorAccess().getAliasesAliasParserRuleCall_1_1_2_2_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__AliasesAssignment_1_1_2_2_1_1"


    // $ANTLR start "rule__NetworkConnector__Link_local_ipsAssignment_1_1_2_3_1_1"
    // InternalDockerCompose.g:12277:1: rule__NetworkConnector__Link_local_ipsAssignment_1_1_2_3_1_1 : ( ruleDNS ) ;
    public final void rule__NetworkConnector__Link_local_ipsAssignment_1_1_2_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12281:1: ( ( ruleDNS ) )
            // InternalDockerCompose.g:12282:2: ( ruleDNS )
            {
            // InternalDockerCompose.g:12282:2: ( ruleDNS )
            // InternalDockerCompose.g:12283:3: ruleDNS
            {
             before(grammarAccess.getNetworkConnectorAccess().getLink_local_ipsDNSParserRuleCall_1_1_2_3_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getNetworkConnectorAccess().getLink_local_ipsDNSParserRuleCall_1_1_2_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector__Link_local_ipsAssignment_1_1_2_3_1_1"


    // $ANTLR start "rule__Alias__AliasAssignment_1"
    // InternalDockerCompose.g:12292:1: rule__Alias__AliasAssignment_1 : ( ruleEString ) ;
    public final void rule__Alias__AliasAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12296:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12297:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12297:2: ( ruleEString )
            // InternalDockerCompose.g:12298:3: ruleEString
            {
             before(grammarAccess.getAliasAccess().getAliasEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getAliasAccess().getAliasEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Alias__AliasAssignment_1"


    // $ANTLR start "rule__VolumeConnector_long__VolumeAssignment_1_0_1"
    // InternalDockerCompose.g:12307:1: rule__VolumeConnector_long__VolumeAssignment_1_0_1 : ( ( ruleEString ) ) ;
    public final void rule__VolumeConnector_long__VolumeAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12311:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:12312:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:12312:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:12313:3: ( ruleEString )
            {
             before(grammarAccess.getVolumeConnector_longAccess().getVolumeVolumeCrossReference_1_0_1_0()); 
            // InternalDockerCompose.g:12314:3: ( ruleEString )
            // InternalDockerCompose.g:12315:4: ruleEString
            {
             before(grammarAccess.getVolumeConnector_longAccess().getVolumeVolumeEStringParserRuleCall_1_0_1_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_longAccess().getVolumeVolumeEStringParserRuleCall_1_0_1_0_1()); 

            }

             after(grammarAccess.getVolumeConnector_longAccess().getVolumeVolumeCrossReference_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__VolumeAssignment_1_0_1"


    // $ANTLR start "rule__VolumeConnector_long__TypeAssignment_1_1_1"
    // InternalDockerCompose.g:12326:1: rule__VolumeConnector_long__TypeAssignment_1_1_1 : ( ruleMountType ) ;
    public final void rule__VolumeConnector_long__TypeAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12330:1: ( ( ruleMountType ) )
            // InternalDockerCompose.g:12331:2: ( ruleMountType )
            {
            // InternalDockerCompose.g:12331:2: ( ruleMountType )
            // InternalDockerCompose.g:12332:3: ruleMountType
            {
             before(grammarAccess.getVolumeConnector_longAccess().getTypeMountTypeEnumRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleMountType();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_longAccess().getTypeMountTypeEnumRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__TypeAssignment_1_1_1"


    // $ANTLR start "rule__VolumeConnector_long__Container_pathAssignment_1_2_1"
    // InternalDockerCompose.g:12341:1: rule__VolumeConnector_long__Container_pathAssignment_1_2_1 : ( rulePATH ) ;
    public final void rule__VolumeConnector_long__Container_pathAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12345:1: ( ( rulePATH ) )
            // InternalDockerCompose.g:12346:2: ( rulePATH )
            {
            // InternalDockerCompose.g:12346:2: ( rulePATH )
            // InternalDockerCompose.g:12347:3: rulePATH
            {
             before(grammarAccess.getVolumeConnector_longAccess().getContainer_pathPATHParserRuleCall_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_longAccess().getContainer_pathPATHParserRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Container_pathAssignment_1_2_1"


    // $ANTLR start "rule__VolumeConnector_long__Read_onlyAssignment_1_3_1"
    // InternalDockerCompose.g:12356:1: rule__VolumeConnector_long__Read_onlyAssignment_1_3_1 : ( ruleEBoolean ) ;
    public final void rule__VolumeConnector_long__Read_onlyAssignment_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12360:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:12361:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:12361:2: ( ruleEBoolean )
            // InternalDockerCompose.g:12362:3: ruleEBoolean
            {
             before(grammarAccess.getVolumeConnector_longAccess().getRead_onlyEBooleanParserRuleCall_1_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_longAccess().getRead_onlyEBooleanParserRuleCall_1_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Read_onlyAssignment_1_3_1"


    // $ANTLR start "rule__VolumeConnector_long__PropagationAssignment_1_4_2"
    // InternalDockerCompose.g:12371:1: rule__VolumeConnector_long__PropagationAssignment_1_4_2 : ( rulePropagationType ) ;
    public final void rule__VolumeConnector_long__PropagationAssignment_1_4_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12375:1: ( ( rulePropagationType ) )
            // InternalDockerCompose.g:12376:2: ( rulePropagationType )
            {
            // InternalDockerCompose.g:12376:2: ( rulePropagationType )
            // InternalDockerCompose.g:12377:3: rulePropagationType
            {
             before(grammarAccess.getVolumeConnector_longAccess().getPropagationPropagationTypeEnumRuleCall_1_4_2_0()); 
            pushFollow(FOLLOW_2);
            rulePropagationType();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_longAccess().getPropagationPropagationTypeEnumRuleCall_1_4_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__PropagationAssignment_1_4_2"


    // $ANTLR start "rule__VolumeConnector_long__NocopyAssignment_1_5_2"
    // InternalDockerCompose.g:12386:1: rule__VolumeConnector_long__NocopyAssignment_1_5_2 : ( ruleEBoolean ) ;
    public final void rule__VolumeConnector_long__NocopyAssignment_1_5_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12390:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:12391:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:12391:2: ( ruleEBoolean )
            // InternalDockerCompose.g:12392:3: ruleEBoolean
            {
             before(grammarAccess.getVolumeConnector_longAccess().getNocopyEBooleanParserRuleCall_1_5_2_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_longAccess().getNocopyEBooleanParserRuleCall_1_5_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__NocopyAssignment_1_5_2"


    // $ANTLR start "rule__VolumeConnector_long__SizeAssignment_1_6_2"
    // InternalDockerCompose.g:12401:1: rule__VolumeConnector_long__SizeAssignment_1_6_2 : ( ruleEInt ) ;
    public final void rule__VolumeConnector_long__SizeAssignment_1_6_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12405:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:12406:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:12406:2: ( ruleEInt )
            // InternalDockerCompose.g:12407:3: ruleEInt
            {
             before(grammarAccess.getVolumeConnector_longAccess().getSizeEIntParserRuleCall_1_6_2_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_longAccess().getSizeEIntParserRuleCall_1_6_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__SizeAssignment_1_6_2"


    // $ANTLR start "rule__VolumeConnector_short__VolumeAssignment_1"
    // InternalDockerCompose.g:12416:1: rule__VolumeConnector_short__VolumeAssignment_1 : ( ( ruleEString ) ) ;
    public final void rule__VolumeConnector_short__VolumeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12420:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:12421:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:12421:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:12422:3: ( ruleEString )
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getVolumeVolumeCrossReference_1_0()); 
            // InternalDockerCompose.g:12423:3: ( ruleEString )
            // InternalDockerCompose.g:12424:4: ruleEString
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getVolumeVolumeEStringParserRuleCall_1_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_shortAccess().getVolumeVolumeEStringParserRuleCall_1_0_1()); 

            }

             after(grammarAccess.getVolumeConnector_shortAccess().getVolumeVolumeCrossReference_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__VolumeAssignment_1"


    // $ANTLR start "rule__VolumeConnector_short__Container_pathAssignment_3"
    // InternalDockerCompose.g:12435:1: rule__VolumeConnector_short__Container_pathAssignment_3 : ( rulePATH ) ;
    public final void rule__VolumeConnector_short__Container_pathAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12439:1: ( ( rulePATH ) )
            // InternalDockerCompose.g:12440:2: ( rulePATH )
            {
            // InternalDockerCompose.g:12440:2: ( rulePATH )
            // InternalDockerCompose.g:12441:3: rulePATH
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getContainer_pathPATHParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_shortAccess().getContainer_pathPATHParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Container_pathAssignment_3"


    // $ANTLR start "rule__VolumeConnector_short__Access_modeAssignment_4_1"
    // InternalDockerCompose.g:12450:1: rule__VolumeConnector_short__Access_modeAssignment_4_1 : ( ruleAccessMode ) ;
    public final void rule__VolumeConnector_short__Access_modeAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12454:1: ( ( ruleAccessMode ) )
            // InternalDockerCompose.g:12455:2: ( ruleAccessMode )
            {
            // InternalDockerCompose.g:12455:2: ( ruleAccessMode )
            // InternalDockerCompose.g:12456:3: ruleAccessMode
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getAccess_modeAccessModeEnumRuleCall_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleAccessMode();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_shortAccess().getAccess_modeAccessModeEnumRuleCall_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Access_modeAssignment_4_1"


    // $ANTLR start "rule__ConfigConnector_long__ConfigAssignment_1_0_1"
    // InternalDockerCompose.g:12465:1: rule__ConfigConnector_long__ConfigAssignment_1_0_1 : ( ( ruleEString ) ) ;
    public final void rule__ConfigConnector_long__ConfigAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12469:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:12470:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:12470:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:12471:3: ( ruleEString )
            {
             before(grammarAccess.getConfigConnector_longAccess().getConfigConfigCrossReference_1_0_1_0()); 
            // InternalDockerCompose.g:12472:3: ( ruleEString )
            // InternalDockerCompose.g:12473:4: ruleEString
            {
             before(grammarAccess.getConfigConnector_longAccess().getConfigConfigEStringParserRuleCall_1_0_1_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getConfigConnector_longAccess().getConfigConfigEStringParserRuleCall_1_0_1_0_1()); 

            }

             after(grammarAccess.getConfigConnector_longAccess().getConfigConfigCrossReference_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__ConfigAssignment_1_0_1"


    // $ANTLR start "rule__ConfigConnector_long__TargetAssignment_1_1_1"
    // InternalDockerCompose.g:12484:1: rule__ConfigConnector_long__TargetAssignment_1_1_1 : ( rulePATH ) ;
    public final void rule__ConfigConnector_long__TargetAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12488:1: ( ( rulePATH ) )
            // InternalDockerCompose.g:12489:2: ( rulePATH )
            {
            // InternalDockerCompose.g:12489:2: ( rulePATH )
            // InternalDockerCompose.g:12490:3: rulePATH
            {
             before(grammarAccess.getConfigConnector_longAccess().getTargetPATHParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getConfigConnector_longAccess().getTargetPATHParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__TargetAssignment_1_1_1"


    // $ANTLR start "rule__ConfigConnector_long__UidAssignment_1_2_1"
    // InternalDockerCompose.g:12499:1: rule__ConfigConnector_long__UidAssignment_1_2_1 : ( RULE_QUOTED_INT ) ;
    public final void rule__ConfigConnector_long__UidAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12503:1: ( ( RULE_QUOTED_INT ) )
            // InternalDockerCompose.g:12504:2: ( RULE_QUOTED_INT )
            {
            // InternalDockerCompose.g:12504:2: ( RULE_QUOTED_INT )
            // InternalDockerCompose.g:12505:3: RULE_QUOTED_INT
            {
             before(grammarAccess.getConfigConnector_longAccess().getUidQUOTED_INTTerminalRuleCall_1_2_1_0()); 
            match(input,RULE_QUOTED_INT,FOLLOW_2); 
             after(grammarAccess.getConfigConnector_longAccess().getUidQUOTED_INTTerminalRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__UidAssignment_1_2_1"


    // $ANTLR start "rule__ConfigConnector_long__GidAssignment_1_3_1"
    // InternalDockerCompose.g:12514:1: rule__ConfigConnector_long__GidAssignment_1_3_1 : ( RULE_QUOTED_INT ) ;
    public final void rule__ConfigConnector_long__GidAssignment_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12518:1: ( ( RULE_QUOTED_INT ) )
            // InternalDockerCompose.g:12519:2: ( RULE_QUOTED_INT )
            {
            // InternalDockerCompose.g:12519:2: ( RULE_QUOTED_INT )
            // InternalDockerCompose.g:12520:3: RULE_QUOTED_INT
            {
             before(grammarAccess.getConfigConnector_longAccess().getGidQUOTED_INTTerminalRuleCall_1_3_1_0()); 
            match(input,RULE_QUOTED_INT,FOLLOW_2); 
             after(grammarAccess.getConfigConnector_longAccess().getGidQUOTED_INTTerminalRuleCall_1_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__GidAssignment_1_3_1"


    // $ANTLR start "rule__ConfigConnector_long__ModeAssignment_1_4_1"
    // InternalDockerCompose.g:12529:1: rule__ConfigConnector_long__ModeAssignment_1_4_1 : ( ruleEInt ) ;
    public final void rule__ConfigConnector_long__ModeAssignment_1_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12533:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:12534:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:12534:2: ( ruleEInt )
            // InternalDockerCompose.g:12535:3: ruleEInt
            {
             before(grammarAccess.getConfigConnector_longAccess().getModeEIntParserRuleCall_1_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getConfigConnector_longAccess().getModeEIntParserRuleCall_1_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__ModeAssignment_1_4_1"


    // $ANTLR start "rule__ConfigConnector_short__ConfigAssignment_1"
    // InternalDockerCompose.g:12544:1: rule__ConfigConnector_short__ConfigAssignment_1 : ( ( ruleEString ) ) ;
    public final void rule__ConfigConnector_short__ConfigAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12548:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:12549:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:12549:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:12550:3: ( ruleEString )
            {
             before(grammarAccess.getConfigConnector_shortAccess().getConfigConfigCrossReference_1_0()); 
            // InternalDockerCompose.g:12551:3: ( ruleEString )
            // InternalDockerCompose.g:12552:4: ruleEString
            {
             before(grammarAccess.getConfigConnector_shortAccess().getConfigConfigEStringParserRuleCall_1_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getConfigConnector_shortAccess().getConfigConfigEStringParserRuleCall_1_0_1()); 

            }

             after(grammarAccess.getConfigConnector_shortAccess().getConfigConfigCrossReference_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_short__ConfigAssignment_1"


    // $ANTLR start "rule__SecretConnector_long__SecretAssignment_1_0_1"
    // InternalDockerCompose.g:12563:1: rule__SecretConnector_long__SecretAssignment_1_0_1 : ( ( ruleEString ) ) ;
    public final void rule__SecretConnector_long__SecretAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12567:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:12568:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:12568:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:12569:3: ( ruleEString )
            {
             before(grammarAccess.getSecretConnector_longAccess().getSecretSecretCrossReference_1_0_1_0()); 
            // InternalDockerCompose.g:12570:3: ( ruleEString )
            // InternalDockerCompose.g:12571:4: ruleEString
            {
             before(grammarAccess.getSecretConnector_longAccess().getSecretSecretEStringParserRuleCall_1_0_1_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getSecretConnector_longAccess().getSecretSecretEStringParserRuleCall_1_0_1_0_1()); 

            }

             after(grammarAccess.getSecretConnector_longAccess().getSecretSecretCrossReference_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__SecretAssignment_1_0_1"


    // $ANTLR start "rule__SecretConnector_long__TargetAssignment_1_1_1"
    // InternalDockerCompose.g:12582:1: rule__SecretConnector_long__TargetAssignment_1_1_1 : ( rulePATH ) ;
    public final void rule__SecretConnector_long__TargetAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12586:1: ( ( rulePATH ) )
            // InternalDockerCompose.g:12587:2: ( rulePATH )
            {
            // InternalDockerCompose.g:12587:2: ( rulePATH )
            // InternalDockerCompose.g:12588:3: rulePATH
            {
             before(grammarAccess.getSecretConnector_longAccess().getTargetPATHParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getSecretConnector_longAccess().getTargetPATHParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__TargetAssignment_1_1_1"


    // $ANTLR start "rule__SecretConnector_long__UidAssignment_1_2_1"
    // InternalDockerCompose.g:12597:1: rule__SecretConnector_long__UidAssignment_1_2_1 : ( RULE_QUOTED_INT ) ;
    public final void rule__SecretConnector_long__UidAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12601:1: ( ( RULE_QUOTED_INT ) )
            // InternalDockerCompose.g:12602:2: ( RULE_QUOTED_INT )
            {
            // InternalDockerCompose.g:12602:2: ( RULE_QUOTED_INT )
            // InternalDockerCompose.g:12603:3: RULE_QUOTED_INT
            {
             before(grammarAccess.getSecretConnector_longAccess().getUidQUOTED_INTTerminalRuleCall_1_2_1_0()); 
            match(input,RULE_QUOTED_INT,FOLLOW_2); 
             after(grammarAccess.getSecretConnector_longAccess().getUidQUOTED_INTTerminalRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__UidAssignment_1_2_1"


    // $ANTLR start "rule__SecretConnector_long__GidAssignment_1_3_1"
    // InternalDockerCompose.g:12612:1: rule__SecretConnector_long__GidAssignment_1_3_1 : ( RULE_QUOTED_INT ) ;
    public final void rule__SecretConnector_long__GidAssignment_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12616:1: ( ( RULE_QUOTED_INT ) )
            // InternalDockerCompose.g:12617:2: ( RULE_QUOTED_INT )
            {
            // InternalDockerCompose.g:12617:2: ( RULE_QUOTED_INT )
            // InternalDockerCompose.g:12618:3: RULE_QUOTED_INT
            {
             before(grammarAccess.getSecretConnector_longAccess().getGidQUOTED_INTTerminalRuleCall_1_3_1_0()); 
            match(input,RULE_QUOTED_INT,FOLLOW_2); 
             after(grammarAccess.getSecretConnector_longAccess().getGidQUOTED_INTTerminalRuleCall_1_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__GidAssignment_1_3_1"


    // $ANTLR start "rule__SecretConnector_long__ModeAssignment_1_4_1"
    // InternalDockerCompose.g:12627:1: rule__SecretConnector_long__ModeAssignment_1_4_1 : ( ruleEInt ) ;
    public final void rule__SecretConnector_long__ModeAssignment_1_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12631:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:12632:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:12632:2: ( ruleEInt )
            // InternalDockerCompose.g:12633:3: ruleEInt
            {
             before(grammarAccess.getSecretConnector_longAccess().getModeEIntParserRuleCall_1_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getSecretConnector_longAccess().getModeEIntParserRuleCall_1_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__ModeAssignment_1_4_1"


    // $ANTLR start "rule__SecretConnector_short__SecretAssignment_1"
    // InternalDockerCompose.g:12642:1: rule__SecretConnector_short__SecretAssignment_1 : ( ( ruleEString ) ) ;
    public final void rule__SecretConnector_short__SecretAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12646:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:12647:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:12647:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:12648:3: ( ruleEString )
            {
             before(grammarAccess.getSecretConnector_shortAccess().getSecretSecretCrossReference_1_0()); 
            // InternalDockerCompose.g:12649:3: ( ruleEString )
            // InternalDockerCompose.g:12650:4: ruleEString
            {
             before(grammarAccess.getSecretConnector_shortAccess().getSecretSecretEStringParserRuleCall_1_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getSecretConnector_shortAccess().getSecretSecretEStringParserRuleCall_1_0_1()); 

            }

             after(grammarAccess.getSecretConnector_shortAccess().getSecretSecretCrossReference_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_short__SecretAssignment_1"


    // $ANTLR start "rule__Network__NameAssignment_1"
    // InternalDockerCompose.g:12661:1: rule__Network__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__Network__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12665:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12666:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12666:2: ( ruleEString )
            // InternalDockerCompose.g:12667:3: ruleEString
            {
             before(grammarAccess.getNetworkAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__NameAssignment_1"


    // $ANTLR start "rule__Network__DriverAssignment_3_1_0_1"
    // InternalDockerCompose.g:12676:1: rule__Network__DriverAssignment_3_1_0_1 : ( ruleEString ) ;
    public final void rule__Network__DriverAssignment_3_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12680:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12681:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12681:2: ( ruleEString )
            // InternalDockerCompose.g:12682:3: ruleEString
            {
             before(grammarAccess.getNetworkAccess().getDriverEStringParserRuleCall_3_1_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getDriverEStringParserRuleCall_3_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__DriverAssignment_3_1_0_1"


    // $ANTLR start "rule__Network__AttachableAssignment_3_1_1_1"
    // InternalDockerCompose.g:12691:1: rule__Network__AttachableAssignment_3_1_1_1 : ( ruleEBoolean ) ;
    public final void rule__Network__AttachableAssignment_3_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12695:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:12696:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:12696:2: ( ruleEBoolean )
            // InternalDockerCompose.g:12697:3: ruleEBoolean
            {
             before(grammarAccess.getNetworkAccess().getAttachableEBooleanParserRuleCall_3_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getAttachableEBooleanParserRuleCall_3_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__AttachableAssignment_3_1_1_1"


    // $ANTLR start "rule__Network__Enable_ipv6Assignment_3_1_2_1"
    // InternalDockerCompose.g:12706:1: rule__Network__Enable_ipv6Assignment_3_1_2_1 : ( ruleEBoolean ) ;
    public final void rule__Network__Enable_ipv6Assignment_3_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12710:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:12711:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:12711:2: ( ruleEBoolean )
            // InternalDockerCompose.g:12712:3: ruleEBoolean
            {
             before(grammarAccess.getNetworkAccess().getEnable_ipv6EBooleanParserRuleCall_3_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getEnable_ipv6EBooleanParserRuleCall_3_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Enable_ipv6Assignment_3_1_2_1"


    // $ANTLR start "rule__Network__InternalAssignment_3_1_3_1"
    // InternalDockerCompose.g:12721:1: rule__Network__InternalAssignment_3_1_3_1 : ( ruleEBoolean ) ;
    public final void rule__Network__InternalAssignment_3_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12725:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:12726:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:12726:2: ( ruleEBoolean )
            // InternalDockerCompose.g:12727:3: ruleEBoolean
            {
             before(grammarAccess.getNetworkAccess().getInternalEBooleanParserRuleCall_3_1_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getInternalEBooleanParserRuleCall_3_1_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__InternalAssignment_3_1_3_1"


    // $ANTLR start "rule__Network__ExternalAssignment_3_1_4_1"
    // InternalDockerCompose.g:12736:1: rule__Network__ExternalAssignment_3_1_4_1 : ( ruleEBoolean ) ;
    public final void rule__Network__ExternalAssignment_3_1_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12740:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:12741:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:12741:2: ( ruleEBoolean )
            // InternalDockerCompose.g:12742:3: ruleEBoolean
            {
             before(grammarAccess.getNetworkAccess().getExternalEBooleanParserRuleCall_3_1_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getExternalEBooleanParserRuleCall_3_1_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__ExternalAssignment_3_1_4_1"


    // $ANTLR start "rule__Network__Network_nameAssignment_3_1_5_1"
    // InternalDockerCompose.g:12751:1: rule__Network__Network_nameAssignment_3_1_5_1 : ( ruleEString ) ;
    public final void rule__Network__Network_nameAssignment_3_1_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12755:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12756:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12756:2: ( ruleEString )
            // InternalDockerCompose.g:12757:3: ruleEString
            {
             before(grammarAccess.getNetworkAccess().getNetwork_nameEStringParserRuleCall_3_1_5_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getNetwork_nameEStringParserRuleCall_3_1_5_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Network_nameAssignment_3_1_5_1"


    // $ANTLR start "rule__Network__LabelsAssignment_3_1_6_1"
    // InternalDockerCompose.g:12766:1: rule__Network__LabelsAssignment_3_1_6_1 : ( ruleNetworkLabel ) ;
    public final void rule__Network__LabelsAssignment_3_1_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12770:1: ( ( ruleNetworkLabel ) )
            // InternalDockerCompose.g:12771:2: ( ruleNetworkLabel )
            {
            // InternalDockerCompose.g:12771:2: ( ruleNetworkLabel )
            // InternalDockerCompose.g:12772:3: ruleNetworkLabel
            {
             before(grammarAccess.getNetworkAccess().getLabelsNetworkLabelParserRuleCall_3_1_6_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNetworkLabel();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getLabelsNetworkLabelParserRuleCall_3_1_6_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__LabelsAssignment_3_1_6_1"


    // $ANTLR start "rule__Network__Driver_optsAssignment_3_1_7_1"
    // InternalDockerCompose.g:12781:1: rule__Network__Driver_optsAssignment_3_1_7_1 : ( ruleNetworkDriverOpt ) ;
    public final void rule__Network__Driver_optsAssignment_3_1_7_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12785:1: ( ( ruleNetworkDriverOpt ) )
            // InternalDockerCompose.g:12786:2: ( ruleNetworkDriverOpt )
            {
            // InternalDockerCompose.g:12786:2: ( ruleNetworkDriverOpt )
            // InternalDockerCompose.g:12787:3: ruleNetworkDriverOpt
            {
             before(grammarAccess.getNetworkAccess().getDriver_optsNetworkDriverOptParserRuleCall_3_1_7_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNetworkDriverOpt();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getDriver_optsNetworkDriverOptParserRuleCall_3_1_7_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Driver_optsAssignment_3_1_7_1"


    // $ANTLR start "rule__Network__IpamAssignment_3_1_8_1"
    // InternalDockerCompose.g:12796:1: rule__Network__IpamAssignment_3_1_8_1 : ( ruleIPAM ) ;
    public final void rule__Network__IpamAssignment_3_1_8_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12800:1: ( ( ruleIPAM ) )
            // InternalDockerCompose.g:12801:2: ( ruleIPAM )
            {
            // InternalDockerCompose.g:12801:2: ( ruleIPAM )
            // InternalDockerCompose.g:12802:3: ruleIPAM
            {
             before(grammarAccess.getNetworkAccess().getIpamIPAMParserRuleCall_3_1_8_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIPAM();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getIpamIPAMParserRuleCall_3_1_8_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__IpamAssignment_3_1_8_1"


    // $ANTLR start "rule__Volume__NameAssignment_1"
    // InternalDockerCompose.g:12811:1: rule__Volume__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__Volume__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12815:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12816:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12816:2: ( ruleEString )
            // InternalDockerCompose.g:12817:3: ruleEString
            {
             before(grammarAccess.getVolumeAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__NameAssignment_1"


    // $ANTLR start "rule__Volume__ExternalAssignment_3_0_1"
    // InternalDockerCompose.g:12826:1: rule__Volume__ExternalAssignment_3_0_1 : ( ruleEBoolean ) ;
    public final void rule__Volume__ExternalAssignment_3_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12830:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:12831:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:12831:2: ( ruleEBoolean )
            // InternalDockerCompose.g:12832:3: ruleEBoolean
            {
             before(grammarAccess.getVolumeAccess().getExternalEBooleanParserRuleCall_3_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getVolumeAccess().getExternalEBooleanParserRuleCall_3_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__ExternalAssignment_3_0_1"


    // $ANTLR start "rule__Volume__DriverAssignment_3_1_1"
    // InternalDockerCompose.g:12841:1: rule__Volume__DriverAssignment_3_1_1 : ( ruleEString ) ;
    public final void rule__Volume__DriverAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12845:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12846:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12846:2: ( ruleEString )
            // InternalDockerCompose.g:12847:3: ruleEString
            {
             before(grammarAccess.getVolumeAccess().getDriverEStringParserRuleCall_3_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeAccess().getDriverEStringParserRuleCall_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__DriverAssignment_3_1_1"


    // $ANTLR start "rule__Volume__Volume_nameAssignment_3_2_1"
    // InternalDockerCompose.g:12856:1: rule__Volume__Volume_nameAssignment_3_2_1 : ( ruleEString ) ;
    public final void rule__Volume__Volume_nameAssignment_3_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12860:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12861:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12861:2: ( ruleEString )
            // InternalDockerCompose.g:12862:3: ruleEString
            {
             before(grammarAccess.getVolumeAccess().getVolume_nameEStringParserRuleCall_3_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeAccess().getVolume_nameEStringParserRuleCall_3_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Volume_nameAssignment_3_2_1"


    // $ANTLR start "rule__Volume__LabelsAssignment_3_3_1"
    // InternalDockerCompose.g:12871:1: rule__Volume__LabelsAssignment_3_3_1 : ( ruleVolumeLabel ) ;
    public final void rule__Volume__LabelsAssignment_3_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12875:1: ( ( ruleVolumeLabel ) )
            // InternalDockerCompose.g:12876:2: ( ruleVolumeLabel )
            {
            // InternalDockerCompose.g:12876:2: ( ruleVolumeLabel )
            // InternalDockerCompose.g:12877:3: ruleVolumeLabel
            {
             before(grammarAccess.getVolumeAccess().getLabelsVolumeLabelParserRuleCall_3_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleVolumeLabel();

            state._fsp--;

             after(grammarAccess.getVolumeAccess().getLabelsVolumeLabelParserRuleCall_3_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__LabelsAssignment_3_3_1"


    // $ANTLR start "rule__Volume__Driver_optsAssignment_3_4_1"
    // InternalDockerCompose.g:12886:1: rule__Volume__Driver_optsAssignment_3_4_1 : ( ruleVolumeDriverOpt ) ;
    public final void rule__Volume__Driver_optsAssignment_3_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12890:1: ( ( ruleVolumeDriverOpt ) )
            // InternalDockerCompose.g:12891:2: ( ruleVolumeDriverOpt )
            {
            // InternalDockerCompose.g:12891:2: ( ruleVolumeDriverOpt )
            // InternalDockerCompose.g:12892:3: ruleVolumeDriverOpt
            {
             before(grammarAccess.getVolumeAccess().getDriver_optsVolumeDriverOptParserRuleCall_3_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleVolumeDriverOpt();

            state._fsp--;

             after(grammarAccess.getVolumeAccess().getDriver_optsVolumeDriverOptParserRuleCall_3_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Driver_optsAssignment_3_4_1"


    // $ANTLR start "rule__Config__NameAssignment_1"
    // InternalDockerCompose.g:12901:1: rule__Config__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__Config__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12905:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12906:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12906:2: ( ruleEString )
            // InternalDockerCompose.g:12907:3: ruleEString
            {
             before(grammarAccess.getConfigAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getConfigAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__NameAssignment_1"


    // $ANTLR start "rule__Config__ExternalAssignment_3_0_1"
    // InternalDockerCompose.g:12916:1: rule__Config__ExternalAssignment_3_0_1 : ( ruleEBoolean ) ;
    public final void rule__Config__ExternalAssignment_3_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12920:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:12921:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:12921:2: ( ruleEBoolean )
            // InternalDockerCompose.g:12922:3: ruleEBoolean
            {
             before(grammarAccess.getConfigAccess().getExternalEBooleanParserRuleCall_3_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getConfigAccess().getExternalEBooleanParserRuleCall_3_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__ExternalAssignment_3_0_1"


    // $ANTLR start "rule__Config__FileAssignment_3_1_1"
    // InternalDockerCompose.g:12931:1: rule__Config__FileAssignment_3_1_1 : ( ruleEString ) ;
    public final void rule__Config__FileAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12935:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12936:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12936:2: ( ruleEString )
            // InternalDockerCompose.g:12937:3: ruleEString
            {
             before(grammarAccess.getConfigAccess().getFileEStringParserRuleCall_3_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getConfigAccess().getFileEStringParserRuleCall_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__FileAssignment_3_1_1"


    // $ANTLR start "rule__Config__Config_nameAssignment_3_2_1"
    // InternalDockerCompose.g:12946:1: rule__Config__Config_nameAssignment_3_2_1 : ( ruleEString ) ;
    public final void rule__Config__Config_nameAssignment_3_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12950:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12951:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12951:2: ( ruleEString )
            // InternalDockerCompose.g:12952:3: ruleEString
            {
             before(grammarAccess.getConfigAccess().getConfig_nameEStringParserRuleCall_3_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getConfigAccess().getConfig_nameEStringParserRuleCall_3_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Config_nameAssignment_3_2_1"


    // $ANTLR start "rule__Secret__NameAssignment_1"
    // InternalDockerCompose.g:12961:1: rule__Secret__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__Secret__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12965:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12966:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12966:2: ( ruleEString )
            // InternalDockerCompose.g:12967:3: ruleEString
            {
             before(grammarAccess.getSecretAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getSecretAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__NameAssignment_1"


    // $ANTLR start "rule__Secret__ExternalAssignment_3_0_1"
    // InternalDockerCompose.g:12976:1: rule__Secret__ExternalAssignment_3_0_1 : ( ruleEBoolean ) ;
    public final void rule__Secret__ExternalAssignment_3_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12980:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:12981:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:12981:2: ( ruleEBoolean )
            // InternalDockerCompose.g:12982:3: ruleEBoolean
            {
             before(grammarAccess.getSecretAccess().getExternalEBooleanParserRuleCall_3_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getSecretAccess().getExternalEBooleanParserRuleCall_3_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__ExternalAssignment_3_0_1"


    // $ANTLR start "rule__Secret__FileAssignment_3_1_1"
    // InternalDockerCompose.g:12991:1: rule__Secret__FileAssignment_3_1_1 : ( ruleEString ) ;
    public final void rule__Secret__FileAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12995:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12996:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12996:2: ( ruleEString )
            // InternalDockerCompose.g:12997:3: ruleEString
            {
             before(grammarAccess.getSecretAccess().getFileEStringParserRuleCall_3_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getSecretAccess().getFileEStringParserRuleCall_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__FileAssignment_3_1_1"


    // $ANTLR start "rule__Secret__EnvironmentAssignment_3_2_1"
    // InternalDockerCompose.g:13006:1: rule__Secret__EnvironmentAssignment_3_2_1 : ( ruleEString ) ;
    public final void rule__Secret__EnvironmentAssignment_3_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13010:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:13011:2: ( ruleEString )
            {
            // InternalDockerCompose.g:13011:2: ( ruleEString )
            // InternalDockerCompose.g:13012:3: ruleEString
            {
             before(grammarAccess.getSecretAccess().getEnvironmentEStringParserRuleCall_3_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getSecretAccess().getEnvironmentEStringParserRuleCall_3_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__EnvironmentAssignment_3_2_1"


    // $ANTLR start "rule__Secret__Secret_nameAssignment_3_3_1"
    // InternalDockerCompose.g:13021:1: rule__Secret__Secret_nameAssignment_3_3_1 : ( ruleEString ) ;
    public final void rule__Secret__Secret_nameAssignment_3_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13025:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:13026:2: ( ruleEString )
            {
            // InternalDockerCompose.g:13026:2: ( ruleEString )
            // InternalDockerCompose.g:13027:3: ruleEString
            {
             before(grammarAccess.getSecretAccess().getSecret_nameEStringParserRuleCall_3_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getSecretAccess().getSecret_nameEStringParserRuleCall_3_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Secret_nameAssignment_3_3_1"


    // $ANTLR start "rule__VolumeLabel__NameAssignment_1"
    // InternalDockerCompose.g:13036:1: rule__VolumeLabel__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__VolumeLabel__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13040:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:13041:2: ( ruleEString )
            {
            // InternalDockerCompose.g:13041:2: ( ruleEString )
            // InternalDockerCompose.g:13042:3: ruleEString
            {
             before(grammarAccess.getVolumeLabelAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeLabelAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__NameAssignment_1"


    // $ANTLR start "rule__VolumeLabel__ValueAssignment_3"
    // InternalDockerCompose.g:13051:1: rule__VolumeLabel__ValueAssignment_3 : ( ruleEString ) ;
    public final void rule__VolumeLabel__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13055:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:13056:2: ( ruleEString )
            {
            // InternalDockerCompose.g:13056:2: ( ruleEString )
            // InternalDockerCompose.g:13057:3: ruleEString
            {
             before(grammarAccess.getVolumeLabelAccess().getValueEStringParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeLabelAccess().getValueEStringParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__ValueAssignment_3"


    // $ANTLR start "rule__VolumeDriverOpt__NameAssignment_1"
    // InternalDockerCompose.g:13066:1: rule__VolumeDriverOpt__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__VolumeDriverOpt__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13070:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:13071:2: ( ruleEString )
            {
            // InternalDockerCompose.g:13071:2: ( ruleEString )
            // InternalDockerCompose.g:13072:3: ruleEString
            {
             before(grammarAccess.getVolumeDriverOptAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeDriverOptAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__NameAssignment_1"


    // $ANTLR start "rule__VolumeDriverOpt__ValueAssignment_3"
    // InternalDockerCompose.g:13081:1: rule__VolumeDriverOpt__ValueAssignment_3 : ( ruleEString ) ;
    public final void rule__VolumeDriverOpt__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13085:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:13086:2: ( ruleEString )
            {
            // InternalDockerCompose.g:13086:2: ( ruleEString )
            // InternalDockerCompose.g:13087:3: ruleEString
            {
             before(grammarAccess.getVolumeDriverOptAccess().getValueEStringParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeDriverOptAccess().getValueEStringParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__ValueAssignment_3"


    // $ANTLR start "rule__NetworkLabel__NameAssignment_1"
    // InternalDockerCompose.g:13096:1: rule__NetworkLabel__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__NetworkLabel__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13100:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:13101:2: ( ruleEString )
            {
            // InternalDockerCompose.g:13101:2: ( ruleEString )
            // InternalDockerCompose.g:13102:3: ruleEString
            {
             before(grammarAccess.getNetworkLabelAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkLabelAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__NameAssignment_1"


    // $ANTLR start "rule__NetworkLabel__ValueAssignment_3"
    // InternalDockerCompose.g:13111:1: rule__NetworkLabel__ValueAssignment_3 : ( ruleEString ) ;
    public final void rule__NetworkLabel__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13115:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:13116:2: ( ruleEString )
            {
            // InternalDockerCompose.g:13116:2: ( ruleEString )
            // InternalDockerCompose.g:13117:3: ruleEString
            {
             before(grammarAccess.getNetworkLabelAccess().getValueEStringParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkLabelAccess().getValueEStringParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__ValueAssignment_3"


    // $ANTLR start "rule__NetworkDriverOpt__NameAssignment_1"
    // InternalDockerCompose.g:13126:1: rule__NetworkDriverOpt__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__NetworkDriverOpt__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13130:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:13131:2: ( ruleEString )
            {
            // InternalDockerCompose.g:13131:2: ( ruleEString )
            // InternalDockerCompose.g:13132:3: ruleEString
            {
             before(grammarAccess.getNetworkDriverOptAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkDriverOptAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__NameAssignment_1"


    // $ANTLR start "rule__NetworkDriverOpt__ValueAssignment_3"
    // InternalDockerCompose.g:13141:1: rule__NetworkDriverOpt__ValueAssignment_3 : ( ruleEString ) ;
    public final void rule__NetworkDriverOpt__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13145:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:13146:2: ( ruleEString )
            {
            // InternalDockerCompose.g:13146:2: ( ruleEString )
            // InternalDockerCompose.g:13147:3: ruleEString
            {
             before(grammarAccess.getNetworkDriverOptAccess().getValueEStringParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkDriverOptAccess().getValueEStringParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__ValueAssignment_3"


    // $ANTLR start "rule__IPAM__DriverAssignment_1_0_1"
    // InternalDockerCompose.g:13156:1: rule__IPAM__DriverAssignment_1_0_1 : ( ruleEString ) ;
    public final void rule__IPAM__DriverAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13160:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:13161:2: ( ruleEString )
            {
            // InternalDockerCompose.g:13161:2: ( ruleEString )
            // InternalDockerCompose.g:13162:3: ruleEString
            {
             before(grammarAccess.getIPAMAccess().getDriverEStringParserRuleCall_1_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getIPAMAccess().getDriverEStringParserRuleCall_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__DriverAssignment_1_0_1"


    // $ANTLR start "rule__IPAM__ConfigsAssignment_1_1_1_1"
    // InternalDockerCompose.g:13171:1: rule__IPAM__ConfigsAssignment_1_1_1_1 : ( ruleIPAMConfig ) ;
    public final void rule__IPAM__ConfigsAssignment_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13175:1: ( ( ruleIPAMConfig ) )
            // InternalDockerCompose.g:13176:2: ( ruleIPAMConfig )
            {
            // InternalDockerCompose.g:13176:2: ( ruleIPAMConfig )
            // InternalDockerCompose.g:13177:3: ruleIPAMConfig
            {
             before(grammarAccess.getIPAMAccess().getConfigsIPAMConfigParserRuleCall_1_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIPAMConfig();

            state._fsp--;

             after(grammarAccess.getIPAMAccess().getConfigsIPAMConfigParserRuleCall_1_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__ConfigsAssignment_1_1_1_1"


    // $ANTLR start "rule__IPAM__OptionsAssignment_1_2_1"
    // InternalDockerCompose.g:13186:1: rule__IPAM__OptionsAssignment_1_2_1 : ( ruleIPAMOption ) ;
    public final void rule__IPAM__OptionsAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13190:1: ( ( ruleIPAMOption ) )
            // InternalDockerCompose.g:13191:2: ( ruleIPAMOption )
            {
            // InternalDockerCompose.g:13191:2: ( ruleIPAMOption )
            // InternalDockerCompose.g:13192:3: ruleIPAMOption
            {
             before(grammarAccess.getIPAMAccess().getOptionsIPAMOptionParserRuleCall_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIPAMOption();

            state._fsp--;

             after(grammarAccess.getIPAMAccess().getOptionsIPAMOptionParserRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__OptionsAssignment_1_2_1"


    // $ANTLR start "rule__IPAMConfig__SubnetAssignment_1_0_1"
    // InternalDockerCompose.g:13201:1: rule__IPAMConfig__SubnetAssignment_1_0_1 : ( ruleNetworkAddress ) ;
    public final void rule__IPAMConfig__SubnetAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13205:1: ( ( ruleNetworkAddress ) )
            // InternalDockerCompose.g:13206:2: ( ruleNetworkAddress )
            {
            // InternalDockerCompose.g:13206:2: ( ruleNetworkAddress )
            // InternalDockerCompose.g:13207:3: ruleNetworkAddress
            {
             before(grammarAccess.getIPAMConfigAccess().getSubnetNetworkAddressParserRuleCall_1_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNetworkAddress();

            state._fsp--;

             after(grammarAccess.getIPAMConfigAccess().getSubnetNetworkAddressParserRuleCall_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__SubnetAssignment_1_0_1"


    // $ANTLR start "rule__IPAMConfig__Ip_rangeAssignment_1_1_1"
    // InternalDockerCompose.g:13216:1: rule__IPAMConfig__Ip_rangeAssignment_1_1_1 : ( ruleNetworkAddress ) ;
    public final void rule__IPAMConfig__Ip_rangeAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13220:1: ( ( ruleNetworkAddress ) )
            // InternalDockerCompose.g:13221:2: ( ruleNetworkAddress )
            {
            // InternalDockerCompose.g:13221:2: ( ruleNetworkAddress )
            // InternalDockerCompose.g:13222:3: ruleNetworkAddress
            {
             before(grammarAccess.getIPAMConfigAccess().getIp_rangeNetworkAddressParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNetworkAddress();

            state._fsp--;

             after(grammarAccess.getIPAMConfigAccess().getIp_rangeNetworkAddressParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Ip_rangeAssignment_1_1_1"


    // $ANTLR start "rule__IPAMConfig__GatewayAssignment_1_2_1"
    // InternalDockerCompose.g:13231:1: rule__IPAMConfig__GatewayAssignment_1_2_1 : ( ruleDNS ) ;
    public final void rule__IPAMConfig__GatewayAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13235:1: ( ( ruleDNS ) )
            // InternalDockerCompose.g:13236:2: ( ruleDNS )
            {
            // InternalDockerCompose.g:13236:2: ( ruleDNS )
            // InternalDockerCompose.g:13237:3: ruleDNS
            {
             before(grammarAccess.getIPAMConfigAccess().getGatewayDNSParserRuleCall_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getIPAMConfigAccess().getGatewayDNSParserRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__GatewayAssignment_1_2_1"


    // $ANTLR start "rule__IPAMConfig__Aux_addressesAssignment_1_3_1"
    // InternalDockerCompose.g:13246:1: rule__IPAMConfig__Aux_addressesAssignment_1_3_1 : ( ruleIPAMAddress ) ;
    public final void rule__IPAMConfig__Aux_addressesAssignment_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13250:1: ( ( ruleIPAMAddress ) )
            // InternalDockerCompose.g:13251:2: ( ruleIPAMAddress )
            {
            // InternalDockerCompose.g:13251:2: ( ruleIPAMAddress )
            // InternalDockerCompose.g:13252:3: ruleIPAMAddress
            {
             before(grammarAccess.getIPAMConfigAccess().getAux_addressesIPAMAddressParserRuleCall_1_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIPAMAddress();

            state._fsp--;

             after(grammarAccess.getIPAMConfigAccess().getAux_addressesIPAMAddressParserRuleCall_1_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Aux_addressesAssignment_1_3_1"


    // $ANTLR start "rule__IPAMOption__NameAssignment_1"
    // InternalDockerCompose.g:13261:1: rule__IPAMOption__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__IPAMOption__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13265:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:13266:2: ( ruleEString )
            {
            // InternalDockerCompose.g:13266:2: ( ruleEString )
            // InternalDockerCompose.g:13267:3: ruleEString
            {
             before(grammarAccess.getIPAMOptionAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getIPAMOptionAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__NameAssignment_1"


    // $ANTLR start "rule__IPAMOption__ValueAssignment_3"
    // InternalDockerCompose.g:13276:1: rule__IPAMOption__ValueAssignment_3 : ( ruleEString ) ;
    public final void rule__IPAMOption__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13280:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:13281:2: ( ruleEString )
            {
            // InternalDockerCompose.g:13281:2: ( ruleEString )
            // InternalDockerCompose.g:13282:3: ruleEString
            {
             before(grammarAccess.getIPAMOptionAccess().getValueEStringParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getIPAMOptionAccess().getValueEStringParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__ValueAssignment_3"


    // $ANTLR start "rule__IPAMAddress__NameAssignment_1"
    // InternalDockerCompose.g:13291:1: rule__IPAMAddress__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__IPAMAddress__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13295:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:13296:2: ( ruleEString )
            {
            // InternalDockerCompose.g:13296:2: ( ruleEString )
            // InternalDockerCompose.g:13297:3: ruleEString
            {
             before(grammarAccess.getIPAMAddressAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getIPAMAddressAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__NameAssignment_1"


    // $ANTLR start "rule__IPAMAddress__DnsAssignment_3"
    // InternalDockerCompose.g:13306:1: rule__IPAMAddress__DnsAssignment_3 : ( ruleDNS ) ;
    public final void rule__IPAMAddress__DnsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13310:1: ( ( ruleDNS ) )
            // InternalDockerCompose.g:13311:2: ( ruleDNS )
            {
            // InternalDockerCompose.g:13311:2: ( ruleDNS )
            // InternalDockerCompose.g:13312:3: ruleDNS
            {
             before(grammarAccess.getIPAMAddressAccess().getDnsDNSParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getIPAMAddressAccess().getDnsDNSParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__DnsAssignment_3"


    // $ANTLR start "rule__DNS__Dns1Assignment_0"
    // InternalDockerCompose.g:13321:1: rule__DNS__Dns1Assignment_0 : ( ruleEInt ) ;
    public final void rule__DNS__Dns1Assignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13325:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:13326:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:13326:2: ( ruleEInt )
            // InternalDockerCompose.g:13327:3: ruleEInt
            {
             before(grammarAccess.getDNSAccess().getDns1EIntParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getDNSAccess().getDns1EIntParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Dns1Assignment_0"


    // $ANTLR start "rule__DNS__Dns2Assignment_2"
    // InternalDockerCompose.g:13336:1: rule__DNS__Dns2Assignment_2 : ( ruleEInt ) ;
    public final void rule__DNS__Dns2Assignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13340:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:13341:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:13341:2: ( ruleEInt )
            // InternalDockerCompose.g:13342:3: ruleEInt
            {
             before(grammarAccess.getDNSAccess().getDns2EIntParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getDNSAccess().getDns2EIntParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Dns2Assignment_2"


    // $ANTLR start "rule__DNS__Dns3Assignment_4"
    // InternalDockerCompose.g:13351:1: rule__DNS__Dns3Assignment_4 : ( ruleEInt ) ;
    public final void rule__DNS__Dns3Assignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13355:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:13356:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:13356:2: ( ruleEInt )
            // InternalDockerCompose.g:13357:3: ruleEInt
            {
             before(grammarAccess.getDNSAccess().getDns3EIntParserRuleCall_4_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getDNSAccess().getDns3EIntParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Dns3Assignment_4"


    // $ANTLR start "rule__DNS__Dns4Assignment_6"
    // InternalDockerCompose.g:13366:1: rule__DNS__Dns4Assignment_6 : ( ruleEInt ) ;
    public final void rule__DNS__Dns4Assignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13370:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:13371:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:13371:2: ( ruleEInt )
            // InternalDockerCompose.g:13372:3: ruleEInt
            {
             before(grammarAccess.getDNSAccess().getDns4EIntParserRuleCall_6_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getDNSAccess().getDns4EIntParserRuleCall_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Dns4Assignment_6"


    // $ANTLR start "rule__NetworkAddress__Dns1Assignment_0"
    // InternalDockerCompose.g:13381:1: rule__NetworkAddress__Dns1Assignment_0 : ( ruleEInt ) ;
    public final void rule__NetworkAddress__Dns1Assignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13385:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:13386:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:13386:2: ( ruleEInt )
            // InternalDockerCompose.g:13387:3: ruleEInt
            {
             before(grammarAccess.getNetworkAddressAccess().getDns1EIntParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getNetworkAddressAccess().getDns1EIntParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Dns1Assignment_0"


    // $ANTLR start "rule__NetworkAddress__Dns2Assignment_2"
    // InternalDockerCompose.g:13396:1: rule__NetworkAddress__Dns2Assignment_2 : ( ruleEInt ) ;
    public final void rule__NetworkAddress__Dns2Assignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13400:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:13401:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:13401:2: ( ruleEInt )
            // InternalDockerCompose.g:13402:3: ruleEInt
            {
             before(grammarAccess.getNetworkAddressAccess().getDns2EIntParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getNetworkAddressAccess().getDns2EIntParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Dns2Assignment_2"


    // $ANTLR start "rule__NetworkAddress__Dns3Assignment_4"
    // InternalDockerCompose.g:13411:1: rule__NetworkAddress__Dns3Assignment_4 : ( ruleEInt ) ;
    public final void rule__NetworkAddress__Dns3Assignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13415:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:13416:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:13416:2: ( ruleEInt )
            // InternalDockerCompose.g:13417:3: ruleEInt
            {
             before(grammarAccess.getNetworkAddressAccess().getDns3EIntParserRuleCall_4_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getNetworkAddressAccess().getDns3EIntParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Dns3Assignment_4"


    // $ANTLR start "rule__NetworkAddress__Dns4Assignment_6"
    // InternalDockerCompose.g:13426:1: rule__NetworkAddress__Dns4Assignment_6 : ( ruleEInt ) ;
    public final void rule__NetworkAddress__Dns4Assignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13430:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:13431:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:13431:2: ( ruleEInt )
            // InternalDockerCompose.g:13432:3: ruleEInt
            {
             before(grammarAccess.getNetworkAddressAccess().getDns4EIntParserRuleCall_6_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getNetworkAddressAccess().getDns4EIntParserRuleCall_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Dns4Assignment_6"


    // $ANTLR start "rule__NetworkAddress__NetIdAssignment_8"
    // InternalDockerCompose.g:13441:1: rule__NetworkAddress__NetIdAssignment_8 : ( ruleEInt ) ;
    public final void rule__NetworkAddress__NetIdAssignment_8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13445:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:13446:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:13446:2: ( ruleEInt )
            // InternalDockerCompose.g:13447:3: ruleEInt
            {
             before(grammarAccess.getNetworkAddressAccess().getNetIdEIntParserRuleCall_8_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getNetworkAddressAccess().getNetIdEIntParserRuleCall_8_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__NetIdAssignment_8"

    // Delegated rules


    protected DFA32 dfa32 = new DFA32(this);
    protected DFA56 dfa56 = new DFA56(this);
    protected DFA57 dfa57 = new DFA57(this);
    protected DFA58 dfa58 = new DFA58(this);
    protected DFA59 dfa59 = new DFA59(this);
    protected DFA60 dfa60 = new DFA60(this);
    protected DFA61 dfa61 = new DFA61(this);
    protected DFA62 dfa62 = new DFA62(this);
    protected DFA63 dfa63 = new DFA63(this);
    protected DFA64 dfa64 = new DFA64(this);
    protected DFA65 dfa65 = new DFA65(this);
    protected DFA66 dfa66 = new DFA66(this);
    protected DFA67 dfa67 = new DFA67(this);
    protected DFA68 dfa68 = new DFA68(this);
    protected DFA69 dfa69 = new DFA69(this);
    protected DFA70 dfa70 = new DFA70(this);
    protected DFA71 dfa71 = new DFA71(this);
    protected DFA78 dfa78 = new DFA78(this);
    protected DFA79 dfa79 = new DFA79(this);
    protected DFA80 dfa80 = new DFA80(this);
    protected DFA81 dfa81 = new DFA81(this);
    protected DFA82 dfa82 = new DFA82(this);
    protected DFA83 dfa83 = new DFA83(this);
    protected DFA94 dfa94 = new DFA94(this);
    protected DFA95 dfa95 = new DFA95(this);
    protected DFA96 dfa96 = new DFA96(this);
    protected DFA97 dfa97 = new DFA97(this);
    protected DFA98 dfa98 = new DFA98(this);
    protected DFA99 dfa99 = new DFA99(this);
    protected DFA100 dfa100 = new DFA100(this);
    protected DFA101 dfa101 = new DFA101(this);
    protected DFA102 dfa102 = new DFA102(this);
    protected DFA103 dfa103 = new DFA103(this);
    static final String dfa_1s = "\u0085\uffff";
    static final String dfa_2s = "\1\1\4\uffff\1\6\177\uffff";
    static final String dfa_3s = "\1\5\1\uffff\2\53\1\uffff\1\5\1\uffff\1\5\1\4\2\5\1\21\2\17\1\65\5\5\1\65\1\4\1\65\17\uffff\2\5\2\53\1\5\2\53\3\5\1\11\1\4\1\136\1\10\4\uffff\1\72\3\uffff\1\5\1\30\1\uffff\1\17\1\103\1\105\1\107\2\53\1\5\1\uffff\2\12\1\4\2\uffff\1\5\1\uffff\2\12\1\4\3\uffff\1\136\1\4\1\uffff\1\42\10\uffff\1\34\1\17\1\4\13\uffff\1\4\1\136\14\uffff\1\136\2\4\2\136\2\4\2\uffff";
    static final String dfa_4s = "\1\71\1\uffff\2\53\1\uffff\1\76\1\uffff\1\6\1\4\2\6\1\24\2\20\11\65\17\uffff\2\6\2\53\1\6\2\53\1\106\2\112\1\11\1\4\1\136\1\10\4\uffff\1\72\3\uffff\1\6\1\33\1\uffff\1\20\1\103\1\105\1\107\2\53\1\6\1\uffff\2\12\1\4\2\uffff\1\6\1\uffff\2\12\1\4\3\uffff\1\136\1\4\1\uffff\1\44\10\uffff\1\41\1\20\1\4\13\uffff\1\4\1\136\14\uffff\1\136\2\4\2\136\2\4\2\uffff";
    static final String dfa_5s = "\1\uffff\1\2\2\uffff\1\1\1\uffff\1\1\20\uffff\17\1\16\uffff\4\1\1\uffff\3\1\2\uffff\1\1\7\uffff\1\1\3\uffff\2\1\1\uffff\1\1\3\uffff\3\1\2\uffff\1\1\1\uffff\10\1\3\uffff\13\1\2\uffff\14\1\7\uffff\2\1";
    static final String dfa_6s = "\u0085\uffff}>";
    static final String[] dfa_7s = {
            "\1\2\1\3\36\uffff\6\1\1\uffff\11\1\1\4\4\1",
            "",
            "\1\5",
            "\1\5",
            "",
            "\2\6\36\uffff\2\6\1\21\1\22\1\23\1\20\1\uffff\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\4\1\17\1\24\1\25\1\26\1\uffff\4\4",
            "",
            "\1\27\1\30",
            "\1\31",
            "\1\32\1\33",
            "\1\34\1\35",
            "\1\36\1\37\1\40\1\41",
            "\1\42\1\43",
            "\1\44\1\45",
            "\1\46",
            "\1\50\1\51\56\uffff\1\47",
            "\1\53\1\54\56\uffff\1\52",
            "\2\45\56\uffff\1\55",
            "\2\45\56\uffff\1\56",
            "\2\45\56\uffff\1\57",
            "\1\60",
            "\1\62\60\uffff\1\61",
            "\1\63",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\64\1\65",
            "\1\66\1\67",
            "\1\70",
            "\1\70",
            "\1\71\1\72",
            "\1\73",
            "\1\73",
            "\1\103\1\104\54\uffff\1\77\13\uffff\1\74\1\75\1\76\1\100\1\uffff\1\101\1\uffff\1\102",
            "\1\112\1\113\70\uffff\1\105\1\uffff\1\106\6\uffff\1\107\1\110\1\111",
            "\1\121\1\122\70\uffff\1\114\1\uffff\1\115\6\uffff\1\116\1\117\1\120",
            "\1\123",
            "\1\124",
            "\1\125",
            "\1\126",
            "",
            "",
            "",
            "",
            "\1\127",
            "",
            "",
            "",
            "\1\130\1\131",
            "\1\132\1\133\1\134\1\135",
            "",
            "\1\136\1\137",
            "\1\140",
            "\1\141",
            "\1\142",
            "\1\143",
            "\1\143",
            "\1\144\1\145",
            "",
            "\1\146",
            "\1\147",
            "\1\150",
            "",
            "",
            "\1\151\1\152",
            "",
            "\1\153",
            "\1\154",
            "\1\155",
            "",
            "",
            "",
            "\1\156",
            "\1\157",
            "",
            "\1\160\1\161\1\162",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\163\1\164\1\165\1\166\1\167\1\170",
            "\1\171\1\172",
            "\1\173",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\174",
            "\1\175",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\176",
            "\1\177",
            "\1\u0080",
            "\1\u0081",
            "\1\u0082",
            "\1\u0083",
            "\1\u0084",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA32 extends DFA {

        public DFA32(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 32;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "()* loopback of 2560:3: ( rule__Service__NetworksAssignment_3_9_1 )*";
        }
    }
    static final String dfa_8s = "\21\uffff";
    static final String dfa_9s = "\1\47\20\uffff";
    static final String dfa_10s = "\1\71\20\uffff";
    static final String dfa_11s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20";
    static final String dfa_12s = "\1\0\20\uffff}>";
    static final String[] dfa_13s = {
            "\1\13\1\14\1\15\1\12\1\uffff\2\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\11\1\16\1\17\1\20",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA56 extends DFA {

        public DFA56(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 56;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "9588:3: ( ({...}? => ( ( ( rule__Service__Alternatives_3_0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_15__0 ) ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA56_0 = input.LA(1);

                         
                        int index56_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA56_0 >= 44 && LA56_0 <= 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA56_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA56_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA56_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA56_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA56_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA56_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA56_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA56_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( LA56_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 10;}

                        else if ( LA56_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 11;}

                        else if ( LA56_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 12;}

                        else if ( LA56_0 == 41 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA56_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA56_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA56_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                         
                        input.seek(index56_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 56, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_14s = "\31\uffff";
    static final String dfa_15s = "\1\21\30\uffff";
    static final String dfa_16s = "\1\5\11\uffff\4\5\4\uffff\2\53\4\uffff\1\0";
    static final String dfa_17s = "\1\71\11\uffff\4\65\4\uffff\2\53\4\uffff\1\0";
    static final String dfa_18s = "\1\uffff\11\1\4\uffff\3\1\1\2\2\uffff\4\1\1\uffff";
    static final String dfa_19s = "\1\5\11\uffff\1\3\1\2\1\0\1\1\12\uffff\1\4}>";
    static final String[] dfa_20s = {
            "\2\21\36\uffff\2\21\1\13\1\14\1\15\1\12\1\uffff\2\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\11\1\16\1\17\1\20",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\22\1\23\56\uffff\1\24",
            "\2\21\56\uffff\1\25",
            "\2\21\56\uffff\1\26",
            "\2\21\56\uffff\1\27",
            "",
            "",
            "",
            "",
            "\1\30",
            "\1\30",
            "",
            "",
            "",
            "",
            "\1\uffff"
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[][] dfa_20 = unpackEncodedStringArray(dfa_20s);

    class DFA57 extends DFA {

        public DFA57(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 57;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "9843:2: ( rule__Service__UnorderedGroup_3__1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA57_12 = input.LA(1);

                         
                        int index57_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA57_12>=RULE_STRING && LA57_12<=RULE_ID)) ) {s = 17;}

                        else if ( LA57_12 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index57_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA57_13 = input.LA(1);

                         
                        int index57_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA57_13 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                        else if ( ((LA57_13>=RULE_STRING && LA57_13<=RULE_ID)) ) {s = 17;}

                         
                        input.seek(index57_13);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA57_11 = input.LA(1);

                         
                        int index57_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA57_11 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                        else if ( ((LA57_11>=RULE_STRING && LA57_11<=RULE_ID)) ) {s = 17;}

                         
                        input.seek(index57_11);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA57_10 = input.LA(1);

                         
                        int index57_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA57_10==RULE_STRING) ) {s = 18;}

                        else if ( (LA57_10==RULE_ID) ) {s = 19;}

                        else if ( LA57_10 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index57_10);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA57_24 = input.LA(1);

                         
                        int index57_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 23;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 17;}

                         
                        input.seek(index57_24);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA57_0 = input.LA(1);

                         
                        int index57_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA57_0 >= 44 && LA57_0 <= 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA57_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA57_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA57_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA57_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA57_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA57_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA57_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA57_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( (LA57_0==42) ) {s = 10;}

                        else if ( (LA57_0==39) ) {s = 11;}

                        else if ( (LA57_0==40) ) {s = 12;}

                        else if ( (LA57_0==41) ) {s = 13;}

                        else if ( LA57_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA57_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA57_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( (LA57_0==EOF||(LA57_0>=RULE_STRING && LA57_0<=RULE_ID)||(LA57_0>=37 && LA57_0<=38)) ) {s = 17;}

                         
                        input.seek(index57_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 57, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_21s = "\1\0\11\uffff\1\4\1\3\1\1\1\2\12\uffff\1\5}>";
    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);

    class DFA58 extends DFA {

        public DFA58(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 58;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_21;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "9855:2: ( rule__Service__UnorderedGroup_3__2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA58_0 = input.LA(1);

                         
                        int index58_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA58_0 >= 44 && LA58_0 <= 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA58_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA58_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA58_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA58_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA58_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA58_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA58_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA58_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( (LA58_0==42) ) {s = 10;}

                        else if ( (LA58_0==39) ) {s = 11;}

                        else if ( (LA58_0==40) ) {s = 12;}

                        else if ( (LA58_0==41) ) {s = 13;}

                        else if ( LA58_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA58_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA58_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( (LA58_0==EOF||(LA58_0>=RULE_STRING && LA58_0<=RULE_ID)||(LA58_0>=37 && LA58_0<=38)) ) {s = 17;}

                         
                        input.seek(index58_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA58_12 = input.LA(1);

                         
                        int index58_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA58_12>=RULE_STRING && LA58_12<=RULE_ID)) ) {s = 17;}

                        else if ( LA58_12 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index58_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA58_13 = input.LA(1);

                         
                        int index58_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA58_13>=RULE_STRING && LA58_13<=RULE_ID)) ) {s = 17;}

                        else if ( LA58_13 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                         
                        input.seek(index58_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA58_11 = input.LA(1);

                         
                        int index58_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA58_11>=RULE_STRING && LA58_11<=RULE_ID)) ) {s = 17;}

                        else if ( LA58_11 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index58_11);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA58_10 = input.LA(1);

                         
                        int index58_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA58_10==RULE_STRING) ) {s = 18;}

                        else if ( (LA58_10==RULE_ID) ) {s = 19;}

                        else if ( LA58_10 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index58_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA58_24 = input.LA(1);

                         
                        int index58_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 23;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 17;}

                         
                        input.seek(index58_24);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 58, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_22s = "\1\5\11\uffff\1\4\1\3\1\1\1\2\12\uffff\1\0}>";
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);

    class DFA59 extends DFA {

        public DFA59(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 59;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_22;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "9867:2: ( rule__Service__UnorderedGroup_3__3 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA59_24 = input.LA(1);

                         
                        int index59_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 23;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 17;}

                         
                        input.seek(index59_24);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA59_12 = input.LA(1);

                         
                        int index59_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA59_12>=RULE_STRING && LA59_12<=RULE_ID)) ) {s = 17;}

                        else if ( LA59_12 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index59_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA59_13 = input.LA(1);

                         
                        int index59_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA59_13>=RULE_STRING && LA59_13<=RULE_ID)) ) {s = 17;}

                        else if ( LA59_13 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                         
                        input.seek(index59_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA59_11 = input.LA(1);

                         
                        int index59_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA59_11>=RULE_STRING && LA59_11<=RULE_ID)) ) {s = 17;}

                        else if ( LA59_11 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index59_11);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA59_10 = input.LA(1);

                         
                        int index59_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA59_10==RULE_STRING) ) {s = 18;}

                        else if ( (LA59_10==RULE_ID) ) {s = 19;}

                        else if ( LA59_10 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index59_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA59_0 = input.LA(1);

                         
                        int index59_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA59_0 >= 44 && LA59_0 <= 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA59_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA59_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA59_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA59_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA59_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA59_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA59_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA59_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( (LA59_0==42) ) {s = 10;}

                        else if ( (LA59_0==39) ) {s = 11;}

                        else if ( (LA59_0==40) ) {s = 12;}

                        else if ( (LA59_0==41) ) {s = 13;}

                        else if ( LA59_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA59_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA59_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( (LA59_0==EOF||(LA59_0>=RULE_STRING && LA59_0<=RULE_ID)||(LA59_0>=37 && LA59_0<=38)) ) {s = 17;}

                         
                        input.seek(index59_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 59, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA60 extends DFA {

        public DFA60(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 60;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_21;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "9879:2: ( rule__Service__UnorderedGroup_3__4 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA60_0 = input.LA(1);

                         
                        int index60_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA60_0 >= 44 && LA60_0 <= 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA60_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA60_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA60_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA60_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA60_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA60_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA60_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA60_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( (LA60_0==42) ) {s = 10;}

                        else if ( (LA60_0==39) ) {s = 11;}

                        else if ( (LA60_0==40) ) {s = 12;}

                        else if ( (LA60_0==41) ) {s = 13;}

                        else if ( LA60_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA60_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA60_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( (LA60_0==EOF||(LA60_0>=RULE_STRING && LA60_0<=RULE_ID)||(LA60_0>=37 && LA60_0<=38)) ) {s = 17;}

                         
                        input.seek(index60_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA60_12 = input.LA(1);

                         
                        int index60_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA60_12 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                        else if ( ((LA60_12>=RULE_STRING && LA60_12<=RULE_ID)) ) {s = 17;}

                         
                        input.seek(index60_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA60_13 = input.LA(1);

                         
                        int index60_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA60_13>=RULE_STRING && LA60_13<=RULE_ID)) ) {s = 17;}

                        else if ( LA60_13 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                         
                        input.seek(index60_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA60_11 = input.LA(1);

                         
                        int index60_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA60_11>=RULE_STRING && LA60_11<=RULE_ID)) ) {s = 17;}

                        else if ( LA60_11 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index60_11);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA60_10 = input.LA(1);

                         
                        int index60_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA60_10==RULE_STRING) ) {s = 18;}

                        else if ( (LA60_10==RULE_ID) ) {s = 19;}

                        else if ( LA60_10 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index60_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA60_24 = input.LA(1);

                         
                        int index60_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 23;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 17;}

                         
                        input.seek(index60_24);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 60, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_23s = "\1\5\11\uffff\4\5\5\uffff\2\53\3\uffff\1\0";
    static final String dfa_24s = "\1\71\11\uffff\4\65\5\uffff\2\53\3\uffff\1\0";
    static final String dfa_25s = "\1\uffff\11\1\4\uffff\3\1\1\2\1\1\2\uffff\3\1\1\uffff";
    static final String[] dfa_26s = {
            "\2\21\36\uffff\2\21\1\13\1\14\1\15\1\12\1\uffff\2\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\11\1\16\1\17\1\20",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\23\1\24\56\uffff\1\22",
            "\2\21\56\uffff\1\25",
            "\2\21\56\uffff\1\26",
            "\2\21\56\uffff\1\27",
            "",
            "",
            "",
            "",
            "",
            "\1\30",
            "\1\30",
            "",
            "",
            "",
            "\1\uffff"
    };
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final char[] dfa_24 = DFA.unpackEncodedStringToUnsignedChars(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[][] dfa_26 = unpackEncodedStringArray(dfa_26s);

    class DFA61 extends DFA {

        public DFA61(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 61;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_23;
            this.max = dfa_24;
            this.accept = dfa_25;
            this.special = dfa_22;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "9891:2: ( rule__Service__UnorderedGroup_3__5 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA61_24 = input.LA(1);

                         
                        int index61_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 23;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 17;}

                         
                        input.seek(index61_24);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA61_12 = input.LA(1);

                         
                        int index61_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA61_12>=RULE_STRING && LA61_12<=RULE_ID)) ) {s = 17;}

                        else if ( LA61_12 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index61_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA61_13 = input.LA(1);

                         
                        int index61_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA61_13>=RULE_STRING && LA61_13<=RULE_ID)) ) {s = 17;}

                        else if ( LA61_13 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                         
                        input.seek(index61_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA61_11 = input.LA(1);

                         
                        int index61_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA61_11>=RULE_STRING && LA61_11<=RULE_ID)) ) {s = 17;}

                        else if ( LA61_11 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index61_11);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA61_10 = input.LA(1);

                         
                        int index61_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA61_10 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 18;}

                        else if ( (LA61_10==RULE_STRING) ) {s = 19;}

                        else if ( (LA61_10==RULE_ID) ) {s = 20;}

                         
                        input.seek(index61_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA61_0 = input.LA(1);

                         
                        int index61_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA61_0 >= 44 && LA61_0 <= 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA61_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA61_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA61_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA61_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA61_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA61_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA61_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA61_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( (LA61_0==42) ) {s = 10;}

                        else if ( (LA61_0==39) ) {s = 11;}

                        else if ( (LA61_0==40) ) {s = 12;}

                        else if ( (LA61_0==41) ) {s = 13;}

                        else if ( LA61_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA61_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA61_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( (LA61_0==EOF||(LA61_0>=RULE_STRING && LA61_0<=RULE_ID)||(LA61_0>=37 && LA61_0<=38)) ) {s = 17;}

                         
                        input.seek(index61_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 61, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA62 extends DFA {

        public DFA62(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 62;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_21;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "9903:2: ( rule__Service__UnorderedGroup_3__6 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA62_0 = input.LA(1);

                         
                        int index62_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA62_0 >= 44 && LA62_0 <= 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA62_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA62_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA62_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA62_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA62_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA62_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA62_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA62_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( (LA62_0==42) ) {s = 10;}

                        else if ( (LA62_0==39) ) {s = 11;}

                        else if ( (LA62_0==40) ) {s = 12;}

                        else if ( (LA62_0==41) ) {s = 13;}

                        else if ( LA62_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA62_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA62_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( (LA62_0==EOF||(LA62_0>=RULE_STRING && LA62_0<=RULE_ID)||(LA62_0>=37 && LA62_0<=38)) ) {s = 17;}

                         
                        input.seek(index62_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA62_12 = input.LA(1);

                         
                        int index62_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA62_12>=RULE_STRING && LA62_12<=RULE_ID)) ) {s = 17;}

                        else if ( LA62_12 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index62_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA62_13 = input.LA(1);

                         
                        int index62_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA62_13>=RULE_STRING && LA62_13<=RULE_ID)) ) {s = 17;}

                        else if ( LA62_13 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                         
                        input.seek(index62_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA62_11 = input.LA(1);

                         
                        int index62_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA62_11>=RULE_STRING && LA62_11<=RULE_ID)) ) {s = 17;}

                        else if ( LA62_11 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index62_11);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA62_10 = input.LA(1);

                         
                        int index62_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA62_10==RULE_STRING) ) {s = 18;}

                        else if ( (LA62_10==RULE_ID) ) {s = 19;}

                        else if ( LA62_10 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index62_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA62_24 = input.LA(1);

                         
                        int index62_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 23;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 17;}

                         
                        input.seek(index62_24);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 62, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA63 extends DFA {

        public DFA63(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 63;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_22;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "9915:2: ( rule__Service__UnorderedGroup_3__7 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA63_24 = input.LA(1);

                         
                        int index63_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 23;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 17;}

                         
                        input.seek(index63_24);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA63_12 = input.LA(1);

                         
                        int index63_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA63_12>=RULE_STRING && LA63_12<=RULE_ID)) ) {s = 17;}

                        else if ( LA63_12 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index63_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA63_13 = input.LA(1);

                         
                        int index63_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA63_13>=RULE_STRING && LA63_13<=RULE_ID)) ) {s = 17;}

                        else if ( LA63_13 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                         
                        input.seek(index63_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA63_11 = input.LA(1);

                         
                        int index63_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA63_11 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                        else if ( ((LA63_11>=RULE_STRING && LA63_11<=RULE_ID)) ) {s = 17;}

                         
                        input.seek(index63_11);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA63_10 = input.LA(1);

                         
                        int index63_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA63_10==RULE_STRING) ) {s = 18;}

                        else if ( (LA63_10==RULE_ID) ) {s = 19;}

                        else if ( LA63_10 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index63_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA63_0 = input.LA(1);

                         
                        int index63_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA63_0 >= 44 && LA63_0 <= 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA63_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA63_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA63_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA63_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA63_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA63_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA63_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA63_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( (LA63_0==42) ) {s = 10;}

                        else if ( (LA63_0==39) ) {s = 11;}

                        else if ( (LA63_0==40) ) {s = 12;}

                        else if ( (LA63_0==41) ) {s = 13;}

                        else if ( LA63_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA63_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA63_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( (LA63_0==EOF||(LA63_0>=RULE_STRING && LA63_0<=RULE_ID)||(LA63_0>=37 && LA63_0<=38)) ) {s = 17;}

                         
                        input.seek(index63_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 63, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA64 extends DFA {

        public DFA64(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 64;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "9927:2: ( rule__Service__UnorderedGroup_3__8 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA64_12 = input.LA(1);

                         
                        int index64_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA64_12>=RULE_STRING && LA64_12<=RULE_ID)) ) {s = 17;}

                        else if ( LA64_12 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index64_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA64_13 = input.LA(1);

                         
                        int index64_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA64_13>=RULE_STRING && LA64_13<=RULE_ID)) ) {s = 17;}

                        else if ( LA64_13 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                         
                        input.seek(index64_13);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA64_11 = input.LA(1);

                         
                        int index64_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA64_11 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                        else if ( ((LA64_11>=RULE_STRING && LA64_11<=RULE_ID)) ) {s = 17;}

                         
                        input.seek(index64_11);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA64_10 = input.LA(1);

                         
                        int index64_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA64_10==RULE_STRING) ) {s = 18;}

                        else if ( (LA64_10==RULE_ID) ) {s = 19;}

                        else if ( LA64_10 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index64_10);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA64_24 = input.LA(1);

                         
                        int index64_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 23;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 17;}

                         
                        input.seek(index64_24);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA64_0 = input.LA(1);

                         
                        int index64_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA64_0 >= 44 && LA64_0 <= 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA64_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA64_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA64_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA64_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA64_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA64_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA64_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA64_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( (LA64_0==42) ) {s = 10;}

                        else if ( (LA64_0==39) ) {s = 11;}

                        else if ( (LA64_0==40) ) {s = 12;}

                        else if ( (LA64_0==41) ) {s = 13;}

                        else if ( LA64_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA64_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA64_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( (LA64_0==EOF||(LA64_0>=RULE_STRING && LA64_0<=RULE_ID)||(LA64_0>=37 && LA64_0<=38)) ) {s = 17;}

                         
                        input.seek(index64_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 64, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA65 extends DFA {

        public DFA65(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 65;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_21;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "9939:2: ( rule__Service__UnorderedGroup_3__9 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA65_0 = input.LA(1);

                         
                        int index65_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA65_0 >= 44 && LA65_0 <= 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA65_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA65_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA65_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA65_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA65_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA65_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA65_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA65_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( (LA65_0==42) ) {s = 10;}

                        else if ( (LA65_0==39) ) {s = 11;}

                        else if ( (LA65_0==40) ) {s = 12;}

                        else if ( (LA65_0==41) ) {s = 13;}

                        else if ( LA65_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA65_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA65_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( (LA65_0==EOF||(LA65_0>=RULE_STRING && LA65_0<=RULE_ID)||(LA65_0>=37 && LA65_0<=38)) ) {s = 17;}

                         
                        input.seek(index65_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA65_12 = input.LA(1);

                         
                        int index65_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA65_12>=RULE_STRING && LA65_12<=RULE_ID)) ) {s = 17;}

                        else if ( LA65_12 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index65_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA65_13 = input.LA(1);

                         
                        int index65_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA65_13 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                        else if ( ((LA65_13>=RULE_STRING && LA65_13<=RULE_ID)) ) {s = 17;}

                         
                        input.seek(index65_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA65_11 = input.LA(1);

                         
                        int index65_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA65_11 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                        else if ( ((LA65_11>=RULE_STRING && LA65_11<=RULE_ID)) ) {s = 17;}

                         
                        input.seek(index65_11);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA65_10 = input.LA(1);

                         
                        int index65_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA65_10==RULE_STRING) ) {s = 18;}

                        else if ( (LA65_10==RULE_ID) ) {s = 19;}

                        else if ( LA65_10 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index65_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA65_24 = input.LA(1);

                         
                        int index65_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 23;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 17;}

                         
                        input.seek(index65_24);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 65, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_27s = "\1\1\11\uffff\1\5\1\4\1\2\1\3\12\uffff\1\0}>";
    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);

    class DFA66 extends DFA {

        public DFA66(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 66;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_27;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "9951:2: ( rule__Service__UnorderedGroup_3__10 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA66_24 = input.LA(1);

                         
                        int index66_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 23;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 17;}

                         
                        input.seek(index66_24);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA66_0 = input.LA(1);

                         
                        int index66_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA66_0 >= 44 && LA66_0 <= 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA66_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA66_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA66_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA66_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA66_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA66_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA66_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA66_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( (LA66_0==42) ) {s = 10;}

                        else if ( (LA66_0==39) ) {s = 11;}

                        else if ( (LA66_0==40) ) {s = 12;}

                        else if ( (LA66_0==41) ) {s = 13;}

                        else if ( LA66_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA66_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA66_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( (LA66_0==EOF||(LA66_0>=RULE_STRING && LA66_0<=RULE_ID)||(LA66_0>=37 && LA66_0<=38)) ) {s = 17;}

                         
                        input.seek(index66_0);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA66_12 = input.LA(1);

                         
                        int index66_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA66_12>=RULE_STRING && LA66_12<=RULE_ID)) ) {s = 17;}

                        else if ( LA66_12 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index66_12);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA66_13 = input.LA(1);

                         
                        int index66_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA66_13>=RULE_STRING && LA66_13<=RULE_ID)) ) {s = 17;}

                        else if ( LA66_13 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                         
                        input.seek(index66_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA66_11 = input.LA(1);

                         
                        int index66_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA66_11>=RULE_STRING && LA66_11<=RULE_ID)) ) {s = 17;}

                        else if ( LA66_11 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index66_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA66_10 = input.LA(1);

                         
                        int index66_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA66_10==RULE_STRING) ) {s = 18;}

                        else if ( (LA66_10==RULE_ID) ) {s = 19;}

                        else if ( LA66_10 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index66_10);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 66, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA67 extends DFA {

        public DFA67(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 67;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_27;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "9963:2: ( rule__Service__UnorderedGroup_3__11 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA67_24 = input.LA(1);

                         
                        int index67_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 23;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 17;}

                         
                        input.seek(index67_24);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA67_0 = input.LA(1);

                         
                        int index67_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA67_0 >= 44 && LA67_0 <= 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA67_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA67_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA67_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA67_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA67_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA67_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA67_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA67_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( (LA67_0==42) ) {s = 10;}

                        else if ( (LA67_0==39) ) {s = 11;}

                        else if ( (LA67_0==40) ) {s = 12;}

                        else if ( (LA67_0==41) ) {s = 13;}

                        else if ( LA67_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA67_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA67_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( (LA67_0==EOF||(LA67_0>=RULE_STRING && LA67_0<=RULE_ID)||(LA67_0>=37 && LA67_0<=38)) ) {s = 17;}

                         
                        input.seek(index67_0);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA67_12 = input.LA(1);

                         
                        int index67_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA67_12>=RULE_STRING && LA67_12<=RULE_ID)) ) {s = 17;}

                        else if ( LA67_12 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index67_12);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA67_13 = input.LA(1);

                         
                        int index67_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA67_13>=RULE_STRING && LA67_13<=RULE_ID)) ) {s = 17;}

                        else if ( LA67_13 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                         
                        input.seek(index67_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA67_11 = input.LA(1);

                         
                        int index67_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA67_11>=RULE_STRING && LA67_11<=RULE_ID)) ) {s = 17;}

                        else if ( LA67_11 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index67_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA67_10 = input.LA(1);

                         
                        int index67_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA67_10==RULE_STRING) ) {s = 18;}

                        else if ( (LA67_10==RULE_ID) ) {s = 19;}

                        else if ( LA67_10 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index67_10);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 67, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_28s = "\1\0\11\uffff\1\5\1\4\1\2\1\3\12\uffff\1\1}>";
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);

    class DFA68 extends DFA {

        public DFA68(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 68;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_28;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "9975:2: ( rule__Service__UnorderedGroup_3__12 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA68_0 = input.LA(1);

                         
                        int index68_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA68_0 >= 44 && LA68_0 <= 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA68_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA68_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA68_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA68_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA68_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA68_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA68_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA68_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( (LA68_0==42) ) {s = 10;}

                        else if ( (LA68_0==39) ) {s = 11;}

                        else if ( (LA68_0==40) ) {s = 12;}

                        else if ( (LA68_0==41) ) {s = 13;}

                        else if ( LA68_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA68_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA68_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( (LA68_0==EOF||(LA68_0>=RULE_STRING && LA68_0<=RULE_ID)||(LA68_0>=37 && LA68_0<=38)) ) {s = 17;}

                         
                        input.seek(index68_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA68_24 = input.LA(1);

                         
                        int index68_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 23;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 17;}

                         
                        input.seek(index68_24);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA68_12 = input.LA(1);

                         
                        int index68_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA68_12 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                        else if ( ((LA68_12>=RULE_STRING && LA68_12<=RULE_ID)) ) {s = 17;}

                         
                        input.seek(index68_12);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA68_13 = input.LA(1);

                         
                        int index68_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA68_13>=RULE_STRING && LA68_13<=RULE_ID)) ) {s = 17;}

                        else if ( LA68_13 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                         
                        input.seek(index68_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA68_11 = input.LA(1);

                         
                        int index68_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA68_11>=RULE_STRING && LA68_11<=RULE_ID)) ) {s = 17;}

                        else if ( LA68_11 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index68_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA68_10 = input.LA(1);

                         
                        int index68_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA68_10==RULE_STRING) ) {s = 18;}

                        else if ( (LA68_10==RULE_ID) ) {s = 19;}

                        else if ( LA68_10 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index68_10);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 68, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA69 extends DFA {

        public DFA69(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 69;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_23;
            this.max = dfa_24;
            this.accept = dfa_25;
            this.special = dfa_27;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "9987:2: ( rule__Service__UnorderedGroup_3__13 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA69_24 = input.LA(1);

                         
                        int index69_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 23;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 17;}

                         
                        input.seek(index69_24);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA69_0 = input.LA(1);

                         
                        int index69_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA69_0 >= 44 && LA69_0 <= 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA69_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA69_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA69_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA69_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA69_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA69_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA69_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA69_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( (LA69_0==42) ) {s = 10;}

                        else if ( (LA69_0==39) ) {s = 11;}

                        else if ( (LA69_0==40) ) {s = 12;}

                        else if ( (LA69_0==41) ) {s = 13;}

                        else if ( LA69_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA69_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA69_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( (LA69_0==EOF||(LA69_0>=RULE_STRING && LA69_0<=RULE_ID)||(LA69_0>=37 && LA69_0<=38)) ) {s = 17;}

                         
                        input.seek(index69_0);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA69_12 = input.LA(1);

                         
                        int index69_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA69_12>=RULE_STRING && LA69_12<=RULE_ID)) ) {s = 17;}

                        else if ( LA69_12 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index69_12);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA69_13 = input.LA(1);

                         
                        int index69_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA69_13>=RULE_STRING && LA69_13<=RULE_ID)) ) {s = 17;}

                        else if ( LA69_13 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                         
                        input.seek(index69_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA69_11 = input.LA(1);

                         
                        int index69_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA69_11>=RULE_STRING && LA69_11<=RULE_ID)) ) {s = 17;}

                        else if ( LA69_11 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index69_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA69_10 = input.LA(1);

                         
                        int index69_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA69_10 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 18;}

                        else if ( (LA69_10==RULE_STRING) ) {s = 19;}

                        else if ( (LA69_10==RULE_ID) ) {s = 20;}

                         
                        input.seek(index69_10);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 69, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA70 extends DFA {

        public DFA70(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 70;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_28;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "9999:2: ( rule__Service__UnorderedGroup_3__14 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA70_0 = input.LA(1);

                         
                        int index70_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA70_0 >= 44 && LA70_0 <= 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA70_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA70_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA70_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA70_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA70_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA70_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA70_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA70_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( (LA70_0==42) ) {s = 10;}

                        else if ( (LA70_0==39) ) {s = 11;}

                        else if ( (LA70_0==40) ) {s = 12;}

                        else if ( (LA70_0==41) ) {s = 13;}

                        else if ( LA70_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA70_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA70_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( (LA70_0==EOF||(LA70_0>=RULE_STRING && LA70_0<=RULE_ID)||(LA70_0>=37 && LA70_0<=38)) ) {s = 17;}

                         
                        input.seek(index70_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA70_24 = input.LA(1);

                         
                        int index70_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 23;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 17;}

                         
                        input.seek(index70_24);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA70_12 = input.LA(1);

                         
                        int index70_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA70_12>=RULE_STRING && LA70_12<=RULE_ID)) ) {s = 17;}

                        else if ( LA70_12 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index70_12);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA70_13 = input.LA(1);

                         
                        int index70_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA70_13>=RULE_STRING && LA70_13<=RULE_ID)) ) {s = 17;}

                        else if ( LA70_13 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                         
                        input.seek(index70_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA70_11 = input.LA(1);

                         
                        int index70_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA70_11>=RULE_STRING && LA70_11<=RULE_ID)) ) {s = 17;}

                        else if ( LA70_11 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index70_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA70_10 = input.LA(1);

                         
                        int index70_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA70_10==RULE_STRING) ) {s = 18;}

                        else if ( (LA70_10==RULE_ID) ) {s = 19;}

                        else if ( LA70_10 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index70_10);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 70, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA71 extends DFA {

        public DFA71(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 71;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_28;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "10011:2: ( rule__Service__UnorderedGroup_3__15 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA71_0 = input.LA(1);

                         
                        int index71_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA71_0 >= 44 && LA71_0 <= 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA71_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA71_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA71_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA71_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA71_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA71_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA71_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA71_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( (LA71_0==42) ) {s = 10;}

                        else if ( (LA71_0==39) ) {s = 11;}

                        else if ( (LA71_0==40) ) {s = 12;}

                        else if ( (LA71_0==41) ) {s = 13;}

                        else if ( LA71_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA71_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA71_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( (LA71_0==EOF||(LA71_0>=RULE_STRING && LA71_0<=RULE_ID)||(LA71_0>=37 && LA71_0<=38)) ) {s = 17;}

                         
                        input.seek(index71_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA71_24 = input.LA(1);

                         
                        int index71_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 23;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 17;}

                         
                        input.seek(index71_24);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA71_12 = input.LA(1);

                         
                        int index71_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA71_12>=RULE_STRING && LA71_12<=RULE_ID)) ) {s = 17;}

                        else if ( LA71_12 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index71_12);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA71_13 = input.LA(1);

                         
                        int index71_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA71_13>=RULE_STRING && LA71_13<=RULE_ID)) ) {s = 17;}

                        else if ( LA71_13 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                         
                        input.seek(index71_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA71_11 = input.LA(1);

                         
                        int index71_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA71_11 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                        else if ( ((LA71_11>=RULE_STRING && LA71_11<=RULE_ID)) ) {s = 17;}

                         
                        input.seek(index71_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA71_10 = input.LA(1);

                         
                        int index71_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA71_10==RULE_STRING) ) {s = 18;}

                        else if ( (LA71_10==RULE_ID) ) {s = 19;}

                        else if ( LA71_10 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index71_10);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 71, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_29s = "\13\uffff";
    static final String dfa_30s = "\1\10\12\uffff";
    static final String dfa_31s = "\1\5\3\uffff\1\17\4\uffff\2\0";
    static final String dfa_32s = "\1\106\3\uffff\1\20\4\uffff\2\0";
    static final String dfa_33s = "\1\uffff\3\1\1\uffff\3\1\1\2\2\uffff";
    static final String dfa_34s = "\1\0\10\uffff\1\1\1\2}>";
    static final String[] dfa_35s = {
            "\2\10\36\uffff\6\10\1\uffff\7\10\1\4\6\10\5\uffff\1\1\1\2\1\3\1\5\1\uffff\1\6\1\uffff\1\7",
            "",
            "",
            "",
            "\1\11\1\12",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff"
    };

    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final char[] dfa_31 = DFA.unpackEncodedStringToUnsignedChars(dfa_31s);
    static final char[] dfa_32 = DFA.unpackEncodedStringToUnsignedChars(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[][] dfa_35 = unpackEncodedStringArray(dfa_35s);

    class DFA78 extends DFA {

        public DFA78(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 78;
            this.eot = dfa_29;
            this.eof = dfa_30;
            this.min = dfa_31;
            this.max = dfa_32;
            this.accept = dfa_33;
            this.special = dfa_34;
            this.transition = dfa_35;
        }
        public String getDescription() {
            return "10306:2: ( rule__VolumeConnector_long__UnorderedGroup_1__1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA78_0 = input.LA(1);

                         
                        int index78_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA78_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 0) ) {s = 1;}

                        else if ( LA78_0 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 1) ) {s = 2;}

                        else if ( LA78_0 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 2) ) {s = 3;}

                        else if ( (LA78_0==51) ) {s = 4;}

                        else if ( LA78_0 == 66 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 4) ) {s = 5;}

                        else if ( LA78_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 5) ) {s = 6;}

                        else if ( LA78_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 6) ) {s = 7;}

                        else if ( (LA78_0==EOF||(LA78_0>=RULE_STRING && LA78_0<=RULE_ID)||(LA78_0>=37 && LA78_0<=42)||(LA78_0>=44 && LA78_0<=50)||(LA78_0>=52 && LA78_0<=57)) ) {s = 8;}

                         
                        input.seek(index78_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA78_9 = input.LA(1);

                         
                        int index78_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index78_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA78_10 = input.LA(1);

                         
                        int index78_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index78_10);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 78, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA79 extends DFA {

        public DFA79(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 79;
            this.eot = dfa_29;
            this.eof = dfa_30;
            this.min = dfa_31;
            this.max = dfa_32;
            this.accept = dfa_33;
            this.special = dfa_34;
            this.transition = dfa_35;
        }
        public String getDescription() {
            return "10318:2: ( rule__VolumeConnector_long__UnorderedGroup_1__2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA79_0 = input.LA(1);

                         
                        int index79_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA79_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 0) ) {s = 1;}

                        else if ( LA79_0 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 1) ) {s = 2;}

                        else if ( LA79_0 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 2) ) {s = 3;}

                        else if ( (LA79_0==51) ) {s = 4;}

                        else if ( LA79_0 == 66 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 4) ) {s = 5;}

                        else if ( LA79_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 5) ) {s = 6;}

                        else if ( LA79_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 6) ) {s = 7;}

                        else if ( (LA79_0==EOF||(LA79_0>=RULE_STRING && LA79_0<=RULE_ID)||(LA79_0>=37 && LA79_0<=42)||(LA79_0>=44 && LA79_0<=50)||(LA79_0>=52 && LA79_0<=57)) ) {s = 8;}

                         
                        input.seek(index79_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA79_9 = input.LA(1);

                         
                        int index79_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index79_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA79_10 = input.LA(1);

                         
                        int index79_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index79_10);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 79, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA80 extends DFA {

        public DFA80(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 80;
            this.eot = dfa_29;
            this.eof = dfa_30;
            this.min = dfa_31;
            this.max = dfa_32;
            this.accept = dfa_33;
            this.special = dfa_34;
            this.transition = dfa_35;
        }
        public String getDescription() {
            return "10330:2: ( rule__VolumeConnector_long__UnorderedGroup_1__3 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA80_0 = input.LA(1);

                         
                        int index80_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA80_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 0) ) {s = 1;}

                        else if ( LA80_0 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 1) ) {s = 2;}

                        else if ( LA80_0 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 2) ) {s = 3;}

                        else if ( (LA80_0==51) ) {s = 4;}

                        else if ( LA80_0 == 66 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 4) ) {s = 5;}

                        else if ( LA80_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 5) ) {s = 6;}

                        else if ( LA80_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 6) ) {s = 7;}

                        else if ( (LA80_0==EOF||(LA80_0>=RULE_STRING && LA80_0<=RULE_ID)||(LA80_0>=37 && LA80_0<=42)||(LA80_0>=44 && LA80_0<=50)||(LA80_0>=52 && LA80_0<=57)) ) {s = 8;}

                         
                        input.seek(index80_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA80_9 = input.LA(1);

                         
                        int index80_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index80_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA80_10 = input.LA(1);

                         
                        int index80_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index80_10);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 80, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_36s = "\1\2\10\uffff\1\0\1\1}>";
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);

    class DFA81 extends DFA {

        public DFA81(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 81;
            this.eot = dfa_29;
            this.eof = dfa_30;
            this.min = dfa_31;
            this.max = dfa_32;
            this.accept = dfa_33;
            this.special = dfa_36;
            this.transition = dfa_35;
        }
        public String getDescription() {
            return "10342:2: ( rule__VolumeConnector_long__UnorderedGroup_1__4 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA81_9 = input.LA(1);

                         
                        int index81_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index81_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA81_10 = input.LA(1);

                         
                        int index81_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index81_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA81_0 = input.LA(1);

                         
                        int index81_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA81_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 0) ) {s = 1;}

                        else if ( LA81_0 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 1) ) {s = 2;}

                        else if ( LA81_0 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 2) ) {s = 3;}

                        else if ( (LA81_0==51) ) {s = 4;}

                        else if ( LA81_0 == 66 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 4) ) {s = 5;}

                        else if ( LA81_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 5) ) {s = 6;}

                        else if ( LA81_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 6) ) {s = 7;}

                        else if ( (LA81_0==EOF||(LA81_0>=RULE_STRING && LA81_0<=RULE_ID)||(LA81_0>=37 && LA81_0<=42)||(LA81_0>=44 && LA81_0<=50)||(LA81_0>=52 && LA81_0<=57)) ) {s = 8;}

                         
                        input.seek(index81_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 81, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA82 extends DFA {

        public DFA82(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 82;
            this.eot = dfa_29;
            this.eof = dfa_30;
            this.min = dfa_31;
            this.max = dfa_32;
            this.accept = dfa_33;
            this.special = dfa_36;
            this.transition = dfa_35;
        }
        public String getDescription() {
            return "10354:2: ( rule__VolumeConnector_long__UnorderedGroup_1__5 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA82_9 = input.LA(1);

                         
                        int index82_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index82_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA82_10 = input.LA(1);

                         
                        int index82_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index82_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA82_0 = input.LA(1);

                         
                        int index82_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA82_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 0) ) {s = 1;}

                        else if ( LA82_0 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 1) ) {s = 2;}

                        else if ( LA82_0 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 2) ) {s = 3;}

                        else if ( (LA82_0==51) ) {s = 4;}

                        else if ( LA82_0 == 66 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 4) ) {s = 5;}

                        else if ( LA82_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 5) ) {s = 6;}

                        else if ( LA82_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 6) ) {s = 7;}

                        else if ( (LA82_0==EOF||(LA82_0>=RULE_STRING && LA82_0<=RULE_ID)||(LA82_0>=37 && LA82_0<=42)||(LA82_0>=44 && LA82_0<=50)||(LA82_0>=52 && LA82_0<=57)) ) {s = 8;}

                         
                        input.seek(index82_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 82, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA83 extends DFA {

        public DFA83(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 83;
            this.eot = dfa_29;
            this.eof = dfa_30;
            this.min = dfa_31;
            this.max = dfa_32;
            this.accept = dfa_33;
            this.special = dfa_36;
            this.transition = dfa_35;
        }
        public String getDescription() {
            return "10366:2: ( rule__VolumeConnector_long__UnorderedGroup_1__6 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA83_9 = input.LA(1);

                         
                        int index83_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index83_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA83_10 = input.LA(1);

                         
                        int index83_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index83_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA83_0 = input.LA(1);

                         
                        int index83_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA83_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 0) ) {s = 1;}

                        else if ( LA83_0 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 1) ) {s = 2;}

                        else if ( LA83_0 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 2) ) {s = 3;}

                        else if ( (LA83_0==51) ) {s = 4;}

                        else if ( LA83_0 == 66 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 4) ) {s = 5;}

                        else if ( LA83_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 5) ) {s = 6;}

                        else if ( LA83_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 6) ) {s = 7;}

                        else if ( (LA83_0==EOF||(LA83_0>=RULE_STRING && LA83_0<=RULE_ID)||(LA83_0>=37 && LA83_0<=42)||(LA83_0>=44 && LA83_0<=50)||(LA83_0>=52 && LA83_0<=57)) ) {s = 8;}

                         
                        input.seek(index83_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 83, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_37s = "\1\12\12\uffff";
    static final String dfa_38s = "\1\5\12\uffff";
    static final String dfa_39s = "\1\125\12\uffff";
    static final String dfa_40s = "\1\uffff\11\1\1\2";
    static final String dfa_41s = "\1\0\12\uffff}>";
    static final String[] dfa_42s = {
            "\2\12\36\uffff\6\12\42\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final char[] dfa_38 = DFA.unpackEncodedStringToUnsignedChars(dfa_38s);
    static final char[] dfa_39 = DFA.unpackEncodedStringToUnsignedChars(dfa_39s);
    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[][] dfa_42 = unpackEncodedStringArray(dfa_42s);

    class DFA94 extends DFA {

        public DFA94(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 94;
            this.eot = dfa_29;
            this.eof = dfa_37;
            this.min = dfa_38;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_42;
        }
        public String getDescription() {
            return "10718:2: ( rule__Network__UnorderedGroup_3_1__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA94_0 = input.LA(1);

                         
                        int index94_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA94_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA94_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA94_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA94_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA94_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA94_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA94_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA94_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA94_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA94_0==EOF||(LA94_0>=RULE_STRING && LA94_0<=RULE_ID)||(LA94_0>=37 && LA94_0<=42)) ) {s = 10;}

                         
                        input.seek(index94_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 94, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_43s = "\12\uffff";
    static final String dfa_44s = "\1\115\11\uffff";
    static final String dfa_45s = "\1\125\11\uffff";
    static final String dfa_46s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11";
    static final String dfa_47s = "\1\0\11\uffff}>";
    static final String[] dfa_48s = {
            "\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final char[] dfa_44 = DFA.unpackEncodedStringToUnsignedChars(dfa_44s);
    static final char[] dfa_45 = DFA.unpackEncodedStringToUnsignedChars(dfa_45s);
    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final short[][] dfa_48 = unpackEncodedStringArray(dfa_48s);

    class DFA95 extends DFA {

        public DFA95(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 95;
            this.eot = dfa_43;
            this.eof = dfa_43;
            this.min = dfa_44;
            this.max = dfa_45;
            this.accept = dfa_46;
            this.special = dfa_47;
            this.transition = dfa_48;
        }
        public String getDescription() {
            return "10732:3: ( ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA95_0 = input.LA(1);

                         
                        int index95_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA95_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA95_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA95_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA95_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA95_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA95_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA95_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA95_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA95_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                         
                        input.seek(index95_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 95, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA96 extends DFA {

        public DFA96(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 96;
            this.eot = dfa_29;
            this.eof = dfa_37;
            this.min = dfa_38;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_42;
        }
        public String getDescription() {
            return "10882:2: ( rule__Network__UnorderedGroup_3_1__1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA96_0 = input.LA(1);

                         
                        int index96_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA96_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA96_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA96_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA96_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA96_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA96_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA96_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA96_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA96_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA96_0==EOF||(LA96_0>=RULE_STRING && LA96_0<=RULE_ID)||(LA96_0>=37 && LA96_0<=42)) ) {s = 10;}

                         
                        input.seek(index96_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 96, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA97 extends DFA {

        public DFA97(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 97;
            this.eot = dfa_29;
            this.eof = dfa_37;
            this.min = dfa_38;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_42;
        }
        public String getDescription() {
            return "10894:2: ( rule__Network__UnorderedGroup_3_1__2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA97_0 = input.LA(1);

                         
                        int index97_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA97_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA97_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA97_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA97_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA97_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA97_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA97_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA97_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA97_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA97_0==EOF||(LA97_0>=RULE_STRING && LA97_0<=RULE_ID)||(LA97_0>=37 && LA97_0<=42)) ) {s = 10;}

                         
                        input.seek(index97_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 97, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA98 extends DFA {

        public DFA98(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 98;
            this.eot = dfa_29;
            this.eof = dfa_37;
            this.min = dfa_38;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_42;
        }
        public String getDescription() {
            return "10906:2: ( rule__Network__UnorderedGroup_3_1__3 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA98_0 = input.LA(1);

                         
                        int index98_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA98_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA98_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA98_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA98_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA98_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA98_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA98_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA98_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA98_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA98_0==EOF||(LA98_0>=RULE_STRING && LA98_0<=RULE_ID)||(LA98_0>=37 && LA98_0<=42)) ) {s = 10;}

                         
                        input.seek(index98_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 98, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA99 extends DFA {

        public DFA99(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 99;
            this.eot = dfa_29;
            this.eof = dfa_37;
            this.min = dfa_38;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_42;
        }
        public String getDescription() {
            return "10918:2: ( rule__Network__UnorderedGroup_3_1__4 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA99_0 = input.LA(1);

                         
                        int index99_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA99_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA99_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA99_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA99_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA99_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA99_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA99_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA99_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA99_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA99_0==EOF||(LA99_0>=RULE_STRING && LA99_0<=RULE_ID)||(LA99_0>=37 && LA99_0<=42)) ) {s = 10;}

                         
                        input.seek(index99_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 99, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA100 extends DFA {

        public DFA100(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 100;
            this.eot = dfa_29;
            this.eof = dfa_37;
            this.min = dfa_38;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_42;
        }
        public String getDescription() {
            return "10930:2: ( rule__Network__UnorderedGroup_3_1__5 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA100_0 = input.LA(1);

                         
                        int index100_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA100_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA100_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA100_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA100_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA100_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA100_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA100_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA100_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA100_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA100_0==EOF||(LA100_0>=RULE_STRING && LA100_0<=RULE_ID)||(LA100_0>=37 && LA100_0<=42)) ) {s = 10;}

                         
                        input.seek(index100_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 100, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA101 extends DFA {

        public DFA101(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 101;
            this.eot = dfa_29;
            this.eof = dfa_37;
            this.min = dfa_38;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_42;
        }
        public String getDescription() {
            return "10942:2: ( rule__Network__UnorderedGroup_3_1__6 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA101_0 = input.LA(1);

                         
                        int index101_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA101_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA101_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA101_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA101_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA101_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA101_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA101_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA101_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA101_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA101_0==EOF||(LA101_0>=RULE_STRING && LA101_0<=RULE_ID)||(LA101_0>=37 && LA101_0<=42)) ) {s = 10;}

                         
                        input.seek(index101_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 101, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA102 extends DFA {

        public DFA102(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 102;
            this.eot = dfa_29;
            this.eof = dfa_37;
            this.min = dfa_38;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_42;
        }
        public String getDescription() {
            return "10954:2: ( rule__Network__UnorderedGroup_3_1__7 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA102_0 = input.LA(1);

                         
                        int index102_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA102_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA102_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA102_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA102_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA102_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA102_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA102_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA102_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA102_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA102_0==EOF||(LA102_0>=RULE_STRING && LA102_0<=RULE_ID)||(LA102_0>=37 && LA102_0<=42)) ) {s = 10;}

                         
                        input.seek(index102_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 102, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA103 extends DFA {

        public DFA103(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 103;
            this.eot = dfa_29;
            this.eof = dfa_37;
            this.min = dfa_38;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_42;
        }
        public String getDescription() {
            return "10966:2: ( rule__Network__UnorderedGroup_3_1__8 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA103_0 = input.LA(1);

                         
                        int index103_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA103_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA103_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA103_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA103_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA103_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA103_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA103_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA103_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA103_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA103_0==EOF||(LA103_0>=RULE_STRING && LA103_0<=RULE_ID)||(LA103_0>=37 && LA103_0<=42)) ) {s = 10;}

                         
                        input.seek(index103_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 103, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0020000000000002L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000062L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000060L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x03DFF78000000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000040L,0x00000000C0000000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x00000000001E0000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000018000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0020000000000060L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0020000000000062L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x8008000000000000L,0x0000000000000057L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x8000000000000000L,0x0000000000000702L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0020000000000010L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000001C00000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x7800000000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x000000000F000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x00000003F0000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000E00000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000000000L,0x00000000003FE800L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000000L,0x0000000003002000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000000L,0x00000000001E2000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000000L,0x0000000000460000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000000L,0x0000000000C60000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000000L,0x000000003C000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x000007E000000002L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x03DFF78000000002L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x7800000000000002L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x8008000000000002L,0x0000000000000057L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x8000000000000002L,0x0000000000000702L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000002L,0x00000000003FE000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000002L,0x00000000001E2000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000002L,0x0000000000460000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000002L,0x0000000000C60000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000002L,0x0000000003002000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000002L,0x000000003C000000L});

}
