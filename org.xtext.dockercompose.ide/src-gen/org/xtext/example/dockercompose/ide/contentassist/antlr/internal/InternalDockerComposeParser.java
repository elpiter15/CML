package org.xtext.example.dockercompose.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.dockercompose.services.DockerComposeGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings("all")
public class InternalDockerComposeParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_INT", "RULE_VERSION_INT", "RULE_VERSION_FLOAT", "RULE_QUOTED_INT", "RULE_PORT_DEF", "RULE_STRING", "RULE_ID", "RULE_DEVICE_DEF", "RULE_ANY_OTHER", "RULE_PERMISSION", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "'.'", "'..'", "'-'", "'true'", "'false'", "'\"no\"'", "'always'", "'on-failure'", "'unless-stopped'", "'rw'", "'ro'", "'z'", "'volume'", "'bind'", "'tmpfs'", "'npipe'", "'rprivate'", "'private'", "'rshared'", "'shared'", "'rslave'", "'slave'", "'service_started'", "'service_healthy'", "'service_completed_successfully'", "'version:'", "'services:'", "'volumes:'", "'configs:'", "'secrets:'", "'networks:'", "':'", "'build:'", "'image:'", "'cpu_count:'", "'command:'", "'container_name:'", "'restart:'", "'init:'", "'read_only:'", "'links:'", "'depends_on:'", "'environment:'", "'devices:'", "'dns:'", "'ports:'", "'='", "'/'", "'@'", "'condition:'", "'ipv4_address:'", "'priority:'", "'aliases:'", "'link_local_ips:'", "'source:'", "'type:'", "'target:'", "'bind:'", "'propagation:'", "'volume:'", "'nocopy:'", "'tmpfs:'", "'size'", "'uid:'", "'gid:'", "'mode:'", "'{'", "'}'", "'driver:'", "'attachable:'", "'enable_ipv6:'", "'internal:'", "'external:'", "'name:'", "'labels:'", "'driver_opts:'", "'ipam:'", "'file:'", "'config:'", "'options:'", "'subnet:'", "'ip_range:'", "'gateway:'", "'aux_addresses:'", "'\"'"
    };
    public static final int T__50=50;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=10;
    public static final int RULE_VERSION_INT=5;
    public static final int RULE_PORT_DEF=8;
    public static final int RULE_INT=4;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=14;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int RULE_PERMISSION=13;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int RULE_DEVICE_DEF=11;
    public static final int T__93=93;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int T__19=19;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int RULE_QUOTED_INT=7;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=9;
    public static final int RULE_SL_COMMENT=15;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int RULE_WS=16;
    public static final int RULE_VERSION_FLOAT=6;
    public static final int RULE_ANY_OTHER=12;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int T__84=84;
    public static final int T__85=85;
    public static final int T__86=86;
    public static final int T__87=87;

    // delegates
    // delegators


        public InternalDockerComposeParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalDockerComposeParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalDockerComposeParser.tokenNames; }
    public String getGrammarFileName() { return "InternalDockerCompose.g"; }


    	private DockerComposeGrammarAccess grammarAccess;

    	public void setGrammarAccess(DockerComposeGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		return tokenName;
    	}



    // $ANTLR start "entryRuleDockerCompose"
    // InternalDockerCompose.g:53:1: entryRuleDockerCompose : ruleDockerCompose EOF ;
    public final void entryRuleDockerCompose() throws RecognitionException {
        try {
            // InternalDockerCompose.g:54:1: ( ruleDockerCompose EOF )
            // InternalDockerCompose.g:55:1: ruleDockerCompose EOF
            {
             before(grammarAccess.getDockerComposeRule()); 
            pushFollow(FOLLOW_1);
            ruleDockerCompose();

            state._fsp--;

             after(grammarAccess.getDockerComposeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDockerCompose"


    // $ANTLR start "ruleDockerCompose"
    // InternalDockerCompose.g:62:1: ruleDockerCompose : ( ( rule__DockerCompose__UnorderedGroup ) ) ;
    public final void ruleDockerCompose() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:66:2: ( ( ( rule__DockerCompose__UnorderedGroup ) ) )
            // InternalDockerCompose.g:67:2: ( ( rule__DockerCompose__UnorderedGroup ) )
            {
            // InternalDockerCompose.g:67:2: ( ( rule__DockerCompose__UnorderedGroup ) )
            // InternalDockerCompose.g:68:3: ( rule__DockerCompose__UnorderedGroup )
            {
             before(grammarAccess.getDockerComposeAccess().getUnorderedGroup()); 
            // InternalDockerCompose.g:69:3: ( rule__DockerCompose__UnorderedGroup )
            // InternalDockerCompose.g:69:4: rule__DockerCompose__UnorderedGroup
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__UnorderedGroup();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getUnorderedGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDockerCompose"


    // $ANTLR start "entryRuleVersion"
    // InternalDockerCompose.g:78:1: entryRuleVersion : ruleVersion EOF ;
    public final void entryRuleVersion() throws RecognitionException {
        try {
            // InternalDockerCompose.g:79:1: ( ruleVersion EOF )
            // InternalDockerCompose.g:80:1: ruleVersion EOF
            {
             before(grammarAccess.getVersionRule()); 
            pushFollow(FOLLOW_1);
            ruleVersion();

            state._fsp--;

             after(grammarAccess.getVersionRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVersion"


    // $ANTLR start "ruleVersion"
    // InternalDockerCompose.g:87:1: ruleVersion : ( ( rule__Version__Alternatives ) ) ;
    public final void ruleVersion() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:91:2: ( ( ( rule__Version__Alternatives ) ) )
            // InternalDockerCompose.g:92:2: ( ( rule__Version__Alternatives ) )
            {
            // InternalDockerCompose.g:92:2: ( ( rule__Version__Alternatives ) )
            // InternalDockerCompose.g:93:3: ( rule__Version__Alternatives )
            {
             before(grammarAccess.getVersionAccess().getAlternatives()); 
            // InternalDockerCompose.g:94:3: ( rule__Version__Alternatives )
            // InternalDockerCompose.g:94:4: rule__Version__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Version__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getVersionAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVersion"


    // $ANTLR start "entryRuleQuotedInt"
    // InternalDockerCompose.g:103:1: entryRuleQuotedInt : ruleQuotedInt EOF ;
    public final void entryRuleQuotedInt() throws RecognitionException {
        try {
            // InternalDockerCompose.g:104:1: ( ruleQuotedInt EOF )
            // InternalDockerCompose.g:105:1: ruleQuotedInt EOF
            {
             before(grammarAccess.getQuotedIntRule()); 
            pushFollow(FOLLOW_1);
            ruleQuotedInt();

            state._fsp--;

             after(grammarAccess.getQuotedIntRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQuotedInt"


    // $ANTLR start "ruleQuotedInt"
    // InternalDockerCompose.g:112:1: ruleQuotedInt : ( ( rule__QuotedInt__Alternatives ) ) ;
    public final void ruleQuotedInt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:116:2: ( ( ( rule__QuotedInt__Alternatives ) ) )
            // InternalDockerCompose.g:117:2: ( ( rule__QuotedInt__Alternatives ) )
            {
            // InternalDockerCompose.g:117:2: ( ( rule__QuotedInt__Alternatives ) )
            // InternalDockerCompose.g:118:3: ( rule__QuotedInt__Alternatives )
            {
             before(grammarAccess.getQuotedIntAccess().getAlternatives()); 
            // InternalDockerCompose.g:119:3: ( rule__QuotedInt__Alternatives )
            // InternalDockerCompose.g:119:4: rule__QuotedInt__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__QuotedInt__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getQuotedIntAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQuotedInt"


    // $ANTLR start "entryRuleEDouble"
    // InternalDockerCompose.g:128:1: entryRuleEDouble : ruleEDouble EOF ;
    public final void entryRuleEDouble() throws RecognitionException {
        try {
            // InternalDockerCompose.g:129:1: ( ruleEDouble EOF )
            // InternalDockerCompose.g:130:1: ruleEDouble EOF
            {
             before(grammarAccess.getEDoubleRule()); 
            pushFollow(FOLLOW_1);
            ruleEDouble();

            state._fsp--;

             after(grammarAccess.getEDoubleRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEDouble"


    // $ANTLR start "ruleEDouble"
    // InternalDockerCompose.g:137:1: ruleEDouble : ( ( rule__EDouble__Group__0 ) ) ;
    public final void ruleEDouble() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:141:2: ( ( ( rule__EDouble__Group__0 ) ) )
            // InternalDockerCompose.g:142:2: ( ( rule__EDouble__Group__0 ) )
            {
            // InternalDockerCompose.g:142:2: ( ( rule__EDouble__Group__0 ) )
            // InternalDockerCompose.g:143:3: ( rule__EDouble__Group__0 )
            {
             before(grammarAccess.getEDoubleAccess().getGroup()); 
            // InternalDockerCompose.g:144:3: ( rule__EDouble__Group__0 )
            // InternalDockerCompose.g:144:4: rule__EDouble__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__EDouble__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getEDoubleAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEDouble"


    // $ANTLR start "entryRuleService"
    // InternalDockerCompose.g:153:1: entryRuleService : ruleService EOF ;
    public final void entryRuleService() throws RecognitionException {
        try {
            // InternalDockerCompose.g:154:1: ( ruleService EOF )
            // InternalDockerCompose.g:155:1: ruleService EOF
            {
             before(grammarAccess.getServiceRule()); 
            pushFollow(FOLLOW_1);
            ruleService();

            state._fsp--;

             after(grammarAccess.getServiceRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleService"


    // $ANTLR start "ruleService"
    // InternalDockerCompose.g:162:1: ruleService : ( ( rule__Service__Group__0 ) ) ;
    public final void ruleService() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:166:2: ( ( ( rule__Service__Group__0 ) ) )
            // InternalDockerCompose.g:167:2: ( ( rule__Service__Group__0 ) )
            {
            // InternalDockerCompose.g:167:2: ( ( rule__Service__Group__0 ) )
            // InternalDockerCompose.g:168:3: ( rule__Service__Group__0 )
            {
             before(grammarAccess.getServiceAccess().getGroup()); 
            // InternalDockerCompose.g:169:3: ( rule__Service__Group__0 )
            // InternalDockerCompose.g:169:4: rule__Service__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleService"


    // $ANTLR start "entryRuleEnvironmentVariableMap"
    // InternalDockerCompose.g:178:1: entryRuleEnvironmentVariableMap : ruleEnvironmentVariableMap EOF ;
    public final void entryRuleEnvironmentVariableMap() throws RecognitionException {
        try {
            // InternalDockerCompose.g:179:1: ( ruleEnvironmentVariableMap EOF )
            // InternalDockerCompose.g:180:1: ruleEnvironmentVariableMap EOF
            {
             before(grammarAccess.getEnvironmentVariableMapRule()); 
            pushFollow(FOLLOW_1);
            ruleEnvironmentVariableMap();

            state._fsp--;

             after(grammarAccess.getEnvironmentVariableMapRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEnvironmentVariableMap"


    // $ANTLR start "ruleEnvironmentVariableMap"
    // InternalDockerCompose.g:187:1: ruleEnvironmentVariableMap : ( ( rule__EnvironmentVariableMap__Group__0 ) ) ;
    public final void ruleEnvironmentVariableMap() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:191:2: ( ( ( rule__EnvironmentVariableMap__Group__0 ) ) )
            // InternalDockerCompose.g:192:2: ( ( rule__EnvironmentVariableMap__Group__0 ) )
            {
            // InternalDockerCompose.g:192:2: ( ( rule__EnvironmentVariableMap__Group__0 ) )
            // InternalDockerCompose.g:193:3: ( rule__EnvironmentVariableMap__Group__0 )
            {
             before(grammarAccess.getEnvironmentVariableMapAccess().getGroup()); 
            // InternalDockerCompose.g:194:3: ( rule__EnvironmentVariableMap__Group__0 )
            // InternalDockerCompose.g:194:4: rule__EnvironmentVariableMap__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__EnvironmentVariableMap__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getEnvironmentVariableMapAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEnvironmentVariableMap"


    // $ANTLR start "entryRuleEnvironmentVariableList"
    // InternalDockerCompose.g:203:1: entryRuleEnvironmentVariableList : ruleEnvironmentVariableList EOF ;
    public final void entryRuleEnvironmentVariableList() throws RecognitionException {
        try {
            // InternalDockerCompose.g:204:1: ( ruleEnvironmentVariableList EOF )
            // InternalDockerCompose.g:205:1: ruleEnvironmentVariableList EOF
            {
             before(grammarAccess.getEnvironmentVariableListRule()); 
            pushFollow(FOLLOW_1);
            ruleEnvironmentVariableList();

            state._fsp--;

             after(grammarAccess.getEnvironmentVariableListRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEnvironmentVariableList"


    // $ANTLR start "ruleEnvironmentVariableList"
    // InternalDockerCompose.g:212:1: ruleEnvironmentVariableList : ( ( rule__EnvironmentVariableList__Group__0 ) ) ;
    public final void ruleEnvironmentVariableList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:216:2: ( ( ( rule__EnvironmentVariableList__Group__0 ) ) )
            // InternalDockerCompose.g:217:2: ( ( rule__EnvironmentVariableList__Group__0 ) )
            {
            // InternalDockerCompose.g:217:2: ( ( rule__EnvironmentVariableList__Group__0 ) )
            // InternalDockerCompose.g:218:3: ( rule__EnvironmentVariableList__Group__0 )
            {
             before(grammarAccess.getEnvironmentVariableListAccess().getGroup()); 
            // InternalDockerCompose.g:219:3: ( rule__EnvironmentVariableList__Group__0 )
            // InternalDockerCompose.g:219:4: rule__EnvironmentVariableList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__EnvironmentVariableList__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getEnvironmentVariableListAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEnvironmentVariableList"


    // $ANTLR start "entryRulePort"
    // InternalDockerCompose.g:228:1: entryRulePort : rulePort EOF ;
    public final void entryRulePort() throws RecognitionException {
        try {
            // InternalDockerCompose.g:229:1: ( rulePort EOF )
            // InternalDockerCompose.g:230:1: rulePort EOF
            {
             before(grammarAccess.getPortRule()); 
            pushFollow(FOLLOW_1);
            rulePort();

            state._fsp--;

             after(grammarAccess.getPortRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePort"


    // $ANTLR start "rulePort"
    // InternalDockerCompose.g:237:1: rulePort : ( ( rule__Port__Group__0 ) ) ;
    public final void rulePort() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:241:2: ( ( ( rule__Port__Group__0 ) ) )
            // InternalDockerCompose.g:242:2: ( ( rule__Port__Group__0 ) )
            {
            // InternalDockerCompose.g:242:2: ( ( rule__Port__Group__0 ) )
            // InternalDockerCompose.g:243:3: ( rule__Port__Group__0 )
            {
             before(grammarAccess.getPortAccess().getGroup()); 
            // InternalDockerCompose.g:244:3: ( rule__Port__Group__0 )
            // InternalDockerCompose.g:244:4: rule__Port__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Port__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getPortAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePort"


    // $ANTLR start "entryRuleDevice"
    // InternalDockerCompose.g:253:1: entryRuleDevice : ruleDevice EOF ;
    public final void entryRuleDevice() throws RecognitionException {
        try {
            // InternalDockerCompose.g:254:1: ( ruleDevice EOF )
            // InternalDockerCompose.g:255:1: ruleDevice EOF
            {
             before(grammarAccess.getDeviceRule()); 
            pushFollow(FOLLOW_1);
            ruleDevice();

            state._fsp--;

             after(grammarAccess.getDeviceRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDevice"


    // $ANTLR start "ruleDevice"
    // InternalDockerCompose.g:262:1: ruleDevice : ( ( rule__Device__Group__0 ) ) ;
    public final void ruleDevice() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:266:2: ( ( ( rule__Device__Group__0 ) ) )
            // InternalDockerCompose.g:267:2: ( ( rule__Device__Group__0 ) )
            {
            // InternalDockerCompose.g:267:2: ( ( rule__Device__Group__0 ) )
            // InternalDockerCompose.g:268:3: ( rule__Device__Group__0 )
            {
             before(grammarAccess.getDeviceAccess().getGroup()); 
            // InternalDockerCompose.g:269:3: ( rule__Device__Group__0 )
            // InternalDockerCompose.g:269:4: rule__Device__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Device__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDeviceAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDevice"


    // $ANTLR start "entryRuleImage"
    // InternalDockerCompose.g:278:1: entryRuleImage : ruleImage EOF ;
    public final void entryRuleImage() throws RecognitionException {
        try {
            // InternalDockerCompose.g:279:1: ( ruleImage EOF )
            // InternalDockerCompose.g:280:1: ruleImage EOF
            {
             before(grammarAccess.getImageRule()); 
            pushFollow(FOLLOW_1);
            ruleImage();

            state._fsp--;

             after(grammarAccess.getImageRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleImage"


    // $ANTLR start "ruleImage"
    // InternalDockerCompose.g:287:1: ruleImage : ( ( rule__Image__Group__0 ) ) ;
    public final void ruleImage() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:291:2: ( ( ( rule__Image__Group__0 ) ) )
            // InternalDockerCompose.g:292:2: ( ( rule__Image__Group__0 ) )
            {
            // InternalDockerCompose.g:292:2: ( ( rule__Image__Group__0 ) )
            // InternalDockerCompose.g:293:3: ( rule__Image__Group__0 )
            {
             before(grammarAccess.getImageAccess().getGroup()); 
            // InternalDockerCompose.g:294:3: ( rule__Image__Group__0 )
            // InternalDockerCompose.g:294:4: rule__Image__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Image__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getImageAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleImage"


    // $ANTLR start "entryRuleLink"
    // InternalDockerCompose.g:303:1: entryRuleLink : ruleLink EOF ;
    public final void entryRuleLink() throws RecognitionException {
        try {
            // InternalDockerCompose.g:304:1: ( ruleLink EOF )
            // InternalDockerCompose.g:305:1: ruleLink EOF
            {
             before(grammarAccess.getLinkRule()); 
            pushFollow(FOLLOW_1);
            ruleLink();

            state._fsp--;

             after(grammarAccess.getLinkRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLink"


    // $ANTLR start "ruleLink"
    // InternalDockerCompose.g:312:1: ruleLink : ( ( rule__Link__Group__0 ) ) ;
    public final void ruleLink() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:316:2: ( ( ( rule__Link__Group__0 ) ) )
            // InternalDockerCompose.g:317:2: ( ( rule__Link__Group__0 ) )
            {
            // InternalDockerCompose.g:317:2: ( ( rule__Link__Group__0 ) )
            // InternalDockerCompose.g:318:3: ( rule__Link__Group__0 )
            {
             before(grammarAccess.getLinkAccess().getGroup()); 
            // InternalDockerCompose.g:319:3: ( rule__Link__Group__0 )
            // InternalDockerCompose.g:319:4: rule__Link__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Link__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getLinkAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLink"


    // $ANTLR start "entryRuleDependency"
    // InternalDockerCompose.g:328:1: entryRuleDependency : ruleDependency EOF ;
    public final void entryRuleDependency() throws RecognitionException {
        try {
            // InternalDockerCompose.g:329:1: ( ruleDependency EOF )
            // InternalDockerCompose.g:330:1: ruleDependency EOF
            {
             before(grammarAccess.getDependencyRule()); 
            pushFollow(FOLLOW_1);
            ruleDependency();

            state._fsp--;

             after(grammarAccess.getDependencyRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDependency"


    // $ANTLR start "ruleDependency"
    // InternalDockerCompose.g:337:1: ruleDependency : ( ( rule__Dependency__Group__0 ) ) ;
    public final void ruleDependency() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:341:2: ( ( ( rule__Dependency__Group__0 ) ) )
            // InternalDockerCompose.g:342:2: ( ( rule__Dependency__Group__0 ) )
            {
            // InternalDockerCompose.g:342:2: ( ( rule__Dependency__Group__0 ) )
            // InternalDockerCompose.g:343:3: ( rule__Dependency__Group__0 )
            {
             before(grammarAccess.getDependencyAccess().getGroup()); 
            // InternalDockerCompose.g:344:3: ( rule__Dependency__Group__0 )
            // InternalDockerCompose.g:344:4: rule__Dependency__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Dependency__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDependencyAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDependency"


    // $ANTLR start "entryRuleNetworkConnector_long"
    // InternalDockerCompose.g:353:1: entryRuleNetworkConnector_long : ruleNetworkConnector_long EOF ;
    public final void entryRuleNetworkConnector_long() throws RecognitionException {
        try {
            // InternalDockerCompose.g:354:1: ( ruleNetworkConnector_long EOF )
            // InternalDockerCompose.g:355:1: ruleNetworkConnector_long EOF
            {
             before(grammarAccess.getNetworkConnector_longRule()); 
            pushFollow(FOLLOW_1);
            ruleNetworkConnector_long();

            state._fsp--;

             after(grammarAccess.getNetworkConnector_longRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNetworkConnector_long"


    // $ANTLR start "ruleNetworkConnector_long"
    // InternalDockerCompose.g:362:1: ruleNetworkConnector_long : ( ( rule__NetworkConnector_long__Group__0 ) ) ;
    public final void ruleNetworkConnector_long() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:366:2: ( ( ( rule__NetworkConnector_long__Group__0 ) ) )
            // InternalDockerCompose.g:367:2: ( ( rule__NetworkConnector_long__Group__0 ) )
            {
            // InternalDockerCompose.g:367:2: ( ( rule__NetworkConnector_long__Group__0 ) )
            // InternalDockerCompose.g:368:3: ( rule__NetworkConnector_long__Group__0 )
            {
             before(grammarAccess.getNetworkConnector_longAccess().getGroup()); 
            // InternalDockerCompose.g:369:3: ( rule__NetworkConnector_long__Group__0 )
            // InternalDockerCompose.g:369:4: rule__NetworkConnector_long__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnector_longAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNetworkConnector_long"


    // $ANTLR start "entryRuleNetworkConnector_short"
    // InternalDockerCompose.g:378:1: entryRuleNetworkConnector_short : ruleNetworkConnector_short EOF ;
    public final void entryRuleNetworkConnector_short() throws RecognitionException {
        try {
            // InternalDockerCompose.g:379:1: ( ruleNetworkConnector_short EOF )
            // InternalDockerCompose.g:380:1: ruleNetworkConnector_short EOF
            {
             before(grammarAccess.getNetworkConnector_shortRule()); 
            pushFollow(FOLLOW_1);
            ruleNetworkConnector_short();

            state._fsp--;

             after(grammarAccess.getNetworkConnector_shortRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNetworkConnector_short"


    // $ANTLR start "ruleNetworkConnector_short"
    // InternalDockerCompose.g:387:1: ruleNetworkConnector_short : ( ( rule__NetworkConnector_short__Group__0 ) ) ;
    public final void ruleNetworkConnector_short() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:391:2: ( ( ( rule__NetworkConnector_short__Group__0 ) ) )
            // InternalDockerCompose.g:392:2: ( ( rule__NetworkConnector_short__Group__0 ) )
            {
            // InternalDockerCompose.g:392:2: ( ( rule__NetworkConnector_short__Group__0 ) )
            // InternalDockerCompose.g:393:3: ( rule__NetworkConnector_short__Group__0 )
            {
             before(grammarAccess.getNetworkConnector_shortAccess().getGroup()); 
            // InternalDockerCompose.g:394:3: ( rule__NetworkConnector_short__Group__0 )
            // InternalDockerCompose.g:394:4: rule__NetworkConnector_short__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_short__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnector_shortAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNetworkConnector_short"


    // $ANTLR start "entryRuleAlias"
    // InternalDockerCompose.g:403:1: entryRuleAlias : ruleAlias EOF ;
    public final void entryRuleAlias() throws RecognitionException {
        try {
            // InternalDockerCompose.g:404:1: ( ruleAlias EOF )
            // InternalDockerCompose.g:405:1: ruleAlias EOF
            {
             before(grammarAccess.getAliasRule()); 
            pushFollow(FOLLOW_1);
            ruleAlias();

            state._fsp--;

             after(grammarAccess.getAliasRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAlias"


    // $ANTLR start "ruleAlias"
    // InternalDockerCompose.g:412:1: ruleAlias : ( ( rule__Alias__Group__0 ) ) ;
    public final void ruleAlias() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:416:2: ( ( ( rule__Alias__Group__0 ) ) )
            // InternalDockerCompose.g:417:2: ( ( rule__Alias__Group__0 ) )
            {
            // InternalDockerCompose.g:417:2: ( ( rule__Alias__Group__0 ) )
            // InternalDockerCompose.g:418:3: ( rule__Alias__Group__0 )
            {
             before(grammarAccess.getAliasAccess().getGroup()); 
            // InternalDockerCompose.g:419:3: ( rule__Alias__Group__0 )
            // InternalDockerCompose.g:419:4: rule__Alias__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Alias__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAliasAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAlias"


    // $ANTLR start "entryRuleVolumeConnector"
    // InternalDockerCompose.g:428:1: entryRuleVolumeConnector : ruleVolumeConnector EOF ;
    public final void entryRuleVolumeConnector() throws RecognitionException {
        try {
            // InternalDockerCompose.g:429:1: ( ruleVolumeConnector EOF )
            // InternalDockerCompose.g:430:1: ruleVolumeConnector EOF
            {
             before(grammarAccess.getVolumeConnectorRule()); 
            pushFollow(FOLLOW_1);
            ruleVolumeConnector();

            state._fsp--;

             after(grammarAccess.getVolumeConnectorRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVolumeConnector"


    // $ANTLR start "ruleVolumeConnector"
    // InternalDockerCompose.g:437:1: ruleVolumeConnector : ( ( rule__VolumeConnector__Group__0 ) ) ;
    public final void ruleVolumeConnector() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:441:2: ( ( ( rule__VolumeConnector__Group__0 ) ) )
            // InternalDockerCompose.g:442:2: ( ( rule__VolumeConnector__Group__0 ) )
            {
            // InternalDockerCompose.g:442:2: ( ( rule__VolumeConnector__Group__0 ) )
            // InternalDockerCompose.g:443:3: ( rule__VolumeConnector__Group__0 )
            {
             before(grammarAccess.getVolumeConnectorAccess().getGroup()); 
            // InternalDockerCompose.g:444:3: ( rule__VolumeConnector__Group__0 )
            // InternalDockerCompose.g:444:4: rule__VolumeConnector__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnectorAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVolumeConnector"


    // $ANTLR start "entryRuleConfigConnector"
    // InternalDockerCompose.g:453:1: entryRuleConfigConnector : ruleConfigConnector EOF ;
    public final void entryRuleConfigConnector() throws RecognitionException {
        try {
            // InternalDockerCompose.g:454:1: ( ruleConfigConnector EOF )
            // InternalDockerCompose.g:455:1: ruleConfigConnector EOF
            {
             before(grammarAccess.getConfigConnectorRule()); 
            pushFollow(FOLLOW_1);
            ruleConfigConnector();

            state._fsp--;

             after(grammarAccess.getConfigConnectorRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConfigConnector"


    // $ANTLR start "ruleConfigConnector"
    // InternalDockerCompose.g:462:1: ruleConfigConnector : ( ( rule__ConfigConnector__Group__0 ) ) ;
    public final void ruleConfigConnector() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:466:2: ( ( ( rule__ConfigConnector__Group__0 ) ) )
            // InternalDockerCompose.g:467:2: ( ( rule__ConfigConnector__Group__0 ) )
            {
            // InternalDockerCompose.g:467:2: ( ( rule__ConfigConnector__Group__0 ) )
            // InternalDockerCompose.g:468:3: ( rule__ConfigConnector__Group__0 )
            {
             before(grammarAccess.getConfigConnectorAccess().getGroup()); 
            // InternalDockerCompose.g:469:3: ( rule__ConfigConnector__Group__0 )
            // InternalDockerCompose.g:469:4: rule__ConfigConnector__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnectorAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConfigConnector"


    // $ANTLR start "entryRuleSecretConnector"
    // InternalDockerCompose.g:478:1: entryRuleSecretConnector : ruleSecretConnector EOF ;
    public final void entryRuleSecretConnector() throws RecognitionException {
        try {
            // InternalDockerCompose.g:479:1: ( ruleSecretConnector EOF )
            // InternalDockerCompose.g:480:1: ruleSecretConnector EOF
            {
             before(grammarAccess.getSecretConnectorRule()); 
            pushFollow(FOLLOW_1);
            ruleSecretConnector();

            state._fsp--;

             after(grammarAccess.getSecretConnectorRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSecretConnector"


    // $ANTLR start "ruleSecretConnector"
    // InternalDockerCompose.g:487:1: ruleSecretConnector : ( ( rule__SecretConnector__Group__0 ) ) ;
    public final void ruleSecretConnector() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:491:2: ( ( ( rule__SecretConnector__Group__0 ) ) )
            // InternalDockerCompose.g:492:2: ( ( rule__SecretConnector__Group__0 ) )
            {
            // InternalDockerCompose.g:492:2: ( ( rule__SecretConnector__Group__0 ) )
            // InternalDockerCompose.g:493:3: ( rule__SecretConnector__Group__0 )
            {
             before(grammarAccess.getSecretConnectorAccess().getGroup()); 
            // InternalDockerCompose.g:494:3: ( rule__SecretConnector__Group__0 )
            // InternalDockerCompose.g:494:4: rule__SecretConnector__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnectorAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSecretConnector"


    // $ANTLR start "entryRuleNetwork"
    // InternalDockerCompose.g:503:1: entryRuleNetwork : ruleNetwork EOF ;
    public final void entryRuleNetwork() throws RecognitionException {
        try {
            // InternalDockerCompose.g:504:1: ( ruleNetwork EOF )
            // InternalDockerCompose.g:505:1: ruleNetwork EOF
            {
             before(grammarAccess.getNetworkRule()); 
            pushFollow(FOLLOW_1);
            ruleNetwork();

            state._fsp--;

             after(grammarAccess.getNetworkRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNetwork"


    // $ANTLR start "ruleNetwork"
    // InternalDockerCompose.g:512:1: ruleNetwork : ( ( rule__Network__Group__0 ) ) ;
    public final void ruleNetwork() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:516:2: ( ( ( rule__Network__Group__0 ) ) )
            // InternalDockerCompose.g:517:2: ( ( rule__Network__Group__0 ) )
            {
            // InternalDockerCompose.g:517:2: ( ( rule__Network__Group__0 ) )
            // InternalDockerCompose.g:518:3: ( rule__Network__Group__0 )
            {
             before(grammarAccess.getNetworkAccess().getGroup()); 
            // InternalDockerCompose.g:519:3: ( rule__Network__Group__0 )
            // InternalDockerCompose.g:519:4: rule__Network__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNetwork"


    // $ANTLR start "entryRuleVolume"
    // InternalDockerCompose.g:528:1: entryRuleVolume : ruleVolume EOF ;
    public final void entryRuleVolume() throws RecognitionException {
        try {
            // InternalDockerCompose.g:529:1: ( ruleVolume EOF )
            // InternalDockerCompose.g:530:1: ruleVolume EOF
            {
             before(grammarAccess.getVolumeRule()); 
            pushFollow(FOLLOW_1);
            ruleVolume();

            state._fsp--;

             after(grammarAccess.getVolumeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVolume"


    // $ANTLR start "ruleVolume"
    // InternalDockerCompose.g:537:1: ruleVolume : ( ( rule__Volume__Group__0 ) ) ;
    public final void ruleVolume() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:541:2: ( ( ( rule__Volume__Group__0 ) ) )
            // InternalDockerCompose.g:542:2: ( ( rule__Volume__Group__0 ) )
            {
            // InternalDockerCompose.g:542:2: ( ( rule__Volume__Group__0 ) )
            // InternalDockerCompose.g:543:3: ( rule__Volume__Group__0 )
            {
             before(grammarAccess.getVolumeAccess().getGroup()); 
            // InternalDockerCompose.g:544:3: ( rule__Volume__Group__0 )
            // InternalDockerCompose.g:544:4: rule__Volume__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVolume"


    // $ANTLR start "entryRuleConfig"
    // InternalDockerCompose.g:553:1: entryRuleConfig : ruleConfig EOF ;
    public final void entryRuleConfig() throws RecognitionException {
        try {
            // InternalDockerCompose.g:554:1: ( ruleConfig EOF )
            // InternalDockerCompose.g:555:1: ruleConfig EOF
            {
             before(grammarAccess.getConfigRule()); 
            pushFollow(FOLLOW_1);
            ruleConfig();

            state._fsp--;

             after(grammarAccess.getConfigRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConfig"


    // $ANTLR start "ruleConfig"
    // InternalDockerCompose.g:562:1: ruleConfig : ( ( rule__Config__Group__0 ) ) ;
    public final void ruleConfig() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:566:2: ( ( ( rule__Config__Group__0 ) ) )
            // InternalDockerCompose.g:567:2: ( ( rule__Config__Group__0 ) )
            {
            // InternalDockerCompose.g:567:2: ( ( rule__Config__Group__0 ) )
            // InternalDockerCompose.g:568:3: ( rule__Config__Group__0 )
            {
             before(grammarAccess.getConfigAccess().getGroup()); 
            // InternalDockerCompose.g:569:3: ( rule__Config__Group__0 )
            // InternalDockerCompose.g:569:4: rule__Config__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Config__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getConfigAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConfig"


    // $ANTLR start "entryRuleSecret"
    // InternalDockerCompose.g:578:1: entryRuleSecret : ruleSecret EOF ;
    public final void entryRuleSecret() throws RecognitionException {
        try {
            // InternalDockerCompose.g:579:1: ( ruleSecret EOF )
            // InternalDockerCompose.g:580:1: ruleSecret EOF
            {
             before(grammarAccess.getSecretRule()); 
            pushFollow(FOLLOW_1);
            ruleSecret();

            state._fsp--;

             after(grammarAccess.getSecretRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSecret"


    // $ANTLR start "ruleSecret"
    // InternalDockerCompose.g:587:1: ruleSecret : ( ( rule__Secret__Group__0 ) ) ;
    public final void ruleSecret() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:591:2: ( ( ( rule__Secret__Group__0 ) ) )
            // InternalDockerCompose.g:592:2: ( ( rule__Secret__Group__0 ) )
            {
            // InternalDockerCompose.g:592:2: ( ( rule__Secret__Group__0 ) )
            // InternalDockerCompose.g:593:3: ( rule__Secret__Group__0 )
            {
             before(grammarAccess.getSecretAccess().getGroup()); 
            // InternalDockerCompose.g:594:3: ( rule__Secret__Group__0 )
            // InternalDockerCompose.g:594:4: rule__Secret__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSecret"


    // $ANTLR start "entryRuleVolumeLabel"
    // InternalDockerCompose.g:603:1: entryRuleVolumeLabel : ruleVolumeLabel EOF ;
    public final void entryRuleVolumeLabel() throws RecognitionException {
        try {
            // InternalDockerCompose.g:604:1: ( ruleVolumeLabel EOF )
            // InternalDockerCompose.g:605:1: ruleVolumeLabel EOF
            {
             before(grammarAccess.getVolumeLabelRule()); 
            pushFollow(FOLLOW_1);
            ruleVolumeLabel();

            state._fsp--;

             after(grammarAccess.getVolumeLabelRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVolumeLabel"


    // $ANTLR start "ruleVolumeLabel"
    // InternalDockerCompose.g:612:1: ruleVolumeLabel : ( ( rule__VolumeLabel__Group__0 ) ) ;
    public final void ruleVolumeLabel() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:616:2: ( ( ( rule__VolumeLabel__Group__0 ) ) )
            // InternalDockerCompose.g:617:2: ( ( rule__VolumeLabel__Group__0 ) )
            {
            // InternalDockerCompose.g:617:2: ( ( rule__VolumeLabel__Group__0 ) )
            // InternalDockerCompose.g:618:3: ( rule__VolumeLabel__Group__0 )
            {
             before(grammarAccess.getVolumeLabelAccess().getGroup()); 
            // InternalDockerCompose.g:619:3: ( rule__VolumeLabel__Group__0 )
            // InternalDockerCompose.g:619:4: rule__VolumeLabel__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VolumeLabel__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getVolumeLabelAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVolumeLabel"


    // $ANTLR start "entryRuleVolumeDriverOpt"
    // InternalDockerCompose.g:628:1: entryRuleVolumeDriverOpt : ruleVolumeDriverOpt EOF ;
    public final void entryRuleVolumeDriverOpt() throws RecognitionException {
        try {
            // InternalDockerCompose.g:629:1: ( ruleVolumeDriverOpt EOF )
            // InternalDockerCompose.g:630:1: ruleVolumeDriverOpt EOF
            {
             before(grammarAccess.getVolumeDriverOptRule()); 
            pushFollow(FOLLOW_1);
            ruleVolumeDriverOpt();

            state._fsp--;

             after(grammarAccess.getVolumeDriverOptRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVolumeDriverOpt"


    // $ANTLR start "ruleVolumeDriverOpt"
    // InternalDockerCompose.g:637:1: ruleVolumeDriverOpt : ( ( rule__VolumeDriverOpt__Group__0 ) ) ;
    public final void ruleVolumeDriverOpt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:641:2: ( ( ( rule__VolumeDriverOpt__Group__0 ) ) )
            // InternalDockerCompose.g:642:2: ( ( rule__VolumeDriverOpt__Group__0 ) )
            {
            // InternalDockerCompose.g:642:2: ( ( rule__VolumeDriverOpt__Group__0 ) )
            // InternalDockerCompose.g:643:3: ( rule__VolumeDriverOpt__Group__0 )
            {
             before(grammarAccess.getVolumeDriverOptAccess().getGroup()); 
            // InternalDockerCompose.g:644:3: ( rule__VolumeDriverOpt__Group__0 )
            // InternalDockerCompose.g:644:4: rule__VolumeDriverOpt__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getVolumeDriverOptAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVolumeDriverOpt"


    // $ANTLR start "entryRuleNetworkLabel"
    // InternalDockerCompose.g:653:1: entryRuleNetworkLabel : ruleNetworkLabel EOF ;
    public final void entryRuleNetworkLabel() throws RecognitionException {
        try {
            // InternalDockerCompose.g:654:1: ( ruleNetworkLabel EOF )
            // InternalDockerCompose.g:655:1: ruleNetworkLabel EOF
            {
             before(grammarAccess.getNetworkLabelRule()); 
            pushFollow(FOLLOW_1);
            ruleNetworkLabel();

            state._fsp--;

             after(grammarAccess.getNetworkLabelRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNetworkLabel"


    // $ANTLR start "ruleNetworkLabel"
    // InternalDockerCompose.g:662:1: ruleNetworkLabel : ( ( rule__NetworkLabel__Group__0 ) ) ;
    public final void ruleNetworkLabel() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:666:2: ( ( ( rule__NetworkLabel__Group__0 ) ) )
            // InternalDockerCompose.g:667:2: ( ( rule__NetworkLabel__Group__0 ) )
            {
            // InternalDockerCompose.g:667:2: ( ( rule__NetworkLabel__Group__0 ) )
            // InternalDockerCompose.g:668:3: ( rule__NetworkLabel__Group__0 )
            {
             before(grammarAccess.getNetworkLabelAccess().getGroup()); 
            // InternalDockerCompose.g:669:3: ( rule__NetworkLabel__Group__0 )
            // InternalDockerCompose.g:669:4: rule__NetworkLabel__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NetworkLabel__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkLabelAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNetworkLabel"


    // $ANTLR start "entryRuleNetworkDriverOpt"
    // InternalDockerCompose.g:678:1: entryRuleNetworkDriverOpt : ruleNetworkDriverOpt EOF ;
    public final void entryRuleNetworkDriverOpt() throws RecognitionException {
        try {
            // InternalDockerCompose.g:679:1: ( ruleNetworkDriverOpt EOF )
            // InternalDockerCompose.g:680:1: ruleNetworkDriverOpt EOF
            {
             before(grammarAccess.getNetworkDriverOptRule()); 
            pushFollow(FOLLOW_1);
            ruleNetworkDriverOpt();

            state._fsp--;

             after(grammarAccess.getNetworkDriverOptRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNetworkDriverOpt"


    // $ANTLR start "ruleNetworkDriverOpt"
    // InternalDockerCompose.g:687:1: ruleNetworkDriverOpt : ( ( rule__NetworkDriverOpt__Group__0 ) ) ;
    public final void ruleNetworkDriverOpt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:691:2: ( ( ( rule__NetworkDriverOpt__Group__0 ) ) )
            // InternalDockerCompose.g:692:2: ( ( rule__NetworkDriverOpt__Group__0 ) )
            {
            // InternalDockerCompose.g:692:2: ( ( rule__NetworkDriverOpt__Group__0 ) )
            // InternalDockerCompose.g:693:3: ( rule__NetworkDriverOpt__Group__0 )
            {
             before(grammarAccess.getNetworkDriverOptAccess().getGroup()); 
            // InternalDockerCompose.g:694:3: ( rule__NetworkDriverOpt__Group__0 )
            // InternalDockerCompose.g:694:4: rule__NetworkDriverOpt__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkDriverOptAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNetworkDriverOpt"


    // $ANTLR start "entryRuleIPAM"
    // InternalDockerCompose.g:703:1: entryRuleIPAM : ruleIPAM EOF ;
    public final void entryRuleIPAM() throws RecognitionException {
        try {
            // InternalDockerCompose.g:704:1: ( ruleIPAM EOF )
            // InternalDockerCompose.g:705:1: ruleIPAM EOF
            {
             before(grammarAccess.getIPAMRule()); 
            pushFollow(FOLLOW_1);
            ruleIPAM();

            state._fsp--;

             after(grammarAccess.getIPAMRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIPAM"


    // $ANTLR start "ruleIPAM"
    // InternalDockerCompose.g:712:1: ruleIPAM : ( ( rule__IPAM__Group__0 ) ) ;
    public final void ruleIPAM() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:716:2: ( ( ( rule__IPAM__Group__0 ) ) )
            // InternalDockerCompose.g:717:2: ( ( rule__IPAM__Group__0 ) )
            {
            // InternalDockerCompose.g:717:2: ( ( rule__IPAM__Group__0 ) )
            // InternalDockerCompose.g:718:3: ( rule__IPAM__Group__0 )
            {
             before(grammarAccess.getIPAMAccess().getGroup()); 
            // InternalDockerCompose.g:719:3: ( rule__IPAM__Group__0 )
            // InternalDockerCompose.g:719:4: rule__IPAM__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIPAM"


    // $ANTLR start "entryRuleIPAMConfig"
    // InternalDockerCompose.g:728:1: entryRuleIPAMConfig : ruleIPAMConfig EOF ;
    public final void entryRuleIPAMConfig() throws RecognitionException {
        try {
            // InternalDockerCompose.g:729:1: ( ruleIPAMConfig EOF )
            // InternalDockerCompose.g:730:1: ruleIPAMConfig EOF
            {
             before(grammarAccess.getIPAMConfigRule()); 
            pushFollow(FOLLOW_1);
            ruleIPAMConfig();

            state._fsp--;

             after(grammarAccess.getIPAMConfigRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIPAMConfig"


    // $ANTLR start "ruleIPAMConfig"
    // InternalDockerCompose.g:737:1: ruleIPAMConfig : ( ( rule__IPAMConfig__Group__0 ) ) ;
    public final void ruleIPAMConfig() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:741:2: ( ( ( rule__IPAMConfig__Group__0 ) ) )
            // InternalDockerCompose.g:742:2: ( ( rule__IPAMConfig__Group__0 ) )
            {
            // InternalDockerCompose.g:742:2: ( ( rule__IPAMConfig__Group__0 ) )
            // InternalDockerCompose.g:743:3: ( rule__IPAMConfig__Group__0 )
            {
             before(grammarAccess.getIPAMConfigAccess().getGroup()); 
            // InternalDockerCompose.g:744:3: ( rule__IPAMConfig__Group__0 )
            // InternalDockerCompose.g:744:4: rule__IPAMConfig__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIPAMConfigAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIPAMConfig"


    // $ANTLR start "entryRuleIPAMOption"
    // InternalDockerCompose.g:753:1: entryRuleIPAMOption : ruleIPAMOption EOF ;
    public final void entryRuleIPAMOption() throws RecognitionException {
        try {
            // InternalDockerCompose.g:754:1: ( ruleIPAMOption EOF )
            // InternalDockerCompose.g:755:1: ruleIPAMOption EOF
            {
             before(grammarAccess.getIPAMOptionRule()); 
            pushFollow(FOLLOW_1);
            ruleIPAMOption();

            state._fsp--;

             after(grammarAccess.getIPAMOptionRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIPAMOption"


    // $ANTLR start "ruleIPAMOption"
    // InternalDockerCompose.g:762:1: ruleIPAMOption : ( ( rule__IPAMOption__Group__0 ) ) ;
    public final void ruleIPAMOption() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:766:2: ( ( ( rule__IPAMOption__Group__0 ) ) )
            // InternalDockerCompose.g:767:2: ( ( rule__IPAMOption__Group__0 ) )
            {
            // InternalDockerCompose.g:767:2: ( ( rule__IPAMOption__Group__0 ) )
            // InternalDockerCompose.g:768:3: ( rule__IPAMOption__Group__0 )
            {
             before(grammarAccess.getIPAMOptionAccess().getGroup()); 
            // InternalDockerCompose.g:769:3: ( rule__IPAMOption__Group__0 )
            // InternalDockerCompose.g:769:4: rule__IPAMOption__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IPAMOption__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIPAMOptionAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIPAMOption"


    // $ANTLR start "entryRuleIPAMAddress"
    // InternalDockerCompose.g:778:1: entryRuleIPAMAddress : ruleIPAMAddress EOF ;
    public final void entryRuleIPAMAddress() throws RecognitionException {
        try {
            // InternalDockerCompose.g:779:1: ( ruleIPAMAddress EOF )
            // InternalDockerCompose.g:780:1: ruleIPAMAddress EOF
            {
             before(grammarAccess.getIPAMAddressRule()); 
            pushFollow(FOLLOW_1);
            ruleIPAMAddress();

            state._fsp--;

             after(grammarAccess.getIPAMAddressRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIPAMAddress"


    // $ANTLR start "ruleIPAMAddress"
    // InternalDockerCompose.g:787:1: ruleIPAMAddress : ( ( rule__IPAMAddress__Group__0 ) ) ;
    public final void ruleIPAMAddress() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:791:2: ( ( ( rule__IPAMAddress__Group__0 ) ) )
            // InternalDockerCompose.g:792:2: ( ( rule__IPAMAddress__Group__0 ) )
            {
            // InternalDockerCompose.g:792:2: ( ( rule__IPAMAddress__Group__0 ) )
            // InternalDockerCompose.g:793:3: ( rule__IPAMAddress__Group__0 )
            {
             before(grammarAccess.getIPAMAddressAccess().getGroup()); 
            // InternalDockerCompose.g:794:3: ( rule__IPAMAddress__Group__0 )
            // InternalDockerCompose.g:794:4: rule__IPAMAddress__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IPAMAddress__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAddressAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIPAMAddress"


    // $ANTLR start "entryRulePorts"
    // InternalDockerCompose.g:803:1: entryRulePorts : rulePorts EOF ;
    public final void entryRulePorts() throws RecognitionException {
        try {
            // InternalDockerCompose.g:804:1: ( rulePorts EOF )
            // InternalDockerCompose.g:805:1: rulePorts EOF
            {
             before(grammarAccess.getPortsRule()); 
            pushFollow(FOLLOW_1);
            rulePorts();

            state._fsp--;

             after(grammarAccess.getPortsRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePorts"


    // $ANTLR start "rulePorts"
    // InternalDockerCompose.g:812:1: rulePorts : ( ( rule__Ports__Alternatives ) ) ;
    public final void rulePorts() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:816:2: ( ( ( rule__Ports__Alternatives ) ) )
            // InternalDockerCompose.g:817:2: ( ( rule__Ports__Alternatives ) )
            {
            // InternalDockerCompose.g:817:2: ( ( rule__Ports__Alternatives ) )
            // InternalDockerCompose.g:818:3: ( rule__Ports__Alternatives )
            {
             before(grammarAccess.getPortsAccess().getAlternatives()); 
            // InternalDockerCompose.g:819:3: ( rule__Ports__Alternatives )
            // InternalDockerCompose.g:819:4: rule__Ports__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Ports__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getPortsAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePorts"


    // $ANTLR start "entryRulePATH"
    // InternalDockerCompose.g:828:1: entryRulePATH : rulePATH EOF ;
    public final void entryRulePATH() throws RecognitionException {
        try {
            // InternalDockerCompose.g:829:1: ( rulePATH EOF )
            // InternalDockerCompose.g:830:1: rulePATH EOF
            {
             before(grammarAccess.getPATHRule()); 
            pushFollow(FOLLOW_1);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getPATHRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePATH"


    // $ANTLR start "rulePATH"
    // InternalDockerCompose.g:837:1: rulePATH : ( ( rule__PATH__Alternatives ) ) ;
    public final void rulePATH() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:841:2: ( ( ( rule__PATH__Alternatives ) ) )
            // InternalDockerCompose.g:842:2: ( ( rule__PATH__Alternatives ) )
            {
            // InternalDockerCompose.g:842:2: ( ( rule__PATH__Alternatives ) )
            // InternalDockerCompose.g:843:3: ( rule__PATH__Alternatives )
            {
             before(grammarAccess.getPATHAccess().getAlternatives()); 
            // InternalDockerCompose.g:844:3: ( rule__PATH__Alternatives )
            // InternalDockerCompose.g:844:4: rule__PATH__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getPATHAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePATH"


    // $ANTLR start "entryRuleEString"
    // InternalDockerCompose.g:853:1: entryRuleEString : ruleEString EOF ;
    public final void entryRuleEString() throws RecognitionException {
        try {
            // InternalDockerCompose.g:854:1: ( ruleEString EOF )
            // InternalDockerCompose.g:855:1: ruleEString EOF
            {
             before(grammarAccess.getEStringRule()); 
            pushFollow(FOLLOW_1);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getEStringRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEString"


    // $ANTLR start "ruleEString"
    // InternalDockerCompose.g:862:1: ruleEString : ( ( rule__EString__Alternatives ) ) ;
    public final void ruleEString() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:866:2: ( ( ( rule__EString__Alternatives ) ) )
            // InternalDockerCompose.g:867:2: ( ( rule__EString__Alternatives ) )
            {
            // InternalDockerCompose.g:867:2: ( ( rule__EString__Alternatives ) )
            // InternalDockerCompose.g:868:3: ( rule__EString__Alternatives )
            {
             before(grammarAccess.getEStringAccess().getAlternatives()); 
            // InternalDockerCompose.g:869:3: ( rule__EString__Alternatives )
            // InternalDockerCompose.g:869:4: rule__EString__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EString__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getEStringAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEString"


    // $ANTLR start "entryRuleLabelID"
    // InternalDockerCompose.g:878:1: entryRuleLabelID : ruleLabelID EOF ;
    public final void entryRuleLabelID() throws RecognitionException {
        try {
            // InternalDockerCompose.g:879:1: ( ruleLabelID EOF )
            // InternalDockerCompose.g:880:1: ruleLabelID EOF
            {
             before(grammarAccess.getLabelIDRule()); 
            pushFollow(FOLLOW_1);
            ruleLabelID();

            state._fsp--;

             after(grammarAccess.getLabelIDRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLabelID"


    // $ANTLR start "ruleLabelID"
    // InternalDockerCompose.g:887:1: ruleLabelID : ( ( rule__LabelID__Group__0 ) ) ;
    public final void ruleLabelID() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:891:2: ( ( ( rule__LabelID__Group__0 ) ) )
            // InternalDockerCompose.g:892:2: ( ( rule__LabelID__Group__0 ) )
            {
            // InternalDockerCompose.g:892:2: ( ( rule__LabelID__Group__0 ) )
            // InternalDockerCompose.g:893:3: ( rule__LabelID__Group__0 )
            {
             before(grammarAccess.getLabelIDAccess().getGroup()); 
            // InternalDockerCompose.g:894:3: ( rule__LabelID__Group__0 )
            // InternalDockerCompose.g:894:4: rule__LabelID__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LabelID__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getLabelIDAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLabelID"


    // $ANTLR start "entryRuleEInt"
    // InternalDockerCompose.g:903:1: entryRuleEInt : ruleEInt EOF ;
    public final void entryRuleEInt() throws RecognitionException {
        try {
            // InternalDockerCompose.g:904:1: ( ruleEInt EOF )
            // InternalDockerCompose.g:905:1: ruleEInt EOF
            {
             before(grammarAccess.getEIntRule()); 
            pushFollow(FOLLOW_1);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getEIntRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEInt"


    // $ANTLR start "ruleEInt"
    // InternalDockerCompose.g:912:1: ruleEInt : ( RULE_INT ) ;
    public final void ruleEInt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:916:2: ( ( RULE_INT ) )
            // InternalDockerCompose.g:917:2: ( RULE_INT )
            {
            // InternalDockerCompose.g:917:2: ( RULE_INT )
            // InternalDockerCompose.g:918:3: RULE_INT
            {
             before(grammarAccess.getEIntAccess().getINTTerminalRuleCall()); 
            match(input,RULE_INT,FOLLOW_2); 
             after(grammarAccess.getEIntAccess().getINTTerminalRuleCall()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEInt"


    // $ANTLR start "entryRuleCommand"
    // InternalDockerCompose.g:928:1: entryRuleCommand : ruleCommand EOF ;
    public final void entryRuleCommand() throws RecognitionException {
        try {
            // InternalDockerCompose.g:929:1: ( ruleCommand EOF )
            // InternalDockerCompose.g:930:1: ruleCommand EOF
            {
             before(grammarAccess.getCommandRule()); 
            pushFollow(FOLLOW_1);
            ruleCommand();

            state._fsp--;

             after(grammarAccess.getCommandRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCommand"


    // $ANTLR start "ruleCommand"
    // InternalDockerCompose.g:937:1: ruleCommand : ( ( ( rule__Command__Alternatives ) ) ( ( rule__Command__Alternatives )* ) ) ;
    public final void ruleCommand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:941:2: ( ( ( ( rule__Command__Alternatives ) ) ( ( rule__Command__Alternatives )* ) ) )
            // InternalDockerCompose.g:942:2: ( ( ( rule__Command__Alternatives ) ) ( ( rule__Command__Alternatives )* ) )
            {
            // InternalDockerCompose.g:942:2: ( ( ( rule__Command__Alternatives ) ) ( ( rule__Command__Alternatives )* ) )
            // InternalDockerCompose.g:943:3: ( ( rule__Command__Alternatives ) ) ( ( rule__Command__Alternatives )* )
            {
            // InternalDockerCompose.g:943:3: ( ( rule__Command__Alternatives ) )
            // InternalDockerCompose.g:944:4: ( rule__Command__Alternatives )
            {
             before(grammarAccess.getCommandAccess().getAlternatives()); 
            // InternalDockerCompose.g:945:4: ( rule__Command__Alternatives )
            // InternalDockerCompose.g:945:5: rule__Command__Alternatives
            {
            pushFollow(FOLLOW_3);
            rule__Command__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getCommandAccess().getAlternatives()); 

            }

            // InternalDockerCompose.g:948:3: ( ( rule__Command__Alternatives )* )
            // InternalDockerCompose.g:949:4: ( rule__Command__Alternatives )*
            {
             before(grammarAccess.getCommandAccess().getAlternatives()); 
            // InternalDockerCompose.g:950:4: ( rule__Command__Alternatives )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==RULE_ID) ) {
                    int LA1_2 = input.LA(2);

                    if ( (LA1_2==EOF||(LA1_2>=RULE_INT && LA1_2<=RULE_ANY_OTHER)||(LA1_2>=17 && LA1_2<=19)||(LA1_2>=42 && LA1_2<=47)||(LA1_2>=49 && LA1_2<=62)||LA1_2==64||LA1_2==101) ) {
                        alt1=1;
                    }


                }
                else if ( ((LA1_0>=RULE_INT && LA1_0<=RULE_STRING)||(LA1_0>=RULE_DEVICE_DEF && LA1_0<=RULE_ANY_OTHER)||(LA1_0>=17 && LA1_0<=19)||LA1_0==64||LA1_0==101) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalDockerCompose.g:950:5: rule__Command__Alternatives
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Command__Alternatives();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

             after(grammarAccess.getCommandAccess().getAlternatives()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCommand"


    // $ANTLR start "entryRuledotID"
    // InternalDockerCompose.g:960:1: entryRuledotID : ruledotID EOF ;
    public final void entryRuledotID() throws RecognitionException {
        try {
            // InternalDockerCompose.g:961:1: ( ruledotID EOF )
            // InternalDockerCompose.g:962:1: ruledotID EOF
            {
             before(grammarAccess.getDotIDRule()); 
            pushFollow(FOLLOW_1);
            ruledotID();

            state._fsp--;

             after(grammarAccess.getDotIDRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuledotID"


    // $ANTLR start "ruledotID"
    // InternalDockerCompose.g:969:1: ruledotID : ( ( rule__DotID__Group__0 ) ) ;
    public final void ruledotID() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:973:2: ( ( ( rule__DotID__Group__0 ) ) )
            // InternalDockerCompose.g:974:2: ( ( rule__DotID__Group__0 ) )
            {
            // InternalDockerCompose.g:974:2: ( ( rule__DotID__Group__0 ) )
            // InternalDockerCompose.g:975:3: ( rule__DotID__Group__0 )
            {
             before(grammarAccess.getDotIDAccess().getGroup()); 
            // InternalDockerCompose.g:976:3: ( rule__DotID__Group__0 )
            // InternalDockerCompose.g:976:4: rule__DotID__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DotID__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDotIDAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruledotID"


    // $ANTLR start "entryRuleDNS"
    // InternalDockerCompose.g:985:1: entryRuleDNS : ruleDNS EOF ;
    public final void entryRuleDNS() throws RecognitionException {
        try {
            // InternalDockerCompose.g:986:1: ( ruleDNS EOF )
            // InternalDockerCompose.g:987:1: ruleDNS EOF
            {
             before(grammarAccess.getDNSRule()); 
            pushFollow(FOLLOW_1);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getDNSRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDNS"


    // $ANTLR start "ruleDNS"
    // InternalDockerCompose.g:994:1: ruleDNS : ( ( rule__DNS__Group__0 ) ) ;
    public final void ruleDNS() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:998:2: ( ( ( rule__DNS__Group__0 ) ) )
            // InternalDockerCompose.g:999:2: ( ( rule__DNS__Group__0 ) )
            {
            // InternalDockerCompose.g:999:2: ( ( rule__DNS__Group__0 ) )
            // InternalDockerCompose.g:1000:3: ( rule__DNS__Group__0 )
            {
             before(grammarAccess.getDNSAccess().getGroup()); 
            // InternalDockerCompose.g:1001:3: ( rule__DNS__Group__0 )
            // InternalDockerCompose.g:1001:4: rule__DNS__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DNS__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDNSAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDNS"


    // $ANTLR start "entryRuleNetworkAddress"
    // InternalDockerCompose.g:1010:1: entryRuleNetworkAddress : ruleNetworkAddress EOF ;
    public final void entryRuleNetworkAddress() throws RecognitionException {
        try {
            // InternalDockerCompose.g:1011:1: ( ruleNetworkAddress EOF )
            // InternalDockerCompose.g:1012:1: ruleNetworkAddress EOF
            {
             before(grammarAccess.getNetworkAddressRule()); 
            pushFollow(FOLLOW_1);
            ruleNetworkAddress();

            state._fsp--;

             after(grammarAccess.getNetworkAddressRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNetworkAddress"


    // $ANTLR start "ruleNetworkAddress"
    // InternalDockerCompose.g:1019:1: ruleNetworkAddress : ( ( rule__NetworkAddress__Group__0 ) ) ;
    public final void ruleNetworkAddress() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1023:2: ( ( ( rule__NetworkAddress__Group__0 ) ) )
            // InternalDockerCompose.g:1024:2: ( ( rule__NetworkAddress__Group__0 ) )
            {
            // InternalDockerCompose.g:1024:2: ( ( rule__NetworkAddress__Group__0 ) )
            // InternalDockerCompose.g:1025:3: ( rule__NetworkAddress__Group__0 )
            {
             before(grammarAccess.getNetworkAddressAccess().getGroup()); 
            // InternalDockerCompose.g:1026:3: ( rule__NetworkAddress__Group__0 )
            // InternalDockerCompose.g:1026:4: rule__NetworkAddress__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAddressAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNetworkAddress"


    // $ANTLR start "entryRuleEBoolean"
    // InternalDockerCompose.g:1035:1: entryRuleEBoolean : ruleEBoolean EOF ;
    public final void entryRuleEBoolean() throws RecognitionException {
        try {
            // InternalDockerCompose.g:1036:1: ( ruleEBoolean EOF )
            // InternalDockerCompose.g:1037:1: ruleEBoolean EOF
            {
             before(grammarAccess.getEBooleanRule()); 
            pushFollow(FOLLOW_1);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getEBooleanRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEBoolean"


    // $ANTLR start "ruleEBoolean"
    // InternalDockerCompose.g:1044:1: ruleEBoolean : ( ( rule__EBoolean__Alternatives ) ) ;
    public final void ruleEBoolean() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1048:2: ( ( ( rule__EBoolean__Alternatives ) ) )
            // InternalDockerCompose.g:1049:2: ( ( rule__EBoolean__Alternatives ) )
            {
            // InternalDockerCompose.g:1049:2: ( ( rule__EBoolean__Alternatives ) )
            // InternalDockerCompose.g:1050:3: ( rule__EBoolean__Alternatives )
            {
             before(grammarAccess.getEBooleanAccess().getAlternatives()); 
            // InternalDockerCompose.g:1051:3: ( rule__EBoolean__Alternatives )
            // InternalDockerCompose.g:1051:4: rule__EBoolean__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EBoolean__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getEBooleanAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEBoolean"


    // $ANTLR start "ruleRestartPolicy"
    // InternalDockerCompose.g:1060:1: ruleRestartPolicy : ( ( rule__RestartPolicy__Alternatives ) ) ;
    public final void ruleRestartPolicy() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1064:1: ( ( ( rule__RestartPolicy__Alternatives ) ) )
            // InternalDockerCompose.g:1065:2: ( ( rule__RestartPolicy__Alternatives ) )
            {
            // InternalDockerCompose.g:1065:2: ( ( rule__RestartPolicy__Alternatives ) )
            // InternalDockerCompose.g:1066:3: ( rule__RestartPolicy__Alternatives )
            {
             before(grammarAccess.getRestartPolicyAccess().getAlternatives()); 
            // InternalDockerCompose.g:1067:3: ( rule__RestartPolicy__Alternatives )
            // InternalDockerCompose.g:1067:4: rule__RestartPolicy__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__RestartPolicy__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getRestartPolicyAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRestartPolicy"


    // $ANTLR start "ruleAccessMode"
    // InternalDockerCompose.g:1076:1: ruleAccessMode : ( ( rule__AccessMode__Alternatives ) ) ;
    public final void ruleAccessMode() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1080:1: ( ( ( rule__AccessMode__Alternatives ) ) )
            // InternalDockerCompose.g:1081:2: ( ( rule__AccessMode__Alternatives ) )
            {
            // InternalDockerCompose.g:1081:2: ( ( rule__AccessMode__Alternatives ) )
            // InternalDockerCompose.g:1082:3: ( rule__AccessMode__Alternatives )
            {
             before(grammarAccess.getAccessModeAccess().getAlternatives()); 
            // InternalDockerCompose.g:1083:3: ( rule__AccessMode__Alternatives )
            // InternalDockerCompose.g:1083:4: rule__AccessMode__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AccessMode__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getAccessModeAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAccessMode"


    // $ANTLR start "ruleMountType"
    // InternalDockerCompose.g:1092:1: ruleMountType : ( ( rule__MountType__Alternatives ) ) ;
    public final void ruleMountType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1096:1: ( ( ( rule__MountType__Alternatives ) ) )
            // InternalDockerCompose.g:1097:2: ( ( rule__MountType__Alternatives ) )
            {
            // InternalDockerCompose.g:1097:2: ( ( rule__MountType__Alternatives ) )
            // InternalDockerCompose.g:1098:3: ( rule__MountType__Alternatives )
            {
             before(grammarAccess.getMountTypeAccess().getAlternatives()); 
            // InternalDockerCompose.g:1099:3: ( rule__MountType__Alternatives )
            // InternalDockerCompose.g:1099:4: rule__MountType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__MountType__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getMountTypeAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMountType"


    // $ANTLR start "rulePropagationType"
    // InternalDockerCompose.g:1108:1: rulePropagationType : ( ( rule__PropagationType__Alternatives ) ) ;
    public final void rulePropagationType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1112:1: ( ( ( rule__PropagationType__Alternatives ) ) )
            // InternalDockerCompose.g:1113:2: ( ( rule__PropagationType__Alternatives ) )
            {
            // InternalDockerCompose.g:1113:2: ( ( rule__PropagationType__Alternatives ) )
            // InternalDockerCompose.g:1114:3: ( rule__PropagationType__Alternatives )
            {
             before(grammarAccess.getPropagationTypeAccess().getAlternatives()); 
            // InternalDockerCompose.g:1115:3: ( rule__PropagationType__Alternatives )
            // InternalDockerCompose.g:1115:4: rule__PropagationType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__PropagationType__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getPropagationTypeAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePropagationType"


    // $ANTLR start "ruleCondition"
    // InternalDockerCompose.g:1124:1: ruleCondition : ( ( rule__Condition__Alternatives ) ) ;
    public final void ruleCondition() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1128:1: ( ( ( rule__Condition__Alternatives ) ) )
            // InternalDockerCompose.g:1129:2: ( ( rule__Condition__Alternatives ) )
            {
            // InternalDockerCompose.g:1129:2: ( ( rule__Condition__Alternatives ) )
            // InternalDockerCompose.g:1130:3: ( rule__Condition__Alternatives )
            {
             before(grammarAccess.getConditionAccess().getAlternatives()); 
            // InternalDockerCompose.g:1131:3: ( rule__Condition__Alternatives )
            // InternalDockerCompose.g:1131:4: rule__Condition__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Condition__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getConditionAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCondition"


    // $ANTLR start "rule__Version__Alternatives"
    // InternalDockerCompose.g:1139:1: rule__Version__Alternatives : ( ( RULE_VERSION_INT ) | ( RULE_VERSION_FLOAT ) );
    public final void rule__Version__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1143:1: ( ( RULE_VERSION_INT ) | ( RULE_VERSION_FLOAT ) )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==RULE_VERSION_INT) ) {
                alt2=1;
            }
            else if ( (LA2_0==RULE_VERSION_FLOAT) ) {
                alt2=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // InternalDockerCompose.g:1144:2: ( RULE_VERSION_INT )
                    {
                    // InternalDockerCompose.g:1144:2: ( RULE_VERSION_INT )
                    // InternalDockerCompose.g:1145:3: RULE_VERSION_INT
                    {
                     before(grammarAccess.getVersionAccess().getVERSION_INTTerminalRuleCall_0()); 
                    match(input,RULE_VERSION_INT,FOLLOW_2); 
                     after(grammarAccess.getVersionAccess().getVERSION_INTTerminalRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1150:2: ( RULE_VERSION_FLOAT )
                    {
                    // InternalDockerCompose.g:1150:2: ( RULE_VERSION_FLOAT )
                    // InternalDockerCompose.g:1151:3: RULE_VERSION_FLOAT
                    {
                     before(grammarAccess.getVersionAccess().getVERSION_FLOATTerminalRuleCall_1()); 
                    match(input,RULE_VERSION_FLOAT,FOLLOW_2); 
                     after(grammarAccess.getVersionAccess().getVERSION_FLOATTerminalRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Version__Alternatives"


    // $ANTLR start "rule__QuotedInt__Alternatives"
    // InternalDockerCompose.g:1160:1: rule__QuotedInt__Alternatives : ( ( RULE_QUOTED_INT ) | ( RULE_VERSION_INT ) );
    public final void rule__QuotedInt__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1164:1: ( ( RULE_QUOTED_INT ) | ( RULE_VERSION_INT ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==RULE_QUOTED_INT) ) {
                alt3=1;
            }
            else if ( (LA3_0==RULE_VERSION_INT) ) {
                alt3=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalDockerCompose.g:1165:2: ( RULE_QUOTED_INT )
                    {
                    // InternalDockerCompose.g:1165:2: ( RULE_QUOTED_INT )
                    // InternalDockerCompose.g:1166:3: RULE_QUOTED_INT
                    {
                     before(grammarAccess.getQuotedIntAccess().getQUOTED_INTTerminalRuleCall_0()); 
                    match(input,RULE_QUOTED_INT,FOLLOW_2); 
                     after(grammarAccess.getQuotedIntAccess().getQUOTED_INTTerminalRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1171:2: ( RULE_VERSION_INT )
                    {
                    // InternalDockerCompose.g:1171:2: ( RULE_VERSION_INT )
                    // InternalDockerCompose.g:1172:3: RULE_VERSION_INT
                    {
                     before(grammarAccess.getQuotedIntAccess().getVERSION_INTTerminalRuleCall_1()); 
                    match(input,RULE_VERSION_INT,FOLLOW_2); 
                     after(grammarAccess.getQuotedIntAccess().getVERSION_INTTerminalRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QuotedInt__Alternatives"


    // $ANTLR start "rule__Service__Alternatives_3_10_1"
    // InternalDockerCompose.g:1181:1: rule__Service__Alternatives_3_10_1 : ( ( ( ( rule__Service__NetworksAssignment_3_10_1_0 ) ) ( ( rule__Service__NetworksAssignment_3_10_1_0 )* ) ) | ( ( ( rule__Service__NetworksAssignment_3_10_1_1 ) ) ( ( rule__Service__NetworksAssignment_3_10_1_1 )* ) ) );
    public final void rule__Service__Alternatives_3_10_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1185:1: ( ( ( ( rule__Service__NetworksAssignment_3_10_1_0 ) ) ( ( rule__Service__NetworksAssignment_3_10_1_0 )* ) ) | ( ( ( rule__Service__NetworksAssignment_3_10_1_1 ) ) ( ( rule__Service__NetworksAssignment_3_10_1_1 )* ) ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==RULE_ID) ) {
                alt6=1;
            }
            else if ( (LA6_0==19) ) {
                alt6=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalDockerCompose.g:1186:2: ( ( ( rule__Service__NetworksAssignment_3_10_1_0 ) ) ( ( rule__Service__NetworksAssignment_3_10_1_0 )* ) )
                    {
                    // InternalDockerCompose.g:1186:2: ( ( ( rule__Service__NetworksAssignment_3_10_1_0 ) ) ( ( rule__Service__NetworksAssignment_3_10_1_0 )* ) )
                    // InternalDockerCompose.g:1187:3: ( ( rule__Service__NetworksAssignment_3_10_1_0 ) ) ( ( rule__Service__NetworksAssignment_3_10_1_0 )* )
                    {
                    // InternalDockerCompose.g:1187:3: ( ( rule__Service__NetworksAssignment_3_10_1_0 ) )
                    // InternalDockerCompose.g:1188:4: ( rule__Service__NetworksAssignment_3_10_1_0 )
                    {
                     before(grammarAccess.getServiceAccess().getNetworksAssignment_3_10_1_0()); 
                    // InternalDockerCompose.g:1189:4: ( rule__Service__NetworksAssignment_3_10_1_0 )
                    // InternalDockerCompose.g:1189:5: rule__Service__NetworksAssignment_3_10_1_0
                    {
                    pushFollow(FOLLOW_4);
                    rule__Service__NetworksAssignment_3_10_1_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getNetworksAssignment_3_10_1_0()); 

                    }

                    // InternalDockerCompose.g:1192:3: ( ( rule__Service__NetworksAssignment_3_10_1_0 )* )
                    // InternalDockerCompose.g:1193:4: ( rule__Service__NetworksAssignment_3_10_1_0 )*
                    {
                     before(grammarAccess.getServiceAccess().getNetworksAssignment_3_10_1_0()); 
                    // InternalDockerCompose.g:1194:4: ( rule__Service__NetworksAssignment_3_10_1_0 )*
                    loop4:
                    do {
                        int alt4=2;
                        int LA4_0 = input.LA(1);

                        if ( (LA4_0==RULE_ID) ) {
                            int LA4_2 = input.LA(2);

                            if ( (LA4_2==48) ) {
                                alt4=1;
                            }


                        }


                        switch (alt4) {
                    	case 1 :
                    	    // InternalDockerCompose.g:1194:5: rule__Service__NetworksAssignment_3_10_1_0
                    	    {
                    	    pushFollow(FOLLOW_4);
                    	    rule__Service__NetworksAssignment_3_10_1_0();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop4;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getNetworksAssignment_3_10_1_0()); 

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1199:2: ( ( ( rule__Service__NetworksAssignment_3_10_1_1 ) ) ( ( rule__Service__NetworksAssignment_3_10_1_1 )* ) )
                    {
                    // InternalDockerCompose.g:1199:2: ( ( ( rule__Service__NetworksAssignment_3_10_1_1 ) ) ( ( rule__Service__NetworksAssignment_3_10_1_1 )* ) )
                    // InternalDockerCompose.g:1200:3: ( ( rule__Service__NetworksAssignment_3_10_1_1 ) ) ( ( rule__Service__NetworksAssignment_3_10_1_1 )* )
                    {
                    // InternalDockerCompose.g:1200:3: ( ( rule__Service__NetworksAssignment_3_10_1_1 ) )
                    // InternalDockerCompose.g:1201:4: ( rule__Service__NetworksAssignment_3_10_1_1 )
                    {
                     before(grammarAccess.getServiceAccess().getNetworksAssignment_3_10_1_1()); 
                    // InternalDockerCompose.g:1202:4: ( rule__Service__NetworksAssignment_3_10_1_1 )
                    // InternalDockerCompose.g:1202:5: rule__Service__NetworksAssignment_3_10_1_1
                    {
                    pushFollow(FOLLOW_5);
                    rule__Service__NetworksAssignment_3_10_1_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getNetworksAssignment_3_10_1_1()); 

                    }

                    // InternalDockerCompose.g:1205:3: ( ( rule__Service__NetworksAssignment_3_10_1_1 )* )
                    // InternalDockerCompose.g:1206:4: ( rule__Service__NetworksAssignment_3_10_1_1 )*
                    {
                     before(grammarAccess.getServiceAccess().getNetworksAssignment_3_10_1_1()); 
                    // InternalDockerCompose.g:1207:4: ( rule__Service__NetworksAssignment_3_10_1_1 )*
                    loop5:
                    do {
                        int alt5=2;
                        int LA5_0 = input.LA(1);

                        if ( (LA5_0==19) ) {
                            alt5=1;
                        }


                        switch (alt5) {
                    	case 1 :
                    	    // InternalDockerCompose.g:1207:5: rule__Service__NetworksAssignment_3_10_1_1
                    	    {
                    	    pushFollow(FOLLOW_5);
                    	    rule__Service__NetworksAssignment_3_10_1_1();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop5;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getNetworksAssignment_3_10_1_1()); 

                    }


                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Alternatives_3_10_1"


    // $ANTLR start "rule__Service__Alternatives_3_14_1"
    // InternalDockerCompose.g:1216:1: rule__Service__Alternatives_3_14_1 : ( ( ( ( rule__Service__EnvironmentAssignment_3_14_1_0 ) ) ( ( rule__Service__EnvironmentAssignment_3_14_1_0 )* ) ) | ( ( ( rule__Service__EnvironmentAssignment_3_14_1_1 ) ) ( ( rule__Service__EnvironmentAssignment_3_14_1_1 )* ) ) );
    public final void rule__Service__Alternatives_3_14_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1220:1: ( ( ( ( rule__Service__EnvironmentAssignment_3_14_1_0 ) ) ( ( rule__Service__EnvironmentAssignment_3_14_1_0 )* ) ) | ( ( ( rule__Service__EnvironmentAssignment_3_14_1_1 ) ) ( ( rule__Service__EnvironmentAssignment_3_14_1_1 )* ) ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==RULE_ID) ) {
                alt9=1;
            }
            else if ( (LA9_0==19) ) {
                alt9=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalDockerCompose.g:1221:2: ( ( ( rule__Service__EnvironmentAssignment_3_14_1_0 ) ) ( ( rule__Service__EnvironmentAssignment_3_14_1_0 )* ) )
                    {
                    // InternalDockerCompose.g:1221:2: ( ( ( rule__Service__EnvironmentAssignment_3_14_1_0 ) ) ( ( rule__Service__EnvironmentAssignment_3_14_1_0 )* ) )
                    // InternalDockerCompose.g:1222:3: ( ( rule__Service__EnvironmentAssignment_3_14_1_0 ) ) ( ( rule__Service__EnvironmentAssignment_3_14_1_0 )* )
                    {
                    // InternalDockerCompose.g:1222:3: ( ( rule__Service__EnvironmentAssignment_3_14_1_0 ) )
                    // InternalDockerCompose.g:1223:4: ( rule__Service__EnvironmentAssignment_3_14_1_0 )
                    {
                     before(grammarAccess.getServiceAccess().getEnvironmentAssignment_3_14_1_0()); 
                    // InternalDockerCompose.g:1224:4: ( rule__Service__EnvironmentAssignment_3_14_1_0 )
                    // InternalDockerCompose.g:1224:5: rule__Service__EnvironmentAssignment_3_14_1_0
                    {
                    pushFollow(FOLLOW_4);
                    rule__Service__EnvironmentAssignment_3_14_1_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getEnvironmentAssignment_3_14_1_0()); 

                    }

                    // InternalDockerCompose.g:1227:3: ( ( rule__Service__EnvironmentAssignment_3_14_1_0 )* )
                    // InternalDockerCompose.g:1228:4: ( rule__Service__EnvironmentAssignment_3_14_1_0 )*
                    {
                     before(grammarAccess.getServiceAccess().getEnvironmentAssignment_3_14_1_0()); 
                    // InternalDockerCompose.g:1229:4: ( rule__Service__EnvironmentAssignment_3_14_1_0 )*
                    loop7:
                    do {
                        int alt7=2;
                        int LA7_0 = input.LA(1);

                        if ( (LA7_0==RULE_ID) ) {
                            int LA7_2 = input.LA(2);

                            if ( (LA7_2==48) ) {
                                alt7=1;
                            }


                        }


                        switch (alt7) {
                    	case 1 :
                    	    // InternalDockerCompose.g:1229:5: rule__Service__EnvironmentAssignment_3_14_1_0
                    	    {
                    	    pushFollow(FOLLOW_4);
                    	    rule__Service__EnvironmentAssignment_3_14_1_0();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop7;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getEnvironmentAssignment_3_14_1_0()); 

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1234:2: ( ( ( rule__Service__EnvironmentAssignment_3_14_1_1 ) ) ( ( rule__Service__EnvironmentAssignment_3_14_1_1 )* ) )
                    {
                    // InternalDockerCompose.g:1234:2: ( ( ( rule__Service__EnvironmentAssignment_3_14_1_1 ) ) ( ( rule__Service__EnvironmentAssignment_3_14_1_1 )* ) )
                    // InternalDockerCompose.g:1235:3: ( ( rule__Service__EnvironmentAssignment_3_14_1_1 ) ) ( ( rule__Service__EnvironmentAssignment_3_14_1_1 )* )
                    {
                    // InternalDockerCompose.g:1235:3: ( ( rule__Service__EnvironmentAssignment_3_14_1_1 ) )
                    // InternalDockerCompose.g:1236:4: ( rule__Service__EnvironmentAssignment_3_14_1_1 )
                    {
                     before(grammarAccess.getServiceAccess().getEnvironmentAssignment_3_14_1_1()); 
                    // InternalDockerCompose.g:1237:4: ( rule__Service__EnvironmentAssignment_3_14_1_1 )
                    // InternalDockerCompose.g:1237:5: rule__Service__EnvironmentAssignment_3_14_1_1
                    {
                    pushFollow(FOLLOW_5);
                    rule__Service__EnvironmentAssignment_3_14_1_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getEnvironmentAssignment_3_14_1_1()); 

                    }

                    // InternalDockerCompose.g:1240:3: ( ( rule__Service__EnvironmentAssignment_3_14_1_1 )* )
                    // InternalDockerCompose.g:1241:4: ( rule__Service__EnvironmentAssignment_3_14_1_1 )*
                    {
                     before(grammarAccess.getServiceAccess().getEnvironmentAssignment_3_14_1_1()); 
                    // InternalDockerCompose.g:1242:4: ( rule__Service__EnvironmentAssignment_3_14_1_1 )*
                    loop8:
                    do {
                        int alt8=2;
                        int LA8_0 = input.LA(1);

                        if ( (LA8_0==19) ) {
                            alt8=1;
                        }


                        switch (alt8) {
                    	case 1 :
                    	    // InternalDockerCompose.g:1242:5: rule__Service__EnvironmentAssignment_3_14_1_1
                    	    {
                    	    pushFollow(FOLLOW_5);
                    	    rule__Service__EnvironmentAssignment_3_14_1_1();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop8;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getEnvironmentAssignment_3_14_1_1()); 

                    }


                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Alternatives_3_14_1"


    // $ANTLR start "rule__Service__Alternatives_3_16_1"
    // InternalDockerCompose.g:1251:1: rule__Service__Alternatives_3_16_1 : ( ( ( ( rule__Service__Group_3_16_1_0__0 ) ) ( ( rule__Service__Group_3_16_1_0__0 )* ) ) | ( ( rule__Service__DnsAssignment_3_16_1_1 ) ) );
    public final void rule__Service__Alternatives_3_16_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1255:1: ( ( ( ( rule__Service__Group_3_16_1_0__0 ) ) ( ( rule__Service__Group_3_16_1_0__0 )* ) ) | ( ( rule__Service__DnsAssignment_3_16_1_1 ) ) )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==19) ) {
                alt11=1;
            }
            else if ( (LA11_0==RULE_INT) ) {
                alt11=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalDockerCompose.g:1256:2: ( ( ( rule__Service__Group_3_16_1_0__0 ) ) ( ( rule__Service__Group_3_16_1_0__0 )* ) )
                    {
                    // InternalDockerCompose.g:1256:2: ( ( ( rule__Service__Group_3_16_1_0__0 ) ) ( ( rule__Service__Group_3_16_1_0__0 )* ) )
                    // InternalDockerCompose.g:1257:3: ( ( rule__Service__Group_3_16_1_0__0 ) ) ( ( rule__Service__Group_3_16_1_0__0 )* )
                    {
                    // InternalDockerCompose.g:1257:3: ( ( rule__Service__Group_3_16_1_0__0 ) )
                    // InternalDockerCompose.g:1258:4: ( rule__Service__Group_3_16_1_0__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_16_1_0()); 
                    // InternalDockerCompose.g:1259:4: ( rule__Service__Group_3_16_1_0__0 )
                    // InternalDockerCompose.g:1259:5: rule__Service__Group_3_16_1_0__0
                    {
                    pushFollow(FOLLOW_5);
                    rule__Service__Group_3_16_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_16_1_0()); 

                    }

                    // InternalDockerCompose.g:1262:3: ( ( rule__Service__Group_3_16_1_0__0 )* )
                    // InternalDockerCompose.g:1263:4: ( rule__Service__Group_3_16_1_0__0 )*
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_16_1_0()); 
                    // InternalDockerCompose.g:1264:4: ( rule__Service__Group_3_16_1_0__0 )*
                    loop10:
                    do {
                        int alt10=2;
                        int LA10_0 = input.LA(1);

                        if ( (LA10_0==19) ) {
                            alt10=1;
                        }


                        switch (alt10) {
                    	case 1 :
                    	    // InternalDockerCompose.g:1264:5: rule__Service__Group_3_16_1_0__0
                    	    {
                    	    pushFollow(FOLLOW_5);
                    	    rule__Service__Group_3_16_1_0__0();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop10;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getGroup_3_16_1_0()); 

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1269:2: ( ( rule__Service__DnsAssignment_3_16_1_1 ) )
                    {
                    // InternalDockerCompose.g:1269:2: ( ( rule__Service__DnsAssignment_3_16_1_1 ) )
                    // InternalDockerCompose.g:1270:3: ( rule__Service__DnsAssignment_3_16_1_1 )
                    {
                     before(grammarAccess.getServiceAccess().getDnsAssignment_3_16_1_1()); 
                    // InternalDockerCompose.g:1271:3: ( rule__Service__DnsAssignment_3_16_1_1 )
                    // InternalDockerCompose.g:1271:4: rule__Service__DnsAssignment_3_16_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__DnsAssignment_3_16_1_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getDnsAssignment_3_16_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Alternatives_3_16_1"


    // $ANTLR start "rule__EnvironmentVariableMap__Alternatives_3"
    // InternalDockerCompose.g:1279:1: rule__EnvironmentVariableMap__Alternatives_3 : ( ( ( rule__EnvironmentVariableMap__ValueAssignment_3_0 ) ) | ( ( rule__EnvironmentVariableMap__ValueAssignment_3_1 ) ) );
    public final void rule__EnvironmentVariableMap__Alternatives_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1283:1: ( ( ( rule__EnvironmentVariableMap__ValueAssignment_3_0 ) ) | ( ( rule__EnvironmentVariableMap__ValueAssignment_3_1 ) ) )
            int alt12=2;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt12=1;
                }
                break;
            case RULE_VERSION_INT:
            case RULE_VERSION_FLOAT:
            case RULE_QUOTED_INT:
            case RULE_PORT_DEF:
            case RULE_ID:
            case RULE_DEVICE_DEF:
            case 101:
                {
                alt12=1;
                }
                break;
            case 17:
            case 18:
            case 64:
                {
                alt12=2;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }

            switch (alt12) {
                case 1 :
                    // InternalDockerCompose.g:1284:2: ( ( rule__EnvironmentVariableMap__ValueAssignment_3_0 ) )
                    {
                    // InternalDockerCompose.g:1284:2: ( ( rule__EnvironmentVariableMap__ValueAssignment_3_0 ) )
                    // InternalDockerCompose.g:1285:3: ( rule__EnvironmentVariableMap__ValueAssignment_3_0 )
                    {
                     before(grammarAccess.getEnvironmentVariableMapAccess().getValueAssignment_3_0()); 
                    // InternalDockerCompose.g:1286:3: ( rule__EnvironmentVariableMap__ValueAssignment_3_0 )
                    // InternalDockerCompose.g:1286:4: rule__EnvironmentVariableMap__ValueAssignment_3_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__EnvironmentVariableMap__ValueAssignment_3_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getEnvironmentVariableMapAccess().getValueAssignment_3_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1290:2: ( ( rule__EnvironmentVariableMap__ValueAssignment_3_1 ) )
                    {
                    // InternalDockerCompose.g:1290:2: ( ( rule__EnvironmentVariableMap__ValueAssignment_3_1 ) )
                    // InternalDockerCompose.g:1291:3: ( rule__EnvironmentVariableMap__ValueAssignment_3_1 )
                    {
                     before(grammarAccess.getEnvironmentVariableMapAccess().getValueAssignment_3_1()); 
                    // InternalDockerCompose.g:1292:3: ( rule__EnvironmentVariableMap__ValueAssignment_3_1 )
                    // InternalDockerCompose.g:1292:4: rule__EnvironmentVariableMap__ValueAssignment_3_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__EnvironmentVariableMap__ValueAssignment_3_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getEnvironmentVariableMapAccess().getValueAssignment_3_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableMap__Alternatives_3"


    // $ANTLR start "rule__EnvironmentVariableList__Alternatives_3_1"
    // InternalDockerCompose.g:1300:1: rule__EnvironmentVariableList__Alternatives_3_1 : ( ( ( rule__EnvironmentVariableList__ValueAssignment_3_1_0 ) ) | ( ( rule__EnvironmentVariableList__ValueAssignment_3_1_1 ) ) );
    public final void rule__EnvironmentVariableList__Alternatives_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1304:1: ( ( ( rule__EnvironmentVariableList__ValueAssignment_3_1_0 ) ) | ( ( rule__EnvironmentVariableList__ValueAssignment_3_1_1 ) ) )
            int alt13=2;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt13=1;
                }
                break;
            case RULE_VERSION_INT:
            case RULE_VERSION_FLOAT:
            case RULE_QUOTED_INT:
            case RULE_PORT_DEF:
            case RULE_ID:
            case RULE_DEVICE_DEF:
            case 101:
                {
                alt13=1;
                }
                break;
            case 17:
            case 18:
            case 64:
                {
                alt13=2;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }

            switch (alt13) {
                case 1 :
                    // InternalDockerCompose.g:1305:2: ( ( rule__EnvironmentVariableList__ValueAssignment_3_1_0 ) )
                    {
                    // InternalDockerCompose.g:1305:2: ( ( rule__EnvironmentVariableList__ValueAssignment_3_1_0 ) )
                    // InternalDockerCompose.g:1306:3: ( rule__EnvironmentVariableList__ValueAssignment_3_1_0 )
                    {
                     before(grammarAccess.getEnvironmentVariableListAccess().getValueAssignment_3_1_0()); 
                    // InternalDockerCompose.g:1307:3: ( rule__EnvironmentVariableList__ValueAssignment_3_1_0 )
                    // InternalDockerCompose.g:1307:4: rule__EnvironmentVariableList__ValueAssignment_3_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__EnvironmentVariableList__ValueAssignment_3_1_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getEnvironmentVariableListAccess().getValueAssignment_3_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1311:2: ( ( rule__EnvironmentVariableList__ValueAssignment_3_1_1 ) )
                    {
                    // InternalDockerCompose.g:1311:2: ( ( rule__EnvironmentVariableList__ValueAssignment_3_1_1 ) )
                    // InternalDockerCompose.g:1312:3: ( rule__EnvironmentVariableList__ValueAssignment_3_1_1 )
                    {
                     before(grammarAccess.getEnvironmentVariableListAccess().getValueAssignment_3_1_1()); 
                    // InternalDockerCompose.g:1313:3: ( rule__EnvironmentVariableList__ValueAssignment_3_1_1 )
                    // InternalDockerCompose.g:1313:4: rule__EnvironmentVariableList__ValueAssignment_3_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__EnvironmentVariableList__ValueAssignment_3_1_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getEnvironmentVariableListAccess().getValueAssignment_3_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableList__Alternatives_3_1"


    // $ANTLR start "rule__Image__Alternatives_0_1_1"
    // InternalDockerCompose.g:1321:1: rule__Image__Alternatives_0_1_1 : ( ( ruleEInt ) | ( ruledotID ) );
    public final void rule__Image__Alternatives_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1325:1: ( ( ruleEInt ) | ( ruledotID ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==RULE_INT) ) {
                alt14=1;
            }
            else if ( (LA14_0==RULE_ID) ) {
                alt14=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalDockerCompose.g:1326:2: ( ruleEInt )
                    {
                    // InternalDockerCompose.g:1326:2: ( ruleEInt )
                    // InternalDockerCompose.g:1327:3: ruleEInt
                    {
                     before(grammarAccess.getImageAccess().getEIntParserRuleCall_0_1_1_0()); 
                    pushFollow(FOLLOW_2);
                    ruleEInt();

                    state._fsp--;

                     after(grammarAccess.getImageAccess().getEIntParserRuleCall_0_1_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1332:2: ( ruledotID )
                    {
                    // InternalDockerCompose.g:1332:2: ( ruledotID )
                    // InternalDockerCompose.g:1333:3: ruledotID
                    {
                     before(grammarAccess.getImageAccess().getDotIDParserRuleCall_0_1_1_1()); 
                    pushFollow(FOLLOW_2);
                    ruledotID();

                    state._fsp--;

                     after(grammarAccess.getImageAccess().getDotIDParserRuleCall_0_1_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Alternatives_0_1_1"


    // $ANTLR start "rule__Image__Alternatives_1_1_1"
    // InternalDockerCompose.g:1342:1: rule__Image__Alternatives_1_1_1 : ( ( ruleEInt ) | ( ruledotID ) );
    public final void rule__Image__Alternatives_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1346:1: ( ( ruleEInt ) | ( ruledotID ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==RULE_INT) ) {
                alt15=1;
            }
            else if ( (LA15_0==RULE_ID) ) {
                alt15=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalDockerCompose.g:1347:2: ( ruleEInt )
                    {
                    // InternalDockerCompose.g:1347:2: ( ruleEInt )
                    // InternalDockerCompose.g:1348:3: ruleEInt
                    {
                     before(grammarAccess.getImageAccess().getEIntParserRuleCall_1_1_1_0()); 
                    pushFollow(FOLLOW_2);
                    ruleEInt();

                    state._fsp--;

                     after(grammarAccess.getImageAccess().getEIntParserRuleCall_1_1_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1353:2: ( ruledotID )
                    {
                    // InternalDockerCompose.g:1353:2: ( ruledotID )
                    // InternalDockerCompose.g:1354:3: ruledotID
                    {
                     before(grammarAccess.getImageAccess().getDotIDParserRuleCall_1_1_1_1()); 
                    pushFollow(FOLLOW_2);
                    ruledotID();

                    state._fsp--;

                     after(grammarAccess.getImageAccess().getDotIDParserRuleCall_1_1_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Alternatives_1_1_1"


    // $ANTLR start "rule__Image__Alternatives_3"
    // InternalDockerCompose.g:1363:1: rule__Image__Alternatives_3 : ( ( ( rule__Image__Group_3_0__0 ) ) | ( ( rule__Image__Group_3_1__0 ) ) );
    public final void rule__Image__Alternatives_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1367:1: ( ( ( rule__Image__Group_3_0__0 ) ) | ( ( rule__Image__Group_3_1__0 ) ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==48) ) {
                alt16=1;
            }
            else if ( (LA16_0==65) ) {
                alt16=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalDockerCompose.g:1368:2: ( ( rule__Image__Group_3_0__0 ) )
                    {
                    // InternalDockerCompose.g:1368:2: ( ( rule__Image__Group_3_0__0 ) )
                    // InternalDockerCompose.g:1369:3: ( rule__Image__Group_3_0__0 )
                    {
                     before(grammarAccess.getImageAccess().getGroup_3_0()); 
                    // InternalDockerCompose.g:1370:3: ( rule__Image__Group_3_0__0 )
                    // InternalDockerCompose.g:1370:4: rule__Image__Group_3_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Image__Group_3_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImageAccess().getGroup_3_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1374:2: ( ( rule__Image__Group_3_1__0 ) )
                    {
                    // InternalDockerCompose.g:1374:2: ( ( rule__Image__Group_3_1__0 ) )
                    // InternalDockerCompose.g:1375:3: ( rule__Image__Group_3_1__0 )
                    {
                     before(grammarAccess.getImageAccess().getGroup_3_1()); 
                    // InternalDockerCompose.g:1376:3: ( rule__Image__Group_3_1__0 )
                    // InternalDockerCompose.g:1376:4: rule__Image__Group_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Image__Group_3_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImageAccess().getGroup_3_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Alternatives_3"


    // $ANTLR start "rule__Image__Alternatives_3_0_1"
    // InternalDockerCompose.g:1384:1: rule__Image__Alternatives_3_0_1 : ( ( ruleEInt ) | ( ruleEDouble ) | ( ( rule__Image__Group_3_0_1_2__0 ) ) );
    public final void rule__Image__Alternatives_3_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1388:1: ( ( ruleEInt ) | ( ruleEDouble ) | ( ( rule__Image__Group_3_0_1_2__0 ) ) )
            int alt17=3;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==RULE_INT) ) {
                int LA17_1 = input.LA(2);

                if ( (LA17_1==17) ) {
                    alt17=2;
                }
                else if ( (LA17_1==EOF||LA17_1==RULE_INT||LA17_1==RULE_ID||LA17_1==19||(LA17_1>=42 && LA17_1<=47)||(LA17_1>=49 && LA17_1<=62)) ) {
                    alt17=1;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 17, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA17_0==RULE_ID||LA17_0==19) ) {
                alt17=3;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalDockerCompose.g:1389:2: ( ruleEInt )
                    {
                    // InternalDockerCompose.g:1389:2: ( ruleEInt )
                    // InternalDockerCompose.g:1390:3: ruleEInt
                    {
                     before(grammarAccess.getImageAccess().getEIntParserRuleCall_3_0_1_0()); 
                    pushFollow(FOLLOW_2);
                    ruleEInt();

                    state._fsp--;

                     after(grammarAccess.getImageAccess().getEIntParserRuleCall_3_0_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1395:2: ( ruleEDouble )
                    {
                    // InternalDockerCompose.g:1395:2: ( ruleEDouble )
                    // InternalDockerCompose.g:1396:3: ruleEDouble
                    {
                     before(grammarAccess.getImageAccess().getEDoubleParserRuleCall_3_0_1_1()); 
                    pushFollow(FOLLOW_2);
                    ruleEDouble();

                    state._fsp--;

                     after(grammarAccess.getImageAccess().getEDoubleParserRuleCall_3_0_1_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1401:2: ( ( rule__Image__Group_3_0_1_2__0 ) )
                    {
                    // InternalDockerCompose.g:1401:2: ( ( rule__Image__Group_3_0_1_2__0 ) )
                    // InternalDockerCompose.g:1402:3: ( rule__Image__Group_3_0_1_2__0 )
                    {
                     before(grammarAccess.getImageAccess().getGroup_3_0_1_2()); 
                    // InternalDockerCompose.g:1403:3: ( rule__Image__Group_3_0_1_2__0 )
                    // InternalDockerCompose.g:1403:4: rule__Image__Group_3_0_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Image__Group_3_0_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImageAccess().getGroup_3_0_1_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Alternatives_3_0_1"


    // $ANTLR start "rule__Image__Alternatives_3_1_2_1"
    // InternalDockerCompose.g:1411:1: rule__Image__Alternatives_3_1_2_1 : ( ( ruleEInt ) | ( ruledotID ) );
    public final void rule__Image__Alternatives_3_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1415:1: ( ( ruleEInt ) | ( ruledotID ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==RULE_INT) ) {
                alt18=1;
            }
            else if ( (LA18_0==RULE_ID) ) {
                alt18=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalDockerCompose.g:1416:2: ( ruleEInt )
                    {
                    // InternalDockerCompose.g:1416:2: ( ruleEInt )
                    // InternalDockerCompose.g:1417:3: ruleEInt
                    {
                     before(grammarAccess.getImageAccess().getEIntParserRuleCall_3_1_2_1_0()); 
                    pushFollow(FOLLOW_2);
                    ruleEInt();

                    state._fsp--;

                     after(grammarAccess.getImageAccess().getEIntParserRuleCall_3_1_2_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1422:2: ( ruledotID )
                    {
                    // InternalDockerCompose.g:1422:2: ( ruledotID )
                    // InternalDockerCompose.g:1423:3: ruledotID
                    {
                     before(grammarAccess.getImageAccess().getDotIDParserRuleCall_3_1_2_1_1()); 
                    pushFollow(FOLLOW_2);
                    ruledotID();

                    state._fsp--;

                     after(grammarAccess.getImageAccess().getDotIDParserRuleCall_3_1_2_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Alternatives_3_1_2_1"


    // $ANTLR start "rule__Dependency__Alternatives_1"
    // InternalDockerCompose.g:1432:1: rule__Dependency__Alternatives_1 : ( ( ( rule__Dependency__Group_1_0__0 ) ) | ( ( rule__Dependency__Group_1_1__0 ) ) );
    public final void rule__Dependency__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1436:1: ( ( ( rule__Dependency__Group_1_0__0 ) ) | ( ( rule__Dependency__Group_1_1__0 ) ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==19) ) {
                alt19=1;
            }
            else if ( (LA19_0==RULE_ID) ) {
                alt19=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalDockerCompose.g:1437:2: ( ( rule__Dependency__Group_1_0__0 ) )
                    {
                    // InternalDockerCompose.g:1437:2: ( ( rule__Dependency__Group_1_0__0 ) )
                    // InternalDockerCompose.g:1438:3: ( rule__Dependency__Group_1_0__0 )
                    {
                     before(grammarAccess.getDependencyAccess().getGroup_1_0()); 
                    // InternalDockerCompose.g:1439:3: ( rule__Dependency__Group_1_0__0 )
                    // InternalDockerCompose.g:1439:4: rule__Dependency__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Dependency__Group_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDependencyAccess().getGroup_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1443:2: ( ( rule__Dependency__Group_1_1__0 ) )
                    {
                    // InternalDockerCompose.g:1443:2: ( ( rule__Dependency__Group_1_1__0 ) )
                    // InternalDockerCompose.g:1444:3: ( rule__Dependency__Group_1_1__0 )
                    {
                     before(grammarAccess.getDependencyAccess().getGroup_1_1()); 
                    // InternalDockerCompose.g:1445:3: ( rule__Dependency__Group_1_1__0 )
                    // InternalDockerCompose.g:1445:4: rule__Dependency__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Dependency__Group_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDependencyAccess().getGroup_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency__Alternatives_1"


    // $ANTLR start "rule__VolumeConnector__Alternatives_1"
    // InternalDockerCompose.g:1453:1: rule__VolumeConnector__Alternatives_1 : ( ( ( rule__VolumeConnector__Group_1_0__0 ) ) | ( ( rule__VolumeConnector__UnorderedGroup_1_1 ) ) );
    public final void rule__VolumeConnector__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1457:1: ( ( ( rule__VolumeConnector__Group_1_0__0 ) ) | ( ( rule__VolumeConnector__UnorderedGroup_1_1 ) ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==RULE_ID) ) {
                alt20=1;
            }
            else if ( (LA20_0==56||(LA20_0>=71 && LA20_0<=74)||LA20_0==76||LA20_0==78) ) {
                alt20=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalDockerCompose.g:1458:2: ( ( rule__VolumeConnector__Group_1_0__0 ) )
                    {
                    // InternalDockerCompose.g:1458:2: ( ( rule__VolumeConnector__Group_1_0__0 ) )
                    // InternalDockerCompose.g:1459:3: ( rule__VolumeConnector__Group_1_0__0 )
                    {
                     before(grammarAccess.getVolumeConnectorAccess().getGroup_1_0()); 
                    // InternalDockerCompose.g:1460:3: ( rule__VolumeConnector__Group_1_0__0 )
                    // InternalDockerCompose.g:1460:4: rule__VolumeConnector__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector__Group_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnectorAccess().getGroup_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1464:2: ( ( rule__VolumeConnector__UnorderedGroup_1_1 ) )
                    {
                    // InternalDockerCompose.g:1464:2: ( ( rule__VolumeConnector__UnorderedGroup_1_1 ) )
                    // InternalDockerCompose.g:1465:3: ( rule__VolumeConnector__UnorderedGroup_1_1 )
                    {
                     before(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1()); 
                    // InternalDockerCompose.g:1466:3: ( rule__VolumeConnector__UnorderedGroup_1_1 )
                    // InternalDockerCompose.g:1466:4: rule__VolumeConnector__UnorderedGroup_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector__UnorderedGroup_1_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Alternatives_1"


    // $ANTLR start "rule__ConfigConnector__Alternatives_1"
    // InternalDockerCompose.g:1474:1: rule__ConfigConnector__Alternatives_1 : ( ( ( rule__ConfigConnector__ConfigAssignment_1_0 ) ) | ( ( rule__ConfigConnector__UnorderedGroup_1_1 ) ) );
    public final void rule__ConfigConnector__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1478:1: ( ( ( rule__ConfigConnector__ConfigAssignment_1_0 ) ) | ( ( rule__ConfigConnector__UnorderedGroup_1_1 ) ) )
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==RULE_ID) ) {
                alt21=1;
            }
            else if ( (LA21_0==71||LA21_0==73||(LA21_0>=80 && LA21_0<=82)) ) {
                alt21=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }
            switch (alt21) {
                case 1 :
                    // InternalDockerCompose.g:1479:2: ( ( rule__ConfigConnector__ConfigAssignment_1_0 ) )
                    {
                    // InternalDockerCompose.g:1479:2: ( ( rule__ConfigConnector__ConfigAssignment_1_0 ) )
                    // InternalDockerCompose.g:1480:3: ( rule__ConfigConnector__ConfigAssignment_1_0 )
                    {
                     before(grammarAccess.getConfigConnectorAccess().getConfigAssignment_1_0()); 
                    // InternalDockerCompose.g:1481:3: ( rule__ConfigConnector__ConfigAssignment_1_0 )
                    // InternalDockerCompose.g:1481:4: rule__ConfigConnector__ConfigAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector__ConfigAssignment_1_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigConnectorAccess().getConfigAssignment_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1485:2: ( ( rule__ConfigConnector__UnorderedGroup_1_1 ) )
                    {
                    // InternalDockerCompose.g:1485:2: ( ( rule__ConfigConnector__UnorderedGroup_1_1 ) )
                    // InternalDockerCompose.g:1486:3: ( rule__ConfigConnector__UnorderedGroup_1_1 )
                    {
                     before(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1()); 
                    // InternalDockerCompose.g:1487:3: ( rule__ConfigConnector__UnorderedGroup_1_1 )
                    // InternalDockerCompose.g:1487:4: rule__ConfigConnector__UnorderedGroup_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector__UnorderedGroup_1_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Alternatives_1"


    // $ANTLR start "rule__SecretConnector__Alternatives_1"
    // InternalDockerCompose.g:1495:1: rule__SecretConnector__Alternatives_1 : ( ( ( rule__SecretConnector__SecretAssignment_1_0 ) ) | ( ( rule__SecretConnector__UnorderedGroup_1_1 ) ) );
    public final void rule__SecretConnector__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1499:1: ( ( ( rule__SecretConnector__SecretAssignment_1_0 ) ) | ( ( rule__SecretConnector__UnorderedGroup_1_1 ) ) )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==RULE_ID) ) {
                alt22=1;
            }
            else if ( (LA22_0==71||LA22_0==73||(LA22_0>=80 && LA22_0<=82)) ) {
                alt22=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalDockerCompose.g:1500:2: ( ( rule__SecretConnector__SecretAssignment_1_0 ) )
                    {
                    // InternalDockerCompose.g:1500:2: ( ( rule__SecretConnector__SecretAssignment_1_0 ) )
                    // InternalDockerCompose.g:1501:3: ( rule__SecretConnector__SecretAssignment_1_0 )
                    {
                     before(grammarAccess.getSecretConnectorAccess().getSecretAssignment_1_0()); 
                    // InternalDockerCompose.g:1502:3: ( rule__SecretConnector__SecretAssignment_1_0 )
                    // InternalDockerCompose.g:1502:4: rule__SecretConnector__SecretAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector__SecretAssignment_1_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretConnectorAccess().getSecretAssignment_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1506:2: ( ( rule__SecretConnector__UnorderedGroup_1_1 ) )
                    {
                    // InternalDockerCompose.g:1506:2: ( ( rule__SecretConnector__UnorderedGroup_1_1 ) )
                    // InternalDockerCompose.g:1507:3: ( rule__SecretConnector__UnorderedGroup_1_1 )
                    {
                     before(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1()); 
                    // InternalDockerCompose.g:1508:3: ( rule__SecretConnector__UnorderedGroup_1_1 )
                    // InternalDockerCompose.g:1508:4: rule__SecretConnector__UnorderedGroup_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector__UnorderedGroup_1_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Alternatives_1"


    // $ANTLR start "rule__Network__Alternatives_3"
    // InternalDockerCompose.g:1516:1: rule__Network__Alternatives_3 : ( ( ( rule__Network__Group_3_0__0 ) ) | ( ( rule__Network__UnorderedGroup_3_1 ) ) );
    public final void rule__Network__Alternatives_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1520:1: ( ( ( rule__Network__Group_3_0__0 ) ) | ( ( rule__Network__UnorderedGroup_3_1 ) ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==83) ) {
                alt23=1;
            }
            else if ( (LA23_0==EOF||LA23_0==RULE_ID||(LA23_0>=42 && LA23_0<=47)||(LA23_0>=85 && LA23_0<=93)) ) {
                alt23=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalDockerCompose.g:1521:2: ( ( rule__Network__Group_3_0__0 ) )
                    {
                    // InternalDockerCompose.g:1521:2: ( ( rule__Network__Group_3_0__0 ) )
                    // InternalDockerCompose.g:1522:3: ( rule__Network__Group_3_0__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_0()); 
                    // InternalDockerCompose.g:1523:3: ( rule__Network__Group_3_0__0 )
                    // InternalDockerCompose.g:1523:4: rule__Network__Group_3_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1527:2: ( ( rule__Network__UnorderedGroup_3_1 ) )
                    {
                    // InternalDockerCompose.g:1527:2: ( ( rule__Network__UnorderedGroup_3_1 ) )
                    // InternalDockerCompose.g:1528:3: ( rule__Network__UnorderedGroup_3_1 )
                    {
                     before(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1()); 
                    // InternalDockerCompose.g:1529:3: ( rule__Network__UnorderedGroup_3_1 )
                    // InternalDockerCompose.g:1529:4: rule__Network__UnorderedGroup_3_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Alternatives_3"


    // $ANTLR start "rule__Ports__Alternatives"
    // InternalDockerCompose.g:1537:1: rule__Ports__Alternatives : ( ( RULE_PORT_DEF ) | ( RULE_VERSION_INT ) | ( RULE_QUOTED_INT ) );
    public final void rule__Ports__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1541:1: ( ( RULE_PORT_DEF ) | ( RULE_VERSION_INT ) | ( RULE_QUOTED_INT ) )
            int alt24=3;
            switch ( input.LA(1) ) {
            case RULE_PORT_DEF:
                {
                alt24=1;
                }
                break;
            case RULE_VERSION_INT:
                {
                alt24=2;
                }
                break;
            case RULE_QUOTED_INT:
                {
                alt24=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // InternalDockerCompose.g:1542:2: ( RULE_PORT_DEF )
                    {
                    // InternalDockerCompose.g:1542:2: ( RULE_PORT_DEF )
                    // InternalDockerCompose.g:1543:3: RULE_PORT_DEF
                    {
                     before(grammarAccess.getPortsAccess().getPORT_DEFTerminalRuleCall_0()); 
                    match(input,RULE_PORT_DEF,FOLLOW_2); 
                     after(grammarAccess.getPortsAccess().getPORT_DEFTerminalRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1548:2: ( RULE_VERSION_INT )
                    {
                    // InternalDockerCompose.g:1548:2: ( RULE_VERSION_INT )
                    // InternalDockerCompose.g:1549:3: RULE_VERSION_INT
                    {
                     before(grammarAccess.getPortsAccess().getVERSION_INTTerminalRuleCall_1()); 
                    match(input,RULE_VERSION_INT,FOLLOW_2); 
                     after(grammarAccess.getPortsAccess().getVERSION_INTTerminalRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1554:2: ( RULE_QUOTED_INT )
                    {
                    // InternalDockerCompose.g:1554:2: ( RULE_QUOTED_INT )
                    // InternalDockerCompose.g:1555:3: RULE_QUOTED_INT
                    {
                     before(grammarAccess.getPortsAccess().getQUOTED_INTTerminalRuleCall_2()); 
                    match(input,RULE_QUOTED_INT,FOLLOW_2); 
                     after(grammarAccess.getPortsAccess().getQUOTED_INTTerminalRuleCall_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Ports__Alternatives"


    // $ANTLR start "rule__PATH__Alternatives"
    // InternalDockerCompose.g:1564:1: rule__PATH__Alternatives : ( ( ( rule__PATH__Group_0__0 ) ) | ( ( rule__PATH__Group_1__0 ) ) );
    public final void rule__PATH__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1568:1: ( ( ( rule__PATH__Group_0__0 ) ) | ( ( rule__PATH__Group_1__0 ) ) )
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==RULE_ID||(LA25_0>=17 && LA25_0<=18)) ) {
                alt25=1;
            }
            else if ( (LA25_0==64) ) {
                alt25=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // InternalDockerCompose.g:1569:2: ( ( rule__PATH__Group_0__0 ) )
                    {
                    // InternalDockerCompose.g:1569:2: ( ( rule__PATH__Group_0__0 ) )
                    // InternalDockerCompose.g:1570:3: ( rule__PATH__Group_0__0 )
                    {
                     before(grammarAccess.getPATHAccess().getGroup_0()); 
                    // InternalDockerCompose.g:1571:3: ( rule__PATH__Group_0__0 )
                    // InternalDockerCompose.g:1571:4: rule__PATH__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PATH__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPATHAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1575:2: ( ( rule__PATH__Group_1__0 ) )
                    {
                    // InternalDockerCompose.g:1575:2: ( ( rule__PATH__Group_1__0 ) )
                    // InternalDockerCompose.g:1576:3: ( rule__PATH__Group_1__0 )
                    {
                     before(grammarAccess.getPATHAccess().getGroup_1()); 
                    // InternalDockerCompose.g:1577:3: ( rule__PATH__Group_1__0 )
                    // InternalDockerCompose.g:1577:4: rule__PATH__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PATH__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPATHAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Alternatives"


    // $ANTLR start "rule__PATH__Alternatives_0_0"
    // InternalDockerCompose.g:1585:1: rule__PATH__Alternatives_0_0 : ( ( ( rule__PATH__Group_0_0_0__0 ) ) | ( '.' ) | ( '..' ) );
    public final void rule__PATH__Alternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1589:1: ( ( ( rule__PATH__Group_0_0_0__0 ) ) | ( '.' ) | ( '..' ) )
            int alt26=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt26=1;
                }
                break;
            case 17:
                {
                alt26=2;
                }
                break;
            case 18:
                {
                alt26=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }

            switch (alt26) {
                case 1 :
                    // InternalDockerCompose.g:1590:2: ( ( rule__PATH__Group_0_0_0__0 ) )
                    {
                    // InternalDockerCompose.g:1590:2: ( ( rule__PATH__Group_0_0_0__0 ) )
                    // InternalDockerCompose.g:1591:3: ( rule__PATH__Group_0_0_0__0 )
                    {
                     before(grammarAccess.getPATHAccess().getGroup_0_0_0()); 
                    // InternalDockerCompose.g:1592:3: ( rule__PATH__Group_0_0_0__0 )
                    // InternalDockerCompose.g:1592:4: rule__PATH__Group_0_0_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PATH__Group_0_0_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPATHAccess().getGroup_0_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1596:2: ( '.' )
                    {
                    // InternalDockerCompose.g:1596:2: ( '.' )
                    // InternalDockerCompose.g:1597:3: '.'
                    {
                     before(grammarAccess.getPATHAccess().getFullStopKeyword_0_0_1()); 
                    match(input,17,FOLLOW_2); 
                     after(grammarAccess.getPATHAccess().getFullStopKeyword_0_0_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1602:2: ( '..' )
                    {
                    // InternalDockerCompose.g:1602:2: ( '..' )
                    // InternalDockerCompose.g:1603:3: '..'
                    {
                     before(grammarAccess.getPATHAccess().getFullStopFullStopKeyword_0_0_2()); 
                    match(input,18,FOLLOW_2); 
                     after(grammarAccess.getPATHAccess().getFullStopFullStopKeyword_0_0_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Alternatives_0_0"


    // $ANTLR start "rule__PATH__Alternatives_0_1_1"
    // InternalDockerCompose.g:1612:1: rule__PATH__Alternatives_0_1_1 : ( ( ( rule__PATH__Group_0_1_1_0__0 ) ) | ( '.' ) | ( '..' ) );
    public final void rule__PATH__Alternatives_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1616:1: ( ( ( rule__PATH__Group_0_1_1_0__0 ) ) | ( '.' ) | ( '..' ) )
            int alt27=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt27=1;
                }
                break;
            case 17:
                {
                alt27=2;
                }
                break;
            case 18:
                {
                alt27=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }

            switch (alt27) {
                case 1 :
                    // InternalDockerCompose.g:1617:2: ( ( rule__PATH__Group_0_1_1_0__0 ) )
                    {
                    // InternalDockerCompose.g:1617:2: ( ( rule__PATH__Group_0_1_1_0__0 ) )
                    // InternalDockerCompose.g:1618:3: ( rule__PATH__Group_0_1_1_0__0 )
                    {
                     before(grammarAccess.getPATHAccess().getGroup_0_1_1_0()); 
                    // InternalDockerCompose.g:1619:3: ( rule__PATH__Group_0_1_1_0__0 )
                    // InternalDockerCompose.g:1619:4: rule__PATH__Group_0_1_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PATH__Group_0_1_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPATHAccess().getGroup_0_1_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1623:2: ( '.' )
                    {
                    // InternalDockerCompose.g:1623:2: ( '.' )
                    // InternalDockerCompose.g:1624:3: '.'
                    {
                     before(grammarAccess.getPATHAccess().getFullStopKeyword_0_1_1_1()); 
                    match(input,17,FOLLOW_2); 
                     after(grammarAccess.getPATHAccess().getFullStopKeyword_0_1_1_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1629:2: ( '..' )
                    {
                    // InternalDockerCompose.g:1629:2: ( '..' )
                    // InternalDockerCompose.g:1630:3: '..'
                    {
                     before(grammarAccess.getPATHAccess().getFullStopFullStopKeyword_0_1_1_2()); 
                    match(input,18,FOLLOW_2); 
                     after(grammarAccess.getPATHAccess().getFullStopFullStopKeyword_0_1_1_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Alternatives_0_1_1"


    // $ANTLR start "rule__PATH__Alternatives_1_1_0"
    // InternalDockerCompose.g:1639:1: rule__PATH__Alternatives_1_1_0 : ( ( ( rule__PATH__Group_1_1_0_0__0 ) ) | ( '.' ) | ( '..' ) );
    public final void rule__PATH__Alternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1643:1: ( ( ( rule__PATH__Group_1_1_0_0__0 ) ) | ( '.' ) | ( '..' ) )
            int alt28=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt28=1;
                }
                break;
            case 17:
                {
                alt28=2;
                }
                break;
            case 18:
                {
                alt28=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }

            switch (alt28) {
                case 1 :
                    // InternalDockerCompose.g:1644:2: ( ( rule__PATH__Group_1_1_0_0__0 ) )
                    {
                    // InternalDockerCompose.g:1644:2: ( ( rule__PATH__Group_1_1_0_0__0 ) )
                    // InternalDockerCompose.g:1645:3: ( rule__PATH__Group_1_1_0_0__0 )
                    {
                     before(grammarAccess.getPATHAccess().getGroup_1_1_0_0()); 
                    // InternalDockerCompose.g:1646:3: ( rule__PATH__Group_1_1_0_0__0 )
                    // InternalDockerCompose.g:1646:4: rule__PATH__Group_1_1_0_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PATH__Group_1_1_0_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPATHAccess().getGroup_1_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1650:2: ( '.' )
                    {
                    // InternalDockerCompose.g:1650:2: ( '.' )
                    // InternalDockerCompose.g:1651:3: '.'
                    {
                     before(grammarAccess.getPATHAccess().getFullStopKeyword_1_1_0_1()); 
                    match(input,17,FOLLOW_2); 
                     after(grammarAccess.getPATHAccess().getFullStopKeyword_1_1_0_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1656:2: ( '..' )
                    {
                    // InternalDockerCompose.g:1656:2: ( '..' )
                    // InternalDockerCompose.g:1657:3: '..'
                    {
                     before(grammarAccess.getPATHAccess().getFullStopFullStopKeyword_1_1_0_2()); 
                    match(input,18,FOLLOW_2); 
                     after(grammarAccess.getPATHAccess().getFullStopFullStopKeyword_1_1_0_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Alternatives_1_1_0"


    // $ANTLR start "rule__PATH__Alternatives_1_2"
    // InternalDockerCompose.g:1666:1: rule__PATH__Alternatives_1_2 : ( ( ( rule__PATH__Group_1_2_0__0 ) ) | ( '.' ) | ( '..' ) );
    public final void rule__PATH__Alternatives_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1670:1: ( ( ( rule__PATH__Group_1_2_0__0 ) ) | ( '.' ) | ( '..' ) )
            int alt29=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt29=1;
                }
                break;
            case 17:
                {
                alt29=2;
                }
                break;
            case 18:
                {
                alt29=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }

            switch (alt29) {
                case 1 :
                    // InternalDockerCompose.g:1671:2: ( ( rule__PATH__Group_1_2_0__0 ) )
                    {
                    // InternalDockerCompose.g:1671:2: ( ( rule__PATH__Group_1_2_0__0 ) )
                    // InternalDockerCompose.g:1672:3: ( rule__PATH__Group_1_2_0__0 )
                    {
                     before(grammarAccess.getPATHAccess().getGroup_1_2_0()); 
                    // InternalDockerCompose.g:1673:3: ( rule__PATH__Group_1_2_0__0 )
                    // InternalDockerCompose.g:1673:4: rule__PATH__Group_1_2_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PATH__Group_1_2_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getPATHAccess().getGroup_1_2_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1677:2: ( '.' )
                    {
                    // InternalDockerCompose.g:1677:2: ( '.' )
                    // InternalDockerCompose.g:1678:3: '.'
                    {
                     before(grammarAccess.getPATHAccess().getFullStopKeyword_1_2_1()); 
                    match(input,17,FOLLOW_2); 
                     after(grammarAccess.getPATHAccess().getFullStopKeyword_1_2_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1683:2: ( '..' )
                    {
                    // InternalDockerCompose.g:1683:2: ( '..' )
                    // InternalDockerCompose.g:1684:3: '..'
                    {
                     before(grammarAccess.getPATHAccess().getFullStopFullStopKeyword_1_2_2()); 
                    match(input,18,FOLLOW_2); 
                     after(grammarAccess.getPATHAccess().getFullStopFullStopKeyword_1_2_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Alternatives_1_2"


    // $ANTLR start "rule__EString__Alternatives"
    // InternalDockerCompose.g:1693:1: rule__EString__Alternatives : ( ( RULE_STRING ) | ( RULE_ID ) | ( ( rule__EString__Group_2__0 ) ) | ( RULE_PORT_DEF ) | ( RULE_VERSION_INT ) | ( RULE_QUOTED_INT ) | ( RULE_VERSION_FLOAT ) | ( RULE_DEVICE_DEF ) );
    public final void rule__EString__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1697:1: ( ( RULE_STRING ) | ( RULE_ID ) | ( ( rule__EString__Group_2__0 ) ) | ( RULE_PORT_DEF ) | ( RULE_VERSION_INT ) | ( RULE_QUOTED_INT ) | ( RULE_VERSION_FLOAT ) | ( RULE_DEVICE_DEF ) )
            int alt30=8;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt30=1;
                }
                break;
            case RULE_ID:
                {
                alt30=2;
                }
                break;
            case 101:
                {
                alt30=3;
                }
                break;
            case RULE_PORT_DEF:
                {
                alt30=4;
                }
                break;
            case RULE_VERSION_INT:
                {
                alt30=5;
                }
                break;
            case RULE_QUOTED_INT:
                {
                alt30=6;
                }
                break;
            case RULE_VERSION_FLOAT:
                {
                alt30=7;
                }
                break;
            case RULE_DEVICE_DEF:
                {
                alt30=8;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }

            switch (alt30) {
                case 1 :
                    // InternalDockerCompose.g:1698:2: ( RULE_STRING )
                    {
                    // InternalDockerCompose.g:1698:2: ( RULE_STRING )
                    // InternalDockerCompose.g:1699:3: RULE_STRING
                    {
                     before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
                    match(input,RULE_STRING,FOLLOW_2); 
                     after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1704:2: ( RULE_ID )
                    {
                    // InternalDockerCompose.g:1704:2: ( RULE_ID )
                    // InternalDockerCompose.g:1705:3: RULE_ID
                    {
                     before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
                    match(input,RULE_ID,FOLLOW_2); 
                     after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1710:2: ( ( rule__EString__Group_2__0 ) )
                    {
                    // InternalDockerCompose.g:1710:2: ( ( rule__EString__Group_2__0 ) )
                    // InternalDockerCompose.g:1711:3: ( rule__EString__Group_2__0 )
                    {
                     before(grammarAccess.getEStringAccess().getGroup_2()); 
                    // InternalDockerCompose.g:1712:3: ( rule__EString__Group_2__0 )
                    // InternalDockerCompose.g:1712:4: rule__EString__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__EString__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getEStringAccess().getGroup_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:1716:2: ( RULE_PORT_DEF )
                    {
                    // InternalDockerCompose.g:1716:2: ( RULE_PORT_DEF )
                    // InternalDockerCompose.g:1717:3: RULE_PORT_DEF
                    {
                     before(grammarAccess.getEStringAccess().getPORT_DEFTerminalRuleCall_3()); 
                    match(input,RULE_PORT_DEF,FOLLOW_2); 
                     after(grammarAccess.getEStringAccess().getPORT_DEFTerminalRuleCall_3()); 

                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:1722:2: ( RULE_VERSION_INT )
                    {
                    // InternalDockerCompose.g:1722:2: ( RULE_VERSION_INT )
                    // InternalDockerCompose.g:1723:3: RULE_VERSION_INT
                    {
                     before(grammarAccess.getEStringAccess().getVERSION_INTTerminalRuleCall_4()); 
                    match(input,RULE_VERSION_INT,FOLLOW_2); 
                     after(grammarAccess.getEStringAccess().getVERSION_INTTerminalRuleCall_4()); 

                    }


                    }
                    break;
                case 6 :
                    // InternalDockerCompose.g:1728:2: ( RULE_QUOTED_INT )
                    {
                    // InternalDockerCompose.g:1728:2: ( RULE_QUOTED_INT )
                    // InternalDockerCompose.g:1729:3: RULE_QUOTED_INT
                    {
                     before(grammarAccess.getEStringAccess().getQUOTED_INTTerminalRuleCall_5()); 
                    match(input,RULE_QUOTED_INT,FOLLOW_2); 
                     after(grammarAccess.getEStringAccess().getQUOTED_INTTerminalRuleCall_5()); 

                    }


                    }
                    break;
                case 7 :
                    // InternalDockerCompose.g:1734:2: ( RULE_VERSION_FLOAT )
                    {
                    // InternalDockerCompose.g:1734:2: ( RULE_VERSION_FLOAT )
                    // InternalDockerCompose.g:1735:3: RULE_VERSION_FLOAT
                    {
                     before(grammarAccess.getEStringAccess().getVERSION_FLOATTerminalRuleCall_6()); 
                    match(input,RULE_VERSION_FLOAT,FOLLOW_2); 
                     after(grammarAccess.getEStringAccess().getVERSION_FLOATTerminalRuleCall_6()); 

                    }


                    }
                    break;
                case 8 :
                    // InternalDockerCompose.g:1740:2: ( RULE_DEVICE_DEF )
                    {
                    // InternalDockerCompose.g:1740:2: ( RULE_DEVICE_DEF )
                    // InternalDockerCompose.g:1741:3: RULE_DEVICE_DEF
                    {
                     before(grammarAccess.getEStringAccess().getDEVICE_DEFTerminalRuleCall_7()); 
                    match(input,RULE_DEVICE_DEF,FOLLOW_2); 
                     after(grammarAccess.getEStringAccess().getDEVICE_DEFTerminalRuleCall_7()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EString__Alternatives"


    // $ANTLR start "rule__Command__Alternatives"
    // InternalDockerCompose.g:1750:1: rule__Command__Alternatives : ( ( ruleEString ) | ( RULE_ANY_OTHER ) | ( rulePATH ) | ( ruleEInt ) | ( '-' ) );
    public final void rule__Command__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1754:1: ( ( ruleEString ) | ( RULE_ANY_OTHER ) | ( rulePATH ) | ( ruleEInt ) | ( '-' ) )
            int alt31=5;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt31=1;
                }
                break;
            case RULE_VERSION_INT:
            case RULE_VERSION_FLOAT:
            case RULE_QUOTED_INT:
            case RULE_PORT_DEF:
            case RULE_ID:
            case RULE_DEVICE_DEF:
            case 101:
                {
                alt31=1;
                }
                break;
            case RULE_ANY_OTHER:
                {
                alt31=2;
                }
                break;
            case 17:
            case 18:
            case 64:
                {
                alt31=3;
                }
                break;
            case RULE_INT:
                {
                alt31=4;
                }
                break;
            case 19:
                {
                alt31=5;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }

            switch (alt31) {
                case 1 :
                    // InternalDockerCompose.g:1755:2: ( ruleEString )
                    {
                    // InternalDockerCompose.g:1755:2: ( ruleEString )
                    // InternalDockerCompose.g:1756:3: ruleEString
                    {
                     before(grammarAccess.getCommandAccess().getEStringParserRuleCall_0()); 
                    pushFollow(FOLLOW_2);
                    ruleEString();

                    state._fsp--;

                     after(grammarAccess.getCommandAccess().getEStringParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1761:2: ( RULE_ANY_OTHER )
                    {
                    // InternalDockerCompose.g:1761:2: ( RULE_ANY_OTHER )
                    // InternalDockerCompose.g:1762:3: RULE_ANY_OTHER
                    {
                     before(grammarAccess.getCommandAccess().getANY_OTHERTerminalRuleCall_1()); 
                    match(input,RULE_ANY_OTHER,FOLLOW_2); 
                     after(grammarAccess.getCommandAccess().getANY_OTHERTerminalRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1767:2: ( rulePATH )
                    {
                    // InternalDockerCompose.g:1767:2: ( rulePATH )
                    // InternalDockerCompose.g:1768:3: rulePATH
                    {
                     before(grammarAccess.getCommandAccess().getPATHParserRuleCall_2()); 
                    pushFollow(FOLLOW_2);
                    rulePATH();

                    state._fsp--;

                     after(grammarAccess.getCommandAccess().getPATHParserRuleCall_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:1773:2: ( ruleEInt )
                    {
                    // InternalDockerCompose.g:1773:2: ( ruleEInt )
                    // InternalDockerCompose.g:1774:3: ruleEInt
                    {
                     before(grammarAccess.getCommandAccess().getEIntParserRuleCall_3()); 
                    pushFollow(FOLLOW_2);
                    ruleEInt();

                    state._fsp--;

                     after(grammarAccess.getCommandAccess().getEIntParserRuleCall_3()); 

                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:1779:2: ( '-' )
                    {
                    // InternalDockerCompose.g:1779:2: ( '-' )
                    // InternalDockerCompose.g:1780:3: '-'
                    {
                     before(grammarAccess.getCommandAccess().getHyphenMinusKeyword_4()); 
                    match(input,19,FOLLOW_2); 
                     after(grammarAccess.getCommandAccess().getHyphenMinusKeyword_4()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Command__Alternatives"


    // $ANTLR start "rule__EBoolean__Alternatives"
    // InternalDockerCompose.g:1789:1: rule__EBoolean__Alternatives : ( ( 'true' ) | ( 'false' ) );
    public final void rule__EBoolean__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1793:1: ( ( 'true' ) | ( 'false' ) )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==20) ) {
                alt32=1;
            }
            else if ( (LA32_0==21) ) {
                alt32=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // InternalDockerCompose.g:1794:2: ( 'true' )
                    {
                    // InternalDockerCompose.g:1794:2: ( 'true' )
                    // InternalDockerCompose.g:1795:3: 'true'
                    {
                     before(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); 
                    match(input,20,FOLLOW_2); 
                     after(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1800:2: ( 'false' )
                    {
                    // InternalDockerCompose.g:1800:2: ( 'false' )
                    // InternalDockerCompose.g:1801:3: 'false'
                    {
                     before(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); 
                    match(input,21,FOLLOW_2); 
                     after(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EBoolean__Alternatives"


    // $ANTLR start "rule__RestartPolicy__Alternatives"
    // InternalDockerCompose.g:1810:1: rule__RestartPolicy__Alternatives : ( ( ( '\"no\"' ) ) | ( ( 'always' ) ) | ( ( 'on-failure' ) ) | ( ( 'unless-stopped' ) ) );
    public final void rule__RestartPolicy__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1814:1: ( ( ( '\"no\"' ) ) | ( ( 'always' ) ) | ( ( 'on-failure' ) ) | ( ( 'unless-stopped' ) ) )
            int alt33=4;
            switch ( input.LA(1) ) {
            case 22:
                {
                alt33=1;
                }
                break;
            case 23:
                {
                alt33=2;
                }
                break;
            case 24:
                {
                alt33=3;
                }
                break;
            case 25:
                {
                alt33=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }

            switch (alt33) {
                case 1 :
                    // InternalDockerCompose.g:1815:2: ( ( '\"no\"' ) )
                    {
                    // InternalDockerCompose.g:1815:2: ( ( '\"no\"' ) )
                    // InternalDockerCompose.g:1816:3: ( '\"no\"' )
                    {
                     before(grammarAccess.getRestartPolicyAccess().getNoEnumLiteralDeclaration_0()); 
                    // InternalDockerCompose.g:1817:3: ( '\"no\"' )
                    // InternalDockerCompose.g:1817:4: '\"no\"'
                    {
                    match(input,22,FOLLOW_2); 

                    }

                     after(grammarAccess.getRestartPolicyAccess().getNoEnumLiteralDeclaration_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1821:2: ( ( 'always' ) )
                    {
                    // InternalDockerCompose.g:1821:2: ( ( 'always' ) )
                    // InternalDockerCompose.g:1822:3: ( 'always' )
                    {
                     before(grammarAccess.getRestartPolicyAccess().getAlwaysEnumLiteralDeclaration_1()); 
                    // InternalDockerCompose.g:1823:3: ( 'always' )
                    // InternalDockerCompose.g:1823:4: 'always'
                    {
                    match(input,23,FOLLOW_2); 

                    }

                     after(grammarAccess.getRestartPolicyAccess().getAlwaysEnumLiteralDeclaration_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1827:2: ( ( 'on-failure' ) )
                    {
                    // InternalDockerCompose.g:1827:2: ( ( 'on-failure' ) )
                    // InternalDockerCompose.g:1828:3: ( 'on-failure' )
                    {
                     before(grammarAccess.getRestartPolicyAccess().getOnfailureEnumLiteralDeclaration_2()); 
                    // InternalDockerCompose.g:1829:3: ( 'on-failure' )
                    // InternalDockerCompose.g:1829:4: 'on-failure'
                    {
                    match(input,24,FOLLOW_2); 

                    }

                     after(grammarAccess.getRestartPolicyAccess().getOnfailureEnumLiteralDeclaration_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:1833:2: ( ( 'unless-stopped' ) )
                    {
                    // InternalDockerCompose.g:1833:2: ( ( 'unless-stopped' ) )
                    // InternalDockerCompose.g:1834:3: ( 'unless-stopped' )
                    {
                     before(grammarAccess.getRestartPolicyAccess().getUnlessstoppedEnumLiteralDeclaration_3()); 
                    // InternalDockerCompose.g:1835:3: ( 'unless-stopped' )
                    // InternalDockerCompose.g:1835:4: 'unless-stopped'
                    {
                    match(input,25,FOLLOW_2); 

                    }

                     after(grammarAccess.getRestartPolicyAccess().getUnlessstoppedEnumLiteralDeclaration_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestartPolicy__Alternatives"


    // $ANTLR start "rule__AccessMode__Alternatives"
    // InternalDockerCompose.g:1843:1: rule__AccessMode__Alternatives : ( ( ( 'rw' ) ) | ( ( 'ro' ) ) | ( ( 'z' ) ) );
    public final void rule__AccessMode__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1847:1: ( ( ( 'rw' ) ) | ( ( 'ro' ) ) | ( ( 'z' ) ) )
            int alt34=3;
            switch ( input.LA(1) ) {
            case 26:
                {
                alt34=1;
                }
                break;
            case 27:
                {
                alt34=2;
                }
                break;
            case 28:
                {
                alt34=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }

            switch (alt34) {
                case 1 :
                    // InternalDockerCompose.g:1848:2: ( ( 'rw' ) )
                    {
                    // InternalDockerCompose.g:1848:2: ( ( 'rw' ) )
                    // InternalDockerCompose.g:1849:3: ( 'rw' )
                    {
                     before(grammarAccess.getAccessModeAccess().getRwEnumLiteralDeclaration_0()); 
                    // InternalDockerCompose.g:1850:3: ( 'rw' )
                    // InternalDockerCompose.g:1850:4: 'rw'
                    {
                    match(input,26,FOLLOW_2); 

                    }

                     after(grammarAccess.getAccessModeAccess().getRwEnumLiteralDeclaration_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1854:2: ( ( 'ro' ) )
                    {
                    // InternalDockerCompose.g:1854:2: ( ( 'ro' ) )
                    // InternalDockerCompose.g:1855:3: ( 'ro' )
                    {
                     before(grammarAccess.getAccessModeAccess().getRoEnumLiteralDeclaration_1()); 
                    // InternalDockerCompose.g:1856:3: ( 'ro' )
                    // InternalDockerCompose.g:1856:4: 'ro'
                    {
                    match(input,27,FOLLOW_2); 

                    }

                     after(grammarAccess.getAccessModeAccess().getRoEnumLiteralDeclaration_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1860:2: ( ( 'z' ) )
                    {
                    // InternalDockerCompose.g:1860:2: ( ( 'z' ) )
                    // InternalDockerCompose.g:1861:3: ( 'z' )
                    {
                     before(grammarAccess.getAccessModeAccess().getZEnumLiteralDeclaration_2()); 
                    // InternalDockerCompose.g:1862:3: ( 'z' )
                    // InternalDockerCompose.g:1862:4: 'z'
                    {
                    match(input,28,FOLLOW_2); 

                    }

                     after(grammarAccess.getAccessModeAccess().getZEnumLiteralDeclaration_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AccessMode__Alternatives"


    // $ANTLR start "rule__MountType__Alternatives"
    // InternalDockerCompose.g:1870:1: rule__MountType__Alternatives : ( ( ( 'volume' ) ) | ( ( 'bind' ) ) | ( ( 'tmpfs' ) ) | ( ( 'npipe' ) ) );
    public final void rule__MountType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1874:1: ( ( ( 'volume' ) ) | ( ( 'bind' ) ) | ( ( 'tmpfs' ) ) | ( ( 'npipe' ) ) )
            int alt35=4;
            switch ( input.LA(1) ) {
            case 29:
                {
                alt35=1;
                }
                break;
            case 30:
                {
                alt35=2;
                }
                break;
            case 31:
                {
                alt35=3;
                }
                break;
            case 32:
                {
                alt35=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }

            switch (alt35) {
                case 1 :
                    // InternalDockerCompose.g:1875:2: ( ( 'volume' ) )
                    {
                    // InternalDockerCompose.g:1875:2: ( ( 'volume' ) )
                    // InternalDockerCompose.g:1876:3: ( 'volume' )
                    {
                     before(grammarAccess.getMountTypeAccess().getVolumeEnumLiteralDeclaration_0()); 
                    // InternalDockerCompose.g:1877:3: ( 'volume' )
                    // InternalDockerCompose.g:1877:4: 'volume'
                    {
                    match(input,29,FOLLOW_2); 

                    }

                     after(grammarAccess.getMountTypeAccess().getVolumeEnumLiteralDeclaration_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1881:2: ( ( 'bind' ) )
                    {
                    // InternalDockerCompose.g:1881:2: ( ( 'bind' ) )
                    // InternalDockerCompose.g:1882:3: ( 'bind' )
                    {
                     before(grammarAccess.getMountTypeAccess().getBindEnumLiteralDeclaration_1()); 
                    // InternalDockerCompose.g:1883:3: ( 'bind' )
                    // InternalDockerCompose.g:1883:4: 'bind'
                    {
                    match(input,30,FOLLOW_2); 

                    }

                     after(grammarAccess.getMountTypeAccess().getBindEnumLiteralDeclaration_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1887:2: ( ( 'tmpfs' ) )
                    {
                    // InternalDockerCompose.g:1887:2: ( ( 'tmpfs' ) )
                    // InternalDockerCompose.g:1888:3: ( 'tmpfs' )
                    {
                     before(grammarAccess.getMountTypeAccess().getTmpfsEnumLiteralDeclaration_2()); 
                    // InternalDockerCompose.g:1889:3: ( 'tmpfs' )
                    // InternalDockerCompose.g:1889:4: 'tmpfs'
                    {
                    match(input,31,FOLLOW_2); 

                    }

                     after(grammarAccess.getMountTypeAccess().getTmpfsEnumLiteralDeclaration_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:1893:2: ( ( 'npipe' ) )
                    {
                    // InternalDockerCompose.g:1893:2: ( ( 'npipe' ) )
                    // InternalDockerCompose.g:1894:3: ( 'npipe' )
                    {
                     before(grammarAccess.getMountTypeAccess().getNpipeEnumLiteralDeclaration_3()); 
                    // InternalDockerCompose.g:1895:3: ( 'npipe' )
                    // InternalDockerCompose.g:1895:4: 'npipe'
                    {
                    match(input,32,FOLLOW_2); 

                    }

                     after(grammarAccess.getMountTypeAccess().getNpipeEnumLiteralDeclaration_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MountType__Alternatives"


    // $ANTLR start "rule__PropagationType__Alternatives"
    // InternalDockerCompose.g:1903:1: rule__PropagationType__Alternatives : ( ( ( 'rprivate' ) ) | ( ( 'private' ) ) | ( ( 'rshared' ) ) | ( ( 'shared' ) ) | ( ( 'rslave' ) ) | ( ( 'slave' ) ) );
    public final void rule__PropagationType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1907:1: ( ( ( 'rprivate' ) ) | ( ( 'private' ) ) | ( ( 'rshared' ) ) | ( ( 'shared' ) ) | ( ( 'rslave' ) ) | ( ( 'slave' ) ) )
            int alt36=6;
            switch ( input.LA(1) ) {
            case 33:
                {
                alt36=1;
                }
                break;
            case 34:
                {
                alt36=2;
                }
                break;
            case 35:
                {
                alt36=3;
                }
                break;
            case 36:
                {
                alt36=4;
                }
                break;
            case 37:
                {
                alt36=5;
                }
                break;
            case 38:
                {
                alt36=6;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }

            switch (alt36) {
                case 1 :
                    // InternalDockerCompose.g:1908:2: ( ( 'rprivate' ) )
                    {
                    // InternalDockerCompose.g:1908:2: ( ( 'rprivate' ) )
                    // InternalDockerCompose.g:1909:3: ( 'rprivate' )
                    {
                     before(grammarAccess.getPropagationTypeAccess().getRprivateEnumLiteralDeclaration_0()); 
                    // InternalDockerCompose.g:1910:3: ( 'rprivate' )
                    // InternalDockerCompose.g:1910:4: 'rprivate'
                    {
                    match(input,33,FOLLOW_2); 

                    }

                     after(grammarAccess.getPropagationTypeAccess().getRprivateEnumLiteralDeclaration_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1914:2: ( ( 'private' ) )
                    {
                    // InternalDockerCompose.g:1914:2: ( ( 'private' ) )
                    // InternalDockerCompose.g:1915:3: ( 'private' )
                    {
                     before(grammarAccess.getPropagationTypeAccess().getPrivateEnumLiteralDeclaration_1()); 
                    // InternalDockerCompose.g:1916:3: ( 'private' )
                    // InternalDockerCompose.g:1916:4: 'private'
                    {
                    match(input,34,FOLLOW_2); 

                    }

                     after(grammarAccess.getPropagationTypeAccess().getPrivateEnumLiteralDeclaration_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1920:2: ( ( 'rshared' ) )
                    {
                    // InternalDockerCompose.g:1920:2: ( ( 'rshared' ) )
                    // InternalDockerCompose.g:1921:3: ( 'rshared' )
                    {
                     before(grammarAccess.getPropagationTypeAccess().getRsharedEnumLiteralDeclaration_2()); 
                    // InternalDockerCompose.g:1922:3: ( 'rshared' )
                    // InternalDockerCompose.g:1922:4: 'rshared'
                    {
                    match(input,35,FOLLOW_2); 

                    }

                     after(grammarAccess.getPropagationTypeAccess().getRsharedEnumLiteralDeclaration_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:1926:2: ( ( 'shared' ) )
                    {
                    // InternalDockerCompose.g:1926:2: ( ( 'shared' ) )
                    // InternalDockerCompose.g:1927:3: ( 'shared' )
                    {
                     before(grammarAccess.getPropagationTypeAccess().getSharedEnumLiteralDeclaration_3()); 
                    // InternalDockerCompose.g:1928:3: ( 'shared' )
                    // InternalDockerCompose.g:1928:4: 'shared'
                    {
                    match(input,36,FOLLOW_2); 

                    }

                     after(grammarAccess.getPropagationTypeAccess().getSharedEnumLiteralDeclaration_3()); 

                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:1932:2: ( ( 'rslave' ) )
                    {
                    // InternalDockerCompose.g:1932:2: ( ( 'rslave' ) )
                    // InternalDockerCompose.g:1933:3: ( 'rslave' )
                    {
                     before(grammarAccess.getPropagationTypeAccess().getRslaveEnumLiteralDeclaration_4()); 
                    // InternalDockerCompose.g:1934:3: ( 'rslave' )
                    // InternalDockerCompose.g:1934:4: 'rslave'
                    {
                    match(input,37,FOLLOW_2); 

                    }

                     after(grammarAccess.getPropagationTypeAccess().getRslaveEnumLiteralDeclaration_4()); 

                    }


                    }
                    break;
                case 6 :
                    // InternalDockerCompose.g:1938:2: ( ( 'slave' ) )
                    {
                    // InternalDockerCompose.g:1938:2: ( ( 'slave' ) )
                    // InternalDockerCompose.g:1939:3: ( 'slave' )
                    {
                     before(grammarAccess.getPropagationTypeAccess().getSlaveEnumLiteralDeclaration_5()); 
                    // InternalDockerCompose.g:1940:3: ( 'slave' )
                    // InternalDockerCompose.g:1940:4: 'slave'
                    {
                    match(input,38,FOLLOW_2); 

                    }

                     after(grammarAccess.getPropagationTypeAccess().getSlaveEnumLiteralDeclaration_5()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PropagationType__Alternatives"


    // $ANTLR start "rule__Condition__Alternatives"
    // InternalDockerCompose.g:1948:1: rule__Condition__Alternatives : ( ( ( 'service_started' ) ) | ( ( 'service_healthy' ) ) | ( ( 'service_completed_successfully' ) ) );
    public final void rule__Condition__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1952:1: ( ( ( 'service_started' ) ) | ( ( 'service_healthy' ) ) | ( ( 'service_completed_successfully' ) ) )
            int alt37=3;
            switch ( input.LA(1) ) {
            case 39:
                {
                alt37=1;
                }
                break;
            case 40:
                {
                alt37=2;
                }
                break;
            case 41:
                {
                alt37=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }

            switch (alt37) {
                case 1 :
                    // InternalDockerCompose.g:1953:2: ( ( 'service_started' ) )
                    {
                    // InternalDockerCompose.g:1953:2: ( ( 'service_started' ) )
                    // InternalDockerCompose.g:1954:3: ( 'service_started' )
                    {
                     before(grammarAccess.getConditionAccess().getService_startedEnumLiteralDeclaration_0()); 
                    // InternalDockerCompose.g:1955:3: ( 'service_started' )
                    // InternalDockerCompose.g:1955:4: 'service_started'
                    {
                    match(input,39,FOLLOW_2); 

                    }

                     after(grammarAccess.getConditionAccess().getService_startedEnumLiteralDeclaration_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1959:2: ( ( 'service_healthy' ) )
                    {
                    // InternalDockerCompose.g:1959:2: ( ( 'service_healthy' ) )
                    // InternalDockerCompose.g:1960:3: ( 'service_healthy' )
                    {
                     before(grammarAccess.getConditionAccess().getService_healthyEnumLiteralDeclaration_1()); 
                    // InternalDockerCompose.g:1961:3: ( 'service_healthy' )
                    // InternalDockerCompose.g:1961:4: 'service_healthy'
                    {
                    match(input,40,FOLLOW_2); 

                    }

                     after(grammarAccess.getConditionAccess().getService_healthyEnumLiteralDeclaration_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1965:2: ( ( 'service_completed_successfully' ) )
                    {
                    // InternalDockerCompose.g:1965:2: ( ( 'service_completed_successfully' ) )
                    // InternalDockerCompose.g:1966:3: ( 'service_completed_successfully' )
                    {
                     before(grammarAccess.getConditionAccess().getService_completed_successfullyEnumLiteralDeclaration_2()); 
                    // InternalDockerCompose.g:1967:3: ( 'service_completed_successfully' )
                    // InternalDockerCompose.g:1967:4: 'service_completed_successfully'
                    {
                    match(input,41,FOLLOW_2); 

                    }

                     after(grammarAccess.getConditionAccess().getService_completed_successfullyEnumLiteralDeclaration_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Condition__Alternatives"


    // $ANTLR start "rule__DockerCompose__Group_0__0"
    // InternalDockerCompose.g:1975:1: rule__DockerCompose__Group_0__0 : rule__DockerCompose__Group_0__0__Impl rule__DockerCompose__Group_0__1 ;
    public final void rule__DockerCompose__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1979:1: ( rule__DockerCompose__Group_0__0__Impl rule__DockerCompose__Group_0__1 )
            // InternalDockerCompose.g:1980:2: rule__DockerCompose__Group_0__0__Impl rule__DockerCompose__Group_0__1
            {
            pushFollow(FOLLOW_6);
            rule__DockerCompose__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_0__0"


    // $ANTLR start "rule__DockerCompose__Group_0__0__Impl"
    // InternalDockerCompose.g:1987:1: rule__DockerCompose__Group_0__0__Impl : ( 'version:' ) ;
    public final void rule__DockerCompose__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1991:1: ( ( 'version:' ) )
            // InternalDockerCompose.g:1992:1: ( 'version:' )
            {
            // InternalDockerCompose.g:1992:1: ( 'version:' )
            // InternalDockerCompose.g:1993:2: 'version:'
            {
             before(grammarAccess.getDockerComposeAccess().getVersionKeyword_0_0()); 
            match(input,42,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getVersionKeyword_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_0__0__Impl"


    // $ANTLR start "rule__DockerCompose__Group_0__1"
    // InternalDockerCompose.g:2002:1: rule__DockerCompose__Group_0__1 : rule__DockerCompose__Group_0__1__Impl ;
    public final void rule__DockerCompose__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2006:1: ( rule__DockerCompose__Group_0__1__Impl )
            // InternalDockerCompose.g:2007:2: rule__DockerCompose__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_0__1"


    // $ANTLR start "rule__DockerCompose__Group_0__1__Impl"
    // InternalDockerCompose.g:2013:1: rule__DockerCompose__Group_0__1__Impl : ( ( rule__DockerCompose__VersionAssignment_0_1 ) ) ;
    public final void rule__DockerCompose__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2017:1: ( ( ( rule__DockerCompose__VersionAssignment_0_1 ) ) )
            // InternalDockerCompose.g:2018:1: ( ( rule__DockerCompose__VersionAssignment_0_1 ) )
            {
            // InternalDockerCompose.g:2018:1: ( ( rule__DockerCompose__VersionAssignment_0_1 ) )
            // InternalDockerCompose.g:2019:2: ( rule__DockerCompose__VersionAssignment_0_1 )
            {
             before(grammarAccess.getDockerComposeAccess().getVersionAssignment_0_1()); 
            // InternalDockerCompose.g:2020:2: ( rule__DockerCompose__VersionAssignment_0_1 )
            // InternalDockerCompose.g:2020:3: rule__DockerCompose__VersionAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__VersionAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getVersionAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_0__1__Impl"


    // $ANTLR start "rule__DockerCompose__Group_1__0"
    // InternalDockerCompose.g:2029:1: rule__DockerCompose__Group_1__0 : rule__DockerCompose__Group_1__0__Impl rule__DockerCompose__Group_1__1 ;
    public final void rule__DockerCompose__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2033:1: ( rule__DockerCompose__Group_1__0__Impl rule__DockerCompose__Group_1__1 )
            // InternalDockerCompose.g:2034:2: rule__DockerCompose__Group_1__0__Impl rule__DockerCompose__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__DockerCompose__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_1__0"


    // $ANTLR start "rule__DockerCompose__Group_1__0__Impl"
    // InternalDockerCompose.g:2041:1: rule__DockerCompose__Group_1__0__Impl : ( 'services:' ) ;
    public final void rule__DockerCompose__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2045:1: ( ( 'services:' ) )
            // InternalDockerCompose.g:2046:1: ( 'services:' )
            {
            // InternalDockerCompose.g:2046:1: ( 'services:' )
            // InternalDockerCompose.g:2047:2: 'services:'
            {
             before(grammarAccess.getDockerComposeAccess().getServicesKeyword_1_0()); 
            match(input,43,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getServicesKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_1__0__Impl"


    // $ANTLR start "rule__DockerCompose__Group_1__1"
    // InternalDockerCompose.g:2056:1: rule__DockerCompose__Group_1__1 : rule__DockerCompose__Group_1__1__Impl ;
    public final void rule__DockerCompose__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2060:1: ( rule__DockerCompose__Group_1__1__Impl )
            // InternalDockerCompose.g:2061:2: rule__DockerCompose__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_1__1"


    // $ANTLR start "rule__DockerCompose__Group_1__1__Impl"
    // InternalDockerCompose.g:2067:1: rule__DockerCompose__Group_1__1__Impl : ( ( ( rule__DockerCompose__ServicesAssignment_1_1 ) ) ( ( rule__DockerCompose__ServicesAssignment_1_1 )* ) ) ;
    public final void rule__DockerCompose__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2071:1: ( ( ( ( rule__DockerCompose__ServicesAssignment_1_1 ) ) ( ( rule__DockerCompose__ServicesAssignment_1_1 )* ) ) )
            // InternalDockerCompose.g:2072:1: ( ( ( rule__DockerCompose__ServicesAssignment_1_1 ) ) ( ( rule__DockerCompose__ServicesAssignment_1_1 )* ) )
            {
            // InternalDockerCompose.g:2072:1: ( ( ( rule__DockerCompose__ServicesAssignment_1_1 ) ) ( ( rule__DockerCompose__ServicesAssignment_1_1 )* ) )
            // InternalDockerCompose.g:2073:2: ( ( rule__DockerCompose__ServicesAssignment_1_1 ) ) ( ( rule__DockerCompose__ServicesAssignment_1_1 )* )
            {
            // InternalDockerCompose.g:2073:2: ( ( rule__DockerCompose__ServicesAssignment_1_1 ) )
            // InternalDockerCompose.g:2074:3: ( rule__DockerCompose__ServicesAssignment_1_1 )
            {
             before(grammarAccess.getDockerComposeAccess().getServicesAssignment_1_1()); 
            // InternalDockerCompose.g:2075:3: ( rule__DockerCompose__ServicesAssignment_1_1 )
            // InternalDockerCompose.g:2075:4: rule__DockerCompose__ServicesAssignment_1_1
            {
            pushFollow(FOLLOW_4);
            rule__DockerCompose__ServicesAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getServicesAssignment_1_1()); 

            }

            // InternalDockerCompose.g:2078:2: ( ( rule__DockerCompose__ServicesAssignment_1_1 )* )
            // InternalDockerCompose.g:2079:3: ( rule__DockerCompose__ServicesAssignment_1_1 )*
            {
             before(grammarAccess.getDockerComposeAccess().getServicesAssignment_1_1()); 
            // InternalDockerCompose.g:2080:3: ( rule__DockerCompose__ServicesAssignment_1_1 )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==RULE_ID) ) {
                    alt38=1;
                }


                switch (alt38) {
            	case 1 :
            	    // InternalDockerCompose.g:2080:4: rule__DockerCompose__ServicesAssignment_1_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__DockerCompose__ServicesAssignment_1_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);

             after(grammarAccess.getDockerComposeAccess().getServicesAssignment_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_1__1__Impl"


    // $ANTLR start "rule__DockerCompose__Group_2__0"
    // InternalDockerCompose.g:2090:1: rule__DockerCompose__Group_2__0 : rule__DockerCompose__Group_2__0__Impl rule__DockerCompose__Group_2__1 ;
    public final void rule__DockerCompose__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2094:1: ( rule__DockerCompose__Group_2__0__Impl rule__DockerCompose__Group_2__1 )
            // InternalDockerCompose.g:2095:2: rule__DockerCompose__Group_2__0__Impl rule__DockerCompose__Group_2__1
            {
            pushFollow(FOLLOW_7);
            rule__DockerCompose__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_2__0"


    // $ANTLR start "rule__DockerCompose__Group_2__0__Impl"
    // InternalDockerCompose.g:2102:1: rule__DockerCompose__Group_2__0__Impl : ( 'volumes:' ) ;
    public final void rule__DockerCompose__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2106:1: ( ( 'volumes:' ) )
            // InternalDockerCompose.g:2107:1: ( 'volumes:' )
            {
            // InternalDockerCompose.g:2107:1: ( 'volumes:' )
            // InternalDockerCompose.g:2108:2: 'volumes:'
            {
             before(grammarAccess.getDockerComposeAccess().getVolumesKeyword_2_0()); 
            match(input,44,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getVolumesKeyword_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_2__0__Impl"


    // $ANTLR start "rule__DockerCompose__Group_2__1"
    // InternalDockerCompose.g:2117:1: rule__DockerCompose__Group_2__1 : rule__DockerCompose__Group_2__1__Impl ;
    public final void rule__DockerCompose__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2121:1: ( rule__DockerCompose__Group_2__1__Impl )
            // InternalDockerCompose.g:2122:2: rule__DockerCompose__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_2__1"


    // $ANTLR start "rule__DockerCompose__Group_2__1__Impl"
    // InternalDockerCompose.g:2128:1: rule__DockerCompose__Group_2__1__Impl : ( ( ( rule__DockerCompose__VolumesAssignment_2_1 ) ) ( ( rule__DockerCompose__VolumesAssignment_2_1 )* ) ) ;
    public final void rule__DockerCompose__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2132:1: ( ( ( ( rule__DockerCompose__VolumesAssignment_2_1 ) ) ( ( rule__DockerCompose__VolumesAssignment_2_1 )* ) ) )
            // InternalDockerCompose.g:2133:1: ( ( ( rule__DockerCompose__VolumesAssignment_2_1 ) ) ( ( rule__DockerCompose__VolumesAssignment_2_1 )* ) )
            {
            // InternalDockerCompose.g:2133:1: ( ( ( rule__DockerCompose__VolumesAssignment_2_1 ) ) ( ( rule__DockerCompose__VolumesAssignment_2_1 )* ) )
            // InternalDockerCompose.g:2134:2: ( ( rule__DockerCompose__VolumesAssignment_2_1 ) ) ( ( rule__DockerCompose__VolumesAssignment_2_1 )* )
            {
            // InternalDockerCompose.g:2134:2: ( ( rule__DockerCompose__VolumesAssignment_2_1 ) )
            // InternalDockerCompose.g:2135:3: ( rule__DockerCompose__VolumesAssignment_2_1 )
            {
             before(grammarAccess.getDockerComposeAccess().getVolumesAssignment_2_1()); 
            // InternalDockerCompose.g:2136:3: ( rule__DockerCompose__VolumesAssignment_2_1 )
            // InternalDockerCompose.g:2136:4: rule__DockerCompose__VolumesAssignment_2_1
            {
            pushFollow(FOLLOW_4);
            rule__DockerCompose__VolumesAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getVolumesAssignment_2_1()); 

            }

            // InternalDockerCompose.g:2139:2: ( ( rule__DockerCompose__VolumesAssignment_2_1 )* )
            // InternalDockerCompose.g:2140:3: ( rule__DockerCompose__VolumesAssignment_2_1 )*
            {
             before(grammarAccess.getDockerComposeAccess().getVolumesAssignment_2_1()); 
            // InternalDockerCompose.g:2141:3: ( rule__DockerCompose__VolumesAssignment_2_1 )*
            loop39:
            do {
                int alt39=2;
                int LA39_0 = input.LA(1);

                if ( (LA39_0==RULE_ID) ) {
                    alt39=1;
                }


                switch (alt39) {
            	case 1 :
            	    // InternalDockerCompose.g:2141:4: rule__DockerCompose__VolumesAssignment_2_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__DockerCompose__VolumesAssignment_2_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);

             after(grammarAccess.getDockerComposeAccess().getVolumesAssignment_2_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_2__1__Impl"


    // $ANTLR start "rule__DockerCompose__Group_3__0"
    // InternalDockerCompose.g:2151:1: rule__DockerCompose__Group_3__0 : rule__DockerCompose__Group_3__0__Impl rule__DockerCompose__Group_3__1 ;
    public final void rule__DockerCompose__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2155:1: ( rule__DockerCompose__Group_3__0__Impl rule__DockerCompose__Group_3__1 )
            // InternalDockerCompose.g:2156:2: rule__DockerCompose__Group_3__0__Impl rule__DockerCompose__Group_3__1
            {
            pushFollow(FOLLOW_7);
            rule__DockerCompose__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_3__0"


    // $ANTLR start "rule__DockerCompose__Group_3__0__Impl"
    // InternalDockerCompose.g:2163:1: rule__DockerCompose__Group_3__0__Impl : ( 'configs:' ) ;
    public final void rule__DockerCompose__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2167:1: ( ( 'configs:' ) )
            // InternalDockerCompose.g:2168:1: ( 'configs:' )
            {
            // InternalDockerCompose.g:2168:1: ( 'configs:' )
            // InternalDockerCompose.g:2169:2: 'configs:'
            {
             before(grammarAccess.getDockerComposeAccess().getConfigsKeyword_3_0()); 
            match(input,45,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getConfigsKeyword_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_3__0__Impl"


    // $ANTLR start "rule__DockerCompose__Group_3__1"
    // InternalDockerCompose.g:2178:1: rule__DockerCompose__Group_3__1 : rule__DockerCompose__Group_3__1__Impl ;
    public final void rule__DockerCompose__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2182:1: ( rule__DockerCompose__Group_3__1__Impl )
            // InternalDockerCompose.g:2183:2: rule__DockerCompose__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_3__1"


    // $ANTLR start "rule__DockerCompose__Group_3__1__Impl"
    // InternalDockerCompose.g:2189:1: rule__DockerCompose__Group_3__1__Impl : ( ( ( rule__DockerCompose__ConfigsAssignment_3_1 ) ) ( ( rule__DockerCompose__ConfigsAssignment_3_1 )* ) ) ;
    public final void rule__DockerCompose__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2193:1: ( ( ( ( rule__DockerCompose__ConfigsAssignment_3_1 ) ) ( ( rule__DockerCompose__ConfigsAssignment_3_1 )* ) ) )
            // InternalDockerCompose.g:2194:1: ( ( ( rule__DockerCompose__ConfigsAssignment_3_1 ) ) ( ( rule__DockerCompose__ConfigsAssignment_3_1 )* ) )
            {
            // InternalDockerCompose.g:2194:1: ( ( ( rule__DockerCompose__ConfigsAssignment_3_1 ) ) ( ( rule__DockerCompose__ConfigsAssignment_3_1 )* ) )
            // InternalDockerCompose.g:2195:2: ( ( rule__DockerCompose__ConfigsAssignment_3_1 ) ) ( ( rule__DockerCompose__ConfigsAssignment_3_1 )* )
            {
            // InternalDockerCompose.g:2195:2: ( ( rule__DockerCompose__ConfigsAssignment_3_1 ) )
            // InternalDockerCompose.g:2196:3: ( rule__DockerCompose__ConfigsAssignment_3_1 )
            {
             before(grammarAccess.getDockerComposeAccess().getConfigsAssignment_3_1()); 
            // InternalDockerCompose.g:2197:3: ( rule__DockerCompose__ConfigsAssignment_3_1 )
            // InternalDockerCompose.g:2197:4: rule__DockerCompose__ConfigsAssignment_3_1
            {
            pushFollow(FOLLOW_4);
            rule__DockerCompose__ConfigsAssignment_3_1();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getConfigsAssignment_3_1()); 

            }

            // InternalDockerCompose.g:2200:2: ( ( rule__DockerCompose__ConfigsAssignment_3_1 )* )
            // InternalDockerCompose.g:2201:3: ( rule__DockerCompose__ConfigsAssignment_3_1 )*
            {
             before(grammarAccess.getDockerComposeAccess().getConfigsAssignment_3_1()); 
            // InternalDockerCompose.g:2202:3: ( rule__DockerCompose__ConfigsAssignment_3_1 )*
            loop40:
            do {
                int alt40=2;
                int LA40_0 = input.LA(1);

                if ( (LA40_0==RULE_ID) ) {
                    alt40=1;
                }


                switch (alt40) {
            	case 1 :
            	    // InternalDockerCompose.g:2202:4: rule__DockerCompose__ConfigsAssignment_3_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__DockerCompose__ConfigsAssignment_3_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);

             after(grammarAccess.getDockerComposeAccess().getConfigsAssignment_3_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_3__1__Impl"


    // $ANTLR start "rule__DockerCompose__Group_4__0"
    // InternalDockerCompose.g:2212:1: rule__DockerCompose__Group_4__0 : rule__DockerCompose__Group_4__0__Impl rule__DockerCompose__Group_4__1 ;
    public final void rule__DockerCompose__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2216:1: ( rule__DockerCompose__Group_4__0__Impl rule__DockerCompose__Group_4__1 )
            // InternalDockerCompose.g:2217:2: rule__DockerCompose__Group_4__0__Impl rule__DockerCompose__Group_4__1
            {
            pushFollow(FOLLOW_7);
            rule__DockerCompose__Group_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_4__0"


    // $ANTLR start "rule__DockerCompose__Group_4__0__Impl"
    // InternalDockerCompose.g:2224:1: rule__DockerCompose__Group_4__0__Impl : ( 'secrets:' ) ;
    public final void rule__DockerCompose__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2228:1: ( ( 'secrets:' ) )
            // InternalDockerCompose.g:2229:1: ( 'secrets:' )
            {
            // InternalDockerCompose.g:2229:1: ( 'secrets:' )
            // InternalDockerCompose.g:2230:2: 'secrets:'
            {
             before(grammarAccess.getDockerComposeAccess().getSecretsKeyword_4_0()); 
            match(input,46,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getSecretsKeyword_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_4__0__Impl"


    // $ANTLR start "rule__DockerCompose__Group_4__1"
    // InternalDockerCompose.g:2239:1: rule__DockerCompose__Group_4__1 : rule__DockerCompose__Group_4__1__Impl ;
    public final void rule__DockerCompose__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2243:1: ( rule__DockerCompose__Group_4__1__Impl )
            // InternalDockerCompose.g:2244:2: rule__DockerCompose__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_4__1"


    // $ANTLR start "rule__DockerCompose__Group_4__1__Impl"
    // InternalDockerCompose.g:2250:1: rule__DockerCompose__Group_4__1__Impl : ( ( ( rule__DockerCompose__SecretsAssignment_4_1 ) ) ( ( rule__DockerCompose__SecretsAssignment_4_1 )* ) ) ;
    public final void rule__DockerCompose__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2254:1: ( ( ( ( rule__DockerCompose__SecretsAssignment_4_1 ) ) ( ( rule__DockerCompose__SecretsAssignment_4_1 )* ) ) )
            // InternalDockerCompose.g:2255:1: ( ( ( rule__DockerCompose__SecretsAssignment_4_1 ) ) ( ( rule__DockerCompose__SecretsAssignment_4_1 )* ) )
            {
            // InternalDockerCompose.g:2255:1: ( ( ( rule__DockerCompose__SecretsAssignment_4_1 ) ) ( ( rule__DockerCompose__SecretsAssignment_4_1 )* ) )
            // InternalDockerCompose.g:2256:2: ( ( rule__DockerCompose__SecretsAssignment_4_1 ) ) ( ( rule__DockerCompose__SecretsAssignment_4_1 )* )
            {
            // InternalDockerCompose.g:2256:2: ( ( rule__DockerCompose__SecretsAssignment_4_1 ) )
            // InternalDockerCompose.g:2257:3: ( rule__DockerCompose__SecretsAssignment_4_1 )
            {
             before(grammarAccess.getDockerComposeAccess().getSecretsAssignment_4_1()); 
            // InternalDockerCompose.g:2258:3: ( rule__DockerCompose__SecretsAssignment_4_1 )
            // InternalDockerCompose.g:2258:4: rule__DockerCompose__SecretsAssignment_4_1
            {
            pushFollow(FOLLOW_4);
            rule__DockerCompose__SecretsAssignment_4_1();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getSecretsAssignment_4_1()); 

            }

            // InternalDockerCompose.g:2261:2: ( ( rule__DockerCompose__SecretsAssignment_4_1 )* )
            // InternalDockerCompose.g:2262:3: ( rule__DockerCompose__SecretsAssignment_4_1 )*
            {
             before(grammarAccess.getDockerComposeAccess().getSecretsAssignment_4_1()); 
            // InternalDockerCompose.g:2263:3: ( rule__DockerCompose__SecretsAssignment_4_1 )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==RULE_ID) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // InternalDockerCompose.g:2263:4: rule__DockerCompose__SecretsAssignment_4_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__DockerCompose__SecretsAssignment_4_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);

             after(grammarAccess.getDockerComposeAccess().getSecretsAssignment_4_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_4__1__Impl"


    // $ANTLR start "rule__DockerCompose__Group_5__0"
    // InternalDockerCompose.g:2273:1: rule__DockerCompose__Group_5__0 : rule__DockerCompose__Group_5__0__Impl rule__DockerCompose__Group_5__1 ;
    public final void rule__DockerCompose__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2277:1: ( rule__DockerCompose__Group_5__0__Impl rule__DockerCompose__Group_5__1 )
            // InternalDockerCompose.g:2278:2: rule__DockerCompose__Group_5__0__Impl rule__DockerCompose__Group_5__1
            {
            pushFollow(FOLLOW_7);
            rule__DockerCompose__Group_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_5__0"


    // $ANTLR start "rule__DockerCompose__Group_5__0__Impl"
    // InternalDockerCompose.g:2285:1: rule__DockerCompose__Group_5__0__Impl : ( 'networks:' ) ;
    public final void rule__DockerCompose__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2289:1: ( ( 'networks:' ) )
            // InternalDockerCompose.g:2290:1: ( 'networks:' )
            {
            // InternalDockerCompose.g:2290:1: ( 'networks:' )
            // InternalDockerCompose.g:2291:2: 'networks:'
            {
             before(grammarAccess.getDockerComposeAccess().getNetworksKeyword_5_0()); 
            match(input,47,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getNetworksKeyword_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_5__0__Impl"


    // $ANTLR start "rule__DockerCompose__Group_5__1"
    // InternalDockerCompose.g:2300:1: rule__DockerCompose__Group_5__1 : rule__DockerCompose__Group_5__1__Impl ;
    public final void rule__DockerCompose__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2304:1: ( rule__DockerCompose__Group_5__1__Impl )
            // InternalDockerCompose.g:2305:2: rule__DockerCompose__Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_5__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_5__1"


    // $ANTLR start "rule__DockerCompose__Group_5__1__Impl"
    // InternalDockerCompose.g:2311:1: rule__DockerCompose__Group_5__1__Impl : ( ( ( rule__DockerCompose__NetworksAssignment_5_1 ) ) ( ( rule__DockerCompose__NetworksAssignment_5_1 )* ) ) ;
    public final void rule__DockerCompose__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2315:1: ( ( ( ( rule__DockerCompose__NetworksAssignment_5_1 ) ) ( ( rule__DockerCompose__NetworksAssignment_5_1 )* ) ) )
            // InternalDockerCompose.g:2316:1: ( ( ( rule__DockerCompose__NetworksAssignment_5_1 ) ) ( ( rule__DockerCompose__NetworksAssignment_5_1 )* ) )
            {
            // InternalDockerCompose.g:2316:1: ( ( ( rule__DockerCompose__NetworksAssignment_5_1 ) ) ( ( rule__DockerCompose__NetworksAssignment_5_1 )* ) )
            // InternalDockerCompose.g:2317:2: ( ( rule__DockerCompose__NetworksAssignment_5_1 ) ) ( ( rule__DockerCompose__NetworksAssignment_5_1 )* )
            {
            // InternalDockerCompose.g:2317:2: ( ( rule__DockerCompose__NetworksAssignment_5_1 ) )
            // InternalDockerCompose.g:2318:3: ( rule__DockerCompose__NetworksAssignment_5_1 )
            {
             before(grammarAccess.getDockerComposeAccess().getNetworksAssignment_5_1()); 
            // InternalDockerCompose.g:2319:3: ( rule__DockerCompose__NetworksAssignment_5_1 )
            // InternalDockerCompose.g:2319:4: rule__DockerCompose__NetworksAssignment_5_1
            {
            pushFollow(FOLLOW_4);
            rule__DockerCompose__NetworksAssignment_5_1();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getNetworksAssignment_5_1()); 

            }

            // InternalDockerCompose.g:2322:2: ( ( rule__DockerCompose__NetworksAssignment_5_1 )* )
            // InternalDockerCompose.g:2323:3: ( rule__DockerCompose__NetworksAssignment_5_1 )*
            {
             before(grammarAccess.getDockerComposeAccess().getNetworksAssignment_5_1()); 
            // InternalDockerCompose.g:2324:3: ( rule__DockerCompose__NetworksAssignment_5_1 )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( (LA42_0==RULE_ID) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // InternalDockerCompose.g:2324:4: rule__DockerCompose__NetworksAssignment_5_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__DockerCompose__NetworksAssignment_5_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

             after(grammarAccess.getDockerComposeAccess().getNetworksAssignment_5_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_5__1__Impl"


    // $ANTLR start "rule__EDouble__Group__0"
    // InternalDockerCompose.g:2334:1: rule__EDouble__Group__0 : rule__EDouble__Group__0__Impl rule__EDouble__Group__1 ;
    public final void rule__EDouble__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2338:1: ( rule__EDouble__Group__0__Impl rule__EDouble__Group__1 )
            // InternalDockerCompose.g:2339:2: rule__EDouble__Group__0__Impl rule__EDouble__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__EDouble__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__EDouble__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EDouble__Group__0"


    // $ANTLR start "rule__EDouble__Group__0__Impl"
    // InternalDockerCompose.g:2346:1: rule__EDouble__Group__0__Impl : ( RULE_INT ) ;
    public final void rule__EDouble__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2350:1: ( ( RULE_INT ) )
            // InternalDockerCompose.g:2351:1: ( RULE_INT )
            {
            // InternalDockerCompose.g:2351:1: ( RULE_INT )
            // InternalDockerCompose.g:2352:2: RULE_INT
            {
             before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_0()); 
            match(input,RULE_INT,FOLLOW_2); 
             after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EDouble__Group__0__Impl"


    // $ANTLR start "rule__EDouble__Group__1"
    // InternalDockerCompose.g:2361:1: rule__EDouble__Group__1 : rule__EDouble__Group__1__Impl rule__EDouble__Group__2 ;
    public final void rule__EDouble__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2365:1: ( rule__EDouble__Group__1__Impl rule__EDouble__Group__2 )
            // InternalDockerCompose.g:2366:2: rule__EDouble__Group__1__Impl rule__EDouble__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__EDouble__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__EDouble__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EDouble__Group__1"


    // $ANTLR start "rule__EDouble__Group__1__Impl"
    // InternalDockerCompose.g:2373:1: rule__EDouble__Group__1__Impl : ( '.' ) ;
    public final void rule__EDouble__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2377:1: ( ( '.' ) )
            // InternalDockerCompose.g:2378:1: ( '.' )
            {
            // InternalDockerCompose.g:2378:1: ( '.' )
            // InternalDockerCompose.g:2379:2: '.'
            {
             before(grammarAccess.getEDoubleAccess().getFullStopKeyword_1()); 
            match(input,17,FOLLOW_2); 
             after(grammarAccess.getEDoubleAccess().getFullStopKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EDouble__Group__1__Impl"


    // $ANTLR start "rule__EDouble__Group__2"
    // InternalDockerCompose.g:2388:1: rule__EDouble__Group__2 : rule__EDouble__Group__2__Impl ;
    public final void rule__EDouble__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2392:1: ( rule__EDouble__Group__2__Impl )
            // InternalDockerCompose.g:2393:2: rule__EDouble__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__EDouble__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EDouble__Group__2"


    // $ANTLR start "rule__EDouble__Group__2__Impl"
    // InternalDockerCompose.g:2399:1: rule__EDouble__Group__2__Impl : ( RULE_INT ) ;
    public final void rule__EDouble__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2403:1: ( ( RULE_INT ) )
            // InternalDockerCompose.g:2404:1: ( RULE_INT )
            {
            // InternalDockerCompose.g:2404:1: ( RULE_INT )
            // InternalDockerCompose.g:2405:2: RULE_INT
            {
             before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_2()); 
            match(input,RULE_INT,FOLLOW_2); 
             after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EDouble__Group__2__Impl"


    // $ANTLR start "rule__Service__Group__0"
    // InternalDockerCompose.g:2415:1: rule__Service__Group__0 : rule__Service__Group__0__Impl rule__Service__Group__1 ;
    public final void rule__Service__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2419:1: ( rule__Service__Group__0__Impl rule__Service__Group__1 )
            // InternalDockerCompose.g:2420:2: rule__Service__Group__0__Impl rule__Service__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__Service__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__0"


    // $ANTLR start "rule__Service__Group__0__Impl"
    // InternalDockerCompose.g:2427:1: rule__Service__Group__0__Impl : ( () ) ;
    public final void rule__Service__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2431:1: ( ( () ) )
            // InternalDockerCompose.g:2432:1: ( () )
            {
            // InternalDockerCompose.g:2432:1: ( () )
            // InternalDockerCompose.g:2433:2: ()
            {
             before(grammarAccess.getServiceAccess().getServiceAction_0()); 
            // InternalDockerCompose.g:2434:2: ()
            // InternalDockerCompose.g:2434:3: 
            {
            }

             after(grammarAccess.getServiceAccess().getServiceAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__0__Impl"


    // $ANTLR start "rule__Service__Group__1"
    // InternalDockerCompose.g:2442:1: rule__Service__Group__1 : rule__Service__Group__1__Impl rule__Service__Group__2 ;
    public final void rule__Service__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2446:1: ( rule__Service__Group__1__Impl rule__Service__Group__2 )
            // InternalDockerCompose.g:2447:2: rule__Service__Group__1__Impl rule__Service__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__Service__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__1"


    // $ANTLR start "rule__Service__Group__1__Impl"
    // InternalDockerCompose.g:2454:1: rule__Service__Group__1__Impl : ( ( rule__Service__NameAssignment_1 ) ) ;
    public final void rule__Service__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2458:1: ( ( ( rule__Service__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:2459:1: ( ( rule__Service__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:2459:1: ( ( rule__Service__NameAssignment_1 ) )
            // InternalDockerCompose.g:2460:2: ( rule__Service__NameAssignment_1 )
            {
             before(grammarAccess.getServiceAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:2461:2: ( rule__Service__NameAssignment_1 )
            // InternalDockerCompose.g:2461:3: rule__Service__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__1__Impl"


    // $ANTLR start "rule__Service__Group__2"
    // InternalDockerCompose.g:2469:1: rule__Service__Group__2 : rule__Service__Group__2__Impl rule__Service__Group__3 ;
    public final void rule__Service__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2473:1: ( rule__Service__Group__2__Impl rule__Service__Group__3 )
            // InternalDockerCompose.g:2474:2: rule__Service__Group__2__Impl rule__Service__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__Service__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__2"


    // $ANTLR start "rule__Service__Group__2__Impl"
    // InternalDockerCompose.g:2481:1: rule__Service__Group__2__Impl : ( ':' ) ;
    public final void rule__Service__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2485:1: ( ( ':' ) )
            // InternalDockerCompose.g:2486:1: ( ':' )
            {
            // InternalDockerCompose.g:2486:1: ( ':' )
            // InternalDockerCompose.g:2487:2: ':'
            {
             before(grammarAccess.getServiceAccess().getColonKeyword_2()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__2__Impl"


    // $ANTLR start "rule__Service__Group__3"
    // InternalDockerCompose.g:2496:1: rule__Service__Group__3 : rule__Service__Group__3__Impl ;
    public final void rule__Service__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2500:1: ( rule__Service__Group__3__Impl )
            // InternalDockerCompose.g:2501:2: rule__Service__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__3"


    // $ANTLR start "rule__Service__Group__3__Impl"
    // InternalDockerCompose.g:2507:1: rule__Service__Group__3__Impl : ( ( rule__Service__UnorderedGroup_3 ) ) ;
    public final void rule__Service__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2511:1: ( ( ( rule__Service__UnorderedGroup_3 ) ) )
            // InternalDockerCompose.g:2512:1: ( ( rule__Service__UnorderedGroup_3 ) )
            {
            // InternalDockerCompose.g:2512:1: ( ( rule__Service__UnorderedGroup_3 ) )
            // InternalDockerCompose.g:2513:2: ( rule__Service__UnorderedGroup_3 )
            {
             before(grammarAccess.getServiceAccess().getUnorderedGroup_3()); 
            // InternalDockerCompose.g:2514:2: ( rule__Service__UnorderedGroup_3 )
            // InternalDockerCompose.g:2514:3: rule__Service__UnorderedGroup_3
            {
            pushFollow(FOLLOW_2);
            rule__Service__UnorderedGroup_3();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getUnorderedGroup_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__3__Impl"


    // $ANTLR start "rule__Service__Group_3_0__0"
    // InternalDockerCompose.g:2523:1: rule__Service__Group_3_0__0 : rule__Service__Group_3_0__0__Impl rule__Service__Group_3_0__1 ;
    public final void rule__Service__Group_3_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2527:1: ( rule__Service__Group_3_0__0__Impl rule__Service__Group_3_0__1 )
            // InternalDockerCompose.g:2528:2: rule__Service__Group_3_0__0__Impl rule__Service__Group_3_0__1
            {
            pushFollow(FOLLOW_12);
            rule__Service__Group_3_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0__0"


    // $ANTLR start "rule__Service__Group_3_0__0__Impl"
    // InternalDockerCompose.g:2535:1: rule__Service__Group_3_0__0__Impl : ( 'build:' ) ;
    public final void rule__Service__Group_3_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2539:1: ( ( 'build:' ) )
            // InternalDockerCompose.g:2540:1: ( 'build:' )
            {
            // InternalDockerCompose.g:2540:1: ( 'build:' )
            // InternalDockerCompose.g:2541:2: 'build:'
            {
             before(grammarAccess.getServiceAccess().getBuildKeyword_3_0_0()); 
            match(input,49,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getBuildKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0__0__Impl"


    // $ANTLR start "rule__Service__Group_3_0__1"
    // InternalDockerCompose.g:2550:1: rule__Service__Group_3_0__1 : rule__Service__Group_3_0__1__Impl ;
    public final void rule__Service__Group_3_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2554:1: ( rule__Service__Group_3_0__1__Impl )
            // InternalDockerCompose.g:2555:2: rule__Service__Group_3_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0__1"


    // $ANTLR start "rule__Service__Group_3_0__1__Impl"
    // InternalDockerCompose.g:2561:1: rule__Service__Group_3_0__1__Impl : ( ( rule__Service__BuildAssignment_3_0_1 ) ) ;
    public final void rule__Service__Group_3_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2565:1: ( ( ( rule__Service__BuildAssignment_3_0_1 ) ) )
            // InternalDockerCompose.g:2566:1: ( ( rule__Service__BuildAssignment_3_0_1 ) )
            {
            // InternalDockerCompose.g:2566:1: ( ( rule__Service__BuildAssignment_3_0_1 ) )
            // InternalDockerCompose.g:2567:2: ( rule__Service__BuildAssignment_3_0_1 )
            {
             before(grammarAccess.getServiceAccess().getBuildAssignment_3_0_1()); 
            // InternalDockerCompose.g:2568:2: ( rule__Service__BuildAssignment_3_0_1 )
            // InternalDockerCompose.g:2568:3: rule__Service__BuildAssignment_3_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__BuildAssignment_3_0_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getBuildAssignment_3_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0__1__Impl"


    // $ANTLR start "rule__Service__Group_3_1__0"
    // InternalDockerCompose.g:2577:1: rule__Service__Group_3_1__0 : rule__Service__Group_3_1__0__Impl rule__Service__Group_3_1__1 ;
    public final void rule__Service__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2581:1: ( rule__Service__Group_3_1__0__Impl rule__Service__Group_3_1__1 )
            // InternalDockerCompose.g:2582:2: rule__Service__Group_3_1__0__Impl rule__Service__Group_3_1__1
            {
            pushFollow(FOLLOW_7);
            rule__Service__Group_3_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_1__0"


    // $ANTLR start "rule__Service__Group_3_1__0__Impl"
    // InternalDockerCompose.g:2589:1: rule__Service__Group_3_1__0__Impl : ( 'image:' ) ;
    public final void rule__Service__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2593:1: ( ( 'image:' ) )
            // InternalDockerCompose.g:2594:1: ( 'image:' )
            {
            // InternalDockerCompose.g:2594:1: ( 'image:' )
            // InternalDockerCompose.g:2595:2: 'image:'
            {
             before(grammarAccess.getServiceAccess().getImageKeyword_3_1_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getImageKeyword_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_1__1"
    // InternalDockerCompose.g:2604:1: rule__Service__Group_3_1__1 : rule__Service__Group_3_1__1__Impl ;
    public final void rule__Service__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2608:1: ( rule__Service__Group_3_1__1__Impl )
            // InternalDockerCompose.g:2609:2: rule__Service__Group_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_1__1"


    // $ANTLR start "rule__Service__Group_3_1__1__Impl"
    // InternalDockerCompose.g:2615:1: rule__Service__Group_3_1__1__Impl : ( ( rule__Service__ImageAssignment_3_1_1 ) ) ;
    public final void rule__Service__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2619:1: ( ( ( rule__Service__ImageAssignment_3_1_1 ) ) )
            // InternalDockerCompose.g:2620:1: ( ( rule__Service__ImageAssignment_3_1_1 ) )
            {
            // InternalDockerCompose.g:2620:1: ( ( rule__Service__ImageAssignment_3_1_1 ) )
            // InternalDockerCompose.g:2621:2: ( rule__Service__ImageAssignment_3_1_1 )
            {
             before(grammarAccess.getServiceAccess().getImageAssignment_3_1_1()); 
            // InternalDockerCompose.g:2622:2: ( rule__Service__ImageAssignment_3_1_1 )
            // InternalDockerCompose.g:2622:3: rule__Service__ImageAssignment_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__ImageAssignment_3_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getImageAssignment_3_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_2__0"
    // InternalDockerCompose.g:2631:1: rule__Service__Group_3_2__0 : rule__Service__Group_3_2__0__Impl rule__Service__Group_3_2__1 ;
    public final void rule__Service__Group_3_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2635:1: ( rule__Service__Group_3_2__0__Impl rule__Service__Group_3_2__1 )
            // InternalDockerCompose.g:2636:2: rule__Service__Group_3_2__0__Impl rule__Service__Group_3_2__1
            {
            pushFollow(FOLLOW_9);
            rule__Service__Group_3_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_2__0"


    // $ANTLR start "rule__Service__Group_3_2__0__Impl"
    // InternalDockerCompose.g:2643:1: rule__Service__Group_3_2__0__Impl : ( 'cpu_count:' ) ;
    public final void rule__Service__Group_3_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2647:1: ( ( 'cpu_count:' ) )
            // InternalDockerCompose.g:2648:1: ( 'cpu_count:' )
            {
            // InternalDockerCompose.g:2648:1: ( 'cpu_count:' )
            // InternalDockerCompose.g:2649:2: 'cpu_count:'
            {
             before(grammarAccess.getServiceAccess().getCpu_countKeyword_3_2_0()); 
            match(input,51,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getCpu_countKeyword_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_2__0__Impl"


    // $ANTLR start "rule__Service__Group_3_2__1"
    // InternalDockerCompose.g:2658:1: rule__Service__Group_3_2__1 : rule__Service__Group_3_2__1__Impl ;
    public final void rule__Service__Group_3_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2662:1: ( rule__Service__Group_3_2__1__Impl )
            // InternalDockerCompose.g:2663:2: rule__Service__Group_3_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_2__1"


    // $ANTLR start "rule__Service__Group_3_2__1__Impl"
    // InternalDockerCompose.g:2669:1: rule__Service__Group_3_2__1__Impl : ( ( rule__Service__Cpu_countAssignment_3_2_1 ) ) ;
    public final void rule__Service__Group_3_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2673:1: ( ( ( rule__Service__Cpu_countAssignment_3_2_1 ) ) )
            // InternalDockerCompose.g:2674:1: ( ( rule__Service__Cpu_countAssignment_3_2_1 ) )
            {
            // InternalDockerCompose.g:2674:1: ( ( rule__Service__Cpu_countAssignment_3_2_1 ) )
            // InternalDockerCompose.g:2675:2: ( rule__Service__Cpu_countAssignment_3_2_1 )
            {
             before(grammarAccess.getServiceAccess().getCpu_countAssignment_3_2_1()); 
            // InternalDockerCompose.g:2676:2: ( rule__Service__Cpu_countAssignment_3_2_1 )
            // InternalDockerCompose.g:2676:3: rule__Service__Cpu_countAssignment_3_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Cpu_countAssignment_3_2_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getCpu_countAssignment_3_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_2__1__Impl"


    // $ANTLR start "rule__Service__Group_3_3__0"
    // InternalDockerCompose.g:2685:1: rule__Service__Group_3_3__0 : rule__Service__Group_3_3__0__Impl rule__Service__Group_3_3__1 ;
    public final void rule__Service__Group_3_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2689:1: ( rule__Service__Group_3_3__0__Impl rule__Service__Group_3_3__1 )
            // InternalDockerCompose.g:2690:2: rule__Service__Group_3_3__0__Impl rule__Service__Group_3_3__1
            {
            pushFollow(FOLLOW_13);
            rule__Service__Group_3_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_3__0"


    // $ANTLR start "rule__Service__Group_3_3__0__Impl"
    // InternalDockerCompose.g:2697:1: rule__Service__Group_3_3__0__Impl : ( 'command:' ) ;
    public final void rule__Service__Group_3_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2701:1: ( ( 'command:' ) )
            // InternalDockerCompose.g:2702:1: ( 'command:' )
            {
            // InternalDockerCompose.g:2702:1: ( 'command:' )
            // InternalDockerCompose.g:2703:2: 'command:'
            {
             before(grammarAccess.getServiceAccess().getCommandKeyword_3_3_0()); 
            match(input,52,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getCommandKeyword_3_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_3__0__Impl"


    // $ANTLR start "rule__Service__Group_3_3__1"
    // InternalDockerCompose.g:2712:1: rule__Service__Group_3_3__1 : rule__Service__Group_3_3__1__Impl ;
    public final void rule__Service__Group_3_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2716:1: ( rule__Service__Group_3_3__1__Impl )
            // InternalDockerCompose.g:2717:2: rule__Service__Group_3_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_3__1"


    // $ANTLR start "rule__Service__Group_3_3__1__Impl"
    // InternalDockerCompose.g:2723:1: rule__Service__Group_3_3__1__Impl : ( ( rule__Service__CommandAssignment_3_3_1 ) ) ;
    public final void rule__Service__Group_3_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2727:1: ( ( ( rule__Service__CommandAssignment_3_3_1 ) ) )
            // InternalDockerCompose.g:2728:1: ( ( rule__Service__CommandAssignment_3_3_1 ) )
            {
            // InternalDockerCompose.g:2728:1: ( ( rule__Service__CommandAssignment_3_3_1 ) )
            // InternalDockerCompose.g:2729:2: ( rule__Service__CommandAssignment_3_3_1 )
            {
             before(grammarAccess.getServiceAccess().getCommandAssignment_3_3_1()); 
            // InternalDockerCompose.g:2730:2: ( rule__Service__CommandAssignment_3_3_1 )
            // InternalDockerCompose.g:2730:3: rule__Service__CommandAssignment_3_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__CommandAssignment_3_3_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getCommandAssignment_3_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_3__1__Impl"


    // $ANTLR start "rule__Service__Group_3_4__0"
    // InternalDockerCompose.g:2739:1: rule__Service__Group_3_4__0 : rule__Service__Group_3_4__0__Impl rule__Service__Group_3_4__1 ;
    public final void rule__Service__Group_3_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2743:1: ( rule__Service__Group_3_4__0__Impl rule__Service__Group_3_4__1 )
            // InternalDockerCompose.g:2744:2: rule__Service__Group_3_4__0__Impl rule__Service__Group_3_4__1
            {
            pushFollow(FOLLOW_14);
            rule__Service__Group_3_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_4__0"


    // $ANTLR start "rule__Service__Group_3_4__0__Impl"
    // InternalDockerCompose.g:2751:1: rule__Service__Group_3_4__0__Impl : ( 'container_name:' ) ;
    public final void rule__Service__Group_3_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2755:1: ( ( 'container_name:' ) )
            // InternalDockerCompose.g:2756:1: ( 'container_name:' )
            {
            // InternalDockerCompose.g:2756:1: ( 'container_name:' )
            // InternalDockerCompose.g:2757:2: 'container_name:'
            {
             before(grammarAccess.getServiceAccess().getContainer_nameKeyword_3_4_0()); 
            match(input,53,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getContainer_nameKeyword_3_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_4__0__Impl"


    // $ANTLR start "rule__Service__Group_3_4__1"
    // InternalDockerCompose.g:2766:1: rule__Service__Group_3_4__1 : rule__Service__Group_3_4__1__Impl ;
    public final void rule__Service__Group_3_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2770:1: ( rule__Service__Group_3_4__1__Impl )
            // InternalDockerCompose.g:2771:2: rule__Service__Group_3_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_4__1"


    // $ANTLR start "rule__Service__Group_3_4__1__Impl"
    // InternalDockerCompose.g:2777:1: rule__Service__Group_3_4__1__Impl : ( ( rule__Service__Container_nameAssignment_3_4_1 ) ) ;
    public final void rule__Service__Group_3_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2781:1: ( ( ( rule__Service__Container_nameAssignment_3_4_1 ) ) )
            // InternalDockerCompose.g:2782:1: ( ( rule__Service__Container_nameAssignment_3_4_1 ) )
            {
            // InternalDockerCompose.g:2782:1: ( ( rule__Service__Container_nameAssignment_3_4_1 ) )
            // InternalDockerCompose.g:2783:2: ( rule__Service__Container_nameAssignment_3_4_1 )
            {
             before(grammarAccess.getServiceAccess().getContainer_nameAssignment_3_4_1()); 
            // InternalDockerCompose.g:2784:2: ( rule__Service__Container_nameAssignment_3_4_1 )
            // InternalDockerCompose.g:2784:3: rule__Service__Container_nameAssignment_3_4_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Container_nameAssignment_3_4_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getContainer_nameAssignment_3_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_4__1__Impl"


    // $ANTLR start "rule__Service__Group_3_5__0"
    // InternalDockerCompose.g:2793:1: rule__Service__Group_3_5__0 : rule__Service__Group_3_5__0__Impl rule__Service__Group_3_5__1 ;
    public final void rule__Service__Group_3_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2797:1: ( rule__Service__Group_3_5__0__Impl rule__Service__Group_3_5__1 )
            // InternalDockerCompose.g:2798:2: rule__Service__Group_3_5__0__Impl rule__Service__Group_3_5__1
            {
            pushFollow(FOLLOW_15);
            rule__Service__Group_3_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_5__0"


    // $ANTLR start "rule__Service__Group_3_5__0__Impl"
    // InternalDockerCompose.g:2805:1: rule__Service__Group_3_5__0__Impl : ( 'restart:' ) ;
    public final void rule__Service__Group_3_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2809:1: ( ( 'restart:' ) )
            // InternalDockerCompose.g:2810:1: ( 'restart:' )
            {
            // InternalDockerCompose.g:2810:1: ( 'restart:' )
            // InternalDockerCompose.g:2811:2: 'restart:'
            {
             before(grammarAccess.getServiceAccess().getRestartKeyword_3_5_0()); 
            match(input,54,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getRestartKeyword_3_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_5__0__Impl"


    // $ANTLR start "rule__Service__Group_3_5__1"
    // InternalDockerCompose.g:2820:1: rule__Service__Group_3_5__1 : rule__Service__Group_3_5__1__Impl ;
    public final void rule__Service__Group_3_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2824:1: ( rule__Service__Group_3_5__1__Impl )
            // InternalDockerCompose.g:2825:2: rule__Service__Group_3_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_5__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_5__1"


    // $ANTLR start "rule__Service__Group_3_5__1__Impl"
    // InternalDockerCompose.g:2831:1: rule__Service__Group_3_5__1__Impl : ( ( rule__Service__RestartAssignment_3_5_1 ) ) ;
    public final void rule__Service__Group_3_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2835:1: ( ( ( rule__Service__RestartAssignment_3_5_1 ) ) )
            // InternalDockerCompose.g:2836:1: ( ( rule__Service__RestartAssignment_3_5_1 ) )
            {
            // InternalDockerCompose.g:2836:1: ( ( rule__Service__RestartAssignment_3_5_1 ) )
            // InternalDockerCompose.g:2837:2: ( rule__Service__RestartAssignment_3_5_1 )
            {
             before(grammarAccess.getServiceAccess().getRestartAssignment_3_5_1()); 
            // InternalDockerCompose.g:2838:2: ( rule__Service__RestartAssignment_3_5_1 )
            // InternalDockerCompose.g:2838:3: rule__Service__RestartAssignment_3_5_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__RestartAssignment_3_5_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getRestartAssignment_3_5_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_5__1__Impl"


    // $ANTLR start "rule__Service__Group_3_6__0"
    // InternalDockerCompose.g:2847:1: rule__Service__Group_3_6__0 : rule__Service__Group_3_6__0__Impl rule__Service__Group_3_6__1 ;
    public final void rule__Service__Group_3_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2851:1: ( rule__Service__Group_3_6__0__Impl rule__Service__Group_3_6__1 )
            // InternalDockerCompose.g:2852:2: rule__Service__Group_3_6__0__Impl rule__Service__Group_3_6__1
            {
            pushFollow(FOLLOW_16);
            rule__Service__Group_3_6__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_6__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_6__0"


    // $ANTLR start "rule__Service__Group_3_6__0__Impl"
    // InternalDockerCompose.g:2859:1: rule__Service__Group_3_6__0__Impl : ( 'init:' ) ;
    public final void rule__Service__Group_3_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2863:1: ( ( 'init:' ) )
            // InternalDockerCompose.g:2864:1: ( 'init:' )
            {
            // InternalDockerCompose.g:2864:1: ( 'init:' )
            // InternalDockerCompose.g:2865:2: 'init:'
            {
             before(grammarAccess.getServiceAccess().getInitKeyword_3_6_0()); 
            match(input,55,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getInitKeyword_3_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_6__0__Impl"


    // $ANTLR start "rule__Service__Group_3_6__1"
    // InternalDockerCompose.g:2874:1: rule__Service__Group_3_6__1 : rule__Service__Group_3_6__1__Impl ;
    public final void rule__Service__Group_3_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2878:1: ( rule__Service__Group_3_6__1__Impl )
            // InternalDockerCompose.g:2879:2: rule__Service__Group_3_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_6__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_6__1"


    // $ANTLR start "rule__Service__Group_3_6__1__Impl"
    // InternalDockerCompose.g:2885:1: rule__Service__Group_3_6__1__Impl : ( ( rule__Service__InitAssignment_3_6_1 ) ) ;
    public final void rule__Service__Group_3_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2889:1: ( ( ( rule__Service__InitAssignment_3_6_1 ) ) )
            // InternalDockerCompose.g:2890:1: ( ( rule__Service__InitAssignment_3_6_1 ) )
            {
            // InternalDockerCompose.g:2890:1: ( ( rule__Service__InitAssignment_3_6_1 ) )
            // InternalDockerCompose.g:2891:2: ( rule__Service__InitAssignment_3_6_1 )
            {
             before(grammarAccess.getServiceAccess().getInitAssignment_3_6_1()); 
            // InternalDockerCompose.g:2892:2: ( rule__Service__InitAssignment_3_6_1 )
            // InternalDockerCompose.g:2892:3: rule__Service__InitAssignment_3_6_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__InitAssignment_3_6_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getInitAssignment_3_6_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_6__1__Impl"


    // $ANTLR start "rule__Service__Group_3_7__0"
    // InternalDockerCompose.g:2901:1: rule__Service__Group_3_7__0 : rule__Service__Group_3_7__0__Impl rule__Service__Group_3_7__1 ;
    public final void rule__Service__Group_3_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2905:1: ( rule__Service__Group_3_7__0__Impl rule__Service__Group_3_7__1 )
            // InternalDockerCompose.g:2906:2: rule__Service__Group_3_7__0__Impl rule__Service__Group_3_7__1
            {
            pushFollow(FOLLOW_16);
            rule__Service__Group_3_7__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_7__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7__0"


    // $ANTLR start "rule__Service__Group_3_7__0__Impl"
    // InternalDockerCompose.g:2913:1: rule__Service__Group_3_7__0__Impl : ( 'read_only:' ) ;
    public final void rule__Service__Group_3_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2917:1: ( ( 'read_only:' ) )
            // InternalDockerCompose.g:2918:1: ( 'read_only:' )
            {
            // InternalDockerCompose.g:2918:1: ( 'read_only:' )
            // InternalDockerCompose.g:2919:2: 'read_only:'
            {
             before(grammarAccess.getServiceAccess().getRead_onlyKeyword_3_7_0()); 
            match(input,56,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getRead_onlyKeyword_3_7_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7__0__Impl"


    // $ANTLR start "rule__Service__Group_3_7__1"
    // InternalDockerCompose.g:2928:1: rule__Service__Group_3_7__1 : rule__Service__Group_3_7__1__Impl ;
    public final void rule__Service__Group_3_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2932:1: ( rule__Service__Group_3_7__1__Impl )
            // InternalDockerCompose.g:2933:2: rule__Service__Group_3_7__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_7__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7__1"


    // $ANTLR start "rule__Service__Group_3_7__1__Impl"
    // InternalDockerCompose.g:2939:1: rule__Service__Group_3_7__1__Impl : ( ( rule__Service__Read_onlyAssignment_3_7_1 ) ) ;
    public final void rule__Service__Group_3_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2943:1: ( ( ( rule__Service__Read_onlyAssignment_3_7_1 ) ) )
            // InternalDockerCompose.g:2944:1: ( ( rule__Service__Read_onlyAssignment_3_7_1 ) )
            {
            // InternalDockerCompose.g:2944:1: ( ( rule__Service__Read_onlyAssignment_3_7_1 ) )
            // InternalDockerCompose.g:2945:2: ( rule__Service__Read_onlyAssignment_3_7_1 )
            {
             before(grammarAccess.getServiceAccess().getRead_onlyAssignment_3_7_1()); 
            // InternalDockerCompose.g:2946:2: ( rule__Service__Read_onlyAssignment_3_7_1 )
            // InternalDockerCompose.g:2946:3: rule__Service__Read_onlyAssignment_3_7_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Read_onlyAssignment_3_7_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getRead_onlyAssignment_3_7_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7__1__Impl"


    // $ANTLR start "rule__Service__Group_3_8__0"
    // InternalDockerCompose.g:2955:1: rule__Service__Group_3_8__0 : rule__Service__Group_3_8__0__Impl rule__Service__Group_3_8__1 ;
    public final void rule__Service__Group_3_8__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2959:1: ( rule__Service__Group_3_8__0__Impl rule__Service__Group_3_8__1 )
            // InternalDockerCompose.g:2960:2: rule__Service__Group_3_8__0__Impl rule__Service__Group_3_8__1
            {
            pushFollow(FOLLOW_17);
            rule__Service__Group_3_8__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_8__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_8__0"


    // $ANTLR start "rule__Service__Group_3_8__0__Impl"
    // InternalDockerCompose.g:2967:1: rule__Service__Group_3_8__0__Impl : ( 'links:' ) ;
    public final void rule__Service__Group_3_8__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2971:1: ( ( 'links:' ) )
            // InternalDockerCompose.g:2972:1: ( 'links:' )
            {
            // InternalDockerCompose.g:2972:1: ( 'links:' )
            // InternalDockerCompose.g:2973:2: 'links:'
            {
             before(grammarAccess.getServiceAccess().getLinksKeyword_3_8_0()); 
            match(input,57,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getLinksKeyword_3_8_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_8__0__Impl"


    // $ANTLR start "rule__Service__Group_3_8__1"
    // InternalDockerCompose.g:2982:1: rule__Service__Group_3_8__1 : rule__Service__Group_3_8__1__Impl ;
    public final void rule__Service__Group_3_8__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2986:1: ( rule__Service__Group_3_8__1__Impl )
            // InternalDockerCompose.g:2987:2: rule__Service__Group_3_8__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_8__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_8__1"


    // $ANTLR start "rule__Service__Group_3_8__1__Impl"
    // InternalDockerCompose.g:2993:1: rule__Service__Group_3_8__1__Impl : ( ( ( rule__Service__Group_3_8_1__0 ) ) ( ( rule__Service__Group_3_8_1__0 )* ) ) ;
    public final void rule__Service__Group_3_8__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2997:1: ( ( ( ( rule__Service__Group_3_8_1__0 ) ) ( ( rule__Service__Group_3_8_1__0 )* ) ) )
            // InternalDockerCompose.g:2998:1: ( ( ( rule__Service__Group_3_8_1__0 ) ) ( ( rule__Service__Group_3_8_1__0 )* ) )
            {
            // InternalDockerCompose.g:2998:1: ( ( ( rule__Service__Group_3_8_1__0 ) ) ( ( rule__Service__Group_3_8_1__0 )* ) )
            // InternalDockerCompose.g:2999:2: ( ( rule__Service__Group_3_8_1__0 ) ) ( ( rule__Service__Group_3_8_1__0 )* )
            {
            // InternalDockerCompose.g:2999:2: ( ( rule__Service__Group_3_8_1__0 ) )
            // InternalDockerCompose.g:3000:3: ( rule__Service__Group_3_8_1__0 )
            {
             before(grammarAccess.getServiceAccess().getGroup_3_8_1()); 
            // InternalDockerCompose.g:3001:3: ( rule__Service__Group_3_8_1__0 )
            // InternalDockerCompose.g:3001:4: rule__Service__Group_3_8_1__0
            {
            pushFollow(FOLLOW_5);
            rule__Service__Group_3_8_1__0();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getGroup_3_8_1()); 

            }

            // InternalDockerCompose.g:3004:2: ( ( rule__Service__Group_3_8_1__0 )* )
            // InternalDockerCompose.g:3005:3: ( rule__Service__Group_3_8_1__0 )*
            {
             before(grammarAccess.getServiceAccess().getGroup_3_8_1()); 
            // InternalDockerCompose.g:3006:3: ( rule__Service__Group_3_8_1__0 )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( (LA43_0==19) ) {
                    alt43=1;
                }


                switch (alt43) {
            	case 1 :
            	    // InternalDockerCompose.g:3006:4: rule__Service__Group_3_8_1__0
            	    {
            	    pushFollow(FOLLOW_5);
            	    rule__Service__Group_3_8_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);

             after(grammarAccess.getServiceAccess().getGroup_3_8_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_8__1__Impl"


    // $ANTLR start "rule__Service__Group_3_8_1__0"
    // InternalDockerCompose.g:3016:1: rule__Service__Group_3_8_1__0 : rule__Service__Group_3_8_1__0__Impl rule__Service__Group_3_8_1__1 ;
    public final void rule__Service__Group_3_8_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3020:1: ( rule__Service__Group_3_8_1__0__Impl rule__Service__Group_3_8_1__1 )
            // InternalDockerCompose.g:3021:2: rule__Service__Group_3_8_1__0__Impl rule__Service__Group_3_8_1__1
            {
            pushFollow(FOLLOW_7);
            rule__Service__Group_3_8_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_8_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_8_1__0"


    // $ANTLR start "rule__Service__Group_3_8_1__0__Impl"
    // InternalDockerCompose.g:3028:1: rule__Service__Group_3_8_1__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_8_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3032:1: ( ( '-' ) )
            // InternalDockerCompose.g:3033:1: ( '-' )
            {
            // InternalDockerCompose.g:3033:1: ( '-' )
            // InternalDockerCompose.g:3034:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_8_1_0()); 
            match(input,19,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_8_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_8_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_8_1__1"
    // InternalDockerCompose.g:3043:1: rule__Service__Group_3_8_1__1 : rule__Service__Group_3_8_1__1__Impl ;
    public final void rule__Service__Group_3_8_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3047:1: ( rule__Service__Group_3_8_1__1__Impl )
            // InternalDockerCompose.g:3048:2: rule__Service__Group_3_8_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_8_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_8_1__1"


    // $ANTLR start "rule__Service__Group_3_8_1__1__Impl"
    // InternalDockerCompose.g:3054:1: rule__Service__Group_3_8_1__1__Impl : ( ( rule__Service__LinksAssignment_3_8_1_1 ) ) ;
    public final void rule__Service__Group_3_8_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3058:1: ( ( ( rule__Service__LinksAssignment_3_8_1_1 ) ) )
            // InternalDockerCompose.g:3059:1: ( ( rule__Service__LinksAssignment_3_8_1_1 ) )
            {
            // InternalDockerCompose.g:3059:1: ( ( rule__Service__LinksAssignment_3_8_1_1 ) )
            // InternalDockerCompose.g:3060:2: ( rule__Service__LinksAssignment_3_8_1_1 )
            {
             before(grammarAccess.getServiceAccess().getLinksAssignment_3_8_1_1()); 
            // InternalDockerCompose.g:3061:2: ( rule__Service__LinksAssignment_3_8_1_1 )
            // InternalDockerCompose.g:3061:3: rule__Service__LinksAssignment_3_8_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__LinksAssignment_3_8_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getLinksAssignment_3_8_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_8_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_9__0"
    // InternalDockerCompose.g:3070:1: rule__Service__Group_3_9__0 : rule__Service__Group_3_9__0__Impl rule__Service__Group_3_9__1 ;
    public final void rule__Service__Group_3_9__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3074:1: ( rule__Service__Group_3_9__0__Impl rule__Service__Group_3_9__1 )
            // InternalDockerCompose.g:3075:2: rule__Service__Group_3_9__0__Impl rule__Service__Group_3_9__1
            {
            pushFollow(FOLLOW_18);
            rule__Service__Group_3_9__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_9__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_9__0"


    // $ANTLR start "rule__Service__Group_3_9__0__Impl"
    // InternalDockerCompose.g:3082:1: rule__Service__Group_3_9__0__Impl : ( 'depends_on:' ) ;
    public final void rule__Service__Group_3_9__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3086:1: ( ( 'depends_on:' ) )
            // InternalDockerCompose.g:3087:1: ( 'depends_on:' )
            {
            // InternalDockerCompose.g:3087:1: ( 'depends_on:' )
            // InternalDockerCompose.g:3088:2: 'depends_on:'
            {
             before(grammarAccess.getServiceAccess().getDepends_onKeyword_3_9_0()); 
            match(input,58,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getDepends_onKeyword_3_9_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_9__0__Impl"


    // $ANTLR start "rule__Service__Group_3_9__1"
    // InternalDockerCompose.g:3097:1: rule__Service__Group_3_9__1 : rule__Service__Group_3_9__1__Impl ;
    public final void rule__Service__Group_3_9__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3101:1: ( rule__Service__Group_3_9__1__Impl )
            // InternalDockerCompose.g:3102:2: rule__Service__Group_3_9__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_9__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_9__1"


    // $ANTLR start "rule__Service__Group_3_9__1__Impl"
    // InternalDockerCompose.g:3108:1: rule__Service__Group_3_9__1__Impl : ( ( ( rule__Service__Depends_onAssignment_3_9_1 ) ) ( ( rule__Service__Depends_onAssignment_3_9_1 )* ) ) ;
    public final void rule__Service__Group_3_9__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3112:1: ( ( ( ( rule__Service__Depends_onAssignment_3_9_1 ) ) ( ( rule__Service__Depends_onAssignment_3_9_1 )* ) ) )
            // InternalDockerCompose.g:3113:1: ( ( ( rule__Service__Depends_onAssignment_3_9_1 ) ) ( ( rule__Service__Depends_onAssignment_3_9_1 )* ) )
            {
            // InternalDockerCompose.g:3113:1: ( ( ( rule__Service__Depends_onAssignment_3_9_1 ) ) ( ( rule__Service__Depends_onAssignment_3_9_1 )* ) )
            // InternalDockerCompose.g:3114:2: ( ( rule__Service__Depends_onAssignment_3_9_1 ) ) ( ( rule__Service__Depends_onAssignment_3_9_1 )* )
            {
            // InternalDockerCompose.g:3114:2: ( ( rule__Service__Depends_onAssignment_3_9_1 ) )
            // InternalDockerCompose.g:3115:3: ( rule__Service__Depends_onAssignment_3_9_1 )
            {
             before(grammarAccess.getServiceAccess().getDepends_onAssignment_3_9_1()); 
            // InternalDockerCompose.g:3116:3: ( rule__Service__Depends_onAssignment_3_9_1 )
            // InternalDockerCompose.g:3116:4: rule__Service__Depends_onAssignment_3_9_1
            {
            pushFollow(FOLLOW_19);
            rule__Service__Depends_onAssignment_3_9_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getDepends_onAssignment_3_9_1()); 

            }

            // InternalDockerCompose.g:3119:2: ( ( rule__Service__Depends_onAssignment_3_9_1 )* )
            // InternalDockerCompose.g:3120:3: ( rule__Service__Depends_onAssignment_3_9_1 )*
            {
             before(grammarAccess.getServiceAccess().getDepends_onAssignment_3_9_1()); 
            // InternalDockerCompose.g:3121:3: ( rule__Service__Depends_onAssignment_3_9_1 )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==RULE_ID) ) {
                    int LA44_2 = input.LA(2);

                    if ( (LA44_2==48) ) {
                        int LA44_4 = input.LA(3);

                        if ( (LA44_4==66) ) {
                            alt44=1;
                        }


                    }


                }
                else if ( (LA44_0==19) ) {
                    alt44=1;
                }


                switch (alt44) {
            	case 1 :
            	    // InternalDockerCompose.g:3121:4: rule__Service__Depends_onAssignment_3_9_1
            	    {
            	    pushFollow(FOLLOW_19);
            	    rule__Service__Depends_onAssignment_3_9_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);

             after(grammarAccess.getServiceAccess().getDepends_onAssignment_3_9_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_9__1__Impl"


    // $ANTLR start "rule__Service__Group_3_10__0"
    // InternalDockerCompose.g:3131:1: rule__Service__Group_3_10__0 : rule__Service__Group_3_10__0__Impl rule__Service__Group_3_10__1 ;
    public final void rule__Service__Group_3_10__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3135:1: ( rule__Service__Group_3_10__0__Impl rule__Service__Group_3_10__1 )
            // InternalDockerCompose.g:3136:2: rule__Service__Group_3_10__0__Impl rule__Service__Group_3_10__1
            {
            pushFollow(FOLLOW_18);
            rule__Service__Group_3_10__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_10__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10__0"


    // $ANTLR start "rule__Service__Group_3_10__0__Impl"
    // InternalDockerCompose.g:3143:1: rule__Service__Group_3_10__0__Impl : ( 'networks:' ) ;
    public final void rule__Service__Group_3_10__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3147:1: ( ( 'networks:' ) )
            // InternalDockerCompose.g:3148:1: ( 'networks:' )
            {
            // InternalDockerCompose.g:3148:1: ( 'networks:' )
            // InternalDockerCompose.g:3149:2: 'networks:'
            {
             before(grammarAccess.getServiceAccess().getNetworksKeyword_3_10_0()); 
            match(input,47,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getNetworksKeyword_3_10_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10__0__Impl"


    // $ANTLR start "rule__Service__Group_3_10__1"
    // InternalDockerCompose.g:3158:1: rule__Service__Group_3_10__1 : rule__Service__Group_3_10__1__Impl ;
    public final void rule__Service__Group_3_10__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3162:1: ( rule__Service__Group_3_10__1__Impl )
            // InternalDockerCompose.g:3163:2: rule__Service__Group_3_10__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_10__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10__1"


    // $ANTLR start "rule__Service__Group_3_10__1__Impl"
    // InternalDockerCompose.g:3169:1: rule__Service__Group_3_10__1__Impl : ( ( rule__Service__Alternatives_3_10_1 ) ) ;
    public final void rule__Service__Group_3_10__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3173:1: ( ( ( rule__Service__Alternatives_3_10_1 ) ) )
            // InternalDockerCompose.g:3174:1: ( ( rule__Service__Alternatives_3_10_1 ) )
            {
            // InternalDockerCompose.g:3174:1: ( ( rule__Service__Alternatives_3_10_1 ) )
            // InternalDockerCompose.g:3175:2: ( rule__Service__Alternatives_3_10_1 )
            {
             before(grammarAccess.getServiceAccess().getAlternatives_3_10_1()); 
            // InternalDockerCompose.g:3176:2: ( rule__Service__Alternatives_3_10_1 )
            // InternalDockerCompose.g:3176:3: rule__Service__Alternatives_3_10_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Alternatives_3_10_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getAlternatives_3_10_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10__1__Impl"


    // $ANTLR start "rule__Service__Group_3_11__0"
    // InternalDockerCompose.g:3185:1: rule__Service__Group_3_11__0 : rule__Service__Group_3_11__0__Impl rule__Service__Group_3_11__1 ;
    public final void rule__Service__Group_3_11__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3189:1: ( rule__Service__Group_3_11__0__Impl rule__Service__Group_3_11__1 )
            // InternalDockerCompose.g:3190:2: rule__Service__Group_3_11__0__Impl rule__Service__Group_3_11__1
            {
            pushFollow(FOLLOW_17);
            rule__Service__Group_3_11__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_11__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11__0"


    // $ANTLR start "rule__Service__Group_3_11__0__Impl"
    // InternalDockerCompose.g:3197:1: rule__Service__Group_3_11__0__Impl : ( 'volumes:' ) ;
    public final void rule__Service__Group_3_11__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3201:1: ( ( 'volumes:' ) )
            // InternalDockerCompose.g:3202:1: ( 'volumes:' )
            {
            // InternalDockerCompose.g:3202:1: ( 'volumes:' )
            // InternalDockerCompose.g:3203:2: 'volumes:'
            {
             before(grammarAccess.getServiceAccess().getVolumesKeyword_3_11_0()); 
            match(input,44,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getVolumesKeyword_3_11_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11__0__Impl"


    // $ANTLR start "rule__Service__Group_3_11__1"
    // InternalDockerCompose.g:3212:1: rule__Service__Group_3_11__1 : rule__Service__Group_3_11__1__Impl ;
    public final void rule__Service__Group_3_11__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3216:1: ( rule__Service__Group_3_11__1__Impl )
            // InternalDockerCompose.g:3217:2: rule__Service__Group_3_11__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_11__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11__1"


    // $ANTLR start "rule__Service__Group_3_11__1__Impl"
    // InternalDockerCompose.g:3223:1: rule__Service__Group_3_11__1__Impl : ( ( ( rule__Service__Group_3_11_1__0 ) ) ( ( rule__Service__Group_3_11_1__0 )* ) ) ;
    public final void rule__Service__Group_3_11__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3227:1: ( ( ( ( rule__Service__Group_3_11_1__0 ) ) ( ( rule__Service__Group_3_11_1__0 )* ) ) )
            // InternalDockerCompose.g:3228:1: ( ( ( rule__Service__Group_3_11_1__0 ) ) ( ( rule__Service__Group_3_11_1__0 )* ) )
            {
            // InternalDockerCompose.g:3228:1: ( ( ( rule__Service__Group_3_11_1__0 ) ) ( ( rule__Service__Group_3_11_1__0 )* ) )
            // InternalDockerCompose.g:3229:2: ( ( rule__Service__Group_3_11_1__0 ) ) ( ( rule__Service__Group_3_11_1__0 )* )
            {
            // InternalDockerCompose.g:3229:2: ( ( rule__Service__Group_3_11_1__0 ) )
            // InternalDockerCompose.g:3230:3: ( rule__Service__Group_3_11_1__0 )
            {
             before(grammarAccess.getServiceAccess().getGroup_3_11_1()); 
            // InternalDockerCompose.g:3231:3: ( rule__Service__Group_3_11_1__0 )
            // InternalDockerCompose.g:3231:4: rule__Service__Group_3_11_1__0
            {
            pushFollow(FOLLOW_5);
            rule__Service__Group_3_11_1__0();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getGroup_3_11_1()); 

            }

            // InternalDockerCompose.g:3234:2: ( ( rule__Service__Group_3_11_1__0 )* )
            // InternalDockerCompose.g:3235:3: ( rule__Service__Group_3_11_1__0 )*
            {
             before(grammarAccess.getServiceAccess().getGroup_3_11_1()); 
            // InternalDockerCompose.g:3236:3: ( rule__Service__Group_3_11_1__0 )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==19) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // InternalDockerCompose.g:3236:4: rule__Service__Group_3_11_1__0
            	    {
            	    pushFollow(FOLLOW_5);
            	    rule__Service__Group_3_11_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);

             after(grammarAccess.getServiceAccess().getGroup_3_11_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11__1__Impl"


    // $ANTLR start "rule__Service__Group_3_11_1__0"
    // InternalDockerCompose.g:3246:1: rule__Service__Group_3_11_1__0 : rule__Service__Group_3_11_1__0__Impl rule__Service__Group_3_11_1__1 ;
    public final void rule__Service__Group_3_11_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3250:1: ( rule__Service__Group_3_11_1__0__Impl rule__Service__Group_3_11_1__1 )
            // InternalDockerCompose.g:3251:2: rule__Service__Group_3_11_1__0__Impl rule__Service__Group_3_11_1__1
            {
            pushFollow(FOLLOW_20);
            rule__Service__Group_3_11_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_11_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11_1__0"


    // $ANTLR start "rule__Service__Group_3_11_1__0__Impl"
    // InternalDockerCompose.g:3258:1: rule__Service__Group_3_11_1__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_11_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3262:1: ( ( '-' ) )
            // InternalDockerCompose.g:3263:1: ( '-' )
            {
            // InternalDockerCompose.g:3263:1: ( '-' )
            // InternalDockerCompose.g:3264:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_11_1_0()); 
            match(input,19,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_11_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_11_1__1"
    // InternalDockerCompose.g:3273:1: rule__Service__Group_3_11_1__1 : rule__Service__Group_3_11_1__1__Impl ;
    public final void rule__Service__Group_3_11_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3277:1: ( rule__Service__Group_3_11_1__1__Impl )
            // InternalDockerCompose.g:3278:2: rule__Service__Group_3_11_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_11_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11_1__1"


    // $ANTLR start "rule__Service__Group_3_11_1__1__Impl"
    // InternalDockerCompose.g:3284:1: rule__Service__Group_3_11_1__1__Impl : ( ( rule__Service__VolumesAssignment_3_11_1_1 ) ) ;
    public final void rule__Service__Group_3_11_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3288:1: ( ( ( rule__Service__VolumesAssignment_3_11_1_1 ) ) )
            // InternalDockerCompose.g:3289:1: ( ( rule__Service__VolumesAssignment_3_11_1_1 ) )
            {
            // InternalDockerCompose.g:3289:1: ( ( rule__Service__VolumesAssignment_3_11_1_1 ) )
            // InternalDockerCompose.g:3290:2: ( rule__Service__VolumesAssignment_3_11_1_1 )
            {
             before(grammarAccess.getServiceAccess().getVolumesAssignment_3_11_1_1()); 
            // InternalDockerCompose.g:3291:2: ( rule__Service__VolumesAssignment_3_11_1_1 )
            // InternalDockerCompose.g:3291:3: rule__Service__VolumesAssignment_3_11_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__VolumesAssignment_3_11_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getVolumesAssignment_3_11_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_12__0"
    // InternalDockerCompose.g:3300:1: rule__Service__Group_3_12__0 : rule__Service__Group_3_12__0__Impl rule__Service__Group_3_12__1 ;
    public final void rule__Service__Group_3_12__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3304:1: ( rule__Service__Group_3_12__0__Impl rule__Service__Group_3_12__1 )
            // InternalDockerCompose.g:3305:2: rule__Service__Group_3_12__0__Impl rule__Service__Group_3_12__1
            {
            pushFollow(FOLLOW_17);
            rule__Service__Group_3_12__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_12__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12__0"


    // $ANTLR start "rule__Service__Group_3_12__0__Impl"
    // InternalDockerCompose.g:3312:1: rule__Service__Group_3_12__0__Impl : ( 'configs:' ) ;
    public final void rule__Service__Group_3_12__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3316:1: ( ( 'configs:' ) )
            // InternalDockerCompose.g:3317:1: ( 'configs:' )
            {
            // InternalDockerCompose.g:3317:1: ( 'configs:' )
            // InternalDockerCompose.g:3318:2: 'configs:'
            {
             before(grammarAccess.getServiceAccess().getConfigsKeyword_3_12_0()); 
            match(input,45,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getConfigsKeyword_3_12_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12__0__Impl"


    // $ANTLR start "rule__Service__Group_3_12__1"
    // InternalDockerCompose.g:3327:1: rule__Service__Group_3_12__1 : rule__Service__Group_3_12__1__Impl ;
    public final void rule__Service__Group_3_12__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3331:1: ( rule__Service__Group_3_12__1__Impl )
            // InternalDockerCompose.g:3332:2: rule__Service__Group_3_12__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_12__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12__1"


    // $ANTLR start "rule__Service__Group_3_12__1__Impl"
    // InternalDockerCompose.g:3338:1: rule__Service__Group_3_12__1__Impl : ( ( ( rule__Service__Group_3_12_1__0 ) ) ( ( rule__Service__Group_3_12_1__0 )* ) ) ;
    public final void rule__Service__Group_3_12__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3342:1: ( ( ( ( rule__Service__Group_3_12_1__0 ) ) ( ( rule__Service__Group_3_12_1__0 )* ) ) )
            // InternalDockerCompose.g:3343:1: ( ( ( rule__Service__Group_3_12_1__0 ) ) ( ( rule__Service__Group_3_12_1__0 )* ) )
            {
            // InternalDockerCompose.g:3343:1: ( ( ( rule__Service__Group_3_12_1__0 ) ) ( ( rule__Service__Group_3_12_1__0 )* ) )
            // InternalDockerCompose.g:3344:2: ( ( rule__Service__Group_3_12_1__0 ) ) ( ( rule__Service__Group_3_12_1__0 )* )
            {
            // InternalDockerCompose.g:3344:2: ( ( rule__Service__Group_3_12_1__0 ) )
            // InternalDockerCompose.g:3345:3: ( rule__Service__Group_3_12_1__0 )
            {
             before(grammarAccess.getServiceAccess().getGroup_3_12_1()); 
            // InternalDockerCompose.g:3346:3: ( rule__Service__Group_3_12_1__0 )
            // InternalDockerCompose.g:3346:4: rule__Service__Group_3_12_1__0
            {
            pushFollow(FOLLOW_5);
            rule__Service__Group_3_12_1__0();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getGroup_3_12_1()); 

            }

            // InternalDockerCompose.g:3349:2: ( ( rule__Service__Group_3_12_1__0 )* )
            // InternalDockerCompose.g:3350:3: ( rule__Service__Group_3_12_1__0 )*
            {
             before(grammarAccess.getServiceAccess().getGroup_3_12_1()); 
            // InternalDockerCompose.g:3351:3: ( rule__Service__Group_3_12_1__0 )*
            loop46:
            do {
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( (LA46_0==19) ) {
                    alt46=1;
                }


                switch (alt46) {
            	case 1 :
            	    // InternalDockerCompose.g:3351:4: rule__Service__Group_3_12_1__0
            	    {
            	    pushFollow(FOLLOW_5);
            	    rule__Service__Group_3_12_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop46;
                }
            } while (true);

             after(grammarAccess.getServiceAccess().getGroup_3_12_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12__1__Impl"


    // $ANTLR start "rule__Service__Group_3_12_1__0"
    // InternalDockerCompose.g:3361:1: rule__Service__Group_3_12_1__0 : rule__Service__Group_3_12_1__0__Impl rule__Service__Group_3_12_1__1 ;
    public final void rule__Service__Group_3_12_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3365:1: ( rule__Service__Group_3_12_1__0__Impl rule__Service__Group_3_12_1__1 )
            // InternalDockerCompose.g:3366:2: rule__Service__Group_3_12_1__0__Impl rule__Service__Group_3_12_1__1
            {
            pushFollow(FOLLOW_21);
            rule__Service__Group_3_12_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_12_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12_1__0"


    // $ANTLR start "rule__Service__Group_3_12_1__0__Impl"
    // InternalDockerCompose.g:3373:1: rule__Service__Group_3_12_1__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_12_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3377:1: ( ( '-' ) )
            // InternalDockerCompose.g:3378:1: ( '-' )
            {
            // InternalDockerCompose.g:3378:1: ( '-' )
            // InternalDockerCompose.g:3379:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_12_1_0()); 
            match(input,19,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_12_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_12_1__1"
    // InternalDockerCompose.g:3388:1: rule__Service__Group_3_12_1__1 : rule__Service__Group_3_12_1__1__Impl ;
    public final void rule__Service__Group_3_12_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3392:1: ( rule__Service__Group_3_12_1__1__Impl )
            // InternalDockerCompose.g:3393:2: rule__Service__Group_3_12_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_12_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12_1__1"


    // $ANTLR start "rule__Service__Group_3_12_1__1__Impl"
    // InternalDockerCompose.g:3399:1: rule__Service__Group_3_12_1__1__Impl : ( ( rule__Service__ConfigsAssignment_3_12_1_1 ) ) ;
    public final void rule__Service__Group_3_12_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3403:1: ( ( ( rule__Service__ConfigsAssignment_3_12_1_1 ) ) )
            // InternalDockerCompose.g:3404:1: ( ( rule__Service__ConfigsAssignment_3_12_1_1 ) )
            {
            // InternalDockerCompose.g:3404:1: ( ( rule__Service__ConfigsAssignment_3_12_1_1 ) )
            // InternalDockerCompose.g:3405:2: ( rule__Service__ConfigsAssignment_3_12_1_1 )
            {
             before(grammarAccess.getServiceAccess().getConfigsAssignment_3_12_1_1()); 
            // InternalDockerCompose.g:3406:2: ( rule__Service__ConfigsAssignment_3_12_1_1 )
            // InternalDockerCompose.g:3406:3: rule__Service__ConfigsAssignment_3_12_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__ConfigsAssignment_3_12_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getConfigsAssignment_3_12_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_13__0"
    // InternalDockerCompose.g:3415:1: rule__Service__Group_3_13__0 : rule__Service__Group_3_13__0__Impl rule__Service__Group_3_13__1 ;
    public final void rule__Service__Group_3_13__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3419:1: ( rule__Service__Group_3_13__0__Impl rule__Service__Group_3_13__1 )
            // InternalDockerCompose.g:3420:2: rule__Service__Group_3_13__0__Impl rule__Service__Group_3_13__1
            {
            pushFollow(FOLLOW_17);
            rule__Service__Group_3_13__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_13__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13__0"


    // $ANTLR start "rule__Service__Group_3_13__0__Impl"
    // InternalDockerCompose.g:3427:1: rule__Service__Group_3_13__0__Impl : ( 'secrets:' ) ;
    public final void rule__Service__Group_3_13__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3431:1: ( ( 'secrets:' ) )
            // InternalDockerCompose.g:3432:1: ( 'secrets:' )
            {
            // InternalDockerCompose.g:3432:1: ( 'secrets:' )
            // InternalDockerCompose.g:3433:2: 'secrets:'
            {
             before(grammarAccess.getServiceAccess().getSecretsKeyword_3_13_0()); 
            match(input,46,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getSecretsKeyword_3_13_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13__0__Impl"


    // $ANTLR start "rule__Service__Group_3_13__1"
    // InternalDockerCompose.g:3442:1: rule__Service__Group_3_13__1 : rule__Service__Group_3_13__1__Impl ;
    public final void rule__Service__Group_3_13__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3446:1: ( rule__Service__Group_3_13__1__Impl )
            // InternalDockerCompose.g:3447:2: rule__Service__Group_3_13__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_13__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13__1"


    // $ANTLR start "rule__Service__Group_3_13__1__Impl"
    // InternalDockerCompose.g:3453:1: rule__Service__Group_3_13__1__Impl : ( ( ( rule__Service__Group_3_13_1__0 ) ) ( ( rule__Service__Group_3_13_1__0 )* ) ) ;
    public final void rule__Service__Group_3_13__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3457:1: ( ( ( ( rule__Service__Group_3_13_1__0 ) ) ( ( rule__Service__Group_3_13_1__0 )* ) ) )
            // InternalDockerCompose.g:3458:1: ( ( ( rule__Service__Group_3_13_1__0 ) ) ( ( rule__Service__Group_3_13_1__0 )* ) )
            {
            // InternalDockerCompose.g:3458:1: ( ( ( rule__Service__Group_3_13_1__0 ) ) ( ( rule__Service__Group_3_13_1__0 )* ) )
            // InternalDockerCompose.g:3459:2: ( ( rule__Service__Group_3_13_1__0 ) ) ( ( rule__Service__Group_3_13_1__0 )* )
            {
            // InternalDockerCompose.g:3459:2: ( ( rule__Service__Group_3_13_1__0 ) )
            // InternalDockerCompose.g:3460:3: ( rule__Service__Group_3_13_1__0 )
            {
             before(grammarAccess.getServiceAccess().getGroup_3_13_1()); 
            // InternalDockerCompose.g:3461:3: ( rule__Service__Group_3_13_1__0 )
            // InternalDockerCompose.g:3461:4: rule__Service__Group_3_13_1__0
            {
            pushFollow(FOLLOW_5);
            rule__Service__Group_3_13_1__0();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getGroup_3_13_1()); 

            }

            // InternalDockerCompose.g:3464:2: ( ( rule__Service__Group_3_13_1__0 )* )
            // InternalDockerCompose.g:3465:3: ( rule__Service__Group_3_13_1__0 )*
            {
             before(grammarAccess.getServiceAccess().getGroup_3_13_1()); 
            // InternalDockerCompose.g:3466:3: ( rule__Service__Group_3_13_1__0 )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( (LA47_0==19) ) {
                    alt47=1;
                }


                switch (alt47) {
            	case 1 :
            	    // InternalDockerCompose.g:3466:4: rule__Service__Group_3_13_1__0
            	    {
            	    pushFollow(FOLLOW_5);
            	    rule__Service__Group_3_13_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);

             after(grammarAccess.getServiceAccess().getGroup_3_13_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13__1__Impl"


    // $ANTLR start "rule__Service__Group_3_13_1__0"
    // InternalDockerCompose.g:3476:1: rule__Service__Group_3_13_1__0 : rule__Service__Group_3_13_1__0__Impl rule__Service__Group_3_13_1__1 ;
    public final void rule__Service__Group_3_13_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3480:1: ( rule__Service__Group_3_13_1__0__Impl rule__Service__Group_3_13_1__1 )
            // InternalDockerCompose.g:3481:2: rule__Service__Group_3_13_1__0__Impl rule__Service__Group_3_13_1__1
            {
            pushFollow(FOLLOW_21);
            rule__Service__Group_3_13_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_13_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13_1__0"


    // $ANTLR start "rule__Service__Group_3_13_1__0__Impl"
    // InternalDockerCompose.g:3488:1: rule__Service__Group_3_13_1__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_13_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3492:1: ( ( '-' ) )
            // InternalDockerCompose.g:3493:1: ( '-' )
            {
            // InternalDockerCompose.g:3493:1: ( '-' )
            // InternalDockerCompose.g:3494:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_13_1_0()); 
            match(input,19,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_13_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_13_1__1"
    // InternalDockerCompose.g:3503:1: rule__Service__Group_3_13_1__1 : rule__Service__Group_3_13_1__1__Impl ;
    public final void rule__Service__Group_3_13_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3507:1: ( rule__Service__Group_3_13_1__1__Impl )
            // InternalDockerCompose.g:3508:2: rule__Service__Group_3_13_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_13_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13_1__1"


    // $ANTLR start "rule__Service__Group_3_13_1__1__Impl"
    // InternalDockerCompose.g:3514:1: rule__Service__Group_3_13_1__1__Impl : ( ( rule__Service__SecretsAssignment_3_13_1_1 ) ) ;
    public final void rule__Service__Group_3_13_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3518:1: ( ( ( rule__Service__SecretsAssignment_3_13_1_1 ) ) )
            // InternalDockerCompose.g:3519:1: ( ( rule__Service__SecretsAssignment_3_13_1_1 ) )
            {
            // InternalDockerCompose.g:3519:1: ( ( rule__Service__SecretsAssignment_3_13_1_1 ) )
            // InternalDockerCompose.g:3520:2: ( rule__Service__SecretsAssignment_3_13_1_1 )
            {
             before(grammarAccess.getServiceAccess().getSecretsAssignment_3_13_1_1()); 
            // InternalDockerCompose.g:3521:2: ( rule__Service__SecretsAssignment_3_13_1_1 )
            // InternalDockerCompose.g:3521:3: rule__Service__SecretsAssignment_3_13_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__SecretsAssignment_3_13_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getSecretsAssignment_3_13_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_14__0"
    // InternalDockerCompose.g:3530:1: rule__Service__Group_3_14__0 : rule__Service__Group_3_14__0__Impl rule__Service__Group_3_14__1 ;
    public final void rule__Service__Group_3_14__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3534:1: ( rule__Service__Group_3_14__0__Impl rule__Service__Group_3_14__1 )
            // InternalDockerCompose.g:3535:2: rule__Service__Group_3_14__0__Impl rule__Service__Group_3_14__1
            {
            pushFollow(FOLLOW_18);
            rule__Service__Group_3_14__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_14__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14__0"


    // $ANTLR start "rule__Service__Group_3_14__0__Impl"
    // InternalDockerCompose.g:3542:1: rule__Service__Group_3_14__0__Impl : ( 'environment:' ) ;
    public final void rule__Service__Group_3_14__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3546:1: ( ( 'environment:' ) )
            // InternalDockerCompose.g:3547:1: ( 'environment:' )
            {
            // InternalDockerCompose.g:3547:1: ( 'environment:' )
            // InternalDockerCompose.g:3548:2: 'environment:'
            {
             before(grammarAccess.getServiceAccess().getEnvironmentKeyword_3_14_0()); 
            match(input,59,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getEnvironmentKeyword_3_14_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14__0__Impl"


    // $ANTLR start "rule__Service__Group_3_14__1"
    // InternalDockerCompose.g:3557:1: rule__Service__Group_3_14__1 : rule__Service__Group_3_14__1__Impl ;
    public final void rule__Service__Group_3_14__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3561:1: ( rule__Service__Group_3_14__1__Impl )
            // InternalDockerCompose.g:3562:2: rule__Service__Group_3_14__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_14__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14__1"


    // $ANTLR start "rule__Service__Group_3_14__1__Impl"
    // InternalDockerCompose.g:3568:1: rule__Service__Group_3_14__1__Impl : ( ( rule__Service__Alternatives_3_14_1 ) ) ;
    public final void rule__Service__Group_3_14__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3572:1: ( ( ( rule__Service__Alternatives_3_14_1 ) ) )
            // InternalDockerCompose.g:3573:1: ( ( rule__Service__Alternatives_3_14_1 ) )
            {
            // InternalDockerCompose.g:3573:1: ( ( rule__Service__Alternatives_3_14_1 ) )
            // InternalDockerCompose.g:3574:2: ( rule__Service__Alternatives_3_14_1 )
            {
             before(grammarAccess.getServiceAccess().getAlternatives_3_14_1()); 
            // InternalDockerCompose.g:3575:2: ( rule__Service__Alternatives_3_14_1 )
            // InternalDockerCompose.g:3575:3: rule__Service__Alternatives_3_14_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Alternatives_3_14_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getAlternatives_3_14_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14__1__Impl"


    // $ANTLR start "rule__Service__Group_3_15__0"
    // InternalDockerCompose.g:3584:1: rule__Service__Group_3_15__0 : rule__Service__Group_3_15__0__Impl rule__Service__Group_3_15__1 ;
    public final void rule__Service__Group_3_15__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3588:1: ( rule__Service__Group_3_15__0__Impl rule__Service__Group_3_15__1 )
            // InternalDockerCompose.g:3589:2: rule__Service__Group_3_15__0__Impl rule__Service__Group_3_15__1
            {
            pushFollow(FOLLOW_17);
            rule__Service__Group_3_15__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_15__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_15__0"


    // $ANTLR start "rule__Service__Group_3_15__0__Impl"
    // InternalDockerCompose.g:3596:1: rule__Service__Group_3_15__0__Impl : ( 'devices:' ) ;
    public final void rule__Service__Group_3_15__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3600:1: ( ( 'devices:' ) )
            // InternalDockerCompose.g:3601:1: ( 'devices:' )
            {
            // InternalDockerCompose.g:3601:1: ( 'devices:' )
            // InternalDockerCompose.g:3602:2: 'devices:'
            {
             before(grammarAccess.getServiceAccess().getDevicesKeyword_3_15_0()); 
            match(input,60,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getDevicesKeyword_3_15_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_15__0__Impl"


    // $ANTLR start "rule__Service__Group_3_15__1"
    // InternalDockerCompose.g:3611:1: rule__Service__Group_3_15__1 : rule__Service__Group_3_15__1__Impl ;
    public final void rule__Service__Group_3_15__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3615:1: ( rule__Service__Group_3_15__1__Impl )
            // InternalDockerCompose.g:3616:2: rule__Service__Group_3_15__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_15__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_15__1"


    // $ANTLR start "rule__Service__Group_3_15__1__Impl"
    // InternalDockerCompose.g:3622:1: rule__Service__Group_3_15__1__Impl : ( ( ( rule__Service__Group_3_15_1__0 ) ) ( ( rule__Service__Group_3_15_1__0 )* ) ) ;
    public final void rule__Service__Group_3_15__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3626:1: ( ( ( ( rule__Service__Group_3_15_1__0 ) ) ( ( rule__Service__Group_3_15_1__0 )* ) ) )
            // InternalDockerCompose.g:3627:1: ( ( ( rule__Service__Group_3_15_1__0 ) ) ( ( rule__Service__Group_3_15_1__0 )* ) )
            {
            // InternalDockerCompose.g:3627:1: ( ( ( rule__Service__Group_3_15_1__0 ) ) ( ( rule__Service__Group_3_15_1__0 )* ) )
            // InternalDockerCompose.g:3628:2: ( ( rule__Service__Group_3_15_1__0 ) ) ( ( rule__Service__Group_3_15_1__0 )* )
            {
            // InternalDockerCompose.g:3628:2: ( ( rule__Service__Group_3_15_1__0 ) )
            // InternalDockerCompose.g:3629:3: ( rule__Service__Group_3_15_1__0 )
            {
             before(grammarAccess.getServiceAccess().getGroup_3_15_1()); 
            // InternalDockerCompose.g:3630:3: ( rule__Service__Group_3_15_1__0 )
            // InternalDockerCompose.g:3630:4: rule__Service__Group_3_15_1__0
            {
            pushFollow(FOLLOW_5);
            rule__Service__Group_3_15_1__0();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getGroup_3_15_1()); 

            }

            // InternalDockerCompose.g:3633:2: ( ( rule__Service__Group_3_15_1__0 )* )
            // InternalDockerCompose.g:3634:3: ( rule__Service__Group_3_15_1__0 )*
            {
             before(grammarAccess.getServiceAccess().getGroup_3_15_1()); 
            // InternalDockerCompose.g:3635:3: ( rule__Service__Group_3_15_1__0 )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==19) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
            	    // InternalDockerCompose.g:3635:4: rule__Service__Group_3_15_1__0
            	    {
            	    pushFollow(FOLLOW_5);
            	    rule__Service__Group_3_15_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);

             after(grammarAccess.getServiceAccess().getGroup_3_15_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_15__1__Impl"


    // $ANTLR start "rule__Service__Group_3_15_1__0"
    // InternalDockerCompose.g:3645:1: rule__Service__Group_3_15_1__0 : rule__Service__Group_3_15_1__0__Impl rule__Service__Group_3_15_1__1 ;
    public final void rule__Service__Group_3_15_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3649:1: ( rule__Service__Group_3_15_1__0__Impl rule__Service__Group_3_15_1__1 )
            // InternalDockerCompose.g:3650:2: rule__Service__Group_3_15_1__0__Impl rule__Service__Group_3_15_1__1
            {
            pushFollow(FOLLOW_22);
            rule__Service__Group_3_15_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_15_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_15_1__0"


    // $ANTLR start "rule__Service__Group_3_15_1__0__Impl"
    // InternalDockerCompose.g:3657:1: rule__Service__Group_3_15_1__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_15_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3661:1: ( ( '-' ) )
            // InternalDockerCompose.g:3662:1: ( '-' )
            {
            // InternalDockerCompose.g:3662:1: ( '-' )
            // InternalDockerCompose.g:3663:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_15_1_0()); 
            match(input,19,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_15_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_15_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_15_1__1"
    // InternalDockerCompose.g:3672:1: rule__Service__Group_3_15_1__1 : rule__Service__Group_3_15_1__1__Impl ;
    public final void rule__Service__Group_3_15_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3676:1: ( rule__Service__Group_3_15_1__1__Impl )
            // InternalDockerCompose.g:3677:2: rule__Service__Group_3_15_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_15_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_15_1__1"


    // $ANTLR start "rule__Service__Group_3_15_1__1__Impl"
    // InternalDockerCompose.g:3683:1: rule__Service__Group_3_15_1__1__Impl : ( ( rule__Service__DevicesAssignment_3_15_1_1 ) ) ;
    public final void rule__Service__Group_3_15_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3687:1: ( ( ( rule__Service__DevicesAssignment_3_15_1_1 ) ) )
            // InternalDockerCompose.g:3688:1: ( ( rule__Service__DevicesAssignment_3_15_1_1 ) )
            {
            // InternalDockerCompose.g:3688:1: ( ( rule__Service__DevicesAssignment_3_15_1_1 ) )
            // InternalDockerCompose.g:3689:2: ( rule__Service__DevicesAssignment_3_15_1_1 )
            {
             before(grammarAccess.getServiceAccess().getDevicesAssignment_3_15_1_1()); 
            // InternalDockerCompose.g:3690:2: ( rule__Service__DevicesAssignment_3_15_1_1 )
            // InternalDockerCompose.g:3690:3: rule__Service__DevicesAssignment_3_15_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__DevicesAssignment_3_15_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getDevicesAssignment_3_15_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_15_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_16__0"
    // InternalDockerCompose.g:3699:1: rule__Service__Group_3_16__0 : rule__Service__Group_3_16__0__Impl rule__Service__Group_3_16__1 ;
    public final void rule__Service__Group_3_16__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3703:1: ( rule__Service__Group_3_16__0__Impl rule__Service__Group_3_16__1 )
            // InternalDockerCompose.g:3704:2: rule__Service__Group_3_16__0__Impl rule__Service__Group_3_16__1
            {
            pushFollow(FOLLOW_23);
            rule__Service__Group_3_16__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_16__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_16__0"


    // $ANTLR start "rule__Service__Group_3_16__0__Impl"
    // InternalDockerCompose.g:3711:1: rule__Service__Group_3_16__0__Impl : ( 'dns:' ) ;
    public final void rule__Service__Group_3_16__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3715:1: ( ( 'dns:' ) )
            // InternalDockerCompose.g:3716:1: ( 'dns:' )
            {
            // InternalDockerCompose.g:3716:1: ( 'dns:' )
            // InternalDockerCompose.g:3717:2: 'dns:'
            {
             before(grammarAccess.getServiceAccess().getDnsKeyword_3_16_0()); 
            match(input,61,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getDnsKeyword_3_16_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_16__0__Impl"


    // $ANTLR start "rule__Service__Group_3_16__1"
    // InternalDockerCompose.g:3726:1: rule__Service__Group_3_16__1 : rule__Service__Group_3_16__1__Impl ;
    public final void rule__Service__Group_3_16__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3730:1: ( rule__Service__Group_3_16__1__Impl )
            // InternalDockerCompose.g:3731:2: rule__Service__Group_3_16__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_16__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_16__1"


    // $ANTLR start "rule__Service__Group_3_16__1__Impl"
    // InternalDockerCompose.g:3737:1: rule__Service__Group_3_16__1__Impl : ( ( rule__Service__Alternatives_3_16_1 ) ) ;
    public final void rule__Service__Group_3_16__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3741:1: ( ( ( rule__Service__Alternatives_3_16_1 ) ) )
            // InternalDockerCompose.g:3742:1: ( ( rule__Service__Alternatives_3_16_1 ) )
            {
            // InternalDockerCompose.g:3742:1: ( ( rule__Service__Alternatives_3_16_1 ) )
            // InternalDockerCompose.g:3743:2: ( rule__Service__Alternatives_3_16_1 )
            {
             before(grammarAccess.getServiceAccess().getAlternatives_3_16_1()); 
            // InternalDockerCompose.g:3744:2: ( rule__Service__Alternatives_3_16_1 )
            // InternalDockerCompose.g:3744:3: rule__Service__Alternatives_3_16_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Alternatives_3_16_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getAlternatives_3_16_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_16__1__Impl"


    // $ANTLR start "rule__Service__Group_3_16_1_0__0"
    // InternalDockerCompose.g:3753:1: rule__Service__Group_3_16_1_0__0 : rule__Service__Group_3_16_1_0__0__Impl rule__Service__Group_3_16_1_0__1 ;
    public final void rule__Service__Group_3_16_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3757:1: ( rule__Service__Group_3_16_1_0__0__Impl rule__Service__Group_3_16_1_0__1 )
            // InternalDockerCompose.g:3758:2: rule__Service__Group_3_16_1_0__0__Impl rule__Service__Group_3_16_1_0__1
            {
            pushFollow(FOLLOW_23);
            rule__Service__Group_3_16_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_16_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_16_1_0__0"


    // $ANTLR start "rule__Service__Group_3_16_1_0__0__Impl"
    // InternalDockerCompose.g:3765:1: rule__Service__Group_3_16_1_0__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_16_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3769:1: ( ( '-' ) )
            // InternalDockerCompose.g:3770:1: ( '-' )
            {
            // InternalDockerCompose.g:3770:1: ( '-' )
            // InternalDockerCompose.g:3771:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_16_1_0_0()); 
            match(input,19,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_16_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_16_1_0__0__Impl"


    // $ANTLR start "rule__Service__Group_3_16_1_0__1"
    // InternalDockerCompose.g:3780:1: rule__Service__Group_3_16_1_0__1 : rule__Service__Group_3_16_1_0__1__Impl ;
    public final void rule__Service__Group_3_16_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3784:1: ( rule__Service__Group_3_16_1_0__1__Impl )
            // InternalDockerCompose.g:3785:2: rule__Service__Group_3_16_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_16_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_16_1_0__1"


    // $ANTLR start "rule__Service__Group_3_16_1_0__1__Impl"
    // InternalDockerCompose.g:3791:1: rule__Service__Group_3_16_1_0__1__Impl : ( ( rule__Service__DnsAssignment_3_16_1_0_1 ) ) ;
    public final void rule__Service__Group_3_16_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3795:1: ( ( ( rule__Service__DnsAssignment_3_16_1_0_1 ) ) )
            // InternalDockerCompose.g:3796:1: ( ( rule__Service__DnsAssignment_3_16_1_0_1 ) )
            {
            // InternalDockerCompose.g:3796:1: ( ( rule__Service__DnsAssignment_3_16_1_0_1 ) )
            // InternalDockerCompose.g:3797:2: ( rule__Service__DnsAssignment_3_16_1_0_1 )
            {
             before(grammarAccess.getServiceAccess().getDnsAssignment_3_16_1_0_1()); 
            // InternalDockerCompose.g:3798:2: ( rule__Service__DnsAssignment_3_16_1_0_1 )
            // InternalDockerCompose.g:3798:3: rule__Service__DnsAssignment_3_16_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__DnsAssignment_3_16_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getDnsAssignment_3_16_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_16_1_0__1__Impl"


    // $ANTLR start "rule__Service__Group_3_17__0"
    // InternalDockerCompose.g:3807:1: rule__Service__Group_3_17__0 : rule__Service__Group_3_17__0__Impl rule__Service__Group_3_17__1 ;
    public final void rule__Service__Group_3_17__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3811:1: ( rule__Service__Group_3_17__0__Impl rule__Service__Group_3_17__1 )
            // InternalDockerCompose.g:3812:2: rule__Service__Group_3_17__0__Impl rule__Service__Group_3_17__1
            {
            pushFollow(FOLLOW_17);
            rule__Service__Group_3_17__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_17__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_17__0"


    // $ANTLR start "rule__Service__Group_3_17__0__Impl"
    // InternalDockerCompose.g:3819:1: rule__Service__Group_3_17__0__Impl : ( 'ports:' ) ;
    public final void rule__Service__Group_3_17__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3823:1: ( ( 'ports:' ) )
            // InternalDockerCompose.g:3824:1: ( 'ports:' )
            {
            // InternalDockerCompose.g:3824:1: ( 'ports:' )
            // InternalDockerCompose.g:3825:2: 'ports:'
            {
             before(grammarAccess.getServiceAccess().getPortsKeyword_3_17_0()); 
            match(input,62,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getPortsKeyword_3_17_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_17__0__Impl"


    // $ANTLR start "rule__Service__Group_3_17__1"
    // InternalDockerCompose.g:3834:1: rule__Service__Group_3_17__1 : rule__Service__Group_3_17__1__Impl ;
    public final void rule__Service__Group_3_17__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3838:1: ( rule__Service__Group_3_17__1__Impl )
            // InternalDockerCompose.g:3839:2: rule__Service__Group_3_17__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_17__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_17__1"


    // $ANTLR start "rule__Service__Group_3_17__1__Impl"
    // InternalDockerCompose.g:3845:1: rule__Service__Group_3_17__1__Impl : ( ( ( rule__Service__Group_3_17_1__0 ) ) ( ( rule__Service__Group_3_17_1__0 )* ) ) ;
    public final void rule__Service__Group_3_17__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3849:1: ( ( ( ( rule__Service__Group_3_17_1__0 ) ) ( ( rule__Service__Group_3_17_1__0 )* ) ) )
            // InternalDockerCompose.g:3850:1: ( ( ( rule__Service__Group_3_17_1__0 ) ) ( ( rule__Service__Group_3_17_1__0 )* ) )
            {
            // InternalDockerCompose.g:3850:1: ( ( ( rule__Service__Group_3_17_1__0 ) ) ( ( rule__Service__Group_3_17_1__0 )* ) )
            // InternalDockerCompose.g:3851:2: ( ( rule__Service__Group_3_17_1__0 ) ) ( ( rule__Service__Group_3_17_1__0 )* )
            {
            // InternalDockerCompose.g:3851:2: ( ( rule__Service__Group_3_17_1__0 ) )
            // InternalDockerCompose.g:3852:3: ( rule__Service__Group_3_17_1__0 )
            {
             before(grammarAccess.getServiceAccess().getGroup_3_17_1()); 
            // InternalDockerCompose.g:3853:3: ( rule__Service__Group_3_17_1__0 )
            // InternalDockerCompose.g:3853:4: rule__Service__Group_3_17_1__0
            {
            pushFollow(FOLLOW_5);
            rule__Service__Group_3_17_1__0();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getGroup_3_17_1()); 

            }

            // InternalDockerCompose.g:3856:2: ( ( rule__Service__Group_3_17_1__0 )* )
            // InternalDockerCompose.g:3857:3: ( rule__Service__Group_3_17_1__0 )*
            {
             before(grammarAccess.getServiceAccess().getGroup_3_17_1()); 
            // InternalDockerCompose.g:3858:3: ( rule__Service__Group_3_17_1__0 )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( (LA49_0==19) ) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // InternalDockerCompose.g:3858:4: rule__Service__Group_3_17_1__0
            	    {
            	    pushFollow(FOLLOW_5);
            	    rule__Service__Group_3_17_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);

             after(grammarAccess.getServiceAccess().getGroup_3_17_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_17__1__Impl"


    // $ANTLR start "rule__Service__Group_3_17_1__0"
    // InternalDockerCompose.g:3868:1: rule__Service__Group_3_17_1__0 : rule__Service__Group_3_17_1__0__Impl rule__Service__Group_3_17_1__1 ;
    public final void rule__Service__Group_3_17_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3872:1: ( rule__Service__Group_3_17_1__0__Impl rule__Service__Group_3_17_1__1 )
            // InternalDockerCompose.g:3873:2: rule__Service__Group_3_17_1__0__Impl rule__Service__Group_3_17_1__1
            {
            pushFollow(FOLLOW_24);
            rule__Service__Group_3_17_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_17_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_17_1__0"


    // $ANTLR start "rule__Service__Group_3_17_1__0__Impl"
    // InternalDockerCompose.g:3880:1: rule__Service__Group_3_17_1__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_17_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3884:1: ( ( '-' ) )
            // InternalDockerCompose.g:3885:1: ( '-' )
            {
            // InternalDockerCompose.g:3885:1: ( '-' )
            // InternalDockerCompose.g:3886:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_17_1_0()); 
            match(input,19,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_17_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_17_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_17_1__1"
    // InternalDockerCompose.g:3895:1: rule__Service__Group_3_17_1__1 : rule__Service__Group_3_17_1__1__Impl ;
    public final void rule__Service__Group_3_17_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3899:1: ( rule__Service__Group_3_17_1__1__Impl )
            // InternalDockerCompose.g:3900:2: rule__Service__Group_3_17_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_17_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_17_1__1"


    // $ANTLR start "rule__Service__Group_3_17_1__1__Impl"
    // InternalDockerCompose.g:3906:1: rule__Service__Group_3_17_1__1__Impl : ( ( rule__Service__PortsAssignment_3_17_1_1 ) ) ;
    public final void rule__Service__Group_3_17_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3910:1: ( ( ( rule__Service__PortsAssignment_3_17_1_1 ) ) )
            // InternalDockerCompose.g:3911:1: ( ( rule__Service__PortsAssignment_3_17_1_1 ) )
            {
            // InternalDockerCompose.g:3911:1: ( ( rule__Service__PortsAssignment_3_17_1_1 ) )
            // InternalDockerCompose.g:3912:2: ( rule__Service__PortsAssignment_3_17_1_1 )
            {
             before(grammarAccess.getServiceAccess().getPortsAssignment_3_17_1_1()); 
            // InternalDockerCompose.g:3913:2: ( rule__Service__PortsAssignment_3_17_1_1 )
            // InternalDockerCompose.g:3913:3: rule__Service__PortsAssignment_3_17_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__PortsAssignment_3_17_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getPortsAssignment_3_17_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_17_1__1__Impl"


    // $ANTLR start "rule__EnvironmentVariableMap__Group__0"
    // InternalDockerCompose.g:3922:1: rule__EnvironmentVariableMap__Group__0 : rule__EnvironmentVariableMap__Group__0__Impl rule__EnvironmentVariableMap__Group__1 ;
    public final void rule__EnvironmentVariableMap__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3926:1: ( rule__EnvironmentVariableMap__Group__0__Impl rule__EnvironmentVariableMap__Group__1 )
            // InternalDockerCompose.g:3927:2: rule__EnvironmentVariableMap__Group__0__Impl rule__EnvironmentVariableMap__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__EnvironmentVariableMap__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__EnvironmentVariableMap__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableMap__Group__0"


    // $ANTLR start "rule__EnvironmentVariableMap__Group__0__Impl"
    // InternalDockerCompose.g:3934:1: rule__EnvironmentVariableMap__Group__0__Impl : ( () ) ;
    public final void rule__EnvironmentVariableMap__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3938:1: ( ( () ) )
            // InternalDockerCompose.g:3939:1: ( () )
            {
            // InternalDockerCompose.g:3939:1: ( () )
            // InternalDockerCompose.g:3940:2: ()
            {
             before(grammarAccess.getEnvironmentVariableMapAccess().getEnvironmentVariableAction_0()); 
            // InternalDockerCompose.g:3941:2: ()
            // InternalDockerCompose.g:3941:3: 
            {
            }

             after(grammarAccess.getEnvironmentVariableMapAccess().getEnvironmentVariableAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableMap__Group__0__Impl"


    // $ANTLR start "rule__EnvironmentVariableMap__Group__1"
    // InternalDockerCompose.g:3949:1: rule__EnvironmentVariableMap__Group__1 : rule__EnvironmentVariableMap__Group__1__Impl rule__EnvironmentVariableMap__Group__2 ;
    public final void rule__EnvironmentVariableMap__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3953:1: ( rule__EnvironmentVariableMap__Group__1__Impl rule__EnvironmentVariableMap__Group__2 )
            // InternalDockerCompose.g:3954:2: rule__EnvironmentVariableMap__Group__1__Impl rule__EnvironmentVariableMap__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__EnvironmentVariableMap__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__EnvironmentVariableMap__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableMap__Group__1"


    // $ANTLR start "rule__EnvironmentVariableMap__Group__1__Impl"
    // InternalDockerCompose.g:3961:1: rule__EnvironmentVariableMap__Group__1__Impl : ( ( rule__EnvironmentVariableMap__NameAssignment_1 ) ) ;
    public final void rule__EnvironmentVariableMap__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3965:1: ( ( ( rule__EnvironmentVariableMap__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:3966:1: ( ( rule__EnvironmentVariableMap__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:3966:1: ( ( rule__EnvironmentVariableMap__NameAssignment_1 ) )
            // InternalDockerCompose.g:3967:2: ( rule__EnvironmentVariableMap__NameAssignment_1 )
            {
             before(grammarAccess.getEnvironmentVariableMapAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:3968:2: ( rule__EnvironmentVariableMap__NameAssignment_1 )
            // InternalDockerCompose.g:3968:3: rule__EnvironmentVariableMap__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__EnvironmentVariableMap__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getEnvironmentVariableMapAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableMap__Group__1__Impl"


    // $ANTLR start "rule__EnvironmentVariableMap__Group__2"
    // InternalDockerCompose.g:3976:1: rule__EnvironmentVariableMap__Group__2 : rule__EnvironmentVariableMap__Group__2__Impl rule__EnvironmentVariableMap__Group__3 ;
    public final void rule__EnvironmentVariableMap__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3980:1: ( rule__EnvironmentVariableMap__Group__2__Impl rule__EnvironmentVariableMap__Group__3 )
            // InternalDockerCompose.g:3981:2: rule__EnvironmentVariableMap__Group__2__Impl rule__EnvironmentVariableMap__Group__3
            {
            pushFollow(FOLLOW_25);
            rule__EnvironmentVariableMap__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__EnvironmentVariableMap__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableMap__Group__2"


    // $ANTLR start "rule__EnvironmentVariableMap__Group__2__Impl"
    // InternalDockerCompose.g:3988:1: rule__EnvironmentVariableMap__Group__2__Impl : ( ':' ) ;
    public final void rule__EnvironmentVariableMap__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3992:1: ( ( ':' ) )
            // InternalDockerCompose.g:3993:1: ( ':' )
            {
            // InternalDockerCompose.g:3993:1: ( ':' )
            // InternalDockerCompose.g:3994:2: ':'
            {
             before(grammarAccess.getEnvironmentVariableMapAccess().getColonKeyword_2()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getEnvironmentVariableMapAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableMap__Group__2__Impl"


    // $ANTLR start "rule__EnvironmentVariableMap__Group__3"
    // InternalDockerCompose.g:4003:1: rule__EnvironmentVariableMap__Group__3 : rule__EnvironmentVariableMap__Group__3__Impl ;
    public final void rule__EnvironmentVariableMap__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4007:1: ( rule__EnvironmentVariableMap__Group__3__Impl )
            // InternalDockerCompose.g:4008:2: rule__EnvironmentVariableMap__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__EnvironmentVariableMap__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableMap__Group__3"


    // $ANTLR start "rule__EnvironmentVariableMap__Group__3__Impl"
    // InternalDockerCompose.g:4014:1: rule__EnvironmentVariableMap__Group__3__Impl : ( ( rule__EnvironmentVariableMap__Alternatives_3 )? ) ;
    public final void rule__EnvironmentVariableMap__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4018:1: ( ( ( rule__EnvironmentVariableMap__Alternatives_3 )? ) )
            // InternalDockerCompose.g:4019:1: ( ( rule__EnvironmentVariableMap__Alternatives_3 )? )
            {
            // InternalDockerCompose.g:4019:1: ( ( rule__EnvironmentVariableMap__Alternatives_3 )? )
            // InternalDockerCompose.g:4020:2: ( rule__EnvironmentVariableMap__Alternatives_3 )?
            {
             before(grammarAccess.getEnvironmentVariableMapAccess().getAlternatives_3()); 
            // InternalDockerCompose.g:4021:2: ( rule__EnvironmentVariableMap__Alternatives_3 )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( ((LA50_0>=RULE_VERSION_INT && LA50_0<=RULE_STRING)||LA50_0==RULE_DEVICE_DEF||(LA50_0>=17 && LA50_0<=18)||LA50_0==64||LA50_0==101) ) {
                alt50=1;
            }
            else if ( (LA50_0==RULE_ID) ) {
                int LA50_2 = input.LA(2);

                if ( (LA50_2==EOF||LA50_2==RULE_ID||LA50_2==17||(LA50_2>=42 && LA50_2<=47)||(LA50_2>=49 && LA50_2<=62)||LA50_2==64) ) {
                    alt50=1;
                }
            }
            switch (alt50) {
                case 1 :
                    // InternalDockerCompose.g:4021:3: rule__EnvironmentVariableMap__Alternatives_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__EnvironmentVariableMap__Alternatives_3();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getEnvironmentVariableMapAccess().getAlternatives_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableMap__Group__3__Impl"


    // $ANTLR start "rule__EnvironmentVariableList__Group__0"
    // InternalDockerCompose.g:4030:1: rule__EnvironmentVariableList__Group__0 : rule__EnvironmentVariableList__Group__0__Impl rule__EnvironmentVariableList__Group__1 ;
    public final void rule__EnvironmentVariableList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4034:1: ( rule__EnvironmentVariableList__Group__0__Impl rule__EnvironmentVariableList__Group__1 )
            // InternalDockerCompose.g:4035:2: rule__EnvironmentVariableList__Group__0__Impl rule__EnvironmentVariableList__Group__1
            {
            pushFollow(FOLLOW_17);
            rule__EnvironmentVariableList__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__EnvironmentVariableList__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableList__Group__0"


    // $ANTLR start "rule__EnvironmentVariableList__Group__0__Impl"
    // InternalDockerCompose.g:4042:1: rule__EnvironmentVariableList__Group__0__Impl : ( () ) ;
    public final void rule__EnvironmentVariableList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4046:1: ( ( () ) )
            // InternalDockerCompose.g:4047:1: ( () )
            {
            // InternalDockerCompose.g:4047:1: ( () )
            // InternalDockerCompose.g:4048:2: ()
            {
             before(grammarAccess.getEnvironmentVariableListAccess().getEnvironmentVariableAction_0()); 
            // InternalDockerCompose.g:4049:2: ()
            // InternalDockerCompose.g:4049:3: 
            {
            }

             after(grammarAccess.getEnvironmentVariableListAccess().getEnvironmentVariableAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableList__Group__0__Impl"


    // $ANTLR start "rule__EnvironmentVariableList__Group__1"
    // InternalDockerCompose.g:4057:1: rule__EnvironmentVariableList__Group__1 : rule__EnvironmentVariableList__Group__1__Impl rule__EnvironmentVariableList__Group__2 ;
    public final void rule__EnvironmentVariableList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4061:1: ( rule__EnvironmentVariableList__Group__1__Impl rule__EnvironmentVariableList__Group__2 )
            // InternalDockerCompose.g:4062:2: rule__EnvironmentVariableList__Group__1__Impl rule__EnvironmentVariableList__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__EnvironmentVariableList__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__EnvironmentVariableList__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableList__Group__1"


    // $ANTLR start "rule__EnvironmentVariableList__Group__1__Impl"
    // InternalDockerCompose.g:4069:1: rule__EnvironmentVariableList__Group__1__Impl : ( '-' ) ;
    public final void rule__EnvironmentVariableList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4073:1: ( ( '-' ) )
            // InternalDockerCompose.g:4074:1: ( '-' )
            {
            // InternalDockerCompose.g:4074:1: ( '-' )
            // InternalDockerCompose.g:4075:2: '-'
            {
             before(grammarAccess.getEnvironmentVariableListAccess().getHyphenMinusKeyword_1()); 
            match(input,19,FOLLOW_2); 
             after(grammarAccess.getEnvironmentVariableListAccess().getHyphenMinusKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableList__Group__1__Impl"


    // $ANTLR start "rule__EnvironmentVariableList__Group__2"
    // InternalDockerCompose.g:4084:1: rule__EnvironmentVariableList__Group__2 : rule__EnvironmentVariableList__Group__2__Impl rule__EnvironmentVariableList__Group__3 ;
    public final void rule__EnvironmentVariableList__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4088:1: ( rule__EnvironmentVariableList__Group__2__Impl rule__EnvironmentVariableList__Group__3 )
            // InternalDockerCompose.g:4089:2: rule__EnvironmentVariableList__Group__2__Impl rule__EnvironmentVariableList__Group__3
            {
            pushFollow(FOLLOW_26);
            rule__EnvironmentVariableList__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__EnvironmentVariableList__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableList__Group__2"


    // $ANTLR start "rule__EnvironmentVariableList__Group__2__Impl"
    // InternalDockerCompose.g:4096:1: rule__EnvironmentVariableList__Group__2__Impl : ( ( rule__EnvironmentVariableList__NameAssignment_2 ) ) ;
    public final void rule__EnvironmentVariableList__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4100:1: ( ( ( rule__EnvironmentVariableList__NameAssignment_2 ) ) )
            // InternalDockerCompose.g:4101:1: ( ( rule__EnvironmentVariableList__NameAssignment_2 ) )
            {
            // InternalDockerCompose.g:4101:1: ( ( rule__EnvironmentVariableList__NameAssignment_2 ) )
            // InternalDockerCompose.g:4102:2: ( rule__EnvironmentVariableList__NameAssignment_2 )
            {
             before(grammarAccess.getEnvironmentVariableListAccess().getNameAssignment_2()); 
            // InternalDockerCompose.g:4103:2: ( rule__EnvironmentVariableList__NameAssignment_2 )
            // InternalDockerCompose.g:4103:3: rule__EnvironmentVariableList__NameAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__EnvironmentVariableList__NameAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getEnvironmentVariableListAccess().getNameAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableList__Group__2__Impl"


    // $ANTLR start "rule__EnvironmentVariableList__Group__3"
    // InternalDockerCompose.g:4111:1: rule__EnvironmentVariableList__Group__3 : rule__EnvironmentVariableList__Group__3__Impl ;
    public final void rule__EnvironmentVariableList__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4115:1: ( rule__EnvironmentVariableList__Group__3__Impl )
            // InternalDockerCompose.g:4116:2: rule__EnvironmentVariableList__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__EnvironmentVariableList__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableList__Group__3"


    // $ANTLR start "rule__EnvironmentVariableList__Group__3__Impl"
    // InternalDockerCompose.g:4122:1: rule__EnvironmentVariableList__Group__3__Impl : ( ( rule__EnvironmentVariableList__Group_3__0 )? ) ;
    public final void rule__EnvironmentVariableList__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4126:1: ( ( ( rule__EnvironmentVariableList__Group_3__0 )? ) )
            // InternalDockerCompose.g:4127:1: ( ( rule__EnvironmentVariableList__Group_3__0 )? )
            {
            // InternalDockerCompose.g:4127:1: ( ( rule__EnvironmentVariableList__Group_3__0 )? )
            // InternalDockerCompose.g:4128:2: ( rule__EnvironmentVariableList__Group_3__0 )?
            {
             before(grammarAccess.getEnvironmentVariableListAccess().getGroup_3()); 
            // InternalDockerCompose.g:4129:2: ( rule__EnvironmentVariableList__Group_3__0 )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==63) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalDockerCompose.g:4129:3: rule__EnvironmentVariableList__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__EnvironmentVariableList__Group_3__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getEnvironmentVariableListAccess().getGroup_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableList__Group__3__Impl"


    // $ANTLR start "rule__EnvironmentVariableList__Group_3__0"
    // InternalDockerCompose.g:4138:1: rule__EnvironmentVariableList__Group_3__0 : rule__EnvironmentVariableList__Group_3__0__Impl rule__EnvironmentVariableList__Group_3__1 ;
    public final void rule__EnvironmentVariableList__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4142:1: ( rule__EnvironmentVariableList__Group_3__0__Impl rule__EnvironmentVariableList__Group_3__1 )
            // InternalDockerCompose.g:4143:2: rule__EnvironmentVariableList__Group_3__0__Impl rule__EnvironmentVariableList__Group_3__1
            {
            pushFollow(FOLLOW_25);
            rule__EnvironmentVariableList__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__EnvironmentVariableList__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableList__Group_3__0"


    // $ANTLR start "rule__EnvironmentVariableList__Group_3__0__Impl"
    // InternalDockerCompose.g:4150:1: rule__EnvironmentVariableList__Group_3__0__Impl : ( '=' ) ;
    public final void rule__EnvironmentVariableList__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4154:1: ( ( '=' ) )
            // InternalDockerCompose.g:4155:1: ( '=' )
            {
            // InternalDockerCompose.g:4155:1: ( '=' )
            // InternalDockerCompose.g:4156:2: '='
            {
             before(grammarAccess.getEnvironmentVariableListAccess().getEqualsSignKeyword_3_0()); 
            match(input,63,FOLLOW_2); 
             after(grammarAccess.getEnvironmentVariableListAccess().getEqualsSignKeyword_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableList__Group_3__0__Impl"


    // $ANTLR start "rule__EnvironmentVariableList__Group_3__1"
    // InternalDockerCompose.g:4165:1: rule__EnvironmentVariableList__Group_3__1 : rule__EnvironmentVariableList__Group_3__1__Impl ;
    public final void rule__EnvironmentVariableList__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4169:1: ( rule__EnvironmentVariableList__Group_3__1__Impl )
            // InternalDockerCompose.g:4170:2: rule__EnvironmentVariableList__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__EnvironmentVariableList__Group_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableList__Group_3__1"


    // $ANTLR start "rule__EnvironmentVariableList__Group_3__1__Impl"
    // InternalDockerCompose.g:4176:1: rule__EnvironmentVariableList__Group_3__1__Impl : ( ( rule__EnvironmentVariableList__Alternatives_3_1 ) ) ;
    public final void rule__EnvironmentVariableList__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4180:1: ( ( ( rule__EnvironmentVariableList__Alternatives_3_1 ) ) )
            // InternalDockerCompose.g:4181:1: ( ( rule__EnvironmentVariableList__Alternatives_3_1 ) )
            {
            // InternalDockerCompose.g:4181:1: ( ( rule__EnvironmentVariableList__Alternatives_3_1 ) )
            // InternalDockerCompose.g:4182:2: ( rule__EnvironmentVariableList__Alternatives_3_1 )
            {
             before(grammarAccess.getEnvironmentVariableListAccess().getAlternatives_3_1()); 
            // InternalDockerCompose.g:4183:2: ( rule__EnvironmentVariableList__Alternatives_3_1 )
            // InternalDockerCompose.g:4183:3: rule__EnvironmentVariableList__Alternatives_3_1
            {
            pushFollow(FOLLOW_2);
            rule__EnvironmentVariableList__Alternatives_3_1();

            state._fsp--;


            }

             after(grammarAccess.getEnvironmentVariableListAccess().getAlternatives_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableList__Group_3__1__Impl"


    // $ANTLR start "rule__Port__Group__0"
    // InternalDockerCompose.g:4192:1: rule__Port__Group__0 : rule__Port__Group__0__Impl rule__Port__Group__1 ;
    public final void rule__Port__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4196:1: ( rule__Port__Group__0__Impl rule__Port__Group__1 )
            // InternalDockerCompose.g:4197:2: rule__Port__Group__0__Impl rule__Port__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__Port__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Port__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__Group__0"


    // $ANTLR start "rule__Port__Group__0__Impl"
    // InternalDockerCompose.g:4204:1: rule__Port__Group__0__Impl : ( () ) ;
    public final void rule__Port__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4208:1: ( ( () ) )
            // InternalDockerCompose.g:4209:1: ( () )
            {
            // InternalDockerCompose.g:4209:1: ( () )
            // InternalDockerCompose.g:4210:2: ()
            {
             before(grammarAccess.getPortAccess().getPortAction_0()); 
            // InternalDockerCompose.g:4211:2: ()
            // InternalDockerCompose.g:4211:3: 
            {
            }

             after(grammarAccess.getPortAccess().getPortAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__Group__0__Impl"


    // $ANTLR start "rule__Port__Group__1"
    // InternalDockerCompose.g:4219:1: rule__Port__Group__1 : rule__Port__Group__1__Impl ;
    public final void rule__Port__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4223:1: ( rule__Port__Group__1__Impl )
            // InternalDockerCompose.g:4224:2: rule__Port__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Port__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__Group__1"


    // $ANTLR start "rule__Port__Group__1__Impl"
    // InternalDockerCompose.g:4230:1: rule__Port__Group__1__Impl : ( ( rule__Port__ValueAssignment_1 ) ) ;
    public final void rule__Port__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4234:1: ( ( ( rule__Port__ValueAssignment_1 ) ) )
            // InternalDockerCompose.g:4235:1: ( ( rule__Port__ValueAssignment_1 ) )
            {
            // InternalDockerCompose.g:4235:1: ( ( rule__Port__ValueAssignment_1 ) )
            // InternalDockerCompose.g:4236:2: ( rule__Port__ValueAssignment_1 )
            {
             before(grammarAccess.getPortAccess().getValueAssignment_1()); 
            // InternalDockerCompose.g:4237:2: ( rule__Port__ValueAssignment_1 )
            // InternalDockerCompose.g:4237:3: rule__Port__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Port__ValueAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getPortAccess().getValueAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__Group__1__Impl"


    // $ANTLR start "rule__Device__Group__0"
    // InternalDockerCompose.g:4246:1: rule__Device__Group__0 : rule__Device__Group__0__Impl rule__Device__Group__1 ;
    public final void rule__Device__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4250:1: ( rule__Device__Group__0__Impl rule__Device__Group__1 )
            // InternalDockerCompose.g:4251:2: rule__Device__Group__0__Impl rule__Device__Group__1
            {
            pushFollow(FOLLOW_22);
            rule__Device__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Device__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Device__Group__0"


    // $ANTLR start "rule__Device__Group__0__Impl"
    // InternalDockerCompose.g:4258:1: rule__Device__Group__0__Impl : ( () ) ;
    public final void rule__Device__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4262:1: ( ( () ) )
            // InternalDockerCompose.g:4263:1: ( () )
            {
            // InternalDockerCompose.g:4263:1: ( () )
            // InternalDockerCompose.g:4264:2: ()
            {
             before(grammarAccess.getDeviceAccess().getDeviceAction_0()); 
            // InternalDockerCompose.g:4265:2: ()
            // InternalDockerCompose.g:4265:3: 
            {
            }

             after(grammarAccess.getDeviceAccess().getDeviceAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Device__Group__0__Impl"


    // $ANTLR start "rule__Device__Group__1"
    // InternalDockerCompose.g:4273:1: rule__Device__Group__1 : rule__Device__Group__1__Impl ;
    public final void rule__Device__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4277:1: ( rule__Device__Group__1__Impl )
            // InternalDockerCompose.g:4278:2: rule__Device__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Device__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Device__Group__1"


    // $ANTLR start "rule__Device__Group__1__Impl"
    // InternalDockerCompose.g:4284:1: rule__Device__Group__1__Impl : ( ( rule__Device__ValueAssignment_1 ) ) ;
    public final void rule__Device__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4288:1: ( ( ( rule__Device__ValueAssignment_1 ) ) )
            // InternalDockerCompose.g:4289:1: ( ( rule__Device__ValueAssignment_1 ) )
            {
            // InternalDockerCompose.g:4289:1: ( ( rule__Device__ValueAssignment_1 ) )
            // InternalDockerCompose.g:4290:2: ( rule__Device__ValueAssignment_1 )
            {
             before(grammarAccess.getDeviceAccess().getValueAssignment_1()); 
            // InternalDockerCompose.g:4291:2: ( rule__Device__ValueAssignment_1 )
            // InternalDockerCompose.g:4291:3: rule__Device__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Device__ValueAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getDeviceAccess().getValueAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Device__Group__1__Impl"


    // $ANTLR start "rule__Image__Group__0"
    // InternalDockerCompose.g:4300:1: rule__Image__Group__0 : rule__Image__Group__0__Impl rule__Image__Group__1 ;
    public final void rule__Image__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4304:1: ( rule__Image__Group__0__Impl rule__Image__Group__1 )
            // InternalDockerCompose.g:4305:2: rule__Image__Group__0__Impl rule__Image__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__Image__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group__0"


    // $ANTLR start "rule__Image__Group__0__Impl"
    // InternalDockerCompose.g:4312:1: rule__Image__Group__0__Impl : ( ( rule__Image__Group_0__0 )? ) ;
    public final void rule__Image__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4316:1: ( ( ( rule__Image__Group_0__0 )? ) )
            // InternalDockerCompose.g:4317:1: ( ( rule__Image__Group_0__0 )? )
            {
            // InternalDockerCompose.g:4317:1: ( ( rule__Image__Group_0__0 )? )
            // InternalDockerCompose.g:4318:2: ( rule__Image__Group_0__0 )?
            {
             before(grammarAccess.getImageAccess().getGroup_0()); 
            // InternalDockerCompose.g:4319:2: ( rule__Image__Group_0__0 )?
            int alt52=2;
            alt52 = dfa52.predict(input);
            switch (alt52) {
                case 1 :
                    // InternalDockerCompose.g:4319:3: rule__Image__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Image__Group_0__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getImageAccess().getGroup_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group__0__Impl"


    // $ANTLR start "rule__Image__Group__1"
    // InternalDockerCompose.g:4327:1: rule__Image__Group__1 : rule__Image__Group__1__Impl rule__Image__Group__2 ;
    public final void rule__Image__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4331:1: ( rule__Image__Group__1__Impl rule__Image__Group__2 )
            // InternalDockerCompose.g:4332:2: rule__Image__Group__1__Impl rule__Image__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__Image__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group__1"


    // $ANTLR start "rule__Image__Group__1__Impl"
    // InternalDockerCompose.g:4339:1: rule__Image__Group__1__Impl : ( ( rule__Image__Group_1__0 )? ) ;
    public final void rule__Image__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4343:1: ( ( ( rule__Image__Group_1__0 )? ) )
            // InternalDockerCompose.g:4344:1: ( ( rule__Image__Group_1__0 )? )
            {
            // InternalDockerCompose.g:4344:1: ( ( rule__Image__Group_1__0 )? )
            // InternalDockerCompose.g:4345:2: ( rule__Image__Group_1__0 )?
            {
             before(grammarAccess.getImageAccess().getGroup_1()); 
            // InternalDockerCompose.g:4346:2: ( rule__Image__Group_1__0 )?
            int alt53=2;
            alt53 = dfa53.predict(input);
            switch (alt53) {
                case 1 :
                    // InternalDockerCompose.g:4346:3: rule__Image__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Image__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getImageAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group__1__Impl"


    // $ANTLR start "rule__Image__Group__2"
    // InternalDockerCompose.g:4354:1: rule__Image__Group__2 : rule__Image__Group__2__Impl rule__Image__Group__3 ;
    public final void rule__Image__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4358:1: ( rule__Image__Group__2__Impl rule__Image__Group__3 )
            // InternalDockerCompose.g:4359:2: rule__Image__Group__2__Impl rule__Image__Group__3
            {
            pushFollow(FOLLOW_27);
            rule__Image__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group__2"


    // $ANTLR start "rule__Image__Group__2__Impl"
    // InternalDockerCompose.g:4366:1: rule__Image__Group__2__Impl : ( RULE_ID ) ;
    public final void rule__Image__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4370:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:4371:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:4371:1: ( RULE_ID )
            // InternalDockerCompose.g:4372:2: RULE_ID
            {
             before(grammarAccess.getImageAccess().getIDTerminalRuleCall_2()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getImageAccess().getIDTerminalRuleCall_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group__2__Impl"


    // $ANTLR start "rule__Image__Group__3"
    // InternalDockerCompose.g:4381:1: rule__Image__Group__3 : rule__Image__Group__3__Impl ;
    public final void rule__Image__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4385:1: ( rule__Image__Group__3__Impl )
            // InternalDockerCompose.g:4386:2: rule__Image__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Image__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group__3"


    // $ANTLR start "rule__Image__Group__3__Impl"
    // InternalDockerCompose.g:4392:1: rule__Image__Group__3__Impl : ( ( rule__Image__Alternatives_3 )? ) ;
    public final void rule__Image__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4396:1: ( ( ( rule__Image__Alternatives_3 )? ) )
            // InternalDockerCompose.g:4397:1: ( ( rule__Image__Alternatives_3 )? )
            {
            // InternalDockerCompose.g:4397:1: ( ( rule__Image__Alternatives_3 )? )
            // InternalDockerCompose.g:4398:2: ( rule__Image__Alternatives_3 )?
            {
             before(grammarAccess.getImageAccess().getAlternatives_3()); 
            // InternalDockerCompose.g:4399:2: ( rule__Image__Alternatives_3 )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==48||LA54_0==65) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalDockerCompose.g:4399:3: rule__Image__Alternatives_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Image__Alternatives_3();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getImageAccess().getAlternatives_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group__3__Impl"


    // $ANTLR start "rule__Image__Group_0__0"
    // InternalDockerCompose.g:4408:1: rule__Image__Group_0__0 : rule__Image__Group_0__0__Impl rule__Image__Group_0__1 ;
    public final void rule__Image__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4412:1: ( rule__Image__Group_0__0__Impl rule__Image__Group_0__1 )
            // InternalDockerCompose.g:4413:2: rule__Image__Group_0__0__Impl rule__Image__Group_0__1
            {
            pushFollow(FOLLOW_28);
            rule__Image__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_0__0"


    // $ANTLR start "rule__Image__Group_0__0__Impl"
    // InternalDockerCompose.g:4420:1: rule__Image__Group_0__0__Impl : ( ruledotID ) ;
    public final void rule__Image__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4424:1: ( ( ruledotID ) )
            // InternalDockerCompose.g:4425:1: ( ruledotID )
            {
            // InternalDockerCompose.g:4425:1: ( ruledotID )
            // InternalDockerCompose.g:4426:2: ruledotID
            {
             before(grammarAccess.getImageAccess().getDotIDParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruledotID();

            state._fsp--;

             after(grammarAccess.getImageAccess().getDotIDParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_0__0__Impl"


    // $ANTLR start "rule__Image__Group_0__1"
    // InternalDockerCompose.g:4435:1: rule__Image__Group_0__1 : rule__Image__Group_0__1__Impl rule__Image__Group_0__2 ;
    public final void rule__Image__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4439:1: ( rule__Image__Group_0__1__Impl rule__Image__Group_0__2 )
            // InternalDockerCompose.g:4440:2: rule__Image__Group_0__1__Impl rule__Image__Group_0__2
            {
            pushFollow(FOLLOW_28);
            rule__Image__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_0__1"


    // $ANTLR start "rule__Image__Group_0__1__Impl"
    // InternalDockerCompose.g:4447:1: rule__Image__Group_0__1__Impl : ( ( rule__Image__Group_0_1__0 )* ) ;
    public final void rule__Image__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4451:1: ( ( ( rule__Image__Group_0_1__0 )* ) )
            // InternalDockerCompose.g:4452:1: ( ( rule__Image__Group_0_1__0 )* )
            {
            // InternalDockerCompose.g:4452:1: ( ( rule__Image__Group_0_1__0 )* )
            // InternalDockerCompose.g:4453:2: ( rule__Image__Group_0_1__0 )*
            {
             before(grammarAccess.getImageAccess().getGroup_0_1()); 
            // InternalDockerCompose.g:4454:2: ( rule__Image__Group_0_1__0 )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==48) ) {
                    alt55=1;
                }


                switch (alt55) {
            	case 1 :
            	    // InternalDockerCompose.g:4454:3: rule__Image__Group_0_1__0
            	    {
            	    pushFollow(FOLLOW_29);
            	    rule__Image__Group_0_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);

             after(grammarAccess.getImageAccess().getGroup_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_0__1__Impl"


    // $ANTLR start "rule__Image__Group_0__2"
    // InternalDockerCompose.g:4462:1: rule__Image__Group_0__2 : rule__Image__Group_0__2__Impl ;
    public final void rule__Image__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4466:1: ( rule__Image__Group_0__2__Impl )
            // InternalDockerCompose.g:4467:2: rule__Image__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Image__Group_0__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_0__2"


    // $ANTLR start "rule__Image__Group_0__2__Impl"
    // InternalDockerCompose.g:4473:1: rule__Image__Group_0__2__Impl : ( '/' ) ;
    public final void rule__Image__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4477:1: ( ( '/' ) )
            // InternalDockerCompose.g:4478:1: ( '/' )
            {
            // InternalDockerCompose.g:4478:1: ( '/' )
            // InternalDockerCompose.g:4479:2: '/'
            {
             before(grammarAccess.getImageAccess().getSolidusKeyword_0_2()); 
            match(input,64,FOLLOW_2); 
             after(grammarAccess.getImageAccess().getSolidusKeyword_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_0__2__Impl"


    // $ANTLR start "rule__Image__Group_0_1__0"
    // InternalDockerCompose.g:4489:1: rule__Image__Group_0_1__0 : rule__Image__Group_0_1__0__Impl rule__Image__Group_0_1__1 ;
    public final void rule__Image__Group_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4493:1: ( rule__Image__Group_0_1__0__Impl rule__Image__Group_0_1__1 )
            // InternalDockerCompose.g:4494:2: rule__Image__Group_0_1__0__Impl rule__Image__Group_0_1__1
            {
            pushFollow(FOLLOW_30);
            rule__Image__Group_0_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group_0_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_0_1__0"


    // $ANTLR start "rule__Image__Group_0_1__0__Impl"
    // InternalDockerCompose.g:4501:1: rule__Image__Group_0_1__0__Impl : ( ':' ) ;
    public final void rule__Image__Group_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4505:1: ( ( ':' ) )
            // InternalDockerCompose.g:4506:1: ( ':' )
            {
            // InternalDockerCompose.g:4506:1: ( ':' )
            // InternalDockerCompose.g:4507:2: ':'
            {
             before(grammarAccess.getImageAccess().getColonKeyword_0_1_0()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getImageAccess().getColonKeyword_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_0_1__0__Impl"


    // $ANTLR start "rule__Image__Group_0_1__1"
    // InternalDockerCompose.g:4516:1: rule__Image__Group_0_1__1 : rule__Image__Group_0_1__1__Impl ;
    public final void rule__Image__Group_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4520:1: ( rule__Image__Group_0_1__1__Impl )
            // InternalDockerCompose.g:4521:2: rule__Image__Group_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Image__Group_0_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_0_1__1"


    // $ANTLR start "rule__Image__Group_0_1__1__Impl"
    // InternalDockerCompose.g:4527:1: rule__Image__Group_0_1__1__Impl : ( ( ( rule__Image__Alternatives_0_1_1 ) ) ( ( rule__Image__Alternatives_0_1_1 )* ) ) ;
    public final void rule__Image__Group_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4531:1: ( ( ( ( rule__Image__Alternatives_0_1_1 ) ) ( ( rule__Image__Alternatives_0_1_1 )* ) ) )
            // InternalDockerCompose.g:4532:1: ( ( ( rule__Image__Alternatives_0_1_1 ) ) ( ( rule__Image__Alternatives_0_1_1 )* ) )
            {
            // InternalDockerCompose.g:4532:1: ( ( ( rule__Image__Alternatives_0_1_1 ) ) ( ( rule__Image__Alternatives_0_1_1 )* ) )
            // InternalDockerCompose.g:4533:2: ( ( rule__Image__Alternatives_0_1_1 ) ) ( ( rule__Image__Alternatives_0_1_1 )* )
            {
            // InternalDockerCompose.g:4533:2: ( ( rule__Image__Alternatives_0_1_1 ) )
            // InternalDockerCompose.g:4534:3: ( rule__Image__Alternatives_0_1_1 )
            {
             before(grammarAccess.getImageAccess().getAlternatives_0_1_1()); 
            // InternalDockerCompose.g:4535:3: ( rule__Image__Alternatives_0_1_1 )
            // InternalDockerCompose.g:4535:4: rule__Image__Alternatives_0_1_1
            {
            pushFollow(FOLLOW_31);
            rule__Image__Alternatives_0_1_1();

            state._fsp--;


            }

             after(grammarAccess.getImageAccess().getAlternatives_0_1_1()); 

            }

            // InternalDockerCompose.g:4538:2: ( ( rule__Image__Alternatives_0_1_1 )* )
            // InternalDockerCompose.g:4539:3: ( rule__Image__Alternatives_0_1_1 )*
            {
             before(grammarAccess.getImageAccess().getAlternatives_0_1_1()); 
            // InternalDockerCompose.g:4540:3: ( rule__Image__Alternatives_0_1_1 )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==RULE_INT||LA56_0==RULE_ID) ) {
                    alt56=1;
                }


                switch (alt56) {
            	case 1 :
            	    // InternalDockerCompose.g:4540:4: rule__Image__Alternatives_0_1_1
            	    {
            	    pushFollow(FOLLOW_31);
            	    rule__Image__Alternatives_0_1_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

             after(grammarAccess.getImageAccess().getAlternatives_0_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_0_1__1__Impl"


    // $ANTLR start "rule__Image__Group_1__0"
    // InternalDockerCompose.g:4550:1: rule__Image__Group_1__0 : rule__Image__Group_1__0__Impl rule__Image__Group_1__1 ;
    public final void rule__Image__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4554:1: ( rule__Image__Group_1__0__Impl rule__Image__Group_1__1 )
            // InternalDockerCompose.g:4555:2: rule__Image__Group_1__0__Impl rule__Image__Group_1__1
            {
            pushFollow(FOLLOW_28);
            rule__Image__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1__0"


    // $ANTLR start "rule__Image__Group_1__0__Impl"
    // InternalDockerCompose.g:4562:1: rule__Image__Group_1__0__Impl : ( ruledotID ) ;
    public final void rule__Image__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4566:1: ( ( ruledotID ) )
            // InternalDockerCompose.g:4567:1: ( ruledotID )
            {
            // InternalDockerCompose.g:4567:1: ( ruledotID )
            // InternalDockerCompose.g:4568:2: ruledotID
            {
             before(grammarAccess.getImageAccess().getDotIDParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruledotID();

            state._fsp--;

             after(grammarAccess.getImageAccess().getDotIDParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1__0__Impl"


    // $ANTLR start "rule__Image__Group_1__1"
    // InternalDockerCompose.g:4577:1: rule__Image__Group_1__1 : rule__Image__Group_1__1__Impl rule__Image__Group_1__2 ;
    public final void rule__Image__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4581:1: ( rule__Image__Group_1__1__Impl rule__Image__Group_1__2 )
            // InternalDockerCompose.g:4582:2: rule__Image__Group_1__1__Impl rule__Image__Group_1__2
            {
            pushFollow(FOLLOW_28);
            rule__Image__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1__1"


    // $ANTLR start "rule__Image__Group_1__1__Impl"
    // InternalDockerCompose.g:4589:1: rule__Image__Group_1__1__Impl : ( ( rule__Image__Group_1_1__0 )* ) ;
    public final void rule__Image__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4593:1: ( ( ( rule__Image__Group_1_1__0 )* ) )
            // InternalDockerCompose.g:4594:1: ( ( rule__Image__Group_1_1__0 )* )
            {
            // InternalDockerCompose.g:4594:1: ( ( rule__Image__Group_1_1__0 )* )
            // InternalDockerCompose.g:4595:2: ( rule__Image__Group_1_1__0 )*
            {
             before(grammarAccess.getImageAccess().getGroup_1_1()); 
            // InternalDockerCompose.g:4596:2: ( rule__Image__Group_1_1__0 )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==48) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // InternalDockerCompose.g:4596:3: rule__Image__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_29);
            	    rule__Image__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

             after(grammarAccess.getImageAccess().getGroup_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1__1__Impl"


    // $ANTLR start "rule__Image__Group_1__2"
    // InternalDockerCompose.g:4604:1: rule__Image__Group_1__2 : rule__Image__Group_1__2__Impl ;
    public final void rule__Image__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4608:1: ( rule__Image__Group_1__2__Impl )
            // InternalDockerCompose.g:4609:2: rule__Image__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Image__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1__2"


    // $ANTLR start "rule__Image__Group_1__2__Impl"
    // InternalDockerCompose.g:4615:1: rule__Image__Group_1__2__Impl : ( '/' ) ;
    public final void rule__Image__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4619:1: ( ( '/' ) )
            // InternalDockerCompose.g:4620:1: ( '/' )
            {
            // InternalDockerCompose.g:4620:1: ( '/' )
            // InternalDockerCompose.g:4621:2: '/'
            {
             before(grammarAccess.getImageAccess().getSolidusKeyword_1_2()); 
            match(input,64,FOLLOW_2); 
             after(grammarAccess.getImageAccess().getSolidusKeyword_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1__2__Impl"


    // $ANTLR start "rule__Image__Group_1_1__0"
    // InternalDockerCompose.g:4631:1: rule__Image__Group_1_1__0 : rule__Image__Group_1_1__0__Impl rule__Image__Group_1_1__1 ;
    public final void rule__Image__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4635:1: ( rule__Image__Group_1_1__0__Impl rule__Image__Group_1_1__1 )
            // InternalDockerCompose.g:4636:2: rule__Image__Group_1_1__0__Impl rule__Image__Group_1_1__1
            {
            pushFollow(FOLLOW_30);
            rule__Image__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1_1__0"


    // $ANTLR start "rule__Image__Group_1_1__0__Impl"
    // InternalDockerCompose.g:4643:1: rule__Image__Group_1_1__0__Impl : ( ':' ) ;
    public final void rule__Image__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4647:1: ( ( ':' ) )
            // InternalDockerCompose.g:4648:1: ( ':' )
            {
            // InternalDockerCompose.g:4648:1: ( ':' )
            // InternalDockerCompose.g:4649:2: ':'
            {
             before(grammarAccess.getImageAccess().getColonKeyword_1_1_0()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getImageAccess().getColonKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1_1__0__Impl"


    // $ANTLR start "rule__Image__Group_1_1__1"
    // InternalDockerCompose.g:4658:1: rule__Image__Group_1_1__1 : rule__Image__Group_1_1__1__Impl ;
    public final void rule__Image__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4662:1: ( rule__Image__Group_1_1__1__Impl )
            // InternalDockerCompose.g:4663:2: rule__Image__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Image__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1_1__1"


    // $ANTLR start "rule__Image__Group_1_1__1__Impl"
    // InternalDockerCompose.g:4669:1: rule__Image__Group_1_1__1__Impl : ( ( ( rule__Image__Alternatives_1_1_1 ) ) ( ( rule__Image__Alternatives_1_1_1 )* ) ) ;
    public final void rule__Image__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4673:1: ( ( ( ( rule__Image__Alternatives_1_1_1 ) ) ( ( rule__Image__Alternatives_1_1_1 )* ) ) )
            // InternalDockerCompose.g:4674:1: ( ( ( rule__Image__Alternatives_1_1_1 ) ) ( ( rule__Image__Alternatives_1_1_1 )* ) )
            {
            // InternalDockerCompose.g:4674:1: ( ( ( rule__Image__Alternatives_1_1_1 ) ) ( ( rule__Image__Alternatives_1_1_1 )* ) )
            // InternalDockerCompose.g:4675:2: ( ( rule__Image__Alternatives_1_1_1 ) ) ( ( rule__Image__Alternatives_1_1_1 )* )
            {
            // InternalDockerCompose.g:4675:2: ( ( rule__Image__Alternatives_1_1_1 ) )
            // InternalDockerCompose.g:4676:3: ( rule__Image__Alternatives_1_1_1 )
            {
             before(grammarAccess.getImageAccess().getAlternatives_1_1_1()); 
            // InternalDockerCompose.g:4677:3: ( rule__Image__Alternatives_1_1_1 )
            // InternalDockerCompose.g:4677:4: rule__Image__Alternatives_1_1_1
            {
            pushFollow(FOLLOW_31);
            rule__Image__Alternatives_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getImageAccess().getAlternatives_1_1_1()); 

            }

            // InternalDockerCompose.g:4680:2: ( ( rule__Image__Alternatives_1_1_1 )* )
            // InternalDockerCompose.g:4681:3: ( rule__Image__Alternatives_1_1_1 )*
            {
             before(grammarAccess.getImageAccess().getAlternatives_1_1_1()); 
            // InternalDockerCompose.g:4682:3: ( rule__Image__Alternatives_1_1_1 )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==RULE_INT||LA58_0==RULE_ID) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // InternalDockerCompose.g:4682:4: rule__Image__Alternatives_1_1_1
            	    {
            	    pushFollow(FOLLOW_31);
            	    rule__Image__Alternatives_1_1_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);

             after(grammarAccess.getImageAccess().getAlternatives_1_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1_1__1__Impl"


    // $ANTLR start "rule__Image__Group_3_0__0"
    // InternalDockerCompose.g:4692:1: rule__Image__Group_3_0__0 : rule__Image__Group_3_0__0__Impl rule__Image__Group_3_0__1 ;
    public final void rule__Image__Group_3_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4696:1: ( rule__Image__Group_3_0__0__Impl rule__Image__Group_3_0__1 )
            // InternalDockerCompose.g:4697:2: rule__Image__Group_3_0__0__Impl rule__Image__Group_3_0__1
            {
            pushFollow(FOLLOW_32);
            rule__Image__Group_3_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group_3_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_3_0__0"


    // $ANTLR start "rule__Image__Group_3_0__0__Impl"
    // InternalDockerCompose.g:4704:1: rule__Image__Group_3_0__0__Impl : ( ':' ) ;
    public final void rule__Image__Group_3_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4708:1: ( ( ':' ) )
            // InternalDockerCompose.g:4709:1: ( ':' )
            {
            // InternalDockerCompose.g:4709:1: ( ':' )
            // InternalDockerCompose.g:4710:2: ':'
            {
             before(grammarAccess.getImageAccess().getColonKeyword_3_0_0()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getImageAccess().getColonKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_3_0__0__Impl"


    // $ANTLR start "rule__Image__Group_3_0__1"
    // InternalDockerCompose.g:4719:1: rule__Image__Group_3_0__1 : rule__Image__Group_3_0__1__Impl ;
    public final void rule__Image__Group_3_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4723:1: ( rule__Image__Group_3_0__1__Impl )
            // InternalDockerCompose.g:4724:2: rule__Image__Group_3_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Image__Group_3_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_3_0__1"


    // $ANTLR start "rule__Image__Group_3_0__1__Impl"
    // InternalDockerCompose.g:4730:1: rule__Image__Group_3_0__1__Impl : ( ( ( rule__Image__Alternatives_3_0_1 ) ) ( ( rule__Image__Alternatives_3_0_1 )* ) ) ;
    public final void rule__Image__Group_3_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4734:1: ( ( ( ( rule__Image__Alternatives_3_0_1 ) ) ( ( rule__Image__Alternatives_3_0_1 )* ) ) )
            // InternalDockerCompose.g:4735:1: ( ( ( rule__Image__Alternatives_3_0_1 ) ) ( ( rule__Image__Alternatives_3_0_1 )* ) )
            {
            // InternalDockerCompose.g:4735:1: ( ( ( rule__Image__Alternatives_3_0_1 ) ) ( ( rule__Image__Alternatives_3_0_1 )* ) )
            // InternalDockerCompose.g:4736:2: ( ( rule__Image__Alternatives_3_0_1 ) ) ( ( rule__Image__Alternatives_3_0_1 )* )
            {
            // InternalDockerCompose.g:4736:2: ( ( rule__Image__Alternatives_3_0_1 ) )
            // InternalDockerCompose.g:4737:3: ( rule__Image__Alternatives_3_0_1 )
            {
             before(grammarAccess.getImageAccess().getAlternatives_3_0_1()); 
            // InternalDockerCompose.g:4738:3: ( rule__Image__Alternatives_3_0_1 )
            // InternalDockerCompose.g:4738:4: rule__Image__Alternatives_3_0_1
            {
            pushFollow(FOLLOW_33);
            rule__Image__Alternatives_3_0_1();

            state._fsp--;


            }

             after(grammarAccess.getImageAccess().getAlternatives_3_0_1()); 

            }

            // InternalDockerCompose.g:4741:2: ( ( rule__Image__Alternatives_3_0_1 )* )
            // InternalDockerCompose.g:4742:3: ( rule__Image__Alternatives_3_0_1 )*
            {
             before(grammarAccess.getImageAccess().getAlternatives_3_0_1()); 
            // InternalDockerCompose.g:4743:3: ( rule__Image__Alternatives_3_0_1 )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==RULE_ID) ) {
                    int LA59_2 = input.LA(2);

                    if ( (LA59_2==EOF||LA59_2==RULE_INT||LA59_2==RULE_ID||LA59_2==17||LA59_2==19||(LA59_2>=42 && LA59_2<=47)||(LA59_2>=49 && LA59_2<=62)) ) {
                        alt59=1;
                    }


                }
                else if ( (LA59_0==RULE_INT||LA59_0==19) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalDockerCompose.g:4743:4: rule__Image__Alternatives_3_0_1
            	    {
            	    pushFollow(FOLLOW_33);
            	    rule__Image__Alternatives_3_0_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);

             after(grammarAccess.getImageAccess().getAlternatives_3_0_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_3_0__1__Impl"


    // $ANTLR start "rule__Image__Group_3_0_1_2__0"
    // InternalDockerCompose.g:4753:1: rule__Image__Group_3_0_1_2__0 : rule__Image__Group_3_0_1_2__0__Impl rule__Image__Group_3_0_1_2__1 ;
    public final void rule__Image__Group_3_0_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4757:1: ( rule__Image__Group_3_0_1_2__0__Impl rule__Image__Group_3_0_1_2__1 )
            // InternalDockerCompose.g:4758:2: rule__Image__Group_3_0_1_2__0__Impl rule__Image__Group_3_0_1_2__1
            {
            pushFollow(FOLLOW_32);
            rule__Image__Group_3_0_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group_3_0_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_3_0_1_2__0"


    // $ANTLR start "rule__Image__Group_3_0_1_2__0__Impl"
    // InternalDockerCompose.g:4765:1: rule__Image__Group_3_0_1_2__0__Impl : ( ( '-' )? ) ;
    public final void rule__Image__Group_3_0_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4769:1: ( ( ( '-' )? ) )
            // InternalDockerCompose.g:4770:1: ( ( '-' )? )
            {
            // InternalDockerCompose.g:4770:1: ( ( '-' )? )
            // InternalDockerCompose.g:4771:2: ( '-' )?
            {
             before(grammarAccess.getImageAccess().getHyphenMinusKeyword_3_0_1_2_0()); 
            // InternalDockerCompose.g:4772:2: ( '-' )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==19) ) {
                alt60=1;
            }
            switch (alt60) {
                case 1 :
                    // InternalDockerCompose.g:4772:3: '-'
                    {
                    match(input,19,FOLLOW_2); 

                    }
                    break;

            }

             after(grammarAccess.getImageAccess().getHyphenMinusKeyword_3_0_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_3_0_1_2__0__Impl"


    // $ANTLR start "rule__Image__Group_3_0_1_2__1"
    // InternalDockerCompose.g:4780:1: rule__Image__Group_3_0_1_2__1 : rule__Image__Group_3_0_1_2__1__Impl ;
    public final void rule__Image__Group_3_0_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4784:1: ( rule__Image__Group_3_0_1_2__1__Impl )
            // InternalDockerCompose.g:4785:2: rule__Image__Group_3_0_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Image__Group_3_0_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_3_0_1_2__1"


    // $ANTLR start "rule__Image__Group_3_0_1_2__1__Impl"
    // InternalDockerCompose.g:4791:1: rule__Image__Group_3_0_1_2__1__Impl : ( ruledotID ) ;
    public final void rule__Image__Group_3_0_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4795:1: ( ( ruledotID ) )
            // InternalDockerCompose.g:4796:1: ( ruledotID )
            {
            // InternalDockerCompose.g:4796:1: ( ruledotID )
            // InternalDockerCompose.g:4797:2: ruledotID
            {
             before(grammarAccess.getImageAccess().getDotIDParserRuleCall_3_0_1_2_1()); 
            pushFollow(FOLLOW_2);
            ruledotID();

            state._fsp--;

             after(grammarAccess.getImageAccess().getDotIDParserRuleCall_3_0_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_3_0_1_2__1__Impl"


    // $ANTLR start "rule__Image__Group_3_1__0"
    // InternalDockerCompose.g:4807:1: rule__Image__Group_3_1__0 : rule__Image__Group_3_1__0__Impl rule__Image__Group_3_1__1 ;
    public final void rule__Image__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4811:1: ( rule__Image__Group_3_1__0__Impl rule__Image__Group_3_1__1 )
            // InternalDockerCompose.g:4812:2: rule__Image__Group_3_1__0__Impl rule__Image__Group_3_1__1
            {
            pushFollow(FOLLOW_7);
            rule__Image__Group_3_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group_3_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_3_1__0"


    // $ANTLR start "rule__Image__Group_3_1__0__Impl"
    // InternalDockerCompose.g:4819:1: rule__Image__Group_3_1__0__Impl : ( '@' ) ;
    public final void rule__Image__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4823:1: ( ( '@' ) )
            // InternalDockerCompose.g:4824:1: ( '@' )
            {
            // InternalDockerCompose.g:4824:1: ( '@' )
            // InternalDockerCompose.g:4825:2: '@'
            {
             before(grammarAccess.getImageAccess().getCommercialAtKeyword_3_1_0()); 
            match(input,65,FOLLOW_2); 
             after(grammarAccess.getImageAccess().getCommercialAtKeyword_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_3_1__0__Impl"


    // $ANTLR start "rule__Image__Group_3_1__1"
    // InternalDockerCompose.g:4834:1: rule__Image__Group_3_1__1 : rule__Image__Group_3_1__1__Impl rule__Image__Group_3_1__2 ;
    public final void rule__Image__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4838:1: ( rule__Image__Group_3_1__1__Impl rule__Image__Group_3_1__2 )
            // InternalDockerCompose.g:4839:2: rule__Image__Group_3_1__1__Impl rule__Image__Group_3_1__2
            {
            pushFollow(FOLLOW_10);
            rule__Image__Group_3_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group_3_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_3_1__1"


    // $ANTLR start "rule__Image__Group_3_1__1__Impl"
    // InternalDockerCompose.g:4846:1: rule__Image__Group_3_1__1__Impl : ( ruledotID ) ;
    public final void rule__Image__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4850:1: ( ( ruledotID ) )
            // InternalDockerCompose.g:4851:1: ( ruledotID )
            {
            // InternalDockerCompose.g:4851:1: ( ruledotID )
            // InternalDockerCompose.g:4852:2: ruledotID
            {
             before(grammarAccess.getImageAccess().getDotIDParserRuleCall_3_1_1()); 
            pushFollow(FOLLOW_2);
            ruledotID();

            state._fsp--;

             after(grammarAccess.getImageAccess().getDotIDParserRuleCall_3_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_3_1__1__Impl"


    // $ANTLR start "rule__Image__Group_3_1__2"
    // InternalDockerCompose.g:4861:1: rule__Image__Group_3_1__2 : rule__Image__Group_3_1__2__Impl ;
    public final void rule__Image__Group_3_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4865:1: ( rule__Image__Group_3_1__2__Impl )
            // InternalDockerCompose.g:4866:2: rule__Image__Group_3_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Image__Group_3_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_3_1__2"


    // $ANTLR start "rule__Image__Group_3_1__2__Impl"
    // InternalDockerCompose.g:4872:1: rule__Image__Group_3_1__2__Impl : ( ( rule__Image__Group_3_1_2__0 )* ) ;
    public final void rule__Image__Group_3_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4876:1: ( ( ( rule__Image__Group_3_1_2__0 )* ) )
            // InternalDockerCompose.g:4877:1: ( ( rule__Image__Group_3_1_2__0 )* )
            {
            // InternalDockerCompose.g:4877:1: ( ( rule__Image__Group_3_1_2__0 )* )
            // InternalDockerCompose.g:4878:2: ( rule__Image__Group_3_1_2__0 )*
            {
             before(grammarAccess.getImageAccess().getGroup_3_1_2()); 
            // InternalDockerCompose.g:4879:2: ( rule__Image__Group_3_1_2__0 )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( (LA61_0==48) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // InternalDockerCompose.g:4879:3: rule__Image__Group_3_1_2__0
            	    {
            	    pushFollow(FOLLOW_29);
            	    rule__Image__Group_3_1_2__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);

             after(grammarAccess.getImageAccess().getGroup_3_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_3_1__2__Impl"


    // $ANTLR start "rule__Image__Group_3_1_2__0"
    // InternalDockerCompose.g:4888:1: rule__Image__Group_3_1_2__0 : rule__Image__Group_3_1_2__0__Impl rule__Image__Group_3_1_2__1 ;
    public final void rule__Image__Group_3_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4892:1: ( rule__Image__Group_3_1_2__0__Impl rule__Image__Group_3_1_2__1 )
            // InternalDockerCompose.g:4893:2: rule__Image__Group_3_1_2__0__Impl rule__Image__Group_3_1_2__1
            {
            pushFollow(FOLLOW_30);
            rule__Image__Group_3_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group_3_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_3_1_2__0"


    // $ANTLR start "rule__Image__Group_3_1_2__0__Impl"
    // InternalDockerCompose.g:4900:1: rule__Image__Group_3_1_2__0__Impl : ( ':' ) ;
    public final void rule__Image__Group_3_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4904:1: ( ( ':' ) )
            // InternalDockerCompose.g:4905:1: ( ':' )
            {
            // InternalDockerCompose.g:4905:1: ( ':' )
            // InternalDockerCompose.g:4906:2: ':'
            {
             before(grammarAccess.getImageAccess().getColonKeyword_3_1_2_0()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getImageAccess().getColonKeyword_3_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_3_1_2__0__Impl"


    // $ANTLR start "rule__Image__Group_3_1_2__1"
    // InternalDockerCompose.g:4915:1: rule__Image__Group_3_1_2__1 : rule__Image__Group_3_1_2__1__Impl ;
    public final void rule__Image__Group_3_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4919:1: ( rule__Image__Group_3_1_2__1__Impl )
            // InternalDockerCompose.g:4920:2: rule__Image__Group_3_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Image__Group_3_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_3_1_2__1"


    // $ANTLR start "rule__Image__Group_3_1_2__1__Impl"
    // InternalDockerCompose.g:4926:1: rule__Image__Group_3_1_2__1__Impl : ( ( ( rule__Image__Alternatives_3_1_2_1 ) ) ( ( rule__Image__Alternatives_3_1_2_1 )* ) ) ;
    public final void rule__Image__Group_3_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4930:1: ( ( ( ( rule__Image__Alternatives_3_1_2_1 ) ) ( ( rule__Image__Alternatives_3_1_2_1 )* ) ) )
            // InternalDockerCompose.g:4931:1: ( ( ( rule__Image__Alternatives_3_1_2_1 ) ) ( ( rule__Image__Alternatives_3_1_2_1 )* ) )
            {
            // InternalDockerCompose.g:4931:1: ( ( ( rule__Image__Alternatives_3_1_2_1 ) ) ( ( rule__Image__Alternatives_3_1_2_1 )* ) )
            // InternalDockerCompose.g:4932:2: ( ( rule__Image__Alternatives_3_1_2_1 ) ) ( ( rule__Image__Alternatives_3_1_2_1 )* )
            {
            // InternalDockerCompose.g:4932:2: ( ( rule__Image__Alternatives_3_1_2_1 ) )
            // InternalDockerCompose.g:4933:3: ( rule__Image__Alternatives_3_1_2_1 )
            {
             before(grammarAccess.getImageAccess().getAlternatives_3_1_2_1()); 
            // InternalDockerCompose.g:4934:3: ( rule__Image__Alternatives_3_1_2_1 )
            // InternalDockerCompose.g:4934:4: rule__Image__Alternatives_3_1_2_1
            {
            pushFollow(FOLLOW_31);
            rule__Image__Alternatives_3_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getImageAccess().getAlternatives_3_1_2_1()); 

            }

            // InternalDockerCompose.g:4937:2: ( ( rule__Image__Alternatives_3_1_2_1 )* )
            // InternalDockerCompose.g:4938:3: ( rule__Image__Alternatives_3_1_2_1 )*
            {
             before(grammarAccess.getImageAccess().getAlternatives_3_1_2_1()); 
            // InternalDockerCompose.g:4939:3: ( rule__Image__Alternatives_3_1_2_1 )*
            loop62:
            do {
                int alt62=2;
                alt62 = dfa62.predict(input);
                switch (alt62) {
            	case 1 :
            	    // InternalDockerCompose.g:4939:4: rule__Image__Alternatives_3_1_2_1
            	    {
            	    pushFollow(FOLLOW_31);
            	    rule__Image__Alternatives_3_1_2_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);

             after(grammarAccess.getImageAccess().getAlternatives_3_1_2_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_3_1_2__1__Impl"


    // $ANTLR start "rule__Link__Group__0"
    // InternalDockerCompose.g:4949:1: rule__Link__Group__0 : rule__Link__Group__0__Impl rule__Link__Group__1 ;
    public final void rule__Link__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4953:1: ( rule__Link__Group__0__Impl rule__Link__Group__1 )
            // InternalDockerCompose.g:4954:2: rule__Link__Group__0__Impl rule__Link__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__Link__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Link__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__Group__0"


    // $ANTLR start "rule__Link__Group__0__Impl"
    // InternalDockerCompose.g:4961:1: rule__Link__Group__0__Impl : ( () ) ;
    public final void rule__Link__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4965:1: ( ( () ) )
            // InternalDockerCompose.g:4966:1: ( () )
            {
            // InternalDockerCompose.g:4966:1: ( () )
            // InternalDockerCompose.g:4967:2: ()
            {
             before(grammarAccess.getLinkAccess().getLinkAction_0()); 
            // InternalDockerCompose.g:4968:2: ()
            // InternalDockerCompose.g:4968:3: 
            {
            }

             after(grammarAccess.getLinkAccess().getLinkAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__Group__0__Impl"


    // $ANTLR start "rule__Link__Group__1"
    // InternalDockerCompose.g:4976:1: rule__Link__Group__1 : rule__Link__Group__1__Impl rule__Link__Group__2 ;
    public final void rule__Link__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4980:1: ( rule__Link__Group__1__Impl rule__Link__Group__2 )
            // InternalDockerCompose.g:4981:2: rule__Link__Group__1__Impl rule__Link__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__Link__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Link__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__Group__1"


    // $ANTLR start "rule__Link__Group__1__Impl"
    // InternalDockerCompose.g:4988:1: rule__Link__Group__1__Impl : ( ( rule__Link__ServiceAssignment_1 ) ) ;
    public final void rule__Link__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4992:1: ( ( ( rule__Link__ServiceAssignment_1 ) ) )
            // InternalDockerCompose.g:4993:1: ( ( rule__Link__ServiceAssignment_1 ) )
            {
            // InternalDockerCompose.g:4993:1: ( ( rule__Link__ServiceAssignment_1 ) )
            // InternalDockerCompose.g:4994:2: ( rule__Link__ServiceAssignment_1 )
            {
             before(grammarAccess.getLinkAccess().getServiceAssignment_1()); 
            // InternalDockerCompose.g:4995:2: ( rule__Link__ServiceAssignment_1 )
            // InternalDockerCompose.g:4995:3: rule__Link__ServiceAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Link__ServiceAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getLinkAccess().getServiceAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__Group__1__Impl"


    // $ANTLR start "rule__Link__Group__2"
    // InternalDockerCompose.g:5003:1: rule__Link__Group__2 : rule__Link__Group__2__Impl ;
    public final void rule__Link__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5007:1: ( rule__Link__Group__2__Impl )
            // InternalDockerCompose.g:5008:2: rule__Link__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Link__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__Group__2"


    // $ANTLR start "rule__Link__Group__2__Impl"
    // InternalDockerCompose.g:5014:1: rule__Link__Group__2__Impl : ( ( rule__Link__Group_2__0 )? ) ;
    public final void rule__Link__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5018:1: ( ( ( rule__Link__Group_2__0 )? ) )
            // InternalDockerCompose.g:5019:1: ( ( rule__Link__Group_2__0 )? )
            {
            // InternalDockerCompose.g:5019:1: ( ( rule__Link__Group_2__0 )? )
            // InternalDockerCompose.g:5020:2: ( rule__Link__Group_2__0 )?
            {
             before(grammarAccess.getLinkAccess().getGroup_2()); 
            // InternalDockerCompose.g:5021:2: ( rule__Link__Group_2__0 )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==48) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalDockerCompose.g:5021:3: rule__Link__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Link__Group_2__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getLinkAccess().getGroup_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__Group__2__Impl"


    // $ANTLR start "rule__Link__Group_2__0"
    // InternalDockerCompose.g:5030:1: rule__Link__Group_2__0 : rule__Link__Group_2__0__Impl rule__Link__Group_2__1 ;
    public final void rule__Link__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5034:1: ( rule__Link__Group_2__0__Impl rule__Link__Group_2__1 )
            // InternalDockerCompose.g:5035:2: rule__Link__Group_2__0__Impl rule__Link__Group_2__1
            {
            pushFollow(FOLLOW_14);
            rule__Link__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Link__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__Group_2__0"


    // $ANTLR start "rule__Link__Group_2__0__Impl"
    // InternalDockerCompose.g:5042:1: rule__Link__Group_2__0__Impl : ( ':' ) ;
    public final void rule__Link__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5046:1: ( ( ':' ) )
            // InternalDockerCompose.g:5047:1: ( ':' )
            {
            // InternalDockerCompose.g:5047:1: ( ':' )
            // InternalDockerCompose.g:5048:2: ':'
            {
             before(grammarAccess.getLinkAccess().getColonKeyword_2_0()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getLinkAccess().getColonKeyword_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__Group_2__0__Impl"


    // $ANTLR start "rule__Link__Group_2__1"
    // InternalDockerCompose.g:5057:1: rule__Link__Group_2__1 : rule__Link__Group_2__1__Impl ;
    public final void rule__Link__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5061:1: ( rule__Link__Group_2__1__Impl )
            // InternalDockerCompose.g:5062:2: rule__Link__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Link__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__Group_2__1"


    // $ANTLR start "rule__Link__Group_2__1__Impl"
    // InternalDockerCompose.g:5068:1: rule__Link__Group_2__1__Impl : ( ( rule__Link__AliasAssignment_2_1 ) ) ;
    public final void rule__Link__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5072:1: ( ( ( rule__Link__AliasAssignment_2_1 ) ) )
            // InternalDockerCompose.g:5073:1: ( ( rule__Link__AliasAssignment_2_1 ) )
            {
            // InternalDockerCompose.g:5073:1: ( ( rule__Link__AliasAssignment_2_1 ) )
            // InternalDockerCompose.g:5074:2: ( rule__Link__AliasAssignment_2_1 )
            {
             before(grammarAccess.getLinkAccess().getAliasAssignment_2_1()); 
            // InternalDockerCompose.g:5075:2: ( rule__Link__AliasAssignment_2_1 )
            // InternalDockerCompose.g:5075:3: rule__Link__AliasAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Link__AliasAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getLinkAccess().getAliasAssignment_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__Group_2__1__Impl"


    // $ANTLR start "rule__Dependency__Group__0"
    // InternalDockerCompose.g:5084:1: rule__Dependency__Group__0 : rule__Dependency__Group__0__Impl rule__Dependency__Group__1 ;
    public final void rule__Dependency__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5088:1: ( rule__Dependency__Group__0__Impl rule__Dependency__Group__1 )
            // InternalDockerCompose.g:5089:2: rule__Dependency__Group__0__Impl rule__Dependency__Group__1
            {
            pushFollow(FOLLOW_18);
            rule__Dependency__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Dependency__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency__Group__0"


    // $ANTLR start "rule__Dependency__Group__0__Impl"
    // InternalDockerCompose.g:5096:1: rule__Dependency__Group__0__Impl : ( () ) ;
    public final void rule__Dependency__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5100:1: ( ( () ) )
            // InternalDockerCompose.g:5101:1: ( () )
            {
            // InternalDockerCompose.g:5101:1: ( () )
            // InternalDockerCompose.g:5102:2: ()
            {
             before(grammarAccess.getDependencyAccess().getDependencyAction_0()); 
            // InternalDockerCompose.g:5103:2: ()
            // InternalDockerCompose.g:5103:3: 
            {
            }

             after(grammarAccess.getDependencyAccess().getDependencyAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency__Group__0__Impl"


    // $ANTLR start "rule__Dependency__Group__1"
    // InternalDockerCompose.g:5111:1: rule__Dependency__Group__1 : rule__Dependency__Group__1__Impl ;
    public final void rule__Dependency__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5115:1: ( rule__Dependency__Group__1__Impl )
            // InternalDockerCompose.g:5116:2: rule__Dependency__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Dependency__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency__Group__1"


    // $ANTLR start "rule__Dependency__Group__1__Impl"
    // InternalDockerCompose.g:5122:1: rule__Dependency__Group__1__Impl : ( ( rule__Dependency__Alternatives_1 ) ) ;
    public final void rule__Dependency__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5126:1: ( ( ( rule__Dependency__Alternatives_1 ) ) )
            // InternalDockerCompose.g:5127:1: ( ( rule__Dependency__Alternatives_1 ) )
            {
            // InternalDockerCompose.g:5127:1: ( ( rule__Dependency__Alternatives_1 ) )
            // InternalDockerCompose.g:5128:2: ( rule__Dependency__Alternatives_1 )
            {
             before(grammarAccess.getDependencyAccess().getAlternatives_1()); 
            // InternalDockerCompose.g:5129:2: ( rule__Dependency__Alternatives_1 )
            // InternalDockerCompose.g:5129:3: rule__Dependency__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__Dependency__Alternatives_1();

            state._fsp--;


            }

             after(grammarAccess.getDependencyAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency__Group__1__Impl"


    // $ANTLR start "rule__Dependency__Group_1_0__0"
    // InternalDockerCompose.g:5138:1: rule__Dependency__Group_1_0__0 : rule__Dependency__Group_1_0__0__Impl rule__Dependency__Group_1_0__1 ;
    public final void rule__Dependency__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5142:1: ( rule__Dependency__Group_1_0__0__Impl rule__Dependency__Group_1_0__1 )
            // InternalDockerCompose.g:5143:2: rule__Dependency__Group_1_0__0__Impl rule__Dependency__Group_1_0__1
            {
            pushFollow(FOLLOW_7);
            rule__Dependency__Group_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Dependency__Group_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency__Group_1_0__0"


    // $ANTLR start "rule__Dependency__Group_1_0__0__Impl"
    // InternalDockerCompose.g:5150:1: rule__Dependency__Group_1_0__0__Impl : ( '-' ) ;
    public final void rule__Dependency__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5154:1: ( ( '-' ) )
            // InternalDockerCompose.g:5155:1: ( '-' )
            {
            // InternalDockerCompose.g:5155:1: ( '-' )
            // InternalDockerCompose.g:5156:2: '-'
            {
             before(grammarAccess.getDependencyAccess().getHyphenMinusKeyword_1_0_0()); 
            match(input,19,FOLLOW_2); 
             after(grammarAccess.getDependencyAccess().getHyphenMinusKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency__Group_1_0__0__Impl"


    // $ANTLR start "rule__Dependency__Group_1_0__1"
    // InternalDockerCompose.g:5165:1: rule__Dependency__Group_1_0__1 : rule__Dependency__Group_1_0__1__Impl ;
    public final void rule__Dependency__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5169:1: ( rule__Dependency__Group_1_0__1__Impl )
            // InternalDockerCompose.g:5170:2: rule__Dependency__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Dependency__Group_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency__Group_1_0__1"


    // $ANTLR start "rule__Dependency__Group_1_0__1__Impl"
    // InternalDockerCompose.g:5176:1: rule__Dependency__Group_1_0__1__Impl : ( ( rule__Dependency__ServiceAssignment_1_0_1 ) ) ;
    public final void rule__Dependency__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5180:1: ( ( ( rule__Dependency__ServiceAssignment_1_0_1 ) ) )
            // InternalDockerCompose.g:5181:1: ( ( rule__Dependency__ServiceAssignment_1_0_1 ) )
            {
            // InternalDockerCompose.g:5181:1: ( ( rule__Dependency__ServiceAssignment_1_0_1 ) )
            // InternalDockerCompose.g:5182:2: ( rule__Dependency__ServiceAssignment_1_0_1 )
            {
             before(grammarAccess.getDependencyAccess().getServiceAssignment_1_0_1()); 
            // InternalDockerCompose.g:5183:2: ( rule__Dependency__ServiceAssignment_1_0_1 )
            // InternalDockerCompose.g:5183:3: rule__Dependency__ServiceAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Dependency__ServiceAssignment_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getDependencyAccess().getServiceAssignment_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency__Group_1_0__1__Impl"


    // $ANTLR start "rule__Dependency__Group_1_1__0"
    // InternalDockerCompose.g:5192:1: rule__Dependency__Group_1_1__0 : rule__Dependency__Group_1_1__0__Impl rule__Dependency__Group_1_1__1 ;
    public final void rule__Dependency__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5196:1: ( rule__Dependency__Group_1_1__0__Impl rule__Dependency__Group_1_1__1 )
            // InternalDockerCompose.g:5197:2: rule__Dependency__Group_1_1__0__Impl rule__Dependency__Group_1_1__1
            {
            pushFollow(FOLLOW_10);
            rule__Dependency__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Dependency__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency__Group_1_1__0"


    // $ANTLR start "rule__Dependency__Group_1_1__0__Impl"
    // InternalDockerCompose.g:5204:1: rule__Dependency__Group_1_1__0__Impl : ( ( rule__Dependency__ServiceAssignment_1_1_0 ) ) ;
    public final void rule__Dependency__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5208:1: ( ( ( rule__Dependency__ServiceAssignment_1_1_0 ) ) )
            // InternalDockerCompose.g:5209:1: ( ( rule__Dependency__ServiceAssignment_1_1_0 ) )
            {
            // InternalDockerCompose.g:5209:1: ( ( rule__Dependency__ServiceAssignment_1_1_0 ) )
            // InternalDockerCompose.g:5210:2: ( rule__Dependency__ServiceAssignment_1_1_0 )
            {
             before(grammarAccess.getDependencyAccess().getServiceAssignment_1_1_0()); 
            // InternalDockerCompose.g:5211:2: ( rule__Dependency__ServiceAssignment_1_1_0 )
            // InternalDockerCompose.g:5211:3: rule__Dependency__ServiceAssignment_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Dependency__ServiceAssignment_1_1_0();

            state._fsp--;


            }

             after(grammarAccess.getDependencyAccess().getServiceAssignment_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency__Group_1_1__0__Impl"


    // $ANTLR start "rule__Dependency__Group_1_1__1"
    // InternalDockerCompose.g:5219:1: rule__Dependency__Group_1_1__1 : rule__Dependency__Group_1_1__1__Impl rule__Dependency__Group_1_1__2 ;
    public final void rule__Dependency__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5223:1: ( rule__Dependency__Group_1_1__1__Impl rule__Dependency__Group_1_1__2 )
            // InternalDockerCompose.g:5224:2: rule__Dependency__Group_1_1__1__Impl rule__Dependency__Group_1_1__2
            {
            pushFollow(FOLLOW_34);
            rule__Dependency__Group_1_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Dependency__Group_1_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency__Group_1_1__1"


    // $ANTLR start "rule__Dependency__Group_1_1__1__Impl"
    // InternalDockerCompose.g:5231:1: rule__Dependency__Group_1_1__1__Impl : ( ':' ) ;
    public final void rule__Dependency__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5235:1: ( ( ':' ) )
            // InternalDockerCompose.g:5236:1: ( ':' )
            {
            // InternalDockerCompose.g:5236:1: ( ':' )
            // InternalDockerCompose.g:5237:2: ':'
            {
             before(grammarAccess.getDependencyAccess().getColonKeyword_1_1_1()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getDependencyAccess().getColonKeyword_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency__Group_1_1__1__Impl"


    // $ANTLR start "rule__Dependency__Group_1_1__2"
    // InternalDockerCompose.g:5246:1: rule__Dependency__Group_1_1__2 : rule__Dependency__Group_1_1__2__Impl rule__Dependency__Group_1_1__3 ;
    public final void rule__Dependency__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5250:1: ( rule__Dependency__Group_1_1__2__Impl rule__Dependency__Group_1_1__3 )
            // InternalDockerCompose.g:5251:2: rule__Dependency__Group_1_1__2__Impl rule__Dependency__Group_1_1__3
            {
            pushFollow(FOLLOW_35);
            rule__Dependency__Group_1_1__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Dependency__Group_1_1__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency__Group_1_1__2"


    // $ANTLR start "rule__Dependency__Group_1_1__2__Impl"
    // InternalDockerCompose.g:5258:1: rule__Dependency__Group_1_1__2__Impl : ( 'condition:' ) ;
    public final void rule__Dependency__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5262:1: ( ( 'condition:' ) )
            // InternalDockerCompose.g:5263:1: ( 'condition:' )
            {
            // InternalDockerCompose.g:5263:1: ( 'condition:' )
            // InternalDockerCompose.g:5264:2: 'condition:'
            {
             before(grammarAccess.getDependencyAccess().getConditionKeyword_1_1_2()); 
            match(input,66,FOLLOW_2); 
             after(grammarAccess.getDependencyAccess().getConditionKeyword_1_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency__Group_1_1__2__Impl"


    // $ANTLR start "rule__Dependency__Group_1_1__3"
    // InternalDockerCompose.g:5273:1: rule__Dependency__Group_1_1__3 : rule__Dependency__Group_1_1__3__Impl ;
    public final void rule__Dependency__Group_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5277:1: ( rule__Dependency__Group_1_1__3__Impl )
            // InternalDockerCompose.g:5278:2: rule__Dependency__Group_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Dependency__Group_1_1__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency__Group_1_1__3"


    // $ANTLR start "rule__Dependency__Group_1_1__3__Impl"
    // InternalDockerCompose.g:5284:1: rule__Dependency__Group_1_1__3__Impl : ( ( rule__Dependency__ConditionAssignment_1_1_3 ) ) ;
    public final void rule__Dependency__Group_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5288:1: ( ( ( rule__Dependency__ConditionAssignment_1_1_3 ) ) )
            // InternalDockerCompose.g:5289:1: ( ( rule__Dependency__ConditionAssignment_1_1_3 ) )
            {
            // InternalDockerCompose.g:5289:1: ( ( rule__Dependency__ConditionAssignment_1_1_3 ) )
            // InternalDockerCompose.g:5290:2: ( rule__Dependency__ConditionAssignment_1_1_3 )
            {
             before(grammarAccess.getDependencyAccess().getConditionAssignment_1_1_3()); 
            // InternalDockerCompose.g:5291:2: ( rule__Dependency__ConditionAssignment_1_1_3 )
            // InternalDockerCompose.g:5291:3: rule__Dependency__ConditionAssignment_1_1_3
            {
            pushFollow(FOLLOW_2);
            rule__Dependency__ConditionAssignment_1_1_3();

            state._fsp--;


            }

             after(grammarAccess.getDependencyAccess().getConditionAssignment_1_1_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency__Group_1_1__3__Impl"


    // $ANTLR start "rule__NetworkConnector_long__Group__0"
    // InternalDockerCompose.g:5300:1: rule__NetworkConnector_long__Group__0 : rule__NetworkConnector_long__Group__0__Impl rule__NetworkConnector_long__Group__1 ;
    public final void rule__NetworkConnector_long__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5304:1: ( rule__NetworkConnector_long__Group__0__Impl rule__NetworkConnector_long__Group__1 )
            // InternalDockerCompose.g:5305:2: rule__NetworkConnector_long__Group__0__Impl rule__NetworkConnector_long__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__NetworkConnector_long__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group__0"


    // $ANTLR start "rule__NetworkConnector_long__Group__0__Impl"
    // InternalDockerCompose.g:5312:1: rule__NetworkConnector_long__Group__0__Impl : ( () ) ;
    public final void rule__NetworkConnector_long__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5316:1: ( ( () ) )
            // InternalDockerCompose.g:5317:1: ( () )
            {
            // InternalDockerCompose.g:5317:1: ( () )
            // InternalDockerCompose.g:5318:2: ()
            {
             before(grammarAccess.getNetworkConnector_longAccess().getNetworkConnectorAction_0()); 
            // InternalDockerCompose.g:5319:2: ()
            // InternalDockerCompose.g:5319:3: 
            {
            }

             after(grammarAccess.getNetworkConnector_longAccess().getNetworkConnectorAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group__0__Impl"


    // $ANTLR start "rule__NetworkConnector_long__Group__1"
    // InternalDockerCompose.g:5327:1: rule__NetworkConnector_long__Group__1 : rule__NetworkConnector_long__Group__1__Impl rule__NetworkConnector_long__Group__2 ;
    public final void rule__NetworkConnector_long__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5331:1: ( rule__NetworkConnector_long__Group__1__Impl rule__NetworkConnector_long__Group__2 )
            // InternalDockerCompose.g:5332:2: rule__NetworkConnector_long__Group__1__Impl rule__NetworkConnector_long__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__NetworkConnector_long__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group__1"


    // $ANTLR start "rule__NetworkConnector_long__Group__1__Impl"
    // InternalDockerCompose.g:5339:1: rule__NetworkConnector_long__Group__1__Impl : ( ( rule__NetworkConnector_long__NetworkAssignment_1 ) ) ;
    public final void rule__NetworkConnector_long__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5343:1: ( ( ( rule__NetworkConnector_long__NetworkAssignment_1 ) ) )
            // InternalDockerCompose.g:5344:1: ( ( rule__NetworkConnector_long__NetworkAssignment_1 ) )
            {
            // InternalDockerCompose.g:5344:1: ( ( rule__NetworkConnector_long__NetworkAssignment_1 ) )
            // InternalDockerCompose.g:5345:2: ( rule__NetworkConnector_long__NetworkAssignment_1 )
            {
             before(grammarAccess.getNetworkConnector_longAccess().getNetworkAssignment_1()); 
            // InternalDockerCompose.g:5346:2: ( rule__NetworkConnector_long__NetworkAssignment_1 )
            // InternalDockerCompose.g:5346:3: rule__NetworkConnector_long__NetworkAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__NetworkAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnector_longAccess().getNetworkAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group__1__Impl"


    // $ANTLR start "rule__NetworkConnector_long__Group__2"
    // InternalDockerCompose.g:5354:1: rule__NetworkConnector_long__Group__2 : rule__NetworkConnector_long__Group__2__Impl rule__NetworkConnector_long__Group__3 ;
    public final void rule__NetworkConnector_long__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5358:1: ( rule__NetworkConnector_long__Group__2__Impl rule__NetworkConnector_long__Group__3 )
            // InternalDockerCompose.g:5359:2: rule__NetworkConnector_long__Group__2__Impl rule__NetworkConnector_long__Group__3
            {
            pushFollow(FOLLOW_36);
            rule__NetworkConnector_long__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group__2"


    // $ANTLR start "rule__NetworkConnector_long__Group__2__Impl"
    // InternalDockerCompose.g:5366:1: rule__NetworkConnector_long__Group__2__Impl : ( ':' ) ;
    public final void rule__NetworkConnector_long__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5370:1: ( ( ':' ) )
            // InternalDockerCompose.g:5371:1: ( ':' )
            {
            // InternalDockerCompose.g:5371:1: ( ':' )
            // InternalDockerCompose.g:5372:2: ':'
            {
             before(grammarAccess.getNetworkConnector_longAccess().getColonKeyword_2()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getNetworkConnector_longAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group__2__Impl"


    // $ANTLR start "rule__NetworkConnector_long__Group__3"
    // InternalDockerCompose.g:5381:1: rule__NetworkConnector_long__Group__3 : rule__NetworkConnector_long__Group__3__Impl ;
    public final void rule__NetworkConnector_long__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5385:1: ( rule__NetworkConnector_long__Group__3__Impl )
            // InternalDockerCompose.g:5386:2: rule__NetworkConnector_long__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group__3"


    // $ANTLR start "rule__NetworkConnector_long__Group__3__Impl"
    // InternalDockerCompose.g:5392:1: rule__NetworkConnector_long__Group__3__Impl : ( ( rule__NetworkConnector_long__UnorderedGroup_3 ) ) ;
    public final void rule__NetworkConnector_long__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5396:1: ( ( ( rule__NetworkConnector_long__UnorderedGroup_3 ) ) )
            // InternalDockerCompose.g:5397:1: ( ( rule__NetworkConnector_long__UnorderedGroup_3 ) )
            {
            // InternalDockerCompose.g:5397:1: ( ( rule__NetworkConnector_long__UnorderedGroup_3 ) )
            // InternalDockerCompose.g:5398:2: ( rule__NetworkConnector_long__UnorderedGroup_3 )
            {
             before(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3()); 
            // InternalDockerCompose.g:5399:2: ( rule__NetworkConnector_long__UnorderedGroup_3 )
            // InternalDockerCompose.g:5399:3: rule__NetworkConnector_long__UnorderedGroup_3
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__UnorderedGroup_3();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group__3__Impl"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_0__0"
    // InternalDockerCompose.g:5408:1: rule__NetworkConnector_long__Group_3_0__0 : rule__NetworkConnector_long__Group_3_0__0__Impl rule__NetworkConnector_long__Group_3_0__1 ;
    public final void rule__NetworkConnector_long__Group_3_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5412:1: ( rule__NetworkConnector_long__Group_3_0__0__Impl rule__NetworkConnector_long__Group_3_0__1 )
            // InternalDockerCompose.g:5413:2: rule__NetworkConnector_long__Group_3_0__0__Impl rule__NetworkConnector_long__Group_3_0__1
            {
            pushFollow(FOLLOW_23);
            rule__NetworkConnector_long__Group_3_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group_3_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_0__0"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_0__0__Impl"
    // InternalDockerCompose.g:5420:1: rule__NetworkConnector_long__Group_3_0__0__Impl : ( 'ipv4_address:' ) ;
    public final void rule__NetworkConnector_long__Group_3_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5424:1: ( ( 'ipv4_address:' ) )
            // InternalDockerCompose.g:5425:1: ( 'ipv4_address:' )
            {
            // InternalDockerCompose.g:5425:1: ( 'ipv4_address:' )
            // InternalDockerCompose.g:5426:2: 'ipv4_address:'
            {
             before(grammarAccess.getNetworkConnector_longAccess().getIpv4_addressKeyword_3_0_0()); 
            match(input,67,FOLLOW_2); 
             after(grammarAccess.getNetworkConnector_longAccess().getIpv4_addressKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_0__0__Impl"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_0__1"
    // InternalDockerCompose.g:5435:1: rule__NetworkConnector_long__Group_3_0__1 : rule__NetworkConnector_long__Group_3_0__1__Impl ;
    public final void rule__NetworkConnector_long__Group_3_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5439:1: ( rule__NetworkConnector_long__Group_3_0__1__Impl )
            // InternalDockerCompose.g:5440:2: rule__NetworkConnector_long__Group_3_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group_3_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_0__1"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_0__1__Impl"
    // InternalDockerCompose.g:5446:1: rule__NetworkConnector_long__Group_3_0__1__Impl : ( ( rule__NetworkConnector_long__Ipv4_addressAssignment_3_0_1 ) ) ;
    public final void rule__NetworkConnector_long__Group_3_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5450:1: ( ( ( rule__NetworkConnector_long__Ipv4_addressAssignment_3_0_1 ) ) )
            // InternalDockerCompose.g:5451:1: ( ( rule__NetworkConnector_long__Ipv4_addressAssignment_3_0_1 ) )
            {
            // InternalDockerCompose.g:5451:1: ( ( rule__NetworkConnector_long__Ipv4_addressAssignment_3_0_1 ) )
            // InternalDockerCompose.g:5452:2: ( rule__NetworkConnector_long__Ipv4_addressAssignment_3_0_1 )
            {
             before(grammarAccess.getNetworkConnector_longAccess().getIpv4_addressAssignment_3_0_1()); 
            // InternalDockerCompose.g:5453:2: ( rule__NetworkConnector_long__Ipv4_addressAssignment_3_0_1 )
            // InternalDockerCompose.g:5453:3: rule__NetworkConnector_long__Ipv4_addressAssignment_3_0_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Ipv4_addressAssignment_3_0_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnector_longAccess().getIpv4_addressAssignment_3_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_0__1__Impl"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_1__0"
    // InternalDockerCompose.g:5462:1: rule__NetworkConnector_long__Group_3_1__0 : rule__NetworkConnector_long__Group_3_1__0__Impl rule__NetworkConnector_long__Group_3_1__1 ;
    public final void rule__NetworkConnector_long__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5466:1: ( rule__NetworkConnector_long__Group_3_1__0__Impl rule__NetworkConnector_long__Group_3_1__1 )
            // InternalDockerCompose.g:5467:2: rule__NetworkConnector_long__Group_3_1__0__Impl rule__NetworkConnector_long__Group_3_1__1
            {
            pushFollow(FOLLOW_9);
            rule__NetworkConnector_long__Group_3_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group_3_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_1__0"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_1__0__Impl"
    // InternalDockerCompose.g:5474:1: rule__NetworkConnector_long__Group_3_1__0__Impl : ( 'priority:' ) ;
    public final void rule__NetworkConnector_long__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5478:1: ( ( 'priority:' ) )
            // InternalDockerCompose.g:5479:1: ( 'priority:' )
            {
            // InternalDockerCompose.g:5479:1: ( 'priority:' )
            // InternalDockerCompose.g:5480:2: 'priority:'
            {
             before(grammarAccess.getNetworkConnector_longAccess().getPriorityKeyword_3_1_0()); 
            match(input,68,FOLLOW_2); 
             after(grammarAccess.getNetworkConnector_longAccess().getPriorityKeyword_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_1__0__Impl"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_1__1"
    // InternalDockerCompose.g:5489:1: rule__NetworkConnector_long__Group_3_1__1 : rule__NetworkConnector_long__Group_3_1__1__Impl ;
    public final void rule__NetworkConnector_long__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5493:1: ( rule__NetworkConnector_long__Group_3_1__1__Impl )
            // InternalDockerCompose.g:5494:2: rule__NetworkConnector_long__Group_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group_3_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_1__1"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_1__1__Impl"
    // InternalDockerCompose.g:5500:1: rule__NetworkConnector_long__Group_3_1__1__Impl : ( ( rule__NetworkConnector_long__PriorityAssignment_3_1_1 ) ) ;
    public final void rule__NetworkConnector_long__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5504:1: ( ( ( rule__NetworkConnector_long__PriorityAssignment_3_1_1 ) ) )
            // InternalDockerCompose.g:5505:1: ( ( rule__NetworkConnector_long__PriorityAssignment_3_1_1 ) )
            {
            // InternalDockerCompose.g:5505:1: ( ( rule__NetworkConnector_long__PriorityAssignment_3_1_1 ) )
            // InternalDockerCompose.g:5506:2: ( rule__NetworkConnector_long__PriorityAssignment_3_1_1 )
            {
             before(grammarAccess.getNetworkConnector_longAccess().getPriorityAssignment_3_1_1()); 
            // InternalDockerCompose.g:5507:2: ( rule__NetworkConnector_long__PriorityAssignment_3_1_1 )
            // InternalDockerCompose.g:5507:3: rule__NetworkConnector_long__PriorityAssignment_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__PriorityAssignment_3_1_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnector_longAccess().getPriorityAssignment_3_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_1__1__Impl"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_2__0"
    // InternalDockerCompose.g:5516:1: rule__NetworkConnector_long__Group_3_2__0 : rule__NetworkConnector_long__Group_3_2__0__Impl rule__NetworkConnector_long__Group_3_2__1 ;
    public final void rule__NetworkConnector_long__Group_3_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5520:1: ( rule__NetworkConnector_long__Group_3_2__0__Impl rule__NetworkConnector_long__Group_3_2__1 )
            // InternalDockerCompose.g:5521:2: rule__NetworkConnector_long__Group_3_2__0__Impl rule__NetworkConnector_long__Group_3_2__1
            {
            pushFollow(FOLLOW_17);
            rule__NetworkConnector_long__Group_3_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group_3_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_2__0"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_2__0__Impl"
    // InternalDockerCompose.g:5528:1: rule__NetworkConnector_long__Group_3_2__0__Impl : ( 'aliases:' ) ;
    public final void rule__NetworkConnector_long__Group_3_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5532:1: ( ( 'aliases:' ) )
            // InternalDockerCompose.g:5533:1: ( 'aliases:' )
            {
            // InternalDockerCompose.g:5533:1: ( 'aliases:' )
            // InternalDockerCompose.g:5534:2: 'aliases:'
            {
             before(grammarAccess.getNetworkConnector_longAccess().getAliasesKeyword_3_2_0()); 
            match(input,69,FOLLOW_2); 
             after(grammarAccess.getNetworkConnector_longAccess().getAliasesKeyword_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_2__0__Impl"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_2__1"
    // InternalDockerCompose.g:5543:1: rule__NetworkConnector_long__Group_3_2__1 : rule__NetworkConnector_long__Group_3_2__1__Impl ;
    public final void rule__NetworkConnector_long__Group_3_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5547:1: ( rule__NetworkConnector_long__Group_3_2__1__Impl )
            // InternalDockerCompose.g:5548:2: rule__NetworkConnector_long__Group_3_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group_3_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_2__1"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_2__1__Impl"
    // InternalDockerCompose.g:5554:1: rule__NetworkConnector_long__Group_3_2__1__Impl : ( ( ( rule__NetworkConnector_long__Group_3_2_1__0 ) ) ( ( rule__NetworkConnector_long__Group_3_2_1__0 )* ) ) ;
    public final void rule__NetworkConnector_long__Group_3_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5558:1: ( ( ( ( rule__NetworkConnector_long__Group_3_2_1__0 ) ) ( ( rule__NetworkConnector_long__Group_3_2_1__0 )* ) ) )
            // InternalDockerCompose.g:5559:1: ( ( ( rule__NetworkConnector_long__Group_3_2_1__0 ) ) ( ( rule__NetworkConnector_long__Group_3_2_1__0 )* ) )
            {
            // InternalDockerCompose.g:5559:1: ( ( ( rule__NetworkConnector_long__Group_3_2_1__0 ) ) ( ( rule__NetworkConnector_long__Group_3_2_1__0 )* ) )
            // InternalDockerCompose.g:5560:2: ( ( rule__NetworkConnector_long__Group_3_2_1__0 ) ) ( ( rule__NetworkConnector_long__Group_3_2_1__0 )* )
            {
            // InternalDockerCompose.g:5560:2: ( ( rule__NetworkConnector_long__Group_3_2_1__0 ) )
            // InternalDockerCompose.g:5561:3: ( rule__NetworkConnector_long__Group_3_2_1__0 )
            {
             before(grammarAccess.getNetworkConnector_longAccess().getGroup_3_2_1()); 
            // InternalDockerCompose.g:5562:3: ( rule__NetworkConnector_long__Group_3_2_1__0 )
            // InternalDockerCompose.g:5562:4: rule__NetworkConnector_long__Group_3_2_1__0
            {
            pushFollow(FOLLOW_5);
            rule__NetworkConnector_long__Group_3_2_1__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnector_longAccess().getGroup_3_2_1()); 

            }

            // InternalDockerCompose.g:5565:2: ( ( rule__NetworkConnector_long__Group_3_2_1__0 )* )
            // InternalDockerCompose.g:5566:3: ( rule__NetworkConnector_long__Group_3_2_1__0 )*
            {
             before(grammarAccess.getNetworkConnector_longAccess().getGroup_3_2_1()); 
            // InternalDockerCompose.g:5567:3: ( rule__NetworkConnector_long__Group_3_2_1__0 )*
            loop64:
            do {
                int alt64=2;
                int LA64_0 = input.LA(1);

                if ( (LA64_0==19) ) {
                    alt64=1;
                }


                switch (alt64) {
            	case 1 :
            	    // InternalDockerCompose.g:5567:4: rule__NetworkConnector_long__Group_3_2_1__0
            	    {
            	    pushFollow(FOLLOW_5);
            	    rule__NetworkConnector_long__Group_3_2_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);

             after(grammarAccess.getNetworkConnector_longAccess().getGroup_3_2_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_2__1__Impl"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_2_1__0"
    // InternalDockerCompose.g:5577:1: rule__NetworkConnector_long__Group_3_2_1__0 : rule__NetworkConnector_long__Group_3_2_1__0__Impl rule__NetworkConnector_long__Group_3_2_1__1 ;
    public final void rule__NetworkConnector_long__Group_3_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5581:1: ( rule__NetworkConnector_long__Group_3_2_1__0__Impl rule__NetworkConnector_long__Group_3_2_1__1 )
            // InternalDockerCompose.g:5582:2: rule__NetworkConnector_long__Group_3_2_1__0__Impl rule__NetworkConnector_long__Group_3_2_1__1
            {
            pushFollow(FOLLOW_14);
            rule__NetworkConnector_long__Group_3_2_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group_3_2_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_2_1__0"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_2_1__0__Impl"
    // InternalDockerCompose.g:5589:1: rule__NetworkConnector_long__Group_3_2_1__0__Impl : ( '-' ) ;
    public final void rule__NetworkConnector_long__Group_3_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5593:1: ( ( '-' ) )
            // InternalDockerCompose.g:5594:1: ( '-' )
            {
            // InternalDockerCompose.g:5594:1: ( '-' )
            // InternalDockerCompose.g:5595:2: '-'
            {
             before(grammarAccess.getNetworkConnector_longAccess().getHyphenMinusKeyword_3_2_1_0()); 
            match(input,19,FOLLOW_2); 
             after(grammarAccess.getNetworkConnector_longAccess().getHyphenMinusKeyword_3_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_2_1__0__Impl"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_2_1__1"
    // InternalDockerCompose.g:5604:1: rule__NetworkConnector_long__Group_3_2_1__1 : rule__NetworkConnector_long__Group_3_2_1__1__Impl ;
    public final void rule__NetworkConnector_long__Group_3_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5608:1: ( rule__NetworkConnector_long__Group_3_2_1__1__Impl )
            // InternalDockerCompose.g:5609:2: rule__NetworkConnector_long__Group_3_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group_3_2_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_2_1__1"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_2_1__1__Impl"
    // InternalDockerCompose.g:5615:1: rule__NetworkConnector_long__Group_3_2_1__1__Impl : ( ( rule__NetworkConnector_long__AliasesAssignment_3_2_1_1 ) ) ;
    public final void rule__NetworkConnector_long__Group_3_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5619:1: ( ( ( rule__NetworkConnector_long__AliasesAssignment_3_2_1_1 ) ) )
            // InternalDockerCompose.g:5620:1: ( ( rule__NetworkConnector_long__AliasesAssignment_3_2_1_1 ) )
            {
            // InternalDockerCompose.g:5620:1: ( ( rule__NetworkConnector_long__AliasesAssignment_3_2_1_1 ) )
            // InternalDockerCompose.g:5621:2: ( rule__NetworkConnector_long__AliasesAssignment_3_2_1_1 )
            {
             before(grammarAccess.getNetworkConnector_longAccess().getAliasesAssignment_3_2_1_1()); 
            // InternalDockerCompose.g:5622:2: ( rule__NetworkConnector_long__AliasesAssignment_3_2_1_1 )
            // InternalDockerCompose.g:5622:3: rule__NetworkConnector_long__AliasesAssignment_3_2_1_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__AliasesAssignment_3_2_1_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnector_longAccess().getAliasesAssignment_3_2_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_2_1__1__Impl"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_3__0"
    // InternalDockerCompose.g:5631:1: rule__NetworkConnector_long__Group_3_3__0 : rule__NetworkConnector_long__Group_3_3__0__Impl rule__NetworkConnector_long__Group_3_3__1 ;
    public final void rule__NetworkConnector_long__Group_3_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5635:1: ( rule__NetworkConnector_long__Group_3_3__0__Impl rule__NetworkConnector_long__Group_3_3__1 )
            // InternalDockerCompose.g:5636:2: rule__NetworkConnector_long__Group_3_3__0__Impl rule__NetworkConnector_long__Group_3_3__1
            {
            pushFollow(FOLLOW_17);
            rule__NetworkConnector_long__Group_3_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group_3_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_3__0"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_3__0__Impl"
    // InternalDockerCompose.g:5643:1: rule__NetworkConnector_long__Group_3_3__0__Impl : ( 'link_local_ips:' ) ;
    public final void rule__NetworkConnector_long__Group_3_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5647:1: ( ( 'link_local_ips:' ) )
            // InternalDockerCompose.g:5648:1: ( 'link_local_ips:' )
            {
            // InternalDockerCompose.g:5648:1: ( 'link_local_ips:' )
            // InternalDockerCompose.g:5649:2: 'link_local_ips:'
            {
             before(grammarAccess.getNetworkConnector_longAccess().getLink_local_ipsKeyword_3_3_0()); 
            match(input,70,FOLLOW_2); 
             after(grammarAccess.getNetworkConnector_longAccess().getLink_local_ipsKeyword_3_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_3__0__Impl"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_3__1"
    // InternalDockerCompose.g:5658:1: rule__NetworkConnector_long__Group_3_3__1 : rule__NetworkConnector_long__Group_3_3__1__Impl ;
    public final void rule__NetworkConnector_long__Group_3_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5662:1: ( rule__NetworkConnector_long__Group_3_3__1__Impl )
            // InternalDockerCompose.g:5663:2: rule__NetworkConnector_long__Group_3_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group_3_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_3__1"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_3__1__Impl"
    // InternalDockerCompose.g:5669:1: rule__NetworkConnector_long__Group_3_3__1__Impl : ( ( ( rule__NetworkConnector_long__Group_3_3_1__0 ) ) ( ( rule__NetworkConnector_long__Group_3_3_1__0 )* ) ) ;
    public final void rule__NetworkConnector_long__Group_3_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5673:1: ( ( ( ( rule__NetworkConnector_long__Group_3_3_1__0 ) ) ( ( rule__NetworkConnector_long__Group_3_3_1__0 )* ) ) )
            // InternalDockerCompose.g:5674:1: ( ( ( rule__NetworkConnector_long__Group_3_3_1__0 ) ) ( ( rule__NetworkConnector_long__Group_3_3_1__0 )* ) )
            {
            // InternalDockerCompose.g:5674:1: ( ( ( rule__NetworkConnector_long__Group_3_3_1__0 ) ) ( ( rule__NetworkConnector_long__Group_3_3_1__0 )* ) )
            // InternalDockerCompose.g:5675:2: ( ( rule__NetworkConnector_long__Group_3_3_1__0 ) ) ( ( rule__NetworkConnector_long__Group_3_3_1__0 )* )
            {
            // InternalDockerCompose.g:5675:2: ( ( rule__NetworkConnector_long__Group_3_3_1__0 ) )
            // InternalDockerCompose.g:5676:3: ( rule__NetworkConnector_long__Group_3_3_1__0 )
            {
             before(grammarAccess.getNetworkConnector_longAccess().getGroup_3_3_1()); 
            // InternalDockerCompose.g:5677:3: ( rule__NetworkConnector_long__Group_3_3_1__0 )
            // InternalDockerCompose.g:5677:4: rule__NetworkConnector_long__Group_3_3_1__0
            {
            pushFollow(FOLLOW_5);
            rule__NetworkConnector_long__Group_3_3_1__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnector_longAccess().getGroup_3_3_1()); 

            }

            // InternalDockerCompose.g:5680:2: ( ( rule__NetworkConnector_long__Group_3_3_1__0 )* )
            // InternalDockerCompose.g:5681:3: ( rule__NetworkConnector_long__Group_3_3_1__0 )*
            {
             before(grammarAccess.getNetworkConnector_longAccess().getGroup_3_3_1()); 
            // InternalDockerCompose.g:5682:3: ( rule__NetworkConnector_long__Group_3_3_1__0 )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( (LA65_0==19) ) {
                    alt65=1;
                }


                switch (alt65) {
            	case 1 :
            	    // InternalDockerCompose.g:5682:4: rule__NetworkConnector_long__Group_3_3_1__0
            	    {
            	    pushFollow(FOLLOW_5);
            	    rule__NetworkConnector_long__Group_3_3_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);

             after(grammarAccess.getNetworkConnector_longAccess().getGroup_3_3_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_3__1__Impl"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_3_1__0"
    // InternalDockerCompose.g:5692:1: rule__NetworkConnector_long__Group_3_3_1__0 : rule__NetworkConnector_long__Group_3_3_1__0__Impl rule__NetworkConnector_long__Group_3_3_1__1 ;
    public final void rule__NetworkConnector_long__Group_3_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5696:1: ( rule__NetworkConnector_long__Group_3_3_1__0__Impl rule__NetworkConnector_long__Group_3_3_1__1 )
            // InternalDockerCompose.g:5697:2: rule__NetworkConnector_long__Group_3_3_1__0__Impl rule__NetworkConnector_long__Group_3_3_1__1
            {
            pushFollow(FOLLOW_23);
            rule__NetworkConnector_long__Group_3_3_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group_3_3_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_3_1__0"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_3_1__0__Impl"
    // InternalDockerCompose.g:5704:1: rule__NetworkConnector_long__Group_3_3_1__0__Impl : ( '-' ) ;
    public final void rule__NetworkConnector_long__Group_3_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5708:1: ( ( '-' ) )
            // InternalDockerCompose.g:5709:1: ( '-' )
            {
            // InternalDockerCompose.g:5709:1: ( '-' )
            // InternalDockerCompose.g:5710:2: '-'
            {
             before(grammarAccess.getNetworkConnector_longAccess().getHyphenMinusKeyword_3_3_1_0()); 
            match(input,19,FOLLOW_2); 
             after(grammarAccess.getNetworkConnector_longAccess().getHyphenMinusKeyword_3_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_3_1__0__Impl"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_3_1__1"
    // InternalDockerCompose.g:5719:1: rule__NetworkConnector_long__Group_3_3_1__1 : rule__NetworkConnector_long__Group_3_3_1__1__Impl ;
    public final void rule__NetworkConnector_long__Group_3_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5723:1: ( rule__NetworkConnector_long__Group_3_3_1__1__Impl )
            // InternalDockerCompose.g:5724:2: rule__NetworkConnector_long__Group_3_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group_3_3_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_3_1__1"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_3_1__1__Impl"
    // InternalDockerCompose.g:5730:1: rule__NetworkConnector_long__Group_3_3_1__1__Impl : ( ( rule__NetworkConnector_long__Link_local_ipsAssignment_3_3_1_1 ) ) ;
    public final void rule__NetworkConnector_long__Group_3_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5734:1: ( ( ( rule__NetworkConnector_long__Link_local_ipsAssignment_3_3_1_1 ) ) )
            // InternalDockerCompose.g:5735:1: ( ( rule__NetworkConnector_long__Link_local_ipsAssignment_3_3_1_1 ) )
            {
            // InternalDockerCompose.g:5735:1: ( ( rule__NetworkConnector_long__Link_local_ipsAssignment_3_3_1_1 ) )
            // InternalDockerCompose.g:5736:2: ( rule__NetworkConnector_long__Link_local_ipsAssignment_3_3_1_1 )
            {
             before(grammarAccess.getNetworkConnector_longAccess().getLink_local_ipsAssignment_3_3_1_1()); 
            // InternalDockerCompose.g:5737:2: ( rule__NetworkConnector_long__Link_local_ipsAssignment_3_3_1_1 )
            // InternalDockerCompose.g:5737:3: rule__NetworkConnector_long__Link_local_ipsAssignment_3_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Link_local_ipsAssignment_3_3_1_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnector_longAccess().getLink_local_ipsAssignment_3_3_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_3_1__1__Impl"


    // $ANTLR start "rule__NetworkConnector_short__Group__0"
    // InternalDockerCompose.g:5746:1: rule__NetworkConnector_short__Group__0 : rule__NetworkConnector_short__Group__0__Impl rule__NetworkConnector_short__Group__1 ;
    public final void rule__NetworkConnector_short__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5750:1: ( rule__NetworkConnector_short__Group__0__Impl rule__NetworkConnector_short__Group__1 )
            // InternalDockerCompose.g:5751:2: rule__NetworkConnector_short__Group__0__Impl rule__NetworkConnector_short__Group__1
            {
            pushFollow(FOLLOW_17);
            rule__NetworkConnector_short__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector_short__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_short__Group__0"


    // $ANTLR start "rule__NetworkConnector_short__Group__0__Impl"
    // InternalDockerCompose.g:5758:1: rule__NetworkConnector_short__Group__0__Impl : ( () ) ;
    public final void rule__NetworkConnector_short__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5762:1: ( ( () ) )
            // InternalDockerCompose.g:5763:1: ( () )
            {
            // InternalDockerCompose.g:5763:1: ( () )
            // InternalDockerCompose.g:5764:2: ()
            {
             before(grammarAccess.getNetworkConnector_shortAccess().getNetworkConnectorAction_0()); 
            // InternalDockerCompose.g:5765:2: ()
            // InternalDockerCompose.g:5765:3: 
            {
            }

             after(grammarAccess.getNetworkConnector_shortAccess().getNetworkConnectorAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_short__Group__0__Impl"


    // $ANTLR start "rule__NetworkConnector_short__Group__1"
    // InternalDockerCompose.g:5773:1: rule__NetworkConnector_short__Group__1 : rule__NetworkConnector_short__Group__1__Impl rule__NetworkConnector_short__Group__2 ;
    public final void rule__NetworkConnector_short__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5777:1: ( rule__NetworkConnector_short__Group__1__Impl rule__NetworkConnector_short__Group__2 )
            // InternalDockerCompose.g:5778:2: rule__NetworkConnector_short__Group__1__Impl rule__NetworkConnector_short__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__NetworkConnector_short__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector_short__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_short__Group__1"


    // $ANTLR start "rule__NetworkConnector_short__Group__1__Impl"
    // InternalDockerCompose.g:5785:1: rule__NetworkConnector_short__Group__1__Impl : ( '-' ) ;
    public final void rule__NetworkConnector_short__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5789:1: ( ( '-' ) )
            // InternalDockerCompose.g:5790:1: ( '-' )
            {
            // InternalDockerCompose.g:5790:1: ( '-' )
            // InternalDockerCompose.g:5791:2: '-'
            {
             before(grammarAccess.getNetworkConnector_shortAccess().getHyphenMinusKeyword_1()); 
            match(input,19,FOLLOW_2); 
             after(grammarAccess.getNetworkConnector_shortAccess().getHyphenMinusKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_short__Group__1__Impl"


    // $ANTLR start "rule__NetworkConnector_short__Group__2"
    // InternalDockerCompose.g:5800:1: rule__NetworkConnector_short__Group__2 : rule__NetworkConnector_short__Group__2__Impl ;
    public final void rule__NetworkConnector_short__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5804:1: ( rule__NetworkConnector_short__Group__2__Impl )
            // InternalDockerCompose.g:5805:2: rule__NetworkConnector_short__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_short__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_short__Group__2"


    // $ANTLR start "rule__NetworkConnector_short__Group__2__Impl"
    // InternalDockerCompose.g:5811:1: rule__NetworkConnector_short__Group__2__Impl : ( ( rule__NetworkConnector_short__NetworkAssignment_2 ) ) ;
    public final void rule__NetworkConnector_short__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5815:1: ( ( ( rule__NetworkConnector_short__NetworkAssignment_2 ) ) )
            // InternalDockerCompose.g:5816:1: ( ( rule__NetworkConnector_short__NetworkAssignment_2 ) )
            {
            // InternalDockerCompose.g:5816:1: ( ( rule__NetworkConnector_short__NetworkAssignment_2 ) )
            // InternalDockerCompose.g:5817:2: ( rule__NetworkConnector_short__NetworkAssignment_2 )
            {
             before(grammarAccess.getNetworkConnector_shortAccess().getNetworkAssignment_2()); 
            // InternalDockerCompose.g:5818:2: ( rule__NetworkConnector_short__NetworkAssignment_2 )
            // InternalDockerCompose.g:5818:3: rule__NetworkConnector_short__NetworkAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_short__NetworkAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnector_shortAccess().getNetworkAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_short__Group__2__Impl"


    // $ANTLR start "rule__Alias__Group__0"
    // InternalDockerCompose.g:5827:1: rule__Alias__Group__0 : rule__Alias__Group__0__Impl rule__Alias__Group__1 ;
    public final void rule__Alias__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5831:1: ( rule__Alias__Group__0__Impl rule__Alias__Group__1 )
            // InternalDockerCompose.g:5832:2: rule__Alias__Group__0__Impl rule__Alias__Group__1
            {
            pushFollow(FOLLOW_14);
            rule__Alias__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Alias__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Alias__Group__0"


    // $ANTLR start "rule__Alias__Group__0__Impl"
    // InternalDockerCompose.g:5839:1: rule__Alias__Group__0__Impl : ( () ) ;
    public final void rule__Alias__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5843:1: ( ( () ) )
            // InternalDockerCompose.g:5844:1: ( () )
            {
            // InternalDockerCompose.g:5844:1: ( () )
            // InternalDockerCompose.g:5845:2: ()
            {
             before(grammarAccess.getAliasAccess().getAliasAction_0()); 
            // InternalDockerCompose.g:5846:2: ()
            // InternalDockerCompose.g:5846:3: 
            {
            }

             after(grammarAccess.getAliasAccess().getAliasAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Alias__Group__0__Impl"


    // $ANTLR start "rule__Alias__Group__1"
    // InternalDockerCompose.g:5854:1: rule__Alias__Group__1 : rule__Alias__Group__1__Impl ;
    public final void rule__Alias__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5858:1: ( rule__Alias__Group__1__Impl )
            // InternalDockerCompose.g:5859:2: rule__Alias__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Alias__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Alias__Group__1"


    // $ANTLR start "rule__Alias__Group__1__Impl"
    // InternalDockerCompose.g:5865:1: rule__Alias__Group__1__Impl : ( ( rule__Alias__AliasAssignment_1 ) ) ;
    public final void rule__Alias__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5869:1: ( ( ( rule__Alias__AliasAssignment_1 ) ) )
            // InternalDockerCompose.g:5870:1: ( ( rule__Alias__AliasAssignment_1 ) )
            {
            // InternalDockerCompose.g:5870:1: ( ( rule__Alias__AliasAssignment_1 ) )
            // InternalDockerCompose.g:5871:2: ( rule__Alias__AliasAssignment_1 )
            {
             before(grammarAccess.getAliasAccess().getAliasAssignment_1()); 
            // InternalDockerCompose.g:5872:2: ( rule__Alias__AliasAssignment_1 )
            // InternalDockerCompose.g:5872:3: rule__Alias__AliasAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Alias__AliasAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getAliasAccess().getAliasAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Alias__Group__1__Impl"


    // $ANTLR start "rule__VolumeConnector__Group__0"
    // InternalDockerCompose.g:5881:1: rule__VolumeConnector__Group__0 : rule__VolumeConnector__Group__0__Impl rule__VolumeConnector__Group__1 ;
    public final void rule__VolumeConnector__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5885:1: ( rule__VolumeConnector__Group__0__Impl rule__VolumeConnector__Group__1 )
            // InternalDockerCompose.g:5886:2: rule__VolumeConnector__Group__0__Impl rule__VolumeConnector__Group__1
            {
            pushFollow(FOLLOW_20);
            rule__VolumeConnector__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group__0"


    // $ANTLR start "rule__VolumeConnector__Group__0__Impl"
    // InternalDockerCompose.g:5893:1: rule__VolumeConnector__Group__0__Impl : ( () ) ;
    public final void rule__VolumeConnector__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5897:1: ( ( () ) )
            // InternalDockerCompose.g:5898:1: ( () )
            {
            // InternalDockerCompose.g:5898:1: ( () )
            // InternalDockerCompose.g:5899:2: ()
            {
             before(grammarAccess.getVolumeConnectorAccess().getVolumeConnectorAction_0()); 
            // InternalDockerCompose.g:5900:2: ()
            // InternalDockerCompose.g:5900:3: 
            {
            }

             after(grammarAccess.getVolumeConnectorAccess().getVolumeConnectorAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group__0__Impl"


    // $ANTLR start "rule__VolumeConnector__Group__1"
    // InternalDockerCompose.g:5908:1: rule__VolumeConnector__Group__1 : rule__VolumeConnector__Group__1__Impl ;
    public final void rule__VolumeConnector__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5912:1: ( rule__VolumeConnector__Group__1__Impl )
            // InternalDockerCompose.g:5913:2: rule__VolumeConnector__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group__1"


    // $ANTLR start "rule__VolumeConnector__Group__1__Impl"
    // InternalDockerCompose.g:5919:1: rule__VolumeConnector__Group__1__Impl : ( ( rule__VolumeConnector__Alternatives_1 ) ) ;
    public final void rule__VolumeConnector__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5923:1: ( ( ( rule__VolumeConnector__Alternatives_1 ) ) )
            // InternalDockerCompose.g:5924:1: ( ( rule__VolumeConnector__Alternatives_1 ) )
            {
            // InternalDockerCompose.g:5924:1: ( ( rule__VolumeConnector__Alternatives_1 ) )
            // InternalDockerCompose.g:5925:2: ( rule__VolumeConnector__Alternatives_1 )
            {
             before(grammarAccess.getVolumeConnectorAccess().getAlternatives_1()); 
            // InternalDockerCompose.g:5926:2: ( rule__VolumeConnector__Alternatives_1 )
            // InternalDockerCompose.g:5926:3: rule__VolumeConnector__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Alternatives_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnectorAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group__1__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_0__0"
    // InternalDockerCompose.g:5935:1: rule__VolumeConnector__Group_1_0__0 : rule__VolumeConnector__Group_1_0__0__Impl rule__VolumeConnector__Group_1_0__1 ;
    public final void rule__VolumeConnector__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5939:1: ( rule__VolumeConnector__Group_1_0__0__Impl rule__VolumeConnector__Group_1_0__1 )
            // InternalDockerCompose.g:5940:2: rule__VolumeConnector__Group_1_0__0__Impl rule__VolumeConnector__Group_1_0__1
            {
            pushFollow(FOLLOW_10);
            rule__VolumeConnector__Group_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_0__0"


    // $ANTLR start "rule__VolumeConnector__Group_1_0__0__Impl"
    // InternalDockerCompose.g:5947:1: rule__VolumeConnector__Group_1_0__0__Impl : ( ( rule__VolumeConnector__VolumeAssignment_1_0_0 ) ) ;
    public final void rule__VolumeConnector__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5951:1: ( ( ( rule__VolumeConnector__VolumeAssignment_1_0_0 ) ) )
            // InternalDockerCompose.g:5952:1: ( ( rule__VolumeConnector__VolumeAssignment_1_0_0 ) )
            {
            // InternalDockerCompose.g:5952:1: ( ( rule__VolumeConnector__VolumeAssignment_1_0_0 ) )
            // InternalDockerCompose.g:5953:2: ( rule__VolumeConnector__VolumeAssignment_1_0_0 )
            {
             before(grammarAccess.getVolumeConnectorAccess().getVolumeAssignment_1_0_0()); 
            // InternalDockerCompose.g:5954:2: ( rule__VolumeConnector__VolumeAssignment_1_0_0 )
            // InternalDockerCompose.g:5954:3: rule__VolumeConnector__VolumeAssignment_1_0_0
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__VolumeAssignment_1_0_0();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnectorAccess().getVolumeAssignment_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_0__0__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_0__1"
    // InternalDockerCompose.g:5962:1: rule__VolumeConnector__Group_1_0__1 : rule__VolumeConnector__Group_1_0__1__Impl rule__VolumeConnector__Group_1_0__2 ;
    public final void rule__VolumeConnector__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5966:1: ( rule__VolumeConnector__Group_1_0__1__Impl rule__VolumeConnector__Group_1_0__2 )
            // InternalDockerCompose.g:5967:2: rule__VolumeConnector__Group_1_0__1__Impl rule__VolumeConnector__Group_1_0__2
            {
            pushFollow(FOLLOW_12);
            rule__VolumeConnector__Group_1_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_0__1"


    // $ANTLR start "rule__VolumeConnector__Group_1_0__1__Impl"
    // InternalDockerCompose.g:5974:1: rule__VolumeConnector__Group_1_0__1__Impl : ( ':' ) ;
    public final void rule__VolumeConnector__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5978:1: ( ( ':' ) )
            // InternalDockerCompose.g:5979:1: ( ':' )
            {
            // InternalDockerCompose.g:5979:1: ( ':' )
            // InternalDockerCompose.g:5980:2: ':'
            {
             before(grammarAccess.getVolumeConnectorAccess().getColonKeyword_1_0_1()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getVolumeConnectorAccess().getColonKeyword_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_0__1__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_0__2"
    // InternalDockerCompose.g:5989:1: rule__VolumeConnector__Group_1_0__2 : rule__VolumeConnector__Group_1_0__2__Impl rule__VolumeConnector__Group_1_0__3 ;
    public final void rule__VolumeConnector__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5993:1: ( rule__VolumeConnector__Group_1_0__2__Impl rule__VolumeConnector__Group_1_0__3 )
            // InternalDockerCompose.g:5994:2: rule__VolumeConnector__Group_1_0__2__Impl rule__VolumeConnector__Group_1_0__3
            {
            pushFollow(FOLLOW_10);
            rule__VolumeConnector__Group_1_0__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_0__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_0__2"


    // $ANTLR start "rule__VolumeConnector__Group_1_0__2__Impl"
    // InternalDockerCompose.g:6001:1: rule__VolumeConnector__Group_1_0__2__Impl : ( ( rule__VolumeConnector__Container_pathAssignment_1_0_2 ) ) ;
    public final void rule__VolumeConnector__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6005:1: ( ( ( rule__VolumeConnector__Container_pathAssignment_1_0_2 ) ) )
            // InternalDockerCompose.g:6006:1: ( ( rule__VolumeConnector__Container_pathAssignment_1_0_2 ) )
            {
            // InternalDockerCompose.g:6006:1: ( ( rule__VolumeConnector__Container_pathAssignment_1_0_2 ) )
            // InternalDockerCompose.g:6007:2: ( rule__VolumeConnector__Container_pathAssignment_1_0_2 )
            {
             before(grammarAccess.getVolumeConnectorAccess().getContainer_pathAssignment_1_0_2()); 
            // InternalDockerCompose.g:6008:2: ( rule__VolumeConnector__Container_pathAssignment_1_0_2 )
            // InternalDockerCompose.g:6008:3: rule__VolumeConnector__Container_pathAssignment_1_0_2
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Container_pathAssignment_1_0_2();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnectorAccess().getContainer_pathAssignment_1_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_0__2__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_0__3"
    // InternalDockerCompose.g:6016:1: rule__VolumeConnector__Group_1_0__3 : rule__VolumeConnector__Group_1_0__3__Impl ;
    public final void rule__VolumeConnector__Group_1_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6020:1: ( rule__VolumeConnector__Group_1_0__3__Impl )
            // InternalDockerCompose.g:6021:2: rule__VolumeConnector__Group_1_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_0__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_0__3"


    // $ANTLR start "rule__VolumeConnector__Group_1_0__3__Impl"
    // InternalDockerCompose.g:6027:1: rule__VolumeConnector__Group_1_0__3__Impl : ( ( rule__VolumeConnector__Group_1_0_3__0 )? ) ;
    public final void rule__VolumeConnector__Group_1_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6031:1: ( ( ( rule__VolumeConnector__Group_1_0_3__0 )? ) )
            // InternalDockerCompose.g:6032:1: ( ( rule__VolumeConnector__Group_1_0_3__0 )? )
            {
            // InternalDockerCompose.g:6032:1: ( ( rule__VolumeConnector__Group_1_0_3__0 )? )
            // InternalDockerCompose.g:6033:2: ( rule__VolumeConnector__Group_1_0_3__0 )?
            {
             before(grammarAccess.getVolumeConnectorAccess().getGroup_1_0_3()); 
            // InternalDockerCompose.g:6034:2: ( rule__VolumeConnector__Group_1_0_3__0 )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==48) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalDockerCompose.g:6034:3: rule__VolumeConnector__Group_1_0_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector__Group_1_0_3__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getVolumeConnectorAccess().getGroup_1_0_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_0__3__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_0_3__0"
    // InternalDockerCompose.g:6043:1: rule__VolumeConnector__Group_1_0_3__0 : rule__VolumeConnector__Group_1_0_3__0__Impl rule__VolumeConnector__Group_1_0_3__1 ;
    public final void rule__VolumeConnector__Group_1_0_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6047:1: ( rule__VolumeConnector__Group_1_0_3__0__Impl rule__VolumeConnector__Group_1_0_3__1 )
            // InternalDockerCompose.g:6048:2: rule__VolumeConnector__Group_1_0_3__0__Impl rule__VolumeConnector__Group_1_0_3__1
            {
            pushFollow(FOLLOW_37);
            rule__VolumeConnector__Group_1_0_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_0_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_0_3__0"


    // $ANTLR start "rule__VolumeConnector__Group_1_0_3__0__Impl"
    // InternalDockerCompose.g:6055:1: rule__VolumeConnector__Group_1_0_3__0__Impl : ( ':' ) ;
    public final void rule__VolumeConnector__Group_1_0_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6059:1: ( ( ':' ) )
            // InternalDockerCompose.g:6060:1: ( ':' )
            {
            // InternalDockerCompose.g:6060:1: ( ':' )
            // InternalDockerCompose.g:6061:2: ':'
            {
             before(grammarAccess.getVolumeConnectorAccess().getColonKeyword_1_0_3_0()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getVolumeConnectorAccess().getColonKeyword_1_0_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_0_3__0__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_0_3__1"
    // InternalDockerCompose.g:6070:1: rule__VolumeConnector__Group_1_0_3__1 : rule__VolumeConnector__Group_1_0_3__1__Impl ;
    public final void rule__VolumeConnector__Group_1_0_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6074:1: ( rule__VolumeConnector__Group_1_0_3__1__Impl )
            // InternalDockerCompose.g:6075:2: rule__VolumeConnector__Group_1_0_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_0_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_0_3__1"


    // $ANTLR start "rule__VolumeConnector__Group_1_0_3__1__Impl"
    // InternalDockerCompose.g:6081:1: rule__VolumeConnector__Group_1_0_3__1__Impl : ( ( rule__VolumeConnector__Access_modeAssignment_1_0_3_1 ) ) ;
    public final void rule__VolumeConnector__Group_1_0_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6085:1: ( ( ( rule__VolumeConnector__Access_modeAssignment_1_0_3_1 ) ) )
            // InternalDockerCompose.g:6086:1: ( ( rule__VolumeConnector__Access_modeAssignment_1_0_3_1 ) )
            {
            // InternalDockerCompose.g:6086:1: ( ( rule__VolumeConnector__Access_modeAssignment_1_0_3_1 ) )
            // InternalDockerCompose.g:6087:2: ( rule__VolumeConnector__Access_modeAssignment_1_0_3_1 )
            {
             before(grammarAccess.getVolumeConnectorAccess().getAccess_modeAssignment_1_0_3_1()); 
            // InternalDockerCompose.g:6088:2: ( rule__VolumeConnector__Access_modeAssignment_1_0_3_1 )
            // InternalDockerCompose.g:6088:3: rule__VolumeConnector__Access_modeAssignment_1_0_3_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Access_modeAssignment_1_0_3_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnectorAccess().getAccess_modeAssignment_1_0_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_0_3__1__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_0__0"
    // InternalDockerCompose.g:6097:1: rule__VolumeConnector__Group_1_1_0__0 : rule__VolumeConnector__Group_1_1_0__0__Impl rule__VolumeConnector__Group_1_1_0__1 ;
    public final void rule__VolumeConnector__Group_1_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6101:1: ( rule__VolumeConnector__Group_1_1_0__0__Impl rule__VolumeConnector__Group_1_1_0__1 )
            // InternalDockerCompose.g:6102:2: rule__VolumeConnector__Group_1_1_0__0__Impl rule__VolumeConnector__Group_1_1_0__1
            {
            pushFollow(FOLLOW_7);
            rule__VolumeConnector__Group_1_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_0__0"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_0__0__Impl"
    // InternalDockerCompose.g:6109:1: rule__VolumeConnector__Group_1_1_0__0__Impl : ( 'source:' ) ;
    public final void rule__VolumeConnector__Group_1_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6113:1: ( ( 'source:' ) )
            // InternalDockerCompose.g:6114:1: ( 'source:' )
            {
            // InternalDockerCompose.g:6114:1: ( 'source:' )
            // InternalDockerCompose.g:6115:2: 'source:'
            {
             before(grammarAccess.getVolumeConnectorAccess().getSourceKeyword_1_1_0_0()); 
            match(input,71,FOLLOW_2); 
             after(grammarAccess.getVolumeConnectorAccess().getSourceKeyword_1_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_0__0__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_0__1"
    // InternalDockerCompose.g:6124:1: rule__VolumeConnector__Group_1_1_0__1 : rule__VolumeConnector__Group_1_1_0__1__Impl ;
    public final void rule__VolumeConnector__Group_1_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6128:1: ( rule__VolumeConnector__Group_1_1_0__1__Impl )
            // InternalDockerCompose.g:6129:2: rule__VolumeConnector__Group_1_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_0__1"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_0__1__Impl"
    // InternalDockerCompose.g:6135:1: rule__VolumeConnector__Group_1_1_0__1__Impl : ( ( rule__VolumeConnector__VolumeAssignment_1_1_0_1 ) ) ;
    public final void rule__VolumeConnector__Group_1_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6139:1: ( ( ( rule__VolumeConnector__VolumeAssignment_1_1_0_1 ) ) )
            // InternalDockerCompose.g:6140:1: ( ( rule__VolumeConnector__VolumeAssignment_1_1_0_1 ) )
            {
            // InternalDockerCompose.g:6140:1: ( ( rule__VolumeConnector__VolumeAssignment_1_1_0_1 ) )
            // InternalDockerCompose.g:6141:2: ( rule__VolumeConnector__VolumeAssignment_1_1_0_1 )
            {
             before(grammarAccess.getVolumeConnectorAccess().getVolumeAssignment_1_1_0_1()); 
            // InternalDockerCompose.g:6142:2: ( rule__VolumeConnector__VolumeAssignment_1_1_0_1 )
            // InternalDockerCompose.g:6142:3: rule__VolumeConnector__VolumeAssignment_1_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__VolumeAssignment_1_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnectorAccess().getVolumeAssignment_1_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_0__1__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_1__0"
    // InternalDockerCompose.g:6151:1: rule__VolumeConnector__Group_1_1_1__0 : rule__VolumeConnector__Group_1_1_1__0__Impl rule__VolumeConnector__Group_1_1_1__1 ;
    public final void rule__VolumeConnector__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6155:1: ( rule__VolumeConnector__Group_1_1_1__0__Impl rule__VolumeConnector__Group_1_1_1__1 )
            // InternalDockerCompose.g:6156:2: rule__VolumeConnector__Group_1_1_1__0__Impl rule__VolumeConnector__Group_1_1_1__1
            {
            pushFollow(FOLLOW_38);
            rule__VolumeConnector__Group_1_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_1__0"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_1__0__Impl"
    // InternalDockerCompose.g:6163:1: rule__VolumeConnector__Group_1_1_1__0__Impl : ( 'type:' ) ;
    public final void rule__VolumeConnector__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6167:1: ( ( 'type:' ) )
            // InternalDockerCompose.g:6168:1: ( 'type:' )
            {
            // InternalDockerCompose.g:6168:1: ( 'type:' )
            // InternalDockerCompose.g:6169:2: 'type:'
            {
             before(grammarAccess.getVolumeConnectorAccess().getTypeKeyword_1_1_1_0()); 
            match(input,72,FOLLOW_2); 
             after(grammarAccess.getVolumeConnectorAccess().getTypeKeyword_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_1__1"
    // InternalDockerCompose.g:6178:1: rule__VolumeConnector__Group_1_1_1__1 : rule__VolumeConnector__Group_1_1_1__1__Impl ;
    public final void rule__VolumeConnector__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6182:1: ( rule__VolumeConnector__Group_1_1_1__1__Impl )
            // InternalDockerCompose.g:6183:2: rule__VolumeConnector__Group_1_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_1__1"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_1__1__Impl"
    // InternalDockerCompose.g:6189:1: rule__VolumeConnector__Group_1_1_1__1__Impl : ( ( rule__VolumeConnector__TypeAssignment_1_1_1_1 ) ) ;
    public final void rule__VolumeConnector__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6193:1: ( ( ( rule__VolumeConnector__TypeAssignment_1_1_1_1 ) ) )
            // InternalDockerCompose.g:6194:1: ( ( rule__VolumeConnector__TypeAssignment_1_1_1_1 ) )
            {
            // InternalDockerCompose.g:6194:1: ( ( rule__VolumeConnector__TypeAssignment_1_1_1_1 ) )
            // InternalDockerCompose.g:6195:2: ( rule__VolumeConnector__TypeAssignment_1_1_1_1 )
            {
             before(grammarAccess.getVolumeConnectorAccess().getTypeAssignment_1_1_1_1()); 
            // InternalDockerCompose.g:6196:2: ( rule__VolumeConnector__TypeAssignment_1_1_1_1 )
            // InternalDockerCompose.g:6196:3: rule__VolumeConnector__TypeAssignment_1_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__TypeAssignment_1_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnectorAccess().getTypeAssignment_1_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_2__0"
    // InternalDockerCompose.g:6205:1: rule__VolumeConnector__Group_1_1_2__0 : rule__VolumeConnector__Group_1_1_2__0__Impl rule__VolumeConnector__Group_1_1_2__1 ;
    public final void rule__VolumeConnector__Group_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6209:1: ( rule__VolumeConnector__Group_1_1_2__0__Impl rule__VolumeConnector__Group_1_1_2__1 )
            // InternalDockerCompose.g:6210:2: rule__VolumeConnector__Group_1_1_2__0__Impl rule__VolumeConnector__Group_1_1_2__1
            {
            pushFollow(FOLLOW_12);
            rule__VolumeConnector__Group_1_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_2__0"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_2__0__Impl"
    // InternalDockerCompose.g:6217:1: rule__VolumeConnector__Group_1_1_2__0__Impl : ( 'target:' ) ;
    public final void rule__VolumeConnector__Group_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6221:1: ( ( 'target:' ) )
            // InternalDockerCompose.g:6222:1: ( 'target:' )
            {
            // InternalDockerCompose.g:6222:1: ( 'target:' )
            // InternalDockerCompose.g:6223:2: 'target:'
            {
             before(grammarAccess.getVolumeConnectorAccess().getTargetKeyword_1_1_2_0()); 
            match(input,73,FOLLOW_2); 
             after(grammarAccess.getVolumeConnectorAccess().getTargetKeyword_1_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_2__0__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_2__1"
    // InternalDockerCompose.g:6232:1: rule__VolumeConnector__Group_1_1_2__1 : rule__VolumeConnector__Group_1_1_2__1__Impl ;
    public final void rule__VolumeConnector__Group_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6236:1: ( rule__VolumeConnector__Group_1_1_2__1__Impl )
            // InternalDockerCompose.g:6237:2: rule__VolumeConnector__Group_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_2__1"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_2__1__Impl"
    // InternalDockerCompose.g:6243:1: rule__VolumeConnector__Group_1_1_2__1__Impl : ( ( rule__VolumeConnector__Container_pathAssignment_1_1_2_1 ) ) ;
    public final void rule__VolumeConnector__Group_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6247:1: ( ( ( rule__VolumeConnector__Container_pathAssignment_1_1_2_1 ) ) )
            // InternalDockerCompose.g:6248:1: ( ( rule__VolumeConnector__Container_pathAssignment_1_1_2_1 ) )
            {
            // InternalDockerCompose.g:6248:1: ( ( rule__VolumeConnector__Container_pathAssignment_1_1_2_1 ) )
            // InternalDockerCompose.g:6249:2: ( rule__VolumeConnector__Container_pathAssignment_1_1_2_1 )
            {
             before(grammarAccess.getVolumeConnectorAccess().getContainer_pathAssignment_1_1_2_1()); 
            // InternalDockerCompose.g:6250:2: ( rule__VolumeConnector__Container_pathAssignment_1_1_2_1 )
            // InternalDockerCompose.g:6250:3: rule__VolumeConnector__Container_pathAssignment_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Container_pathAssignment_1_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnectorAccess().getContainer_pathAssignment_1_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_2__1__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_3__0"
    // InternalDockerCompose.g:6259:1: rule__VolumeConnector__Group_1_1_3__0 : rule__VolumeConnector__Group_1_1_3__0__Impl rule__VolumeConnector__Group_1_1_3__1 ;
    public final void rule__VolumeConnector__Group_1_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6263:1: ( rule__VolumeConnector__Group_1_1_3__0__Impl rule__VolumeConnector__Group_1_1_3__1 )
            // InternalDockerCompose.g:6264:2: rule__VolumeConnector__Group_1_1_3__0__Impl rule__VolumeConnector__Group_1_1_3__1
            {
            pushFollow(FOLLOW_16);
            rule__VolumeConnector__Group_1_1_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_3__0"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_3__0__Impl"
    // InternalDockerCompose.g:6271:1: rule__VolumeConnector__Group_1_1_3__0__Impl : ( 'read_only:' ) ;
    public final void rule__VolumeConnector__Group_1_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6275:1: ( ( 'read_only:' ) )
            // InternalDockerCompose.g:6276:1: ( 'read_only:' )
            {
            // InternalDockerCompose.g:6276:1: ( 'read_only:' )
            // InternalDockerCompose.g:6277:2: 'read_only:'
            {
             before(grammarAccess.getVolumeConnectorAccess().getRead_onlyKeyword_1_1_3_0()); 
            match(input,56,FOLLOW_2); 
             after(grammarAccess.getVolumeConnectorAccess().getRead_onlyKeyword_1_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_3__0__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_3__1"
    // InternalDockerCompose.g:6286:1: rule__VolumeConnector__Group_1_1_3__1 : rule__VolumeConnector__Group_1_1_3__1__Impl ;
    public final void rule__VolumeConnector__Group_1_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6290:1: ( rule__VolumeConnector__Group_1_1_3__1__Impl )
            // InternalDockerCompose.g:6291:2: rule__VolumeConnector__Group_1_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_3__1"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_3__1__Impl"
    // InternalDockerCompose.g:6297:1: rule__VolumeConnector__Group_1_1_3__1__Impl : ( ( rule__VolumeConnector__Read_onlyAssignment_1_1_3_1 ) ) ;
    public final void rule__VolumeConnector__Group_1_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6301:1: ( ( ( rule__VolumeConnector__Read_onlyAssignment_1_1_3_1 ) ) )
            // InternalDockerCompose.g:6302:1: ( ( rule__VolumeConnector__Read_onlyAssignment_1_1_3_1 ) )
            {
            // InternalDockerCompose.g:6302:1: ( ( rule__VolumeConnector__Read_onlyAssignment_1_1_3_1 ) )
            // InternalDockerCompose.g:6303:2: ( rule__VolumeConnector__Read_onlyAssignment_1_1_3_1 )
            {
             before(grammarAccess.getVolumeConnectorAccess().getRead_onlyAssignment_1_1_3_1()); 
            // InternalDockerCompose.g:6304:2: ( rule__VolumeConnector__Read_onlyAssignment_1_1_3_1 )
            // InternalDockerCompose.g:6304:3: rule__VolumeConnector__Read_onlyAssignment_1_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Read_onlyAssignment_1_1_3_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnectorAccess().getRead_onlyAssignment_1_1_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_3__1__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_4__0"
    // InternalDockerCompose.g:6313:1: rule__VolumeConnector__Group_1_1_4__0 : rule__VolumeConnector__Group_1_1_4__0__Impl rule__VolumeConnector__Group_1_1_4__1 ;
    public final void rule__VolumeConnector__Group_1_1_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6317:1: ( rule__VolumeConnector__Group_1_1_4__0__Impl rule__VolumeConnector__Group_1_1_4__1 )
            // InternalDockerCompose.g:6318:2: rule__VolumeConnector__Group_1_1_4__0__Impl rule__VolumeConnector__Group_1_1_4__1
            {
            pushFollow(FOLLOW_39);
            rule__VolumeConnector__Group_1_1_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_4__0"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_4__0__Impl"
    // InternalDockerCompose.g:6325:1: rule__VolumeConnector__Group_1_1_4__0__Impl : ( 'bind:' ) ;
    public final void rule__VolumeConnector__Group_1_1_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6329:1: ( ( 'bind:' ) )
            // InternalDockerCompose.g:6330:1: ( 'bind:' )
            {
            // InternalDockerCompose.g:6330:1: ( 'bind:' )
            // InternalDockerCompose.g:6331:2: 'bind:'
            {
             before(grammarAccess.getVolumeConnectorAccess().getBindKeyword_1_1_4_0()); 
            match(input,74,FOLLOW_2); 
             after(grammarAccess.getVolumeConnectorAccess().getBindKeyword_1_1_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_4__0__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_4__1"
    // InternalDockerCompose.g:6340:1: rule__VolumeConnector__Group_1_1_4__1 : rule__VolumeConnector__Group_1_1_4__1__Impl rule__VolumeConnector__Group_1_1_4__2 ;
    public final void rule__VolumeConnector__Group_1_1_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6344:1: ( rule__VolumeConnector__Group_1_1_4__1__Impl rule__VolumeConnector__Group_1_1_4__2 )
            // InternalDockerCompose.g:6345:2: rule__VolumeConnector__Group_1_1_4__1__Impl rule__VolumeConnector__Group_1_1_4__2
            {
            pushFollow(FOLLOW_40);
            rule__VolumeConnector__Group_1_1_4__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_4__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_4__1"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_4__1__Impl"
    // InternalDockerCompose.g:6352:1: rule__VolumeConnector__Group_1_1_4__1__Impl : ( 'propagation:' ) ;
    public final void rule__VolumeConnector__Group_1_1_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6356:1: ( ( 'propagation:' ) )
            // InternalDockerCompose.g:6357:1: ( 'propagation:' )
            {
            // InternalDockerCompose.g:6357:1: ( 'propagation:' )
            // InternalDockerCompose.g:6358:2: 'propagation:'
            {
             before(grammarAccess.getVolumeConnectorAccess().getPropagationKeyword_1_1_4_1()); 
            match(input,75,FOLLOW_2); 
             after(grammarAccess.getVolumeConnectorAccess().getPropagationKeyword_1_1_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_4__1__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_4__2"
    // InternalDockerCompose.g:6367:1: rule__VolumeConnector__Group_1_1_4__2 : rule__VolumeConnector__Group_1_1_4__2__Impl ;
    public final void rule__VolumeConnector__Group_1_1_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6371:1: ( rule__VolumeConnector__Group_1_1_4__2__Impl )
            // InternalDockerCompose.g:6372:2: rule__VolumeConnector__Group_1_1_4__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_4__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_4__2"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_4__2__Impl"
    // InternalDockerCompose.g:6378:1: rule__VolumeConnector__Group_1_1_4__2__Impl : ( ( rule__VolumeConnector__PropagationAssignment_1_1_4_2 ) ) ;
    public final void rule__VolumeConnector__Group_1_1_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6382:1: ( ( ( rule__VolumeConnector__PropagationAssignment_1_1_4_2 ) ) )
            // InternalDockerCompose.g:6383:1: ( ( rule__VolumeConnector__PropagationAssignment_1_1_4_2 ) )
            {
            // InternalDockerCompose.g:6383:1: ( ( rule__VolumeConnector__PropagationAssignment_1_1_4_2 ) )
            // InternalDockerCompose.g:6384:2: ( rule__VolumeConnector__PropagationAssignment_1_1_4_2 )
            {
             before(grammarAccess.getVolumeConnectorAccess().getPropagationAssignment_1_1_4_2()); 
            // InternalDockerCompose.g:6385:2: ( rule__VolumeConnector__PropagationAssignment_1_1_4_2 )
            // InternalDockerCompose.g:6385:3: rule__VolumeConnector__PropagationAssignment_1_1_4_2
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__PropagationAssignment_1_1_4_2();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnectorAccess().getPropagationAssignment_1_1_4_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_4__2__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_5__0"
    // InternalDockerCompose.g:6394:1: rule__VolumeConnector__Group_1_1_5__0 : rule__VolumeConnector__Group_1_1_5__0__Impl rule__VolumeConnector__Group_1_1_5__1 ;
    public final void rule__VolumeConnector__Group_1_1_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6398:1: ( rule__VolumeConnector__Group_1_1_5__0__Impl rule__VolumeConnector__Group_1_1_5__1 )
            // InternalDockerCompose.g:6399:2: rule__VolumeConnector__Group_1_1_5__0__Impl rule__VolumeConnector__Group_1_1_5__1
            {
            pushFollow(FOLLOW_41);
            rule__VolumeConnector__Group_1_1_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_5__0"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_5__0__Impl"
    // InternalDockerCompose.g:6406:1: rule__VolumeConnector__Group_1_1_5__0__Impl : ( 'volume:' ) ;
    public final void rule__VolumeConnector__Group_1_1_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6410:1: ( ( 'volume:' ) )
            // InternalDockerCompose.g:6411:1: ( 'volume:' )
            {
            // InternalDockerCompose.g:6411:1: ( 'volume:' )
            // InternalDockerCompose.g:6412:2: 'volume:'
            {
             before(grammarAccess.getVolumeConnectorAccess().getVolumeKeyword_1_1_5_0()); 
            match(input,76,FOLLOW_2); 
             after(grammarAccess.getVolumeConnectorAccess().getVolumeKeyword_1_1_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_5__0__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_5__1"
    // InternalDockerCompose.g:6421:1: rule__VolumeConnector__Group_1_1_5__1 : rule__VolumeConnector__Group_1_1_5__1__Impl rule__VolumeConnector__Group_1_1_5__2 ;
    public final void rule__VolumeConnector__Group_1_1_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6425:1: ( rule__VolumeConnector__Group_1_1_5__1__Impl rule__VolumeConnector__Group_1_1_5__2 )
            // InternalDockerCompose.g:6426:2: rule__VolumeConnector__Group_1_1_5__1__Impl rule__VolumeConnector__Group_1_1_5__2
            {
            pushFollow(FOLLOW_16);
            rule__VolumeConnector__Group_1_1_5__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_5__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_5__1"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_5__1__Impl"
    // InternalDockerCompose.g:6433:1: rule__VolumeConnector__Group_1_1_5__1__Impl : ( 'nocopy:' ) ;
    public final void rule__VolumeConnector__Group_1_1_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6437:1: ( ( 'nocopy:' ) )
            // InternalDockerCompose.g:6438:1: ( 'nocopy:' )
            {
            // InternalDockerCompose.g:6438:1: ( 'nocopy:' )
            // InternalDockerCompose.g:6439:2: 'nocopy:'
            {
             before(grammarAccess.getVolumeConnectorAccess().getNocopyKeyword_1_1_5_1()); 
            match(input,77,FOLLOW_2); 
             after(grammarAccess.getVolumeConnectorAccess().getNocopyKeyword_1_1_5_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_5__1__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_5__2"
    // InternalDockerCompose.g:6448:1: rule__VolumeConnector__Group_1_1_5__2 : rule__VolumeConnector__Group_1_1_5__2__Impl ;
    public final void rule__VolumeConnector__Group_1_1_5__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6452:1: ( rule__VolumeConnector__Group_1_1_5__2__Impl )
            // InternalDockerCompose.g:6453:2: rule__VolumeConnector__Group_1_1_5__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_5__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_5__2"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_5__2__Impl"
    // InternalDockerCompose.g:6459:1: rule__VolumeConnector__Group_1_1_5__2__Impl : ( ( rule__VolumeConnector__NocopyAssignment_1_1_5_2 ) ) ;
    public final void rule__VolumeConnector__Group_1_1_5__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6463:1: ( ( ( rule__VolumeConnector__NocopyAssignment_1_1_5_2 ) ) )
            // InternalDockerCompose.g:6464:1: ( ( rule__VolumeConnector__NocopyAssignment_1_1_5_2 ) )
            {
            // InternalDockerCompose.g:6464:1: ( ( rule__VolumeConnector__NocopyAssignment_1_1_5_2 ) )
            // InternalDockerCompose.g:6465:2: ( rule__VolumeConnector__NocopyAssignment_1_1_5_2 )
            {
             before(grammarAccess.getVolumeConnectorAccess().getNocopyAssignment_1_1_5_2()); 
            // InternalDockerCompose.g:6466:2: ( rule__VolumeConnector__NocopyAssignment_1_1_5_2 )
            // InternalDockerCompose.g:6466:3: rule__VolumeConnector__NocopyAssignment_1_1_5_2
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__NocopyAssignment_1_1_5_2();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnectorAccess().getNocopyAssignment_1_1_5_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_5__2__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_6__0"
    // InternalDockerCompose.g:6475:1: rule__VolumeConnector__Group_1_1_6__0 : rule__VolumeConnector__Group_1_1_6__0__Impl rule__VolumeConnector__Group_1_1_6__1 ;
    public final void rule__VolumeConnector__Group_1_1_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6479:1: ( rule__VolumeConnector__Group_1_1_6__0__Impl rule__VolumeConnector__Group_1_1_6__1 )
            // InternalDockerCompose.g:6480:2: rule__VolumeConnector__Group_1_1_6__0__Impl rule__VolumeConnector__Group_1_1_6__1
            {
            pushFollow(FOLLOW_42);
            rule__VolumeConnector__Group_1_1_6__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_6__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_6__0"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_6__0__Impl"
    // InternalDockerCompose.g:6487:1: rule__VolumeConnector__Group_1_1_6__0__Impl : ( 'tmpfs:' ) ;
    public final void rule__VolumeConnector__Group_1_1_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6491:1: ( ( 'tmpfs:' ) )
            // InternalDockerCompose.g:6492:1: ( 'tmpfs:' )
            {
            // InternalDockerCompose.g:6492:1: ( 'tmpfs:' )
            // InternalDockerCompose.g:6493:2: 'tmpfs:'
            {
             before(grammarAccess.getVolumeConnectorAccess().getTmpfsKeyword_1_1_6_0()); 
            match(input,78,FOLLOW_2); 
             after(grammarAccess.getVolumeConnectorAccess().getTmpfsKeyword_1_1_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_6__0__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_6__1"
    // InternalDockerCompose.g:6502:1: rule__VolumeConnector__Group_1_1_6__1 : rule__VolumeConnector__Group_1_1_6__1__Impl rule__VolumeConnector__Group_1_1_6__2 ;
    public final void rule__VolumeConnector__Group_1_1_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6506:1: ( rule__VolumeConnector__Group_1_1_6__1__Impl rule__VolumeConnector__Group_1_1_6__2 )
            // InternalDockerCompose.g:6507:2: rule__VolumeConnector__Group_1_1_6__1__Impl rule__VolumeConnector__Group_1_1_6__2
            {
            pushFollow(FOLLOW_10);
            rule__VolumeConnector__Group_1_1_6__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_6__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_6__1"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_6__1__Impl"
    // InternalDockerCompose.g:6514:1: rule__VolumeConnector__Group_1_1_6__1__Impl : ( 'size' ) ;
    public final void rule__VolumeConnector__Group_1_1_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6518:1: ( ( 'size' ) )
            // InternalDockerCompose.g:6519:1: ( 'size' )
            {
            // InternalDockerCompose.g:6519:1: ( 'size' )
            // InternalDockerCompose.g:6520:2: 'size'
            {
             before(grammarAccess.getVolumeConnectorAccess().getSizeKeyword_1_1_6_1()); 
            match(input,79,FOLLOW_2); 
             after(grammarAccess.getVolumeConnectorAccess().getSizeKeyword_1_1_6_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_6__1__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_6__2"
    // InternalDockerCompose.g:6529:1: rule__VolumeConnector__Group_1_1_6__2 : rule__VolumeConnector__Group_1_1_6__2__Impl rule__VolumeConnector__Group_1_1_6__3 ;
    public final void rule__VolumeConnector__Group_1_1_6__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6533:1: ( rule__VolumeConnector__Group_1_1_6__2__Impl rule__VolumeConnector__Group_1_1_6__3 )
            // InternalDockerCompose.g:6534:2: rule__VolumeConnector__Group_1_1_6__2__Impl rule__VolumeConnector__Group_1_1_6__3
            {
            pushFollow(FOLLOW_9);
            rule__VolumeConnector__Group_1_1_6__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_6__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_6__2"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_6__2__Impl"
    // InternalDockerCompose.g:6541:1: rule__VolumeConnector__Group_1_1_6__2__Impl : ( ':' ) ;
    public final void rule__VolumeConnector__Group_1_1_6__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6545:1: ( ( ':' ) )
            // InternalDockerCompose.g:6546:1: ( ':' )
            {
            // InternalDockerCompose.g:6546:1: ( ':' )
            // InternalDockerCompose.g:6547:2: ':'
            {
             before(grammarAccess.getVolumeConnectorAccess().getColonKeyword_1_1_6_2()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getVolumeConnectorAccess().getColonKeyword_1_1_6_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_6__2__Impl"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_6__3"
    // InternalDockerCompose.g:6556:1: rule__VolumeConnector__Group_1_1_6__3 : rule__VolumeConnector__Group_1_1_6__3__Impl ;
    public final void rule__VolumeConnector__Group_1_1_6__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6560:1: ( rule__VolumeConnector__Group_1_1_6__3__Impl )
            // InternalDockerCompose.g:6561:2: rule__VolumeConnector__Group_1_1_6__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__Group_1_1_6__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_6__3"


    // $ANTLR start "rule__VolumeConnector__Group_1_1_6__3__Impl"
    // InternalDockerCompose.g:6567:1: rule__VolumeConnector__Group_1_1_6__3__Impl : ( ( rule__VolumeConnector__SizeAssignment_1_1_6_3 ) ) ;
    public final void rule__VolumeConnector__Group_1_1_6__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6571:1: ( ( ( rule__VolumeConnector__SizeAssignment_1_1_6_3 ) ) )
            // InternalDockerCompose.g:6572:1: ( ( rule__VolumeConnector__SizeAssignment_1_1_6_3 ) )
            {
            // InternalDockerCompose.g:6572:1: ( ( rule__VolumeConnector__SizeAssignment_1_1_6_3 ) )
            // InternalDockerCompose.g:6573:2: ( rule__VolumeConnector__SizeAssignment_1_1_6_3 )
            {
             before(grammarAccess.getVolumeConnectorAccess().getSizeAssignment_1_1_6_3()); 
            // InternalDockerCompose.g:6574:2: ( rule__VolumeConnector__SizeAssignment_1_1_6_3 )
            // InternalDockerCompose.g:6574:3: rule__VolumeConnector__SizeAssignment_1_1_6_3
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__SizeAssignment_1_1_6_3();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnectorAccess().getSizeAssignment_1_1_6_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Group_1_1_6__3__Impl"


    // $ANTLR start "rule__ConfigConnector__Group__0"
    // InternalDockerCompose.g:6583:1: rule__ConfigConnector__Group__0 : rule__ConfigConnector__Group__0__Impl rule__ConfigConnector__Group__1 ;
    public final void rule__ConfigConnector__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6587:1: ( rule__ConfigConnector__Group__0__Impl rule__ConfigConnector__Group__1 )
            // InternalDockerCompose.g:6588:2: rule__ConfigConnector__Group__0__Impl rule__ConfigConnector__Group__1
            {
            pushFollow(FOLLOW_21);
            rule__ConfigConnector__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group__0"


    // $ANTLR start "rule__ConfigConnector__Group__0__Impl"
    // InternalDockerCompose.g:6595:1: rule__ConfigConnector__Group__0__Impl : ( () ) ;
    public final void rule__ConfigConnector__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6599:1: ( ( () ) )
            // InternalDockerCompose.g:6600:1: ( () )
            {
            // InternalDockerCompose.g:6600:1: ( () )
            // InternalDockerCompose.g:6601:2: ()
            {
             before(grammarAccess.getConfigConnectorAccess().getConfigConnectorAction_0()); 
            // InternalDockerCompose.g:6602:2: ()
            // InternalDockerCompose.g:6602:3: 
            {
            }

             after(grammarAccess.getConfigConnectorAccess().getConfigConnectorAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group__0__Impl"


    // $ANTLR start "rule__ConfigConnector__Group__1"
    // InternalDockerCompose.g:6610:1: rule__ConfigConnector__Group__1 : rule__ConfigConnector__Group__1__Impl ;
    public final void rule__ConfigConnector__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6614:1: ( rule__ConfigConnector__Group__1__Impl )
            // InternalDockerCompose.g:6615:2: rule__ConfigConnector__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group__1"


    // $ANTLR start "rule__ConfigConnector__Group__1__Impl"
    // InternalDockerCompose.g:6621:1: rule__ConfigConnector__Group__1__Impl : ( ( rule__ConfigConnector__Alternatives_1 ) ) ;
    public final void rule__ConfigConnector__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6625:1: ( ( ( rule__ConfigConnector__Alternatives_1 ) ) )
            // InternalDockerCompose.g:6626:1: ( ( rule__ConfigConnector__Alternatives_1 ) )
            {
            // InternalDockerCompose.g:6626:1: ( ( rule__ConfigConnector__Alternatives_1 ) )
            // InternalDockerCompose.g:6627:2: ( rule__ConfigConnector__Alternatives_1 )
            {
             before(grammarAccess.getConfigConnectorAccess().getAlternatives_1()); 
            // InternalDockerCompose.g:6628:2: ( rule__ConfigConnector__Alternatives_1 )
            // InternalDockerCompose.g:6628:3: rule__ConfigConnector__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector__Alternatives_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnectorAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group__1__Impl"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_0__0"
    // InternalDockerCompose.g:6637:1: rule__ConfigConnector__Group_1_1_0__0 : rule__ConfigConnector__Group_1_1_0__0__Impl rule__ConfigConnector__Group_1_1_0__1 ;
    public final void rule__ConfigConnector__Group_1_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6641:1: ( rule__ConfigConnector__Group_1_1_0__0__Impl rule__ConfigConnector__Group_1_1_0__1 )
            // InternalDockerCompose.g:6642:2: rule__ConfigConnector__Group_1_1_0__0__Impl rule__ConfigConnector__Group_1_1_0__1
            {
            pushFollow(FOLLOW_7);
            rule__ConfigConnector__Group_1_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector__Group_1_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_0__0"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_0__0__Impl"
    // InternalDockerCompose.g:6649:1: rule__ConfigConnector__Group_1_1_0__0__Impl : ( 'source:' ) ;
    public final void rule__ConfigConnector__Group_1_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6653:1: ( ( 'source:' ) )
            // InternalDockerCompose.g:6654:1: ( 'source:' )
            {
            // InternalDockerCompose.g:6654:1: ( 'source:' )
            // InternalDockerCompose.g:6655:2: 'source:'
            {
             before(grammarAccess.getConfigConnectorAccess().getSourceKeyword_1_1_0_0()); 
            match(input,71,FOLLOW_2); 
             after(grammarAccess.getConfigConnectorAccess().getSourceKeyword_1_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_0__0__Impl"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_0__1"
    // InternalDockerCompose.g:6664:1: rule__ConfigConnector__Group_1_1_0__1 : rule__ConfigConnector__Group_1_1_0__1__Impl ;
    public final void rule__ConfigConnector__Group_1_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6668:1: ( rule__ConfigConnector__Group_1_1_0__1__Impl )
            // InternalDockerCompose.g:6669:2: rule__ConfigConnector__Group_1_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector__Group_1_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_0__1"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_0__1__Impl"
    // InternalDockerCompose.g:6675:1: rule__ConfigConnector__Group_1_1_0__1__Impl : ( ( rule__ConfigConnector__ConfigAssignment_1_1_0_1 ) ) ;
    public final void rule__ConfigConnector__Group_1_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6679:1: ( ( ( rule__ConfigConnector__ConfigAssignment_1_1_0_1 ) ) )
            // InternalDockerCompose.g:6680:1: ( ( rule__ConfigConnector__ConfigAssignment_1_1_0_1 ) )
            {
            // InternalDockerCompose.g:6680:1: ( ( rule__ConfigConnector__ConfigAssignment_1_1_0_1 ) )
            // InternalDockerCompose.g:6681:2: ( rule__ConfigConnector__ConfigAssignment_1_1_0_1 )
            {
             before(grammarAccess.getConfigConnectorAccess().getConfigAssignment_1_1_0_1()); 
            // InternalDockerCompose.g:6682:2: ( rule__ConfigConnector__ConfigAssignment_1_1_0_1 )
            // InternalDockerCompose.g:6682:3: rule__ConfigConnector__ConfigAssignment_1_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector__ConfigAssignment_1_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnectorAccess().getConfigAssignment_1_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_0__1__Impl"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_1__0"
    // InternalDockerCompose.g:6691:1: rule__ConfigConnector__Group_1_1_1__0 : rule__ConfigConnector__Group_1_1_1__0__Impl rule__ConfigConnector__Group_1_1_1__1 ;
    public final void rule__ConfigConnector__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6695:1: ( rule__ConfigConnector__Group_1_1_1__0__Impl rule__ConfigConnector__Group_1_1_1__1 )
            // InternalDockerCompose.g:6696:2: rule__ConfigConnector__Group_1_1_1__0__Impl rule__ConfigConnector__Group_1_1_1__1
            {
            pushFollow(FOLLOW_12);
            rule__ConfigConnector__Group_1_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector__Group_1_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_1__0"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_1__0__Impl"
    // InternalDockerCompose.g:6703:1: rule__ConfigConnector__Group_1_1_1__0__Impl : ( 'target:' ) ;
    public final void rule__ConfigConnector__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6707:1: ( ( 'target:' ) )
            // InternalDockerCompose.g:6708:1: ( 'target:' )
            {
            // InternalDockerCompose.g:6708:1: ( 'target:' )
            // InternalDockerCompose.g:6709:2: 'target:'
            {
             before(grammarAccess.getConfigConnectorAccess().getTargetKeyword_1_1_1_0()); 
            match(input,73,FOLLOW_2); 
             after(grammarAccess.getConfigConnectorAccess().getTargetKeyword_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_1__1"
    // InternalDockerCompose.g:6718:1: rule__ConfigConnector__Group_1_1_1__1 : rule__ConfigConnector__Group_1_1_1__1__Impl ;
    public final void rule__ConfigConnector__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6722:1: ( rule__ConfigConnector__Group_1_1_1__1__Impl )
            // InternalDockerCompose.g:6723:2: rule__ConfigConnector__Group_1_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector__Group_1_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_1__1"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_1__1__Impl"
    // InternalDockerCompose.g:6729:1: rule__ConfigConnector__Group_1_1_1__1__Impl : ( ( rule__ConfigConnector__TargetAssignment_1_1_1_1 ) ) ;
    public final void rule__ConfigConnector__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6733:1: ( ( ( rule__ConfigConnector__TargetAssignment_1_1_1_1 ) ) )
            // InternalDockerCompose.g:6734:1: ( ( rule__ConfigConnector__TargetAssignment_1_1_1_1 ) )
            {
            // InternalDockerCompose.g:6734:1: ( ( rule__ConfigConnector__TargetAssignment_1_1_1_1 ) )
            // InternalDockerCompose.g:6735:2: ( rule__ConfigConnector__TargetAssignment_1_1_1_1 )
            {
             before(grammarAccess.getConfigConnectorAccess().getTargetAssignment_1_1_1_1()); 
            // InternalDockerCompose.g:6736:2: ( rule__ConfigConnector__TargetAssignment_1_1_1_1 )
            // InternalDockerCompose.g:6736:3: rule__ConfigConnector__TargetAssignment_1_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector__TargetAssignment_1_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnectorAccess().getTargetAssignment_1_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_2__0"
    // InternalDockerCompose.g:6745:1: rule__ConfigConnector__Group_1_1_2__0 : rule__ConfigConnector__Group_1_1_2__0__Impl rule__ConfigConnector__Group_1_1_2__1 ;
    public final void rule__ConfigConnector__Group_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6749:1: ( rule__ConfigConnector__Group_1_1_2__0__Impl rule__ConfigConnector__Group_1_1_2__1 )
            // InternalDockerCompose.g:6750:2: rule__ConfigConnector__Group_1_1_2__0__Impl rule__ConfigConnector__Group_1_1_2__1
            {
            pushFollow(FOLLOW_43);
            rule__ConfigConnector__Group_1_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector__Group_1_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_2__0"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_2__0__Impl"
    // InternalDockerCompose.g:6757:1: rule__ConfigConnector__Group_1_1_2__0__Impl : ( 'uid:' ) ;
    public final void rule__ConfigConnector__Group_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6761:1: ( ( 'uid:' ) )
            // InternalDockerCompose.g:6762:1: ( 'uid:' )
            {
            // InternalDockerCompose.g:6762:1: ( 'uid:' )
            // InternalDockerCompose.g:6763:2: 'uid:'
            {
             before(grammarAccess.getConfigConnectorAccess().getUidKeyword_1_1_2_0()); 
            match(input,80,FOLLOW_2); 
             after(grammarAccess.getConfigConnectorAccess().getUidKeyword_1_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_2__0__Impl"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_2__1"
    // InternalDockerCompose.g:6772:1: rule__ConfigConnector__Group_1_1_2__1 : rule__ConfigConnector__Group_1_1_2__1__Impl ;
    public final void rule__ConfigConnector__Group_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6776:1: ( rule__ConfigConnector__Group_1_1_2__1__Impl )
            // InternalDockerCompose.g:6777:2: rule__ConfigConnector__Group_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector__Group_1_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_2__1"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_2__1__Impl"
    // InternalDockerCompose.g:6783:1: rule__ConfigConnector__Group_1_1_2__1__Impl : ( ( rule__ConfigConnector__UidAssignment_1_1_2_1 ) ) ;
    public final void rule__ConfigConnector__Group_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6787:1: ( ( ( rule__ConfigConnector__UidAssignment_1_1_2_1 ) ) )
            // InternalDockerCompose.g:6788:1: ( ( rule__ConfigConnector__UidAssignment_1_1_2_1 ) )
            {
            // InternalDockerCompose.g:6788:1: ( ( rule__ConfigConnector__UidAssignment_1_1_2_1 ) )
            // InternalDockerCompose.g:6789:2: ( rule__ConfigConnector__UidAssignment_1_1_2_1 )
            {
             before(grammarAccess.getConfigConnectorAccess().getUidAssignment_1_1_2_1()); 
            // InternalDockerCompose.g:6790:2: ( rule__ConfigConnector__UidAssignment_1_1_2_1 )
            // InternalDockerCompose.g:6790:3: rule__ConfigConnector__UidAssignment_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector__UidAssignment_1_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnectorAccess().getUidAssignment_1_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_2__1__Impl"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_3__0"
    // InternalDockerCompose.g:6799:1: rule__ConfigConnector__Group_1_1_3__0 : rule__ConfigConnector__Group_1_1_3__0__Impl rule__ConfigConnector__Group_1_1_3__1 ;
    public final void rule__ConfigConnector__Group_1_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6803:1: ( rule__ConfigConnector__Group_1_1_3__0__Impl rule__ConfigConnector__Group_1_1_3__1 )
            // InternalDockerCompose.g:6804:2: rule__ConfigConnector__Group_1_1_3__0__Impl rule__ConfigConnector__Group_1_1_3__1
            {
            pushFollow(FOLLOW_43);
            rule__ConfigConnector__Group_1_1_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector__Group_1_1_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_3__0"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_3__0__Impl"
    // InternalDockerCompose.g:6811:1: rule__ConfigConnector__Group_1_1_3__0__Impl : ( 'gid:' ) ;
    public final void rule__ConfigConnector__Group_1_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6815:1: ( ( 'gid:' ) )
            // InternalDockerCompose.g:6816:1: ( 'gid:' )
            {
            // InternalDockerCompose.g:6816:1: ( 'gid:' )
            // InternalDockerCompose.g:6817:2: 'gid:'
            {
             before(grammarAccess.getConfigConnectorAccess().getGidKeyword_1_1_3_0()); 
            match(input,81,FOLLOW_2); 
             after(grammarAccess.getConfigConnectorAccess().getGidKeyword_1_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_3__0__Impl"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_3__1"
    // InternalDockerCompose.g:6826:1: rule__ConfigConnector__Group_1_1_3__1 : rule__ConfigConnector__Group_1_1_3__1__Impl ;
    public final void rule__ConfigConnector__Group_1_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6830:1: ( rule__ConfigConnector__Group_1_1_3__1__Impl )
            // InternalDockerCompose.g:6831:2: rule__ConfigConnector__Group_1_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector__Group_1_1_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_3__1"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_3__1__Impl"
    // InternalDockerCompose.g:6837:1: rule__ConfigConnector__Group_1_1_3__1__Impl : ( ( rule__ConfigConnector__GidAssignment_1_1_3_1 ) ) ;
    public final void rule__ConfigConnector__Group_1_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6841:1: ( ( ( rule__ConfigConnector__GidAssignment_1_1_3_1 ) ) )
            // InternalDockerCompose.g:6842:1: ( ( rule__ConfigConnector__GidAssignment_1_1_3_1 ) )
            {
            // InternalDockerCompose.g:6842:1: ( ( rule__ConfigConnector__GidAssignment_1_1_3_1 ) )
            // InternalDockerCompose.g:6843:2: ( rule__ConfigConnector__GidAssignment_1_1_3_1 )
            {
             before(grammarAccess.getConfigConnectorAccess().getGidAssignment_1_1_3_1()); 
            // InternalDockerCompose.g:6844:2: ( rule__ConfigConnector__GidAssignment_1_1_3_1 )
            // InternalDockerCompose.g:6844:3: rule__ConfigConnector__GidAssignment_1_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector__GidAssignment_1_1_3_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnectorAccess().getGidAssignment_1_1_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_3__1__Impl"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_4__0"
    // InternalDockerCompose.g:6853:1: rule__ConfigConnector__Group_1_1_4__0 : rule__ConfigConnector__Group_1_1_4__0__Impl rule__ConfigConnector__Group_1_1_4__1 ;
    public final void rule__ConfigConnector__Group_1_1_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6857:1: ( rule__ConfigConnector__Group_1_1_4__0__Impl rule__ConfigConnector__Group_1_1_4__1 )
            // InternalDockerCompose.g:6858:2: rule__ConfigConnector__Group_1_1_4__0__Impl rule__ConfigConnector__Group_1_1_4__1
            {
            pushFollow(FOLLOW_9);
            rule__ConfigConnector__Group_1_1_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector__Group_1_1_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_4__0"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_4__0__Impl"
    // InternalDockerCompose.g:6865:1: rule__ConfigConnector__Group_1_1_4__0__Impl : ( 'mode:' ) ;
    public final void rule__ConfigConnector__Group_1_1_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6869:1: ( ( 'mode:' ) )
            // InternalDockerCompose.g:6870:1: ( 'mode:' )
            {
            // InternalDockerCompose.g:6870:1: ( 'mode:' )
            // InternalDockerCompose.g:6871:2: 'mode:'
            {
             before(grammarAccess.getConfigConnectorAccess().getModeKeyword_1_1_4_0()); 
            match(input,82,FOLLOW_2); 
             after(grammarAccess.getConfigConnectorAccess().getModeKeyword_1_1_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_4__0__Impl"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_4__1"
    // InternalDockerCompose.g:6880:1: rule__ConfigConnector__Group_1_1_4__1 : rule__ConfigConnector__Group_1_1_4__1__Impl ;
    public final void rule__ConfigConnector__Group_1_1_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6884:1: ( rule__ConfigConnector__Group_1_1_4__1__Impl )
            // InternalDockerCompose.g:6885:2: rule__ConfigConnector__Group_1_1_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector__Group_1_1_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_4__1"


    // $ANTLR start "rule__ConfigConnector__Group_1_1_4__1__Impl"
    // InternalDockerCompose.g:6891:1: rule__ConfigConnector__Group_1_1_4__1__Impl : ( ( rule__ConfigConnector__ModeAssignment_1_1_4_1 ) ) ;
    public final void rule__ConfigConnector__Group_1_1_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6895:1: ( ( ( rule__ConfigConnector__ModeAssignment_1_1_4_1 ) ) )
            // InternalDockerCompose.g:6896:1: ( ( rule__ConfigConnector__ModeAssignment_1_1_4_1 ) )
            {
            // InternalDockerCompose.g:6896:1: ( ( rule__ConfigConnector__ModeAssignment_1_1_4_1 ) )
            // InternalDockerCompose.g:6897:2: ( rule__ConfigConnector__ModeAssignment_1_1_4_1 )
            {
             before(grammarAccess.getConfigConnectorAccess().getModeAssignment_1_1_4_1()); 
            // InternalDockerCompose.g:6898:2: ( rule__ConfigConnector__ModeAssignment_1_1_4_1 )
            // InternalDockerCompose.g:6898:3: rule__ConfigConnector__ModeAssignment_1_1_4_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector__ModeAssignment_1_1_4_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnectorAccess().getModeAssignment_1_1_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__Group_1_1_4__1__Impl"


    // $ANTLR start "rule__SecretConnector__Group__0"
    // InternalDockerCompose.g:6907:1: rule__SecretConnector__Group__0 : rule__SecretConnector__Group__0__Impl rule__SecretConnector__Group__1 ;
    public final void rule__SecretConnector__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6911:1: ( rule__SecretConnector__Group__0__Impl rule__SecretConnector__Group__1 )
            // InternalDockerCompose.g:6912:2: rule__SecretConnector__Group__0__Impl rule__SecretConnector__Group__1
            {
            pushFollow(FOLLOW_21);
            rule__SecretConnector__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group__0"


    // $ANTLR start "rule__SecretConnector__Group__0__Impl"
    // InternalDockerCompose.g:6919:1: rule__SecretConnector__Group__0__Impl : ( () ) ;
    public final void rule__SecretConnector__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6923:1: ( ( () ) )
            // InternalDockerCompose.g:6924:1: ( () )
            {
            // InternalDockerCompose.g:6924:1: ( () )
            // InternalDockerCompose.g:6925:2: ()
            {
             before(grammarAccess.getSecretConnectorAccess().getSecretConnectorAction_0()); 
            // InternalDockerCompose.g:6926:2: ()
            // InternalDockerCompose.g:6926:3: 
            {
            }

             after(grammarAccess.getSecretConnectorAccess().getSecretConnectorAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group__0__Impl"


    // $ANTLR start "rule__SecretConnector__Group__1"
    // InternalDockerCompose.g:6934:1: rule__SecretConnector__Group__1 : rule__SecretConnector__Group__1__Impl ;
    public final void rule__SecretConnector__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6938:1: ( rule__SecretConnector__Group__1__Impl )
            // InternalDockerCompose.g:6939:2: rule__SecretConnector__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group__1"


    // $ANTLR start "rule__SecretConnector__Group__1__Impl"
    // InternalDockerCompose.g:6945:1: rule__SecretConnector__Group__1__Impl : ( ( rule__SecretConnector__Alternatives_1 ) ) ;
    public final void rule__SecretConnector__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6949:1: ( ( ( rule__SecretConnector__Alternatives_1 ) ) )
            // InternalDockerCompose.g:6950:1: ( ( rule__SecretConnector__Alternatives_1 ) )
            {
            // InternalDockerCompose.g:6950:1: ( ( rule__SecretConnector__Alternatives_1 ) )
            // InternalDockerCompose.g:6951:2: ( rule__SecretConnector__Alternatives_1 )
            {
             before(grammarAccess.getSecretConnectorAccess().getAlternatives_1()); 
            // InternalDockerCompose.g:6952:2: ( rule__SecretConnector__Alternatives_1 )
            // InternalDockerCompose.g:6952:3: rule__SecretConnector__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector__Alternatives_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnectorAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group__1__Impl"


    // $ANTLR start "rule__SecretConnector__Group_1_1_0__0"
    // InternalDockerCompose.g:6961:1: rule__SecretConnector__Group_1_1_0__0 : rule__SecretConnector__Group_1_1_0__0__Impl rule__SecretConnector__Group_1_1_0__1 ;
    public final void rule__SecretConnector__Group_1_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6965:1: ( rule__SecretConnector__Group_1_1_0__0__Impl rule__SecretConnector__Group_1_1_0__1 )
            // InternalDockerCompose.g:6966:2: rule__SecretConnector__Group_1_1_0__0__Impl rule__SecretConnector__Group_1_1_0__1
            {
            pushFollow(FOLLOW_7);
            rule__SecretConnector__Group_1_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector__Group_1_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_0__0"


    // $ANTLR start "rule__SecretConnector__Group_1_1_0__0__Impl"
    // InternalDockerCompose.g:6973:1: rule__SecretConnector__Group_1_1_0__0__Impl : ( 'source:' ) ;
    public final void rule__SecretConnector__Group_1_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6977:1: ( ( 'source:' ) )
            // InternalDockerCompose.g:6978:1: ( 'source:' )
            {
            // InternalDockerCompose.g:6978:1: ( 'source:' )
            // InternalDockerCompose.g:6979:2: 'source:'
            {
             before(grammarAccess.getSecretConnectorAccess().getSourceKeyword_1_1_0_0()); 
            match(input,71,FOLLOW_2); 
             after(grammarAccess.getSecretConnectorAccess().getSourceKeyword_1_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_0__0__Impl"


    // $ANTLR start "rule__SecretConnector__Group_1_1_0__1"
    // InternalDockerCompose.g:6988:1: rule__SecretConnector__Group_1_1_0__1 : rule__SecretConnector__Group_1_1_0__1__Impl ;
    public final void rule__SecretConnector__Group_1_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6992:1: ( rule__SecretConnector__Group_1_1_0__1__Impl )
            // InternalDockerCompose.g:6993:2: rule__SecretConnector__Group_1_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector__Group_1_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_0__1"


    // $ANTLR start "rule__SecretConnector__Group_1_1_0__1__Impl"
    // InternalDockerCompose.g:6999:1: rule__SecretConnector__Group_1_1_0__1__Impl : ( ( rule__SecretConnector__SecretAssignment_1_1_0_1 ) ) ;
    public final void rule__SecretConnector__Group_1_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7003:1: ( ( ( rule__SecretConnector__SecretAssignment_1_1_0_1 ) ) )
            // InternalDockerCompose.g:7004:1: ( ( rule__SecretConnector__SecretAssignment_1_1_0_1 ) )
            {
            // InternalDockerCompose.g:7004:1: ( ( rule__SecretConnector__SecretAssignment_1_1_0_1 ) )
            // InternalDockerCompose.g:7005:2: ( rule__SecretConnector__SecretAssignment_1_1_0_1 )
            {
             before(grammarAccess.getSecretConnectorAccess().getSecretAssignment_1_1_0_1()); 
            // InternalDockerCompose.g:7006:2: ( rule__SecretConnector__SecretAssignment_1_1_0_1 )
            // InternalDockerCompose.g:7006:3: rule__SecretConnector__SecretAssignment_1_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector__SecretAssignment_1_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnectorAccess().getSecretAssignment_1_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_0__1__Impl"


    // $ANTLR start "rule__SecretConnector__Group_1_1_1__0"
    // InternalDockerCompose.g:7015:1: rule__SecretConnector__Group_1_1_1__0 : rule__SecretConnector__Group_1_1_1__0__Impl rule__SecretConnector__Group_1_1_1__1 ;
    public final void rule__SecretConnector__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7019:1: ( rule__SecretConnector__Group_1_1_1__0__Impl rule__SecretConnector__Group_1_1_1__1 )
            // InternalDockerCompose.g:7020:2: rule__SecretConnector__Group_1_1_1__0__Impl rule__SecretConnector__Group_1_1_1__1
            {
            pushFollow(FOLLOW_12);
            rule__SecretConnector__Group_1_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector__Group_1_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_1__0"


    // $ANTLR start "rule__SecretConnector__Group_1_1_1__0__Impl"
    // InternalDockerCompose.g:7027:1: rule__SecretConnector__Group_1_1_1__0__Impl : ( 'target:' ) ;
    public final void rule__SecretConnector__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7031:1: ( ( 'target:' ) )
            // InternalDockerCompose.g:7032:1: ( 'target:' )
            {
            // InternalDockerCompose.g:7032:1: ( 'target:' )
            // InternalDockerCompose.g:7033:2: 'target:'
            {
             before(grammarAccess.getSecretConnectorAccess().getTargetKeyword_1_1_1_0()); 
            match(input,73,FOLLOW_2); 
             after(grammarAccess.getSecretConnectorAccess().getTargetKeyword_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__SecretConnector__Group_1_1_1__1"
    // InternalDockerCompose.g:7042:1: rule__SecretConnector__Group_1_1_1__1 : rule__SecretConnector__Group_1_1_1__1__Impl ;
    public final void rule__SecretConnector__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7046:1: ( rule__SecretConnector__Group_1_1_1__1__Impl )
            // InternalDockerCompose.g:7047:2: rule__SecretConnector__Group_1_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector__Group_1_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_1__1"


    // $ANTLR start "rule__SecretConnector__Group_1_1_1__1__Impl"
    // InternalDockerCompose.g:7053:1: rule__SecretConnector__Group_1_1_1__1__Impl : ( ( rule__SecretConnector__TargetAssignment_1_1_1_1 ) ) ;
    public final void rule__SecretConnector__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7057:1: ( ( ( rule__SecretConnector__TargetAssignment_1_1_1_1 ) ) )
            // InternalDockerCompose.g:7058:1: ( ( rule__SecretConnector__TargetAssignment_1_1_1_1 ) )
            {
            // InternalDockerCompose.g:7058:1: ( ( rule__SecretConnector__TargetAssignment_1_1_1_1 ) )
            // InternalDockerCompose.g:7059:2: ( rule__SecretConnector__TargetAssignment_1_1_1_1 )
            {
             before(grammarAccess.getSecretConnectorAccess().getTargetAssignment_1_1_1_1()); 
            // InternalDockerCompose.g:7060:2: ( rule__SecretConnector__TargetAssignment_1_1_1_1 )
            // InternalDockerCompose.g:7060:3: rule__SecretConnector__TargetAssignment_1_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector__TargetAssignment_1_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnectorAccess().getTargetAssignment_1_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__SecretConnector__Group_1_1_2__0"
    // InternalDockerCompose.g:7069:1: rule__SecretConnector__Group_1_1_2__0 : rule__SecretConnector__Group_1_1_2__0__Impl rule__SecretConnector__Group_1_1_2__1 ;
    public final void rule__SecretConnector__Group_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7073:1: ( rule__SecretConnector__Group_1_1_2__0__Impl rule__SecretConnector__Group_1_1_2__1 )
            // InternalDockerCompose.g:7074:2: rule__SecretConnector__Group_1_1_2__0__Impl rule__SecretConnector__Group_1_1_2__1
            {
            pushFollow(FOLLOW_43);
            rule__SecretConnector__Group_1_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector__Group_1_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_2__0"


    // $ANTLR start "rule__SecretConnector__Group_1_1_2__0__Impl"
    // InternalDockerCompose.g:7081:1: rule__SecretConnector__Group_1_1_2__0__Impl : ( 'uid:' ) ;
    public final void rule__SecretConnector__Group_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7085:1: ( ( 'uid:' ) )
            // InternalDockerCompose.g:7086:1: ( 'uid:' )
            {
            // InternalDockerCompose.g:7086:1: ( 'uid:' )
            // InternalDockerCompose.g:7087:2: 'uid:'
            {
             before(grammarAccess.getSecretConnectorAccess().getUidKeyword_1_1_2_0()); 
            match(input,80,FOLLOW_2); 
             after(grammarAccess.getSecretConnectorAccess().getUidKeyword_1_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_2__0__Impl"


    // $ANTLR start "rule__SecretConnector__Group_1_1_2__1"
    // InternalDockerCompose.g:7096:1: rule__SecretConnector__Group_1_1_2__1 : rule__SecretConnector__Group_1_1_2__1__Impl ;
    public final void rule__SecretConnector__Group_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7100:1: ( rule__SecretConnector__Group_1_1_2__1__Impl )
            // InternalDockerCompose.g:7101:2: rule__SecretConnector__Group_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector__Group_1_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_2__1"


    // $ANTLR start "rule__SecretConnector__Group_1_1_2__1__Impl"
    // InternalDockerCompose.g:7107:1: rule__SecretConnector__Group_1_1_2__1__Impl : ( ( rule__SecretConnector__UidAssignment_1_1_2_1 ) ) ;
    public final void rule__SecretConnector__Group_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7111:1: ( ( ( rule__SecretConnector__UidAssignment_1_1_2_1 ) ) )
            // InternalDockerCompose.g:7112:1: ( ( rule__SecretConnector__UidAssignment_1_1_2_1 ) )
            {
            // InternalDockerCompose.g:7112:1: ( ( rule__SecretConnector__UidAssignment_1_1_2_1 ) )
            // InternalDockerCompose.g:7113:2: ( rule__SecretConnector__UidAssignment_1_1_2_1 )
            {
             before(grammarAccess.getSecretConnectorAccess().getUidAssignment_1_1_2_1()); 
            // InternalDockerCompose.g:7114:2: ( rule__SecretConnector__UidAssignment_1_1_2_1 )
            // InternalDockerCompose.g:7114:3: rule__SecretConnector__UidAssignment_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector__UidAssignment_1_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnectorAccess().getUidAssignment_1_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_2__1__Impl"


    // $ANTLR start "rule__SecretConnector__Group_1_1_3__0"
    // InternalDockerCompose.g:7123:1: rule__SecretConnector__Group_1_1_3__0 : rule__SecretConnector__Group_1_1_3__0__Impl rule__SecretConnector__Group_1_1_3__1 ;
    public final void rule__SecretConnector__Group_1_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7127:1: ( rule__SecretConnector__Group_1_1_3__0__Impl rule__SecretConnector__Group_1_1_3__1 )
            // InternalDockerCompose.g:7128:2: rule__SecretConnector__Group_1_1_3__0__Impl rule__SecretConnector__Group_1_1_3__1
            {
            pushFollow(FOLLOW_43);
            rule__SecretConnector__Group_1_1_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector__Group_1_1_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_3__0"


    // $ANTLR start "rule__SecretConnector__Group_1_1_3__0__Impl"
    // InternalDockerCompose.g:7135:1: rule__SecretConnector__Group_1_1_3__0__Impl : ( 'gid:' ) ;
    public final void rule__SecretConnector__Group_1_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7139:1: ( ( 'gid:' ) )
            // InternalDockerCompose.g:7140:1: ( 'gid:' )
            {
            // InternalDockerCompose.g:7140:1: ( 'gid:' )
            // InternalDockerCompose.g:7141:2: 'gid:'
            {
             before(grammarAccess.getSecretConnectorAccess().getGidKeyword_1_1_3_0()); 
            match(input,81,FOLLOW_2); 
             after(grammarAccess.getSecretConnectorAccess().getGidKeyword_1_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_3__0__Impl"


    // $ANTLR start "rule__SecretConnector__Group_1_1_3__1"
    // InternalDockerCompose.g:7150:1: rule__SecretConnector__Group_1_1_3__1 : rule__SecretConnector__Group_1_1_3__1__Impl ;
    public final void rule__SecretConnector__Group_1_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7154:1: ( rule__SecretConnector__Group_1_1_3__1__Impl )
            // InternalDockerCompose.g:7155:2: rule__SecretConnector__Group_1_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector__Group_1_1_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_3__1"


    // $ANTLR start "rule__SecretConnector__Group_1_1_3__1__Impl"
    // InternalDockerCompose.g:7161:1: rule__SecretConnector__Group_1_1_3__1__Impl : ( ( rule__SecretConnector__GidAssignment_1_1_3_1 ) ) ;
    public final void rule__SecretConnector__Group_1_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7165:1: ( ( ( rule__SecretConnector__GidAssignment_1_1_3_1 ) ) )
            // InternalDockerCompose.g:7166:1: ( ( rule__SecretConnector__GidAssignment_1_1_3_1 ) )
            {
            // InternalDockerCompose.g:7166:1: ( ( rule__SecretConnector__GidAssignment_1_1_3_1 ) )
            // InternalDockerCompose.g:7167:2: ( rule__SecretConnector__GidAssignment_1_1_3_1 )
            {
             before(grammarAccess.getSecretConnectorAccess().getGidAssignment_1_1_3_1()); 
            // InternalDockerCompose.g:7168:2: ( rule__SecretConnector__GidAssignment_1_1_3_1 )
            // InternalDockerCompose.g:7168:3: rule__SecretConnector__GidAssignment_1_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector__GidAssignment_1_1_3_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnectorAccess().getGidAssignment_1_1_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_3__1__Impl"


    // $ANTLR start "rule__SecretConnector__Group_1_1_4__0"
    // InternalDockerCompose.g:7177:1: rule__SecretConnector__Group_1_1_4__0 : rule__SecretConnector__Group_1_1_4__0__Impl rule__SecretConnector__Group_1_1_4__1 ;
    public final void rule__SecretConnector__Group_1_1_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7181:1: ( rule__SecretConnector__Group_1_1_4__0__Impl rule__SecretConnector__Group_1_1_4__1 )
            // InternalDockerCompose.g:7182:2: rule__SecretConnector__Group_1_1_4__0__Impl rule__SecretConnector__Group_1_1_4__1
            {
            pushFollow(FOLLOW_9);
            rule__SecretConnector__Group_1_1_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector__Group_1_1_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_4__0"


    // $ANTLR start "rule__SecretConnector__Group_1_1_4__0__Impl"
    // InternalDockerCompose.g:7189:1: rule__SecretConnector__Group_1_1_4__0__Impl : ( 'mode:' ) ;
    public final void rule__SecretConnector__Group_1_1_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7193:1: ( ( 'mode:' ) )
            // InternalDockerCompose.g:7194:1: ( 'mode:' )
            {
            // InternalDockerCompose.g:7194:1: ( 'mode:' )
            // InternalDockerCompose.g:7195:2: 'mode:'
            {
             before(grammarAccess.getSecretConnectorAccess().getModeKeyword_1_1_4_0()); 
            match(input,82,FOLLOW_2); 
             after(grammarAccess.getSecretConnectorAccess().getModeKeyword_1_1_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_4__0__Impl"


    // $ANTLR start "rule__SecretConnector__Group_1_1_4__1"
    // InternalDockerCompose.g:7204:1: rule__SecretConnector__Group_1_1_4__1 : rule__SecretConnector__Group_1_1_4__1__Impl ;
    public final void rule__SecretConnector__Group_1_1_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7208:1: ( rule__SecretConnector__Group_1_1_4__1__Impl )
            // InternalDockerCompose.g:7209:2: rule__SecretConnector__Group_1_1_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector__Group_1_1_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_4__1"


    // $ANTLR start "rule__SecretConnector__Group_1_1_4__1__Impl"
    // InternalDockerCompose.g:7215:1: rule__SecretConnector__Group_1_1_4__1__Impl : ( ( rule__SecretConnector__ModeAssignment_1_1_4_1 ) ) ;
    public final void rule__SecretConnector__Group_1_1_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7219:1: ( ( ( rule__SecretConnector__ModeAssignment_1_1_4_1 ) ) )
            // InternalDockerCompose.g:7220:1: ( ( rule__SecretConnector__ModeAssignment_1_1_4_1 ) )
            {
            // InternalDockerCompose.g:7220:1: ( ( rule__SecretConnector__ModeAssignment_1_1_4_1 ) )
            // InternalDockerCompose.g:7221:2: ( rule__SecretConnector__ModeAssignment_1_1_4_1 )
            {
             before(grammarAccess.getSecretConnectorAccess().getModeAssignment_1_1_4_1()); 
            // InternalDockerCompose.g:7222:2: ( rule__SecretConnector__ModeAssignment_1_1_4_1 )
            // InternalDockerCompose.g:7222:3: rule__SecretConnector__ModeAssignment_1_1_4_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector__ModeAssignment_1_1_4_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnectorAccess().getModeAssignment_1_1_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__Group_1_1_4__1__Impl"


    // $ANTLR start "rule__Network__Group__0"
    // InternalDockerCompose.g:7231:1: rule__Network__Group__0 : rule__Network__Group__0__Impl rule__Network__Group__1 ;
    public final void rule__Network__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7235:1: ( rule__Network__Group__0__Impl rule__Network__Group__1 )
            // InternalDockerCompose.g:7236:2: rule__Network__Group__0__Impl rule__Network__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__Network__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__0"


    // $ANTLR start "rule__Network__Group__0__Impl"
    // InternalDockerCompose.g:7243:1: rule__Network__Group__0__Impl : ( () ) ;
    public final void rule__Network__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7247:1: ( ( () ) )
            // InternalDockerCompose.g:7248:1: ( () )
            {
            // InternalDockerCompose.g:7248:1: ( () )
            // InternalDockerCompose.g:7249:2: ()
            {
             before(grammarAccess.getNetworkAccess().getNetworkAction_0()); 
            // InternalDockerCompose.g:7250:2: ()
            // InternalDockerCompose.g:7250:3: 
            {
            }

             after(grammarAccess.getNetworkAccess().getNetworkAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__0__Impl"


    // $ANTLR start "rule__Network__Group__1"
    // InternalDockerCompose.g:7258:1: rule__Network__Group__1 : rule__Network__Group__1__Impl rule__Network__Group__2 ;
    public final void rule__Network__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7262:1: ( rule__Network__Group__1__Impl rule__Network__Group__2 )
            // InternalDockerCompose.g:7263:2: rule__Network__Group__1__Impl rule__Network__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__Network__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__1"


    // $ANTLR start "rule__Network__Group__1__Impl"
    // InternalDockerCompose.g:7270:1: rule__Network__Group__1__Impl : ( ( rule__Network__NameAssignment_1 ) ) ;
    public final void rule__Network__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7274:1: ( ( ( rule__Network__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:7275:1: ( ( rule__Network__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:7275:1: ( ( rule__Network__NameAssignment_1 ) )
            // InternalDockerCompose.g:7276:2: ( rule__Network__NameAssignment_1 )
            {
             before(grammarAccess.getNetworkAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:7277:2: ( rule__Network__NameAssignment_1 )
            // InternalDockerCompose.g:7277:3: rule__Network__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__1__Impl"


    // $ANTLR start "rule__Network__Group__2"
    // InternalDockerCompose.g:7285:1: rule__Network__Group__2 : rule__Network__Group__2__Impl rule__Network__Group__3 ;
    public final void rule__Network__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7289:1: ( rule__Network__Group__2__Impl rule__Network__Group__3 )
            // InternalDockerCompose.g:7290:2: rule__Network__Group__2__Impl rule__Network__Group__3
            {
            pushFollow(FOLLOW_44);
            rule__Network__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__2"


    // $ANTLR start "rule__Network__Group__2__Impl"
    // InternalDockerCompose.g:7297:1: rule__Network__Group__2__Impl : ( ':' ) ;
    public final void rule__Network__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7301:1: ( ( ':' ) )
            // InternalDockerCompose.g:7302:1: ( ':' )
            {
            // InternalDockerCompose.g:7302:1: ( ':' )
            // InternalDockerCompose.g:7303:2: ':'
            {
             before(grammarAccess.getNetworkAccess().getColonKeyword_2()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__2__Impl"


    // $ANTLR start "rule__Network__Group__3"
    // InternalDockerCompose.g:7312:1: rule__Network__Group__3 : rule__Network__Group__3__Impl ;
    public final void rule__Network__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7316:1: ( rule__Network__Group__3__Impl )
            // InternalDockerCompose.g:7317:2: rule__Network__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__3"


    // $ANTLR start "rule__Network__Group__3__Impl"
    // InternalDockerCompose.g:7323:1: rule__Network__Group__3__Impl : ( ( rule__Network__Alternatives_3 ) ) ;
    public final void rule__Network__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7327:1: ( ( ( rule__Network__Alternatives_3 ) ) )
            // InternalDockerCompose.g:7328:1: ( ( rule__Network__Alternatives_3 ) )
            {
            // InternalDockerCompose.g:7328:1: ( ( rule__Network__Alternatives_3 ) )
            // InternalDockerCompose.g:7329:2: ( rule__Network__Alternatives_3 )
            {
             before(grammarAccess.getNetworkAccess().getAlternatives_3()); 
            // InternalDockerCompose.g:7330:2: ( rule__Network__Alternatives_3 )
            // InternalDockerCompose.g:7330:3: rule__Network__Alternatives_3
            {
            pushFollow(FOLLOW_2);
            rule__Network__Alternatives_3();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getAlternatives_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__3__Impl"


    // $ANTLR start "rule__Network__Group_3_0__0"
    // InternalDockerCompose.g:7339:1: rule__Network__Group_3_0__0 : rule__Network__Group_3_0__0__Impl rule__Network__Group_3_0__1 ;
    public final void rule__Network__Group_3_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7343:1: ( rule__Network__Group_3_0__0__Impl rule__Network__Group_3_0__1 )
            // InternalDockerCompose.g:7344:2: rule__Network__Group_3_0__0__Impl rule__Network__Group_3_0__1
            {
            pushFollow(FOLLOW_45);
            rule__Network__Group_3_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_0__0"


    // $ANTLR start "rule__Network__Group_3_0__0__Impl"
    // InternalDockerCompose.g:7351:1: rule__Network__Group_3_0__0__Impl : ( '{' ) ;
    public final void rule__Network__Group_3_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7355:1: ( ( '{' ) )
            // InternalDockerCompose.g:7356:1: ( '{' )
            {
            // InternalDockerCompose.g:7356:1: ( '{' )
            // InternalDockerCompose.g:7357:2: '{'
            {
             before(grammarAccess.getNetworkAccess().getLeftCurlyBracketKeyword_3_0_0()); 
            match(input,83,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getLeftCurlyBracketKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_0__0__Impl"


    // $ANTLR start "rule__Network__Group_3_0__1"
    // InternalDockerCompose.g:7366:1: rule__Network__Group_3_0__1 : rule__Network__Group_3_0__1__Impl ;
    public final void rule__Network__Group_3_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7370:1: ( rule__Network__Group_3_0__1__Impl )
            // InternalDockerCompose.g:7371:2: rule__Network__Group_3_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_0__1"


    // $ANTLR start "rule__Network__Group_3_0__1__Impl"
    // InternalDockerCompose.g:7377:1: rule__Network__Group_3_0__1__Impl : ( '}' ) ;
    public final void rule__Network__Group_3_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7381:1: ( ( '}' ) )
            // InternalDockerCompose.g:7382:1: ( '}' )
            {
            // InternalDockerCompose.g:7382:1: ( '}' )
            // InternalDockerCompose.g:7383:2: '}'
            {
             before(grammarAccess.getNetworkAccess().getRightCurlyBracketKeyword_3_0_1()); 
            match(input,84,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getRightCurlyBracketKeyword_3_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_0__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_0__0"
    // InternalDockerCompose.g:7393:1: rule__Network__Group_3_1_0__0 : rule__Network__Group_3_1_0__0__Impl rule__Network__Group_3_1_0__1 ;
    public final void rule__Network__Group_3_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7397:1: ( rule__Network__Group_3_1_0__0__Impl rule__Network__Group_3_1_0__1 )
            // InternalDockerCompose.g:7398:2: rule__Network__Group_3_1_0__0__Impl rule__Network__Group_3_1_0__1
            {
            pushFollow(FOLLOW_14);
            rule__Network__Group_3_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_0__0"


    // $ANTLR start "rule__Network__Group_3_1_0__0__Impl"
    // InternalDockerCompose.g:7405:1: rule__Network__Group_3_1_0__0__Impl : ( 'driver:' ) ;
    public final void rule__Network__Group_3_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7409:1: ( ( 'driver:' ) )
            // InternalDockerCompose.g:7410:1: ( 'driver:' )
            {
            // InternalDockerCompose.g:7410:1: ( 'driver:' )
            // InternalDockerCompose.g:7411:2: 'driver:'
            {
             before(grammarAccess.getNetworkAccess().getDriverKeyword_3_1_0_0()); 
            match(input,85,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getDriverKeyword_3_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_0__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_0__1"
    // InternalDockerCompose.g:7420:1: rule__Network__Group_3_1_0__1 : rule__Network__Group_3_1_0__1__Impl ;
    public final void rule__Network__Group_3_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7424:1: ( rule__Network__Group_3_1_0__1__Impl )
            // InternalDockerCompose.g:7425:2: rule__Network__Group_3_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_0__1"


    // $ANTLR start "rule__Network__Group_3_1_0__1__Impl"
    // InternalDockerCompose.g:7431:1: rule__Network__Group_3_1_0__1__Impl : ( ( rule__Network__DriverAssignment_3_1_0_1 ) ) ;
    public final void rule__Network__Group_3_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7435:1: ( ( ( rule__Network__DriverAssignment_3_1_0_1 ) ) )
            // InternalDockerCompose.g:7436:1: ( ( rule__Network__DriverAssignment_3_1_0_1 ) )
            {
            // InternalDockerCompose.g:7436:1: ( ( rule__Network__DriverAssignment_3_1_0_1 ) )
            // InternalDockerCompose.g:7437:2: ( rule__Network__DriverAssignment_3_1_0_1 )
            {
             before(grammarAccess.getNetworkAccess().getDriverAssignment_3_1_0_1()); 
            // InternalDockerCompose.g:7438:2: ( rule__Network__DriverAssignment_3_1_0_1 )
            // InternalDockerCompose.g:7438:3: rule__Network__DriverAssignment_3_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__DriverAssignment_3_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getDriverAssignment_3_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_0__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_1__0"
    // InternalDockerCompose.g:7447:1: rule__Network__Group_3_1_1__0 : rule__Network__Group_3_1_1__0__Impl rule__Network__Group_3_1_1__1 ;
    public final void rule__Network__Group_3_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7451:1: ( rule__Network__Group_3_1_1__0__Impl rule__Network__Group_3_1_1__1 )
            // InternalDockerCompose.g:7452:2: rule__Network__Group_3_1_1__0__Impl rule__Network__Group_3_1_1__1
            {
            pushFollow(FOLLOW_16);
            rule__Network__Group_3_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_1__0"


    // $ANTLR start "rule__Network__Group_3_1_1__0__Impl"
    // InternalDockerCompose.g:7459:1: rule__Network__Group_3_1_1__0__Impl : ( 'attachable:' ) ;
    public final void rule__Network__Group_3_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7463:1: ( ( 'attachable:' ) )
            // InternalDockerCompose.g:7464:1: ( 'attachable:' )
            {
            // InternalDockerCompose.g:7464:1: ( 'attachable:' )
            // InternalDockerCompose.g:7465:2: 'attachable:'
            {
             before(grammarAccess.getNetworkAccess().getAttachableKeyword_3_1_1_0()); 
            match(input,86,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getAttachableKeyword_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_1__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_1__1"
    // InternalDockerCompose.g:7474:1: rule__Network__Group_3_1_1__1 : rule__Network__Group_3_1_1__1__Impl ;
    public final void rule__Network__Group_3_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7478:1: ( rule__Network__Group_3_1_1__1__Impl )
            // InternalDockerCompose.g:7479:2: rule__Network__Group_3_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_1__1"


    // $ANTLR start "rule__Network__Group_3_1_1__1__Impl"
    // InternalDockerCompose.g:7485:1: rule__Network__Group_3_1_1__1__Impl : ( ( rule__Network__AttachableAssignment_3_1_1_1 ) ) ;
    public final void rule__Network__Group_3_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7489:1: ( ( ( rule__Network__AttachableAssignment_3_1_1_1 ) ) )
            // InternalDockerCompose.g:7490:1: ( ( rule__Network__AttachableAssignment_3_1_1_1 ) )
            {
            // InternalDockerCompose.g:7490:1: ( ( rule__Network__AttachableAssignment_3_1_1_1 ) )
            // InternalDockerCompose.g:7491:2: ( rule__Network__AttachableAssignment_3_1_1_1 )
            {
             before(grammarAccess.getNetworkAccess().getAttachableAssignment_3_1_1_1()); 
            // InternalDockerCompose.g:7492:2: ( rule__Network__AttachableAssignment_3_1_1_1 )
            // InternalDockerCompose.g:7492:3: rule__Network__AttachableAssignment_3_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__AttachableAssignment_3_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getAttachableAssignment_3_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_1__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_2__0"
    // InternalDockerCompose.g:7501:1: rule__Network__Group_3_1_2__0 : rule__Network__Group_3_1_2__0__Impl rule__Network__Group_3_1_2__1 ;
    public final void rule__Network__Group_3_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7505:1: ( rule__Network__Group_3_1_2__0__Impl rule__Network__Group_3_1_2__1 )
            // InternalDockerCompose.g:7506:2: rule__Network__Group_3_1_2__0__Impl rule__Network__Group_3_1_2__1
            {
            pushFollow(FOLLOW_16);
            rule__Network__Group_3_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_2__0"


    // $ANTLR start "rule__Network__Group_3_1_2__0__Impl"
    // InternalDockerCompose.g:7513:1: rule__Network__Group_3_1_2__0__Impl : ( 'enable_ipv6:' ) ;
    public final void rule__Network__Group_3_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7517:1: ( ( 'enable_ipv6:' ) )
            // InternalDockerCompose.g:7518:1: ( 'enable_ipv6:' )
            {
            // InternalDockerCompose.g:7518:1: ( 'enable_ipv6:' )
            // InternalDockerCompose.g:7519:2: 'enable_ipv6:'
            {
             before(grammarAccess.getNetworkAccess().getEnable_ipv6Keyword_3_1_2_0()); 
            match(input,87,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getEnable_ipv6Keyword_3_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_2__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_2__1"
    // InternalDockerCompose.g:7528:1: rule__Network__Group_3_1_2__1 : rule__Network__Group_3_1_2__1__Impl ;
    public final void rule__Network__Group_3_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7532:1: ( rule__Network__Group_3_1_2__1__Impl )
            // InternalDockerCompose.g:7533:2: rule__Network__Group_3_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_2__1"


    // $ANTLR start "rule__Network__Group_3_1_2__1__Impl"
    // InternalDockerCompose.g:7539:1: rule__Network__Group_3_1_2__1__Impl : ( ( rule__Network__Enable_ipv6Assignment_3_1_2_1 ) ) ;
    public final void rule__Network__Group_3_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7543:1: ( ( ( rule__Network__Enable_ipv6Assignment_3_1_2_1 ) ) )
            // InternalDockerCompose.g:7544:1: ( ( rule__Network__Enable_ipv6Assignment_3_1_2_1 ) )
            {
            // InternalDockerCompose.g:7544:1: ( ( rule__Network__Enable_ipv6Assignment_3_1_2_1 ) )
            // InternalDockerCompose.g:7545:2: ( rule__Network__Enable_ipv6Assignment_3_1_2_1 )
            {
             before(grammarAccess.getNetworkAccess().getEnable_ipv6Assignment_3_1_2_1()); 
            // InternalDockerCompose.g:7546:2: ( rule__Network__Enable_ipv6Assignment_3_1_2_1 )
            // InternalDockerCompose.g:7546:3: rule__Network__Enable_ipv6Assignment_3_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__Enable_ipv6Assignment_3_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getEnable_ipv6Assignment_3_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_2__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_3__0"
    // InternalDockerCompose.g:7555:1: rule__Network__Group_3_1_3__0 : rule__Network__Group_3_1_3__0__Impl rule__Network__Group_3_1_3__1 ;
    public final void rule__Network__Group_3_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7559:1: ( rule__Network__Group_3_1_3__0__Impl rule__Network__Group_3_1_3__1 )
            // InternalDockerCompose.g:7560:2: rule__Network__Group_3_1_3__0__Impl rule__Network__Group_3_1_3__1
            {
            pushFollow(FOLLOW_16);
            rule__Network__Group_3_1_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_3__0"


    // $ANTLR start "rule__Network__Group_3_1_3__0__Impl"
    // InternalDockerCompose.g:7567:1: rule__Network__Group_3_1_3__0__Impl : ( 'internal:' ) ;
    public final void rule__Network__Group_3_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7571:1: ( ( 'internal:' ) )
            // InternalDockerCompose.g:7572:1: ( 'internal:' )
            {
            // InternalDockerCompose.g:7572:1: ( 'internal:' )
            // InternalDockerCompose.g:7573:2: 'internal:'
            {
             before(grammarAccess.getNetworkAccess().getInternalKeyword_3_1_3_0()); 
            match(input,88,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getInternalKeyword_3_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_3__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_3__1"
    // InternalDockerCompose.g:7582:1: rule__Network__Group_3_1_3__1 : rule__Network__Group_3_1_3__1__Impl ;
    public final void rule__Network__Group_3_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7586:1: ( rule__Network__Group_3_1_3__1__Impl )
            // InternalDockerCompose.g:7587:2: rule__Network__Group_3_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_3__1"


    // $ANTLR start "rule__Network__Group_3_1_3__1__Impl"
    // InternalDockerCompose.g:7593:1: rule__Network__Group_3_1_3__1__Impl : ( ( rule__Network__InternalAssignment_3_1_3_1 ) ) ;
    public final void rule__Network__Group_3_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7597:1: ( ( ( rule__Network__InternalAssignment_3_1_3_1 ) ) )
            // InternalDockerCompose.g:7598:1: ( ( rule__Network__InternalAssignment_3_1_3_1 ) )
            {
            // InternalDockerCompose.g:7598:1: ( ( rule__Network__InternalAssignment_3_1_3_1 ) )
            // InternalDockerCompose.g:7599:2: ( rule__Network__InternalAssignment_3_1_3_1 )
            {
             before(grammarAccess.getNetworkAccess().getInternalAssignment_3_1_3_1()); 
            // InternalDockerCompose.g:7600:2: ( rule__Network__InternalAssignment_3_1_3_1 )
            // InternalDockerCompose.g:7600:3: rule__Network__InternalAssignment_3_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__InternalAssignment_3_1_3_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getInternalAssignment_3_1_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_3__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_4__0"
    // InternalDockerCompose.g:7609:1: rule__Network__Group_3_1_4__0 : rule__Network__Group_3_1_4__0__Impl rule__Network__Group_3_1_4__1 ;
    public final void rule__Network__Group_3_1_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7613:1: ( rule__Network__Group_3_1_4__0__Impl rule__Network__Group_3_1_4__1 )
            // InternalDockerCompose.g:7614:2: rule__Network__Group_3_1_4__0__Impl rule__Network__Group_3_1_4__1
            {
            pushFollow(FOLLOW_16);
            rule__Network__Group_3_1_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_4__0"


    // $ANTLR start "rule__Network__Group_3_1_4__0__Impl"
    // InternalDockerCompose.g:7621:1: rule__Network__Group_3_1_4__0__Impl : ( 'external:' ) ;
    public final void rule__Network__Group_3_1_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7625:1: ( ( 'external:' ) )
            // InternalDockerCompose.g:7626:1: ( 'external:' )
            {
            // InternalDockerCompose.g:7626:1: ( 'external:' )
            // InternalDockerCompose.g:7627:2: 'external:'
            {
             before(grammarAccess.getNetworkAccess().getExternalKeyword_3_1_4_0()); 
            match(input,89,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getExternalKeyword_3_1_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_4__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_4__1"
    // InternalDockerCompose.g:7636:1: rule__Network__Group_3_1_4__1 : rule__Network__Group_3_1_4__1__Impl ;
    public final void rule__Network__Group_3_1_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7640:1: ( rule__Network__Group_3_1_4__1__Impl )
            // InternalDockerCompose.g:7641:2: rule__Network__Group_3_1_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_4__1"


    // $ANTLR start "rule__Network__Group_3_1_4__1__Impl"
    // InternalDockerCompose.g:7647:1: rule__Network__Group_3_1_4__1__Impl : ( ( rule__Network__ExternalAssignment_3_1_4_1 ) ) ;
    public final void rule__Network__Group_3_1_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7651:1: ( ( ( rule__Network__ExternalAssignment_3_1_4_1 ) ) )
            // InternalDockerCompose.g:7652:1: ( ( rule__Network__ExternalAssignment_3_1_4_1 ) )
            {
            // InternalDockerCompose.g:7652:1: ( ( rule__Network__ExternalAssignment_3_1_4_1 ) )
            // InternalDockerCompose.g:7653:2: ( rule__Network__ExternalAssignment_3_1_4_1 )
            {
             before(grammarAccess.getNetworkAccess().getExternalAssignment_3_1_4_1()); 
            // InternalDockerCompose.g:7654:2: ( rule__Network__ExternalAssignment_3_1_4_1 )
            // InternalDockerCompose.g:7654:3: rule__Network__ExternalAssignment_3_1_4_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__ExternalAssignment_3_1_4_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getExternalAssignment_3_1_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_4__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_5__0"
    // InternalDockerCompose.g:7663:1: rule__Network__Group_3_1_5__0 : rule__Network__Group_3_1_5__0__Impl rule__Network__Group_3_1_5__1 ;
    public final void rule__Network__Group_3_1_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7667:1: ( rule__Network__Group_3_1_5__0__Impl rule__Network__Group_3_1_5__1 )
            // InternalDockerCompose.g:7668:2: rule__Network__Group_3_1_5__0__Impl rule__Network__Group_3_1_5__1
            {
            pushFollow(FOLLOW_14);
            rule__Network__Group_3_1_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_5__0"


    // $ANTLR start "rule__Network__Group_3_1_5__0__Impl"
    // InternalDockerCompose.g:7675:1: rule__Network__Group_3_1_5__0__Impl : ( 'name:' ) ;
    public final void rule__Network__Group_3_1_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7679:1: ( ( 'name:' ) )
            // InternalDockerCompose.g:7680:1: ( 'name:' )
            {
            // InternalDockerCompose.g:7680:1: ( 'name:' )
            // InternalDockerCompose.g:7681:2: 'name:'
            {
             before(grammarAccess.getNetworkAccess().getNameKeyword_3_1_5_0()); 
            match(input,90,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getNameKeyword_3_1_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_5__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_5__1"
    // InternalDockerCompose.g:7690:1: rule__Network__Group_3_1_5__1 : rule__Network__Group_3_1_5__1__Impl ;
    public final void rule__Network__Group_3_1_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7694:1: ( rule__Network__Group_3_1_5__1__Impl )
            // InternalDockerCompose.g:7695:2: rule__Network__Group_3_1_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_5__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_5__1"


    // $ANTLR start "rule__Network__Group_3_1_5__1__Impl"
    // InternalDockerCompose.g:7701:1: rule__Network__Group_3_1_5__1__Impl : ( ( rule__Network__Network_nameAssignment_3_1_5_1 ) ) ;
    public final void rule__Network__Group_3_1_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7705:1: ( ( ( rule__Network__Network_nameAssignment_3_1_5_1 ) ) )
            // InternalDockerCompose.g:7706:1: ( ( rule__Network__Network_nameAssignment_3_1_5_1 ) )
            {
            // InternalDockerCompose.g:7706:1: ( ( rule__Network__Network_nameAssignment_3_1_5_1 ) )
            // InternalDockerCompose.g:7707:2: ( rule__Network__Network_nameAssignment_3_1_5_1 )
            {
             before(grammarAccess.getNetworkAccess().getNetwork_nameAssignment_3_1_5_1()); 
            // InternalDockerCompose.g:7708:2: ( rule__Network__Network_nameAssignment_3_1_5_1 )
            // InternalDockerCompose.g:7708:3: rule__Network__Network_nameAssignment_3_1_5_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__Network_nameAssignment_3_1_5_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getNetwork_nameAssignment_3_1_5_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_5__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_6__0"
    // InternalDockerCompose.g:7717:1: rule__Network__Group_3_1_6__0 : rule__Network__Group_3_1_6__0__Impl rule__Network__Group_3_1_6__1 ;
    public final void rule__Network__Group_3_1_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7721:1: ( rule__Network__Group_3_1_6__0__Impl rule__Network__Group_3_1_6__1 )
            // InternalDockerCompose.g:7722:2: rule__Network__Group_3_1_6__0__Impl rule__Network__Group_3_1_6__1
            {
            pushFollow(FOLLOW_7);
            rule__Network__Group_3_1_6__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_6__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_6__0"


    // $ANTLR start "rule__Network__Group_3_1_6__0__Impl"
    // InternalDockerCompose.g:7729:1: rule__Network__Group_3_1_6__0__Impl : ( 'labels:' ) ;
    public final void rule__Network__Group_3_1_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7733:1: ( ( 'labels:' ) )
            // InternalDockerCompose.g:7734:1: ( 'labels:' )
            {
            // InternalDockerCompose.g:7734:1: ( 'labels:' )
            // InternalDockerCompose.g:7735:2: 'labels:'
            {
             before(grammarAccess.getNetworkAccess().getLabelsKeyword_3_1_6_0()); 
            match(input,91,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getLabelsKeyword_3_1_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_6__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_6__1"
    // InternalDockerCompose.g:7744:1: rule__Network__Group_3_1_6__1 : rule__Network__Group_3_1_6__1__Impl ;
    public final void rule__Network__Group_3_1_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7748:1: ( rule__Network__Group_3_1_6__1__Impl )
            // InternalDockerCompose.g:7749:2: rule__Network__Group_3_1_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_6__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_6__1"


    // $ANTLR start "rule__Network__Group_3_1_6__1__Impl"
    // InternalDockerCompose.g:7755:1: rule__Network__Group_3_1_6__1__Impl : ( ( ( rule__Network__LabelsAssignment_3_1_6_1 ) ) ( ( rule__Network__LabelsAssignment_3_1_6_1 )* ) ) ;
    public final void rule__Network__Group_3_1_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7759:1: ( ( ( ( rule__Network__LabelsAssignment_3_1_6_1 ) ) ( ( rule__Network__LabelsAssignment_3_1_6_1 )* ) ) )
            // InternalDockerCompose.g:7760:1: ( ( ( rule__Network__LabelsAssignment_3_1_6_1 ) ) ( ( rule__Network__LabelsAssignment_3_1_6_1 )* ) )
            {
            // InternalDockerCompose.g:7760:1: ( ( ( rule__Network__LabelsAssignment_3_1_6_1 ) ) ( ( rule__Network__LabelsAssignment_3_1_6_1 )* ) )
            // InternalDockerCompose.g:7761:2: ( ( rule__Network__LabelsAssignment_3_1_6_1 ) ) ( ( rule__Network__LabelsAssignment_3_1_6_1 )* )
            {
            // InternalDockerCompose.g:7761:2: ( ( rule__Network__LabelsAssignment_3_1_6_1 ) )
            // InternalDockerCompose.g:7762:3: ( rule__Network__LabelsAssignment_3_1_6_1 )
            {
             before(grammarAccess.getNetworkAccess().getLabelsAssignment_3_1_6_1()); 
            // InternalDockerCompose.g:7763:3: ( rule__Network__LabelsAssignment_3_1_6_1 )
            // InternalDockerCompose.g:7763:4: rule__Network__LabelsAssignment_3_1_6_1
            {
            pushFollow(FOLLOW_4);
            rule__Network__LabelsAssignment_3_1_6_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getLabelsAssignment_3_1_6_1()); 

            }

            // InternalDockerCompose.g:7766:2: ( ( rule__Network__LabelsAssignment_3_1_6_1 )* )
            // InternalDockerCompose.g:7767:3: ( rule__Network__LabelsAssignment_3_1_6_1 )*
            {
             before(grammarAccess.getNetworkAccess().getLabelsAssignment_3_1_6_1()); 
            // InternalDockerCompose.g:7768:3: ( rule__Network__LabelsAssignment_3_1_6_1 )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( (LA67_0==RULE_ID) ) {
                    int LA67_2 = input.LA(2);

                    if ( (LA67_2==17) ) {
                        alt67=1;
                    }
                    else if ( (LA67_2==48) ) {
                        int LA67_4 = input.LA(3);

                        if ( (LA67_4==RULE_ID) ) {
                            int LA67_5 = input.LA(4);

                            if ( (LA67_5==EOF||LA67_5==RULE_ID||(LA67_5>=42 && LA67_5<=47)||(LA67_5>=85 && LA67_5<=93)) ) {
                                alt67=1;
                            }


                        }
                        else if ( ((LA67_4>=RULE_VERSION_INT && LA67_4<=RULE_STRING)||LA67_4==RULE_DEVICE_DEF||LA67_4==101) ) {
                            alt67=1;
                        }


                    }


                }


                switch (alt67) {
            	case 1 :
            	    // InternalDockerCompose.g:7768:4: rule__Network__LabelsAssignment_3_1_6_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__Network__LabelsAssignment_3_1_6_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

             after(grammarAccess.getNetworkAccess().getLabelsAssignment_3_1_6_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_6__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_7__0"
    // InternalDockerCompose.g:7778:1: rule__Network__Group_3_1_7__0 : rule__Network__Group_3_1_7__0__Impl rule__Network__Group_3_1_7__1 ;
    public final void rule__Network__Group_3_1_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7782:1: ( rule__Network__Group_3_1_7__0__Impl rule__Network__Group_3_1_7__1 )
            // InternalDockerCompose.g:7783:2: rule__Network__Group_3_1_7__0__Impl rule__Network__Group_3_1_7__1
            {
            pushFollow(FOLLOW_14);
            rule__Network__Group_3_1_7__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_7__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_7__0"


    // $ANTLR start "rule__Network__Group_3_1_7__0__Impl"
    // InternalDockerCompose.g:7790:1: rule__Network__Group_3_1_7__0__Impl : ( 'driver_opts:' ) ;
    public final void rule__Network__Group_3_1_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7794:1: ( ( 'driver_opts:' ) )
            // InternalDockerCompose.g:7795:1: ( 'driver_opts:' )
            {
            // InternalDockerCompose.g:7795:1: ( 'driver_opts:' )
            // InternalDockerCompose.g:7796:2: 'driver_opts:'
            {
             before(grammarAccess.getNetworkAccess().getDriver_optsKeyword_3_1_7_0()); 
            match(input,92,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getDriver_optsKeyword_3_1_7_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_7__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_7__1"
    // InternalDockerCompose.g:7805:1: rule__Network__Group_3_1_7__1 : rule__Network__Group_3_1_7__1__Impl ;
    public final void rule__Network__Group_3_1_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7809:1: ( rule__Network__Group_3_1_7__1__Impl )
            // InternalDockerCompose.g:7810:2: rule__Network__Group_3_1_7__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_7__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_7__1"


    // $ANTLR start "rule__Network__Group_3_1_7__1__Impl"
    // InternalDockerCompose.g:7816:1: rule__Network__Group_3_1_7__1__Impl : ( ( ( rule__Network__Driver_optsAssignment_3_1_7_1 ) ) ( ( rule__Network__Driver_optsAssignment_3_1_7_1 )* ) ) ;
    public final void rule__Network__Group_3_1_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7820:1: ( ( ( ( rule__Network__Driver_optsAssignment_3_1_7_1 ) ) ( ( rule__Network__Driver_optsAssignment_3_1_7_1 )* ) ) )
            // InternalDockerCompose.g:7821:1: ( ( ( rule__Network__Driver_optsAssignment_3_1_7_1 ) ) ( ( rule__Network__Driver_optsAssignment_3_1_7_1 )* ) )
            {
            // InternalDockerCompose.g:7821:1: ( ( ( rule__Network__Driver_optsAssignment_3_1_7_1 ) ) ( ( rule__Network__Driver_optsAssignment_3_1_7_1 )* ) )
            // InternalDockerCompose.g:7822:2: ( ( rule__Network__Driver_optsAssignment_3_1_7_1 ) ) ( ( rule__Network__Driver_optsAssignment_3_1_7_1 )* )
            {
            // InternalDockerCompose.g:7822:2: ( ( rule__Network__Driver_optsAssignment_3_1_7_1 ) )
            // InternalDockerCompose.g:7823:3: ( rule__Network__Driver_optsAssignment_3_1_7_1 )
            {
             before(grammarAccess.getNetworkAccess().getDriver_optsAssignment_3_1_7_1()); 
            // InternalDockerCompose.g:7824:3: ( rule__Network__Driver_optsAssignment_3_1_7_1 )
            // InternalDockerCompose.g:7824:4: rule__Network__Driver_optsAssignment_3_1_7_1
            {
            pushFollow(FOLLOW_46);
            rule__Network__Driver_optsAssignment_3_1_7_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getDriver_optsAssignment_3_1_7_1()); 

            }

            // InternalDockerCompose.g:7827:2: ( ( rule__Network__Driver_optsAssignment_3_1_7_1 )* )
            // InternalDockerCompose.g:7828:3: ( rule__Network__Driver_optsAssignment_3_1_7_1 )*
            {
             before(grammarAccess.getNetworkAccess().getDriver_optsAssignment_3_1_7_1()); 
            // InternalDockerCompose.g:7829:3: ( rule__Network__Driver_optsAssignment_3_1_7_1 )*
            loop68:
            do {
                int alt68=2;
                int LA68_0 = input.LA(1);

                if ( (LA68_0==RULE_ID) ) {
                    int LA68_2 = input.LA(2);

                    if ( (LA68_2==48) ) {
                        int LA68_4 = input.LA(3);

                        if ( (LA68_4==RULE_ID) ) {
                            int LA68_5 = input.LA(4);

                            if ( (LA68_5==EOF||(LA68_5>=RULE_VERSION_INT && LA68_5<=RULE_DEVICE_DEF)||(LA68_5>=42 && LA68_5<=47)||(LA68_5>=85 && LA68_5<=93)||LA68_5==101) ) {
                                alt68=1;
                            }


                        }
                        else if ( ((LA68_4>=RULE_VERSION_INT && LA68_4<=RULE_STRING)||LA68_4==RULE_DEVICE_DEF||LA68_4==101) ) {
                            alt68=1;
                        }


                    }


                }
                else if ( ((LA68_0>=RULE_VERSION_INT && LA68_0<=RULE_STRING)||LA68_0==RULE_DEVICE_DEF||LA68_0==101) ) {
                    alt68=1;
                }


                switch (alt68) {
            	case 1 :
            	    // InternalDockerCompose.g:7829:4: rule__Network__Driver_optsAssignment_3_1_7_1
            	    {
            	    pushFollow(FOLLOW_46);
            	    rule__Network__Driver_optsAssignment_3_1_7_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);

             after(grammarAccess.getNetworkAccess().getDriver_optsAssignment_3_1_7_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_7__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_8__0"
    // InternalDockerCompose.g:7839:1: rule__Network__Group_3_1_8__0 : rule__Network__Group_3_1_8__0__Impl rule__Network__Group_3_1_8__1 ;
    public final void rule__Network__Group_3_1_8__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7843:1: ( rule__Network__Group_3_1_8__0__Impl rule__Network__Group_3_1_8__1 )
            // InternalDockerCompose.g:7844:2: rule__Network__Group_3_1_8__0__Impl rule__Network__Group_3_1_8__1
            {
            pushFollow(FOLLOW_47);
            rule__Network__Group_3_1_8__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_8__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_8__0"


    // $ANTLR start "rule__Network__Group_3_1_8__0__Impl"
    // InternalDockerCompose.g:7851:1: rule__Network__Group_3_1_8__0__Impl : ( 'ipam:' ) ;
    public final void rule__Network__Group_3_1_8__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7855:1: ( ( 'ipam:' ) )
            // InternalDockerCompose.g:7856:1: ( 'ipam:' )
            {
            // InternalDockerCompose.g:7856:1: ( 'ipam:' )
            // InternalDockerCompose.g:7857:2: 'ipam:'
            {
             before(grammarAccess.getNetworkAccess().getIpamKeyword_3_1_8_0()); 
            match(input,93,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getIpamKeyword_3_1_8_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_8__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_8__1"
    // InternalDockerCompose.g:7866:1: rule__Network__Group_3_1_8__1 : rule__Network__Group_3_1_8__1__Impl ;
    public final void rule__Network__Group_3_1_8__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7870:1: ( rule__Network__Group_3_1_8__1__Impl )
            // InternalDockerCompose.g:7871:2: rule__Network__Group_3_1_8__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_8__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_8__1"


    // $ANTLR start "rule__Network__Group_3_1_8__1__Impl"
    // InternalDockerCompose.g:7877:1: rule__Network__Group_3_1_8__1__Impl : ( ( rule__Network__IpamAssignment_3_1_8_1 ) ) ;
    public final void rule__Network__Group_3_1_8__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7881:1: ( ( ( rule__Network__IpamAssignment_3_1_8_1 ) ) )
            // InternalDockerCompose.g:7882:1: ( ( rule__Network__IpamAssignment_3_1_8_1 ) )
            {
            // InternalDockerCompose.g:7882:1: ( ( rule__Network__IpamAssignment_3_1_8_1 ) )
            // InternalDockerCompose.g:7883:2: ( rule__Network__IpamAssignment_3_1_8_1 )
            {
             before(grammarAccess.getNetworkAccess().getIpamAssignment_3_1_8_1()); 
            // InternalDockerCompose.g:7884:2: ( rule__Network__IpamAssignment_3_1_8_1 )
            // InternalDockerCompose.g:7884:3: rule__Network__IpamAssignment_3_1_8_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__IpamAssignment_3_1_8_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getIpamAssignment_3_1_8_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_8__1__Impl"


    // $ANTLR start "rule__Volume__Group__0"
    // InternalDockerCompose.g:7893:1: rule__Volume__Group__0 : rule__Volume__Group__0__Impl rule__Volume__Group__1 ;
    public final void rule__Volume__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7897:1: ( rule__Volume__Group__0__Impl rule__Volume__Group__1 )
            // InternalDockerCompose.g:7898:2: rule__Volume__Group__0__Impl rule__Volume__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__Volume__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__0"


    // $ANTLR start "rule__Volume__Group__0__Impl"
    // InternalDockerCompose.g:7905:1: rule__Volume__Group__0__Impl : ( () ) ;
    public final void rule__Volume__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7909:1: ( ( () ) )
            // InternalDockerCompose.g:7910:1: ( () )
            {
            // InternalDockerCompose.g:7910:1: ( () )
            // InternalDockerCompose.g:7911:2: ()
            {
             before(grammarAccess.getVolumeAccess().getVolumeAction_0()); 
            // InternalDockerCompose.g:7912:2: ()
            // InternalDockerCompose.g:7912:3: 
            {
            }

             after(grammarAccess.getVolumeAccess().getVolumeAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__0__Impl"


    // $ANTLR start "rule__Volume__Group__1"
    // InternalDockerCompose.g:7920:1: rule__Volume__Group__1 : rule__Volume__Group__1__Impl rule__Volume__Group__2 ;
    public final void rule__Volume__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7924:1: ( rule__Volume__Group__1__Impl rule__Volume__Group__2 )
            // InternalDockerCompose.g:7925:2: rule__Volume__Group__1__Impl rule__Volume__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__Volume__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__1"


    // $ANTLR start "rule__Volume__Group__1__Impl"
    // InternalDockerCompose.g:7932:1: rule__Volume__Group__1__Impl : ( ( rule__Volume__NameAssignment_1 ) ) ;
    public final void rule__Volume__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7936:1: ( ( ( rule__Volume__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:7937:1: ( ( rule__Volume__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:7937:1: ( ( rule__Volume__NameAssignment_1 ) )
            // InternalDockerCompose.g:7938:2: ( rule__Volume__NameAssignment_1 )
            {
             before(grammarAccess.getVolumeAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:7939:2: ( rule__Volume__NameAssignment_1 )
            // InternalDockerCompose.g:7939:3: rule__Volume__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Volume__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__1__Impl"


    // $ANTLR start "rule__Volume__Group__2"
    // InternalDockerCompose.g:7947:1: rule__Volume__Group__2 : rule__Volume__Group__2__Impl rule__Volume__Group__3 ;
    public final void rule__Volume__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7951:1: ( rule__Volume__Group__2__Impl rule__Volume__Group__3 )
            // InternalDockerCompose.g:7952:2: rule__Volume__Group__2__Impl rule__Volume__Group__3
            {
            pushFollow(FOLLOW_48);
            rule__Volume__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__2"


    // $ANTLR start "rule__Volume__Group__2__Impl"
    // InternalDockerCompose.g:7959:1: rule__Volume__Group__2__Impl : ( ':' ) ;
    public final void rule__Volume__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7963:1: ( ( ':' ) )
            // InternalDockerCompose.g:7964:1: ( ':' )
            {
            // InternalDockerCompose.g:7964:1: ( ':' )
            // InternalDockerCompose.g:7965:2: ':'
            {
             before(grammarAccess.getVolumeAccess().getColonKeyword_2()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getVolumeAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__2__Impl"


    // $ANTLR start "rule__Volume__Group__3"
    // InternalDockerCompose.g:7974:1: rule__Volume__Group__3 : rule__Volume__Group__3__Impl ;
    public final void rule__Volume__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7978:1: ( rule__Volume__Group__3__Impl )
            // InternalDockerCompose.g:7979:2: rule__Volume__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__3"


    // $ANTLR start "rule__Volume__Group__3__Impl"
    // InternalDockerCompose.g:7985:1: rule__Volume__Group__3__Impl : ( ( rule__Volume__UnorderedGroup_3 ) ) ;
    public final void rule__Volume__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7989:1: ( ( ( rule__Volume__UnorderedGroup_3 ) ) )
            // InternalDockerCompose.g:7990:1: ( ( rule__Volume__UnorderedGroup_3 ) )
            {
            // InternalDockerCompose.g:7990:1: ( ( rule__Volume__UnorderedGroup_3 ) )
            // InternalDockerCompose.g:7991:2: ( rule__Volume__UnorderedGroup_3 )
            {
             before(grammarAccess.getVolumeAccess().getUnorderedGroup_3()); 
            // InternalDockerCompose.g:7992:2: ( rule__Volume__UnorderedGroup_3 )
            // InternalDockerCompose.g:7992:3: rule__Volume__UnorderedGroup_3
            {
            pushFollow(FOLLOW_2);
            rule__Volume__UnorderedGroup_3();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getUnorderedGroup_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__3__Impl"


    // $ANTLR start "rule__Volume__Group_3_0__0"
    // InternalDockerCompose.g:8001:1: rule__Volume__Group_3_0__0 : rule__Volume__Group_3_0__0__Impl rule__Volume__Group_3_0__1 ;
    public final void rule__Volume__Group_3_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8005:1: ( rule__Volume__Group_3_0__0__Impl rule__Volume__Group_3_0__1 )
            // InternalDockerCompose.g:8006:2: rule__Volume__Group_3_0__0__Impl rule__Volume__Group_3_0__1
            {
            pushFollow(FOLLOW_16);
            rule__Volume__Group_3_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_0__0"


    // $ANTLR start "rule__Volume__Group_3_0__0__Impl"
    // InternalDockerCompose.g:8013:1: rule__Volume__Group_3_0__0__Impl : ( 'external:' ) ;
    public final void rule__Volume__Group_3_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8017:1: ( ( 'external:' ) )
            // InternalDockerCompose.g:8018:1: ( 'external:' )
            {
            // InternalDockerCompose.g:8018:1: ( 'external:' )
            // InternalDockerCompose.g:8019:2: 'external:'
            {
             before(grammarAccess.getVolumeAccess().getExternalKeyword_3_0_0()); 
            match(input,89,FOLLOW_2); 
             after(grammarAccess.getVolumeAccess().getExternalKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_0__0__Impl"


    // $ANTLR start "rule__Volume__Group_3_0__1"
    // InternalDockerCompose.g:8028:1: rule__Volume__Group_3_0__1 : rule__Volume__Group_3_0__1__Impl ;
    public final void rule__Volume__Group_3_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8032:1: ( rule__Volume__Group_3_0__1__Impl )
            // InternalDockerCompose.g:8033:2: rule__Volume__Group_3_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_0__1"


    // $ANTLR start "rule__Volume__Group_3_0__1__Impl"
    // InternalDockerCompose.g:8039:1: rule__Volume__Group_3_0__1__Impl : ( ( rule__Volume__ExternalAssignment_3_0_1 ) ) ;
    public final void rule__Volume__Group_3_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8043:1: ( ( ( rule__Volume__ExternalAssignment_3_0_1 ) ) )
            // InternalDockerCompose.g:8044:1: ( ( rule__Volume__ExternalAssignment_3_0_1 ) )
            {
            // InternalDockerCompose.g:8044:1: ( ( rule__Volume__ExternalAssignment_3_0_1 ) )
            // InternalDockerCompose.g:8045:2: ( rule__Volume__ExternalAssignment_3_0_1 )
            {
             before(grammarAccess.getVolumeAccess().getExternalAssignment_3_0_1()); 
            // InternalDockerCompose.g:8046:2: ( rule__Volume__ExternalAssignment_3_0_1 )
            // InternalDockerCompose.g:8046:3: rule__Volume__ExternalAssignment_3_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Volume__ExternalAssignment_3_0_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getExternalAssignment_3_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_0__1__Impl"


    // $ANTLR start "rule__Volume__Group_3_1__0"
    // InternalDockerCompose.g:8055:1: rule__Volume__Group_3_1__0 : rule__Volume__Group_3_1__0__Impl rule__Volume__Group_3_1__1 ;
    public final void rule__Volume__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8059:1: ( rule__Volume__Group_3_1__0__Impl rule__Volume__Group_3_1__1 )
            // InternalDockerCompose.g:8060:2: rule__Volume__Group_3_1__0__Impl rule__Volume__Group_3_1__1
            {
            pushFollow(FOLLOW_14);
            rule__Volume__Group_3_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_1__0"


    // $ANTLR start "rule__Volume__Group_3_1__0__Impl"
    // InternalDockerCompose.g:8067:1: rule__Volume__Group_3_1__0__Impl : ( 'driver:' ) ;
    public final void rule__Volume__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8071:1: ( ( 'driver:' ) )
            // InternalDockerCompose.g:8072:1: ( 'driver:' )
            {
            // InternalDockerCompose.g:8072:1: ( 'driver:' )
            // InternalDockerCompose.g:8073:2: 'driver:'
            {
             before(grammarAccess.getVolumeAccess().getDriverKeyword_3_1_0()); 
            match(input,85,FOLLOW_2); 
             after(grammarAccess.getVolumeAccess().getDriverKeyword_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_1__0__Impl"


    // $ANTLR start "rule__Volume__Group_3_1__1"
    // InternalDockerCompose.g:8082:1: rule__Volume__Group_3_1__1 : rule__Volume__Group_3_1__1__Impl ;
    public final void rule__Volume__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8086:1: ( rule__Volume__Group_3_1__1__Impl )
            // InternalDockerCompose.g:8087:2: rule__Volume__Group_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_1__1"


    // $ANTLR start "rule__Volume__Group_3_1__1__Impl"
    // InternalDockerCompose.g:8093:1: rule__Volume__Group_3_1__1__Impl : ( ( rule__Volume__DriverAssignment_3_1_1 ) ) ;
    public final void rule__Volume__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8097:1: ( ( ( rule__Volume__DriverAssignment_3_1_1 ) ) )
            // InternalDockerCompose.g:8098:1: ( ( rule__Volume__DriverAssignment_3_1_1 ) )
            {
            // InternalDockerCompose.g:8098:1: ( ( rule__Volume__DriverAssignment_3_1_1 ) )
            // InternalDockerCompose.g:8099:2: ( rule__Volume__DriverAssignment_3_1_1 )
            {
             before(grammarAccess.getVolumeAccess().getDriverAssignment_3_1_1()); 
            // InternalDockerCompose.g:8100:2: ( rule__Volume__DriverAssignment_3_1_1 )
            // InternalDockerCompose.g:8100:3: rule__Volume__DriverAssignment_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Volume__DriverAssignment_3_1_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getDriverAssignment_3_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_1__1__Impl"


    // $ANTLR start "rule__Volume__Group_3_2__0"
    // InternalDockerCompose.g:8109:1: rule__Volume__Group_3_2__0 : rule__Volume__Group_3_2__0__Impl rule__Volume__Group_3_2__1 ;
    public final void rule__Volume__Group_3_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8113:1: ( rule__Volume__Group_3_2__0__Impl rule__Volume__Group_3_2__1 )
            // InternalDockerCompose.g:8114:2: rule__Volume__Group_3_2__0__Impl rule__Volume__Group_3_2__1
            {
            pushFollow(FOLLOW_14);
            rule__Volume__Group_3_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_2__0"


    // $ANTLR start "rule__Volume__Group_3_2__0__Impl"
    // InternalDockerCompose.g:8121:1: rule__Volume__Group_3_2__0__Impl : ( 'name:' ) ;
    public final void rule__Volume__Group_3_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8125:1: ( ( 'name:' ) )
            // InternalDockerCompose.g:8126:1: ( 'name:' )
            {
            // InternalDockerCompose.g:8126:1: ( 'name:' )
            // InternalDockerCompose.g:8127:2: 'name:'
            {
             before(grammarAccess.getVolumeAccess().getNameKeyword_3_2_0()); 
            match(input,90,FOLLOW_2); 
             after(grammarAccess.getVolumeAccess().getNameKeyword_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_2__0__Impl"


    // $ANTLR start "rule__Volume__Group_3_2__1"
    // InternalDockerCompose.g:8136:1: rule__Volume__Group_3_2__1 : rule__Volume__Group_3_2__1__Impl ;
    public final void rule__Volume__Group_3_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8140:1: ( rule__Volume__Group_3_2__1__Impl )
            // InternalDockerCompose.g:8141:2: rule__Volume__Group_3_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_2__1"


    // $ANTLR start "rule__Volume__Group_3_2__1__Impl"
    // InternalDockerCompose.g:8147:1: rule__Volume__Group_3_2__1__Impl : ( ( rule__Volume__Volume_nameAssignment_3_2_1 ) ) ;
    public final void rule__Volume__Group_3_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8151:1: ( ( ( rule__Volume__Volume_nameAssignment_3_2_1 ) ) )
            // InternalDockerCompose.g:8152:1: ( ( rule__Volume__Volume_nameAssignment_3_2_1 ) )
            {
            // InternalDockerCompose.g:8152:1: ( ( rule__Volume__Volume_nameAssignment_3_2_1 ) )
            // InternalDockerCompose.g:8153:2: ( rule__Volume__Volume_nameAssignment_3_2_1 )
            {
             before(grammarAccess.getVolumeAccess().getVolume_nameAssignment_3_2_1()); 
            // InternalDockerCompose.g:8154:2: ( rule__Volume__Volume_nameAssignment_3_2_1 )
            // InternalDockerCompose.g:8154:3: rule__Volume__Volume_nameAssignment_3_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Volume_nameAssignment_3_2_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getVolume_nameAssignment_3_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_2__1__Impl"


    // $ANTLR start "rule__Volume__Group_3_3__0"
    // InternalDockerCompose.g:8163:1: rule__Volume__Group_3_3__0 : rule__Volume__Group_3_3__0__Impl rule__Volume__Group_3_3__1 ;
    public final void rule__Volume__Group_3_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8167:1: ( rule__Volume__Group_3_3__0__Impl rule__Volume__Group_3_3__1 )
            // InternalDockerCompose.g:8168:2: rule__Volume__Group_3_3__0__Impl rule__Volume__Group_3_3__1
            {
            pushFollow(FOLLOW_14);
            rule__Volume__Group_3_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_3__0"


    // $ANTLR start "rule__Volume__Group_3_3__0__Impl"
    // InternalDockerCompose.g:8175:1: rule__Volume__Group_3_3__0__Impl : ( 'labels:' ) ;
    public final void rule__Volume__Group_3_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8179:1: ( ( 'labels:' ) )
            // InternalDockerCompose.g:8180:1: ( 'labels:' )
            {
            // InternalDockerCompose.g:8180:1: ( 'labels:' )
            // InternalDockerCompose.g:8181:2: 'labels:'
            {
             before(grammarAccess.getVolumeAccess().getLabelsKeyword_3_3_0()); 
            match(input,91,FOLLOW_2); 
             after(grammarAccess.getVolumeAccess().getLabelsKeyword_3_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_3__0__Impl"


    // $ANTLR start "rule__Volume__Group_3_3__1"
    // InternalDockerCompose.g:8190:1: rule__Volume__Group_3_3__1 : rule__Volume__Group_3_3__1__Impl ;
    public final void rule__Volume__Group_3_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8194:1: ( rule__Volume__Group_3_3__1__Impl )
            // InternalDockerCompose.g:8195:2: rule__Volume__Group_3_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_3__1"


    // $ANTLR start "rule__Volume__Group_3_3__1__Impl"
    // InternalDockerCompose.g:8201:1: rule__Volume__Group_3_3__1__Impl : ( ( ( rule__Volume__LabelsAssignment_3_3_1 ) ) ( ( rule__Volume__LabelsAssignment_3_3_1 )* ) ) ;
    public final void rule__Volume__Group_3_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8205:1: ( ( ( ( rule__Volume__LabelsAssignment_3_3_1 ) ) ( ( rule__Volume__LabelsAssignment_3_3_1 )* ) ) )
            // InternalDockerCompose.g:8206:1: ( ( ( rule__Volume__LabelsAssignment_3_3_1 ) ) ( ( rule__Volume__LabelsAssignment_3_3_1 )* ) )
            {
            // InternalDockerCompose.g:8206:1: ( ( ( rule__Volume__LabelsAssignment_3_3_1 ) ) ( ( rule__Volume__LabelsAssignment_3_3_1 )* ) )
            // InternalDockerCompose.g:8207:2: ( ( rule__Volume__LabelsAssignment_3_3_1 ) ) ( ( rule__Volume__LabelsAssignment_3_3_1 )* )
            {
            // InternalDockerCompose.g:8207:2: ( ( rule__Volume__LabelsAssignment_3_3_1 ) )
            // InternalDockerCompose.g:8208:3: ( rule__Volume__LabelsAssignment_3_3_1 )
            {
             before(grammarAccess.getVolumeAccess().getLabelsAssignment_3_3_1()); 
            // InternalDockerCompose.g:8209:3: ( rule__Volume__LabelsAssignment_3_3_1 )
            // InternalDockerCompose.g:8209:4: rule__Volume__LabelsAssignment_3_3_1
            {
            pushFollow(FOLLOW_46);
            rule__Volume__LabelsAssignment_3_3_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getLabelsAssignment_3_3_1()); 

            }

            // InternalDockerCompose.g:8212:2: ( ( rule__Volume__LabelsAssignment_3_3_1 )* )
            // InternalDockerCompose.g:8213:3: ( rule__Volume__LabelsAssignment_3_3_1 )*
            {
             before(grammarAccess.getVolumeAccess().getLabelsAssignment_3_3_1()); 
            // InternalDockerCompose.g:8214:3: ( rule__Volume__LabelsAssignment_3_3_1 )*
            loop69:
            do {
                int alt69=2;
                int LA69_0 = input.LA(1);

                if ( (LA69_0==RULE_ID) ) {
                    int LA69_2 = input.LA(2);

                    if ( (LA69_2==48) ) {
                        int LA69_4 = input.LA(3);

                        if ( (LA69_4==RULE_ID) ) {
                            int LA69_5 = input.LA(4);

                            if ( (LA69_5==EOF||(LA69_5>=RULE_VERSION_INT && LA69_5<=RULE_DEVICE_DEF)||(LA69_5>=42 && LA69_5<=47)||LA69_5==85||(LA69_5>=89 && LA69_5<=92)||LA69_5==101) ) {
                                alt69=1;
                            }


                        }
                        else if ( ((LA69_4>=RULE_VERSION_INT && LA69_4<=RULE_STRING)||LA69_4==RULE_DEVICE_DEF||LA69_4==101) ) {
                            alt69=1;
                        }


                    }


                }
                else if ( ((LA69_0>=RULE_VERSION_INT && LA69_0<=RULE_STRING)||LA69_0==RULE_DEVICE_DEF||LA69_0==101) ) {
                    alt69=1;
                }


                switch (alt69) {
            	case 1 :
            	    // InternalDockerCompose.g:8214:4: rule__Volume__LabelsAssignment_3_3_1
            	    {
            	    pushFollow(FOLLOW_46);
            	    rule__Volume__LabelsAssignment_3_3_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);

             after(grammarAccess.getVolumeAccess().getLabelsAssignment_3_3_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_3__1__Impl"


    // $ANTLR start "rule__Volume__Group_3_4__0"
    // InternalDockerCompose.g:8224:1: rule__Volume__Group_3_4__0 : rule__Volume__Group_3_4__0__Impl rule__Volume__Group_3_4__1 ;
    public final void rule__Volume__Group_3_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8228:1: ( rule__Volume__Group_3_4__0__Impl rule__Volume__Group_3_4__1 )
            // InternalDockerCompose.g:8229:2: rule__Volume__Group_3_4__0__Impl rule__Volume__Group_3_4__1
            {
            pushFollow(FOLLOW_14);
            rule__Volume__Group_3_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_4__0"


    // $ANTLR start "rule__Volume__Group_3_4__0__Impl"
    // InternalDockerCompose.g:8236:1: rule__Volume__Group_3_4__0__Impl : ( 'driver_opts:' ) ;
    public final void rule__Volume__Group_3_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8240:1: ( ( 'driver_opts:' ) )
            // InternalDockerCompose.g:8241:1: ( 'driver_opts:' )
            {
            // InternalDockerCompose.g:8241:1: ( 'driver_opts:' )
            // InternalDockerCompose.g:8242:2: 'driver_opts:'
            {
             before(grammarAccess.getVolumeAccess().getDriver_optsKeyword_3_4_0()); 
            match(input,92,FOLLOW_2); 
             after(grammarAccess.getVolumeAccess().getDriver_optsKeyword_3_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_4__0__Impl"


    // $ANTLR start "rule__Volume__Group_3_4__1"
    // InternalDockerCompose.g:8251:1: rule__Volume__Group_3_4__1 : rule__Volume__Group_3_4__1__Impl ;
    public final void rule__Volume__Group_3_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8255:1: ( rule__Volume__Group_3_4__1__Impl )
            // InternalDockerCompose.g:8256:2: rule__Volume__Group_3_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_4__1"


    // $ANTLR start "rule__Volume__Group_3_4__1__Impl"
    // InternalDockerCompose.g:8262:1: rule__Volume__Group_3_4__1__Impl : ( ( ( rule__Volume__Driver_optsAssignment_3_4_1 ) ) ( ( rule__Volume__Driver_optsAssignment_3_4_1 )* ) ) ;
    public final void rule__Volume__Group_3_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8266:1: ( ( ( ( rule__Volume__Driver_optsAssignment_3_4_1 ) ) ( ( rule__Volume__Driver_optsAssignment_3_4_1 )* ) ) )
            // InternalDockerCompose.g:8267:1: ( ( ( rule__Volume__Driver_optsAssignment_3_4_1 ) ) ( ( rule__Volume__Driver_optsAssignment_3_4_1 )* ) )
            {
            // InternalDockerCompose.g:8267:1: ( ( ( rule__Volume__Driver_optsAssignment_3_4_1 ) ) ( ( rule__Volume__Driver_optsAssignment_3_4_1 )* ) )
            // InternalDockerCompose.g:8268:2: ( ( rule__Volume__Driver_optsAssignment_3_4_1 ) ) ( ( rule__Volume__Driver_optsAssignment_3_4_1 )* )
            {
            // InternalDockerCompose.g:8268:2: ( ( rule__Volume__Driver_optsAssignment_3_4_1 ) )
            // InternalDockerCompose.g:8269:3: ( rule__Volume__Driver_optsAssignment_3_4_1 )
            {
             before(grammarAccess.getVolumeAccess().getDriver_optsAssignment_3_4_1()); 
            // InternalDockerCompose.g:8270:3: ( rule__Volume__Driver_optsAssignment_3_4_1 )
            // InternalDockerCompose.g:8270:4: rule__Volume__Driver_optsAssignment_3_4_1
            {
            pushFollow(FOLLOW_46);
            rule__Volume__Driver_optsAssignment_3_4_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getDriver_optsAssignment_3_4_1()); 

            }

            // InternalDockerCompose.g:8273:2: ( ( rule__Volume__Driver_optsAssignment_3_4_1 )* )
            // InternalDockerCompose.g:8274:3: ( rule__Volume__Driver_optsAssignment_3_4_1 )*
            {
             before(grammarAccess.getVolumeAccess().getDriver_optsAssignment_3_4_1()); 
            // InternalDockerCompose.g:8275:3: ( rule__Volume__Driver_optsAssignment_3_4_1 )*
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( (LA70_0==RULE_ID) ) {
                    int LA70_2 = input.LA(2);

                    if ( (LA70_2==48) ) {
                        int LA70_4 = input.LA(3);

                        if ( ((LA70_4>=RULE_VERSION_INT && LA70_4<=RULE_STRING)||LA70_4==RULE_DEVICE_DEF||LA70_4==101) ) {
                            alt70=1;
                        }
                        else if ( (LA70_4==RULE_ID) ) {
                            int LA70_5 = input.LA(4);

                            if ( (LA70_5==EOF||(LA70_5>=RULE_VERSION_INT && LA70_5<=RULE_DEVICE_DEF)||(LA70_5>=42 && LA70_5<=47)||LA70_5==85||(LA70_5>=89 && LA70_5<=92)||LA70_5==101) ) {
                                alt70=1;
                            }


                        }


                    }


                }
                else if ( ((LA70_0>=RULE_VERSION_INT && LA70_0<=RULE_STRING)||LA70_0==RULE_DEVICE_DEF||LA70_0==101) ) {
                    alt70=1;
                }


                switch (alt70) {
            	case 1 :
            	    // InternalDockerCompose.g:8275:4: rule__Volume__Driver_optsAssignment_3_4_1
            	    {
            	    pushFollow(FOLLOW_46);
            	    rule__Volume__Driver_optsAssignment_3_4_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);

             after(grammarAccess.getVolumeAccess().getDriver_optsAssignment_3_4_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_4__1__Impl"


    // $ANTLR start "rule__Config__Group__0"
    // InternalDockerCompose.g:8285:1: rule__Config__Group__0 : rule__Config__Group__0__Impl rule__Config__Group__1 ;
    public final void rule__Config__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8289:1: ( rule__Config__Group__0__Impl rule__Config__Group__1 )
            // InternalDockerCompose.g:8290:2: rule__Config__Group__0__Impl rule__Config__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__Config__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Config__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__0"


    // $ANTLR start "rule__Config__Group__0__Impl"
    // InternalDockerCompose.g:8297:1: rule__Config__Group__0__Impl : ( () ) ;
    public final void rule__Config__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8301:1: ( ( () ) )
            // InternalDockerCompose.g:8302:1: ( () )
            {
            // InternalDockerCompose.g:8302:1: ( () )
            // InternalDockerCompose.g:8303:2: ()
            {
             before(grammarAccess.getConfigAccess().getConfigAction_0()); 
            // InternalDockerCompose.g:8304:2: ()
            // InternalDockerCompose.g:8304:3: 
            {
            }

             after(grammarAccess.getConfigAccess().getConfigAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__0__Impl"


    // $ANTLR start "rule__Config__Group__1"
    // InternalDockerCompose.g:8312:1: rule__Config__Group__1 : rule__Config__Group__1__Impl rule__Config__Group__2 ;
    public final void rule__Config__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8316:1: ( rule__Config__Group__1__Impl rule__Config__Group__2 )
            // InternalDockerCompose.g:8317:2: rule__Config__Group__1__Impl rule__Config__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__Config__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Config__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__1"


    // $ANTLR start "rule__Config__Group__1__Impl"
    // InternalDockerCompose.g:8324:1: rule__Config__Group__1__Impl : ( ( rule__Config__NameAssignment_1 ) ) ;
    public final void rule__Config__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8328:1: ( ( ( rule__Config__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:8329:1: ( ( rule__Config__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:8329:1: ( ( rule__Config__NameAssignment_1 ) )
            // InternalDockerCompose.g:8330:2: ( rule__Config__NameAssignment_1 )
            {
             before(grammarAccess.getConfigAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:8331:2: ( rule__Config__NameAssignment_1 )
            // InternalDockerCompose.g:8331:3: rule__Config__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Config__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__1__Impl"


    // $ANTLR start "rule__Config__Group__2"
    // InternalDockerCompose.g:8339:1: rule__Config__Group__2 : rule__Config__Group__2__Impl rule__Config__Group__3 ;
    public final void rule__Config__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8343:1: ( rule__Config__Group__2__Impl rule__Config__Group__3 )
            // InternalDockerCompose.g:8344:2: rule__Config__Group__2__Impl rule__Config__Group__3
            {
            pushFollow(FOLLOW_49);
            rule__Config__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Config__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__2"


    // $ANTLR start "rule__Config__Group__2__Impl"
    // InternalDockerCompose.g:8351:1: rule__Config__Group__2__Impl : ( ':' ) ;
    public final void rule__Config__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8355:1: ( ( ':' ) )
            // InternalDockerCompose.g:8356:1: ( ':' )
            {
            // InternalDockerCompose.g:8356:1: ( ':' )
            // InternalDockerCompose.g:8357:2: ':'
            {
             before(grammarAccess.getConfigAccess().getColonKeyword_2()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getConfigAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__2__Impl"


    // $ANTLR start "rule__Config__Group__3"
    // InternalDockerCompose.g:8366:1: rule__Config__Group__3 : rule__Config__Group__3__Impl ;
    public final void rule__Config__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8370:1: ( rule__Config__Group__3__Impl )
            // InternalDockerCompose.g:8371:2: rule__Config__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Config__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__3"


    // $ANTLR start "rule__Config__Group__3__Impl"
    // InternalDockerCompose.g:8377:1: rule__Config__Group__3__Impl : ( ( rule__Config__UnorderedGroup_3 ) ) ;
    public final void rule__Config__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8381:1: ( ( ( rule__Config__UnorderedGroup_3 ) ) )
            // InternalDockerCompose.g:8382:1: ( ( rule__Config__UnorderedGroup_3 ) )
            {
            // InternalDockerCompose.g:8382:1: ( ( rule__Config__UnorderedGroup_3 ) )
            // InternalDockerCompose.g:8383:2: ( rule__Config__UnorderedGroup_3 )
            {
             before(grammarAccess.getConfigAccess().getUnorderedGroup_3()); 
            // InternalDockerCompose.g:8384:2: ( rule__Config__UnorderedGroup_3 )
            // InternalDockerCompose.g:8384:3: rule__Config__UnorderedGroup_3
            {
            pushFollow(FOLLOW_2);
            rule__Config__UnorderedGroup_3();

            state._fsp--;


            }

             after(grammarAccess.getConfigAccess().getUnorderedGroup_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__3__Impl"


    // $ANTLR start "rule__Config__Group_3_0__0"
    // InternalDockerCompose.g:8393:1: rule__Config__Group_3_0__0 : rule__Config__Group_3_0__0__Impl rule__Config__Group_3_0__1 ;
    public final void rule__Config__Group_3_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8397:1: ( rule__Config__Group_3_0__0__Impl rule__Config__Group_3_0__1 )
            // InternalDockerCompose.g:8398:2: rule__Config__Group_3_0__0__Impl rule__Config__Group_3_0__1
            {
            pushFollow(FOLLOW_16);
            rule__Config__Group_3_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Config__Group_3_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_0__0"


    // $ANTLR start "rule__Config__Group_3_0__0__Impl"
    // InternalDockerCompose.g:8405:1: rule__Config__Group_3_0__0__Impl : ( 'external:' ) ;
    public final void rule__Config__Group_3_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8409:1: ( ( 'external:' ) )
            // InternalDockerCompose.g:8410:1: ( 'external:' )
            {
            // InternalDockerCompose.g:8410:1: ( 'external:' )
            // InternalDockerCompose.g:8411:2: 'external:'
            {
             before(grammarAccess.getConfigAccess().getExternalKeyword_3_0_0()); 
            match(input,89,FOLLOW_2); 
             after(grammarAccess.getConfigAccess().getExternalKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_0__0__Impl"


    // $ANTLR start "rule__Config__Group_3_0__1"
    // InternalDockerCompose.g:8420:1: rule__Config__Group_3_0__1 : rule__Config__Group_3_0__1__Impl ;
    public final void rule__Config__Group_3_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8424:1: ( rule__Config__Group_3_0__1__Impl )
            // InternalDockerCompose.g:8425:2: rule__Config__Group_3_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Config__Group_3_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_0__1"


    // $ANTLR start "rule__Config__Group_3_0__1__Impl"
    // InternalDockerCompose.g:8431:1: rule__Config__Group_3_0__1__Impl : ( ( rule__Config__ExternalAssignment_3_0_1 ) ) ;
    public final void rule__Config__Group_3_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8435:1: ( ( ( rule__Config__ExternalAssignment_3_0_1 ) ) )
            // InternalDockerCompose.g:8436:1: ( ( rule__Config__ExternalAssignment_3_0_1 ) )
            {
            // InternalDockerCompose.g:8436:1: ( ( rule__Config__ExternalAssignment_3_0_1 ) )
            // InternalDockerCompose.g:8437:2: ( rule__Config__ExternalAssignment_3_0_1 )
            {
             before(grammarAccess.getConfigAccess().getExternalAssignment_3_0_1()); 
            // InternalDockerCompose.g:8438:2: ( rule__Config__ExternalAssignment_3_0_1 )
            // InternalDockerCompose.g:8438:3: rule__Config__ExternalAssignment_3_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Config__ExternalAssignment_3_0_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigAccess().getExternalAssignment_3_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_0__1__Impl"


    // $ANTLR start "rule__Config__Group_3_1__0"
    // InternalDockerCompose.g:8447:1: rule__Config__Group_3_1__0 : rule__Config__Group_3_1__0__Impl rule__Config__Group_3_1__1 ;
    public final void rule__Config__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8451:1: ( rule__Config__Group_3_1__0__Impl rule__Config__Group_3_1__1 )
            // InternalDockerCompose.g:8452:2: rule__Config__Group_3_1__0__Impl rule__Config__Group_3_1__1
            {
            pushFollow(FOLLOW_12);
            rule__Config__Group_3_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Config__Group_3_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_1__0"


    // $ANTLR start "rule__Config__Group_3_1__0__Impl"
    // InternalDockerCompose.g:8459:1: rule__Config__Group_3_1__0__Impl : ( 'file:' ) ;
    public final void rule__Config__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8463:1: ( ( 'file:' ) )
            // InternalDockerCompose.g:8464:1: ( 'file:' )
            {
            // InternalDockerCompose.g:8464:1: ( 'file:' )
            // InternalDockerCompose.g:8465:2: 'file:'
            {
             before(grammarAccess.getConfigAccess().getFileKeyword_3_1_0()); 
            match(input,94,FOLLOW_2); 
             after(grammarAccess.getConfigAccess().getFileKeyword_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_1__0__Impl"


    // $ANTLR start "rule__Config__Group_3_1__1"
    // InternalDockerCompose.g:8474:1: rule__Config__Group_3_1__1 : rule__Config__Group_3_1__1__Impl ;
    public final void rule__Config__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8478:1: ( rule__Config__Group_3_1__1__Impl )
            // InternalDockerCompose.g:8479:2: rule__Config__Group_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Config__Group_3_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_1__1"


    // $ANTLR start "rule__Config__Group_3_1__1__Impl"
    // InternalDockerCompose.g:8485:1: rule__Config__Group_3_1__1__Impl : ( ( rule__Config__FileAssignment_3_1_1 ) ) ;
    public final void rule__Config__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8489:1: ( ( ( rule__Config__FileAssignment_3_1_1 ) ) )
            // InternalDockerCompose.g:8490:1: ( ( rule__Config__FileAssignment_3_1_1 ) )
            {
            // InternalDockerCompose.g:8490:1: ( ( rule__Config__FileAssignment_3_1_1 ) )
            // InternalDockerCompose.g:8491:2: ( rule__Config__FileAssignment_3_1_1 )
            {
             before(grammarAccess.getConfigAccess().getFileAssignment_3_1_1()); 
            // InternalDockerCompose.g:8492:2: ( rule__Config__FileAssignment_3_1_1 )
            // InternalDockerCompose.g:8492:3: rule__Config__FileAssignment_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Config__FileAssignment_3_1_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigAccess().getFileAssignment_3_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_1__1__Impl"


    // $ANTLR start "rule__Config__Group_3_2__0"
    // InternalDockerCompose.g:8501:1: rule__Config__Group_3_2__0 : rule__Config__Group_3_2__0__Impl rule__Config__Group_3_2__1 ;
    public final void rule__Config__Group_3_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8505:1: ( rule__Config__Group_3_2__0__Impl rule__Config__Group_3_2__1 )
            // InternalDockerCompose.g:8506:2: rule__Config__Group_3_2__0__Impl rule__Config__Group_3_2__1
            {
            pushFollow(FOLLOW_14);
            rule__Config__Group_3_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Config__Group_3_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_2__0"


    // $ANTLR start "rule__Config__Group_3_2__0__Impl"
    // InternalDockerCompose.g:8513:1: rule__Config__Group_3_2__0__Impl : ( 'name:' ) ;
    public final void rule__Config__Group_3_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8517:1: ( ( 'name:' ) )
            // InternalDockerCompose.g:8518:1: ( 'name:' )
            {
            // InternalDockerCompose.g:8518:1: ( 'name:' )
            // InternalDockerCompose.g:8519:2: 'name:'
            {
             before(grammarAccess.getConfigAccess().getNameKeyword_3_2_0()); 
            match(input,90,FOLLOW_2); 
             after(grammarAccess.getConfigAccess().getNameKeyword_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_2__0__Impl"


    // $ANTLR start "rule__Config__Group_3_2__1"
    // InternalDockerCompose.g:8528:1: rule__Config__Group_3_2__1 : rule__Config__Group_3_2__1__Impl ;
    public final void rule__Config__Group_3_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8532:1: ( rule__Config__Group_3_2__1__Impl )
            // InternalDockerCompose.g:8533:2: rule__Config__Group_3_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Config__Group_3_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_2__1"


    // $ANTLR start "rule__Config__Group_3_2__1__Impl"
    // InternalDockerCompose.g:8539:1: rule__Config__Group_3_2__1__Impl : ( ( rule__Config__Config_nameAssignment_3_2_1 ) ) ;
    public final void rule__Config__Group_3_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8543:1: ( ( ( rule__Config__Config_nameAssignment_3_2_1 ) ) )
            // InternalDockerCompose.g:8544:1: ( ( rule__Config__Config_nameAssignment_3_2_1 ) )
            {
            // InternalDockerCompose.g:8544:1: ( ( rule__Config__Config_nameAssignment_3_2_1 ) )
            // InternalDockerCompose.g:8545:2: ( rule__Config__Config_nameAssignment_3_2_1 )
            {
             before(grammarAccess.getConfigAccess().getConfig_nameAssignment_3_2_1()); 
            // InternalDockerCompose.g:8546:2: ( rule__Config__Config_nameAssignment_3_2_1 )
            // InternalDockerCompose.g:8546:3: rule__Config__Config_nameAssignment_3_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Config__Config_nameAssignment_3_2_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigAccess().getConfig_nameAssignment_3_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_2__1__Impl"


    // $ANTLR start "rule__Secret__Group__0"
    // InternalDockerCompose.g:8555:1: rule__Secret__Group__0 : rule__Secret__Group__0__Impl rule__Secret__Group__1 ;
    public final void rule__Secret__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8559:1: ( rule__Secret__Group__0__Impl rule__Secret__Group__1 )
            // InternalDockerCompose.g:8560:2: rule__Secret__Group__0__Impl rule__Secret__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__Secret__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__0"


    // $ANTLR start "rule__Secret__Group__0__Impl"
    // InternalDockerCompose.g:8567:1: rule__Secret__Group__0__Impl : ( () ) ;
    public final void rule__Secret__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8571:1: ( ( () ) )
            // InternalDockerCompose.g:8572:1: ( () )
            {
            // InternalDockerCompose.g:8572:1: ( () )
            // InternalDockerCompose.g:8573:2: ()
            {
             before(grammarAccess.getSecretAccess().getSecretAction_0()); 
            // InternalDockerCompose.g:8574:2: ()
            // InternalDockerCompose.g:8574:3: 
            {
            }

             after(grammarAccess.getSecretAccess().getSecretAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__0__Impl"


    // $ANTLR start "rule__Secret__Group__1"
    // InternalDockerCompose.g:8582:1: rule__Secret__Group__1 : rule__Secret__Group__1__Impl rule__Secret__Group__2 ;
    public final void rule__Secret__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8586:1: ( rule__Secret__Group__1__Impl rule__Secret__Group__2 )
            // InternalDockerCompose.g:8587:2: rule__Secret__Group__1__Impl rule__Secret__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__Secret__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__1"


    // $ANTLR start "rule__Secret__Group__1__Impl"
    // InternalDockerCompose.g:8594:1: rule__Secret__Group__1__Impl : ( ( rule__Secret__NameAssignment_1 ) ) ;
    public final void rule__Secret__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8598:1: ( ( ( rule__Secret__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:8599:1: ( ( rule__Secret__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:8599:1: ( ( rule__Secret__NameAssignment_1 ) )
            // InternalDockerCompose.g:8600:2: ( rule__Secret__NameAssignment_1 )
            {
             before(grammarAccess.getSecretAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:8601:2: ( rule__Secret__NameAssignment_1 )
            // InternalDockerCompose.g:8601:3: rule__Secret__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Secret__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__1__Impl"


    // $ANTLR start "rule__Secret__Group__2"
    // InternalDockerCompose.g:8609:1: rule__Secret__Group__2 : rule__Secret__Group__2__Impl rule__Secret__Group__3 ;
    public final void rule__Secret__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8613:1: ( rule__Secret__Group__2__Impl rule__Secret__Group__3 )
            // InternalDockerCompose.g:8614:2: rule__Secret__Group__2__Impl rule__Secret__Group__3
            {
            pushFollow(FOLLOW_50);
            rule__Secret__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__2"


    // $ANTLR start "rule__Secret__Group__2__Impl"
    // InternalDockerCompose.g:8621:1: rule__Secret__Group__2__Impl : ( ':' ) ;
    public final void rule__Secret__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8625:1: ( ( ':' ) )
            // InternalDockerCompose.g:8626:1: ( ':' )
            {
            // InternalDockerCompose.g:8626:1: ( ':' )
            // InternalDockerCompose.g:8627:2: ':'
            {
             before(grammarAccess.getSecretAccess().getColonKeyword_2()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getSecretAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__2__Impl"


    // $ANTLR start "rule__Secret__Group__3"
    // InternalDockerCompose.g:8636:1: rule__Secret__Group__3 : rule__Secret__Group__3__Impl ;
    public final void rule__Secret__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8640:1: ( rule__Secret__Group__3__Impl )
            // InternalDockerCompose.g:8641:2: rule__Secret__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__3"


    // $ANTLR start "rule__Secret__Group__3__Impl"
    // InternalDockerCompose.g:8647:1: rule__Secret__Group__3__Impl : ( ( rule__Secret__UnorderedGroup_3 ) ) ;
    public final void rule__Secret__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8651:1: ( ( ( rule__Secret__UnorderedGroup_3 ) ) )
            // InternalDockerCompose.g:8652:1: ( ( rule__Secret__UnorderedGroup_3 ) )
            {
            // InternalDockerCompose.g:8652:1: ( ( rule__Secret__UnorderedGroup_3 ) )
            // InternalDockerCompose.g:8653:2: ( rule__Secret__UnorderedGroup_3 )
            {
             before(grammarAccess.getSecretAccess().getUnorderedGroup_3()); 
            // InternalDockerCompose.g:8654:2: ( rule__Secret__UnorderedGroup_3 )
            // InternalDockerCompose.g:8654:3: rule__Secret__UnorderedGroup_3
            {
            pushFollow(FOLLOW_2);
            rule__Secret__UnorderedGroup_3();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getUnorderedGroup_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__3__Impl"


    // $ANTLR start "rule__Secret__Group_3_0__0"
    // InternalDockerCompose.g:8663:1: rule__Secret__Group_3_0__0 : rule__Secret__Group_3_0__0__Impl rule__Secret__Group_3_0__1 ;
    public final void rule__Secret__Group_3_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8667:1: ( rule__Secret__Group_3_0__0__Impl rule__Secret__Group_3_0__1 )
            // InternalDockerCompose.g:8668:2: rule__Secret__Group_3_0__0__Impl rule__Secret__Group_3_0__1
            {
            pushFollow(FOLLOW_16);
            rule__Secret__Group_3_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_0__0"


    // $ANTLR start "rule__Secret__Group_3_0__0__Impl"
    // InternalDockerCompose.g:8675:1: rule__Secret__Group_3_0__0__Impl : ( 'external:' ) ;
    public final void rule__Secret__Group_3_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8679:1: ( ( 'external:' ) )
            // InternalDockerCompose.g:8680:1: ( 'external:' )
            {
            // InternalDockerCompose.g:8680:1: ( 'external:' )
            // InternalDockerCompose.g:8681:2: 'external:'
            {
             before(grammarAccess.getSecretAccess().getExternalKeyword_3_0_0()); 
            match(input,89,FOLLOW_2); 
             after(grammarAccess.getSecretAccess().getExternalKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_0__0__Impl"


    // $ANTLR start "rule__Secret__Group_3_0__1"
    // InternalDockerCompose.g:8690:1: rule__Secret__Group_3_0__1 : rule__Secret__Group_3_0__1__Impl ;
    public final void rule__Secret__Group_3_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8694:1: ( rule__Secret__Group_3_0__1__Impl )
            // InternalDockerCompose.g:8695:2: rule__Secret__Group_3_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_0__1"


    // $ANTLR start "rule__Secret__Group_3_0__1__Impl"
    // InternalDockerCompose.g:8701:1: rule__Secret__Group_3_0__1__Impl : ( ( rule__Secret__ExternalAssignment_3_0_1 ) ) ;
    public final void rule__Secret__Group_3_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8705:1: ( ( ( rule__Secret__ExternalAssignment_3_0_1 ) ) )
            // InternalDockerCompose.g:8706:1: ( ( rule__Secret__ExternalAssignment_3_0_1 ) )
            {
            // InternalDockerCompose.g:8706:1: ( ( rule__Secret__ExternalAssignment_3_0_1 ) )
            // InternalDockerCompose.g:8707:2: ( rule__Secret__ExternalAssignment_3_0_1 )
            {
             before(grammarAccess.getSecretAccess().getExternalAssignment_3_0_1()); 
            // InternalDockerCompose.g:8708:2: ( rule__Secret__ExternalAssignment_3_0_1 )
            // InternalDockerCompose.g:8708:3: rule__Secret__ExternalAssignment_3_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Secret__ExternalAssignment_3_0_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getExternalAssignment_3_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_0__1__Impl"


    // $ANTLR start "rule__Secret__Group_3_1__0"
    // InternalDockerCompose.g:8717:1: rule__Secret__Group_3_1__0 : rule__Secret__Group_3_1__0__Impl rule__Secret__Group_3_1__1 ;
    public final void rule__Secret__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8721:1: ( rule__Secret__Group_3_1__0__Impl rule__Secret__Group_3_1__1 )
            // InternalDockerCompose.g:8722:2: rule__Secret__Group_3_1__0__Impl rule__Secret__Group_3_1__1
            {
            pushFollow(FOLLOW_12);
            rule__Secret__Group_3_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_1__0"


    // $ANTLR start "rule__Secret__Group_3_1__0__Impl"
    // InternalDockerCompose.g:8729:1: rule__Secret__Group_3_1__0__Impl : ( 'file:' ) ;
    public final void rule__Secret__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8733:1: ( ( 'file:' ) )
            // InternalDockerCompose.g:8734:1: ( 'file:' )
            {
            // InternalDockerCompose.g:8734:1: ( 'file:' )
            // InternalDockerCompose.g:8735:2: 'file:'
            {
             before(grammarAccess.getSecretAccess().getFileKeyword_3_1_0()); 
            match(input,94,FOLLOW_2); 
             after(grammarAccess.getSecretAccess().getFileKeyword_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_1__0__Impl"


    // $ANTLR start "rule__Secret__Group_3_1__1"
    // InternalDockerCompose.g:8744:1: rule__Secret__Group_3_1__1 : rule__Secret__Group_3_1__1__Impl ;
    public final void rule__Secret__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8748:1: ( rule__Secret__Group_3_1__1__Impl )
            // InternalDockerCompose.g:8749:2: rule__Secret__Group_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_1__1"


    // $ANTLR start "rule__Secret__Group_3_1__1__Impl"
    // InternalDockerCompose.g:8755:1: rule__Secret__Group_3_1__1__Impl : ( ( rule__Secret__FileAssignment_3_1_1 ) ) ;
    public final void rule__Secret__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8759:1: ( ( ( rule__Secret__FileAssignment_3_1_1 ) ) )
            // InternalDockerCompose.g:8760:1: ( ( rule__Secret__FileAssignment_3_1_1 ) )
            {
            // InternalDockerCompose.g:8760:1: ( ( rule__Secret__FileAssignment_3_1_1 ) )
            // InternalDockerCompose.g:8761:2: ( rule__Secret__FileAssignment_3_1_1 )
            {
             before(grammarAccess.getSecretAccess().getFileAssignment_3_1_1()); 
            // InternalDockerCompose.g:8762:2: ( rule__Secret__FileAssignment_3_1_1 )
            // InternalDockerCompose.g:8762:3: rule__Secret__FileAssignment_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Secret__FileAssignment_3_1_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getFileAssignment_3_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_1__1__Impl"


    // $ANTLR start "rule__Secret__Group_3_2__0"
    // InternalDockerCompose.g:8771:1: rule__Secret__Group_3_2__0 : rule__Secret__Group_3_2__0__Impl rule__Secret__Group_3_2__1 ;
    public final void rule__Secret__Group_3_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8775:1: ( rule__Secret__Group_3_2__0__Impl rule__Secret__Group_3_2__1 )
            // InternalDockerCompose.g:8776:2: rule__Secret__Group_3_2__0__Impl rule__Secret__Group_3_2__1
            {
            pushFollow(FOLLOW_14);
            rule__Secret__Group_3_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_2__0"


    // $ANTLR start "rule__Secret__Group_3_2__0__Impl"
    // InternalDockerCompose.g:8783:1: rule__Secret__Group_3_2__0__Impl : ( 'environment:' ) ;
    public final void rule__Secret__Group_3_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8787:1: ( ( 'environment:' ) )
            // InternalDockerCompose.g:8788:1: ( 'environment:' )
            {
            // InternalDockerCompose.g:8788:1: ( 'environment:' )
            // InternalDockerCompose.g:8789:2: 'environment:'
            {
             before(grammarAccess.getSecretAccess().getEnvironmentKeyword_3_2_0()); 
            match(input,59,FOLLOW_2); 
             after(grammarAccess.getSecretAccess().getEnvironmentKeyword_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_2__0__Impl"


    // $ANTLR start "rule__Secret__Group_3_2__1"
    // InternalDockerCompose.g:8798:1: rule__Secret__Group_3_2__1 : rule__Secret__Group_3_2__1__Impl ;
    public final void rule__Secret__Group_3_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8802:1: ( rule__Secret__Group_3_2__1__Impl )
            // InternalDockerCompose.g:8803:2: rule__Secret__Group_3_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_2__1"


    // $ANTLR start "rule__Secret__Group_3_2__1__Impl"
    // InternalDockerCompose.g:8809:1: rule__Secret__Group_3_2__1__Impl : ( ( rule__Secret__EnvironmentAssignment_3_2_1 ) ) ;
    public final void rule__Secret__Group_3_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8813:1: ( ( ( rule__Secret__EnvironmentAssignment_3_2_1 ) ) )
            // InternalDockerCompose.g:8814:1: ( ( rule__Secret__EnvironmentAssignment_3_2_1 ) )
            {
            // InternalDockerCompose.g:8814:1: ( ( rule__Secret__EnvironmentAssignment_3_2_1 ) )
            // InternalDockerCompose.g:8815:2: ( rule__Secret__EnvironmentAssignment_3_2_1 )
            {
             before(grammarAccess.getSecretAccess().getEnvironmentAssignment_3_2_1()); 
            // InternalDockerCompose.g:8816:2: ( rule__Secret__EnvironmentAssignment_3_2_1 )
            // InternalDockerCompose.g:8816:3: rule__Secret__EnvironmentAssignment_3_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Secret__EnvironmentAssignment_3_2_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getEnvironmentAssignment_3_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_2__1__Impl"


    // $ANTLR start "rule__Secret__Group_3_3__0"
    // InternalDockerCompose.g:8825:1: rule__Secret__Group_3_3__0 : rule__Secret__Group_3_3__0__Impl rule__Secret__Group_3_3__1 ;
    public final void rule__Secret__Group_3_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8829:1: ( rule__Secret__Group_3_3__0__Impl rule__Secret__Group_3_3__1 )
            // InternalDockerCompose.g:8830:2: rule__Secret__Group_3_3__0__Impl rule__Secret__Group_3_3__1
            {
            pushFollow(FOLLOW_14);
            rule__Secret__Group_3_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_3__0"


    // $ANTLR start "rule__Secret__Group_3_3__0__Impl"
    // InternalDockerCompose.g:8837:1: rule__Secret__Group_3_3__0__Impl : ( 'name:' ) ;
    public final void rule__Secret__Group_3_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8841:1: ( ( 'name:' ) )
            // InternalDockerCompose.g:8842:1: ( 'name:' )
            {
            // InternalDockerCompose.g:8842:1: ( 'name:' )
            // InternalDockerCompose.g:8843:2: 'name:'
            {
             before(grammarAccess.getSecretAccess().getNameKeyword_3_3_0()); 
            match(input,90,FOLLOW_2); 
             after(grammarAccess.getSecretAccess().getNameKeyword_3_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_3__0__Impl"


    // $ANTLR start "rule__Secret__Group_3_3__1"
    // InternalDockerCompose.g:8852:1: rule__Secret__Group_3_3__1 : rule__Secret__Group_3_3__1__Impl ;
    public final void rule__Secret__Group_3_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8856:1: ( rule__Secret__Group_3_3__1__Impl )
            // InternalDockerCompose.g:8857:2: rule__Secret__Group_3_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_3__1"


    // $ANTLR start "rule__Secret__Group_3_3__1__Impl"
    // InternalDockerCompose.g:8863:1: rule__Secret__Group_3_3__1__Impl : ( ( rule__Secret__Secret_nameAssignment_3_3_1 ) ) ;
    public final void rule__Secret__Group_3_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8867:1: ( ( ( rule__Secret__Secret_nameAssignment_3_3_1 ) ) )
            // InternalDockerCompose.g:8868:1: ( ( rule__Secret__Secret_nameAssignment_3_3_1 ) )
            {
            // InternalDockerCompose.g:8868:1: ( ( rule__Secret__Secret_nameAssignment_3_3_1 ) )
            // InternalDockerCompose.g:8869:2: ( rule__Secret__Secret_nameAssignment_3_3_1 )
            {
             before(grammarAccess.getSecretAccess().getSecret_nameAssignment_3_3_1()); 
            // InternalDockerCompose.g:8870:2: ( rule__Secret__Secret_nameAssignment_3_3_1 )
            // InternalDockerCompose.g:8870:3: rule__Secret__Secret_nameAssignment_3_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Secret_nameAssignment_3_3_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getSecret_nameAssignment_3_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_3__1__Impl"


    // $ANTLR start "rule__VolumeLabel__Group__0"
    // InternalDockerCompose.g:8879:1: rule__VolumeLabel__Group__0 : rule__VolumeLabel__Group__0__Impl rule__VolumeLabel__Group__1 ;
    public final void rule__VolumeLabel__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8883:1: ( rule__VolumeLabel__Group__0__Impl rule__VolumeLabel__Group__1 )
            // InternalDockerCompose.g:8884:2: rule__VolumeLabel__Group__0__Impl rule__VolumeLabel__Group__1
            {
            pushFollow(FOLLOW_14);
            rule__VolumeLabel__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeLabel__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__0"


    // $ANTLR start "rule__VolumeLabel__Group__0__Impl"
    // InternalDockerCompose.g:8891:1: rule__VolumeLabel__Group__0__Impl : ( () ) ;
    public final void rule__VolumeLabel__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8895:1: ( ( () ) )
            // InternalDockerCompose.g:8896:1: ( () )
            {
            // InternalDockerCompose.g:8896:1: ( () )
            // InternalDockerCompose.g:8897:2: ()
            {
             before(grammarAccess.getVolumeLabelAccess().getVolumeLabelAction_0()); 
            // InternalDockerCompose.g:8898:2: ()
            // InternalDockerCompose.g:8898:3: 
            {
            }

             after(grammarAccess.getVolumeLabelAccess().getVolumeLabelAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__0__Impl"


    // $ANTLR start "rule__VolumeLabel__Group__1"
    // InternalDockerCompose.g:8906:1: rule__VolumeLabel__Group__1 : rule__VolumeLabel__Group__1__Impl rule__VolumeLabel__Group__2 ;
    public final void rule__VolumeLabel__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8910:1: ( rule__VolumeLabel__Group__1__Impl rule__VolumeLabel__Group__2 )
            // InternalDockerCompose.g:8911:2: rule__VolumeLabel__Group__1__Impl rule__VolumeLabel__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__VolumeLabel__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeLabel__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__1"


    // $ANTLR start "rule__VolumeLabel__Group__1__Impl"
    // InternalDockerCompose.g:8918:1: rule__VolumeLabel__Group__1__Impl : ( ( rule__VolumeLabel__NameAssignment_1 ) ) ;
    public final void rule__VolumeLabel__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8922:1: ( ( ( rule__VolumeLabel__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:8923:1: ( ( rule__VolumeLabel__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:8923:1: ( ( rule__VolumeLabel__NameAssignment_1 ) )
            // InternalDockerCompose.g:8924:2: ( rule__VolumeLabel__NameAssignment_1 )
            {
             before(grammarAccess.getVolumeLabelAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:8925:2: ( rule__VolumeLabel__NameAssignment_1 )
            // InternalDockerCompose.g:8925:3: rule__VolumeLabel__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeLabel__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeLabelAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__1__Impl"


    // $ANTLR start "rule__VolumeLabel__Group__2"
    // InternalDockerCompose.g:8933:1: rule__VolumeLabel__Group__2 : rule__VolumeLabel__Group__2__Impl rule__VolumeLabel__Group__3 ;
    public final void rule__VolumeLabel__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8937:1: ( rule__VolumeLabel__Group__2__Impl rule__VolumeLabel__Group__3 )
            // InternalDockerCompose.g:8938:2: rule__VolumeLabel__Group__2__Impl rule__VolumeLabel__Group__3
            {
            pushFollow(FOLLOW_14);
            rule__VolumeLabel__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeLabel__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__2"


    // $ANTLR start "rule__VolumeLabel__Group__2__Impl"
    // InternalDockerCompose.g:8945:1: rule__VolumeLabel__Group__2__Impl : ( ':' ) ;
    public final void rule__VolumeLabel__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8949:1: ( ( ':' ) )
            // InternalDockerCompose.g:8950:1: ( ':' )
            {
            // InternalDockerCompose.g:8950:1: ( ':' )
            // InternalDockerCompose.g:8951:2: ':'
            {
             before(grammarAccess.getVolumeLabelAccess().getColonKeyword_2()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getVolumeLabelAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__2__Impl"


    // $ANTLR start "rule__VolumeLabel__Group__3"
    // InternalDockerCompose.g:8960:1: rule__VolumeLabel__Group__3 : rule__VolumeLabel__Group__3__Impl ;
    public final void rule__VolumeLabel__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8964:1: ( rule__VolumeLabel__Group__3__Impl )
            // InternalDockerCompose.g:8965:2: rule__VolumeLabel__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeLabel__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__3"


    // $ANTLR start "rule__VolumeLabel__Group__3__Impl"
    // InternalDockerCompose.g:8971:1: rule__VolumeLabel__Group__3__Impl : ( ( rule__VolumeLabel__ValueAssignment_3 ) ) ;
    public final void rule__VolumeLabel__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8975:1: ( ( ( rule__VolumeLabel__ValueAssignment_3 ) ) )
            // InternalDockerCompose.g:8976:1: ( ( rule__VolumeLabel__ValueAssignment_3 ) )
            {
            // InternalDockerCompose.g:8976:1: ( ( rule__VolumeLabel__ValueAssignment_3 ) )
            // InternalDockerCompose.g:8977:2: ( rule__VolumeLabel__ValueAssignment_3 )
            {
             before(grammarAccess.getVolumeLabelAccess().getValueAssignment_3()); 
            // InternalDockerCompose.g:8978:2: ( rule__VolumeLabel__ValueAssignment_3 )
            // InternalDockerCompose.g:8978:3: rule__VolumeLabel__ValueAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__VolumeLabel__ValueAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getVolumeLabelAccess().getValueAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__3__Impl"


    // $ANTLR start "rule__VolumeDriverOpt__Group__0"
    // InternalDockerCompose.g:8987:1: rule__VolumeDriverOpt__Group__0 : rule__VolumeDriverOpt__Group__0__Impl rule__VolumeDriverOpt__Group__1 ;
    public final void rule__VolumeDriverOpt__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8991:1: ( rule__VolumeDriverOpt__Group__0__Impl rule__VolumeDriverOpt__Group__1 )
            // InternalDockerCompose.g:8992:2: rule__VolumeDriverOpt__Group__0__Impl rule__VolumeDriverOpt__Group__1
            {
            pushFollow(FOLLOW_14);
            rule__VolumeDriverOpt__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__0"


    // $ANTLR start "rule__VolumeDriverOpt__Group__0__Impl"
    // InternalDockerCompose.g:8999:1: rule__VolumeDriverOpt__Group__0__Impl : ( () ) ;
    public final void rule__VolumeDriverOpt__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9003:1: ( ( () ) )
            // InternalDockerCompose.g:9004:1: ( () )
            {
            // InternalDockerCompose.g:9004:1: ( () )
            // InternalDockerCompose.g:9005:2: ()
            {
             before(grammarAccess.getVolumeDriverOptAccess().getVolumeDriverOptAction_0()); 
            // InternalDockerCompose.g:9006:2: ()
            // InternalDockerCompose.g:9006:3: 
            {
            }

             after(grammarAccess.getVolumeDriverOptAccess().getVolumeDriverOptAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__0__Impl"


    // $ANTLR start "rule__VolumeDriverOpt__Group__1"
    // InternalDockerCompose.g:9014:1: rule__VolumeDriverOpt__Group__1 : rule__VolumeDriverOpt__Group__1__Impl rule__VolumeDriverOpt__Group__2 ;
    public final void rule__VolumeDriverOpt__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9018:1: ( rule__VolumeDriverOpt__Group__1__Impl rule__VolumeDriverOpt__Group__2 )
            // InternalDockerCompose.g:9019:2: rule__VolumeDriverOpt__Group__1__Impl rule__VolumeDriverOpt__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__VolumeDriverOpt__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__1"


    // $ANTLR start "rule__VolumeDriverOpt__Group__1__Impl"
    // InternalDockerCompose.g:9026:1: rule__VolumeDriverOpt__Group__1__Impl : ( ( rule__VolumeDriverOpt__NameAssignment_1 ) ) ;
    public final void rule__VolumeDriverOpt__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9030:1: ( ( ( rule__VolumeDriverOpt__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:9031:1: ( ( rule__VolumeDriverOpt__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:9031:1: ( ( rule__VolumeDriverOpt__NameAssignment_1 ) )
            // InternalDockerCompose.g:9032:2: ( rule__VolumeDriverOpt__NameAssignment_1 )
            {
             before(grammarAccess.getVolumeDriverOptAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:9033:2: ( rule__VolumeDriverOpt__NameAssignment_1 )
            // InternalDockerCompose.g:9033:3: rule__VolumeDriverOpt__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeDriverOptAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__1__Impl"


    // $ANTLR start "rule__VolumeDriverOpt__Group__2"
    // InternalDockerCompose.g:9041:1: rule__VolumeDriverOpt__Group__2 : rule__VolumeDriverOpt__Group__2__Impl rule__VolumeDriverOpt__Group__3 ;
    public final void rule__VolumeDriverOpt__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9045:1: ( rule__VolumeDriverOpt__Group__2__Impl rule__VolumeDriverOpt__Group__3 )
            // InternalDockerCompose.g:9046:2: rule__VolumeDriverOpt__Group__2__Impl rule__VolumeDriverOpt__Group__3
            {
            pushFollow(FOLLOW_14);
            rule__VolumeDriverOpt__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__2"


    // $ANTLR start "rule__VolumeDriverOpt__Group__2__Impl"
    // InternalDockerCompose.g:9053:1: rule__VolumeDriverOpt__Group__2__Impl : ( ':' ) ;
    public final void rule__VolumeDriverOpt__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9057:1: ( ( ':' ) )
            // InternalDockerCompose.g:9058:1: ( ':' )
            {
            // InternalDockerCompose.g:9058:1: ( ':' )
            // InternalDockerCompose.g:9059:2: ':'
            {
             before(grammarAccess.getVolumeDriverOptAccess().getColonKeyword_2()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getVolumeDriverOptAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__2__Impl"


    // $ANTLR start "rule__VolumeDriverOpt__Group__3"
    // InternalDockerCompose.g:9068:1: rule__VolumeDriverOpt__Group__3 : rule__VolumeDriverOpt__Group__3__Impl ;
    public final void rule__VolumeDriverOpt__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9072:1: ( rule__VolumeDriverOpt__Group__3__Impl )
            // InternalDockerCompose.g:9073:2: rule__VolumeDriverOpt__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__3"


    // $ANTLR start "rule__VolumeDriverOpt__Group__3__Impl"
    // InternalDockerCompose.g:9079:1: rule__VolumeDriverOpt__Group__3__Impl : ( ( rule__VolumeDriverOpt__ValueAssignment_3 ) ) ;
    public final void rule__VolumeDriverOpt__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9083:1: ( ( ( rule__VolumeDriverOpt__ValueAssignment_3 ) ) )
            // InternalDockerCompose.g:9084:1: ( ( rule__VolumeDriverOpt__ValueAssignment_3 ) )
            {
            // InternalDockerCompose.g:9084:1: ( ( rule__VolumeDriverOpt__ValueAssignment_3 ) )
            // InternalDockerCompose.g:9085:2: ( rule__VolumeDriverOpt__ValueAssignment_3 )
            {
             before(grammarAccess.getVolumeDriverOptAccess().getValueAssignment_3()); 
            // InternalDockerCompose.g:9086:2: ( rule__VolumeDriverOpt__ValueAssignment_3 )
            // InternalDockerCompose.g:9086:3: rule__VolumeDriverOpt__ValueAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__ValueAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getVolumeDriverOptAccess().getValueAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__3__Impl"


    // $ANTLR start "rule__NetworkLabel__Group__0"
    // InternalDockerCompose.g:9095:1: rule__NetworkLabel__Group__0 : rule__NetworkLabel__Group__0__Impl rule__NetworkLabel__Group__1 ;
    public final void rule__NetworkLabel__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9099:1: ( rule__NetworkLabel__Group__0__Impl rule__NetworkLabel__Group__1 )
            // InternalDockerCompose.g:9100:2: rule__NetworkLabel__Group__0__Impl rule__NetworkLabel__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__NetworkLabel__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkLabel__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__0"


    // $ANTLR start "rule__NetworkLabel__Group__0__Impl"
    // InternalDockerCompose.g:9107:1: rule__NetworkLabel__Group__0__Impl : ( () ) ;
    public final void rule__NetworkLabel__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9111:1: ( ( () ) )
            // InternalDockerCompose.g:9112:1: ( () )
            {
            // InternalDockerCompose.g:9112:1: ( () )
            // InternalDockerCompose.g:9113:2: ()
            {
             before(grammarAccess.getNetworkLabelAccess().getNetworkLabelAction_0()); 
            // InternalDockerCompose.g:9114:2: ()
            // InternalDockerCompose.g:9114:3: 
            {
            }

             after(grammarAccess.getNetworkLabelAccess().getNetworkLabelAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__0__Impl"


    // $ANTLR start "rule__NetworkLabel__Group__1"
    // InternalDockerCompose.g:9122:1: rule__NetworkLabel__Group__1 : rule__NetworkLabel__Group__1__Impl rule__NetworkLabel__Group__2 ;
    public final void rule__NetworkLabel__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9126:1: ( rule__NetworkLabel__Group__1__Impl rule__NetworkLabel__Group__2 )
            // InternalDockerCompose.g:9127:2: rule__NetworkLabel__Group__1__Impl rule__NetworkLabel__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__NetworkLabel__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkLabel__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__1"


    // $ANTLR start "rule__NetworkLabel__Group__1__Impl"
    // InternalDockerCompose.g:9134:1: rule__NetworkLabel__Group__1__Impl : ( ( rule__NetworkLabel__NameAssignment_1 ) ) ;
    public final void rule__NetworkLabel__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9138:1: ( ( ( rule__NetworkLabel__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:9139:1: ( ( rule__NetworkLabel__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:9139:1: ( ( rule__NetworkLabel__NameAssignment_1 ) )
            // InternalDockerCompose.g:9140:2: ( rule__NetworkLabel__NameAssignment_1 )
            {
             before(grammarAccess.getNetworkLabelAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:9141:2: ( rule__NetworkLabel__NameAssignment_1 )
            // InternalDockerCompose.g:9141:3: rule__NetworkLabel__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkLabel__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkLabelAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__1__Impl"


    // $ANTLR start "rule__NetworkLabel__Group__2"
    // InternalDockerCompose.g:9149:1: rule__NetworkLabel__Group__2 : rule__NetworkLabel__Group__2__Impl rule__NetworkLabel__Group__3 ;
    public final void rule__NetworkLabel__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9153:1: ( rule__NetworkLabel__Group__2__Impl rule__NetworkLabel__Group__3 )
            // InternalDockerCompose.g:9154:2: rule__NetworkLabel__Group__2__Impl rule__NetworkLabel__Group__3
            {
            pushFollow(FOLLOW_14);
            rule__NetworkLabel__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkLabel__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__2"


    // $ANTLR start "rule__NetworkLabel__Group__2__Impl"
    // InternalDockerCompose.g:9161:1: rule__NetworkLabel__Group__2__Impl : ( ':' ) ;
    public final void rule__NetworkLabel__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9165:1: ( ( ':' ) )
            // InternalDockerCompose.g:9166:1: ( ':' )
            {
            // InternalDockerCompose.g:9166:1: ( ':' )
            // InternalDockerCompose.g:9167:2: ':'
            {
             before(grammarAccess.getNetworkLabelAccess().getColonKeyword_2()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getNetworkLabelAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__2__Impl"


    // $ANTLR start "rule__NetworkLabel__Group__3"
    // InternalDockerCompose.g:9176:1: rule__NetworkLabel__Group__3 : rule__NetworkLabel__Group__3__Impl ;
    public final void rule__NetworkLabel__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9180:1: ( rule__NetworkLabel__Group__3__Impl )
            // InternalDockerCompose.g:9181:2: rule__NetworkLabel__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkLabel__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__3"


    // $ANTLR start "rule__NetworkLabel__Group__3__Impl"
    // InternalDockerCompose.g:9187:1: rule__NetworkLabel__Group__3__Impl : ( ( rule__NetworkLabel__ValueAssignment_3 ) ) ;
    public final void rule__NetworkLabel__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9191:1: ( ( ( rule__NetworkLabel__ValueAssignment_3 ) ) )
            // InternalDockerCompose.g:9192:1: ( ( rule__NetworkLabel__ValueAssignment_3 ) )
            {
            // InternalDockerCompose.g:9192:1: ( ( rule__NetworkLabel__ValueAssignment_3 ) )
            // InternalDockerCompose.g:9193:2: ( rule__NetworkLabel__ValueAssignment_3 )
            {
             before(grammarAccess.getNetworkLabelAccess().getValueAssignment_3()); 
            // InternalDockerCompose.g:9194:2: ( rule__NetworkLabel__ValueAssignment_3 )
            // InternalDockerCompose.g:9194:3: rule__NetworkLabel__ValueAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__NetworkLabel__ValueAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getNetworkLabelAccess().getValueAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__3__Impl"


    // $ANTLR start "rule__NetworkDriverOpt__Group__0"
    // InternalDockerCompose.g:9203:1: rule__NetworkDriverOpt__Group__0 : rule__NetworkDriverOpt__Group__0__Impl rule__NetworkDriverOpt__Group__1 ;
    public final void rule__NetworkDriverOpt__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9207:1: ( rule__NetworkDriverOpt__Group__0__Impl rule__NetworkDriverOpt__Group__1 )
            // InternalDockerCompose.g:9208:2: rule__NetworkDriverOpt__Group__0__Impl rule__NetworkDriverOpt__Group__1
            {
            pushFollow(FOLLOW_14);
            rule__NetworkDriverOpt__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__0"


    // $ANTLR start "rule__NetworkDriverOpt__Group__0__Impl"
    // InternalDockerCompose.g:9215:1: rule__NetworkDriverOpt__Group__0__Impl : ( () ) ;
    public final void rule__NetworkDriverOpt__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9219:1: ( ( () ) )
            // InternalDockerCompose.g:9220:1: ( () )
            {
            // InternalDockerCompose.g:9220:1: ( () )
            // InternalDockerCompose.g:9221:2: ()
            {
             before(grammarAccess.getNetworkDriverOptAccess().getNetworkDriverOptAction_0()); 
            // InternalDockerCompose.g:9222:2: ()
            // InternalDockerCompose.g:9222:3: 
            {
            }

             after(grammarAccess.getNetworkDriverOptAccess().getNetworkDriverOptAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__0__Impl"


    // $ANTLR start "rule__NetworkDriverOpt__Group__1"
    // InternalDockerCompose.g:9230:1: rule__NetworkDriverOpt__Group__1 : rule__NetworkDriverOpt__Group__1__Impl rule__NetworkDriverOpt__Group__2 ;
    public final void rule__NetworkDriverOpt__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9234:1: ( rule__NetworkDriverOpt__Group__1__Impl rule__NetworkDriverOpt__Group__2 )
            // InternalDockerCompose.g:9235:2: rule__NetworkDriverOpt__Group__1__Impl rule__NetworkDriverOpt__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__NetworkDriverOpt__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__1"


    // $ANTLR start "rule__NetworkDriverOpt__Group__1__Impl"
    // InternalDockerCompose.g:9242:1: rule__NetworkDriverOpt__Group__1__Impl : ( ( rule__NetworkDriverOpt__NameAssignment_1 ) ) ;
    public final void rule__NetworkDriverOpt__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9246:1: ( ( ( rule__NetworkDriverOpt__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:9247:1: ( ( rule__NetworkDriverOpt__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:9247:1: ( ( rule__NetworkDriverOpt__NameAssignment_1 ) )
            // InternalDockerCompose.g:9248:2: ( rule__NetworkDriverOpt__NameAssignment_1 )
            {
             before(grammarAccess.getNetworkDriverOptAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:9249:2: ( rule__NetworkDriverOpt__NameAssignment_1 )
            // InternalDockerCompose.g:9249:3: rule__NetworkDriverOpt__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkDriverOptAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__1__Impl"


    // $ANTLR start "rule__NetworkDriverOpt__Group__2"
    // InternalDockerCompose.g:9257:1: rule__NetworkDriverOpt__Group__2 : rule__NetworkDriverOpt__Group__2__Impl rule__NetworkDriverOpt__Group__3 ;
    public final void rule__NetworkDriverOpt__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9261:1: ( rule__NetworkDriverOpt__Group__2__Impl rule__NetworkDriverOpt__Group__3 )
            // InternalDockerCompose.g:9262:2: rule__NetworkDriverOpt__Group__2__Impl rule__NetworkDriverOpt__Group__3
            {
            pushFollow(FOLLOW_14);
            rule__NetworkDriverOpt__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__2"


    // $ANTLR start "rule__NetworkDriverOpt__Group__2__Impl"
    // InternalDockerCompose.g:9269:1: rule__NetworkDriverOpt__Group__2__Impl : ( ':' ) ;
    public final void rule__NetworkDriverOpt__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9273:1: ( ( ':' ) )
            // InternalDockerCompose.g:9274:1: ( ':' )
            {
            // InternalDockerCompose.g:9274:1: ( ':' )
            // InternalDockerCompose.g:9275:2: ':'
            {
             before(grammarAccess.getNetworkDriverOptAccess().getColonKeyword_2()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getNetworkDriverOptAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__2__Impl"


    // $ANTLR start "rule__NetworkDriverOpt__Group__3"
    // InternalDockerCompose.g:9284:1: rule__NetworkDriverOpt__Group__3 : rule__NetworkDriverOpt__Group__3__Impl ;
    public final void rule__NetworkDriverOpt__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9288:1: ( rule__NetworkDriverOpt__Group__3__Impl )
            // InternalDockerCompose.g:9289:2: rule__NetworkDriverOpt__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__3"


    // $ANTLR start "rule__NetworkDriverOpt__Group__3__Impl"
    // InternalDockerCompose.g:9295:1: rule__NetworkDriverOpt__Group__3__Impl : ( ( rule__NetworkDriverOpt__ValueAssignment_3 ) ) ;
    public final void rule__NetworkDriverOpt__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9299:1: ( ( ( rule__NetworkDriverOpt__ValueAssignment_3 ) ) )
            // InternalDockerCompose.g:9300:1: ( ( rule__NetworkDriverOpt__ValueAssignment_3 ) )
            {
            // InternalDockerCompose.g:9300:1: ( ( rule__NetworkDriverOpt__ValueAssignment_3 ) )
            // InternalDockerCompose.g:9301:2: ( rule__NetworkDriverOpt__ValueAssignment_3 )
            {
             before(grammarAccess.getNetworkDriverOptAccess().getValueAssignment_3()); 
            // InternalDockerCompose.g:9302:2: ( rule__NetworkDriverOpt__ValueAssignment_3 )
            // InternalDockerCompose.g:9302:3: rule__NetworkDriverOpt__ValueAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__ValueAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getNetworkDriverOptAccess().getValueAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__3__Impl"


    // $ANTLR start "rule__IPAM__Group__0"
    // InternalDockerCompose.g:9311:1: rule__IPAM__Group__0 : rule__IPAM__Group__0__Impl rule__IPAM__Group__1 ;
    public final void rule__IPAM__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9315:1: ( rule__IPAM__Group__0__Impl rule__IPAM__Group__1 )
            // InternalDockerCompose.g:9316:2: rule__IPAM__Group__0__Impl rule__IPAM__Group__1
            {
            pushFollow(FOLLOW_47);
            rule__IPAM__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAM__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group__0"


    // $ANTLR start "rule__IPAM__Group__0__Impl"
    // InternalDockerCompose.g:9323:1: rule__IPAM__Group__0__Impl : ( () ) ;
    public final void rule__IPAM__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9327:1: ( ( () ) )
            // InternalDockerCompose.g:9328:1: ( () )
            {
            // InternalDockerCompose.g:9328:1: ( () )
            // InternalDockerCompose.g:9329:2: ()
            {
             before(grammarAccess.getIPAMAccess().getIPAMAction_0()); 
            // InternalDockerCompose.g:9330:2: ()
            // InternalDockerCompose.g:9330:3: 
            {
            }

             after(grammarAccess.getIPAMAccess().getIPAMAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group__0__Impl"


    // $ANTLR start "rule__IPAM__Group__1"
    // InternalDockerCompose.g:9338:1: rule__IPAM__Group__1 : rule__IPAM__Group__1__Impl ;
    public final void rule__IPAM__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9342:1: ( rule__IPAM__Group__1__Impl )
            // InternalDockerCompose.g:9343:2: rule__IPAM__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group__1"


    // $ANTLR start "rule__IPAM__Group__1__Impl"
    // InternalDockerCompose.g:9349:1: rule__IPAM__Group__1__Impl : ( ( rule__IPAM__UnorderedGroup_1 ) ) ;
    public final void rule__IPAM__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9353:1: ( ( ( rule__IPAM__UnorderedGroup_1 ) ) )
            // InternalDockerCompose.g:9354:1: ( ( rule__IPAM__UnorderedGroup_1 ) )
            {
            // InternalDockerCompose.g:9354:1: ( ( rule__IPAM__UnorderedGroup_1 ) )
            // InternalDockerCompose.g:9355:2: ( rule__IPAM__UnorderedGroup_1 )
            {
             before(grammarAccess.getIPAMAccess().getUnorderedGroup_1()); 
            // InternalDockerCompose.g:9356:2: ( rule__IPAM__UnorderedGroup_1 )
            // InternalDockerCompose.g:9356:3: rule__IPAM__UnorderedGroup_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__UnorderedGroup_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAccess().getUnorderedGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group__1__Impl"


    // $ANTLR start "rule__IPAM__Group_1_0__0"
    // InternalDockerCompose.g:9365:1: rule__IPAM__Group_1_0__0 : rule__IPAM__Group_1_0__0__Impl rule__IPAM__Group_1_0__1 ;
    public final void rule__IPAM__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9369:1: ( rule__IPAM__Group_1_0__0__Impl rule__IPAM__Group_1_0__1 )
            // InternalDockerCompose.g:9370:2: rule__IPAM__Group_1_0__0__Impl rule__IPAM__Group_1_0__1
            {
            pushFollow(FOLLOW_14);
            rule__IPAM__Group_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_0__0"


    // $ANTLR start "rule__IPAM__Group_1_0__0__Impl"
    // InternalDockerCompose.g:9377:1: rule__IPAM__Group_1_0__0__Impl : ( 'driver:' ) ;
    public final void rule__IPAM__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9381:1: ( ( 'driver:' ) )
            // InternalDockerCompose.g:9382:1: ( 'driver:' )
            {
            // InternalDockerCompose.g:9382:1: ( 'driver:' )
            // InternalDockerCompose.g:9383:2: 'driver:'
            {
             before(grammarAccess.getIPAMAccess().getDriverKeyword_1_0_0()); 
            match(input,85,FOLLOW_2); 
             after(grammarAccess.getIPAMAccess().getDriverKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_0__0__Impl"


    // $ANTLR start "rule__IPAM__Group_1_0__1"
    // InternalDockerCompose.g:9392:1: rule__IPAM__Group_1_0__1 : rule__IPAM__Group_1_0__1__Impl ;
    public final void rule__IPAM__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9396:1: ( rule__IPAM__Group_1_0__1__Impl )
            // InternalDockerCompose.g:9397:2: rule__IPAM__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_0__1"


    // $ANTLR start "rule__IPAM__Group_1_0__1__Impl"
    // InternalDockerCompose.g:9403:1: rule__IPAM__Group_1_0__1__Impl : ( ( rule__IPAM__DriverAssignment_1_0_1 ) ) ;
    public final void rule__IPAM__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9407:1: ( ( ( rule__IPAM__DriverAssignment_1_0_1 ) ) )
            // InternalDockerCompose.g:9408:1: ( ( rule__IPAM__DriverAssignment_1_0_1 ) )
            {
            // InternalDockerCompose.g:9408:1: ( ( rule__IPAM__DriverAssignment_1_0_1 ) )
            // InternalDockerCompose.g:9409:2: ( rule__IPAM__DriverAssignment_1_0_1 )
            {
             before(grammarAccess.getIPAMAccess().getDriverAssignment_1_0_1()); 
            // InternalDockerCompose.g:9410:2: ( rule__IPAM__DriverAssignment_1_0_1 )
            // InternalDockerCompose.g:9410:3: rule__IPAM__DriverAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__DriverAssignment_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAccess().getDriverAssignment_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_0__1__Impl"


    // $ANTLR start "rule__IPAM__Group_1_1__0"
    // InternalDockerCompose.g:9419:1: rule__IPAM__Group_1_1__0 : rule__IPAM__Group_1_1__0__Impl rule__IPAM__Group_1_1__1 ;
    public final void rule__IPAM__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9423:1: ( rule__IPAM__Group_1_1__0__Impl rule__IPAM__Group_1_1__1 )
            // InternalDockerCompose.g:9424:2: rule__IPAM__Group_1_1__0__Impl rule__IPAM__Group_1_1__1
            {
            pushFollow(FOLLOW_17);
            rule__IPAM__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1__0"


    // $ANTLR start "rule__IPAM__Group_1_1__0__Impl"
    // InternalDockerCompose.g:9431:1: rule__IPAM__Group_1_1__0__Impl : ( 'config:' ) ;
    public final void rule__IPAM__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9435:1: ( ( 'config:' ) )
            // InternalDockerCompose.g:9436:1: ( 'config:' )
            {
            // InternalDockerCompose.g:9436:1: ( 'config:' )
            // InternalDockerCompose.g:9437:2: 'config:'
            {
             before(grammarAccess.getIPAMAccess().getConfigKeyword_1_1_0()); 
            match(input,95,FOLLOW_2); 
             after(grammarAccess.getIPAMAccess().getConfigKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1__0__Impl"


    // $ANTLR start "rule__IPAM__Group_1_1__1"
    // InternalDockerCompose.g:9446:1: rule__IPAM__Group_1_1__1 : rule__IPAM__Group_1_1__1__Impl ;
    public final void rule__IPAM__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9450:1: ( rule__IPAM__Group_1_1__1__Impl )
            // InternalDockerCompose.g:9451:2: rule__IPAM__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1__1"


    // $ANTLR start "rule__IPAM__Group_1_1__1__Impl"
    // InternalDockerCompose.g:9457:1: rule__IPAM__Group_1_1__1__Impl : ( ( ( rule__IPAM__Group_1_1_1__0 ) ) ( ( rule__IPAM__Group_1_1_1__0 )* ) ) ;
    public final void rule__IPAM__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9461:1: ( ( ( ( rule__IPAM__Group_1_1_1__0 ) ) ( ( rule__IPAM__Group_1_1_1__0 )* ) ) )
            // InternalDockerCompose.g:9462:1: ( ( ( rule__IPAM__Group_1_1_1__0 ) ) ( ( rule__IPAM__Group_1_1_1__0 )* ) )
            {
            // InternalDockerCompose.g:9462:1: ( ( ( rule__IPAM__Group_1_1_1__0 ) ) ( ( rule__IPAM__Group_1_1_1__0 )* ) )
            // InternalDockerCompose.g:9463:2: ( ( rule__IPAM__Group_1_1_1__0 ) ) ( ( rule__IPAM__Group_1_1_1__0 )* )
            {
            // InternalDockerCompose.g:9463:2: ( ( rule__IPAM__Group_1_1_1__0 ) )
            // InternalDockerCompose.g:9464:3: ( rule__IPAM__Group_1_1_1__0 )
            {
             before(grammarAccess.getIPAMAccess().getGroup_1_1_1()); 
            // InternalDockerCompose.g:9465:3: ( rule__IPAM__Group_1_1_1__0 )
            // InternalDockerCompose.g:9465:4: rule__IPAM__Group_1_1_1__0
            {
            pushFollow(FOLLOW_5);
            rule__IPAM__Group_1_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAccess().getGroup_1_1_1()); 

            }

            // InternalDockerCompose.g:9468:2: ( ( rule__IPAM__Group_1_1_1__0 )* )
            // InternalDockerCompose.g:9469:3: ( rule__IPAM__Group_1_1_1__0 )*
            {
             before(grammarAccess.getIPAMAccess().getGroup_1_1_1()); 
            // InternalDockerCompose.g:9470:3: ( rule__IPAM__Group_1_1_1__0 )*
            loop71:
            do {
                int alt71=2;
                int LA71_0 = input.LA(1);

                if ( (LA71_0==19) ) {
                    alt71=1;
                }


                switch (alt71) {
            	case 1 :
            	    // InternalDockerCompose.g:9470:4: rule__IPAM__Group_1_1_1__0
            	    {
            	    pushFollow(FOLLOW_5);
            	    rule__IPAM__Group_1_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);

             after(grammarAccess.getIPAMAccess().getGroup_1_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1__1__Impl"


    // $ANTLR start "rule__IPAM__Group_1_1_1__0"
    // InternalDockerCompose.g:9480:1: rule__IPAM__Group_1_1_1__0 : rule__IPAM__Group_1_1_1__0__Impl rule__IPAM__Group_1_1_1__1 ;
    public final void rule__IPAM__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9484:1: ( rule__IPAM__Group_1_1_1__0__Impl rule__IPAM__Group_1_1_1__1 )
            // InternalDockerCompose.g:9485:2: rule__IPAM__Group_1_1_1__0__Impl rule__IPAM__Group_1_1_1__1
            {
            pushFollow(FOLLOW_51);
            rule__IPAM__Group_1_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1_1__0"


    // $ANTLR start "rule__IPAM__Group_1_1_1__0__Impl"
    // InternalDockerCompose.g:9492:1: rule__IPAM__Group_1_1_1__0__Impl : ( '-' ) ;
    public final void rule__IPAM__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9496:1: ( ( '-' ) )
            // InternalDockerCompose.g:9497:1: ( '-' )
            {
            // InternalDockerCompose.g:9497:1: ( '-' )
            // InternalDockerCompose.g:9498:2: '-'
            {
             before(grammarAccess.getIPAMAccess().getHyphenMinusKeyword_1_1_1_0()); 
            match(input,19,FOLLOW_2); 
             after(grammarAccess.getIPAMAccess().getHyphenMinusKeyword_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__IPAM__Group_1_1_1__1"
    // InternalDockerCompose.g:9507:1: rule__IPAM__Group_1_1_1__1 : rule__IPAM__Group_1_1_1__1__Impl ;
    public final void rule__IPAM__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9511:1: ( rule__IPAM__Group_1_1_1__1__Impl )
            // InternalDockerCompose.g:9512:2: rule__IPAM__Group_1_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1_1__1"


    // $ANTLR start "rule__IPAM__Group_1_1_1__1__Impl"
    // InternalDockerCompose.g:9518:1: rule__IPAM__Group_1_1_1__1__Impl : ( ( rule__IPAM__ConfigsAssignment_1_1_1_1 ) ) ;
    public final void rule__IPAM__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9522:1: ( ( ( rule__IPAM__ConfigsAssignment_1_1_1_1 ) ) )
            // InternalDockerCompose.g:9523:1: ( ( rule__IPAM__ConfigsAssignment_1_1_1_1 ) )
            {
            // InternalDockerCompose.g:9523:1: ( ( rule__IPAM__ConfigsAssignment_1_1_1_1 ) )
            // InternalDockerCompose.g:9524:2: ( rule__IPAM__ConfigsAssignment_1_1_1_1 )
            {
             before(grammarAccess.getIPAMAccess().getConfigsAssignment_1_1_1_1()); 
            // InternalDockerCompose.g:9525:2: ( rule__IPAM__ConfigsAssignment_1_1_1_1 )
            // InternalDockerCompose.g:9525:3: rule__IPAM__ConfigsAssignment_1_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__ConfigsAssignment_1_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAccess().getConfigsAssignment_1_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__IPAM__Group_1_2__0"
    // InternalDockerCompose.g:9534:1: rule__IPAM__Group_1_2__0 : rule__IPAM__Group_1_2__0__Impl rule__IPAM__Group_1_2__1 ;
    public final void rule__IPAM__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9538:1: ( rule__IPAM__Group_1_2__0__Impl rule__IPAM__Group_1_2__1 )
            // InternalDockerCompose.g:9539:2: rule__IPAM__Group_1_2__0__Impl rule__IPAM__Group_1_2__1
            {
            pushFollow(FOLLOW_14);
            rule__IPAM__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_2__0"


    // $ANTLR start "rule__IPAM__Group_1_2__0__Impl"
    // InternalDockerCompose.g:9546:1: rule__IPAM__Group_1_2__0__Impl : ( 'options:' ) ;
    public final void rule__IPAM__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9550:1: ( ( 'options:' ) )
            // InternalDockerCompose.g:9551:1: ( 'options:' )
            {
            // InternalDockerCompose.g:9551:1: ( 'options:' )
            // InternalDockerCompose.g:9552:2: 'options:'
            {
             before(grammarAccess.getIPAMAccess().getOptionsKeyword_1_2_0()); 
            match(input,96,FOLLOW_2); 
             after(grammarAccess.getIPAMAccess().getOptionsKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_2__0__Impl"


    // $ANTLR start "rule__IPAM__Group_1_2__1"
    // InternalDockerCompose.g:9561:1: rule__IPAM__Group_1_2__1 : rule__IPAM__Group_1_2__1__Impl ;
    public final void rule__IPAM__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9565:1: ( rule__IPAM__Group_1_2__1__Impl )
            // InternalDockerCompose.g:9566:2: rule__IPAM__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_2__1"


    // $ANTLR start "rule__IPAM__Group_1_2__1__Impl"
    // InternalDockerCompose.g:9572:1: rule__IPAM__Group_1_2__1__Impl : ( ( ( rule__IPAM__OptionsAssignment_1_2_1 ) ) ( ( rule__IPAM__OptionsAssignment_1_2_1 )* ) ) ;
    public final void rule__IPAM__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9576:1: ( ( ( ( rule__IPAM__OptionsAssignment_1_2_1 ) ) ( ( rule__IPAM__OptionsAssignment_1_2_1 )* ) ) )
            // InternalDockerCompose.g:9577:1: ( ( ( rule__IPAM__OptionsAssignment_1_2_1 ) ) ( ( rule__IPAM__OptionsAssignment_1_2_1 )* ) )
            {
            // InternalDockerCompose.g:9577:1: ( ( ( rule__IPAM__OptionsAssignment_1_2_1 ) ) ( ( rule__IPAM__OptionsAssignment_1_2_1 )* ) )
            // InternalDockerCompose.g:9578:2: ( ( rule__IPAM__OptionsAssignment_1_2_1 ) ) ( ( rule__IPAM__OptionsAssignment_1_2_1 )* )
            {
            // InternalDockerCompose.g:9578:2: ( ( rule__IPAM__OptionsAssignment_1_2_1 ) )
            // InternalDockerCompose.g:9579:3: ( rule__IPAM__OptionsAssignment_1_2_1 )
            {
             before(grammarAccess.getIPAMAccess().getOptionsAssignment_1_2_1()); 
            // InternalDockerCompose.g:9580:3: ( rule__IPAM__OptionsAssignment_1_2_1 )
            // InternalDockerCompose.g:9580:4: rule__IPAM__OptionsAssignment_1_2_1
            {
            pushFollow(FOLLOW_46);
            rule__IPAM__OptionsAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAccess().getOptionsAssignment_1_2_1()); 

            }

            // InternalDockerCompose.g:9583:2: ( ( rule__IPAM__OptionsAssignment_1_2_1 )* )
            // InternalDockerCompose.g:9584:3: ( rule__IPAM__OptionsAssignment_1_2_1 )*
            {
             before(grammarAccess.getIPAMAccess().getOptionsAssignment_1_2_1()); 
            // InternalDockerCompose.g:9585:3: ( rule__IPAM__OptionsAssignment_1_2_1 )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==RULE_ID) ) {
                    int LA72_2 = input.LA(2);

                    if ( (LA72_2==48) ) {
                        int LA72_4 = input.LA(3);

                        if ( (LA72_4==RULE_ID) ) {
                            int LA72_5 = input.LA(4);

                            if ( (LA72_5==EOF||(LA72_5>=RULE_VERSION_INT && LA72_5<=RULE_DEVICE_DEF)||(LA72_5>=42 && LA72_5<=47)||(LA72_5>=85 && LA72_5<=93)||(LA72_5>=95 && LA72_5<=96)||LA72_5==101) ) {
                                alt72=1;
                            }


                        }
                        else if ( ((LA72_4>=RULE_VERSION_INT && LA72_4<=RULE_STRING)||LA72_4==RULE_DEVICE_DEF||LA72_4==101) ) {
                            alt72=1;
                        }


                    }


                }
                else if ( ((LA72_0>=RULE_VERSION_INT && LA72_0<=RULE_STRING)||LA72_0==RULE_DEVICE_DEF||LA72_0==101) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // InternalDockerCompose.g:9585:4: rule__IPAM__OptionsAssignment_1_2_1
            	    {
            	    pushFollow(FOLLOW_46);
            	    rule__IPAM__OptionsAssignment_1_2_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

             after(grammarAccess.getIPAMAccess().getOptionsAssignment_1_2_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_2__1__Impl"


    // $ANTLR start "rule__IPAMConfig__Group__0"
    // InternalDockerCompose.g:9595:1: rule__IPAMConfig__Group__0 : rule__IPAMConfig__Group__0__Impl rule__IPAMConfig__Group__1 ;
    public final void rule__IPAMConfig__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9599:1: ( rule__IPAMConfig__Group__0__Impl rule__IPAMConfig__Group__1 )
            // InternalDockerCompose.g:9600:2: rule__IPAMConfig__Group__0__Impl rule__IPAMConfig__Group__1
            {
            pushFollow(FOLLOW_51);
            rule__IPAMConfig__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group__0"


    // $ANTLR start "rule__IPAMConfig__Group__0__Impl"
    // InternalDockerCompose.g:9607:1: rule__IPAMConfig__Group__0__Impl : ( () ) ;
    public final void rule__IPAMConfig__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9611:1: ( ( () ) )
            // InternalDockerCompose.g:9612:1: ( () )
            {
            // InternalDockerCompose.g:9612:1: ( () )
            // InternalDockerCompose.g:9613:2: ()
            {
             before(grammarAccess.getIPAMConfigAccess().getIPAMConfigAction_0()); 
            // InternalDockerCompose.g:9614:2: ()
            // InternalDockerCompose.g:9614:3: 
            {
            }

             after(grammarAccess.getIPAMConfigAccess().getIPAMConfigAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group__0__Impl"


    // $ANTLR start "rule__IPAMConfig__Group__1"
    // InternalDockerCompose.g:9622:1: rule__IPAMConfig__Group__1 : rule__IPAMConfig__Group__1__Impl ;
    public final void rule__IPAMConfig__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9626:1: ( rule__IPAMConfig__Group__1__Impl )
            // InternalDockerCompose.g:9627:2: rule__IPAMConfig__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group__1"


    // $ANTLR start "rule__IPAMConfig__Group__1__Impl"
    // InternalDockerCompose.g:9633:1: rule__IPAMConfig__Group__1__Impl : ( ( rule__IPAMConfig__UnorderedGroup_1 ) ) ;
    public final void rule__IPAMConfig__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9637:1: ( ( ( rule__IPAMConfig__UnorderedGroup_1 ) ) )
            // InternalDockerCompose.g:9638:1: ( ( rule__IPAMConfig__UnorderedGroup_1 ) )
            {
            // InternalDockerCompose.g:9638:1: ( ( rule__IPAMConfig__UnorderedGroup_1 ) )
            // InternalDockerCompose.g:9639:2: ( rule__IPAMConfig__UnorderedGroup_1 )
            {
             before(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1()); 
            // InternalDockerCompose.g:9640:2: ( rule__IPAMConfig__UnorderedGroup_1 )
            // InternalDockerCompose.g:9640:3: rule__IPAMConfig__UnorderedGroup_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__UnorderedGroup_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group__1__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_0__0"
    // InternalDockerCompose.g:9649:1: rule__IPAMConfig__Group_1_0__0 : rule__IPAMConfig__Group_1_0__0__Impl rule__IPAMConfig__Group_1_0__1 ;
    public final void rule__IPAMConfig__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9653:1: ( rule__IPAMConfig__Group_1_0__0__Impl rule__IPAMConfig__Group_1_0__1 )
            // InternalDockerCompose.g:9654:2: rule__IPAMConfig__Group_1_0__0__Impl rule__IPAMConfig__Group_1_0__1
            {
            pushFollow(FOLLOW_9);
            rule__IPAMConfig__Group_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_0__0"


    // $ANTLR start "rule__IPAMConfig__Group_1_0__0__Impl"
    // InternalDockerCompose.g:9661:1: rule__IPAMConfig__Group_1_0__0__Impl : ( 'subnet:' ) ;
    public final void rule__IPAMConfig__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9665:1: ( ( 'subnet:' ) )
            // InternalDockerCompose.g:9666:1: ( 'subnet:' )
            {
            // InternalDockerCompose.g:9666:1: ( 'subnet:' )
            // InternalDockerCompose.g:9667:2: 'subnet:'
            {
             before(grammarAccess.getIPAMConfigAccess().getSubnetKeyword_1_0_0()); 
            match(input,97,FOLLOW_2); 
             after(grammarAccess.getIPAMConfigAccess().getSubnetKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_0__0__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_0__1"
    // InternalDockerCompose.g:9676:1: rule__IPAMConfig__Group_1_0__1 : rule__IPAMConfig__Group_1_0__1__Impl ;
    public final void rule__IPAMConfig__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9680:1: ( rule__IPAMConfig__Group_1_0__1__Impl )
            // InternalDockerCompose.g:9681:2: rule__IPAMConfig__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_0__1"


    // $ANTLR start "rule__IPAMConfig__Group_1_0__1__Impl"
    // InternalDockerCompose.g:9687:1: rule__IPAMConfig__Group_1_0__1__Impl : ( ( rule__IPAMConfig__SubnetAssignment_1_0_1 ) ) ;
    public final void rule__IPAMConfig__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9691:1: ( ( ( rule__IPAMConfig__SubnetAssignment_1_0_1 ) ) )
            // InternalDockerCompose.g:9692:1: ( ( rule__IPAMConfig__SubnetAssignment_1_0_1 ) )
            {
            // InternalDockerCompose.g:9692:1: ( ( rule__IPAMConfig__SubnetAssignment_1_0_1 ) )
            // InternalDockerCompose.g:9693:2: ( rule__IPAMConfig__SubnetAssignment_1_0_1 )
            {
             before(grammarAccess.getIPAMConfigAccess().getSubnetAssignment_1_0_1()); 
            // InternalDockerCompose.g:9694:2: ( rule__IPAMConfig__SubnetAssignment_1_0_1 )
            // InternalDockerCompose.g:9694:3: rule__IPAMConfig__SubnetAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__SubnetAssignment_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMConfigAccess().getSubnetAssignment_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_0__1__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_1__0"
    // InternalDockerCompose.g:9703:1: rule__IPAMConfig__Group_1_1__0 : rule__IPAMConfig__Group_1_1__0__Impl rule__IPAMConfig__Group_1_1__1 ;
    public final void rule__IPAMConfig__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9707:1: ( rule__IPAMConfig__Group_1_1__0__Impl rule__IPAMConfig__Group_1_1__1 )
            // InternalDockerCompose.g:9708:2: rule__IPAMConfig__Group_1_1__0__Impl rule__IPAMConfig__Group_1_1__1
            {
            pushFollow(FOLLOW_9);
            rule__IPAMConfig__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_1__0"


    // $ANTLR start "rule__IPAMConfig__Group_1_1__0__Impl"
    // InternalDockerCompose.g:9715:1: rule__IPAMConfig__Group_1_1__0__Impl : ( 'ip_range:' ) ;
    public final void rule__IPAMConfig__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9719:1: ( ( 'ip_range:' ) )
            // InternalDockerCompose.g:9720:1: ( 'ip_range:' )
            {
            // InternalDockerCompose.g:9720:1: ( 'ip_range:' )
            // InternalDockerCompose.g:9721:2: 'ip_range:'
            {
             before(grammarAccess.getIPAMConfigAccess().getIp_rangeKeyword_1_1_0()); 
            match(input,98,FOLLOW_2); 
             after(grammarAccess.getIPAMConfigAccess().getIp_rangeKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_1__0__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_1__1"
    // InternalDockerCompose.g:9730:1: rule__IPAMConfig__Group_1_1__1 : rule__IPAMConfig__Group_1_1__1__Impl ;
    public final void rule__IPAMConfig__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9734:1: ( rule__IPAMConfig__Group_1_1__1__Impl )
            // InternalDockerCompose.g:9735:2: rule__IPAMConfig__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_1__1"


    // $ANTLR start "rule__IPAMConfig__Group_1_1__1__Impl"
    // InternalDockerCompose.g:9741:1: rule__IPAMConfig__Group_1_1__1__Impl : ( ( rule__IPAMConfig__Ip_rangeAssignment_1_1_1 ) ) ;
    public final void rule__IPAMConfig__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9745:1: ( ( ( rule__IPAMConfig__Ip_rangeAssignment_1_1_1 ) ) )
            // InternalDockerCompose.g:9746:1: ( ( rule__IPAMConfig__Ip_rangeAssignment_1_1_1 ) )
            {
            // InternalDockerCompose.g:9746:1: ( ( rule__IPAMConfig__Ip_rangeAssignment_1_1_1 ) )
            // InternalDockerCompose.g:9747:2: ( rule__IPAMConfig__Ip_rangeAssignment_1_1_1 )
            {
             before(grammarAccess.getIPAMConfigAccess().getIp_rangeAssignment_1_1_1()); 
            // InternalDockerCompose.g:9748:2: ( rule__IPAMConfig__Ip_rangeAssignment_1_1_1 )
            // InternalDockerCompose.g:9748:3: rule__IPAMConfig__Ip_rangeAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Ip_rangeAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMConfigAccess().getIp_rangeAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_1__1__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_2__0"
    // InternalDockerCompose.g:9757:1: rule__IPAMConfig__Group_1_2__0 : rule__IPAMConfig__Group_1_2__0__Impl rule__IPAMConfig__Group_1_2__1 ;
    public final void rule__IPAMConfig__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9761:1: ( rule__IPAMConfig__Group_1_2__0__Impl rule__IPAMConfig__Group_1_2__1 )
            // InternalDockerCompose.g:9762:2: rule__IPAMConfig__Group_1_2__0__Impl rule__IPAMConfig__Group_1_2__1
            {
            pushFollow(FOLLOW_23);
            rule__IPAMConfig__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_2__0"


    // $ANTLR start "rule__IPAMConfig__Group_1_2__0__Impl"
    // InternalDockerCompose.g:9769:1: rule__IPAMConfig__Group_1_2__0__Impl : ( 'gateway:' ) ;
    public final void rule__IPAMConfig__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9773:1: ( ( 'gateway:' ) )
            // InternalDockerCompose.g:9774:1: ( 'gateway:' )
            {
            // InternalDockerCompose.g:9774:1: ( 'gateway:' )
            // InternalDockerCompose.g:9775:2: 'gateway:'
            {
             before(grammarAccess.getIPAMConfigAccess().getGatewayKeyword_1_2_0()); 
            match(input,99,FOLLOW_2); 
             after(grammarAccess.getIPAMConfigAccess().getGatewayKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_2__0__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_2__1"
    // InternalDockerCompose.g:9784:1: rule__IPAMConfig__Group_1_2__1 : rule__IPAMConfig__Group_1_2__1__Impl ;
    public final void rule__IPAMConfig__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9788:1: ( rule__IPAMConfig__Group_1_2__1__Impl )
            // InternalDockerCompose.g:9789:2: rule__IPAMConfig__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_2__1"


    // $ANTLR start "rule__IPAMConfig__Group_1_2__1__Impl"
    // InternalDockerCompose.g:9795:1: rule__IPAMConfig__Group_1_2__1__Impl : ( ( rule__IPAMConfig__GatewayAssignment_1_2_1 ) ) ;
    public final void rule__IPAMConfig__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9799:1: ( ( ( rule__IPAMConfig__GatewayAssignment_1_2_1 ) ) )
            // InternalDockerCompose.g:9800:1: ( ( rule__IPAMConfig__GatewayAssignment_1_2_1 ) )
            {
            // InternalDockerCompose.g:9800:1: ( ( rule__IPAMConfig__GatewayAssignment_1_2_1 ) )
            // InternalDockerCompose.g:9801:2: ( rule__IPAMConfig__GatewayAssignment_1_2_1 )
            {
             before(grammarAccess.getIPAMConfigAccess().getGatewayAssignment_1_2_1()); 
            // InternalDockerCompose.g:9802:2: ( rule__IPAMConfig__GatewayAssignment_1_2_1 )
            // InternalDockerCompose.g:9802:3: rule__IPAMConfig__GatewayAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__GatewayAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMConfigAccess().getGatewayAssignment_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_2__1__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_3__0"
    // InternalDockerCompose.g:9811:1: rule__IPAMConfig__Group_1_3__0 : rule__IPAMConfig__Group_1_3__0__Impl rule__IPAMConfig__Group_1_3__1 ;
    public final void rule__IPAMConfig__Group_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9815:1: ( rule__IPAMConfig__Group_1_3__0__Impl rule__IPAMConfig__Group_1_3__1 )
            // InternalDockerCompose.g:9816:2: rule__IPAMConfig__Group_1_3__0__Impl rule__IPAMConfig__Group_1_3__1
            {
            pushFollow(FOLLOW_14);
            rule__IPAMConfig__Group_1_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_3__0"


    // $ANTLR start "rule__IPAMConfig__Group_1_3__0__Impl"
    // InternalDockerCompose.g:9823:1: rule__IPAMConfig__Group_1_3__0__Impl : ( 'aux_addresses:' ) ;
    public final void rule__IPAMConfig__Group_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9827:1: ( ( 'aux_addresses:' ) )
            // InternalDockerCompose.g:9828:1: ( 'aux_addresses:' )
            {
            // InternalDockerCompose.g:9828:1: ( 'aux_addresses:' )
            // InternalDockerCompose.g:9829:2: 'aux_addresses:'
            {
             before(grammarAccess.getIPAMConfigAccess().getAux_addressesKeyword_1_3_0()); 
            match(input,100,FOLLOW_2); 
             after(grammarAccess.getIPAMConfigAccess().getAux_addressesKeyword_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_3__0__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_3__1"
    // InternalDockerCompose.g:9838:1: rule__IPAMConfig__Group_1_3__1 : rule__IPAMConfig__Group_1_3__1__Impl ;
    public final void rule__IPAMConfig__Group_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9842:1: ( rule__IPAMConfig__Group_1_3__1__Impl )
            // InternalDockerCompose.g:9843:2: rule__IPAMConfig__Group_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_3__1"


    // $ANTLR start "rule__IPAMConfig__Group_1_3__1__Impl"
    // InternalDockerCompose.g:9849:1: rule__IPAMConfig__Group_1_3__1__Impl : ( ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 ) ) ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )* ) ) ;
    public final void rule__IPAMConfig__Group_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9853:1: ( ( ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 ) ) ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )* ) ) )
            // InternalDockerCompose.g:9854:1: ( ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 ) ) ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )* ) )
            {
            // InternalDockerCompose.g:9854:1: ( ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 ) ) ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )* ) )
            // InternalDockerCompose.g:9855:2: ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 ) ) ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )* )
            {
            // InternalDockerCompose.g:9855:2: ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 ) )
            // InternalDockerCompose.g:9856:3: ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )
            {
             before(grammarAccess.getIPAMConfigAccess().getAux_addressesAssignment_1_3_1()); 
            // InternalDockerCompose.g:9857:3: ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )
            // InternalDockerCompose.g:9857:4: rule__IPAMConfig__Aux_addressesAssignment_1_3_1
            {
            pushFollow(FOLLOW_46);
            rule__IPAMConfig__Aux_addressesAssignment_1_3_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMConfigAccess().getAux_addressesAssignment_1_3_1()); 

            }

            // InternalDockerCompose.g:9860:2: ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )* )
            // InternalDockerCompose.g:9861:3: ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )*
            {
             before(grammarAccess.getIPAMConfigAccess().getAux_addressesAssignment_1_3_1()); 
            // InternalDockerCompose.g:9862:3: ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )*
            loop73:
            do {
                int alt73=2;
                int LA73_0 = input.LA(1);

                if ( (LA73_0==RULE_ID) ) {
                    int LA73_2 = input.LA(2);

                    if ( (LA73_2==48) ) {
                        int LA73_4 = input.LA(3);

                        if ( (LA73_4==RULE_INT) ) {
                            alt73=1;
                        }


                    }


                }
                else if ( ((LA73_0>=RULE_VERSION_INT && LA73_0<=RULE_STRING)||LA73_0==RULE_DEVICE_DEF||LA73_0==101) ) {
                    alt73=1;
                }


                switch (alt73) {
            	case 1 :
            	    // InternalDockerCompose.g:9862:4: rule__IPAMConfig__Aux_addressesAssignment_1_3_1
            	    {
            	    pushFollow(FOLLOW_46);
            	    rule__IPAMConfig__Aux_addressesAssignment_1_3_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop73;
                }
            } while (true);

             after(grammarAccess.getIPAMConfigAccess().getAux_addressesAssignment_1_3_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_3__1__Impl"


    // $ANTLR start "rule__IPAMOption__Group__0"
    // InternalDockerCompose.g:9872:1: rule__IPAMOption__Group__0 : rule__IPAMOption__Group__0__Impl rule__IPAMOption__Group__1 ;
    public final void rule__IPAMOption__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9876:1: ( rule__IPAMOption__Group__0__Impl rule__IPAMOption__Group__1 )
            // InternalDockerCompose.g:9877:2: rule__IPAMOption__Group__0__Impl rule__IPAMOption__Group__1
            {
            pushFollow(FOLLOW_14);
            rule__IPAMOption__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMOption__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__0"


    // $ANTLR start "rule__IPAMOption__Group__0__Impl"
    // InternalDockerCompose.g:9884:1: rule__IPAMOption__Group__0__Impl : ( () ) ;
    public final void rule__IPAMOption__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9888:1: ( ( () ) )
            // InternalDockerCompose.g:9889:1: ( () )
            {
            // InternalDockerCompose.g:9889:1: ( () )
            // InternalDockerCompose.g:9890:2: ()
            {
             before(grammarAccess.getIPAMOptionAccess().getIPAMOptionAction_0()); 
            // InternalDockerCompose.g:9891:2: ()
            // InternalDockerCompose.g:9891:3: 
            {
            }

             after(grammarAccess.getIPAMOptionAccess().getIPAMOptionAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__0__Impl"


    // $ANTLR start "rule__IPAMOption__Group__1"
    // InternalDockerCompose.g:9899:1: rule__IPAMOption__Group__1 : rule__IPAMOption__Group__1__Impl rule__IPAMOption__Group__2 ;
    public final void rule__IPAMOption__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9903:1: ( rule__IPAMOption__Group__1__Impl rule__IPAMOption__Group__2 )
            // InternalDockerCompose.g:9904:2: rule__IPAMOption__Group__1__Impl rule__IPAMOption__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__IPAMOption__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMOption__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__1"


    // $ANTLR start "rule__IPAMOption__Group__1__Impl"
    // InternalDockerCompose.g:9911:1: rule__IPAMOption__Group__1__Impl : ( ( rule__IPAMOption__NameAssignment_1 ) ) ;
    public final void rule__IPAMOption__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9915:1: ( ( ( rule__IPAMOption__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:9916:1: ( ( rule__IPAMOption__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:9916:1: ( ( rule__IPAMOption__NameAssignment_1 ) )
            // InternalDockerCompose.g:9917:2: ( rule__IPAMOption__NameAssignment_1 )
            {
             before(grammarAccess.getIPAMOptionAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:9918:2: ( rule__IPAMOption__NameAssignment_1 )
            // InternalDockerCompose.g:9918:3: rule__IPAMOption__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAMOption__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMOptionAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__1__Impl"


    // $ANTLR start "rule__IPAMOption__Group__2"
    // InternalDockerCompose.g:9926:1: rule__IPAMOption__Group__2 : rule__IPAMOption__Group__2__Impl rule__IPAMOption__Group__3 ;
    public final void rule__IPAMOption__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9930:1: ( rule__IPAMOption__Group__2__Impl rule__IPAMOption__Group__3 )
            // InternalDockerCompose.g:9931:2: rule__IPAMOption__Group__2__Impl rule__IPAMOption__Group__3
            {
            pushFollow(FOLLOW_14);
            rule__IPAMOption__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMOption__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__2"


    // $ANTLR start "rule__IPAMOption__Group__2__Impl"
    // InternalDockerCompose.g:9938:1: rule__IPAMOption__Group__2__Impl : ( ':' ) ;
    public final void rule__IPAMOption__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9942:1: ( ( ':' ) )
            // InternalDockerCompose.g:9943:1: ( ':' )
            {
            // InternalDockerCompose.g:9943:1: ( ':' )
            // InternalDockerCompose.g:9944:2: ':'
            {
             before(grammarAccess.getIPAMOptionAccess().getColonKeyword_2()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getIPAMOptionAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__2__Impl"


    // $ANTLR start "rule__IPAMOption__Group__3"
    // InternalDockerCompose.g:9953:1: rule__IPAMOption__Group__3 : rule__IPAMOption__Group__3__Impl ;
    public final void rule__IPAMOption__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9957:1: ( rule__IPAMOption__Group__3__Impl )
            // InternalDockerCompose.g:9958:2: rule__IPAMOption__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMOption__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__3"


    // $ANTLR start "rule__IPAMOption__Group__3__Impl"
    // InternalDockerCompose.g:9964:1: rule__IPAMOption__Group__3__Impl : ( ( rule__IPAMOption__ValueAssignment_3 ) ) ;
    public final void rule__IPAMOption__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9968:1: ( ( ( rule__IPAMOption__ValueAssignment_3 ) ) )
            // InternalDockerCompose.g:9969:1: ( ( rule__IPAMOption__ValueAssignment_3 ) )
            {
            // InternalDockerCompose.g:9969:1: ( ( rule__IPAMOption__ValueAssignment_3 ) )
            // InternalDockerCompose.g:9970:2: ( rule__IPAMOption__ValueAssignment_3 )
            {
             before(grammarAccess.getIPAMOptionAccess().getValueAssignment_3()); 
            // InternalDockerCompose.g:9971:2: ( rule__IPAMOption__ValueAssignment_3 )
            // InternalDockerCompose.g:9971:3: rule__IPAMOption__ValueAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__IPAMOption__ValueAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getIPAMOptionAccess().getValueAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__3__Impl"


    // $ANTLR start "rule__IPAMAddress__Group__0"
    // InternalDockerCompose.g:9980:1: rule__IPAMAddress__Group__0 : rule__IPAMAddress__Group__0__Impl rule__IPAMAddress__Group__1 ;
    public final void rule__IPAMAddress__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9984:1: ( rule__IPAMAddress__Group__0__Impl rule__IPAMAddress__Group__1 )
            // InternalDockerCompose.g:9985:2: rule__IPAMAddress__Group__0__Impl rule__IPAMAddress__Group__1
            {
            pushFollow(FOLLOW_14);
            rule__IPAMAddress__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMAddress__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__0"


    // $ANTLR start "rule__IPAMAddress__Group__0__Impl"
    // InternalDockerCompose.g:9992:1: rule__IPAMAddress__Group__0__Impl : ( () ) ;
    public final void rule__IPAMAddress__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9996:1: ( ( () ) )
            // InternalDockerCompose.g:9997:1: ( () )
            {
            // InternalDockerCompose.g:9997:1: ( () )
            // InternalDockerCompose.g:9998:2: ()
            {
             before(grammarAccess.getIPAMAddressAccess().getIPAMAddressAction_0()); 
            // InternalDockerCompose.g:9999:2: ()
            // InternalDockerCompose.g:9999:3: 
            {
            }

             after(grammarAccess.getIPAMAddressAccess().getIPAMAddressAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__0__Impl"


    // $ANTLR start "rule__IPAMAddress__Group__1"
    // InternalDockerCompose.g:10007:1: rule__IPAMAddress__Group__1 : rule__IPAMAddress__Group__1__Impl rule__IPAMAddress__Group__2 ;
    public final void rule__IPAMAddress__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10011:1: ( rule__IPAMAddress__Group__1__Impl rule__IPAMAddress__Group__2 )
            // InternalDockerCompose.g:10012:2: rule__IPAMAddress__Group__1__Impl rule__IPAMAddress__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__IPAMAddress__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMAddress__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__1"


    // $ANTLR start "rule__IPAMAddress__Group__1__Impl"
    // InternalDockerCompose.g:10019:1: rule__IPAMAddress__Group__1__Impl : ( ( rule__IPAMAddress__NameAssignment_1 ) ) ;
    public final void rule__IPAMAddress__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10023:1: ( ( ( rule__IPAMAddress__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:10024:1: ( ( rule__IPAMAddress__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:10024:1: ( ( rule__IPAMAddress__NameAssignment_1 ) )
            // InternalDockerCompose.g:10025:2: ( rule__IPAMAddress__NameAssignment_1 )
            {
             before(grammarAccess.getIPAMAddressAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:10026:2: ( rule__IPAMAddress__NameAssignment_1 )
            // InternalDockerCompose.g:10026:3: rule__IPAMAddress__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAMAddress__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAddressAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__1__Impl"


    // $ANTLR start "rule__IPAMAddress__Group__2"
    // InternalDockerCompose.g:10034:1: rule__IPAMAddress__Group__2 : rule__IPAMAddress__Group__2__Impl rule__IPAMAddress__Group__3 ;
    public final void rule__IPAMAddress__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10038:1: ( rule__IPAMAddress__Group__2__Impl rule__IPAMAddress__Group__3 )
            // InternalDockerCompose.g:10039:2: rule__IPAMAddress__Group__2__Impl rule__IPAMAddress__Group__3
            {
            pushFollow(FOLLOW_23);
            rule__IPAMAddress__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMAddress__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__2"


    // $ANTLR start "rule__IPAMAddress__Group__2__Impl"
    // InternalDockerCompose.g:10046:1: rule__IPAMAddress__Group__2__Impl : ( ':' ) ;
    public final void rule__IPAMAddress__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10050:1: ( ( ':' ) )
            // InternalDockerCompose.g:10051:1: ( ':' )
            {
            // InternalDockerCompose.g:10051:1: ( ':' )
            // InternalDockerCompose.g:10052:2: ':'
            {
             before(grammarAccess.getIPAMAddressAccess().getColonKeyword_2()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getIPAMAddressAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__2__Impl"


    // $ANTLR start "rule__IPAMAddress__Group__3"
    // InternalDockerCompose.g:10061:1: rule__IPAMAddress__Group__3 : rule__IPAMAddress__Group__3__Impl ;
    public final void rule__IPAMAddress__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10065:1: ( rule__IPAMAddress__Group__3__Impl )
            // InternalDockerCompose.g:10066:2: rule__IPAMAddress__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMAddress__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__3"


    // $ANTLR start "rule__IPAMAddress__Group__3__Impl"
    // InternalDockerCompose.g:10072:1: rule__IPAMAddress__Group__3__Impl : ( ( rule__IPAMAddress__DnsAssignment_3 ) ) ;
    public final void rule__IPAMAddress__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10076:1: ( ( ( rule__IPAMAddress__DnsAssignment_3 ) ) )
            // InternalDockerCompose.g:10077:1: ( ( rule__IPAMAddress__DnsAssignment_3 ) )
            {
            // InternalDockerCompose.g:10077:1: ( ( rule__IPAMAddress__DnsAssignment_3 ) )
            // InternalDockerCompose.g:10078:2: ( rule__IPAMAddress__DnsAssignment_3 )
            {
             before(grammarAccess.getIPAMAddressAccess().getDnsAssignment_3()); 
            // InternalDockerCompose.g:10079:2: ( rule__IPAMAddress__DnsAssignment_3 )
            // InternalDockerCompose.g:10079:3: rule__IPAMAddress__DnsAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__IPAMAddress__DnsAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAddressAccess().getDnsAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__3__Impl"


    // $ANTLR start "rule__PATH__Group_0__0"
    // InternalDockerCompose.g:10088:1: rule__PATH__Group_0__0 : rule__PATH__Group_0__0__Impl rule__PATH__Group_0__1 ;
    public final void rule__PATH__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10092:1: ( rule__PATH__Group_0__0__Impl rule__PATH__Group_0__1 )
            // InternalDockerCompose.g:10093:2: rule__PATH__Group_0__0__Impl rule__PATH__Group_0__1
            {
            pushFollow(FOLLOW_52);
            rule__PATH__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0__0"


    // $ANTLR start "rule__PATH__Group_0__0__Impl"
    // InternalDockerCompose.g:10100:1: rule__PATH__Group_0__0__Impl : ( ( rule__PATH__Alternatives_0_0 ) ) ;
    public final void rule__PATH__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10104:1: ( ( ( rule__PATH__Alternatives_0_0 ) ) )
            // InternalDockerCompose.g:10105:1: ( ( rule__PATH__Alternatives_0_0 ) )
            {
            // InternalDockerCompose.g:10105:1: ( ( rule__PATH__Alternatives_0_0 ) )
            // InternalDockerCompose.g:10106:2: ( rule__PATH__Alternatives_0_0 )
            {
             before(grammarAccess.getPATHAccess().getAlternatives_0_0()); 
            // InternalDockerCompose.g:10107:2: ( rule__PATH__Alternatives_0_0 )
            // InternalDockerCompose.g:10107:3: rule__PATH__Alternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Alternatives_0_0();

            state._fsp--;


            }

             after(grammarAccess.getPATHAccess().getAlternatives_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0__0__Impl"


    // $ANTLR start "rule__PATH__Group_0__1"
    // InternalDockerCompose.g:10115:1: rule__PATH__Group_0__1 : rule__PATH__Group_0__1__Impl rule__PATH__Group_0__2 ;
    public final void rule__PATH__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10119:1: ( rule__PATH__Group_0__1__Impl rule__PATH__Group_0__2 )
            // InternalDockerCompose.g:10120:2: rule__PATH__Group_0__1__Impl rule__PATH__Group_0__2
            {
            pushFollow(FOLLOW_52);
            rule__PATH__Group_0__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group_0__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0__1"


    // $ANTLR start "rule__PATH__Group_0__1__Impl"
    // InternalDockerCompose.g:10127:1: rule__PATH__Group_0__1__Impl : ( ( rule__PATH__Group_0_1__0 )* ) ;
    public final void rule__PATH__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10131:1: ( ( ( rule__PATH__Group_0_1__0 )* ) )
            // InternalDockerCompose.g:10132:1: ( ( rule__PATH__Group_0_1__0 )* )
            {
            // InternalDockerCompose.g:10132:1: ( ( rule__PATH__Group_0_1__0 )* )
            // InternalDockerCompose.g:10133:2: ( rule__PATH__Group_0_1__0 )*
            {
             before(grammarAccess.getPATHAccess().getGroup_0_1()); 
            // InternalDockerCompose.g:10134:2: ( rule__PATH__Group_0_1__0 )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==64) ) {
                    switch ( input.LA(2) ) {
                    case RULE_ID:
                        {
                        alt74=1;
                        }
                        break;
                    case 17:
                        {
                        alt74=1;
                        }
                        break;
                    case 18:
                        {
                        alt74=1;
                        }
                        break;

                    }

                }


                switch (alt74) {
            	case 1 :
            	    // InternalDockerCompose.g:10134:3: rule__PATH__Group_0_1__0
            	    {
            	    pushFollow(FOLLOW_53);
            	    rule__PATH__Group_0_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);

             after(grammarAccess.getPATHAccess().getGroup_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0__1__Impl"


    // $ANTLR start "rule__PATH__Group_0__2"
    // InternalDockerCompose.g:10142:1: rule__PATH__Group_0__2 : rule__PATH__Group_0__2__Impl ;
    public final void rule__PATH__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10146:1: ( rule__PATH__Group_0__2__Impl )
            // InternalDockerCompose.g:10147:2: rule__PATH__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Group_0__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0__2"


    // $ANTLR start "rule__PATH__Group_0__2__Impl"
    // InternalDockerCompose.g:10153:1: rule__PATH__Group_0__2__Impl : ( ( '/' )? ) ;
    public final void rule__PATH__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10157:1: ( ( ( '/' )? ) )
            // InternalDockerCompose.g:10158:1: ( ( '/' )? )
            {
            // InternalDockerCompose.g:10158:1: ( ( '/' )? )
            // InternalDockerCompose.g:10159:2: ( '/' )?
            {
             before(grammarAccess.getPATHAccess().getSolidusKeyword_0_2()); 
            // InternalDockerCompose.g:10160:2: ( '/' )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==64) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // InternalDockerCompose.g:10160:3: '/'
                    {
                    match(input,64,FOLLOW_2); 

                    }
                    break;

            }

             after(grammarAccess.getPATHAccess().getSolidusKeyword_0_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0__2__Impl"


    // $ANTLR start "rule__PATH__Group_0_0_0__0"
    // InternalDockerCompose.g:10169:1: rule__PATH__Group_0_0_0__0 : rule__PATH__Group_0_0_0__0__Impl rule__PATH__Group_0_0_0__1 ;
    public final void rule__PATH__Group_0_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10173:1: ( rule__PATH__Group_0_0_0__0__Impl rule__PATH__Group_0_0_0__1 )
            // InternalDockerCompose.g:10174:2: rule__PATH__Group_0_0_0__0__Impl rule__PATH__Group_0_0_0__1
            {
            pushFollow(FOLLOW_8);
            rule__PATH__Group_0_0_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group_0_0_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_0_0__0"


    // $ANTLR start "rule__PATH__Group_0_0_0__0__Impl"
    // InternalDockerCompose.g:10181:1: rule__PATH__Group_0_0_0__0__Impl : ( RULE_ID ) ;
    public final void rule__PATH__Group_0_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10185:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:10186:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:10186:1: ( RULE_ID )
            // InternalDockerCompose.g:10187:2: RULE_ID
            {
             before(grammarAccess.getPATHAccess().getIDTerminalRuleCall_0_0_0_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getPATHAccess().getIDTerminalRuleCall_0_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_0_0__0__Impl"


    // $ANTLR start "rule__PATH__Group_0_0_0__1"
    // InternalDockerCompose.g:10196:1: rule__PATH__Group_0_0_0__1 : rule__PATH__Group_0_0_0__1__Impl ;
    public final void rule__PATH__Group_0_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10200:1: ( rule__PATH__Group_0_0_0__1__Impl )
            // InternalDockerCompose.g:10201:2: rule__PATH__Group_0_0_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Group_0_0_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_0_0__1"


    // $ANTLR start "rule__PATH__Group_0_0_0__1__Impl"
    // InternalDockerCompose.g:10207:1: rule__PATH__Group_0_0_0__1__Impl : ( ( rule__PATH__Group_0_0_0_1__0 )* ) ;
    public final void rule__PATH__Group_0_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10211:1: ( ( ( rule__PATH__Group_0_0_0_1__0 )* ) )
            // InternalDockerCompose.g:10212:1: ( ( rule__PATH__Group_0_0_0_1__0 )* )
            {
            // InternalDockerCompose.g:10212:1: ( ( rule__PATH__Group_0_0_0_1__0 )* )
            // InternalDockerCompose.g:10213:2: ( rule__PATH__Group_0_0_0_1__0 )*
            {
             before(grammarAccess.getPATHAccess().getGroup_0_0_0_1()); 
            // InternalDockerCompose.g:10214:2: ( rule__PATH__Group_0_0_0_1__0 )*
            loop76:
            do {
                int alt76=2;
                int LA76_0 = input.LA(1);

                if ( (LA76_0==17) ) {
                    int LA76_2 = input.LA(2);

                    if ( (LA76_2==RULE_ID) ) {
                        alt76=1;
                    }


                }


                switch (alt76) {
            	case 1 :
            	    // InternalDockerCompose.g:10214:3: rule__PATH__Group_0_0_0_1__0
            	    {
            	    pushFollow(FOLLOW_54);
            	    rule__PATH__Group_0_0_0_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop76;
                }
            } while (true);

             after(grammarAccess.getPATHAccess().getGroup_0_0_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_0_0__1__Impl"


    // $ANTLR start "rule__PATH__Group_0_0_0_1__0"
    // InternalDockerCompose.g:10223:1: rule__PATH__Group_0_0_0_1__0 : rule__PATH__Group_0_0_0_1__0__Impl rule__PATH__Group_0_0_0_1__1 ;
    public final void rule__PATH__Group_0_0_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10227:1: ( rule__PATH__Group_0_0_0_1__0__Impl rule__PATH__Group_0_0_0_1__1 )
            // InternalDockerCompose.g:10228:2: rule__PATH__Group_0_0_0_1__0__Impl rule__PATH__Group_0_0_0_1__1
            {
            pushFollow(FOLLOW_7);
            rule__PATH__Group_0_0_0_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group_0_0_0_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_0_0_1__0"


    // $ANTLR start "rule__PATH__Group_0_0_0_1__0__Impl"
    // InternalDockerCompose.g:10235:1: rule__PATH__Group_0_0_0_1__0__Impl : ( '.' ) ;
    public final void rule__PATH__Group_0_0_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10239:1: ( ( '.' ) )
            // InternalDockerCompose.g:10240:1: ( '.' )
            {
            // InternalDockerCompose.g:10240:1: ( '.' )
            // InternalDockerCompose.g:10241:2: '.'
            {
             before(grammarAccess.getPATHAccess().getFullStopKeyword_0_0_0_1_0()); 
            match(input,17,FOLLOW_2); 
             after(grammarAccess.getPATHAccess().getFullStopKeyword_0_0_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_0_0_1__0__Impl"


    // $ANTLR start "rule__PATH__Group_0_0_0_1__1"
    // InternalDockerCompose.g:10250:1: rule__PATH__Group_0_0_0_1__1 : rule__PATH__Group_0_0_0_1__1__Impl ;
    public final void rule__PATH__Group_0_0_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10254:1: ( rule__PATH__Group_0_0_0_1__1__Impl )
            // InternalDockerCompose.g:10255:2: rule__PATH__Group_0_0_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Group_0_0_0_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_0_0_1__1"


    // $ANTLR start "rule__PATH__Group_0_0_0_1__1__Impl"
    // InternalDockerCompose.g:10261:1: rule__PATH__Group_0_0_0_1__1__Impl : ( RULE_ID ) ;
    public final void rule__PATH__Group_0_0_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10265:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:10266:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:10266:1: ( RULE_ID )
            // InternalDockerCompose.g:10267:2: RULE_ID
            {
             before(grammarAccess.getPATHAccess().getIDTerminalRuleCall_0_0_0_1_1()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getPATHAccess().getIDTerminalRuleCall_0_0_0_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_0_0_1__1__Impl"


    // $ANTLR start "rule__PATH__Group_0_1__0"
    // InternalDockerCompose.g:10277:1: rule__PATH__Group_0_1__0 : rule__PATH__Group_0_1__0__Impl rule__PATH__Group_0_1__1 ;
    public final void rule__PATH__Group_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10281:1: ( rule__PATH__Group_0_1__0__Impl rule__PATH__Group_0_1__1 )
            // InternalDockerCompose.g:10282:2: rule__PATH__Group_0_1__0__Impl rule__PATH__Group_0_1__1
            {
            pushFollow(FOLLOW_55);
            rule__PATH__Group_0_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group_0_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_1__0"


    // $ANTLR start "rule__PATH__Group_0_1__0__Impl"
    // InternalDockerCompose.g:10289:1: rule__PATH__Group_0_1__0__Impl : ( '/' ) ;
    public final void rule__PATH__Group_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10293:1: ( ( '/' ) )
            // InternalDockerCompose.g:10294:1: ( '/' )
            {
            // InternalDockerCompose.g:10294:1: ( '/' )
            // InternalDockerCompose.g:10295:2: '/'
            {
             before(grammarAccess.getPATHAccess().getSolidusKeyword_0_1_0()); 
            match(input,64,FOLLOW_2); 
             after(grammarAccess.getPATHAccess().getSolidusKeyword_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_1__0__Impl"


    // $ANTLR start "rule__PATH__Group_0_1__1"
    // InternalDockerCompose.g:10304:1: rule__PATH__Group_0_1__1 : rule__PATH__Group_0_1__1__Impl ;
    public final void rule__PATH__Group_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10308:1: ( rule__PATH__Group_0_1__1__Impl )
            // InternalDockerCompose.g:10309:2: rule__PATH__Group_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Group_0_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_1__1"


    // $ANTLR start "rule__PATH__Group_0_1__1__Impl"
    // InternalDockerCompose.g:10315:1: rule__PATH__Group_0_1__1__Impl : ( ( rule__PATH__Alternatives_0_1_1 ) ) ;
    public final void rule__PATH__Group_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10319:1: ( ( ( rule__PATH__Alternatives_0_1_1 ) ) )
            // InternalDockerCompose.g:10320:1: ( ( rule__PATH__Alternatives_0_1_1 ) )
            {
            // InternalDockerCompose.g:10320:1: ( ( rule__PATH__Alternatives_0_1_1 ) )
            // InternalDockerCompose.g:10321:2: ( rule__PATH__Alternatives_0_1_1 )
            {
             before(grammarAccess.getPATHAccess().getAlternatives_0_1_1()); 
            // InternalDockerCompose.g:10322:2: ( rule__PATH__Alternatives_0_1_1 )
            // InternalDockerCompose.g:10322:3: rule__PATH__Alternatives_0_1_1
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Alternatives_0_1_1();

            state._fsp--;


            }

             after(grammarAccess.getPATHAccess().getAlternatives_0_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_1__1__Impl"


    // $ANTLR start "rule__PATH__Group_0_1_1_0__0"
    // InternalDockerCompose.g:10331:1: rule__PATH__Group_0_1_1_0__0 : rule__PATH__Group_0_1_1_0__0__Impl rule__PATH__Group_0_1_1_0__1 ;
    public final void rule__PATH__Group_0_1_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10335:1: ( rule__PATH__Group_0_1_1_0__0__Impl rule__PATH__Group_0_1_1_0__1 )
            // InternalDockerCompose.g:10336:2: rule__PATH__Group_0_1_1_0__0__Impl rule__PATH__Group_0_1_1_0__1
            {
            pushFollow(FOLLOW_8);
            rule__PATH__Group_0_1_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group_0_1_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_1_1_0__0"


    // $ANTLR start "rule__PATH__Group_0_1_1_0__0__Impl"
    // InternalDockerCompose.g:10343:1: rule__PATH__Group_0_1_1_0__0__Impl : ( RULE_ID ) ;
    public final void rule__PATH__Group_0_1_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10347:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:10348:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:10348:1: ( RULE_ID )
            // InternalDockerCompose.g:10349:2: RULE_ID
            {
             before(grammarAccess.getPATHAccess().getIDTerminalRuleCall_0_1_1_0_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getPATHAccess().getIDTerminalRuleCall_0_1_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_1_1_0__0__Impl"


    // $ANTLR start "rule__PATH__Group_0_1_1_0__1"
    // InternalDockerCompose.g:10358:1: rule__PATH__Group_0_1_1_0__1 : rule__PATH__Group_0_1_1_0__1__Impl ;
    public final void rule__PATH__Group_0_1_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10362:1: ( rule__PATH__Group_0_1_1_0__1__Impl )
            // InternalDockerCompose.g:10363:2: rule__PATH__Group_0_1_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Group_0_1_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_1_1_0__1"


    // $ANTLR start "rule__PATH__Group_0_1_1_0__1__Impl"
    // InternalDockerCompose.g:10369:1: rule__PATH__Group_0_1_1_0__1__Impl : ( ( rule__PATH__Group_0_1_1_0_1__0 )* ) ;
    public final void rule__PATH__Group_0_1_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10373:1: ( ( ( rule__PATH__Group_0_1_1_0_1__0 )* ) )
            // InternalDockerCompose.g:10374:1: ( ( rule__PATH__Group_0_1_1_0_1__0 )* )
            {
            // InternalDockerCompose.g:10374:1: ( ( rule__PATH__Group_0_1_1_0_1__0 )* )
            // InternalDockerCompose.g:10375:2: ( rule__PATH__Group_0_1_1_0_1__0 )*
            {
             before(grammarAccess.getPATHAccess().getGroup_0_1_1_0_1()); 
            // InternalDockerCompose.g:10376:2: ( rule__PATH__Group_0_1_1_0_1__0 )*
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( (LA77_0==17) ) {
                    int LA77_2 = input.LA(2);

                    if ( (LA77_2==RULE_ID) ) {
                        alt77=1;
                    }


                }


                switch (alt77) {
            	case 1 :
            	    // InternalDockerCompose.g:10376:3: rule__PATH__Group_0_1_1_0_1__0
            	    {
            	    pushFollow(FOLLOW_54);
            	    rule__PATH__Group_0_1_1_0_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);

             after(grammarAccess.getPATHAccess().getGroup_0_1_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_1_1_0__1__Impl"


    // $ANTLR start "rule__PATH__Group_0_1_1_0_1__0"
    // InternalDockerCompose.g:10385:1: rule__PATH__Group_0_1_1_0_1__0 : rule__PATH__Group_0_1_1_0_1__0__Impl rule__PATH__Group_0_1_1_0_1__1 ;
    public final void rule__PATH__Group_0_1_1_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10389:1: ( rule__PATH__Group_0_1_1_0_1__0__Impl rule__PATH__Group_0_1_1_0_1__1 )
            // InternalDockerCompose.g:10390:2: rule__PATH__Group_0_1_1_0_1__0__Impl rule__PATH__Group_0_1_1_0_1__1
            {
            pushFollow(FOLLOW_7);
            rule__PATH__Group_0_1_1_0_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group_0_1_1_0_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_1_1_0_1__0"


    // $ANTLR start "rule__PATH__Group_0_1_1_0_1__0__Impl"
    // InternalDockerCompose.g:10397:1: rule__PATH__Group_0_1_1_0_1__0__Impl : ( '.' ) ;
    public final void rule__PATH__Group_0_1_1_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10401:1: ( ( '.' ) )
            // InternalDockerCompose.g:10402:1: ( '.' )
            {
            // InternalDockerCompose.g:10402:1: ( '.' )
            // InternalDockerCompose.g:10403:2: '.'
            {
             before(grammarAccess.getPATHAccess().getFullStopKeyword_0_1_1_0_1_0()); 
            match(input,17,FOLLOW_2); 
             after(grammarAccess.getPATHAccess().getFullStopKeyword_0_1_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_1_1_0_1__0__Impl"


    // $ANTLR start "rule__PATH__Group_0_1_1_0_1__1"
    // InternalDockerCompose.g:10412:1: rule__PATH__Group_0_1_1_0_1__1 : rule__PATH__Group_0_1_1_0_1__1__Impl ;
    public final void rule__PATH__Group_0_1_1_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10416:1: ( rule__PATH__Group_0_1_1_0_1__1__Impl )
            // InternalDockerCompose.g:10417:2: rule__PATH__Group_0_1_1_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Group_0_1_1_0_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_1_1_0_1__1"


    // $ANTLR start "rule__PATH__Group_0_1_1_0_1__1__Impl"
    // InternalDockerCompose.g:10423:1: rule__PATH__Group_0_1_1_0_1__1__Impl : ( RULE_ID ) ;
    public final void rule__PATH__Group_0_1_1_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10427:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:10428:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:10428:1: ( RULE_ID )
            // InternalDockerCompose.g:10429:2: RULE_ID
            {
             before(grammarAccess.getPATHAccess().getIDTerminalRuleCall_0_1_1_0_1_1()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getPATHAccess().getIDTerminalRuleCall_0_1_1_0_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_0_1_1_0_1__1__Impl"


    // $ANTLR start "rule__PATH__Group_1__0"
    // InternalDockerCompose.g:10439:1: rule__PATH__Group_1__0 : rule__PATH__Group_1__0__Impl rule__PATH__Group_1__1 ;
    public final void rule__PATH__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10443:1: ( rule__PATH__Group_1__0__Impl rule__PATH__Group_1__1 )
            // InternalDockerCompose.g:10444:2: rule__PATH__Group_1__0__Impl rule__PATH__Group_1__1
            {
            pushFollow(FOLLOW_55);
            rule__PATH__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1__0"


    // $ANTLR start "rule__PATH__Group_1__0__Impl"
    // InternalDockerCompose.g:10451:1: rule__PATH__Group_1__0__Impl : ( '/' ) ;
    public final void rule__PATH__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10455:1: ( ( '/' ) )
            // InternalDockerCompose.g:10456:1: ( '/' )
            {
            // InternalDockerCompose.g:10456:1: ( '/' )
            // InternalDockerCompose.g:10457:2: '/'
            {
             before(grammarAccess.getPATHAccess().getSolidusKeyword_1_0()); 
            match(input,64,FOLLOW_2); 
             after(grammarAccess.getPATHAccess().getSolidusKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1__0__Impl"


    // $ANTLR start "rule__PATH__Group_1__1"
    // InternalDockerCompose.g:10466:1: rule__PATH__Group_1__1 : rule__PATH__Group_1__1__Impl rule__PATH__Group_1__2 ;
    public final void rule__PATH__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10470:1: ( rule__PATH__Group_1__1__Impl rule__PATH__Group_1__2 )
            // InternalDockerCompose.g:10471:2: rule__PATH__Group_1__1__Impl rule__PATH__Group_1__2
            {
            pushFollow(FOLLOW_55);
            rule__PATH__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1__1"


    // $ANTLR start "rule__PATH__Group_1__1__Impl"
    // InternalDockerCompose.g:10478:1: rule__PATH__Group_1__1__Impl : ( ( rule__PATH__Group_1_1__0 )* ) ;
    public final void rule__PATH__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10482:1: ( ( ( rule__PATH__Group_1_1__0 )* ) )
            // InternalDockerCompose.g:10483:1: ( ( rule__PATH__Group_1_1__0 )* )
            {
            // InternalDockerCompose.g:10483:1: ( ( rule__PATH__Group_1_1__0 )* )
            // InternalDockerCompose.g:10484:2: ( rule__PATH__Group_1_1__0 )*
            {
             before(grammarAccess.getPATHAccess().getGroup_1_1()); 
            // InternalDockerCompose.g:10485:2: ( rule__PATH__Group_1_1__0 )*
            loop78:
            do {
                int alt78=2;
                alt78 = dfa78.predict(input);
                switch (alt78) {
            	case 1 :
            	    // InternalDockerCompose.g:10485:3: rule__PATH__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_56);
            	    rule__PATH__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop78;
                }
            } while (true);

             after(grammarAccess.getPATHAccess().getGroup_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1__1__Impl"


    // $ANTLR start "rule__PATH__Group_1__2"
    // InternalDockerCompose.g:10493:1: rule__PATH__Group_1__2 : rule__PATH__Group_1__2__Impl ;
    public final void rule__PATH__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10497:1: ( rule__PATH__Group_1__2__Impl )
            // InternalDockerCompose.g:10498:2: rule__PATH__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1__2"


    // $ANTLR start "rule__PATH__Group_1__2__Impl"
    // InternalDockerCompose.g:10504:1: rule__PATH__Group_1__2__Impl : ( ( rule__PATH__Alternatives_1_2 )? ) ;
    public final void rule__PATH__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10508:1: ( ( ( rule__PATH__Alternatives_1_2 )? ) )
            // InternalDockerCompose.g:10509:1: ( ( rule__PATH__Alternatives_1_2 )? )
            {
            // InternalDockerCompose.g:10509:1: ( ( rule__PATH__Alternatives_1_2 )? )
            // InternalDockerCompose.g:10510:2: ( rule__PATH__Alternatives_1_2 )?
            {
             before(grammarAccess.getPATHAccess().getAlternatives_1_2()); 
            // InternalDockerCompose.g:10511:2: ( rule__PATH__Alternatives_1_2 )?
            int alt79=2;
            switch ( input.LA(1) ) {
                case RULE_ID:
                    {
                    alt79=1;
                    }
                    break;
                case 17:
                    {
                    alt79=1;
                    }
                    break;
                case 18:
                    {
                    alt79=1;
                    }
                    break;
            }

            switch (alt79) {
                case 1 :
                    // InternalDockerCompose.g:10511:3: rule__PATH__Alternatives_1_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__PATH__Alternatives_1_2();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getPATHAccess().getAlternatives_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1__2__Impl"


    // $ANTLR start "rule__PATH__Group_1_1__0"
    // InternalDockerCompose.g:10520:1: rule__PATH__Group_1_1__0 : rule__PATH__Group_1_1__0__Impl rule__PATH__Group_1_1__1 ;
    public final void rule__PATH__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10524:1: ( rule__PATH__Group_1_1__0__Impl rule__PATH__Group_1_1__1 )
            // InternalDockerCompose.g:10525:2: rule__PATH__Group_1_1__0__Impl rule__PATH__Group_1_1__1
            {
            pushFollow(FOLLOW_52);
            rule__PATH__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_1__0"


    // $ANTLR start "rule__PATH__Group_1_1__0__Impl"
    // InternalDockerCompose.g:10532:1: rule__PATH__Group_1_1__0__Impl : ( ( rule__PATH__Alternatives_1_1_0 ) ) ;
    public final void rule__PATH__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10536:1: ( ( ( rule__PATH__Alternatives_1_1_0 ) ) )
            // InternalDockerCompose.g:10537:1: ( ( rule__PATH__Alternatives_1_1_0 ) )
            {
            // InternalDockerCompose.g:10537:1: ( ( rule__PATH__Alternatives_1_1_0 ) )
            // InternalDockerCompose.g:10538:2: ( rule__PATH__Alternatives_1_1_0 )
            {
             before(grammarAccess.getPATHAccess().getAlternatives_1_1_0()); 
            // InternalDockerCompose.g:10539:2: ( rule__PATH__Alternatives_1_1_0 )
            // InternalDockerCompose.g:10539:3: rule__PATH__Alternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Alternatives_1_1_0();

            state._fsp--;


            }

             after(grammarAccess.getPATHAccess().getAlternatives_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_1__0__Impl"


    // $ANTLR start "rule__PATH__Group_1_1__1"
    // InternalDockerCompose.g:10547:1: rule__PATH__Group_1_1__1 : rule__PATH__Group_1_1__1__Impl ;
    public final void rule__PATH__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10551:1: ( rule__PATH__Group_1_1__1__Impl )
            // InternalDockerCompose.g:10552:2: rule__PATH__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_1__1"


    // $ANTLR start "rule__PATH__Group_1_1__1__Impl"
    // InternalDockerCompose.g:10558:1: rule__PATH__Group_1_1__1__Impl : ( '/' ) ;
    public final void rule__PATH__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10562:1: ( ( '/' ) )
            // InternalDockerCompose.g:10563:1: ( '/' )
            {
            // InternalDockerCompose.g:10563:1: ( '/' )
            // InternalDockerCompose.g:10564:2: '/'
            {
             before(grammarAccess.getPATHAccess().getSolidusKeyword_1_1_1()); 
            match(input,64,FOLLOW_2); 
             after(grammarAccess.getPATHAccess().getSolidusKeyword_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_1__1__Impl"


    // $ANTLR start "rule__PATH__Group_1_1_0_0__0"
    // InternalDockerCompose.g:10574:1: rule__PATH__Group_1_1_0_0__0 : rule__PATH__Group_1_1_0_0__0__Impl rule__PATH__Group_1_1_0_0__1 ;
    public final void rule__PATH__Group_1_1_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10578:1: ( rule__PATH__Group_1_1_0_0__0__Impl rule__PATH__Group_1_1_0_0__1 )
            // InternalDockerCompose.g:10579:2: rule__PATH__Group_1_1_0_0__0__Impl rule__PATH__Group_1_1_0_0__1
            {
            pushFollow(FOLLOW_8);
            rule__PATH__Group_1_1_0_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group_1_1_0_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_1_0_0__0"


    // $ANTLR start "rule__PATH__Group_1_1_0_0__0__Impl"
    // InternalDockerCompose.g:10586:1: rule__PATH__Group_1_1_0_0__0__Impl : ( RULE_ID ) ;
    public final void rule__PATH__Group_1_1_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10590:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:10591:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:10591:1: ( RULE_ID )
            // InternalDockerCompose.g:10592:2: RULE_ID
            {
             before(grammarAccess.getPATHAccess().getIDTerminalRuleCall_1_1_0_0_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getPATHAccess().getIDTerminalRuleCall_1_1_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_1_0_0__0__Impl"


    // $ANTLR start "rule__PATH__Group_1_1_0_0__1"
    // InternalDockerCompose.g:10601:1: rule__PATH__Group_1_1_0_0__1 : rule__PATH__Group_1_1_0_0__1__Impl ;
    public final void rule__PATH__Group_1_1_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10605:1: ( rule__PATH__Group_1_1_0_0__1__Impl )
            // InternalDockerCompose.g:10606:2: rule__PATH__Group_1_1_0_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Group_1_1_0_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_1_0_0__1"


    // $ANTLR start "rule__PATH__Group_1_1_0_0__1__Impl"
    // InternalDockerCompose.g:10612:1: rule__PATH__Group_1_1_0_0__1__Impl : ( ( rule__PATH__Group_1_1_0_0_1__0 )* ) ;
    public final void rule__PATH__Group_1_1_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10616:1: ( ( ( rule__PATH__Group_1_1_0_0_1__0 )* ) )
            // InternalDockerCompose.g:10617:1: ( ( rule__PATH__Group_1_1_0_0_1__0 )* )
            {
            // InternalDockerCompose.g:10617:1: ( ( rule__PATH__Group_1_1_0_0_1__0 )* )
            // InternalDockerCompose.g:10618:2: ( rule__PATH__Group_1_1_0_0_1__0 )*
            {
             before(grammarAccess.getPATHAccess().getGroup_1_1_0_0_1()); 
            // InternalDockerCompose.g:10619:2: ( rule__PATH__Group_1_1_0_0_1__0 )*
            loop80:
            do {
                int alt80=2;
                int LA80_0 = input.LA(1);

                if ( (LA80_0==17) ) {
                    alt80=1;
                }


                switch (alt80) {
            	case 1 :
            	    // InternalDockerCompose.g:10619:3: rule__PATH__Group_1_1_0_0_1__0
            	    {
            	    pushFollow(FOLLOW_54);
            	    rule__PATH__Group_1_1_0_0_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop80;
                }
            } while (true);

             after(grammarAccess.getPATHAccess().getGroup_1_1_0_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_1_0_0__1__Impl"


    // $ANTLR start "rule__PATH__Group_1_1_0_0_1__0"
    // InternalDockerCompose.g:10628:1: rule__PATH__Group_1_1_0_0_1__0 : rule__PATH__Group_1_1_0_0_1__0__Impl rule__PATH__Group_1_1_0_0_1__1 ;
    public final void rule__PATH__Group_1_1_0_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10632:1: ( rule__PATH__Group_1_1_0_0_1__0__Impl rule__PATH__Group_1_1_0_0_1__1 )
            // InternalDockerCompose.g:10633:2: rule__PATH__Group_1_1_0_0_1__0__Impl rule__PATH__Group_1_1_0_0_1__1
            {
            pushFollow(FOLLOW_7);
            rule__PATH__Group_1_1_0_0_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group_1_1_0_0_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_1_0_0_1__0"


    // $ANTLR start "rule__PATH__Group_1_1_0_0_1__0__Impl"
    // InternalDockerCompose.g:10640:1: rule__PATH__Group_1_1_0_0_1__0__Impl : ( '.' ) ;
    public final void rule__PATH__Group_1_1_0_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10644:1: ( ( '.' ) )
            // InternalDockerCompose.g:10645:1: ( '.' )
            {
            // InternalDockerCompose.g:10645:1: ( '.' )
            // InternalDockerCompose.g:10646:2: '.'
            {
             before(grammarAccess.getPATHAccess().getFullStopKeyword_1_1_0_0_1_0()); 
            match(input,17,FOLLOW_2); 
             after(grammarAccess.getPATHAccess().getFullStopKeyword_1_1_0_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_1_0_0_1__0__Impl"


    // $ANTLR start "rule__PATH__Group_1_1_0_0_1__1"
    // InternalDockerCompose.g:10655:1: rule__PATH__Group_1_1_0_0_1__1 : rule__PATH__Group_1_1_0_0_1__1__Impl ;
    public final void rule__PATH__Group_1_1_0_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10659:1: ( rule__PATH__Group_1_1_0_0_1__1__Impl )
            // InternalDockerCompose.g:10660:2: rule__PATH__Group_1_1_0_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Group_1_1_0_0_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_1_0_0_1__1"


    // $ANTLR start "rule__PATH__Group_1_1_0_0_1__1__Impl"
    // InternalDockerCompose.g:10666:1: rule__PATH__Group_1_1_0_0_1__1__Impl : ( RULE_ID ) ;
    public final void rule__PATH__Group_1_1_0_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10670:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:10671:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:10671:1: ( RULE_ID )
            // InternalDockerCompose.g:10672:2: RULE_ID
            {
             before(grammarAccess.getPATHAccess().getIDTerminalRuleCall_1_1_0_0_1_1()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getPATHAccess().getIDTerminalRuleCall_1_1_0_0_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_1_0_0_1__1__Impl"


    // $ANTLR start "rule__PATH__Group_1_2_0__0"
    // InternalDockerCompose.g:10682:1: rule__PATH__Group_1_2_0__0 : rule__PATH__Group_1_2_0__0__Impl rule__PATH__Group_1_2_0__1 ;
    public final void rule__PATH__Group_1_2_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10686:1: ( rule__PATH__Group_1_2_0__0__Impl rule__PATH__Group_1_2_0__1 )
            // InternalDockerCompose.g:10687:2: rule__PATH__Group_1_2_0__0__Impl rule__PATH__Group_1_2_0__1
            {
            pushFollow(FOLLOW_8);
            rule__PATH__Group_1_2_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group_1_2_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_2_0__0"


    // $ANTLR start "rule__PATH__Group_1_2_0__0__Impl"
    // InternalDockerCompose.g:10694:1: rule__PATH__Group_1_2_0__0__Impl : ( RULE_ID ) ;
    public final void rule__PATH__Group_1_2_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10698:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:10699:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:10699:1: ( RULE_ID )
            // InternalDockerCompose.g:10700:2: RULE_ID
            {
             before(grammarAccess.getPATHAccess().getIDTerminalRuleCall_1_2_0_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getPATHAccess().getIDTerminalRuleCall_1_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_2_0__0__Impl"


    // $ANTLR start "rule__PATH__Group_1_2_0__1"
    // InternalDockerCompose.g:10709:1: rule__PATH__Group_1_2_0__1 : rule__PATH__Group_1_2_0__1__Impl ;
    public final void rule__PATH__Group_1_2_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10713:1: ( rule__PATH__Group_1_2_0__1__Impl )
            // InternalDockerCompose.g:10714:2: rule__PATH__Group_1_2_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Group_1_2_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_2_0__1"


    // $ANTLR start "rule__PATH__Group_1_2_0__1__Impl"
    // InternalDockerCompose.g:10720:1: rule__PATH__Group_1_2_0__1__Impl : ( ( rule__PATH__Group_1_2_0_1__0 )* ) ;
    public final void rule__PATH__Group_1_2_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10724:1: ( ( ( rule__PATH__Group_1_2_0_1__0 )* ) )
            // InternalDockerCompose.g:10725:1: ( ( rule__PATH__Group_1_2_0_1__0 )* )
            {
            // InternalDockerCompose.g:10725:1: ( ( rule__PATH__Group_1_2_0_1__0 )* )
            // InternalDockerCompose.g:10726:2: ( rule__PATH__Group_1_2_0_1__0 )*
            {
             before(grammarAccess.getPATHAccess().getGroup_1_2_0_1()); 
            // InternalDockerCompose.g:10727:2: ( rule__PATH__Group_1_2_0_1__0 )*
            loop81:
            do {
                int alt81=2;
                int LA81_0 = input.LA(1);

                if ( (LA81_0==17) ) {
                    int LA81_2 = input.LA(2);

                    if ( (LA81_2==RULE_ID) ) {
                        alt81=1;
                    }


                }


                switch (alt81) {
            	case 1 :
            	    // InternalDockerCompose.g:10727:3: rule__PATH__Group_1_2_0_1__0
            	    {
            	    pushFollow(FOLLOW_54);
            	    rule__PATH__Group_1_2_0_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop81;
                }
            } while (true);

             after(grammarAccess.getPATHAccess().getGroup_1_2_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_2_0__1__Impl"


    // $ANTLR start "rule__PATH__Group_1_2_0_1__0"
    // InternalDockerCompose.g:10736:1: rule__PATH__Group_1_2_0_1__0 : rule__PATH__Group_1_2_0_1__0__Impl rule__PATH__Group_1_2_0_1__1 ;
    public final void rule__PATH__Group_1_2_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10740:1: ( rule__PATH__Group_1_2_0_1__0__Impl rule__PATH__Group_1_2_0_1__1 )
            // InternalDockerCompose.g:10741:2: rule__PATH__Group_1_2_0_1__0__Impl rule__PATH__Group_1_2_0_1__1
            {
            pushFollow(FOLLOW_7);
            rule__PATH__Group_1_2_0_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group_1_2_0_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_2_0_1__0"


    // $ANTLR start "rule__PATH__Group_1_2_0_1__0__Impl"
    // InternalDockerCompose.g:10748:1: rule__PATH__Group_1_2_0_1__0__Impl : ( '.' ) ;
    public final void rule__PATH__Group_1_2_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10752:1: ( ( '.' ) )
            // InternalDockerCompose.g:10753:1: ( '.' )
            {
            // InternalDockerCompose.g:10753:1: ( '.' )
            // InternalDockerCompose.g:10754:2: '.'
            {
             before(grammarAccess.getPATHAccess().getFullStopKeyword_1_2_0_1_0()); 
            match(input,17,FOLLOW_2); 
             after(grammarAccess.getPATHAccess().getFullStopKeyword_1_2_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_2_0_1__0__Impl"


    // $ANTLR start "rule__PATH__Group_1_2_0_1__1"
    // InternalDockerCompose.g:10763:1: rule__PATH__Group_1_2_0_1__1 : rule__PATH__Group_1_2_0_1__1__Impl ;
    public final void rule__PATH__Group_1_2_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10767:1: ( rule__PATH__Group_1_2_0_1__1__Impl )
            // InternalDockerCompose.g:10768:2: rule__PATH__Group_1_2_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Group_1_2_0_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_2_0_1__1"


    // $ANTLR start "rule__PATH__Group_1_2_0_1__1__Impl"
    // InternalDockerCompose.g:10774:1: rule__PATH__Group_1_2_0_1__1__Impl : ( RULE_ID ) ;
    public final void rule__PATH__Group_1_2_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10778:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:10779:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:10779:1: ( RULE_ID )
            // InternalDockerCompose.g:10780:2: RULE_ID
            {
             before(grammarAccess.getPATHAccess().getIDTerminalRuleCall_1_2_0_1_1()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getPATHAccess().getIDTerminalRuleCall_1_2_0_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group_1_2_0_1__1__Impl"


    // $ANTLR start "rule__EString__Group_2__0"
    // InternalDockerCompose.g:10790:1: rule__EString__Group_2__0 : rule__EString__Group_2__0__Impl rule__EString__Group_2__1 ;
    public final void rule__EString__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10794:1: ( rule__EString__Group_2__0__Impl rule__EString__Group_2__1 )
            // InternalDockerCompose.g:10795:2: rule__EString__Group_2__0__Impl rule__EString__Group_2__1
            {
            pushFollow(FOLLOW_57);
            rule__EString__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__EString__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EString__Group_2__0"


    // $ANTLR start "rule__EString__Group_2__0__Impl"
    // InternalDockerCompose.g:10802:1: rule__EString__Group_2__0__Impl : ( '\"' ) ;
    public final void rule__EString__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10806:1: ( ( '\"' ) )
            // InternalDockerCompose.g:10807:1: ( '\"' )
            {
            // InternalDockerCompose.g:10807:1: ( '\"' )
            // InternalDockerCompose.g:10808:2: '\"'
            {
             before(grammarAccess.getEStringAccess().getQuotationMarkKeyword_2_0()); 
            match(input,101,FOLLOW_2); 
             after(grammarAccess.getEStringAccess().getQuotationMarkKeyword_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EString__Group_2__0__Impl"


    // $ANTLR start "rule__EString__Group_2__1"
    // InternalDockerCompose.g:10817:1: rule__EString__Group_2__1 : rule__EString__Group_2__1__Impl ;
    public final void rule__EString__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10821:1: ( rule__EString__Group_2__1__Impl )
            // InternalDockerCompose.g:10822:2: rule__EString__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__EString__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EString__Group_2__1"


    // $ANTLR start "rule__EString__Group_2__1__Impl"
    // InternalDockerCompose.g:10828:1: rule__EString__Group_2__1__Impl : ( '\"' ) ;
    public final void rule__EString__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10832:1: ( ( '\"' ) )
            // InternalDockerCompose.g:10833:1: ( '\"' )
            {
            // InternalDockerCompose.g:10833:1: ( '\"' )
            // InternalDockerCompose.g:10834:2: '\"'
            {
             before(grammarAccess.getEStringAccess().getQuotationMarkKeyword_2_1()); 
            match(input,101,FOLLOW_2); 
             after(grammarAccess.getEStringAccess().getQuotationMarkKeyword_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EString__Group_2__1__Impl"


    // $ANTLR start "rule__LabelID__Group__0"
    // InternalDockerCompose.g:10844:1: rule__LabelID__Group__0 : rule__LabelID__Group__0__Impl rule__LabelID__Group__1 ;
    public final void rule__LabelID__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10848:1: ( rule__LabelID__Group__0__Impl rule__LabelID__Group__1 )
            // InternalDockerCompose.g:10849:2: rule__LabelID__Group__0__Impl rule__LabelID__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__LabelID__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LabelID__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LabelID__Group__0"


    // $ANTLR start "rule__LabelID__Group__0__Impl"
    // InternalDockerCompose.g:10856:1: rule__LabelID__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__LabelID__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10860:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:10861:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:10861:1: ( RULE_ID )
            // InternalDockerCompose.g:10862:2: RULE_ID
            {
             before(grammarAccess.getLabelIDAccess().getIDTerminalRuleCall_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getLabelIDAccess().getIDTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LabelID__Group__0__Impl"


    // $ANTLR start "rule__LabelID__Group__1"
    // InternalDockerCompose.g:10871:1: rule__LabelID__Group__1 : rule__LabelID__Group__1__Impl ;
    public final void rule__LabelID__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10875:1: ( rule__LabelID__Group__1__Impl )
            // InternalDockerCompose.g:10876:2: rule__LabelID__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LabelID__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LabelID__Group__1"


    // $ANTLR start "rule__LabelID__Group__1__Impl"
    // InternalDockerCompose.g:10882:1: rule__LabelID__Group__1__Impl : ( ( rule__LabelID__Group_1__0 )* ) ;
    public final void rule__LabelID__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10886:1: ( ( ( rule__LabelID__Group_1__0 )* ) )
            // InternalDockerCompose.g:10887:1: ( ( rule__LabelID__Group_1__0 )* )
            {
            // InternalDockerCompose.g:10887:1: ( ( rule__LabelID__Group_1__0 )* )
            // InternalDockerCompose.g:10888:2: ( rule__LabelID__Group_1__0 )*
            {
             before(grammarAccess.getLabelIDAccess().getGroup_1()); 
            // InternalDockerCompose.g:10889:2: ( rule__LabelID__Group_1__0 )*
            loop82:
            do {
                int alt82=2;
                int LA82_0 = input.LA(1);

                if ( (LA82_0==17) ) {
                    alt82=1;
                }


                switch (alt82) {
            	case 1 :
            	    // InternalDockerCompose.g:10889:3: rule__LabelID__Group_1__0
            	    {
            	    pushFollow(FOLLOW_54);
            	    rule__LabelID__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop82;
                }
            } while (true);

             after(grammarAccess.getLabelIDAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LabelID__Group__1__Impl"


    // $ANTLR start "rule__LabelID__Group_1__0"
    // InternalDockerCompose.g:10898:1: rule__LabelID__Group_1__0 : rule__LabelID__Group_1__0__Impl rule__LabelID__Group_1__1 ;
    public final void rule__LabelID__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10902:1: ( rule__LabelID__Group_1__0__Impl rule__LabelID__Group_1__1 )
            // InternalDockerCompose.g:10903:2: rule__LabelID__Group_1__0__Impl rule__LabelID__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__LabelID__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__LabelID__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LabelID__Group_1__0"


    // $ANTLR start "rule__LabelID__Group_1__0__Impl"
    // InternalDockerCompose.g:10910:1: rule__LabelID__Group_1__0__Impl : ( '.' ) ;
    public final void rule__LabelID__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10914:1: ( ( '.' ) )
            // InternalDockerCompose.g:10915:1: ( '.' )
            {
            // InternalDockerCompose.g:10915:1: ( '.' )
            // InternalDockerCompose.g:10916:2: '.'
            {
             before(grammarAccess.getLabelIDAccess().getFullStopKeyword_1_0()); 
            match(input,17,FOLLOW_2); 
             after(grammarAccess.getLabelIDAccess().getFullStopKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LabelID__Group_1__0__Impl"


    // $ANTLR start "rule__LabelID__Group_1__1"
    // InternalDockerCompose.g:10925:1: rule__LabelID__Group_1__1 : rule__LabelID__Group_1__1__Impl ;
    public final void rule__LabelID__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10929:1: ( rule__LabelID__Group_1__1__Impl )
            // InternalDockerCompose.g:10930:2: rule__LabelID__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LabelID__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LabelID__Group_1__1"


    // $ANTLR start "rule__LabelID__Group_1__1__Impl"
    // InternalDockerCompose.g:10936:1: rule__LabelID__Group_1__1__Impl : ( RULE_ID ) ;
    public final void rule__LabelID__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10940:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:10941:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:10941:1: ( RULE_ID )
            // InternalDockerCompose.g:10942:2: RULE_ID
            {
             before(grammarAccess.getLabelIDAccess().getIDTerminalRuleCall_1_1()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getLabelIDAccess().getIDTerminalRuleCall_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LabelID__Group_1__1__Impl"


    // $ANTLR start "rule__DotID__Group__0"
    // InternalDockerCompose.g:10952:1: rule__DotID__Group__0 : rule__DotID__Group__0__Impl rule__DotID__Group__1 ;
    public final void rule__DotID__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10956:1: ( rule__DotID__Group__0__Impl rule__DotID__Group__1 )
            // InternalDockerCompose.g:10957:2: rule__DotID__Group__0__Impl rule__DotID__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__DotID__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DotID__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DotID__Group__0"


    // $ANTLR start "rule__DotID__Group__0__Impl"
    // InternalDockerCompose.g:10964:1: rule__DotID__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__DotID__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10968:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:10969:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:10969:1: ( RULE_ID )
            // InternalDockerCompose.g:10970:2: RULE_ID
            {
             before(grammarAccess.getDotIDAccess().getIDTerminalRuleCall_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getDotIDAccess().getIDTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DotID__Group__0__Impl"


    // $ANTLR start "rule__DotID__Group__1"
    // InternalDockerCompose.g:10979:1: rule__DotID__Group__1 : rule__DotID__Group__1__Impl ;
    public final void rule__DotID__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10983:1: ( rule__DotID__Group__1__Impl )
            // InternalDockerCompose.g:10984:2: rule__DotID__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DotID__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DotID__Group__1"


    // $ANTLR start "rule__DotID__Group__1__Impl"
    // InternalDockerCompose.g:10990:1: rule__DotID__Group__1__Impl : ( ( rule__DotID__Group_1__0 )* ) ;
    public final void rule__DotID__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10994:1: ( ( ( rule__DotID__Group_1__0 )* ) )
            // InternalDockerCompose.g:10995:1: ( ( rule__DotID__Group_1__0 )* )
            {
            // InternalDockerCompose.g:10995:1: ( ( rule__DotID__Group_1__0 )* )
            // InternalDockerCompose.g:10996:2: ( rule__DotID__Group_1__0 )*
            {
             before(grammarAccess.getDotIDAccess().getGroup_1()); 
            // InternalDockerCompose.g:10997:2: ( rule__DotID__Group_1__0 )*
            loop83:
            do {
                int alt83=2;
                int LA83_0 = input.LA(1);

                if ( (LA83_0==17) ) {
                    alt83=1;
                }


                switch (alt83) {
            	case 1 :
            	    // InternalDockerCompose.g:10997:3: rule__DotID__Group_1__0
            	    {
            	    pushFollow(FOLLOW_54);
            	    rule__DotID__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop83;
                }
            } while (true);

             after(grammarAccess.getDotIDAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DotID__Group__1__Impl"


    // $ANTLR start "rule__DotID__Group_1__0"
    // InternalDockerCompose.g:11006:1: rule__DotID__Group_1__0 : rule__DotID__Group_1__0__Impl rule__DotID__Group_1__1 ;
    public final void rule__DotID__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11010:1: ( rule__DotID__Group_1__0__Impl rule__DotID__Group_1__1 )
            // InternalDockerCompose.g:11011:2: rule__DotID__Group_1__0__Impl rule__DotID__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__DotID__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DotID__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DotID__Group_1__0"


    // $ANTLR start "rule__DotID__Group_1__0__Impl"
    // InternalDockerCompose.g:11018:1: rule__DotID__Group_1__0__Impl : ( '.' ) ;
    public final void rule__DotID__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11022:1: ( ( '.' ) )
            // InternalDockerCompose.g:11023:1: ( '.' )
            {
            // InternalDockerCompose.g:11023:1: ( '.' )
            // InternalDockerCompose.g:11024:2: '.'
            {
             before(grammarAccess.getDotIDAccess().getFullStopKeyword_1_0()); 
            match(input,17,FOLLOW_2); 
             after(grammarAccess.getDotIDAccess().getFullStopKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DotID__Group_1__0__Impl"


    // $ANTLR start "rule__DotID__Group_1__1"
    // InternalDockerCompose.g:11033:1: rule__DotID__Group_1__1 : rule__DotID__Group_1__1__Impl ;
    public final void rule__DotID__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11037:1: ( rule__DotID__Group_1__1__Impl )
            // InternalDockerCompose.g:11038:2: rule__DotID__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DotID__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DotID__Group_1__1"


    // $ANTLR start "rule__DotID__Group_1__1__Impl"
    // InternalDockerCompose.g:11044:1: rule__DotID__Group_1__1__Impl : ( RULE_ID ) ;
    public final void rule__DotID__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11048:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:11049:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:11049:1: ( RULE_ID )
            // InternalDockerCompose.g:11050:2: RULE_ID
            {
             before(grammarAccess.getDotIDAccess().getIDTerminalRuleCall_1_1()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getDotIDAccess().getIDTerminalRuleCall_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DotID__Group_1__1__Impl"


    // $ANTLR start "rule__DNS__Group__0"
    // InternalDockerCompose.g:11060:1: rule__DNS__Group__0 : rule__DNS__Group__0__Impl rule__DNS__Group__1 ;
    public final void rule__DNS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11064:1: ( rule__DNS__Group__0__Impl rule__DNS__Group__1 )
            // InternalDockerCompose.g:11065:2: rule__DNS__Group__0__Impl rule__DNS__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__DNS__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DNS__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__0"


    // $ANTLR start "rule__DNS__Group__0__Impl"
    // InternalDockerCompose.g:11072:1: rule__DNS__Group__0__Impl : ( ( rule__DNS__Dns1Assignment_0 ) ) ;
    public final void rule__DNS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11076:1: ( ( ( rule__DNS__Dns1Assignment_0 ) ) )
            // InternalDockerCompose.g:11077:1: ( ( rule__DNS__Dns1Assignment_0 ) )
            {
            // InternalDockerCompose.g:11077:1: ( ( rule__DNS__Dns1Assignment_0 ) )
            // InternalDockerCompose.g:11078:2: ( rule__DNS__Dns1Assignment_0 )
            {
             before(grammarAccess.getDNSAccess().getDns1Assignment_0()); 
            // InternalDockerCompose.g:11079:2: ( rule__DNS__Dns1Assignment_0 )
            // InternalDockerCompose.g:11079:3: rule__DNS__Dns1Assignment_0
            {
            pushFollow(FOLLOW_2);
            rule__DNS__Dns1Assignment_0();

            state._fsp--;


            }

             after(grammarAccess.getDNSAccess().getDns1Assignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__0__Impl"


    // $ANTLR start "rule__DNS__Group__1"
    // InternalDockerCompose.g:11087:1: rule__DNS__Group__1 : rule__DNS__Group__1__Impl rule__DNS__Group__2 ;
    public final void rule__DNS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11091:1: ( rule__DNS__Group__1__Impl rule__DNS__Group__2 )
            // InternalDockerCompose.g:11092:2: rule__DNS__Group__1__Impl rule__DNS__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__DNS__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DNS__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__1"


    // $ANTLR start "rule__DNS__Group__1__Impl"
    // InternalDockerCompose.g:11099:1: rule__DNS__Group__1__Impl : ( '.' ) ;
    public final void rule__DNS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11103:1: ( ( '.' ) )
            // InternalDockerCompose.g:11104:1: ( '.' )
            {
            // InternalDockerCompose.g:11104:1: ( '.' )
            // InternalDockerCompose.g:11105:2: '.'
            {
             before(grammarAccess.getDNSAccess().getFullStopKeyword_1()); 
            match(input,17,FOLLOW_2); 
             after(grammarAccess.getDNSAccess().getFullStopKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__1__Impl"


    // $ANTLR start "rule__DNS__Group__2"
    // InternalDockerCompose.g:11114:1: rule__DNS__Group__2 : rule__DNS__Group__2__Impl rule__DNS__Group__3 ;
    public final void rule__DNS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11118:1: ( rule__DNS__Group__2__Impl rule__DNS__Group__3 )
            // InternalDockerCompose.g:11119:2: rule__DNS__Group__2__Impl rule__DNS__Group__3
            {
            pushFollow(FOLLOW_8);
            rule__DNS__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DNS__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__2"


    // $ANTLR start "rule__DNS__Group__2__Impl"
    // InternalDockerCompose.g:11126:1: rule__DNS__Group__2__Impl : ( ( rule__DNS__Dns2Assignment_2 ) ) ;
    public final void rule__DNS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11130:1: ( ( ( rule__DNS__Dns2Assignment_2 ) ) )
            // InternalDockerCompose.g:11131:1: ( ( rule__DNS__Dns2Assignment_2 ) )
            {
            // InternalDockerCompose.g:11131:1: ( ( rule__DNS__Dns2Assignment_2 ) )
            // InternalDockerCompose.g:11132:2: ( rule__DNS__Dns2Assignment_2 )
            {
             before(grammarAccess.getDNSAccess().getDns2Assignment_2()); 
            // InternalDockerCompose.g:11133:2: ( rule__DNS__Dns2Assignment_2 )
            // InternalDockerCompose.g:11133:3: rule__DNS__Dns2Assignment_2
            {
            pushFollow(FOLLOW_2);
            rule__DNS__Dns2Assignment_2();

            state._fsp--;


            }

             after(grammarAccess.getDNSAccess().getDns2Assignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__2__Impl"


    // $ANTLR start "rule__DNS__Group__3"
    // InternalDockerCompose.g:11141:1: rule__DNS__Group__3 : rule__DNS__Group__3__Impl rule__DNS__Group__4 ;
    public final void rule__DNS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11145:1: ( rule__DNS__Group__3__Impl rule__DNS__Group__4 )
            // InternalDockerCompose.g:11146:2: rule__DNS__Group__3__Impl rule__DNS__Group__4
            {
            pushFollow(FOLLOW_9);
            rule__DNS__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DNS__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__3"


    // $ANTLR start "rule__DNS__Group__3__Impl"
    // InternalDockerCompose.g:11153:1: rule__DNS__Group__3__Impl : ( '.' ) ;
    public final void rule__DNS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11157:1: ( ( '.' ) )
            // InternalDockerCompose.g:11158:1: ( '.' )
            {
            // InternalDockerCompose.g:11158:1: ( '.' )
            // InternalDockerCompose.g:11159:2: '.'
            {
             before(grammarAccess.getDNSAccess().getFullStopKeyword_3()); 
            match(input,17,FOLLOW_2); 
             after(grammarAccess.getDNSAccess().getFullStopKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__3__Impl"


    // $ANTLR start "rule__DNS__Group__4"
    // InternalDockerCompose.g:11168:1: rule__DNS__Group__4 : rule__DNS__Group__4__Impl rule__DNS__Group__5 ;
    public final void rule__DNS__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11172:1: ( rule__DNS__Group__4__Impl rule__DNS__Group__5 )
            // InternalDockerCompose.g:11173:2: rule__DNS__Group__4__Impl rule__DNS__Group__5
            {
            pushFollow(FOLLOW_8);
            rule__DNS__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DNS__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__4"


    // $ANTLR start "rule__DNS__Group__4__Impl"
    // InternalDockerCompose.g:11180:1: rule__DNS__Group__4__Impl : ( ( rule__DNS__Dns3Assignment_4 ) ) ;
    public final void rule__DNS__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11184:1: ( ( ( rule__DNS__Dns3Assignment_4 ) ) )
            // InternalDockerCompose.g:11185:1: ( ( rule__DNS__Dns3Assignment_4 ) )
            {
            // InternalDockerCompose.g:11185:1: ( ( rule__DNS__Dns3Assignment_4 ) )
            // InternalDockerCompose.g:11186:2: ( rule__DNS__Dns3Assignment_4 )
            {
             before(grammarAccess.getDNSAccess().getDns3Assignment_4()); 
            // InternalDockerCompose.g:11187:2: ( rule__DNS__Dns3Assignment_4 )
            // InternalDockerCompose.g:11187:3: rule__DNS__Dns3Assignment_4
            {
            pushFollow(FOLLOW_2);
            rule__DNS__Dns3Assignment_4();

            state._fsp--;


            }

             after(grammarAccess.getDNSAccess().getDns3Assignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__4__Impl"


    // $ANTLR start "rule__DNS__Group__5"
    // InternalDockerCompose.g:11195:1: rule__DNS__Group__5 : rule__DNS__Group__5__Impl rule__DNS__Group__6 ;
    public final void rule__DNS__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11199:1: ( rule__DNS__Group__5__Impl rule__DNS__Group__6 )
            // InternalDockerCompose.g:11200:2: rule__DNS__Group__5__Impl rule__DNS__Group__6
            {
            pushFollow(FOLLOW_9);
            rule__DNS__Group__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DNS__Group__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__5"


    // $ANTLR start "rule__DNS__Group__5__Impl"
    // InternalDockerCompose.g:11207:1: rule__DNS__Group__5__Impl : ( '.' ) ;
    public final void rule__DNS__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11211:1: ( ( '.' ) )
            // InternalDockerCompose.g:11212:1: ( '.' )
            {
            // InternalDockerCompose.g:11212:1: ( '.' )
            // InternalDockerCompose.g:11213:2: '.'
            {
             before(grammarAccess.getDNSAccess().getFullStopKeyword_5()); 
            match(input,17,FOLLOW_2); 
             after(grammarAccess.getDNSAccess().getFullStopKeyword_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__5__Impl"


    // $ANTLR start "rule__DNS__Group__6"
    // InternalDockerCompose.g:11222:1: rule__DNS__Group__6 : rule__DNS__Group__6__Impl ;
    public final void rule__DNS__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11226:1: ( rule__DNS__Group__6__Impl )
            // InternalDockerCompose.g:11227:2: rule__DNS__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DNS__Group__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__6"


    // $ANTLR start "rule__DNS__Group__6__Impl"
    // InternalDockerCompose.g:11233:1: rule__DNS__Group__6__Impl : ( ( rule__DNS__Dns4Assignment_6 ) ) ;
    public final void rule__DNS__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11237:1: ( ( ( rule__DNS__Dns4Assignment_6 ) ) )
            // InternalDockerCompose.g:11238:1: ( ( rule__DNS__Dns4Assignment_6 ) )
            {
            // InternalDockerCompose.g:11238:1: ( ( rule__DNS__Dns4Assignment_6 ) )
            // InternalDockerCompose.g:11239:2: ( rule__DNS__Dns4Assignment_6 )
            {
             before(grammarAccess.getDNSAccess().getDns4Assignment_6()); 
            // InternalDockerCompose.g:11240:2: ( rule__DNS__Dns4Assignment_6 )
            // InternalDockerCompose.g:11240:3: rule__DNS__Dns4Assignment_6
            {
            pushFollow(FOLLOW_2);
            rule__DNS__Dns4Assignment_6();

            state._fsp--;


            }

             after(grammarAccess.getDNSAccess().getDns4Assignment_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__6__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__0"
    // InternalDockerCompose.g:11249:1: rule__NetworkAddress__Group__0 : rule__NetworkAddress__Group__0__Impl rule__NetworkAddress__Group__1 ;
    public final void rule__NetworkAddress__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11253:1: ( rule__NetworkAddress__Group__0__Impl rule__NetworkAddress__Group__1 )
            // InternalDockerCompose.g:11254:2: rule__NetworkAddress__Group__0__Impl rule__NetworkAddress__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__NetworkAddress__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__0"


    // $ANTLR start "rule__NetworkAddress__Group__0__Impl"
    // InternalDockerCompose.g:11261:1: rule__NetworkAddress__Group__0__Impl : ( ( rule__NetworkAddress__Dns1Assignment_0 ) ) ;
    public final void rule__NetworkAddress__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11265:1: ( ( ( rule__NetworkAddress__Dns1Assignment_0 ) ) )
            // InternalDockerCompose.g:11266:1: ( ( rule__NetworkAddress__Dns1Assignment_0 ) )
            {
            // InternalDockerCompose.g:11266:1: ( ( rule__NetworkAddress__Dns1Assignment_0 ) )
            // InternalDockerCompose.g:11267:2: ( rule__NetworkAddress__Dns1Assignment_0 )
            {
             before(grammarAccess.getNetworkAddressAccess().getDns1Assignment_0()); 
            // InternalDockerCompose.g:11268:2: ( rule__NetworkAddress__Dns1Assignment_0 )
            // InternalDockerCompose.g:11268:3: rule__NetworkAddress__Dns1Assignment_0
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Dns1Assignment_0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAddressAccess().getDns1Assignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__0__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__1"
    // InternalDockerCompose.g:11276:1: rule__NetworkAddress__Group__1 : rule__NetworkAddress__Group__1__Impl rule__NetworkAddress__Group__2 ;
    public final void rule__NetworkAddress__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11280:1: ( rule__NetworkAddress__Group__1__Impl rule__NetworkAddress__Group__2 )
            // InternalDockerCompose.g:11281:2: rule__NetworkAddress__Group__1__Impl rule__NetworkAddress__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__NetworkAddress__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__1"


    // $ANTLR start "rule__NetworkAddress__Group__1__Impl"
    // InternalDockerCompose.g:11288:1: rule__NetworkAddress__Group__1__Impl : ( '.' ) ;
    public final void rule__NetworkAddress__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11292:1: ( ( '.' ) )
            // InternalDockerCompose.g:11293:1: ( '.' )
            {
            // InternalDockerCompose.g:11293:1: ( '.' )
            // InternalDockerCompose.g:11294:2: '.'
            {
             before(grammarAccess.getNetworkAddressAccess().getFullStopKeyword_1()); 
            match(input,17,FOLLOW_2); 
             after(grammarAccess.getNetworkAddressAccess().getFullStopKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__1__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__2"
    // InternalDockerCompose.g:11303:1: rule__NetworkAddress__Group__2 : rule__NetworkAddress__Group__2__Impl rule__NetworkAddress__Group__3 ;
    public final void rule__NetworkAddress__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11307:1: ( rule__NetworkAddress__Group__2__Impl rule__NetworkAddress__Group__3 )
            // InternalDockerCompose.g:11308:2: rule__NetworkAddress__Group__2__Impl rule__NetworkAddress__Group__3
            {
            pushFollow(FOLLOW_8);
            rule__NetworkAddress__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__2"


    // $ANTLR start "rule__NetworkAddress__Group__2__Impl"
    // InternalDockerCompose.g:11315:1: rule__NetworkAddress__Group__2__Impl : ( ( rule__NetworkAddress__Dns2Assignment_2 ) ) ;
    public final void rule__NetworkAddress__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11319:1: ( ( ( rule__NetworkAddress__Dns2Assignment_2 ) ) )
            // InternalDockerCompose.g:11320:1: ( ( rule__NetworkAddress__Dns2Assignment_2 ) )
            {
            // InternalDockerCompose.g:11320:1: ( ( rule__NetworkAddress__Dns2Assignment_2 ) )
            // InternalDockerCompose.g:11321:2: ( rule__NetworkAddress__Dns2Assignment_2 )
            {
             before(grammarAccess.getNetworkAddressAccess().getDns2Assignment_2()); 
            // InternalDockerCompose.g:11322:2: ( rule__NetworkAddress__Dns2Assignment_2 )
            // InternalDockerCompose.g:11322:3: rule__NetworkAddress__Dns2Assignment_2
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Dns2Assignment_2();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAddressAccess().getDns2Assignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__2__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__3"
    // InternalDockerCompose.g:11330:1: rule__NetworkAddress__Group__3 : rule__NetworkAddress__Group__3__Impl rule__NetworkAddress__Group__4 ;
    public final void rule__NetworkAddress__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11334:1: ( rule__NetworkAddress__Group__3__Impl rule__NetworkAddress__Group__4 )
            // InternalDockerCompose.g:11335:2: rule__NetworkAddress__Group__3__Impl rule__NetworkAddress__Group__4
            {
            pushFollow(FOLLOW_9);
            rule__NetworkAddress__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__3"


    // $ANTLR start "rule__NetworkAddress__Group__3__Impl"
    // InternalDockerCompose.g:11342:1: rule__NetworkAddress__Group__3__Impl : ( '.' ) ;
    public final void rule__NetworkAddress__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11346:1: ( ( '.' ) )
            // InternalDockerCompose.g:11347:1: ( '.' )
            {
            // InternalDockerCompose.g:11347:1: ( '.' )
            // InternalDockerCompose.g:11348:2: '.'
            {
             before(grammarAccess.getNetworkAddressAccess().getFullStopKeyword_3()); 
            match(input,17,FOLLOW_2); 
             after(grammarAccess.getNetworkAddressAccess().getFullStopKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__3__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__4"
    // InternalDockerCompose.g:11357:1: rule__NetworkAddress__Group__4 : rule__NetworkAddress__Group__4__Impl rule__NetworkAddress__Group__5 ;
    public final void rule__NetworkAddress__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11361:1: ( rule__NetworkAddress__Group__4__Impl rule__NetworkAddress__Group__5 )
            // InternalDockerCompose.g:11362:2: rule__NetworkAddress__Group__4__Impl rule__NetworkAddress__Group__5
            {
            pushFollow(FOLLOW_8);
            rule__NetworkAddress__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__4"


    // $ANTLR start "rule__NetworkAddress__Group__4__Impl"
    // InternalDockerCompose.g:11369:1: rule__NetworkAddress__Group__4__Impl : ( ( rule__NetworkAddress__Dns3Assignment_4 ) ) ;
    public final void rule__NetworkAddress__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11373:1: ( ( ( rule__NetworkAddress__Dns3Assignment_4 ) ) )
            // InternalDockerCompose.g:11374:1: ( ( rule__NetworkAddress__Dns3Assignment_4 ) )
            {
            // InternalDockerCompose.g:11374:1: ( ( rule__NetworkAddress__Dns3Assignment_4 ) )
            // InternalDockerCompose.g:11375:2: ( rule__NetworkAddress__Dns3Assignment_4 )
            {
             before(grammarAccess.getNetworkAddressAccess().getDns3Assignment_4()); 
            // InternalDockerCompose.g:11376:2: ( rule__NetworkAddress__Dns3Assignment_4 )
            // InternalDockerCompose.g:11376:3: rule__NetworkAddress__Dns3Assignment_4
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Dns3Assignment_4();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAddressAccess().getDns3Assignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__4__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__5"
    // InternalDockerCompose.g:11384:1: rule__NetworkAddress__Group__5 : rule__NetworkAddress__Group__5__Impl rule__NetworkAddress__Group__6 ;
    public final void rule__NetworkAddress__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11388:1: ( rule__NetworkAddress__Group__5__Impl rule__NetworkAddress__Group__6 )
            // InternalDockerCompose.g:11389:2: rule__NetworkAddress__Group__5__Impl rule__NetworkAddress__Group__6
            {
            pushFollow(FOLLOW_9);
            rule__NetworkAddress__Group__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__5"


    // $ANTLR start "rule__NetworkAddress__Group__5__Impl"
    // InternalDockerCompose.g:11396:1: rule__NetworkAddress__Group__5__Impl : ( '.' ) ;
    public final void rule__NetworkAddress__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11400:1: ( ( '.' ) )
            // InternalDockerCompose.g:11401:1: ( '.' )
            {
            // InternalDockerCompose.g:11401:1: ( '.' )
            // InternalDockerCompose.g:11402:2: '.'
            {
             before(grammarAccess.getNetworkAddressAccess().getFullStopKeyword_5()); 
            match(input,17,FOLLOW_2); 
             after(grammarAccess.getNetworkAddressAccess().getFullStopKeyword_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__5__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__6"
    // InternalDockerCompose.g:11411:1: rule__NetworkAddress__Group__6 : rule__NetworkAddress__Group__6__Impl rule__NetworkAddress__Group__7 ;
    public final void rule__NetworkAddress__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11415:1: ( rule__NetworkAddress__Group__6__Impl rule__NetworkAddress__Group__7 )
            // InternalDockerCompose.g:11416:2: rule__NetworkAddress__Group__6__Impl rule__NetworkAddress__Group__7
            {
            pushFollow(FOLLOW_52);
            rule__NetworkAddress__Group__6__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__7();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__6"


    // $ANTLR start "rule__NetworkAddress__Group__6__Impl"
    // InternalDockerCompose.g:11423:1: rule__NetworkAddress__Group__6__Impl : ( ( rule__NetworkAddress__Dns4Assignment_6 ) ) ;
    public final void rule__NetworkAddress__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11427:1: ( ( ( rule__NetworkAddress__Dns4Assignment_6 ) ) )
            // InternalDockerCompose.g:11428:1: ( ( rule__NetworkAddress__Dns4Assignment_6 ) )
            {
            // InternalDockerCompose.g:11428:1: ( ( rule__NetworkAddress__Dns4Assignment_6 ) )
            // InternalDockerCompose.g:11429:2: ( rule__NetworkAddress__Dns4Assignment_6 )
            {
             before(grammarAccess.getNetworkAddressAccess().getDns4Assignment_6()); 
            // InternalDockerCompose.g:11430:2: ( rule__NetworkAddress__Dns4Assignment_6 )
            // InternalDockerCompose.g:11430:3: rule__NetworkAddress__Dns4Assignment_6
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Dns4Assignment_6();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAddressAccess().getDns4Assignment_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__6__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__7"
    // InternalDockerCompose.g:11438:1: rule__NetworkAddress__Group__7 : rule__NetworkAddress__Group__7__Impl rule__NetworkAddress__Group__8 ;
    public final void rule__NetworkAddress__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11442:1: ( rule__NetworkAddress__Group__7__Impl rule__NetworkAddress__Group__8 )
            // InternalDockerCompose.g:11443:2: rule__NetworkAddress__Group__7__Impl rule__NetworkAddress__Group__8
            {
            pushFollow(FOLLOW_9);
            rule__NetworkAddress__Group__7__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__8();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__7"


    // $ANTLR start "rule__NetworkAddress__Group__7__Impl"
    // InternalDockerCompose.g:11450:1: rule__NetworkAddress__Group__7__Impl : ( '/' ) ;
    public final void rule__NetworkAddress__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11454:1: ( ( '/' ) )
            // InternalDockerCompose.g:11455:1: ( '/' )
            {
            // InternalDockerCompose.g:11455:1: ( '/' )
            // InternalDockerCompose.g:11456:2: '/'
            {
             before(grammarAccess.getNetworkAddressAccess().getSolidusKeyword_7()); 
            match(input,64,FOLLOW_2); 
             after(grammarAccess.getNetworkAddressAccess().getSolidusKeyword_7()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__7__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__8"
    // InternalDockerCompose.g:11465:1: rule__NetworkAddress__Group__8 : rule__NetworkAddress__Group__8__Impl ;
    public final void rule__NetworkAddress__Group__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11469:1: ( rule__NetworkAddress__Group__8__Impl )
            // InternalDockerCompose.g:11470:2: rule__NetworkAddress__Group__8__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__8__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__8"


    // $ANTLR start "rule__NetworkAddress__Group__8__Impl"
    // InternalDockerCompose.g:11476:1: rule__NetworkAddress__Group__8__Impl : ( ( rule__NetworkAddress__NetIdAssignment_8 ) ) ;
    public final void rule__NetworkAddress__Group__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11480:1: ( ( ( rule__NetworkAddress__NetIdAssignment_8 ) ) )
            // InternalDockerCompose.g:11481:1: ( ( rule__NetworkAddress__NetIdAssignment_8 ) )
            {
            // InternalDockerCompose.g:11481:1: ( ( rule__NetworkAddress__NetIdAssignment_8 ) )
            // InternalDockerCompose.g:11482:2: ( rule__NetworkAddress__NetIdAssignment_8 )
            {
             before(grammarAccess.getNetworkAddressAccess().getNetIdAssignment_8()); 
            // InternalDockerCompose.g:11483:2: ( rule__NetworkAddress__NetIdAssignment_8 )
            // InternalDockerCompose.g:11483:3: rule__NetworkAddress__NetIdAssignment_8
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__NetIdAssignment_8();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAddressAccess().getNetIdAssignment_8()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__8__Impl"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup"
    // InternalDockerCompose.g:11492:1: rule__DockerCompose__UnorderedGroup : rule__DockerCompose__UnorderedGroup__0 {...}?;
    public final void rule__DockerCompose__UnorderedGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getDockerComposeAccess().getUnorderedGroup());
        	
        try {
            // InternalDockerCompose.g:11497:1: ( rule__DockerCompose__UnorderedGroup__0 {...}?)
            // InternalDockerCompose.g:11498:2: rule__DockerCompose__UnorderedGroup__0 {...}?
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__UnorderedGroup__0();

            state._fsp--;

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getDockerComposeAccess().getUnorderedGroup()) ) {
                throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup", "getUnorderedGroupHelper().canLeave(grammarAccess.getDockerComposeAccess().getUnorderedGroup())");
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getDockerComposeAccess().getUnorderedGroup());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__Impl"
    // InternalDockerCompose.g:11506:1: rule__DockerCompose__UnorderedGroup__Impl : ( ({...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) ) ) ) ;
    public final void rule__DockerCompose__UnorderedGroup__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:11511:1: ( ( ({...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) ) ) ) )
            // InternalDockerCompose.g:11512:3: ( ({...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:11512:3: ( ({...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) ) ) )
            int alt84=6;
            int LA84_0 = input.LA(1);

            if ( LA84_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                alt84=1;
            }
            else if ( LA84_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                alt84=2;
            }
            else if ( LA84_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                alt84=3;
            }
            else if ( LA84_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                alt84=4;
            }
            else if ( LA84_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                alt84=5;
            }
            else if ( LA84_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                alt84=6;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 84, 0, input);

                throw nvae;
            }
            switch (alt84) {
                case 1 :
                    // InternalDockerCompose.g:11513:3: ({...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11513:3: ({...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) ) )
                    // InternalDockerCompose.g:11514:4: {...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                        throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0)");
                    }
                    // InternalDockerCompose.g:11514:107: ( ( ( rule__DockerCompose__Group_0__0 ) ) )
                    // InternalDockerCompose.g:11515:5: ( ( rule__DockerCompose__Group_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11521:5: ( ( rule__DockerCompose__Group_0__0 ) )
                    // InternalDockerCompose.g:11522:6: ( rule__DockerCompose__Group_0__0 )
                    {
                     before(grammarAccess.getDockerComposeAccess().getGroup_0()); 
                    // InternalDockerCompose.g:11523:6: ( rule__DockerCompose__Group_0__0 )
                    // InternalDockerCompose.g:11523:7: rule__DockerCompose__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDockerComposeAccess().getGroup_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:11528:3: ({...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11528:3: ({...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) ) )
                    // InternalDockerCompose.g:11529:4: {...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                        throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1)");
                    }
                    // InternalDockerCompose.g:11529:107: ( ( ( rule__DockerCompose__Group_1__0 ) ) )
                    // InternalDockerCompose.g:11530:5: ( ( rule__DockerCompose__Group_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11536:5: ( ( rule__DockerCompose__Group_1__0 ) )
                    // InternalDockerCompose.g:11537:6: ( rule__DockerCompose__Group_1__0 )
                    {
                     before(grammarAccess.getDockerComposeAccess().getGroup_1()); 
                    // InternalDockerCompose.g:11538:6: ( rule__DockerCompose__Group_1__0 )
                    // InternalDockerCompose.g:11538:7: rule__DockerCompose__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDockerComposeAccess().getGroup_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:11543:3: ({...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11543:3: ({...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) ) )
                    // InternalDockerCompose.g:11544:4: {...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                        throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2)");
                    }
                    // InternalDockerCompose.g:11544:107: ( ( ( rule__DockerCompose__Group_2__0 ) ) )
                    // InternalDockerCompose.g:11545:5: ( ( rule__DockerCompose__Group_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11551:5: ( ( rule__DockerCompose__Group_2__0 ) )
                    // InternalDockerCompose.g:11552:6: ( rule__DockerCompose__Group_2__0 )
                    {
                     before(grammarAccess.getDockerComposeAccess().getGroup_2()); 
                    // InternalDockerCompose.g:11553:6: ( rule__DockerCompose__Group_2__0 )
                    // InternalDockerCompose.g:11553:7: rule__DockerCompose__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDockerComposeAccess().getGroup_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:11558:3: ({...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11558:3: ({...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) ) )
                    // InternalDockerCompose.g:11559:4: {...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                        throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3)");
                    }
                    // InternalDockerCompose.g:11559:107: ( ( ( rule__DockerCompose__Group_3__0 ) ) )
                    // InternalDockerCompose.g:11560:5: ( ( rule__DockerCompose__Group_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11566:5: ( ( rule__DockerCompose__Group_3__0 ) )
                    // InternalDockerCompose.g:11567:6: ( rule__DockerCompose__Group_3__0 )
                    {
                     before(grammarAccess.getDockerComposeAccess().getGroup_3()); 
                    // InternalDockerCompose.g:11568:6: ( rule__DockerCompose__Group_3__0 )
                    // InternalDockerCompose.g:11568:7: rule__DockerCompose__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__Group_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDockerComposeAccess().getGroup_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:11573:3: ({...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11573:3: ({...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) ) )
                    // InternalDockerCompose.g:11574:4: {...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                        throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4)");
                    }
                    // InternalDockerCompose.g:11574:107: ( ( ( rule__DockerCompose__Group_4__0 ) ) )
                    // InternalDockerCompose.g:11575:5: ( ( rule__DockerCompose__Group_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11581:5: ( ( rule__DockerCompose__Group_4__0 ) )
                    // InternalDockerCompose.g:11582:6: ( rule__DockerCompose__Group_4__0 )
                    {
                     before(grammarAccess.getDockerComposeAccess().getGroup_4()); 
                    // InternalDockerCompose.g:11583:6: ( rule__DockerCompose__Group_4__0 )
                    // InternalDockerCompose.g:11583:7: rule__DockerCompose__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__Group_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDockerComposeAccess().getGroup_4()); 

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDockerCompose.g:11588:3: ({...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11588:3: ({...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) ) )
                    // InternalDockerCompose.g:11589:4: {...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                        throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5)");
                    }
                    // InternalDockerCompose.g:11589:107: ( ( ( rule__DockerCompose__Group_5__0 ) ) )
                    // InternalDockerCompose.g:11590:5: ( ( rule__DockerCompose__Group_5__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11596:5: ( ( rule__DockerCompose__Group_5__0 ) )
                    // InternalDockerCompose.g:11597:6: ( rule__DockerCompose__Group_5__0 )
                    {
                     before(grammarAccess.getDockerComposeAccess().getGroup_5()); 
                    // InternalDockerCompose.g:11598:6: ( rule__DockerCompose__Group_5__0 )
                    // InternalDockerCompose.g:11598:7: rule__DockerCompose__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__Group_5__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDockerComposeAccess().getGroup_5()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDockerComposeAccess().getUnorderedGroup());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__Impl"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__0"
    // InternalDockerCompose.g:11611:1: rule__DockerCompose__UnorderedGroup__0 : rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__1 )? ;
    public final void rule__DockerCompose__UnorderedGroup__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11615:1: ( rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__1 )? )
            // InternalDockerCompose.g:11616:2: rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__1 )?
            {
            pushFollow(FOLLOW_58);
            rule__DockerCompose__UnorderedGroup__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11617:2: ( rule__DockerCompose__UnorderedGroup__1 )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( LA85_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                alt85=1;
            }
            else if ( LA85_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                alt85=1;
            }
            else if ( LA85_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                alt85=1;
            }
            else if ( LA85_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                alt85=1;
            }
            else if ( LA85_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                alt85=1;
            }
            else if ( LA85_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalDockerCompose.g:11617:2: rule__DockerCompose__UnorderedGroup__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__UnorderedGroup__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__0"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__1"
    // InternalDockerCompose.g:11623:1: rule__DockerCompose__UnorderedGroup__1 : rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__2 )? ;
    public final void rule__DockerCompose__UnorderedGroup__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11627:1: ( rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__2 )? )
            // InternalDockerCompose.g:11628:2: rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__2 )?
            {
            pushFollow(FOLLOW_58);
            rule__DockerCompose__UnorderedGroup__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11629:2: ( rule__DockerCompose__UnorderedGroup__2 )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( LA86_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                alt86=1;
            }
            else if ( LA86_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                alt86=1;
            }
            else if ( LA86_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                alt86=1;
            }
            else if ( LA86_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                alt86=1;
            }
            else if ( LA86_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                alt86=1;
            }
            else if ( LA86_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // InternalDockerCompose.g:11629:2: rule__DockerCompose__UnorderedGroup__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__UnorderedGroup__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__1"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__2"
    // InternalDockerCompose.g:11635:1: rule__DockerCompose__UnorderedGroup__2 : rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__3 )? ;
    public final void rule__DockerCompose__UnorderedGroup__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11639:1: ( rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__3 )? )
            // InternalDockerCompose.g:11640:2: rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__3 )?
            {
            pushFollow(FOLLOW_58);
            rule__DockerCompose__UnorderedGroup__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11641:2: ( rule__DockerCompose__UnorderedGroup__3 )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( LA87_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                alt87=1;
            }
            else if ( LA87_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                alt87=1;
            }
            else if ( LA87_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                alt87=1;
            }
            else if ( LA87_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                alt87=1;
            }
            else if ( LA87_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                alt87=1;
            }
            else if ( LA87_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalDockerCompose.g:11641:2: rule__DockerCompose__UnorderedGroup__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__UnorderedGroup__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__2"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__3"
    // InternalDockerCompose.g:11647:1: rule__DockerCompose__UnorderedGroup__3 : rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__4 )? ;
    public final void rule__DockerCompose__UnorderedGroup__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11651:1: ( rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__4 )? )
            // InternalDockerCompose.g:11652:2: rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__4 )?
            {
            pushFollow(FOLLOW_58);
            rule__DockerCompose__UnorderedGroup__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11653:2: ( rule__DockerCompose__UnorderedGroup__4 )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( LA88_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                alt88=1;
            }
            else if ( LA88_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                alt88=1;
            }
            else if ( LA88_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                alt88=1;
            }
            else if ( LA88_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                alt88=1;
            }
            else if ( LA88_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                alt88=1;
            }
            else if ( LA88_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // InternalDockerCompose.g:11653:2: rule__DockerCompose__UnorderedGroup__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__UnorderedGroup__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__3"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__4"
    // InternalDockerCompose.g:11659:1: rule__DockerCompose__UnorderedGroup__4 : rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__5 )? ;
    public final void rule__DockerCompose__UnorderedGroup__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11663:1: ( rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__5 )? )
            // InternalDockerCompose.g:11664:2: rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__5 )?
            {
            pushFollow(FOLLOW_58);
            rule__DockerCompose__UnorderedGroup__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11665:2: ( rule__DockerCompose__UnorderedGroup__5 )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( LA89_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                alt89=1;
            }
            else if ( LA89_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                alt89=1;
            }
            else if ( LA89_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                alt89=1;
            }
            else if ( LA89_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                alt89=1;
            }
            else if ( LA89_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                alt89=1;
            }
            else if ( LA89_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalDockerCompose.g:11665:2: rule__DockerCompose__UnorderedGroup__5
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__UnorderedGroup__5();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__4"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__5"
    // InternalDockerCompose.g:11671:1: rule__DockerCompose__UnorderedGroup__5 : rule__DockerCompose__UnorderedGroup__Impl ;
    public final void rule__DockerCompose__UnorderedGroup__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11675:1: ( rule__DockerCompose__UnorderedGroup__Impl )
            // InternalDockerCompose.g:11676:2: rule__DockerCompose__UnorderedGroup__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__UnorderedGroup__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__5"


    // $ANTLR start "rule__Service__UnorderedGroup_3"
    // InternalDockerCompose.g:11683:1: rule__Service__UnorderedGroup_3 : ( rule__Service__UnorderedGroup_3__0 )? ;
    public final void rule__Service__UnorderedGroup_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getServiceAccess().getUnorderedGroup_3());
        	
        try {
            // InternalDockerCompose.g:11688:1: ( ( rule__Service__UnorderedGroup_3__0 )? )
            // InternalDockerCompose.g:11689:2: ( rule__Service__UnorderedGroup_3__0 )?
            {
            // InternalDockerCompose.g:11689:2: ( rule__Service__UnorderedGroup_3__0 )?
            int alt90=2;
            alt90 = dfa90.predict(input);
            switch (alt90) {
                case 1 :
                    // InternalDockerCompose.g:11689:2: rule__Service__UnorderedGroup_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getServiceAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3"


    // $ANTLR start "rule__Service__UnorderedGroup_3__Impl"
    // InternalDockerCompose.g:11697:1: rule__Service__UnorderedGroup_3__Impl : ( ({...}? => ( ( ( rule__Service__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_15__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_16__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_17__0 ) ) ) ) ) ;
    public final void rule__Service__UnorderedGroup_3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:11702:1: ( ( ({...}? => ( ( ( rule__Service__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_15__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_16__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_17__0 ) ) ) ) ) )
            // InternalDockerCompose.g:11703:3: ( ({...}? => ( ( ( rule__Service__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_15__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_16__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_17__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:11703:3: ( ({...}? => ( ( ( rule__Service__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_15__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_16__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_17__0 ) ) ) ) )
            int alt91=18;
            alt91 = dfa91.predict(input);
            switch (alt91) {
                case 1 :
                    // InternalDockerCompose.g:11704:3: ({...}? => ( ( ( rule__Service__Group_3_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11704:3: ({...}? => ( ( ( rule__Service__Group_3_0__0 ) ) ) )
                    // InternalDockerCompose.g:11705:4: {...}? => ( ( ( rule__Service__Group_3_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0)");
                    }
                    // InternalDockerCompose.g:11705:103: ( ( ( rule__Service__Group_3_0__0 ) ) )
                    // InternalDockerCompose.g:11706:5: ( ( rule__Service__Group_3_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11712:5: ( ( rule__Service__Group_3_0__0 ) )
                    // InternalDockerCompose.g:11713:6: ( rule__Service__Group_3_0__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_0()); 
                    // InternalDockerCompose.g:11714:6: ( rule__Service__Group_3_0__0 )
                    // InternalDockerCompose.g:11714:7: rule__Service__Group_3_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:11719:3: ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11719:3: ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) )
                    // InternalDockerCompose.g:11720:4: {...}? => ( ( ( rule__Service__Group_3_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1)");
                    }
                    // InternalDockerCompose.g:11720:103: ( ( ( rule__Service__Group_3_1__0 ) ) )
                    // InternalDockerCompose.g:11721:5: ( ( rule__Service__Group_3_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11727:5: ( ( rule__Service__Group_3_1__0 ) )
                    // InternalDockerCompose.g:11728:6: ( rule__Service__Group_3_1__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_1()); 
                    // InternalDockerCompose.g:11729:6: ( rule__Service__Group_3_1__0 )
                    // InternalDockerCompose.g:11729:7: rule__Service__Group_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:11734:3: ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11734:3: ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) )
                    // InternalDockerCompose.g:11735:4: {...}? => ( ( ( rule__Service__Group_3_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2)");
                    }
                    // InternalDockerCompose.g:11735:103: ( ( ( rule__Service__Group_3_2__0 ) ) )
                    // InternalDockerCompose.g:11736:5: ( ( rule__Service__Group_3_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11742:5: ( ( rule__Service__Group_3_2__0 ) )
                    // InternalDockerCompose.g:11743:6: ( rule__Service__Group_3_2__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_2()); 
                    // InternalDockerCompose.g:11744:6: ( rule__Service__Group_3_2__0 )
                    // InternalDockerCompose.g:11744:7: rule__Service__Group_3_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:11749:3: ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11749:3: ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) )
                    // InternalDockerCompose.g:11750:4: {...}? => ( ( ( rule__Service__Group_3_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3)");
                    }
                    // InternalDockerCompose.g:11750:103: ( ( ( rule__Service__Group_3_3__0 ) ) )
                    // InternalDockerCompose.g:11751:5: ( ( rule__Service__Group_3_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11757:5: ( ( rule__Service__Group_3_3__0 ) )
                    // InternalDockerCompose.g:11758:6: ( rule__Service__Group_3_3__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_3()); 
                    // InternalDockerCompose.g:11759:6: ( rule__Service__Group_3_3__0 )
                    // InternalDockerCompose.g:11759:7: rule__Service__Group_3_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:11764:3: ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11764:3: ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) )
                    // InternalDockerCompose.g:11765:4: {...}? => ( ( ( rule__Service__Group_3_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4)");
                    }
                    // InternalDockerCompose.g:11765:103: ( ( ( rule__Service__Group_3_4__0 ) ) )
                    // InternalDockerCompose.g:11766:5: ( ( rule__Service__Group_3_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11772:5: ( ( rule__Service__Group_3_4__0 ) )
                    // InternalDockerCompose.g:11773:6: ( rule__Service__Group_3_4__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_4()); 
                    // InternalDockerCompose.g:11774:6: ( rule__Service__Group_3_4__0 )
                    // InternalDockerCompose.g:11774:7: rule__Service__Group_3_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_4()); 

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDockerCompose.g:11779:3: ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11779:3: ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) )
                    // InternalDockerCompose.g:11780:4: {...}? => ( ( ( rule__Service__Group_3_5__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5)");
                    }
                    // InternalDockerCompose.g:11780:103: ( ( ( rule__Service__Group_3_5__0 ) ) )
                    // InternalDockerCompose.g:11781:5: ( ( rule__Service__Group_3_5__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11787:5: ( ( rule__Service__Group_3_5__0 ) )
                    // InternalDockerCompose.g:11788:6: ( rule__Service__Group_3_5__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_5()); 
                    // InternalDockerCompose.g:11789:6: ( rule__Service__Group_3_5__0 )
                    // InternalDockerCompose.g:11789:7: rule__Service__Group_3_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_5__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_5()); 

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalDockerCompose.g:11794:3: ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11794:3: ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) )
                    // InternalDockerCompose.g:11795:4: {...}? => ( ( ( rule__Service__Group_3_6__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6)");
                    }
                    // InternalDockerCompose.g:11795:103: ( ( ( rule__Service__Group_3_6__0 ) ) )
                    // InternalDockerCompose.g:11796:5: ( ( rule__Service__Group_3_6__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11802:5: ( ( rule__Service__Group_3_6__0 ) )
                    // InternalDockerCompose.g:11803:6: ( rule__Service__Group_3_6__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_6()); 
                    // InternalDockerCompose.g:11804:6: ( rule__Service__Group_3_6__0 )
                    // InternalDockerCompose.g:11804:7: rule__Service__Group_3_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_6__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_6()); 

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalDockerCompose.g:11809:3: ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11809:3: ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) )
                    // InternalDockerCompose.g:11810:4: {...}? => ( ( ( rule__Service__Group_3_7__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7)");
                    }
                    // InternalDockerCompose.g:11810:103: ( ( ( rule__Service__Group_3_7__0 ) ) )
                    // InternalDockerCompose.g:11811:5: ( ( rule__Service__Group_3_7__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11817:5: ( ( rule__Service__Group_3_7__0 ) )
                    // InternalDockerCompose.g:11818:6: ( rule__Service__Group_3_7__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_7()); 
                    // InternalDockerCompose.g:11819:6: ( rule__Service__Group_3_7__0 )
                    // InternalDockerCompose.g:11819:7: rule__Service__Group_3_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_7__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_7()); 

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalDockerCompose.g:11824:3: ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11824:3: ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) )
                    // InternalDockerCompose.g:11825:4: {...}? => ( ( ( rule__Service__Group_3_8__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8)");
                    }
                    // InternalDockerCompose.g:11825:103: ( ( ( rule__Service__Group_3_8__0 ) ) )
                    // InternalDockerCompose.g:11826:5: ( ( rule__Service__Group_3_8__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11832:5: ( ( rule__Service__Group_3_8__0 ) )
                    // InternalDockerCompose.g:11833:6: ( rule__Service__Group_3_8__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_8()); 
                    // InternalDockerCompose.g:11834:6: ( rule__Service__Group_3_8__0 )
                    // InternalDockerCompose.g:11834:7: rule__Service__Group_3_8__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_8__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_8()); 

                    }


                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalDockerCompose.g:11839:3: ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11839:3: ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) )
                    // InternalDockerCompose.g:11840:4: {...}? => ( ( ( rule__Service__Group_3_9__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9)");
                    }
                    // InternalDockerCompose.g:11840:103: ( ( ( rule__Service__Group_3_9__0 ) ) )
                    // InternalDockerCompose.g:11841:5: ( ( rule__Service__Group_3_9__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11847:5: ( ( rule__Service__Group_3_9__0 ) )
                    // InternalDockerCompose.g:11848:6: ( rule__Service__Group_3_9__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_9()); 
                    // InternalDockerCompose.g:11849:6: ( rule__Service__Group_3_9__0 )
                    // InternalDockerCompose.g:11849:7: rule__Service__Group_3_9__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_9__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_9()); 

                    }


                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalDockerCompose.g:11854:3: ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11854:3: ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) )
                    // InternalDockerCompose.g:11855:4: {...}? => ( ( ( rule__Service__Group_3_10__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10)");
                    }
                    // InternalDockerCompose.g:11855:104: ( ( ( rule__Service__Group_3_10__0 ) ) )
                    // InternalDockerCompose.g:11856:5: ( ( rule__Service__Group_3_10__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11862:5: ( ( rule__Service__Group_3_10__0 ) )
                    // InternalDockerCompose.g:11863:6: ( rule__Service__Group_3_10__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_10()); 
                    // InternalDockerCompose.g:11864:6: ( rule__Service__Group_3_10__0 )
                    // InternalDockerCompose.g:11864:7: rule__Service__Group_3_10__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_10__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_10()); 

                    }


                    }


                    }


                    }
                    break;
                case 12 :
                    // InternalDockerCompose.g:11869:3: ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11869:3: ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) )
                    // InternalDockerCompose.g:11870:4: {...}? => ( ( ( rule__Service__Group_3_11__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11)");
                    }
                    // InternalDockerCompose.g:11870:104: ( ( ( rule__Service__Group_3_11__0 ) ) )
                    // InternalDockerCompose.g:11871:5: ( ( rule__Service__Group_3_11__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11877:5: ( ( rule__Service__Group_3_11__0 ) )
                    // InternalDockerCompose.g:11878:6: ( rule__Service__Group_3_11__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_11()); 
                    // InternalDockerCompose.g:11879:6: ( rule__Service__Group_3_11__0 )
                    // InternalDockerCompose.g:11879:7: rule__Service__Group_3_11__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_11__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_11()); 

                    }


                    }


                    }


                    }
                    break;
                case 13 :
                    // InternalDockerCompose.g:11884:3: ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11884:3: ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) )
                    // InternalDockerCompose.g:11885:4: {...}? => ( ( ( rule__Service__Group_3_12__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12)");
                    }
                    // InternalDockerCompose.g:11885:104: ( ( ( rule__Service__Group_3_12__0 ) ) )
                    // InternalDockerCompose.g:11886:5: ( ( rule__Service__Group_3_12__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11892:5: ( ( rule__Service__Group_3_12__0 ) )
                    // InternalDockerCompose.g:11893:6: ( rule__Service__Group_3_12__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_12()); 
                    // InternalDockerCompose.g:11894:6: ( rule__Service__Group_3_12__0 )
                    // InternalDockerCompose.g:11894:7: rule__Service__Group_3_12__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_12__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_12()); 

                    }


                    }


                    }


                    }
                    break;
                case 14 :
                    // InternalDockerCompose.g:11899:3: ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11899:3: ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) )
                    // InternalDockerCompose.g:11900:4: {...}? => ( ( ( rule__Service__Group_3_13__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13)");
                    }
                    // InternalDockerCompose.g:11900:104: ( ( ( rule__Service__Group_3_13__0 ) ) )
                    // InternalDockerCompose.g:11901:5: ( ( rule__Service__Group_3_13__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11907:5: ( ( rule__Service__Group_3_13__0 ) )
                    // InternalDockerCompose.g:11908:6: ( rule__Service__Group_3_13__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_13()); 
                    // InternalDockerCompose.g:11909:6: ( rule__Service__Group_3_13__0 )
                    // InternalDockerCompose.g:11909:7: rule__Service__Group_3_13__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_13__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_13()); 

                    }


                    }


                    }


                    }
                    break;
                case 15 :
                    // InternalDockerCompose.g:11914:3: ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11914:3: ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) )
                    // InternalDockerCompose.g:11915:4: {...}? => ( ( ( rule__Service__Group_3_14__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14)");
                    }
                    // InternalDockerCompose.g:11915:104: ( ( ( rule__Service__Group_3_14__0 ) ) )
                    // InternalDockerCompose.g:11916:5: ( ( rule__Service__Group_3_14__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11922:5: ( ( rule__Service__Group_3_14__0 ) )
                    // InternalDockerCompose.g:11923:6: ( rule__Service__Group_3_14__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_14()); 
                    // InternalDockerCompose.g:11924:6: ( rule__Service__Group_3_14__0 )
                    // InternalDockerCompose.g:11924:7: rule__Service__Group_3_14__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_14__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_14()); 

                    }


                    }


                    }


                    }
                    break;
                case 16 :
                    // InternalDockerCompose.g:11929:3: ({...}? => ( ( ( rule__Service__Group_3_15__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11929:3: ({...}? => ( ( ( rule__Service__Group_3_15__0 ) ) ) )
                    // InternalDockerCompose.g:11930:4: {...}? => ( ( ( rule__Service__Group_3_15__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15)");
                    }
                    // InternalDockerCompose.g:11930:104: ( ( ( rule__Service__Group_3_15__0 ) ) )
                    // InternalDockerCompose.g:11931:5: ( ( rule__Service__Group_3_15__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11937:5: ( ( rule__Service__Group_3_15__0 ) )
                    // InternalDockerCompose.g:11938:6: ( rule__Service__Group_3_15__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_15()); 
                    // InternalDockerCompose.g:11939:6: ( rule__Service__Group_3_15__0 )
                    // InternalDockerCompose.g:11939:7: rule__Service__Group_3_15__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_15__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_15()); 

                    }


                    }


                    }


                    }
                    break;
                case 17 :
                    // InternalDockerCompose.g:11944:3: ({...}? => ( ( ( rule__Service__Group_3_16__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11944:3: ({...}? => ( ( ( rule__Service__Group_3_16__0 ) ) ) )
                    // InternalDockerCompose.g:11945:4: {...}? => ( ( ( rule__Service__Group_3_16__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16)");
                    }
                    // InternalDockerCompose.g:11945:104: ( ( ( rule__Service__Group_3_16__0 ) ) )
                    // InternalDockerCompose.g:11946:5: ( ( rule__Service__Group_3_16__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11952:5: ( ( rule__Service__Group_3_16__0 ) )
                    // InternalDockerCompose.g:11953:6: ( rule__Service__Group_3_16__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_16()); 
                    // InternalDockerCompose.g:11954:6: ( rule__Service__Group_3_16__0 )
                    // InternalDockerCompose.g:11954:7: rule__Service__Group_3_16__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_16__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_16()); 

                    }


                    }


                    }


                    }
                    break;
                case 18 :
                    // InternalDockerCompose.g:11959:3: ({...}? => ( ( ( rule__Service__Group_3_17__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11959:3: ({...}? => ( ( ( rule__Service__Group_3_17__0 ) ) ) )
                    // InternalDockerCompose.g:11960:4: {...}? => ( ( ( rule__Service__Group_3_17__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 17) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 17)");
                    }
                    // InternalDockerCompose.g:11960:104: ( ( ( rule__Service__Group_3_17__0 ) ) )
                    // InternalDockerCompose.g:11961:5: ( ( rule__Service__Group_3_17__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 17);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11967:5: ( ( rule__Service__Group_3_17__0 ) )
                    // InternalDockerCompose.g:11968:6: ( rule__Service__Group_3_17__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_17()); 
                    // InternalDockerCompose.g:11969:6: ( rule__Service__Group_3_17__0 )
                    // InternalDockerCompose.g:11969:7: rule__Service__Group_3_17__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_17__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_17()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getServiceAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__Impl"


    // $ANTLR start "rule__Service__UnorderedGroup_3__0"
    // InternalDockerCompose.g:11982:1: rule__Service__UnorderedGroup_3__0 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__1 )? ;
    public final void rule__Service__UnorderedGroup_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11986:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__1 )? )
            // InternalDockerCompose.g:11987:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__1 )?
            {
            pushFollow(FOLLOW_59);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11988:2: ( rule__Service__UnorderedGroup_3__1 )?
            int alt92=2;
            alt92 = dfa92.predict(input);
            switch (alt92) {
                case 1 :
                    // InternalDockerCompose.g:11988:2: rule__Service__UnorderedGroup_3__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__0"


    // $ANTLR start "rule__Service__UnorderedGroup_3__1"
    // InternalDockerCompose.g:11994:1: rule__Service__UnorderedGroup_3__1 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__2 )? ;
    public final void rule__Service__UnorderedGroup_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11998:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__2 )? )
            // InternalDockerCompose.g:11999:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__2 )?
            {
            pushFollow(FOLLOW_59);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12000:2: ( rule__Service__UnorderedGroup_3__2 )?
            int alt93=2;
            alt93 = dfa93.predict(input);
            switch (alt93) {
                case 1 :
                    // InternalDockerCompose.g:12000:2: rule__Service__UnorderedGroup_3__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__1"


    // $ANTLR start "rule__Service__UnorderedGroup_3__2"
    // InternalDockerCompose.g:12006:1: rule__Service__UnorderedGroup_3__2 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__3 )? ;
    public final void rule__Service__UnorderedGroup_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12010:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__3 )? )
            // InternalDockerCompose.g:12011:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__3 )?
            {
            pushFollow(FOLLOW_59);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12012:2: ( rule__Service__UnorderedGroup_3__3 )?
            int alt94=2;
            alt94 = dfa94.predict(input);
            switch (alt94) {
                case 1 :
                    // InternalDockerCompose.g:12012:2: rule__Service__UnorderedGroup_3__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__2"


    // $ANTLR start "rule__Service__UnorderedGroup_3__3"
    // InternalDockerCompose.g:12018:1: rule__Service__UnorderedGroup_3__3 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__4 )? ;
    public final void rule__Service__UnorderedGroup_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12022:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__4 )? )
            // InternalDockerCompose.g:12023:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__4 )?
            {
            pushFollow(FOLLOW_59);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12024:2: ( rule__Service__UnorderedGroup_3__4 )?
            int alt95=2;
            alt95 = dfa95.predict(input);
            switch (alt95) {
                case 1 :
                    // InternalDockerCompose.g:12024:2: rule__Service__UnorderedGroup_3__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__3"


    // $ANTLR start "rule__Service__UnorderedGroup_3__4"
    // InternalDockerCompose.g:12030:1: rule__Service__UnorderedGroup_3__4 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__5 )? ;
    public final void rule__Service__UnorderedGroup_3__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12034:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__5 )? )
            // InternalDockerCompose.g:12035:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__5 )?
            {
            pushFollow(FOLLOW_59);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12036:2: ( rule__Service__UnorderedGroup_3__5 )?
            int alt96=2;
            alt96 = dfa96.predict(input);
            switch (alt96) {
                case 1 :
                    // InternalDockerCompose.g:12036:2: rule__Service__UnorderedGroup_3__5
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__5();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__4"


    // $ANTLR start "rule__Service__UnorderedGroup_3__5"
    // InternalDockerCompose.g:12042:1: rule__Service__UnorderedGroup_3__5 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__6 )? ;
    public final void rule__Service__UnorderedGroup_3__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12046:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__6 )? )
            // InternalDockerCompose.g:12047:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__6 )?
            {
            pushFollow(FOLLOW_59);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12048:2: ( rule__Service__UnorderedGroup_3__6 )?
            int alt97=2;
            alt97 = dfa97.predict(input);
            switch (alt97) {
                case 1 :
                    // InternalDockerCompose.g:12048:2: rule__Service__UnorderedGroup_3__6
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__6();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__5"


    // $ANTLR start "rule__Service__UnorderedGroup_3__6"
    // InternalDockerCompose.g:12054:1: rule__Service__UnorderedGroup_3__6 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__7 )? ;
    public final void rule__Service__UnorderedGroup_3__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12058:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__7 )? )
            // InternalDockerCompose.g:12059:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__7 )?
            {
            pushFollow(FOLLOW_59);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12060:2: ( rule__Service__UnorderedGroup_3__7 )?
            int alt98=2;
            alt98 = dfa98.predict(input);
            switch (alt98) {
                case 1 :
                    // InternalDockerCompose.g:12060:2: rule__Service__UnorderedGroup_3__7
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__7();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__6"


    // $ANTLR start "rule__Service__UnorderedGroup_3__7"
    // InternalDockerCompose.g:12066:1: rule__Service__UnorderedGroup_3__7 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__8 )? ;
    public final void rule__Service__UnorderedGroup_3__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12070:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__8 )? )
            // InternalDockerCompose.g:12071:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__8 )?
            {
            pushFollow(FOLLOW_59);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12072:2: ( rule__Service__UnorderedGroup_3__8 )?
            int alt99=2;
            alt99 = dfa99.predict(input);
            switch (alt99) {
                case 1 :
                    // InternalDockerCompose.g:12072:2: rule__Service__UnorderedGroup_3__8
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__8();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__7"


    // $ANTLR start "rule__Service__UnorderedGroup_3__8"
    // InternalDockerCompose.g:12078:1: rule__Service__UnorderedGroup_3__8 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__9 )? ;
    public final void rule__Service__UnorderedGroup_3__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12082:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__9 )? )
            // InternalDockerCompose.g:12083:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__9 )?
            {
            pushFollow(FOLLOW_59);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12084:2: ( rule__Service__UnorderedGroup_3__9 )?
            int alt100=2;
            alt100 = dfa100.predict(input);
            switch (alt100) {
                case 1 :
                    // InternalDockerCompose.g:12084:2: rule__Service__UnorderedGroup_3__9
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__9();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__8"


    // $ANTLR start "rule__Service__UnorderedGroup_3__9"
    // InternalDockerCompose.g:12090:1: rule__Service__UnorderedGroup_3__9 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__10 )? ;
    public final void rule__Service__UnorderedGroup_3__9() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12094:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__10 )? )
            // InternalDockerCompose.g:12095:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__10 )?
            {
            pushFollow(FOLLOW_59);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12096:2: ( rule__Service__UnorderedGroup_3__10 )?
            int alt101=2;
            alt101 = dfa101.predict(input);
            switch (alt101) {
                case 1 :
                    // InternalDockerCompose.g:12096:2: rule__Service__UnorderedGroup_3__10
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__10();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__9"


    // $ANTLR start "rule__Service__UnorderedGroup_3__10"
    // InternalDockerCompose.g:12102:1: rule__Service__UnorderedGroup_3__10 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__11 )? ;
    public final void rule__Service__UnorderedGroup_3__10() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12106:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__11 )? )
            // InternalDockerCompose.g:12107:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__11 )?
            {
            pushFollow(FOLLOW_59);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12108:2: ( rule__Service__UnorderedGroup_3__11 )?
            int alt102=2;
            alt102 = dfa102.predict(input);
            switch (alt102) {
                case 1 :
                    // InternalDockerCompose.g:12108:2: rule__Service__UnorderedGroup_3__11
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__11();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__10"


    // $ANTLR start "rule__Service__UnorderedGroup_3__11"
    // InternalDockerCompose.g:12114:1: rule__Service__UnorderedGroup_3__11 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__12 )? ;
    public final void rule__Service__UnorderedGroup_3__11() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12118:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__12 )? )
            // InternalDockerCompose.g:12119:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__12 )?
            {
            pushFollow(FOLLOW_59);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12120:2: ( rule__Service__UnorderedGroup_3__12 )?
            int alt103=2;
            alt103 = dfa103.predict(input);
            switch (alt103) {
                case 1 :
                    // InternalDockerCompose.g:12120:2: rule__Service__UnorderedGroup_3__12
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__12();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__11"


    // $ANTLR start "rule__Service__UnorderedGroup_3__12"
    // InternalDockerCompose.g:12126:1: rule__Service__UnorderedGroup_3__12 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__13 )? ;
    public final void rule__Service__UnorderedGroup_3__12() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12130:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__13 )? )
            // InternalDockerCompose.g:12131:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__13 )?
            {
            pushFollow(FOLLOW_59);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12132:2: ( rule__Service__UnorderedGroup_3__13 )?
            int alt104=2;
            alt104 = dfa104.predict(input);
            switch (alt104) {
                case 1 :
                    // InternalDockerCompose.g:12132:2: rule__Service__UnorderedGroup_3__13
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__13();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__12"


    // $ANTLR start "rule__Service__UnorderedGroup_3__13"
    // InternalDockerCompose.g:12138:1: rule__Service__UnorderedGroup_3__13 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__14 )? ;
    public final void rule__Service__UnorderedGroup_3__13() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12142:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__14 )? )
            // InternalDockerCompose.g:12143:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__14 )?
            {
            pushFollow(FOLLOW_59);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12144:2: ( rule__Service__UnorderedGroup_3__14 )?
            int alt105=2;
            alt105 = dfa105.predict(input);
            switch (alt105) {
                case 1 :
                    // InternalDockerCompose.g:12144:2: rule__Service__UnorderedGroup_3__14
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__14();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__13"


    // $ANTLR start "rule__Service__UnorderedGroup_3__14"
    // InternalDockerCompose.g:12150:1: rule__Service__UnorderedGroup_3__14 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__15 )? ;
    public final void rule__Service__UnorderedGroup_3__14() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12154:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__15 )? )
            // InternalDockerCompose.g:12155:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__15 )?
            {
            pushFollow(FOLLOW_59);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12156:2: ( rule__Service__UnorderedGroup_3__15 )?
            int alt106=2;
            alt106 = dfa106.predict(input);
            switch (alt106) {
                case 1 :
                    // InternalDockerCompose.g:12156:2: rule__Service__UnorderedGroup_3__15
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__15();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__14"


    // $ANTLR start "rule__Service__UnorderedGroup_3__15"
    // InternalDockerCompose.g:12162:1: rule__Service__UnorderedGroup_3__15 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__16 )? ;
    public final void rule__Service__UnorderedGroup_3__15() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12166:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__16 )? )
            // InternalDockerCompose.g:12167:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__16 )?
            {
            pushFollow(FOLLOW_59);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12168:2: ( rule__Service__UnorderedGroup_3__16 )?
            int alt107=2;
            alt107 = dfa107.predict(input);
            switch (alt107) {
                case 1 :
                    // InternalDockerCompose.g:12168:2: rule__Service__UnorderedGroup_3__16
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__16();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__15"


    // $ANTLR start "rule__Service__UnorderedGroup_3__16"
    // InternalDockerCompose.g:12174:1: rule__Service__UnorderedGroup_3__16 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__17 )? ;
    public final void rule__Service__UnorderedGroup_3__16() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12178:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__17 )? )
            // InternalDockerCompose.g:12179:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__17 )?
            {
            pushFollow(FOLLOW_59);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12180:2: ( rule__Service__UnorderedGroup_3__17 )?
            int alt108=2;
            alt108 = dfa108.predict(input);
            switch (alt108) {
                case 1 :
                    // InternalDockerCompose.g:12180:2: rule__Service__UnorderedGroup_3__17
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__17();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__16"


    // $ANTLR start "rule__Service__UnorderedGroup_3__17"
    // InternalDockerCompose.g:12186:1: rule__Service__UnorderedGroup_3__17 : rule__Service__UnorderedGroup_3__Impl ;
    public final void rule__Service__UnorderedGroup_3__17() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12190:1: ( rule__Service__UnorderedGroup_3__Impl )
            // InternalDockerCompose.g:12191:2: rule__Service__UnorderedGroup_3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__17"


    // $ANTLR start "rule__NetworkConnector_long__UnorderedGroup_3"
    // InternalDockerCompose.g:12198:1: rule__NetworkConnector_long__UnorderedGroup_3 : ( rule__NetworkConnector_long__UnorderedGroup_3__0 )? ;
    public final void rule__NetworkConnector_long__UnorderedGroup_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3());
        	
        try {
            // InternalDockerCompose.g:12203:1: ( ( rule__NetworkConnector_long__UnorderedGroup_3__0 )? )
            // InternalDockerCompose.g:12204:2: ( rule__NetworkConnector_long__UnorderedGroup_3__0 )?
            {
            // InternalDockerCompose.g:12204:2: ( rule__NetworkConnector_long__UnorderedGroup_3__0 )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( LA109_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 0) ) {
                alt109=1;
            }
            else if ( LA109_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 1) ) {
                alt109=1;
            }
            else if ( LA109_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 2) ) {
                alt109=1;
            }
            else if ( LA109_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 3) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // InternalDockerCompose.g:12204:2: rule__NetworkConnector_long__UnorderedGroup_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector_long__UnorderedGroup_3__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__UnorderedGroup_3"


    // $ANTLR start "rule__NetworkConnector_long__UnorderedGroup_3__Impl"
    // InternalDockerCompose.g:12212:1: rule__NetworkConnector_long__UnorderedGroup_3__Impl : ( ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_3__0 ) ) ) ) ) ;
    public final void rule__NetworkConnector_long__UnorderedGroup_3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:12217:1: ( ( ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_3__0 ) ) ) ) ) )
            // InternalDockerCompose.g:12218:3: ( ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_3__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:12218:3: ( ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_3__0 ) ) ) ) )
            int alt110=4;
            int LA110_0 = input.LA(1);

            if ( LA110_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 0) ) {
                alt110=1;
            }
            else if ( LA110_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 1) ) {
                alt110=2;
            }
            else if ( LA110_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 2) ) {
                alt110=3;
            }
            else if ( LA110_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 3) ) {
                alt110=4;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 110, 0, input);

                throw nvae;
            }
            switch (alt110) {
                case 1 :
                    // InternalDockerCompose.g:12219:3: ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12219:3: ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_0__0 ) ) ) )
                    // InternalDockerCompose.g:12220:4: {...}? => ( ( ( rule__NetworkConnector_long__Group_3_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 0) ) {
                        throw new FailedPredicateException(input, "rule__NetworkConnector_long__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 0)");
                    }
                    // InternalDockerCompose.g:12220:117: ( ( ( rule__NetworkConnector_long__Group_3_0__0 ) ) )
                    // InternalDockerCompose.g:12221:5: ( ( rule__NetworkConnector_long__Group_3_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12227:5: ( ( rule__NetworkConnector_long__Group_3_0__0 ) )
                    // InternalDockerCompose.g:12228:6: ( rule__NetworkConnector_long__Group_3_0__0 )
                    {
                     before(grammarAccess.getNetworkConnector_longAccess().getGroup_3_0()); 
                    // InternalDockerCompose.g:12229:6: ( rule__NetworkConnector_long__Group_3_0__0 )
                    // InternalDockerCompose.g:12229:7: rule__NetworkConnector_long__Group_3_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector_long__Group_3_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkConnector_longAccess().getGroup_3_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:12234:3: ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12234:3: ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_1__0 ) ) ) )
                    // InternalDockerCompose.g:12235:4: {...}? => ( ( ( rule__NetworkConnector_long__Group_3_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 1) ) {
                        throw new FailedPredicateException(input, "rule__NetworkConnector_long__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 1)");
                    }
                    // InternalDockerCompose.g:12235:117: ( ( ( rule__NetworkConnector_long__Group_3_1__0 ) ) )
                    // InternalDockerCompose.g:12236:5: ( ( rule__NetworkConnector_long__Group_3_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12242:5: ( ( rule__NetworkConnector_long__Group_3_1__0 ) )
                    // InternalDockerCompose.g:12243:6: ( rule__NetworkConnector_long__Group_3_1__0 )
                    {
                     before(grammarAccess.getNetworkConnector_longAccess().getGroup_3_1()); 
                    // InternalDockerCompose.g:12244:6: ( rule__NetworkConnector_long__Group_3_1__0 )
                    // InternalDockerCompose.g:12244:7: rule__NetworkConnector_long__Group_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector_long__Group_3_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkConnector_longAccess().getGroup_3_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:12249:3: ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12249:3: ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_2__0 ) ) ) )
                    // InternalDockerCompose.g:12250:4: {...}? => ( ( ( rule__NetworkConnector_long__Group_3_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 2) ) {
                        throw new FailedPredicateException(input, "rule__NetworkConnector_long__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 2)");
                    }
                    // InternalDockerCompose.g:12250:117: ( ( ( rule__NetworkConnector_long__Group_3_2__0 ) ) )
                    // InternalDockerCompose.g:12251:5: ( ( rule__NetworkConnector_long__Group_3_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12257:5: ( ( rule__NetworkConnector_long__Group_3_2__0 ) )
                    // InternalDockerCompose.g:12258:6: ( rule__NetworkConnector_long__Group_3_2__0 )
                    {
                     before(grammarAccess.getNetworkConnector_longAccess().getGroup_3_2()); 
                    // InternalDockerCompose.g:12259:6: ( rule__NetworkConnector_long__Group_3_2__0 )
                    // InternalDockerCompose.g:12259:7: rule__NetworkConnector_long__Group_3_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector_long__Group_3_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkConnector_longAccess().getGroup_3_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:12264:3: ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12264:3: ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_3__0 ) ) ) )
                    // InternalDockerCompose.g:12265:4: {...}? => ( ( ( rule__NetworkConnector_long__Group_3_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 3) ) {
                        throw new FailedPredicateException(input, "rule__NetworkConnector_long__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 3)");
                    }
                    // InternalDockerCompose.g:12265:117: ( ( ( rule__NetworkConnector_long__Group_3_3__0 ) ) )
                    // InternalDockerCompose.g:12266:5: ( ( rule__NetworkConnector_long__Group_3_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12272:5: ( ( rule__NetworkConnector_long__Group_3_3__0 ) )
                    // InternalDockerCompose.g:12273:6: ( rule__NetworkConnector_long__Group_3_3__0 )
                    {
                     before(grammarAccess.getNetworkConnector_longAccess().getGroup_3_3()); 
                    // InternalDockerCompose.g:12274:6: ( rule__NetworkConnector_long__Group_3_3__0 )
                    // InternalDockerCompose.g:12274:7: rule__NetworkConnector_long__Group_3_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector_long__Group_3_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkConnector_longAccess().getGroup_3_3()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__UnorderedGroup_3__Impl"


    // $ANTLR start "rule__NetworkConnector_long__UnorderedGroup_3__0"
    // InternalDockerCompose.g:12287:1: rule__NetworkConnector_long__UnorderedGroup_3__0 : rule__NetworkConnector_long__UnorderedGroup_3__Impl ( rule__NetworkConnector_long__UnorderedGroup_3__1 )? ;
    public final void rule__NetworkConnector_long__UnorderedGroup_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12291:1: ( rule__NetworkConnector_long__UnorderedGroup_3__Impl ( rule__NetworkConnector_long__UnorderedGroup_3__1 )? )
            // InternalDockerCompose.g:12292:2: rule__NetworkConnector_long__UnorderedGroup_3__Impl ( rule__NetworkConnector_long__UnorderedGroup_3__1 )?
            {
            pushFollow(FOLLOW_60);
            rule__NetworkConnector_long__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12293:2: ( rule__NetworkConnector_long__UnorderedGroup_3__1 )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( LA111_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 0) ) {
                alt111=1;
            }
            else if ( LA111_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 1) ) {
                alt111=1;
            }
            else if ( LA111_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 2) ) {
                alt111=1;
            }
            else if ( LA111_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 3) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // InternalDockerCompose.g:12293:2: rule__NetworkConnector_long__UnorderedGroup_3__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector_long__UnorderedGroup_3__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__UnorderedGroup_3__0"


    // $ANTLR start "rule__NetworkConnector_long__UnorderedGroup_3__1"
    // InternalDockerCompose.g:12299:1: rule__NetworkConnector_long__UnorderedGroup_3__1 : rule__NetworkConnector_long__UnorderedGroup_3__Impl ( rule__NetworkConnector_long__UnorderedGroup_3__2 )? ;
    public final void rule__NetworkConnector_long__UnorderedGroup_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12303:1: ( rule__NetworkConnector_long__UnorderedGroup_3__Impl ( rule__NetworkConnector_long__UnorderedGroup_3__2 )? )
            // InternalDockerCompose.g:12304:2: rule__NetworkConnector_long__UnorderedGroup_3__Impl ( rule__NetworkConnector_long__UnorderedGroup_3__2 )?
            {
            pushFollow(FOLLOW_60);
            rule__NetworkConnector_long__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12305:2: ( rule__NetworkConnector_long__UnorderedGroup_3__2 )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( LA112_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 0) ) {
                alt112=1;
            }
            else if ( LA112_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 1) ) {
                alt112=1;
            }
            else if ( LA112_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 2) ) {
                alt112=1;
            }
            else if ( LA112_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 3) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // InternalDockerCompose.g:12305:2: rule__NetworkConnector_long__UnorderedGroup_3__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector_long__UnorderedGroup_3__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__UnorderedGroup_3__1"


    // $ANTLR start "rule__NetworkConnector_long__UnorderedGroup_3__2"
    // InternalDockerCompose.g:12311:1: rule__NetworkConnector_long__UnorderedGroup_3__2 : rule__NetworkConnector_long__UnorderedGroup_3__Impl ( rule__NetworkConnector_long__UnorderedGroup_3__3 )? ;
    public final void rule__NetworkConnector_long__UnorderedGroup_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12315:1: ( rule__NetworkConnector_long__UnorderedGroup_3__Impl ( rule__NetworkConnector_long__UnorderedGroup_3__3 )? )
            // InternalDockerCompose.g:12316:2: rule__NetworkConnector_long__UnorderedGroup_3__Impl ( rule__NetworkConnector_long__UnorderedGroup_3__3 )?
            {
            pushFollow(FOLLOW_60);
            rule__NetworkConnector_long__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12317:2: ( rule__NetworkConnector_long__UnorderedGroup_3__3 )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( LA113_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 0) ) {
                alt113=1;
            }
            else if ( LA113_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 1) ) {
                alt113=1;
            }
            else if ( LA113_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 2) ) {
                alt113=1;
            }
            else if ( LA113_0 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 3) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalDockerCompose.g:12317:2: rule__NetworkConnector_long__UnorderedGroup_3__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector_long__UnorderedGroup_3__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__UnorderedGroup_3__2"


    // $ANTLR start "rule__NetworkConnector_long__UnorderedGroup_3__3"
    // InternalDockerCompose.g:12323:1: rule__NetworkConnector_long__UnorderedGroup_3__3 : rule__NetworkConnector_long__UnorderedGroup_3__Impl ;
    public final void rule__NetworkConnector_long__UnorderedGroup_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12327:1: ( rule__NetworkConnector_long__UnorderedGroup_3__Impl )
            // InternalDockerCompose.g:12328:2: rule__NetworkConnector_long__UnorderedGroup_3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__UnorderedGroup_3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__UnorderedGroup_3__3"


    // $ANTLR start "rule__VolumeConnector__UnorderedGroup_1_1"
    // InternalDockerCompose.g:12335:1: rule__VolumeConnector__UnorderedGroup_1_1 : rule__VolumeConnector__UnorderedGroup_1_1__0 {...}?;
    public final void rule__VolumeConnector__UnorderedGroup_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1());
        	
        try {
            // InternalDockerCompose.g:12340:1: ( rule__VolumeConnector__UnorderedGroup_1_1__0 {...}?)
            // InternalDockerCompose.g:12341:2: rule__VolumeConnector__UnorderedGroup_1_1__0 {...}?
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__UnorderedGroup_1_1__0();

            state._fsp--;

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1()) ) {
                throw new FailedPredicateException(input, "rule__VolumeConnector__UnorderedGroup_1_1", "getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1())");
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__UnorderedGroup_1_1"


    // $ANTLR start "rule__VolumeConnector__UnorderedGroup_1_1__Impl"
    // InternalDockerCompose.g:12349:1: rule__VolumeConnector__UnorderedGroup_1_1__Impl : ( ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_6__0 ) ) ) ) ) ;
    public final void rule__VolumeConnector__UnorderedGroup_1_1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:12354:1: ( ( ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_6__0 ) ) ) ) ) )
            // InternalDockerCompose.g:12355:3: ( ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_6__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:12355:3: ( ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_6__0 ) ) ) ) )
            int alt114=7;
            int LA114_0 = input.LA(1);

            if ( LA114_0 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 0) ) {
                alt114=1;
            }
            else if ( LA114_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 1) ) {
                alt114=2;
            }
            else if ( LA114_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 2) ) {
                alt114=3;
            }
            else if ( LA114_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 3) ) {
                alt114=4;
            }
            else if ( LA114_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 4) ) {
                alt114=5;
            }
            else if ( LA114_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 5) ) {
                alt114=6;
            }
            else if ( LA114_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 6) ) {
                alt114=7;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 114, 0, input);

                throw nvae;
            }
            switch (alt114) {
                case 1 :
                    // InternalDockerCompose.g:12356:3: ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12356:3: ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_0__0 ) ) ) )
                    // InternalDockerCompose.g:12357:4: {...}? => ( ( ( rule__VolumeConnector__Group_1_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 0) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 0)");
                    }
                    // InternalDockerCompose.g:12357:113: ( ( ( rule__VolumeConnector__Group_1_1_0__0 ) ) )
                    // InternalDockerCompose.g:12358:5: ( ( rule__VolumeConnector__Group_1_1_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12364:5: ( ( rule__VolumeConnector__Group_1_1_0__0 ) )
                    // InternalDockerCompose.g:12365:6: ( rule__VolumeConnector__Group_1_1_0__0 )
                    {
                     before(grammarAccess.getVolumeConnectorAccess().getGroup_1_1_0()); 
                    // InternalDockerCompose.g:12366:6: ( rule__VolumeConnector__Group_1_1_0__0 )
                    // InternalDockerCompose.g:12366:7: rule__VolumeConnector__Group_1_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector__Group_1_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnectorAccess().getGroup_1_1_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:12371:3: ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12371:3: ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_1__0 ) ) ) )
                    // InternalDockerCompose.g:12372:4: {...}? => ( ( ( rule__VolumeConnector__Group_1_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 1) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 1)");
                    }
                    // InternalDockerCompose.g:12372:113: ( ( ( rule__VolumeConnector__Group_1_1_1__0 ) ) )
                    // InternalDockerCompose.g:12373:5: ( ( rule__VolumeConnector__Group_1_1_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12379:5: ( ( rule__VolumeConnector__Group_1_1_1__0 ) )
                    // InternalDockerCompose.g:12380:6: ( rule__VolumeConnector__Group_1_1_1__0 )
                    {
                     before(grammarAccess.getVolumeConnectorAccess().getGroup_1_1_1()); 
                    // InternalDockerCompose.g:12381:6: ( rule__VolumeConnector__Group_1_1_1__0 )
                    // InternalDockerCompose.g:12381:7: rule__VolumeConnector__Group_1_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector__Group_1_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnectorAccess().getGroup_1_1_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:12386:3: ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12386:3: ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_2__0 ) ) ) )
                    // InternalDockerCompose.g:12387:4: {...}? => ( ( ( rule__VolumeConnector__Group_1_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 2) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 2)");
                    }
                    // InternalDockerCompose.g:12387:113: ( ( ( rule__VolumeConnector__Group_1_1_2__0 ) ) )
                    // InternalDockerCompose.g:12388:5: ( ( rule__VolumeConnector__Group_1_1_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12394:5: ( ( rule__VolumeConnector__Group_1_1_2__0 ) )
                    // InternalDockerCompose.g:12395:6: ( rule__VolumeConnector__Group_1_1_2__0 )
                    {
                     before(grammarAccess.getVolumeConnectorAccess().getGroup_1_1_2()); 
                    // InternalDockerCompose.g:12396:6: ( rule__VolumeConnector__Group_1_1_2__0 )
                    // InternalDockerCompose.g:12396:7: rule__VolumeConnector__Group_1_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector__Group_1_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnectorAccess().getGroup_1_1_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:12401:3: ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12401:3: ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_3__0 ) ) ) )
                    // InternalDockerCompose.g:12402:4: {...}? => ( ( ( rule__VolumeConnector__Group_1_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 3) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 3)");
                    }
                    // InternalDockerCompose.g:12402:113: ( ( ( rule__VolumeConnector__Group_1_1_3__0 ) ) )
                    // InternalDockerCompose.g:12403:5: ( ( rule__VolumeConnector__Group_1_1_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12409:5: ( ( rule__VolumeConnector__Group_1_1_3__0 ) )
                    // InternalDockerCompose.g:12410:6: ( rule__VolumeConnector__Group_1_1_3__0 )
                    {
                     before(grammarAccess.getVolumeConnectorAccess().getGroup_1_1_3()); 
                    // InternalDockerCompose.g:12411:6: ( rule__VolumeConnector__Group_1_1_3__0 )
                    // InternalDockerCompose.g:12411:7: rule__VolumeConnector__Group_1_1_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector__Group_1_1_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnectorAccess().getGroup_1_1_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:12416:3: ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12416:3: ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_4__0 ) ) ) )
                    // InternalDockerCompose.g:12417:4: {...}? => ( ( ( rule__VolumeConnector__Group_1_1_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 4) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 4)");
                    }
                    // InternalDockerCompose.g:12417:113: ( ( ( rule__VolumeConnector__Group_1_1_4__0 ) ) )
                    // InternalDockerCompose.g:12418:5: ( ( rule__VolumeConnector__Group_1_1_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12424:5: ( ( rule__VolumeConnector__Group_1_1_4__0 ) )
                    // InternalDockerCompose.g:12425:6: ( rule__VolumeConnector__Group_1_1_4__0 )
                    {
                     before(grammarAccess.getVolumeConnectorAccess().getGroup_1_1_4()); 
                    // InternalDockerCompose.g:12426:6: ( rule__VolumeConnector__Group_1_1_4__0 )
                    // InternalDockerCompose.g:12426:7: rule__VolumeConnector__Group_1_1_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector__Group_1_1_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnectorAccess().getGroup_1_1_4()); 

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDockerCompose.g:12431:3: ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_5__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12431:3: ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_5__0 ) ) ) )
                    // InternalDockerCompose.g:12432:4: {...}? => ( ( ( rule__VolumeConnector__Group_1_1_5__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 5) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 5)");
                    }
                    // InternalDockerCompose.g:12432:113: ( ( ( rule__VolumeConnector__Group_1_1_5__0 ) ) )
                    // InternalDockerCompose.g:12433:5: ( ( rule__VolumeConnector__Group_1_1_5__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 5);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12439:5: ( ( rule__VolumeConnector__Group_1_1_5__0 ) )
                    // InternalDockerCompose.g:12440:6: ( rule__VolumeConnector__Group_1_1_5__0 )
                    {
                     before(grammarAccess.getVolumeConnectorAccess().getGroup_1_1_5()); 
                    // InternalDockerCompose.g:12441:6: ( rule__VolumeConnector__Group_1_1_5__0 )
                    // InternalDockerCompose.g:12441:7: rule__VolumeConnector__Group_1_1_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector__Group_1_1_5__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnectorAccess().getGroup_1_1_5()); 

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalDockerCompose.g:12446:3: ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_6__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12446:3: ({...}? => ( ( ( rule__VolumeConnector__Group_1_1_6__0 ) ) ) )
                    // InternalDockerCompose.g:12447:4: {...}? => ( ( ( rule__VolumeConnector__Group_1_1_6__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 6) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 6)");
                    }
                    // InternalDockerCompose.g:12447:113: ( ( ( rule__VolumeConnector__Group_1_1_6__0 ) ) )
                    // InternalDockerCompose.g:12448:5: ( ( rule__VolumeConnector__Group_1_1_6__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 6);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12454:5: ( ( rule__VolumeConnector__Group_1_1_6__0 ) )
                    // InternalDockerCompose.g:12455:6: ( rule__VolumeConnector__Group_1_1_6__0 )
                    {
                     before(grammarAccess.getVolumeConnectorAccess().getGroup_1_1_6()); 
                    // InternalDockerCompose.g:12456:6: ( rule__VolumeConnector__Group_1_1_6__0 )
                    // InternalDockerCompose.g:12456:7: rule__VolumeConnector__Group_1_1_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector__Group_1_1_6__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnectorAccess().getGroup_1_1_6()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__UnorderedGroup_1_1__Impl"


    // $ANTLR start "rule__VolumeConnector__UnorderedGroup_1_1__0"
    // InternalDockerCompose.g:12469:1: rule__VolumeConnector__UnorderedGroup_1_1__0 : rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__1 )? ;
    public final void rule__VolumeConnector__UnorderedGroup_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12473:1: ( rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__1 )? )
            // InternalDockerCompose.g:12474:2: rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__1 )?
            {
            pushFollow(FOLLOW_61);
            rule__VolumeConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12475:2: ( rule__VolumeConnector__UnorderedGroup_1_1__1 )?
            int alt115=2;
            alt115 = dfa115.predict(input);
            switch (alt115) {
                case 1 :
                    // InternalDockerCompose.g:12475:2: rule__VolumeConnector__UnorderedGroup_1_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector__UnorderedGroup_1_1__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__UnorderedGroup_1_1__0"


    // $ANTLR start "rule__VolumeConnector__UnorderedGroup_1_1__1"
    // InternalDockerCompose.g:12481:1: rule__VolumeConnector__UnorderedGroup_1_1__1 : rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__2 )? ;
    public final void rule__VolumeConnector__UnorderedGroup_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12485:1: ( rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__2 )? )
            // InternalDockerCompose.g:12486:2: rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__2 )?
            {
            pushFollow(FOLLOW_61);
            rule__VolumeConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12487:2: ( rule__VolumeConnector__UnorderedGroup_1_1__2 )?
            int alt116=2;
            alt116 = dfa116.predict(input);
            switch (alt116) {
                case 1 :
                    // InternalDockerCompose.g:12487:2: rule__VolumeConnector__UnorderedGroup_1_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector__UnorderedGroup_1_1__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__UnorderedGroup_1_1__1"


    // $ANTLR start "rule__VolumeConnector__UnorderedGroup_1_1__2"
    // InternalDockerCompose.g:12493:1: rule__VolumeConnector__UnorderedGroup_1_1__2 : rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__3 )? ;
    public final void rule__VolumeConnector__UnorderedGroup_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12497:1: ( rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__3 )? )
            // InternalDockerCompose.g:12498:2: rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__3 )?
            {
            pushFollow(FOLLOW_61);
            rule__VolumeConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12499:2: ( rule__VolumeConnector__UnorderedGroup_1_1__3 )?
            int alt117=2;
            alt117 = dfa117.predict(input);
            switch (alt117) {
                case 1 :
                    // InternalDockerCompose.g:12499:2: rule__VolumeConnector__UnorderedGroup_1_1__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector__UnorderedGroup_1_1__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__UnorderedGroup_1_1__2"


    // $ANTLR start "rule__VolumeConnector__UnorderedGroup_1_1__3"
    // InternalDockerCompose.g:12505:1: rule__VolumeConnector__UnorderedGroup_1_1__3 : rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__4 )? ;
    public final void rule__VolumeConnector__UnorderedGroup_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12509:1: ( rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__4 )? )
            // InternalDockerCompose.g:12510:2: rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__4 )?
            {
            pushFollow(FOLLOW_61);
            rule__VolumeConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12511:2: ( rule__VolumeConnector__UnorderedGroup_1_1__4 )?
            int alt118=2;
            alt118 = dfa118.predict(input);
            switch (alt118) {
                case 1 :
                    // InternalDockerCompose.g:12511:2: rule__VolumeConnector__UnorderedGroup_1_1__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector__UnorderedGroup_1_1__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__UnorderedGroup_1_1__3"


    // $ANTLR start "rule__VolumeConnector__UnorderedGroup_1_1__4"
    // InternalDockerCompose.g:12517:1: rule__VolumeConnector__UnorderedGroup_1_1__4 : rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__5 )? ;
    public final void rule__VolumeConnector__UnorderedGroup_1_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12521:1: ( rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__5 )? )
            // InternalDockerCompose.g:12522:2: rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__5 )?
            {
            pushFollow(FOLLOW_61);
            rule__VolumeConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12523:2: ( rule__VolumeConnector__UnorderedGroup_1_1__5 )?
            int alt119=2;
            alt119 = dfa119.predict(input);
            switch (alt119) {
                case 1 :
                    // InternalDockerCompose.g:12523:2: rule__VolumeConnector__UnorderedGroup_1_1__5
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector__UnorderedGroup_1_1__5();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__UnorderedGroup_1_1__4"


    // $ANTLR start "rule__VolumeConnector__UnorderedGroup_1_1__5"
    // InternalDockerCompose.g:12529:1: rule__VolumeConnector__UnorderedGroup_1_1__5 : rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__6 )? ;
    public final void rule__VolumeConnector__UnorderedGroup_1_1__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12533:1: ( rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__6 )? )
            // InternalDockerCompose.g:12534:2: rule__VolumeConnector__UnorderedGroup_1_1__Impl ( rule__VolumeConnector__UnorderedGroup_1_1__6 )?
            {
            pushFollow(FOLLOW_61);
            rule__VolumeConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12535:2: ( rule__VolumeConnector__UnorderedGroup_1_1__6 )?
            int alt120=2;
            alt120 = dfa120.predict(input);
            switch (alt120) {
                case 1 :
                    // InternalDockerCompose.g:12535:2: rule__VolumeConnector__UnorderedGroup_1_1__6
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector__UnorderedGroup_1_1__6();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__UnorderedGroup_1_1__5"


    // $ANTLR start "rule__VolumeConnector__UnorderedGroup_1_1__6"
    // InternalDockerCompose.g:12541:1: rule__VolumeConnector__UnorderedGroup_1_1__6 : rule__VolumeConnector__UnorderedGroup_1_1__Impl ;
    public final void rule__VolumeConnector__UnorderedGroup_1_1__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12545:1: ( rule__VolumeConnector__UnorderedGroup_1_1__Impl )
            // InternalDockerCompose.g:12546:2: rule__VolumeConnector__UnorderedGroup_1_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__UnorderedGroup_1_1__6"


    // $ANTLR start "rule__ConfigConnector__UnorderedGroup_1_1"
    // InternalDockerCompose.g:12553:1: rule__ConfigConnector__UnorderedGroup_1_1 : rule__ConfigConnector__UnorderedGroup_1_1__0 {...}?;
    public final void rule__ConfigConnector__UnorderedGroup_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1());
        	
        try {
            // InternalDockerCompose.g:12558:1: ( rule__ConfigConnector__UnorderedGroup_1_1__0 {...}?)
            // InternalDockerCompose.g:12559:2: rule__ConfigConnector__UnorderedGroup_1_1__0 {...}?
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector__UnorderedGroup_1_1__0();

            state._fsp--;

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1()) ) {
                throw new FailedPredicateException(input, "rule__ConfigConnector__UnorderedGroup_1_1", "getUnorderedGroupHelper().canLeave(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1())");
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__UnorderedGroup_1_1"


    // $ANTLR start "rule__ConfigConnector__UnorderedGroup_1_1__Impl"
    // InternalDockerCompose.g:12567:1: rule__ConfigConnector__UnorderedGroup_1_1__Impl : ( ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_4__0 ) ) ) ) ) ;
    public final void rule__ConfigConnector__UnorderedGroup_1_1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:12572:1: ( ( ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_4__0 ) ) ) ) ) )
            // InternalDockerCompose.g:12573:3: ( ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_4__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:12573:3: ( ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_4__0 ) ) ) ) )
            int alt121=5;
            int LA121_0 = input.LA(1);

            if ( LA121_0 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 0) ) {
                alt121=1;
            }
            else if ( LA121_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 1) ) {
                alt121=2;
            }
            else if ( LA121_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 2) ) {
                alt121=3;
            }
            else if ( LA121_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 3) ) {
                alt121=4;
            }
            else if ( LA121_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 4) ) {
                alt121=5;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 121, 0, input);

                throw nvae;
            }
            switch (alt121) {
                case 1 :
                    // InternalDockerCompose.g:12574:3: ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12574:3: ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_0__0 ) ) ) )
                    // InternalDockerCompose.g:12575:4: {...}? => ( ( ( rule__ConfigConnector__Group_1_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 0) ) {
                        throw new FailedPredicateException(input, "rule__ConfigConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 0)");
                    }
                    // InternalDockerCompose.g:12575:113: ( ( ( rule__ConfigConnector__Group_1_1_0__0 ) ) )
                    // InternalDockerCompose.g:12576:5: ( ( rule__ConfigConnector__Group_1_1_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12582:5: ( ( rule__ConfigConnector__Group_1_1_0__0 ) )
                    // InternalDockerCompose.g:12583:6: ( rule__ConfigConnector__Group_1_1_0__0 )
                    {
                     before(grammarAccess.getConfigConnectorAccess().getGroup_1_1_0()); 
                    // InternalDockerCompose.g:12584:6: ( rule__ConfigConnector__Group_1_1_0__0 )
                    // InternalDockerCompose.g:12584:7: rule__ConfigConnector__Group_1_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector__Group_1_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigConnectorAccess().getGroup_1_1_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:12589:3: ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12589:3: ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_1__0 ) ) ) )
                    // InternalDockerCompose.g:12590:4: {...}? => ( ( ( rule__ConfigConnector__Group_1_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 1) ) {
                        throw new FailedPredicateException(input, "rule__ConfigConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 1)");
                    }
                    // InternalDockerCompose.g:12590:113: ( ( ( rule__ConfigConnector__Group_1_1_1__0 ) ) )
                    // InternalDockerCompose.g:12591:5: ( ( rule__ConfigConnector__Group_1_1_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12597:5: ( ( rule__ConfigConnector__Group_1_1_1__0 ) )
                    // InternalDockerCompose.g:12598:6: ( rule__ConfigConnector__Group_1_1_1__0 )
                    {
                     before(grammarAccess.getConfigConnectorAccess().getGroup_1_1_1()); 
                    // InternalDockerCompose.g:12599:6: ( rule__ConfigConnector__Group_1_1_1__0 )
                    // InternalDockerCompose.g:12599:7: rule__ConfigConnector__Group_1_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector__Group_1_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigConnectorAccess().getGroup_1_1_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:12604:3: ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12604:3: ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_2__0 ) ) ) )
                    // InternalDockerCompose.g:12605:4: {...}? => ( ( ( rule__ConfigConnector__Group_1_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 2) ) {
                        throw new FailedPredicateException(input, "rule__ConfigConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 2)");
                    }
                    // InternalDockerCompose.g:12605:113: ( ( ( rule__ConfigConnector__Group_1_1_2__0 ) ) )
                    // InternalDockerCompose.g:12606:5: ( ( rule__ConfigConnector__Group_1_1_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12612:5: ( ( rule__ConfigConnector__Group_1_1_2__0 ) )
                    // InternalDockerCompose.g:12613:6: ( rule__ConfigConnector__Group_1_1_2__0 )
                    {
                     before(grammarAccess.getConfigConnectorAccess().getGroup_1_1_2()); 
                    // InternalDockerCompose.g:12614:6: ( rule__ConfigConnector__Group_1_1_2__0 )
                    // InternalDockerCompose.g:12614:7: rule__ConfigConnector__Group_1_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector__Group_1_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigConnectorAccess().getGroup_1_1_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:12619:3: ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12619:3: ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_3__0 ) ) ) )
                    // InternalDockerCompose.g:12620:4: {...}? => ( ( ( rule__ConfigConnector__Group_1_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 3) ) {
                        throw new FailedPredicateException(input, "rule__ConfigConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 3)");
                    }
                    // InternalDockerCompose.g:12620:113: ( ( ( rule__ConfigConnector__Group_1_1_3__0 ) ) )
                    // InternalDockerCompose.g:12621:5: ( ( rule__ConfigConnector__Group_1_1_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12627:5: ( ( rule__ConfigConnector__Group_1_1_3__0 ) )
                    // InternalDockerCompose.g:12628:6: ( rule__ConfigConnector__Group_1_1_3__0 )
                    {
                     before(grammarAccess.getConfigConnectorAccess().getGroup_1_1_3()); 
                    // InternalDockerCompose.g:12629:6: ( rule__ConfigConnector__Group_1_1_3__0 )
                    // InternalDockerCompose.g:12629:7: rule__ConfigConnector__Group_1_1_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector__Group_1_1_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigConnectorAccess().getGroup_1_1_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:12634:3: ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12634:3: ({...}? => ( ( ( rule__ConfigConnector__Group_1_1_4__0 ) ) ) )
                    // InternalDockerCompose.g:12635:4: {...}? => ( ( ( rule__ConfigConnector__Group_1_1_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 4) ) {
                        throw new FailedPredicateException(input, "rule__ConfigConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 4)");
                    }
                    // InternalDockerCompose.g:12635:113: ( ( ( rule__ConfigConnector__Group_1_1_4__0 ) ) )
                    // InternalDockerCompose.g:12636:5: ( ( rule__ConfigConnector__Group_1_1_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12642:5: ( ( rule__ConfigConnector__Group_1_1_4__0 ) )
                    // InternalDockerCompose.g:12643:6: ( rule__ConfigConnector__Group_1_1_4__0 )
                    {
                     before(grammarAccess.getConfigConnectorAccess().getGroup_1_1_4()); 
                    // InternalDockerCompose.g:12644:6: ( rule__ConfigConnector__Group_1_1_4__0 )
                    // InternalDockerCompose.g:12644:7: rule__ConfigConnector__Group_1_1_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector__Group_1_1_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigConnectorAccess().getGroup_1_1_4()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__UnorderedGroup_1_1__Impl"


    // $ANTLR start "rule__ConfigConnector__UnorderedGroup_1_1__0"
    // InternalDockerCompose.g:12657:1: rule__ConfigConnector__UnorderedGroup_1_1__0 : rule__ConfigConnector__UnorderedGroup_1_1__Impl ( rule__ConfigConnector__UnorderedGroup_1_1__1 )? ;
    public final void rule__ConfigConnector__UnorderedGroup_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12661:1: ( rule__ConfigConnector__UnorderedGroup_1_1__Impl ( rule__ConfigConnector__UnorderedGroup_1_1__1 )? )
            // InternalDockerCompose.g:12662:2: rule__ConfigConnector__UnorderedGroup_1_1__Impl ( rule__ConfigConnector__UnorderedGroup_1_1__1 )?
            {
            pushFollow(FOLLOW_62);
            rule__ConfigConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12663:2: ( rule__ConfigConnector__UnorderedGroup_1_1__1 )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( LA122_0 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 0) ) {
                alt122=1;
            }
            else if ( LA122_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 1) ) {
                alt122=1;
            }
            else if ( LA122_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 2) ) {
                alt122=1;
            }
            else if ( LA122_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 3) ) {
                alt122=1;
            }
            else if ( LA122_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 4) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // InternalDockerCompose.g:12663:2: rule__ConfigConnector__UnorderedGroup_1_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector__UnorderedGroup_1_1__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__UnorderedGroup_1_1__0"


    // $ANTLR start "rule__ConfigConnector__UnorderedGroup_1_1__1"
    // InternalDockerCompose.g:12669:1: rule__ConfigConnector__UnorderedGroup_1_1__1 : rule__ConfigConnector__UnorderedGroup_1_1__Impl ( rule__ConfigConnector__UnorderedGroup_1_1__2 )? ;
    public final void rule__ConfigConnector__UnorderedGroup_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12673:1: ( rule__ConfigConnector__UnorderedGroup_1_1__Impl ( rule__ConfigConnector__UnorderedGroup_1_1__2 )? )
            // InternalDockerCompose.g:12674:2: rule__ConfigConnector__UnorderedGroup_1_1__Impl ( rule__ConfigConnector__UnorderedGroup_1_1__2 )?
            {
            pushFollow(FOLLOW_62);
            rule__ConfigConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12675:2: ( rule__ConfigConnector__UnorderedGroup_1_1__2 )?
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( LA123_0 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 0) ) {
                alt123=1;
            }
            else if ( LA123_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 1) ) {
                alt123=1;
            }
            else if ( LA123_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 2) ) {
                alt123=1;
            }
            else if ( LA123_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 3) ) {
                alt123=1;
            }
            else if ( LA123_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 4) ) {
                alt123=1;
            }
            switch (alt123) {
                case 1 :
                    // InternalDockerCompose.g:12675:2: rule__ConfigConnector__UnorderedGroup_1_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector__UnorderedGroup_1_1__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__UnorderedGroup_1_1__1"


    // $ANTLR start "rule__ConfigConnector__UnorderedGroup_1_1__2"
    // InternalDockerCompose.g:12681:1: rule__ConfigConnector__UnorderedGroup_1_1__2 : rule__ConfigConnector__UnorderedGroup_1_1__Impl ( rule__ConfigConnector__UnorderedGroup_1_1__3 )? ;
    public final void rule__ConfigConnector__UnorderedGroup_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12685:1: ( rule__ConfigConnector__UnorderedGroup_1_1__Impl ( rule__ConfigConnector__UnorderedGroup_1_1__3 )? )
            // InternalDockerCompose.g:12686:2: rule__ConfigConnector__UnorderedGroup_1_1__Impl ( rule__ConfigConnector__UnorderedGroup_1_1__3 )?
            {
            pushFollow(FOLLOW_62);
            rule__ConfigConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12687:2: ( rule__ConfigConnector__UnorderedGroup_1_1__3 )?
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( LA124_0 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 0) ) {
                alt124=1;
            }
            else if ( LA124_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 1) ) {
                alt124=1;
            }
            else if ( LA124_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 2) ) {
                alt124=1;
            }
            else if ( LA124_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 3) ) {
                alt124=1;
            }
            else if ( LA124_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 4) ) {
                alt124=1;
            }
            switch (alt124) {
                case 1 :
                    // InternalDockerCompose.g:12687:2: rule__ConfigConnector__UnorderedGroup_1_1__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector__UnorderedGroup_1_1__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__UnorderedGroup_1_1__2"


    // $ANTLR start "rule__ConfigConnector__UnorderedGroup_1_1__3"
    // InternalDockerCompose.g:12693:1: rule__ConfigConnector__UnorderedGroup_1_1__3 : rule__ConfigConnector__UnorderedGroup_1_1__Impl ( rule__ConfigConnector__UnorderedGroup_1_1__4 )? ;
    public final void rule__ConfigConnector__UnorderedGroup_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12697:1: ( rule__ConfigConnector__UnorderedGroup_1_1__Impl ( rule__ConfigConnector__UnorderedGroup_1_1__4 )? )
            // InternalDockerCompose.g:12698:2: rule__ConfigConnector__UnorderedGroup_1_1__Impl ( rule__ConfigConnector__UnorderedGroup_1_1__4 )?
            {
            pushFollow(FOLLOW_62);
            rule__ConfigConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12699:2: ( rule__ConfigConnector__UnorderedGroup_1_1__4 )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( LA125_0 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 0) ) {
                alt125=1;
            }
            else if ( LA125_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 1) ) {
                alt125=1;
            }
            else if ( LA125_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 2) ) {
                alt125=1;
            }
            else if ( LA125_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 3) ) {
                alt125=1;
            }
            else if ( LA125_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnectorAccess().getUnorderedGroup_1_1(), 4) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // InternalDockerCompose.g:12699:2: rule__ConfigConnector__UnorderedGroup_1_1__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector__UnorderedGroup_1_1__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__UnorderedGroup_1_1__3"


    // $ANTLR start "rule__ConfigConnector__UnorderedGroup_1_1__4"
    // InternalDockerCompose.g:12705:1: rule__ConfigConnector__UnorderedGroup_1_1__4 : rule__ConfigConnector__UnorderedGroup_1_1__Impl ;
    public final void rule__ConfigConnector__UnorderedGroup_1_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12709:1: ( rule__ConfigConnector__UnorderedGroup_1_1__Impl )
            // InternalDockerCompose.g:12710:2: rule__ConfigConnector__UnorderedGroup_1_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__UnorderedGroup_1_1__4"


    // $ANTLR start "rule__SecretConnector__UnorderedGroup_1_1"
    // InternalDockerCompose.g:12717:1: rule__SecretConnector__UnorderedGroup_1_1 : rule__SecretConnector__UnorderedGroup_1_1__0 {...}?;
    public final void rule__SecretConnector__UnorderedGroup_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1());
        	
        try {
            // InternalDockerCompose.g:12722:1: ( rule__SecretConnector__UnorderedGroup_1_1__0 {...}?)
            // InternalDockerCompose.g:12723:2: rule__SecretConnector__UnorderedGroup_1_1__0 {...}?
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector__UnorderedGroup_1_1__0();

            state._fsp--;

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1()) ) {
                throw new FailedPredicateException(input, "rule__SecretConnector__UnorderedGroup_1_1", "getUnorderedGroupHelper().canLeave(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1())");
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__UnorderedGroup_1_1"


    // $ANTLR start "rule__SecretConnector__UnorderedGroup_1_1__Impl"
    // InternalDockerCompose.g:12731:1: rule__SecretConnector__UnorderedGroup_1_1__Impl : ( ({...}? => ( ( ( rule__SecretConnector__Group_1_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector__Group_1_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector__Group_1_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector__Group_1_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector__Group_1_1_4__0 ) ) ) ) ) ;
    public final void rule__SecretConnector__UnorderedGroup_1_1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:12736:1: ( ( ({...}? => ( ( ( rule__SecretConnector__Group_1_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector__Group_1_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector__Group_1_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector__Group_1_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector__Group_1_1_4__0 ) ) ) ) ) )
            // InternalDockerCompose.g:12737:3: ( ({...}? => ( ( ( rule__SecretConnector__Group_1_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector__Group_1_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector__Group_1_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector__Group_1_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector__Group_1_1_4__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:12737:3: ( ({...}? => ( ( ( rule__SecretConnector__Group_1_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector__Group_1_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector__Group_1_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector__Group_1_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector__Group_1_1_4__0 ) ) ) ) )
            int alt126=5;
            int LA126_0 = input.LA(1);

            if ( LA126_0 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 0) ) {
                alt126=1;
            }
            else if ( LA126_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 1) ) {
                alt126=2;
            }
            else if ( LA126_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 2) ) {
                alt126=3;
            }
            else if ( LA126_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 3) ) {
                alt126=4;
            }
            else if ( LA126_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 4) ) {
                alt126=5;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 126, 0, input);

                throw nvae;
            }
            switch (alt126) {
                case 1 :
                    // InternalDockerCompose.g:12738:3: ({...}? => ( ( ( rule__SecretConnector__Group_1_1_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12738:3: ({...}? => ( ( ( rule__SecretConnector__Group_1_1_0__0 ) ) ) )
                    // InternalDockerCompose.g:12739:4: {...}? => ( ( ( rule__SecretConnector__Group_1_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 0) ) {
                        throw new FailedPredicateException(input, "rule__SecretConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 0)");
                    }
                    // InternalDockerCompose.g:12739:113: ( ( ( rule__SecretConnector__Group_1_1_0__0 ) ) )
                    // InternalDockerCompose.g:12740:5: ( ( rule__SecretConnector__Group_1_1_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12746:5: ( ( rule__SecretConnector__Group_1_1_0__0 ) )
                    // InternalDockerCompose.g:12747:6: ( rule__SecretConnector__Group_1_1_0__0 )
                    {
                     before(grammarAccess.getSecretConnectorAccess().getGroup_1_1_0()); 
                    // InternalDockerCompose.g:12748:6: ( rule__SecretConnector__Group_1_1_0__0 )
                    // InternalDockerCompose.g:12748:7: rule__SecretConnector__Group_1_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector__Group_1_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretConnectorAccess().getGroup_1_1_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:12753:3: ({...}? => ( ( ( rule__SecretConnector__Group_1_1_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12753:3: ({...}? => ( ( ( rule__SecretConnector__Group_1_1_1__0 ) ) ) )
                    // InternalDockerCompose.g:12754:4: {...}? => ( ( ( rule__SecretConnector__Group_1_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 1) ) {
                        throw new FailedPredicateException(input, "rule__SecretConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 1)");
                    }
                    // InternalDockerCompose.g:12754:113: ( ( ( rule__SecretConnector__Group_1_1_1__0 ) ) )
                    // InternalDockerCompose.g:12755:5: ( ( rule__SecretConnector__Group_1_1_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12761:5: ( ( rule__SecretConnector__Group_1_1_1__0 ) )
                    // InternalDockerCompose.g:12762:6: ( rule__SecretConnector__Group_1_1_1__0 )
                    {
                     before(grammarAccess.getSecretConnectorAccess().getGroup_1_1_1()); 
                    // InternalDockerCompose.g:12763:6: ( rule__SecretConnector__Group_1_1_1__0 )
                    // InternalDockerCompose.g:12763:7: rule__SecretConnector__Group_1_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector__Group_1_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretConnectorAccess().getGroup_1_1_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:12768:3: ({...}? => ( ( ( rule__SecretConnector__Group_1_1_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12768:3: ({...}? => ( ( ( rule__SecretConnector__Group_1_1_2__0 ) ) ) )
                    // InternalDockerCompose.g:12769:4: {...}? => ( ( ( rule__SecretConnector__Group_1_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 2) ) {
                        throw new FailedPredicateException(input, "rule__SecretConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 2)");
                    }
                    // InternalDockerCompose.g:12769:113: ( ( ( rule__SecretConnector__Group_1_1_2__0 ) ) )
                    // InternalDockerCompose.g:12770:5: ( ( rule__SecretConnector__Group_1_1_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12776:5: ( ( rule__SecretConnector__Group_1_1_2__0 ) )
                    // InternalDockerCompose.g:12777:6: ( rule__SecretConnector__Group_1_1_2__0 )
                    {
                     before(grammarAccess.getSecretConnectorAccess().getGroup_1_1_2()); 
                    // InternalDockerCompose.g:12778:6: ( rule__SecretConnector__Group_1_1_2__0 )
                    // InternalDockerCompose.g:12778:7: rule__SecretConnector__Group_1_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector__Group_1_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretConnectorAccess().getGroup_1_1_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:12783:3: ({...}? => ( ( ( rule__SecretConnector__Group_1_1_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12783:3: ({...}? => ( ( ( rule__SecretConnector__Group_1_1_3__0 ) ) ) )
                    // InternalDockerCompose.g:12784:4: {...}? => ( ( ( rule__SecretConnector__Group_1_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 3) ) {
                        throw new FailedPredicateException(input, "rule__SecretConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 3)");
                    }
                    // InternalDockerCompose.g:12784:113: ( ( ( rule__SecretConnector__Group_1_1_3__0 ) ) )
                    // InternalDockerCompose.g:12785:5: ( ( rule__SecretConnector__Group_1_1_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12791:5: ( ( rule__SecretConnector__Group_1_1_3__0 ) )
                    // InternalDockerCompose.g:12792:6: ( rule__SecretConnector__Group_1_1_3__0 )
                    {
                     before(grammarAccess.getSecretConnectorAccess().getGroup_1_1_3()); 
                    // InternalDockerCompose.g:12793:6: ( rule__SecretConnector__Group_1_1_3__0 )
                    // InternalDockerCompose.g:12793:7: rule__SecretConnector__Group_1_1_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector__Group_1_1_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretConnectorAccess().getGroup_1_1_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:12798:3: ({...}? => ( ( ( rule__SecretConnector__Group_1_1_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12798:3: ({...}? => ( ( ( rule__SecretConnector__Group_1_1_4__0 ) ) ) )
                    // InternalDockerCompose.g:12799:4: {...}? => ( ( ( rule__SecretConnector__Group_1_1_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 4) ) {
                        throw new FailedPredicateException(input, "rule__SecretConnector__UnorderedGroup_1_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 4)");
                    }
                    // InternalDockerCompose.g:12799:113: ( ( ( rule__SecretConnector__Group_1_1_4__0 ) ) )
                    // InternalDockerCompose.g:12800:5: ( ( rule__SecretConnector__Group_1_1_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12806:5: ( ( rule__SecretConnector__Group_1_1_4__0 ) )
                    // InternalDockerCompose.g:12807:6: ( rule__SecretConnector__Group_1_1_4__0 )
                    {
                     before(grammarAccess.getSecretConnectorAccess().getGroup_1_1_4()); 
                    // InternalDockerCompose.g:12808:6: ( rule__SecretConnector__Group_1_1_4__0 )
                    // InternalDockerCompose.g:12808:7: rule__SecretConnector__Group_1_1_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector__Group_1_1_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretConnectorAccess().getGroup_1_1_4()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__UnorderedGroup_1_1__Impl"


    // $ANTLR start "rule__SecretConnector__UnorderedGroup_1_1__0"
    // InternalDockerCompose.g:12821:1: rule__SecretConnector__UnorderedGroup_1_1__0 : rule__SecretConnector__UnorderedGroup_1_1__Impl ( rule__SecretConnector__UnorderedGroup_1_1__1 )? ;
    public final void rule__SecretConnector__UnorderedGroup_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12825:1: ( rule__SecretConnector__UnorderedGroup_1_1__Impl ( rule__SecretConnector__UnorderedGroup_1_1__1 )? )
            // InternalDockerCompose.g:12826:2: rule__SecretConnector__UnorderedGroup_1_1__Impl ( rule__SecretConnector__UnorderedGroup_1_1__1 )?
            {
            pushFollow(FOLLOW_62);
            rule__SecretConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12827:2: ( rule__SecretConnector__UnorderedGroup_1_1__1 )?
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( LA127_0 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 0) ) {
                alt127=1;
            }
            else if ( LA127_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 1) ) {
                alt127=1;
            }
            else if ( LA127_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 2) ) {
                alt127=1;
            }
            else if ( LA127_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 3) ) {
                alt127=1;
            }
            else if ( LA127_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 4) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    // InternalDockerCompose.g:12827:2: rule__SecretConnector__UnorderedGroup_1_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector__UnorderedGroup_1_1__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__UnorderedGroup_1_1__0"


    // $ANTLR start "rule__SecretConnector__UnorderedGroup_1_1__1"
    // InternalDockerCompose.g:12833:1: rule__SecretConnector__UnorderedGroup_1_1__1 : rule__SecretConnector__UnorderedGroup_1_1__Impl ( rule__SecretConnector__UnorderedGroup_1_1__2 )? ;
    public final void rule__SecretConnector__UnorderedGroup_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12837:1: ( rule__SecretConnector__UnorderedGroup_1_1__Impl ( rule__SecretConnector__UnorderedGroup_1_1__2 )? )
            // InternalDockerCompose.g:12838:2: rule__SecretConnector__UnorderedGroup_1_1__Impl ( rule__SecretConnector__UnorderedGroup_1_1__2 )?
            {
            pushFollow(FOLLOW_62);
            rule__SecretConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12839:2: ( rule__SecretConnector__UnorderedGroup_1_1__2 )?
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( LA128_0 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 0) ) {
                alt128=1;
            }
            else if ( LA128_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 1) ) {
                alt128=1;
            }
            else if ( LA128_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 2) ) {
                alt128=1;
            }
            else if ( LA128_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 3) ) {
                alt128=1;
            }
            else if ( LA128_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 4) ) {
                alt128=1;
            }
            switch (alt128) {
                case 1 :
                    // InternalDockerCompose.g:12839:2: rule__SecretConnector__UnorderedGroup_1_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector__UnorderedGroup_1_1__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__UnorderedGroup_1_1__1"


    // $ANTLR start "rule__SecretConnector__UnorderedGroup_1_1__2"
    // InternalDockerCompose.g:12845:1: rule__SecretConnector__UnorderedGroup_1_1__2 : rule__SecretConnector__UnorderedGroup_1_1__Impl ( rule__SecretConnector__UnorderedGroup_1_1__3 )? ;
    public final void rule__SecretConnector__UnorderedGroup_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12849:1: ( rule__SecretConnector__UnorderedGroup_1_1__Impl ( rule__SecretConnector__UnorderedGroup_1_1__3 )? )
            // InternalDockerCompose.g:12850:2: rule__SecretConnector__UnorderedGroup_1_1__Impl ( rule__SecretConnector__UnorderedGroup_1_1__3 )?
            {
            pushFollow(FOLLOW_62);
            rule__SecretConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12851:2: ( rule__SecretConnector__UnorderedGroup_1_1__3 )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( LA129_0 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 0) ) {
                alt129=1;
            }
            else if ( LA129_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 1) ) {
                alt129=1;
            }
            else if ( LA129_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 2) ) {
                alt129=1;
            }
            else if ( LA129_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 3) ) {
                alt129=1;
            }
            else if ( LA129_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 4) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // InternalDockerCompose.g:12851:2: rule__SecretConnector__UnorderedGroup_1_1__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector__UnorderedGroup_1_1__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__UnorderedGroup_1_1__2"


    // $ANTLR start "rule__SecretConnector__UnorderedGroup_1_1__3"
    // InternalDockerCompose.g:12857:1: rule__SecretConnector__UnorderedGroup_1_1__3 : rule__SecretConnector__UnorderedGroup_1_1__Impl ( rule__SecretConnector__UnorderedGroup_1_1__4 )? ;
    public final void rule__SecretConnector__UnorderedGroup_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12861:1: ( rule__SecretConnector__UnorderedGroup_1_1__Impl ( rule__SecretConnector__UnorderedGroup_1_1__4 )? )
            // InternalDockerCompose.g:12862:2: rule__SecretConnector__UnorderedGroup_1_1__Impl ( rule__SecretConnector__UnorderedGroup_1_1__4 )?
            {
            pushFollow(FOLLOW_62);
            rule__SecretConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:12863:2: ( rule__SecretConnector__UnorderedGroup_1_1__4 )?
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( LA130_0 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 0) ) {
                alt130=1;
            }
            else if ( LA130_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 1) ) {
                alt130=1;
            }
            else if ( LA130_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 2) ) {
                alt130=1;
            }
            else if ( LA130_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 3) ) {
                alt130=1;
            }
            else if ( LA130_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnectorAccess().getUnorderedGroup_1_1(), 4) ) {
                alt130=1;
            }
            switch (alt130) {
                case 1 :
                    // InternalDockerCompose.g:12863:2: rule__SecretConnector__UnorderedGroup_1_1__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector__UnorderedGroup_1_1__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__UnorderedGroup_1_1__3"


    // $ANTLR start "rule__SecretConnector__UnorderedGroup_1_1__4"
    // InternalDockerCompose.g:12869:1: rule__SecretConnector__UnorderedGroup_1_1__4 : rule__SecretConnector__UnorderedGroup_1_1__Impl ;
    public final void rule__SecretConnector__UnorderedGroup_1_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12873:1: ( rule__SecretConnector__UnorderedGroup_1_1__Impl )
            // InternalDockerCompose.g:12874:2: rule__SecretConnector__UnorderedGroup_1_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector__UnorderedGroup_1_1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__UnorderedGroup_1_1__4"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1"
    // InternalDockerCompose.g:12881:1: rule__Network__UnorderedGroup_3_1 : ( rule__Network__UnorderedGroup_3_1__0 )? ;
    public final void rule__Network__UnorderedGroup_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1());
        	
        try {
            // InternalDockerCompose.g:12886:1: ( ( rule__Network__UnorderedGroup_3_1__0 )? )
            // InternalDockerCompose.g:12887:2: ( rule__Network__UnorderedGroup_3_1__0 )?
            {
            // InternalDockerCompose.g:12887:2: ( rule__Network__UnorderedGroup_3_1__0 )?
            int alt131=2;
            alt131 = dfa131.predict(input);
            switch (alt131) {
                case 1 :
                    // InternalDockerCompose.g:12887:2: rule__Network__UnorderedGroup_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__Impl"
    // InternalDockerCompose.g:12895:1: rule__Network__UnorderedGroup_3_1__Impl : ( ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) ) ) ;
    public final void rule__Network__UnorderedGroup_3_1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:12900:1: ( ( ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) ) ) )
            // InternalDockerCompose.g:12901:3: ( ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:12901:3: ( ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) ) )
            int alt132=9;
            alt132 = dfa132.predict(input);
            switch (alt132) {
                case 1 :
                    // InternalDockerCompose.g:12902:3: ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12902:3: ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) )
                    // InternalDockerCompose.g:12903:4: {...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0)");
                    }
                    // InternalDockerCompose.g:12903:105: ( ( ( rule__Network__Group_3_1_0__0 ) ) )
                    // InternalDockerCompose.g:12904:5: ( ( rule__Network__Group_3_1_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12910:5: ( ( rule__Network__Group_3_1_0__0 ) )
                    // InternalDockerCompose.g:12911:6: ( rule__Network__Group_3_1_0__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_0()); 
                    // InternalDockerCompose.g:12912:6: ( rule__Network__Group_3_1_0__0 )
                    // InternalDockerCompose.g:12912:7: rule__Network__Group_3_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:12917:3: ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12917:3: ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) )
                    // InternalDockerCompose.g:12918:4: {...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1)");
                    }
                    // InternalDockerCompose.g:12918:105: ( ( ( rule__Network__Group_3_1_1__0 ) ) )
                    // InternalDockerCompose.g:12919:5: ( ( rule__Network__Group_3_1_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12925:5: ( ( rule__Network__Group_3_1_1__0 ) )
                    // InternalDockerCompose.g:12926:6: ( rule__Network__Group_3_1_1__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_1()); 
                    // InternalDockerCompose.g:12927:6: ( rule__Network__Group_3_1_1__0 )
                    // InternalDockerCompose.g:12927:7: rule__Network__Group_3_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:12932:3: ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12932:3: ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) )
                    // InternalDockerCompose.g:12933:4: {...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2)");
                    }
                    // InternalDockerCompose.g:12933:105: ( ( ( rule__Network__Group_3_1_2__0 ) ) )
                    // InternalDockerCompose.g:12934:5: ( ( rule__Network__Group_3_1_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12940:5: ( ( rule__Network__Group_3_1_2__0 ) )
                    // InternalDockerCompose.g:12941:6: ( rule__Network__Group_3_1_2__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_2()); 
                    // InternalDockerCompose.g:12942:6: ( rule__Network__Group_3_1_2__0 )
                    // InternalDockerCompose.g:12942:7: rule__Network__Group_3_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:12947:3: ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12947:3: ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) )
                    // InternalDockerCompose.g:12948:4: {...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3)");
                    }
                    // InternalDockerCompose.g:12948:105: ( ( ( rule__Network__Group_3_1_3__0 ) ) )
                    // InternalDockerCompose.g:12949:5: ( ( rule__Network__Group_3_1_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12955:5: ( ( rule__Network__Group_3_1_3__0 ) )
                    // InternalDockerCompose.g:12956:6: ( rule__Network__Group_3_1_3__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_3()); 
                    // InternalDockerCompose.g:12957:6: ( rule__Network__Group_3_1_3__0 )
                    // InternalDockerCompose.g:12957:7: rule__Network__Group_3_1_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:12962:3: ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12962:3: ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) )
                    // InternalDockerCompose.g:12963:4: {...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4)");
                    }
                    // InternalDockerCompose.g:12963:105: ( ( ( rule__Network__Group_3_1_4__0 ) ) )
                    // InternalDockerCompose.g:12964:5: ( ( rule__Network__Group_3_1_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12970:5: ( ( rule__Network__Group_3_1_4__0 ) )
                    // InternalDockerCompose.g:12971:6: ( rule__Network__Group_3_1_4__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_4()); 
                    // InternalDockerCompose.g:12972:6: ( rule__Network__Group_3_1_4__0 )
                    // InternalDockerCompose.g:12972:7: rule__Network__Group_3_1_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_4()); 

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDockerCompose.g:12977:3: ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12977:3: ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) )
                    // InternalDockerCompose.g:12978:4: {...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5)");
                    }
                    // InternalDockerCompose.g:12978:105: ( ( ( rule__Network__Group_3_1_5__0 ) ) )
                    // InternalDockerCompose.g:12979:5: ( ( rule__Network__Group_3_1_5__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:12985:5: ( ( rule__Network__Group_3_1_5__0 ) )
                    // InternalDockerCompose.g:12986:6: ( rule__Network__Group_3_1_5__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_5()); 
                    // InternalDockerCompose.g:12987:6: ( rule__Network__Group_3_1_5__0 )
                    // InternalDockerCompose.g:12987:7: rule__Network__Group_3_1_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_5__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_5()); 

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalDockerCompose.g:12992:3: ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:12992:3: ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) )
                    // InternalDockerCompose.g:12993:4: {...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6)");
                    }
                    // InternalDockerCompose.g:12993:105: ( ( ( rule__Network__Group_3_1_6__0 ) ) )
                    // InternalDockerCompose.g:12994:5: ( ( rule__Network__Group_3_1_6__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:13000:5: ( ( rule__Network__Group_3_1_6__0 ) )
                    // InternalDockerCompose.g:13001:6: ( rule__Network__Group_3_1_6__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_6()); 
                    // InternalDockerCompose.g:13002:6: ( rule__Network__Group_3_1_6__0 )
                    // InternalDockerCompose.g:13002:7: rule__Network__Group_3_1_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_6__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_6()); 

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalDockerCompose.g:13007:3: ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:13007:3: ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) )
                    // InternalDockerCompose.g:13008:4: {...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7)");
                    }
                    // InternalDockerCompose.g:13008:105: ( ( ( rule__Network__Group_3_1_7__0 ) ) )
                    // InternalDockerCompose.g:13009:5: ( ( rule__Network__Group_3_1_7__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:13015:5: ( ( rule__Network__Group_3_1_7__0 ) )
                    // InternalDockerCompose.g:13016:6: ( rule__Network__Group_3_1_7__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_7()); 
                    // InternalDockerCompose.g:13017:6: ( rule__Network__Group_3_1_7__0 )
                    // InternalDockerCompose.g:13017:7: rule__Network__Group_3_1_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_7__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_7()); 

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalDockerCompose.g:13022:3: ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:13022:3: ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) )
                    // InternalDockerCompose.g:13023:4: {...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8)");
                    }
                    // InternalDockerCompose.g:13023:105: ( ( ( rule__Network__Group_3_1_8__0 ) ) )
                    // InternalDockerCompose.g:13024:5: ( ( rule__Network__Group_3_1_8__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:13030:5: ( ( rule__Network__Group_3_1_8__0 ) )
                    // InternalDockerCompose.g:13031:6: ( rule__Network__Group_3_1_8__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_8()); 
                    // InternalDockerCompose.g:13032:6: ( rule__Network__Group_3_1_8__0 )
                    // InternalDockerCompose.g:13032:7: rule__Network__Group_3_1_8__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_8__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_8()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__Impl"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__0"
    // InternalDockerCompose.g:13045:1: rule__Network__UnorderedGroup_3_1__0 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__1 )? ;
    public final void rule__Network__UnorderedGroup_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13049:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__1 )? )
            // InternalDockerCompose.g:13050:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__1 )?
            {
            pushFollow(FOLLOW_63);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:13051:2: ( rule__Network__UnorderedGroup_3_1__1 )?
            int alt133=2;
            alt133 = dfa133.predict(input);
            switch (alt133) {
                case 1 :
                    // InternalDockerCompose.g:13051:2: rule__Network__UnorderedGroup_3_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__0"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__1"
    // InternalDockerCompose.g:13057:1: rule__Network__UnorderedGroup_3_1__1 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__2 )? ;
    public final void rule__Network__UnorderedGroup_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13061:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__2 )? )
            // InternalDockerCompose.g:13062:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__2 )?
            {
            pushFollow(FOLLOW_63);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:13063:2: ( rule__Network__UnorderedGroup_3_1__2 )?
            int alt134=2;
            alt134 = dfa134.predict(input);
            switch (alt134) {
                case 1 :
                    // InternalDockerCompose.g:13063:2: rule__Network__UnorderedGroup_3_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__1"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__2"
    // InternalDockerCompose.g:13069:1: rule__Network__UnorderedGroup_3_1__2 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__3 )? ;
    public final void rule__Network__UnorderedGroup_3_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13073:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__3 )? )
            // InternalDockerCompose.g:13074:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__3 )?
            {
            pushFollow(FOLLOW_63);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:13075:2: ( rule__Network__UnorderedGroup_3_1__3 )?
            int alt135=2;
            alt135 = dfa135.predict(input);
            switch (alt135) {
                case 1 :
                    // InternalDockerCompose.g:13075:2: rule__Network__UnorderedGroup_3_1__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__2"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__3"
    // InternalDockerCompose.g:13081:1: rule__Network__UnorderedGroup_3_1__3 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__4 )? ;
    public final void rule__Network__UnorderedGroup_3_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13085:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__4 )? )
            // InternalDockerCompose.g:13086:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__4 )?
            {
            pushFollow(FOLLOW_63);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:13087:2: ( rule__Network__UnorderedGroup_3_1__4 )?
            int alt136=2;
            alt136 = dfa136.predict(input);
            switch (alt136) {
                case 1 :
                    // InternalDockerCompose.g:13087:2: rule__Network__UnorderedGroup_3_1__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__3"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__4"
    // InternalDockerCompose.g:13093:1: rule__Network__UnorderedGroup_3_1__4 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__5 )? ;
    public final void rule__Network__UnorderedGroup_3_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13097:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__5 )? )
            // InternalDockerCompose.g:13098:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__5 )?
            {
            pushFollow(FOLLOW_63);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:13099:2: ( rule__Network__UnorderedGroup_3_1__5 )?
            int alt137=2;
            alt137 = dfa137.predict(input);
            switch (alt137) {
                case 1 :
                    // InternalDockerCompose.g:13099:2: rule__Network__UnorderedGroup_3_1__5
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__5();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__4"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__5"
    // InternalDockerCompose.g:13105:1: rule__Network__UnorderedGroup_3_1__5 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__6 )? ;
    public final void rule__Network__UnorderedGroup_3_1__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13109:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__6 )? )
            // InternalDockerCompose.g:13110:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__6 )?
            {
            pushFollow(FOLLOW_63);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:13111:2: ( rule__Network__UnorderedGroup_3_1__6 )?
            int alt138=2;
            alt138 = dfa138.predict(input);
            switch (alt138) {
                case 1 :
                    // InternalDockerCompose.g:13111:2: rule__Network__UnorderedGroup_3_1__6
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__6();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__5"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__6"
    // InternalDockerCompose.g:13117:1: rule__Network__UnorderedGroup_3_1__6 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__7 )? ;
    public final void rule__Network__UnorderedGroup_3_1__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13121:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__7 )? )
            // InternalDockerCompose.g:13122:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__7 )?
            {
            pushFollow(FOLLOW_63);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:13123:2: ( rule__Network__UnorderedGroup_3_1__7 )?
            int alt139=2;
            alt139 = dfa139.predict(input);
            switch (alt139) {
                case 1 :
                    // InternalDockerCompose.g:13123:2: rule__Network__UnorderedGroup_3_1__7
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__7();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__6"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__7"
    // InternalDockerCompose.g:13129:1: rule__Network__UnorderedGroup_3_1__7 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__8 )? ;
    public final void rule__Network__UnorderedGroup_3_1__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13133:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__8 )? )
            // InternalDockerCompose.g:13134:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__8 )?
            {
            pushFollow(FOLLOW_63);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:13135:2: ( rule__Network__UnorderedGroup_3_1__8 )?
            int alt140=2;
            alt140 = dfa140.predict(input);
            switch (alt140) {
                case 1 :
                    // InternalDockerCompose.g:13135:2: rule__Network__UnorderedGroup_3_1__8
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__8();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__7"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__8"
    // InternalDockerCompose.g:13141:1: rule__Network__UnorderedGroup_3_1__8 : rule__Network__UnorderedGroup_3_1__Impl ;
    public final void rule__Network__UnorderedGroup_3_1__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13145:1: ( rule__Network__UnorderedGroup_3_1__Impl )
            // InternalDockerCompose.g:13146:2: rule__Network__UnorderedGroup_3_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__8"


    // $ANTLR start "rule__Volume__UnorderedGroup_3"
    // InternalDockerCompose.g:13153:1: rule__Volume__UnorderedGroup_3 : ( rule__Volume__UnorderedGroup_3__0 )? ;
    public final void rule__Volume__UnorderedGroup_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getVolumeAccess().getUnorderedGroup_3());
        	
        try {
            // InternalDockerCompose.g:13158:1: ( ( rule__Volume__UnorderedGroup_3__0 )? )
            // InternalDockerCompose.g:13159:2: ( rule__Volume__UnorderedGroup_3__0 )?
            {
            // InternalDockerCompose.g:13159:2: ( rule__Volume__UnorderedGroup_3__0 )?
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( LA141_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                alt141=1;
            }
            else if ( LA141_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                alt141=1;
            }
            else if ( LA141_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                alt141=1;
            }
            else if ( LA141_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                alt141=1;
            }
            else if ( LA141_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                alt141=1;
            }
            switch (alt141) {
                case 1 :
                    // InternalDockerCompose.g:13159:2: rule__Volume__UnorderedGroup_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__UnorderedGroup_3__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getVolumeAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3"


    // $ANTLR start "rule__Volume__UnorderedGroup_3__Impl"
    // InternalDockerCompose.g:13167:1: rule__Volume__UnorderedGroup_3__Impl : ( ({...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) ) ) ) ;
    public final void rule__Volume__UnorderedGroup_3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:13172:1: ( ( ({...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) ) ) ) )
            // InternalDockerCompose.g:13173:3: ( ({...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:13173:3: ( ({...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) ) ) )
            int alt142=5;
            int LA142_0 = input.LA(1);

            if ( LA142_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                alt142=1;
            }
            else if ( LA142_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                alt142=2;
            }
            else if ( LA142_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                alt142=3;
            }
            else if ( LA142_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                alt142=4;
            }
            else if ( LA142_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                alt142=5;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 142, 0, input);

                throw nvae;
            }
            switch (alt142) {
                case 1 :
                    // InternalDockerCompose.g:13174:3: ({...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:13174:3: ({...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) ) )
                    // InternalDockerCompose.g:13175:4: {...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                        throw new FailedPredicateException(input, "rule__Volume__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0)");
                    }
                    // InternalDockerCompose.g:13175:102: ( ( ( rule__Volume__Group_3_0__0 ) ) )
                    // InternalDockerCompose.g:13176:5: ( ( rule__Volume__Group_3_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:13182:5: ( ( rule__Volume__Group_3_0__0 ) )
                    // InternalDockerCompose.g:13183:6: ( rule__Volume__Group_3_0__0 )
                    {
                     before(grammarAccess.getVolumeAccess().getGroup_3_0()); 
                    // InternalDockerCompose.g:13184:6: ( rule__Volume__Group_3_0__0 )
                    // InternalDockerCompose.g:13184:7: rule__Volume__Group_3_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__Group_3_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeAccess().getGroup_3_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:13189:3: ({...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:13189:3: ({...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) ) )
                    // InternalDockerCompose.g:13190:4: {...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                        throw new FailedPredicateException(input, "rule__Volume__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1)");
                    }
                    // InternalDockerCompose.g:13190:102: ( ( ( rule__Volume__Group_3_1__0 ) ) )
                    // InternalDockerCompose.g:13191:5: ( ( rule__Volume__Group_3_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:13197:5: ( ( rule__Volume__Group_3_1__0 ) )
                    // InternalDockerCompose.g:13198:6: ( rule__Volume__Group_3_1__0 )
                    {
                     before(grammarAccess.getVolumeAccess().getGroup_3_1()); 
                    // InternalDockerCompose.g:13199:6: ( rule__Volume__Group_3_1__0 )
                    // InternalDockerCompose.g:13199:7: rule__Volume__Group_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__Group_3_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeAccess().getGroup_3_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:13204:3: ({...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:13204:3: ({...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) ) )
                    // InternalDockerCompose.g:13205:4: {...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                        throw new FailedPredicateException(input, "rule__Volume__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2)");
                    }
                    // InternalDockerCompose.g:13205:102: ( ( ( rule__Volume__Group_3_2__0 ) ) )
                    // InternalDockerCompose.g:13206:5: ( ( rule__Volume__Group_3_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:13212:5: ( ( rule__Volume__Group_3_2__0 ) )
                    // InternalDockerCompose.g:13213:6: ( rule__Volume__Group_3_2__0 )
                    {
                     before(grammarAccess.getVolumeAccess().getGroup_3_2()); 
                    // InternalDockerCompose.g:13214:6: ( rule__Volume__Group_3_2__0 )
                    // InternalDockerCompose.g:13214:7: rule__Volume__Group_3_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__Group_3_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeAccess().getGroup_3_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:13219:3: ({...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:13219:3: ({...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) ) )
                    // InternalDockerCompose.g:13220:4: {...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                        throw new FailedPredicateException(input, "rule__Volume__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3)");
                    }
                    // InternalDockerCompose.g:13220:102: ( ( ( rule__Volume__Group_3_3__0 ) ) )
                    // InternalDockerCompose.g:13221:5: ( ( rule__Volume__Group_3_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:13227:5: ( ( rule__Volume__Group_3_3__0 ) )
                    // InternalDockerCompose.g:13228:6: ( rule__Volume__Group_3_3__0 )
                    {
                     before(grammarAccess.getVolumeAccess().getGroup_3_3()); 
                    // InternalDockerCompose.g:13229:6: ( rule__Volume__Group_3_3__0 )
                    // InternalDockerCompose.g:13229:7: rule__Volume__Group_3_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__Group_3_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeAccess().getGroup_3_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:13234:3: ({...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:13234:3: ({...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) ) )
                    // InternalDockerCompose.g:13235:4: {...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                        throw new FailedPredicateException(input, "rule__Volume__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4)");
                    }
                    // InternalDockerCompose.g:13235:102: ( ( ( rule__Volume__Group_3_4__0 ) ) )
                    // InternalDockerCompose.g:13236:5: ( ( rule__Volume__Group_3_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:13242:5: ( ( rule__Volume__Group_3_4__0 ) )
                    // InternalDockerCompose.g:13243:6: ( rule__Volume__Group_3_4__0 )
                    {
                     before(grammarAccess.getVolumeAccess().getGroup_3_4()); 
                    // InternalDockerCompose.g:13244:6: ( rule__Volume__Group_3_4__0 )
                    // InternalDockerCompose.g:13244:7: rule__Volume__Group_3_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__Group_3_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeAccess().getGroup_3_4()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVolumeAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3__Impl"


    // $ANTLR start "rule__Volume__UnorderedGroup_3__0"
    // InternalDockerCompose.g:13257:1: rule__Volume__UnorderedGroup_3__0 : rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__1 )? ;
    public final void rule__Volume__UnorderedGroup_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13261:1: ( rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__1 )? )
            // InternalDockerCompose.g:13262:2: rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__1 )?
            {
            pushFollow(FOLLOW_64);
            rule__Volume__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:13263:2: ( rule__Volume__UnorderedGroup_3__1 )?
            int alt143=2;
            int LA143_0 = input.LA(1);

            if ( LA143_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                alt143=1;
            }
            else if ( LA143_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                alt143=1;
            }
            else if ( LA143_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                alt143=1;
            }
            else if ( LA143_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                alt143=1;
            }
            else if ( LA143_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                alt143=1;
            }
            switch (alt143) {
                case 1 :
                    // InternalDockerCompose.g:13263:2: rule__Volume__UnorderedGroup_3__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__UnorderedGroup_3__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3__0"


    // $ANTLR start "rule__Volume__UnorderedGroup_3__1"
    // InternalDockerCompose.g:13269:1: rule__Volume__UnorderedGroup_3__1 : rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__2 )? ;
    public final void rule__Volume__UnorderedGroup_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13273:1: ( rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__2 )? )
            // InternalDockerCompose.g:13274:2: rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__2 )?
            {
            pushFollow(FOLLOW_64);
            rule__Volume__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:13275:2: ( rule__Volume__UnorderedGroup_3__2 )?
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( LA144_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                alt144=1;
            }
            else if ( LA144_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                alt144=1;
            }
            else if ( LA144_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                alt144=1;
            }
            else if ( LA144_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                alt144=1;
            }
            else if ( LA144_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                alt144=1;
            }
            switch (alt144) {
                case 1 :
                    // InternalDockerCompose.g:13275:2: rule__Volume__UnorderedGroup_3__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__UnorderedGroup_3__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3__1"


    // $ANTLR start "rule__Volume__UnorderedGroup_3__2"
    // InternalDockerCompose.g:13281:1: rule__Volume__UnorderedGroup_3__2 : rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__3 )? ;
    public final void rule__Volume__UnorderedGroup_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13285:1: ( rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__3 )? )
            // InternalDockerCompose.g:13286:2: rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__3 )?
            {
            pushFollow(FOLLOW_64);
            rule__Volume__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:13287:2: ( rule__Volume__UnorderedGroup_3__3 )?
            int alt145=2;
            int LA145_0 = input.LA(1);

            if ( LA145_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                alt145=1;
            }
            else if ( LA145_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                alt145=1;
            }
            else if ( LA145_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                alt145=1;
            }
            else if ( LA145_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                alt145=1;
            }
            else if ( LA145_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                alt145=1;
            }
            switch (alt145) {
                case 1 :
                    // InternalDockerCompose.g:13287:2: rule__Volume__UnorderedGroup_3__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__UnorderedGroup_3__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3__2"


    // $ANTLR start "rule__Volume__UnorderedGroup_3__3"
    // InternalDockerCompose.g:13293:1: rule__Volume__UnorderedGroup_3__3 : rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__4 )? ;
    public final void rule__Volume__UnorderedGroup_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13297:1: ( rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__4 )? )
            // InternalDockerCompose.g:13298:2: rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__4 )?
            {
            pushFollow(FOLLOW_64);
            rule__Volume__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:13299:2: ( rule__Volume__UnorderedGroup_3__4 )?
            int alt146=2;
            int LA146_0 = input.LA(1);

            if ( LA146_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                alt146=1;
            }
            else if ( LA146_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                alt146=1;
            }
            else if ( LA146_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                alt146=1;
            }
            else if ( LA146_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                alt146=1;
            }
            else if ( LA146_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                alt146=1;
            }
            switch (alt146) {
                case 1 :
                    // InternalDockerCompose.g:13299:2: rule__Volume__UnorderedGroup_3__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__UnorderedGroup_3__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3__3"


    // $ANTLR start "rule__Volume__UnorderedGroup_3__4"
    // InternalDockerCompose.g:13305:1: rule__Volume__UnorderedGroup_3__4 : rule__Volume__UnorderedGroup_3__Impl ;
    public final void rule__Volume__UnorderedGroup_3__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13309:1: ( rule__Volume__UnorderedGroup_3__Impl )
            // InternalDockerCompose.g:13310:2: rule__Volume__UnorderedGroup_3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__UnorderedGroup_3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3__4"


    // $ANTLR start "rule__Config__UnorderedGroup_3"
    // InternalDockerCompose.g:13317:1: rule__Config__UnorderedGroup_3 : ( rule__Config__UnorderedGroup_3__0 )? ;
    public final void rule__Config__UnorderedGroup_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getConfigAccess().getUnorderedGroup_3());
        	
        try {
            // InternalDockerCompose.g:13322:1: ( ( rule__Config__UnorderedGroup_3__0 )? )
            // InternalDockerCompose.g:13323:2: ( rule__Config__UnorderedGroup_3__0 )?
            {
            // InternalDockerCompose.g:13323:2: ( rule__Config__UnorderedGroup_3__0 )?
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( LA147_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0) ) {
                alt147=1;
            }
            else if ( LA147_0 == 94 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1) ) {
                alt147=1;
            }
            else if ( LA147_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2) ) {
                alt147=1;
            }
            switch (alt147) {
                case 1 :
                    // InternalDockerCompose.g:13323:2: rule__Config__UnorderedGroup_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Config__UnorderedGroup_3__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getConfigAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__UnorderedGroup_3"


    // $ANTLR start "rule__Config__UnorderedGroup_3__Impl"
    // InternalDockerCompose.g:13331:1: rule__Config__UnorderedGroup_3__Impl : ( ({...}? => ( ( ( rule__Config__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_2__0 ) ) ) ) ) ;
    public final void rule__Config__UnorderedGroup_3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:13336:1: ( ( ({...}? => ( ( ( rule__Config__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_2__0 ) ) ) ) ) )
            // InternalDockerCompose.g:13337:3: ( ({...}? => ( ( ( rule__Config__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_2__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:13337:3: ( ({...}? => ( ( ( rule__Config__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_2__0 ) ) ) ) )
            int alt148=3;
            int LA148_0 = input.LA(1);

            if ( LA148_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0) ) {
                alt148=1;
            }
            else if ( LA148_0 == 94 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1) ) {
                alt148=2;
            }
            else if ( LA148_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2) ) {
                alt148=3;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 148, 0, input);

                throw nvae;
            }
            switch (alt148) {
                case 1 :
                    // InternalDockerCompose.g:13338:3: ({...}? => ( ( ( rule__Config__Group_3_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:13338:3: ({...}? => ( ( ( rule__Config__Group_3_0__0 ) ) ) )
                    // InternalDockerCompose.g:13339:4: {...}? => ( ( ( rule__Config__Group_3_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0) ) {
                        throw new FailedPredicateException(input, "rule__Config__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0)");
                    }
                    // InternalDockerCompose.g:13339:102: ( ( ( rule__Config__Group_3_0__0 ) ) )
                    // InternalDockerCompose.g:13340:5: ( ( rule__Config__Group_3_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:13346:5: ( ( rule__Config__Group_3_0__0 ) )
                    // InternalDockerCompose.g:13347:6: ( rule__Config__Group_3_0__0 )
                    {
                     before(grammarAccess.getConfigAccess().getGroup_3_0()); 
                    // InternalDockerCompose.g:13348:6: ( rule__Config__Group_3_0__0 )
                    // InternalDockerCompose.g:13348:7: rule__Config__Group_3_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Config__Group_3_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigAccess().getGroup_3_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:13353:3: ({...}? => ( ( ( rule__Config__Group_3_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:13353:3: ({...}? => ( ( ( rule__Config__Group_3_1__0 ) ) ) )
                    // InternalDockerCompose.g:13354:4: {...}? => ( ( ( rule__Config__Group_3_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1) ) {
                        throw new FailedPredicateException(input, "rule__Config__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1)");
                    }
                    // InternalDockerCompose.g:13354:102: ( ( ( rule__Config__Group_3_1__0 ) ) )
                    // InternalDockerCompose.g:13355:5: ( ( rule__Config__Group_3_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:13361:5: ( ( rule__Config__Group_3_1__0 ) )
                    // InternalDockerCompose.g:13362:6: ( rule__Config__Group_3_1__0 )
                    {
                     before(grammarAccess.getConfigAccess().getGroup_3_1()); 
                    // InternalDockerCompose.g:13363:6: ( rule__Config__Group_3_1__0 )
                    // InternalDockerCompose.g:13363:7: rule__Config__Group_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Config__Group_3_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigAccess().getGroup_3_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:13368:3: ({...}? => ( ( ( rule__Config__Group_3_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:13368:3: ({...}? => ( ( ( rule__Config__Group_3_2__0 ) ) ) )
                    // InternalDockerCompose.g:13369:4: {...}? => ( ( ( rule__Config__Group_3_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2) ) {
                        throw new FailedPredicateException(input, "rule__Config__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2)");
                    }
                    // InternalDockerCompose.g:13369:102: ( ( ( rule__Config__Group_3_2__0 ) ) )
                    // InternalDockerCompose.g:13370:5: ( ( rule__Config__Group_3_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:13376:5: ( ( rule__Config__Group_3_2__0 ) )
                    // InternalDockerCompose.g:13377:6: ( rule__Config__Group_3_2__0 )
                    {
                     before(grammarAccess.getConfigAccess().getGroup_3_2()); 
                    // InternalDockerCompose.g:13378:6: ( rule__Config__Group_3_2__0 )
                    // InternalDockerCompose.g:13378:7: rule__Config__Group_3_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Config__Group_3_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigAccess().getGroup_3_2()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConfigAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__UnorderedGroup_3__Impl"


    // $ANTLR start "rule__Config__UnorderedGroup_3__0"
    // InternalDockerCompose.g:13391:1: rule__Config__UnorderedGroup_3__0 : rule__Config__UnorderedGroup_3__Impl ( rule__Config__UnorderedGroup_3__1 )? ;
    public final void rule__Config__UnorderedGroup_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13395:1: ( rule__Config__UnorderedGroup_3__Impl ( rule__Config__UnorderedGroup_3__1 )? )
            // InternalDockerCompose.g:13396:2: rule__Config__UnorderedGroup_3__Impl ( rule__Config__UnorderedGroup_3__1 )?
            {
            pushFollow(FOLLOW_65);
            rule__Config__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:13397:2: ( rule__Config__UnorderedGroup_3__1 )?
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( LA149_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0) ) {
                alt149=1;
            }
            else if ( LA149_0 == 94 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1) ) {
                alt149=1;
            }
            else if ( LA149_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2) ) {
                alt149=1;
            }
            switch (alt149) {
                case 1 :
                    // InternalDockerCompose.g:13397:2: rule__Config__UnorderedGroup_3__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Config__UnorderedGroup_3__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__UnorderedGroup_3__0"


    // $ANTLR start "rule__Config__UnorderedGroup_3__1"
    // InternalDockerCompose.g:13403:1: rule__Config__UnorderedGroup_3__1 : rule__Config__UnorderedGroup_3__Impl ( rule__Config__UnorderedGroup_3__2 )? ;
    public final void rule__Config__UnorderedGroup_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13407:1: ( rule__Config__UnorderedGroup_3__Impl ( rule__Config__UnorderedGroup_3__2 )? )
            // InternalDockerCompose.g:13408:2: rule__Config__UnorderedGroup_3__Impl ( rule__Config__UnorderedGroup_3__2 )?
            {
            pushFollow(FOLLOW_65);
            rule__Config__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:13409:2: ( rule__Config__UnorderedGroup_3__2 )?
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( LA150_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0) ) {
                alt150=1;
            }
            else if ( LA150_0 == 94 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1) ) {
                alt150=1;
            }
            else if ( LA150_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2) ) {
                alt150=1;
            }
            switch (alt150) {
                case 1 :
                    // InternalDockerCompose.g:13409:2: rule__Config__UnorderedGroup_3__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Config__UnorderedGroup_3__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__UnorderedGroup_3__1"


    // $ANTLR start "rule__Config__UnorderedGroup_3__2"
    // InternalDockerCompose.g:13415:1: rule__Config__UnorderedGroup_3__2 : rule__Config__UnorderedGroup_3__Impl ;
    public final void rule__Config__UnorderedGroup_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13419:1: ( rule__Config__UnorderedGroup_3__Impl )
            // InternalDockerCompose.g:13420:2: rule__Config__UnorderedGroup_3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Config__UnorderedGroup_3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__UnorderedGroup_3__2"


    // $ANTLR start "rule__Secret__UnorderedGroup_3"
    // InternalDockerCompose.g:13427:1: rule__Secret__UnorderedGroup_3 : ( rule__Secret__UnorderedGroup_3__0 )? ;
    public final void rule__Secret__UnorderedGroup_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getSecretAccess().getUnorderedGroup_3());
        	
        try {
            // InternalDockerCompose.g:13432:1: ( ( rule__Secret__UnorderedGroup_3__0 )? )
            // InternalDockerCompose.g:13433:2: ( rule__Secret__UnorderedGroup_3__0 )?
            {
            // InternalDockerCompose.g:13433:2: ( rule__Secret__UnorderedGroup_3__0 )?
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( LA151_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0) ) {
                alt151=1;
            }
            else if ( LA151_0 == 94 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1) ) {
                alt151=1;
            }
            else if ( LA151_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2) ) {
                alt151=1;
            }
            else if ( LA151_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3) ) {
                alt151=1;
            }
            switch (alt151) {
                case 1 :
                    // InternalDockerCompose.g:13433:2: rule__Secret__UnorderedGroup_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__UnorderedGroup_3__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getSecretAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__UnorderedGroup_3"


    // $ANTLR start "rule__Secret__UnorderedGroup_3__Impl"
    // InternalDockerCompose.g:13441:1: rule__Secret__UnorderedGroup_3__Impl : ( ({...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) ) ) ) ;
    public final void rule__Secret__UnorderedGroup_3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:13446:1: ( ( ({...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) ) ) ) )
            // InternalDockerCompose.g:13447:3: ( ({...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:13447:3: ( ({...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) ) ) )
            int alt152=4;
            int LA152_0 = input.LA(1);

            if ( LA152_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0) ) {
                alt152=1;
            }
            else if ( LA152_0 == 94 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1) ) {
                alt152=2;
            }
            else if ( LA152_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2) ) {
                alt152=3;
            }
            else if ( LA152_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3) ) {
                alt152=4;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 152, 0, input);

                throw nvae;
            }
            switch (alt152) {
                case 1 :
                    // InternalDockerCompose.g:13448:3: ({...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:13448:3: ({...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) ) )
                    // InternalDockerCompose.g:13449:4: {...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0) ) {
                        throw new FailedPredicateException(input, "rule__Secret__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0)");
                    }
                    // InternalDockerCompose.g:13449:102: ( ( ( rule__Secret__Group_3_0__0 ) ) )
                    // InternalDockerCompose.g:13450:5: ( ( rule__Secret__Group_3_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:13456:5: ( ( rule__Secret__Group_3_0__0 ) )
                    // InternalDockerCompose.g:13457:6: ( rule__Secret__Group_3_0__0 )
                    {
                     before(grammarAccess.getSecretAccess().getGroup_3_0()); 
                    // InternalDockerCompose.g:13458:6: ( rule__Secret__Group_3_0__0 )
                    // InternalDockerCompose.g:13458:7: rule__Secret__Group_3_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__Group_3_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretAccess().getGroup_3_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:13463:3: ({...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:13463:3: ({...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) ) )
                    // InternalDockerCompose.g:13464:4: {...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1) ) {
                        throw new FailedPredicateException(input, "rule__Secret__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1)");
                    }
                    // InternalDockerCompose.g:13464:102: ( ( ( rule__Secret__Group_3_1__0 ) ) )
                    // InternalDockerCompose.g:13465:5: ( ( rule__Secret__Group_3_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:13471:5: ( ( rule__Secret__Group_3_1__0 ) )
                    // InternalDockerCompose.g:13472:6: ( rule__Secret__Group_3_1__0 )
                    {
                     before(grammarAccess.getSecretAccess().getGroup_3_1()); 
                    // InternalDockerCompose.g:13473:6: ( rule__Secret__Group_3_1__0 )
                    // InternalDockerCompose.g:13473:7: rule__Secret__Group_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__Group_3_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretAccess().getGroup_3_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:13478:3: ({...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:13478:3: ({...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) ) )
                    // InternalDockerCompose.g:13479:4: {...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2) ) {
                        throw new FailedPredicateException(input, "rule__Secret__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2)");
                    }
                    // InternalDockerCompose.g:13479:102: ( ( ( rule__Secret__Group_3_2__0 ) ) )
                    // InternalDockerCompose.g:13480:5: ( ( rule__Secret__Group_3_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:13486:5: ( ( rule__Secret__Group_3_2__0 ) )
                    // InternalDockerCompose.g:13487:6: ( rule__Secret__Group_3_2__0 )
                    {
                     before(grammarAccess.getSecretAccess().getGroup_3_2()); 
                    // InternalDockerCompose.g:13488:6: ( rule__Secret__Group_3_2__0 )
                    // InternalDockerCompose.g:13488:7: rule__Secret__Group_3_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__Group_3_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretAccess().getGroup_3_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:13493:3: ({...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:13493:3: ({...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) ) )
                    // InternalDockerCompose.g:13494:4: {...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3) ) {
                        throw new FailedPredicateException(input, "rule__Secret__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3)");
                    }
                    // InternalDockerCompose.g:13494:102: ( ( ( rule__Secret__Group_3_3__0 ) ) )
                    // InternalDockerCompose.g:13495:5: ( ( rule__Secret__Group_3_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:13501:5: ( ( rule__Secret__Group_3_3__0 ) )
                    // InternalDockerCompose.g:13502:6: ( rule__Secret__Group_3_3__0 )
                    {
                     before(grammarAccess.getSecretAccess().getGroup_3_3()); 
                    // InternalDockerCompose.g:13503:6: ( rule__Secret__Group_3_3__0 )
                    // InternalDockerCompose.g:13503:7: rule__Secret__Group_3_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__Group_3_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretAccess().getGroup_3_3()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSecretAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__UnorderedGroup_3__Impl"


    // $ANTLR start "rule__Secret__UnorderedGroup_3__0"
    // InternalDockerCompose.g:13516:1: rule__Secret__UnorderedGroup_3__0 : rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__1 )? ;
    public final void rule__Secret__UnorderedGroup_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13520:1: ( rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__1 )? )
            // InternalDockerCompose.g:13521:2: rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__1 )?
            {
            pushFollow(FOLLOW_66);
            rule__Secret__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:13522:2: ( rule__Secret__UnorderedGroup_3__1 )?
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( LA153_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0) ) {
                alt153=1;
            }
            else if ( LA153_0 == 94 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1) ) {
                alt153=1;
            }
            else if ( LA153_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2) ) {
                alt153=1;
            }
            else if ( LA153_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3) ) {
                alt153=1;
            }
            switch (alt153) {
                case 1 :
                    // InternalDockerCompose.g:13522:2: rule__Secret__UnorderedGroup_3__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__UnorderedGroup_3__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__UnorderedGroup_3__0"


    // $ANTLR start "rule__Secret__UnorderedGroup_3__1"
    // InternalDockerCompose.g:13528:1: rule__Secret__UnorderedGroup_3__1 : rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__2 )? ;
    public final void rule__Secret__UnorderedGroup_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13532:1: ( rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__2 )? )
            // InternalDockerCompose.g:13533:2: rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__2 )?
            {
            pushFollow(FOLLOW_66);
            rule__Secret__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:13534:2: ( rule__Secret__UnorderedGroup_3__2 )?
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( LA154_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0) ) {
                alt154=1;
            }
            else if ( LA154_0 == 94 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1) ) {
                alt154=1;
            }
            else if ( LA154_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2) ) {
                alt154=1;
            }
            else if ( LA154_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3) ) {
                alt154=1;
            }
            switch (alt154) {
                case 1 :
                    // InternalDockerCompose.g:13534:2: rule__Secret__UnorderedGroup_3__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__UnorderedGroup_3__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__UnorderedGroup_3__1"


    // $ANTLR start "rule__Secret__UnorderedGroup_3__2"
    // InternalDockerCompose.g:13540:1: rule__Secret__UnorderedGroup_3__2 : rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__3 )? ;
    public final void rule__Secret__UnorderedGroup_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13544:1: ( rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__3 )? )
            // InternalDockerCompose.g:13545:2: rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__3 )?
            {
            pushFollow(FOLLOW_66);
            rule__Secret__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:13546:2: ( rule__Secret__UnorderedGroup_3__3 )?
            int alt155=2;
            int LA155_0 = input.LA(1);

            if ( LA155_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0) ) {
                alt155=1;
            }
            else if ( LA155_0 == 94 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1) ) {
                alt155=1;
            }
            else if ( LA155_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2) ) {
                alt155=1;
            }
            else if ( LA155_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3) ) {
                alt155=1;
            }
            switch (alt155) {
                case 1 :
                    // InternalDockerCompose.g:13546:2: rule__Secret__UnorderedGroup_3__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__UnorderedGroup_3__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__UnorderedGroup_3__2"


    // $ANTLR start "rule__Secret__UnorderedGroup_3__3"
    // InternalDockerCompose.g:13552:1: rule__Secret__UnorderedGroup_3__3 : rule__Secret__UnorderedGroup_3__Impl ;
    public final void rule__Secret__UnorderedGroup_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13556:1: ( rule__Secret__UnorderedGroup_3__Impl )
            // InternalDockerCompose.g:13557:2: rule__Secret__UnorderedGroup_3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Secret__UnorderedGroup_3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__UnorderedGroup_3__3"


    // $ANTLR start "rule__IPAM__UnorderedGroup_1"
    // InternalDockerCompose.g:13564:1: rule__IPAM__UnorderedGroup_1 : ( rule__IPAM__UnorderedGroup_1__0 )? ;
    public final void rule__IPAM__UnorderedGroup_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getIPAMAccess().getUnorderedGroup_1());
        	
        try {
            // InternalDockerCompose.g:13569:1: ( ( rule__IPAM__UnorderedGroup_1__0 )? )
            // InternalDockerCompose.g:13570:2: ( rule__IPAM__UnorderedGroup_1__0 )?
            {
            // InternalDockerCompose.g:13570:2: ( rule__IPAM__UnorderedGroup_1__0 )?
            int alt156=2;
            alt156 = dfa156.predict(input);
            switch (alt156) {
                case 1 :
                    // InternalDockerCompose.g:13570:2: rule__IPAM__UnorderedGroup_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAM__UnorderedGroup_1__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getIPAMAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__UnorderedGroup_1"


    // $ANTLR start "rule__IPAM__UnorderedGroup_1__Impl"
    // InternalDockerCompose.g:13578:1: rule__IPAM__UnorderedGroup_1__Impl : ( ({...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) ) ) ) ;
    public final void rule__IPAM__UnorderedGroup_1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:13583:1: ( ( ({...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) ) ) ) )
            // InternalDockerCompose.g:13584:3: ( ({...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:13584:3: ( ({...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) ) ) )
            int alt157=3;
            int LA157_0 = input.LA(1);

            if ( LA157_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                alt157=1;
            }
            else if ( LA157_0 == 95 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1) ) {
                alt157=2;
            }
            else if ( LA157_0 == 96 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2) ) {
                alt157=3;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 157, 0, input);

                throw nvae;
            }
            switch (alt157) {
                case 1 :
                    // InternalDockerCompose.g:13585:3: ({...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:13585:3: ({...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) ) )
                    // InternalDockerCompose.g:13586:4: {...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                        throw new FailedPredicateException(input, "rule__IPAM__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0)");
                    }
                    // InternalDockerCompose.g:13586:100: ( ( ( rule__IPAM__Group_1_0__0 ) ) )
                    // InternalDockerCompose.g:13587:5: ( ( rule__IPAM__Group_1_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:13593:5: ( ( rule__IPAM__Group_1_0__0 ) )
                    // InternalDockerCompose.g:13594:6: ( rule__IPAM__Group_1_0__0 )
                    {
                     before(grammarAccess.getIPAMAccess().getGroup_1_0()); 
                    // InternalDockerCompose.g:13595:6: ( rule__IPAM__Group_1_0__0 )
                    // InternalDockerCompose.g:13595:7: rule__IPAM__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAM__Group_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMAccess().getGroup_1_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:13600:3: ({...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:13600:3: ({...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) ) )
                    // InternalDockerCompose.g:13601:4: {...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1) ) {
                        throw new FailedPredicateException(input, "rule__IPAM__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1)");
                    }
                    // InternalDockerCompose.g:13601:100: ( ( ( rule__IPAM__Group_1_1__0 ) ) )
                    // InternalDockerCompose.g:13602:5: ( ( rule__IPAM__Group_1_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:13608:5: ( ( rule__IPAM__Group_1_1__0 ) )
                    // InternalDockerCompose.g:13609:6: ( rule__IPAM__Group_1_1__0 )
                    {
                     before(grammarAccess.getIPAMAccess().getGroup_1_1()); 
                    // InternalDockerCompose.g:13610:6: ( rule__IPAM__Group_1_1__0 )
                    // InternalDockerCompose.g:13610:7: rule__IPAM__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAM__Group_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMAccess().getGroup_1_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:13615:3: ({...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:13615:3: ({...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) ) )
                    // InternalDockerCompose.g:13616:4: {...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2) ) {
                        throw new FailedPredicateException(input, "rule__IPAM__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2)");
                    }
                    // InternalDockerCompose.g:13616:100: ( ( ( rule__IPAM__Group_1_2__0 ) ) )
                    // InternalDockerCompose.g:13617:5: ( ( rule__IPAM__Group_1_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:13623:5: ( ( rule__IPAM__Group_1_2__0 ) )
                    // InternalDockerCompose.g:13624:6: ( rule__IPAM__Group_1_2__0 )
                    {
                     before(grammarAccess.getIPAMAccess().getGroup_1_2()); 
                    // InternalDockerCompose.g:13625:6: ( rule__IPAM__Group_1_2__0 )
                    // InternalDockerCompose.g:13625:7: rule__IPAM__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAM__Group_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMAccess().getGroup_1_2()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIPAMAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__UnorderedGroup_1__Impl"


    // $ANTLR start "rule__IPAM__UnorderedGroup_1__0"
    // InternalDockerCompose.g:13638:1: rule__IPAM__UnorderedGroup_1__0 : rule__IPAM__UnorderedGroup_1__Impl ( rule__IPAM__UnorderedGroup_1__1 )? ;
    public final void rule__IPAM__UnorderedGroup_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13642:1: ( rule__IPAM__UnorderedGroup_1__Impl ( rule__IPAM__UnorderedGroup_1__1 )? )
            // InternalDockerCompose.g:13643:2: rule__IPAM__UnorderedGroup_1__Impl ( rule__IPAM__UnorderedGroup_1__1 )?
            {
            pushFollow(FOLLOW_67);
            rule__IPAM__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:13644:2: ( rule__IPAM__UnorderedGroup_1__1 )?
            int alt158=2;
            alt158 = dfa158.predict(input);
            switch (alt158) {
                case 1 :
                    // InternalDockerCompose.g:13644:2: rule__IPAM__UnorderedGroup_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAM__UnorderedGroup_1__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__UnorderedGroup_1__0"


    // $ANTLR start "rule__IPAM__UnorderedGroup_1__1"
    // InternalDockerCompose.g:13650:1: rule__IPAM__UnorderedGroup_1__1 : rule__IPAM__UnorderedGroup_1__Impl ( rule__IPAM__UnorderedGroup_1__2 )? ;
    public final void rule__IPAM__UnorderedGroup_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13654:1: ( rule__IPAM__UnorderedGroup_1__Impl ( rule__IPAM__UnorderedGroup_1__2 )? )
            // InternalDockerCompose.g:13655:2: rule__IPAM__UnorderedGroup_1__Impl ( rule__IPAM__UnorderedGroup_1__2 )?
            {
            pushFollow(FOLLOW_67);
            rule__IPAM__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:13656:2: ( rule__IPAM__UnorderedGroup_1__2 )?
            int alt159=2;
            alt159 = dfa159.predict(input);
            switch (alt159) {
                case 1 :
                    // InternalDockerCompose.g:13656:2: rule__IPAM__UnorderedGroup_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAM__UnorderedGroup_1__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__UnorderedGroup_1__1"


    // $ANTLR start "rule__IPAM__UnorderedGroup_1__2"
    // InternalDockerCompose.g:13662:1: rule__IPAM__UnorderedGroup_1__2 : rule__IPAM__UnorderedGroup_1__Impl ;
    public final void rule__IPAM__UnorderedGroup_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13666:1: ( rule__IPAM__UnorderedGroup_1__Impl )
            // InternalDockerCompose.g:13667:2: rule__IPAM__UnorderedGroup_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__UnorderedGroup_1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__UnorderedGroup_1__2"


    // $ANTLR start "rule__IPAMConfig__UnorderedGroup_1"
    // InternalDockerCompose.g:13674:1: rule__IPAMConfig__UnorderedGroup_1 : ( rule__IPAMConfig__UnorderedGroup_1__0 )? ;
    public final void rule__IPAMConfig__UnorderedGroup_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1());
        	
        try {
            // InternalDockerCompose.g:13679:1: ( ( rule__IPAMConfig__UnorderedGroup_1__0 )? )
            // InternalDockerCompose.g:13680:2: ( rule__IPAMConfig__UnorderedGroup_1__0 )?
            {
            // InternalDockerCompose.g:13680:2: ( rule__IPAMConfig__UnorderedGroup_1__0 )?
            int alt160=2;
            int LA160_0 = input.LA(1);

            if ( LA160_0 == 97 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0) ) {
                alt160=1;
            }
            else if ( LA160_0 == 98 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1) ) {
                alt160=1;
            }
            else if ( LA160_0 == 99 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2) ) {
                alt160=1;
            }
            else if ( LA160_0 == 100 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3) ) {
                alt160=1;
            }
            switch (alt160) {
                case 1 :
                    // InternalDockerCompose.g:13680:2: rule__IPAMConfig__UnorderedGroup_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__UnorderedGroup_1__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__UnorderedGroup_1"


    // $ANTLR start "rule__IPAMConfig__UnorderedGroup_1__Impl"
    // InternalDockerCompose.g:13688:1: rule__IPAMConfig__UnorderedGroup_1__Impl : ( ({...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) ) ) ) ;
    public final void rule__IPAMConfig__UnorderedGroup_1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:13693:1: ( ( ({...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) ) ) ) )
            // InternalDockerCompose.g:13694:3: ( ({...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:13694:3: ( ({...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) ) ) )
            int alt161=4;
            int LA161_0 = input.LA(1);

            if ( LA161_0 == 97 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0) ) {
                alt161=1;
            }
            else if ( LA161_0 == 98 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1) ) {
                alt161=2;
            }
            else if ( LA161_0 == 99 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2) ) {
                alt161=3;
            }
            else if ( LA161_0 == 100 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3) ) {
                alt161=4;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 161, 0, input);

                throw nvae;
            }
            switch (alt161) {
                case 1 :
                    // InternalDockerCompose.g:13695:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:13695:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) ) )
                    // InternalDockerCompose.g:13696:4: {...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0) ) {
                        throw new FailedPredicateException(input, "rule__IPAMConfig__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0)");
                    }
                    // InternalDockerCompose.g:13696:106: ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) )
                    // InternalDockerCompose.g:13697:5: ( ( rule__IPAMConfig__Group_1_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:13703:5: ( ( rule__IPAMConfig__Group_1_0__0 ) )
                    // InternalDockerCompose.g:13704:6: ( rule__IPAMConfig__Group_1_0__0 )
                    {
                     before(grammarAccess.getIPAMConfigAccess().getGroup_1_0()); 
                    // InternalDockerCompose.g:13705:6: ( rule__IPAMConfig__Group_1_0__0 )
                    // InternalDockerCompose.g:13705:7: rule__IPAMConfig__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__Group_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMConfigAccess().getGroup_1_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:13710:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:13710:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) ) )
                    // InternalDockerCompose.g:13711:4: {...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1) ) {
                        throw new FailedPredicateException(input, "rule__IPAMConfig__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1)");
                    }
                    // InternalDockerCompose.g:13711:106: ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) )
                    // InternalDockerCompose.g:13712:5: ( ( rule__IPAMConfig__Group_1_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:13718:5: ( ( rule__IPAMConfig__Group_1_1__0 ) )
                    // InternalDockerCompose.g:13719:6: ( rule__IPAMConfig__Group_1_1__0 )
                    {
                     before(grammarAccess.getIPAMConfigAccess().getGroup_1_1()); 
                    // InternalDockerCompose.g:13720:6: ( rule__IPAMConfig__Group_1_1__0 )
                    // InternalDockerCompose.g:13720:7: rule__IPAMConfig__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__Group_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMConfigAccess().getGroup_1_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:13725:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:13725:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) ) )
                    // InternalDockerCompose.g:13726:4: {...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2) ) {
                        throw new FailedPredicateException(input, "rule__IPAMConfig__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2)");
                    }
                    // InternalDockerCompose.g:13726:106: ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) )
                    // InternalDockerCompose.g:13727:5: ( ( rule__IPAMConfig__Group_1_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:13733:5: ( ( rule__IPAMConfig__Group_1_2__0 ) )
                    // InternalDockerCompose.g:13734:6: ( rule__IPAMConfig__Group_1_2__0 )
                    {
                     before(grammarAccess.getIPAMConfigAccess().getGroup_1_2()); 
                    // InternalDockerCompose.g:13735:6: ( rule__IPAMConfig__Group_1_2__0 )
                    // InternalDockerCompose.g:13735:7: rule__IPAMConfig__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__Group_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMConfigAccess().getGroup_1_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:13740:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:13740:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) ) )
                    // InternalDockerCompose.g:13741:4: {...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3) ) {
                        throw new FailedPredicateException(input, "rule__IPAMConfig__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3)");
                    }
                    // InternalDockerCompose.g:13741:106: ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) )
                    // InternalDockerCompose.g:13742:5: ( ( rule__IPAMConfig__Group_1_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:13748:5: ( ( rule__IPAMConfig__Group_1_3__0 ) )
                    // InternalDockerCompose.g:13749:6: ( rule__IPAMConfig__Group_1_3__0 )
                    {
                     before(grammarAccess.getIPAMConfigAccess().getGroup_1_3()); 
                    // InternalDockerCompose.g:13750:6: ( rule__IPAMConfig__Group_1_3__0 )
                    // InternalDockerCompose.g:13750:7: rule__IPAMConfig__Group_1_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__Group_1_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMConfigAccess().getGroup_1_3()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__UnorderedGroup_1__Impl"


    // $ANTLR start "rule__IPAMConfig__UnorderedGroup_1__0"
    // InternalDockerCompose.g:13763:1: rule__IPAMConfig__UnorderedGroup_1__0 : rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__1 )? ;
    public final void rule__IPAMConfig__UnorderedGroup_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13767:1: ( rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__1 )? )
            // InternalDockerCompose.g:13768:2: rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__1 )?
            {
            pushFollow(FOLLOW_68);
            rule__IPAMConfig__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:13769:2: ( rule__IPAMConfig__UnorderedGroup_1__1 )?
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( LA162_0 == 97 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0) ) {
                alt162=1;
            }
            else if ( LA162_0 == 98 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1) ) {
                alt162=1;
            }
            else if ( LA162_0 == 99 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2) ) {
                alt162=1;
            }
            else if ( LA162_0 == 100 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3) ) {
                alt162=1;
            }
            switch (alt162) {
                case 1 :
                    // InternalDockerCompose.g:13769:2: rule__IPAMConfig__UnorderedGroup_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__UnorderedGroup_1__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__UnorderedGroup_1__0"


    // $ANTLR start "rule__IPAMConfig__UnorderedGroup_1__1"
    // InternalDockerCompose.g:13775:1: rule__IPAMConfig__UnorderedGroup_1__1 : rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__2 )? ;
    public final void rule__IPAMConfig__UnorderedGroup_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13779:1: ( rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__2 )? )
            // InternalDockerCompose.g:13780:2: rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__2 )?
            {
            pushFollow(FOLLOW_68);
            rule__IPAMConfig__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:13781:2: ( rule__IPAMConfig__UnorderedGroup_1__2 )?
            int alt163=2;
            int LA163_0 = input.LA(1);

            if ( LA163_0 == 97 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0) ) {
                alt163=1;
            }
            else if ( LA163_0 == 98 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1) ) {
                alt163=1;
            }
            else if ( LA163_0 == 99 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2) ) {
                alt163=1;
            }
            else if ( LA163_0 == 100 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3) ) {
                alt163=1;
            }
            switch (alt163) {
                case 1 :
                    // InternalDockerCompose.g:13781:2: rule__IPAMConfig__UnorderedGroup_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__UnorderedGroup_1__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__UnorderedGroup_1__1"


    // $ANTLR start "rule__IPAMConfig__UnorderedGroup_1__2"
    // InternalDockerCompose.g:13787:1: rule__IPAMConfig__UnorderedGroup_1__2 : rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__3 )? ;
    public final void rule__IPAMConfig__UnorderedGroup_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13791:1: ( rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__3 )? )
            // InternalDockerCompose.g:13792:2: rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__3 )?
            {
            pushFollow(FOLLOW_68);
            rule__IPAMConfig__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:13793:2: ( rule__IPAMConfig__UnorderedGroup_1__3 )?
            int alt164=2;
            int LA164_0 = input.LA(1);

            if ( LA164_0 == 97 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0) ) {
                alt164=1;
            }
            else if ( LA164_0 == 98 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1) ) {
                alt164=1;
            }
            else if ( LA164_0 == 99 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2) ) {
                alt164=1;
            }
            else if ( LA164_0 == 100 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3) ) {
                alt164=1;
            }
            switch (alt164) {
                case 1 :
                    // InternalDockerCompose.g:13793:2: rule__IPAMConfig__UnorderedGroup_1__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__UnorderedGroup_1__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__UnorderedGroup_1__2"


    // $ANTLR start "rule__IPAMConfig__UnorderedGroup_1__3"
    // InternalDockerCompose.g:13799:1: rule__IPAMConfig__UnorderedGroup_1__3 : rule__IPAMConfig__UnorderedGroup_1__Impl ;
    public final void rule__IPAMConfig__UnorderedGroup_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13803:1: ( rule__IPAMConfig__UnorderedGroup_1__Impl )
            // InternalDockerCompose.g:13804:2: rule__IPAMConfig__UnorderedGroup_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__UnorderedGroup_1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__UnorderedGroup_1__3"


    // $ANTLR start "rule__DockerCompose__VersionAssignment_0_1"
    // InternalDockerCompose.g:13811:1: rule__DockerCompose__VersionAssignment_0_1 : ( ruleVersion ) ;
    public final void rule__DockerCompose__VersionAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13815:1: ( ( ruleVersion ) )
            // InternalDockerCompose.g:13816:2: ( ruleVersion )
            {
            // InternalDockerCompose.g:13816:2: ( ruleVersion )
            // InternalDockerCompose.g:13817:3: ruleVersion
            {
             before(grammarAccess.getDockerComposeAccess().getVersionVersionParserRuleCall_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleVersion();

            state._fsp--;

             after(grammarAccess.getDockerComposeAccess().getVersionVersionParserRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__VersionAssignment_0_1"


    // $ANTLR start "rule__DockerCompose__ServicesAssignment_1_1"
    // InternalDockerCompose.g:13826:1: rule__DockerCompose__ServicesAssignment_1_1 : ( ruleService ) ;
    public final void rule__DockerCompose__ServicesAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13830:1: ( ( ruleService ) )
            // InternalDockerCompose.g:13831:2: ( ruleService )
            {
            // InternalDockerCompose.g:13831:2: ( ruleService )
            // InternalDockerCompose.g:13832:3: ruleService
            {
             before(grammarAccess.getDockerComposeAccess().getServicesServiceParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleService();

            state._fsp--;

             after(grammarAccess.getDockerComposeAccess().getServicesServiceParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__ServicesAssignment_1_1"


    // $ANTLR start "rule__DockerCompose__VolumesAssignment_2_1"
    // InternalDockerCompose.g:13841:1: rule__DockerCompose__VolumesAssignment_2_1 : ( ruleVolume ) ;
    public final void rule__DockerCompose__VolumesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13845:1: ( ( ruleVolume ) )
            // InternalDockerCompose.g:13846:2: ( ruleVolume )
            {
            // InternalDockerCompose.g:13846:2: ( ruleVolume )
            // InternalDockerCompose.g:13847:3: ruleVolume
            {
             before(grammarAccess.getDockerComposeAccess().getVolumesVolumeParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleVolume();

            state._fsp--;

             after(grammarAccess.getDockerComposeAccess().getVolumesVolumeParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__VolumesAssignment_2_1"


    // $ANTLR start "rule__DockerCompose__ConfigsAssignment_3_1"
    // InternalDockerCompose.g:13856:1: rule__DockerCompose__ConfigsAssignment_3_1 : ( ruleConfig ) ;
    public final void rule__DockerCompose__ConfigsAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13860:1: ( ( ruleConfig ) )
            // InternalDockerCompose.g:13861:2: ( ruleConfig )
            {
            // InternalDockerCompose.g:13861:2: ( ruleConfig )
            // InternalDockerCompose.g:13862:3: ruleConfig
            {
             before(grammarAccess.getDockerComposeAccess().getConfigsConfigParserRuleCall_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleConfig();

            state._fsp--;

             after(grammarAccess.getDockerComposeAccess().getConfigsConfigParserRuleCall_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__ConfigsAssignment_3_1"


    // $ANTLR start "rule__DockerCompose__SecretsAssignment_4_1"
    // InternalDockerCompose.g:13871:1: rule__DockerCompose__SecretsAssignment_4_1 : ( ruleSecret ) ;
    public final void rule__DockerCompose__SecretsAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13875:1: ( ( ruleSecret ) )
            // InternalDockerCompose.g:13876:2: ( ruleSecret )
            {
            // InternalDockerCompose.g:13876:2: ( ruleSecret )
            // InternalDockerCompose.g:13877:3: ruleSecret
            {
             before(grammarAccess.getDockerComposeAccess().getSecretsSecretParserRuleCall_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSecret();

            state._fsp--;

             after(grammarAccess.getDockerComposeAccess().getSecretsSecretParserRuleCall_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__SecretsAssignment_4_1"


    // $ANTLR start "rule__DockerCompose__NetworksAssignment_5_1"
    // InternalDockerCompose.g:13886:1: rule__DockerCompose__NetworksAssignment_5_1 : ( ruleNetwork ) ;
    public final void rule__DockerCompose__NetworksAssignment_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13890:1: ( ( ruleNetwork ) )
            // InternalDockerCompose.g:13891:2: ( ruleNetwork )
            {
            // InternalDockerCompose.g:13891:2: ( ruleNetwork )
            // InternalDockerCompose.g:13892:3: ruleNetwork
            {
             before(grammarAccess.getDockerComposeAccess().getNetworksNetworkParserRuleCall_5_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNetwork();

            state._fsp--;

             after(grammarAccess.getDockerComposeAccess().getNetworksNetworkParserRuleCall_5_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__NetworksAssignment_5_1"


    // $ANTLR start "rule__Service__NameAssignment_1"
    // InternalDockerCompose.g:13901:1: rule__Service__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Service__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13905:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:13906:2: ( RULE_ID )
            {
            // InternalDockerCompose.g:13906:2: ( RULE_ID )
            // InternalDockerCompose.g:13907:3: RULE_ID
            {
             before(grammarAccess.getServiceAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__NameAssignment_1"


    // $ANTLR start "rule__Service__BuildAssignment_3_0_1"
    // InternalDockerCompose.g:13916:1: rule__Service__BuildAssignment_3_0_1 : ( rulePATH ) ;
    public final void rule__Service__BuildAssignment_3_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13920:1: ( ( rulePATH ) )
            // InternalDockerCompose.g:13921:2: ( rulePATH )
            {
            // InternalDockerCompose.g:13921:2: ( rulePATH )
            // InternalDockerCompose.g:13922:3: rulePATH
            {
             before(grammarAccess.getServiceAccess().getBuildPATHParserRuleCall_3_0_1_0()); 
            pushFollow(FOLLOW_2);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getBuildPATHParserRuleCall_3_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__BuildAssignment_3_0_1"


    // $ANTLR start "rule__Service__ImageAssignment_3_1_1"
    // InternalDockerCompose.g:13931:1: rule__Service__ImageAssignment_3_1_1 : ( ruleImage ) ;
    public final void rule__Service__ImageAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13935:1: ( ( ruleImage ) )
            // InternalDockerCompose.g:13936:2: ( ruleImage )
            {
            // InternalDockerCompose.g:13936:2: ( ruleImage )
            // InternalDockerCompose.g:13937:3: ruleImage
            {
             before(grammarAccess.getServiceAccess().getImageImageParserRuleCall_3_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleImage();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getImageImageParserRuleCall_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__ImageAssignment_3_1_1"


    // $ANTLR start "rule__Service__Cpu_countAssignment_3_2_1"
    // InternalDockerCompose.g:13946:1: rule__Service__Cpu_countAssignment_3_2_1 : ( ruleEInt ) ;
    public final void rule__Service__Cpu_countAssignment_3_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13950:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:13951:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:13951:2: ( ruleEInt )
            // InternalDockerCompose.g:13952:3: ruleEInt
            {
             before(grammarAccess.getServiceAccess().getCpu_countEIntParserRuleCall_3_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getCpu_countEIntParserRuleCall_3_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Cpu_countAssignment_3_2_1"


    // $ANTLR start "rule__Service__CommandAssignment_3_3_1"
    // InternalDockerCompose.g:13961:1: rule__Service__CommandAssignment_3_3_1 : ( ruleCommand ) ;
    public final void rule__Service__CommandAssignment_3_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13965:1: ( ( ruleCommand ) )
            // InternalDockerCompose.g:13966:2: ( ruleCommand )
            {
            // InternalDockerCompose.g:13966:2: ( ruleCommand )
            // InternalDockerCompose.g:13967:3: ruleCommand
            {
             before(grammarAccess.getServiceAccess().getCommandCommandParserRuleCall_3_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleCommand();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getCommandCommandParserRuleCall_3_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__CommandAssignment_3_3_1"


    // $ANTLR start "rule__Service__Container_nameAssignment_3_4_1"
    // InternalDockerCompose.g:13976:1: rule__Service__Container_nameAssignment_3_4_1 : ( ruleEString ) ;
    public final void rule__Service__Container_nameAssignment_3_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13980:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:13981:2: ( ruleEString )
            {
            // InternalDockerCompose.g:13981:2: ( ruleEString )
            // InternalDockerCompose.g:13982:3: ruleEString
            {
             before(grammarAccess.getServiceAccess().getContainer_nameEStringParserRuleCall_3_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getContainer_nameEStringParserRuleCall_3_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Container_nameAssignment_3_4_1"


    // $ANTLR start "rule__Service__RestartAssignment_3_5_1"
    // InternalDockerCompose.g:13991:1: rule__Service__RestartAssignment_3_5_1 : ( ruleRestartPolicy ) ;
    public final void rule__Service__RestartAssignment_3_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:13995:1: ( ( ruleRestartPolicy ) )
            // InternalDockerCompose.g:13996:2: ( ruleRestartPolicy )
            {
            // InternalDockerCompose.g:13996:2: ( ruleRestartPolicy )
            // InternalDockerCompose.g:13997:3: ruleRestartPolicy
            {
             before(grammarAccess.getServiceAccess().getRestartRestartPolicyEnumRuleCall_3_5_1_0()); 
            pushFollow(FOLLOW_2);
            ruleRestartPolicy();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getRestartRestartPolicyEnumRuleCall_3_5_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__RestartAssignment_3_5_1"


    // $ANTLR start "rule__Service__InitAssignment_3_6_1"
    // InternalDockerCompose.g:14006:1: rule__Service__InitAssignment_3_6_1 : ( ruleEBoolean ) ;
    public final void rule__Service__InitAssignment_3_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14010:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:14011:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:14011:2: ( ruleEBoolean )
            // InternalDockerCompose.g:14012:3: ruleEBoolean
            {
             before(grammarAccess.getServiceAccess().getInitEBooleanParserRuleCall_3_6_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getInitEBooleanParserRuleCall_3_6_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__InitAssignment_3_6_1"


    // $ANTLR start "rule__Service__Read_onlyAssignment_3_7_1"
    // InternalDockerCompose.g:14021:1: rule__Service__Read_onlyAssignment_3_7_1 : ( ruleEBoolean ) ;
    public final void rule__Service__Read_onlyAssignment_3_7_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14025:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:14026:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:14026:2: ( ruleEBoolean )
            // InternalDockerCompose.g:14027:3: ruleEBoolean
            {
             before(grammarAccess.getServiceAccess().getRead_onlyEBooleanParserRuleCall_3_7_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getRead_onlyEBooleanParserRuleCall_3_7_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Read_onlyAssignment_3_7_1"


    // $ANTLR start "rule__Service__LinksAssignment_3_8_1_1"
    // InternalDockerCompose.g:14036:1: rule__Service__LinksAssignment_3_8_1_1 : ( ruleLink ) ;
    public final void rule__Service__LinksAssignment_3_8_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14040:1: ( ( ruleLink ) )
            // InternalDockerCompose.g:14041:2: ( ruleLink )
            {
            // InternalDockerCompose.g:14041:2: ( ruleLink )
            // InternalDockerCompose.g:14042:3: ruleLink
            {
             before(grammarAccess.getServiceAccess().getLinksLinkParserRuleCall_3_8_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleLink();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getLinksLinkParserRuleCall_3_8_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__LinksAssignment_3_8_1_1"


    // $ANTLR start "rule__Service__Depends_onAssignment_3_9_1"
    // InternalDockerCompose.g:14051:1: rule__Service__Depends_onAssignment_3_9_1 : ( ruleDependency ) ;
    public final void rule__Service__Depends_onAssignment_3_9_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14055:1: ( ( ruleDependency ) )
            // InternalDockerCompose.g:14056:2: ( ruleDependency )
            {
            // InternalDockerCompose.g:14056:2: ( ruleDependency )
            // InternalDockerCompose.g:14057:3: ruleDependency
            {
             before(grammarAccess.getServiceAccess().getDepends_onDependencyParserRuleCall_3_9_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDependency();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getDepends_onDependencyParserRuleCall_3_9_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Depends_onAssignment_3_9_1"


    // $ANTLR start "rule__Service__NetworksAssignment_3_10_1_0"
    // InternalDockerCompose.g:14066:1: rule__Service__NetworksAssignment_3_10_1_0 : ( ruleNetworkConnector_long ) ;
    public final void rule__Service__NetworksAssignment_3_10_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14070:1: ( ( ruleNetworkConnector_long ) )
            // InternalDockerCompose.g:14071:2: ( ruleNetworkConnector_long )
            {
            // InternalDockerCompose.g:14071:2: ( ruleNetworkConnector_long )
            // InternalDockerCompose.g:14072:3: ruleNetworkConnector_long
            {
             before(grammarAccess.getServiceAccess().getNetworksNetworkConnector_longParserRuleCall_3_10_1_0_0()); 
            pushFollow(FOLLOW_2);
            ruleNetworkConnector_long();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getNetworksNetworkConnector_longParserRuleCall_3_10_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__NetworksAssignment_3_10_1_0"


    // $ANTLR start "rule__Service__NetworksAssignment_3_10_1_1"
    // InternalDockerCompose.g:14081:1: rule__Service__NetworksAssignment_3_10_1_1 : ( ruleNetworkConnector_short ) ;
    public final void rule__Service__NetworksAssignment_3_10_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14085:1: ( ( ruleNetworkConnector_short ) )
            // InternalDockerCompose.g:14086:2: ( ruleNetworkConnector_short )
            {
            // InternalDockerCompose.g:14086:2: ( ruleNetworkConnector_short )
            // InternalDockerCompose.g:14087:3: ruleNetworkConnector_short
            {
             before(grammarAccess.getServiceAccess().getNetworksNetworkConnector_shortParserRuleCall_3_10_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNetworkConnector_short();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getNetworksNetworkConnector_shortParserRuleCall_3_10_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__NetworksAssignment_3_10_1_1"


    // $ANTLR start "rule__Service__VolumesAssignment_3_11_1_1"
    // InternalDockerCompose.g:14096:1: rule__Service__VolumesAssignment_3_11_1_1 : ( ruleVolumeConnector ) ;
    public final void rule__Service__VolumesAssignment_3_11_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14100:1: ( ( ruleVolumeConnector ) )
            // InternalDockerCompose.g:14101:2: ( ruleVolumeConnector )
            {
            // InternalDockerCompose.g:14101:2: ( ruleVolumeConnector )
            // InternalDockerCompose.g:14102:3: ruleVolumeConnector
            {
             before(grammarAccess.getServiceAccess().getVolumesVolumeConnectorParserRuleCall_3_11_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleVolumeConnector();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getVolumesVolumeConnectorParserRuleCall_3_11_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__VolumesAssignment_3_11_1_1"


    // $ANTLR start "rule__Service__ConfigsAssignment_3_12_1_1"
    // InternalDockerCompose.g:14111:1: rule__Service__ConfigsAssignment_3_12_1_1 : ( ruleConfigConnector ) ;
    public final void rule__Service__ConfigsAssignment_3_12_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14115:1: ( ( ruleConfigConnector ) )
            // InternalDockerCompose.g:14116:2: ( ruleConfigConnector )
            {
            // InternalDockerCompose.g:14116:2: ( ruleConfigConnector )
            // InternalDockerCompose.g:14117:3: ruleConfigConnector
            {
             before(grammarAccess.getServiceAccess().getConfigsConfigConnectorParserRuleCall_3_12_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleConfigConnector();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getConfigsConfigConnectorParserRuleCall_3_12_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__ConfigsAssignment_3_12_1_1"


    // $ANTLR start "rule__Service__SecretsAssignment_3_13_1_1"
    // InternalDockerCompose.g:14126:1: rule__Service__SecretsAssignment_3_13_1_1 : ( ruleSecretConnector ) ;
    public final void rule__Service__SecretsAssignment_3_13_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14130:1: ( ( ruleSecretConnector ) )
            // InternalDockerCompose.g:14131:2: ( ruleSecretConnector )
            {
            // InternalDockerCompose.g:14131:2: ( ruleSecretConnector )
            // InternalDockerCompose.g:14132:3: ruleSecretConnector
            {
             before(grammarAccess.getServiceAccess().getSecretsSecretConnectorParserRuleCall_3_13_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSecretConnector();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getSecretsSecretConnectorParserRuleCall_3_13_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__SecretsAssignment_3_13_1_1"


    // $ANTLR start "rule__Service__EnvironmentAssignment_3_14_1_0"
    // InternalDockerCompose.g:14141:1: rule__Service__EnvironmentAssignment_3_14_1_0 : ( ruleEnvironmentVariableMap ) ;
    public final void rule__Service__EnvironmentAssignment_3_14_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14145:1: ( ( ruleEnvironmentVariableMap ) )
            // InternalDockerCompose.g:14146:2: ( ruleEnvironmentVariableMap )
            {
            // InternalDockerCompose.g:14146:2: ( ruleEnvironmentVariableMap )
            // InternalDockerCompose.g:14147:3: ruleEnvironmentVariableMap
            {
             before(grammarAccess.getServiceAccess().getEnvironmentEnvironmentVariableMapParserRuleCall_3_14_1_0_0()); 
            pushFollow(FOLLOW_2);
            ruleEnvironmentVariableMap();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getEnvironmentEnvironmentVariableMapParserRuleCall_3_14_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__EnvironmentAssignment_3_14_1_0"


    // $ANTLR start "rule__Service__EnvironmentAssignment_3_14_1_1"
    // InternalDockerCompose.g:14156:1: rule__Service__EnvironmentAssignment_3_14_1_1 : ( ruleEnvironmentVariableList ) ;
    public final void rule__Service__EnvironmentAssignment_3_14_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14160:1: ( ( ruleEnvironmentVariableList ) )
            // InternalDockerCompose.g:14161:2: ( ruleEnvironmentVariableList )
            {
            // InternalDockerCompose.g:14161:2: ( ruleEnvironmentVariableList )
            // InternalDockerCompose.g:14162:3: ruleEnvironmentVariableList
            {
             before(grammarAccess.getServiceAccess().getEnvironmentEnvironmentVariableListParserRuleCall_3_14_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEnvironmentVariableList();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getEnvironmentEnvironmentVariableListParserRuleCall_3_14_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__EnvironmentAssignment_3_14_1_1"


    // $ANTLR start "rule__Service__DevicesAssignment_3_15_1_1"
    // InternalDockerCompose.g:14171:1: rule__Service__DevicesAssignment_3_15_1_1 : ( ruleDevice ) ;
    public final void rule__Service__DevicesAssignment_3_15_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14175:1: ( ( ruleDevice ) )
            // InternalDockerCompose.g:14176:2: ( ruleDevice )
            {
            // InternalDockerCompose.g:14176:2: ( ruleDevice )
            // InternalDockerCompose.g:14177:3: ruleDevice
            {
             before(grammarAccess.getServiceAccess().getDevicesDeviceParserRuleCall_3_15_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDevice();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getDevicesDeviceParserRuleCall_3_15_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__DevicesAssignment_3_15_1_1"


    // $ANTLR start "rule__Service__DnsAssignment_3_16_1_0_1"
    // InternalDockerCompose.g:14186:1: rule__Service__DnsAssignment_3_16_1_0_1 : ( ruleDNS ) ;
    public final void rule__Service__DnsAssignment_3_16_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14190:1: ( ( ruleDNS ) )
            // InternalDockerCompose.g:14191:2: ( ruleDNS )
            {
            // InternalDockerCompose.g:14191:2: ( ruleDNS )
            // InternalDockerCompose.g:14192:3: ruleDNS
            {
             before(grammarAccess.getServiceAccess().getDnsDNSParserRuleCall_3_16_1_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getDnsDNSParserRuleCall_3_16_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__DnsAssignment_3_16_1_0_1"


    // $ANTLR start "rule__Service__DnsAssignment_3_16_1_1"
    // InternalDockerCompose.g:14201:1: rule__Service__DnsAssignment_3_16_1_1 : ( ruleDNS ) ;
    public final void rule__Service__DnsAssignment_3_16_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14205:1: ( ( ruleDNS ) )
            // InternalDockerCompose.g:14206:2: ( ruleDNS )
            {
            // InternalDockerCompose.g:14206:2: ( ruleDNS )
            // InternalDockerCompose.g:14207:3: ruleDNS
            {
             before(grammarAccess.getServiceAccess().getDnsDNSParserRuleCall_3_16_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getDnsDNSParserRuleCall_3_16_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__DnsAssignment_3_16_1_1"


    // $ANTLR start "rule__Service__PortsAssignment_3_17_1_1"
    // InternalDockerCompose.g:14216:1: rule__Service__PortsAssignment_3_17_1_1 : ( rulePort ) ;
    public final void rule__Service__PortsAssignment_3_17_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14220:1: ( ( rulePort ) )
            // InternalDockerCompose.g:14221:2: ( rulePort )
            {
            // InternalDockerCompose.g:14221:2: ( rulePort )
            // InternalDockerCompose.g:14222:3: rulePort
            {
             before(grammarAccess.getServiceAccess().getPortsPortParserRuleCall_3_17_1_1_0()); 
            pushFollow(FOLLOW_2);
            rulePort();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getPortsPortParserRuleCall_3_17_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__PortsAssignment_3_17_1_1"


    // $ANTLR start "rule__EnvironmentVariableMap__NameAssignment_1"
    // InternalDockerCompose.g:14231:1: rule__EnvironmentVariableMap__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__EnvironmentVariableMap__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14235:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:14236:2: ( RULE_ID )
            {
            // InternalDockerCompose.g:14236:2: ( RULE_ID )
            // InternalDockerCompose.g:14237:3: RULE_ID
            {
             before(grammarAccess.getEnvironmentVariableMapAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getEnvironmentVariableMapAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableMap__NameAssignment_1"


    // $ANTLR start "rule__EnvironmentVariableMap__ValueAssignment_3_0"
    // InternalDockerCompose.g:14246:1: rule__EnvironmentVariableMap__ValueAssignment_3_0 : ( ruleEString ) ;
    public final void rule__EnvironmentVariableMap__ValueAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14250:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:14251:2: ( ruleEString )
            {
            // InternalDockerCompose.g:14251:2: ( ruleEString )
            // InternalDockerCompose.g:14252:3: ruleEString
            {
             before(grammarAccess.getEnvironmentVariableMapAccess().getValueEStringParserRuleCall_3_0_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getEnvironmentVariableMapAccess().getValueEStringParserRuleCall_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableMap__ValueAssignment_3_0"


    // $ANTLR start "rule__EnvironmentVariableMap__ValueAssignment_3_1"
    // InternalDockerCompose.g:14261:1: rule__EnvironmentVariableMap__ValueAssignment_3_1 : ( rulePATH ) ;
    public final void rule__EnvironmentVariableMap__ValueAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14265:1: ( ( rulePATH ) )
            // InternalDockerCompose.g:14266:2: ( rulePATH )
            {
            // InternalDockerCompose.g:14266:2: ( rulePATH )
            // InternalDockerCompose.g:14267:3: rulePATH
            {
             before(grammarAccess.getEnvironmentVariableMapAccess().getValuePATHParserRuleCall_3_1_0()); 
            pushFollow(FOLLOW_2);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getEnvironmentVariableMapAccess().getValuePATHParserRuleCall_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableMap__ValueAssignment_3_1"


    // $ANTLR start "rule__EnvironmentVariableList__NameAssignment_2"
    // InternalDockerCompose.g:14276:1: rule__EnvironmentVariableList__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__EnvironmentVariableList__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14280:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:14281:2: ( RULE_ID )
            {
            // InternalDockerCompose.g:14281:2: ( RULE_ID )
            // InternalDockerCompose.g:14282:3: RULE_ID
            {
             before(grammarAccess.getEnvironmentVariableListAccess().getNameIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getEnvironmentVariableListAccess().getNameIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableList__NameAssignment_2"


    // $ANTLR start "rule__EnvironmentVariableList__ValueAssignment_3_1_0"
    // InternalDockerCompose.g:14291:1: rule__EnvironmentVariableList__ValueAssignment_3_1_0 : ( ruleEString ) ;
    public final void rule__EnvironmentVariableList__ValueAssignment_3_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14295:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:14296:2: ( ruleEString )
            {
            // InternalDockerCompose.g:14296:2: ( ruleEString )
            // InternalDockerCompose.g:14297:3: ruleEString
            {
             before(grammarAccess.getEnvironmentVariableListAccess().getValueEStringParserRuleCall_3_1_0_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getEnvironmentVariableListAccess().getValueEStringParserRuleCall_3_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableList__ValueAssignment_3_1_0"


    // $ANTLR start "rule__EnvironmentVariableList__ValueAssignment_3_1_1"
    // InternalDockerCompose.g:14306:1: rule__EnvironmentVariableList__ValueAssignment_3_1_1 : ( rulePATH ) ;
    public final void rule__EnvironmentVariableList__ValueAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14310:1: ( ( rulePATH ) )
            // InternalDockerCompose.g:14311:2: ( rulePATH )
            {
            // InternalDockerCompose.g:14311:2: ( rulePATH )
            // InternalDockerCompose.g:14312:3: rulePATH
            {
             before(grammarAccess.getEnvironmentVariableListAccess().getValuePATHParserRuleCall_3_1_1_0()); 
            pushFollow(FOLLOW_2);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getEnvironmentVariableListAccess().getValuePATHParserRuleCall_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EnvironmentVariableList__ValueAssignment_3_1_1"


    // $ANTLR start "rule__Port__ValueAssignment_1"
    // InternalDockerCompose.g:14321:1: rule__Port__ValueAssignment_1 : ( rulePorts ) ;
    public final void rule__Port__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14325:1: ( ( rulePorts ) )
            // InternalDockerCompose.g:14326:2: ( rulePorts )
            {
            // InternalDockerCompose.g:14326:2: ( rulePorts )
            // InternalDockerCompose.g:14327:3: rulePorts
            {
             before(grammarAccess.getPortAccess().getValuePortsParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            rulePorts();

            state._fsp--;

             after(grammarAccess.getPortAccess().getValuePortsParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__ValueAssignment_1"


    // $ANTLR start "rule__Device__ValueAssignment_1"
    // InternalDockerCompose.g:14336:1: rule__Device__ValueAssignment_1 : ( RULE_DEVICE_DEF ) ;
    public final void rule__Device__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14340:1: ( ( RULE_DEVICE_DEF ) )
            // InternalDockerCompose.g:14341:2: ( RULE_DEVICE_DEF )
            {
            // InternalDockerCompose.g:14341:2: ( RULE_DEVICE_DEF )
            // InternalDockerCompose.g:14342:3: RULE_DEVICE_DEF
            {
             before(grammarAccess.getDeviceAccess().getValueDEVICE_DEFTerminalRuleCall_1_0()); 
            match(input,RULE_DEVICE_DEF,FOLLOW_2); 
             after(grammarAccess.getDeviceAccess().getValueDEVICE_DEFTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Device__ValueAssignment_1"


    // $ANTLR start "rule__Link__ServiceAssignment_1"
    // InternalDockerCompose.g:14351:1: rule__Link__ServiceAssignment_1 : ( ( RULE_ID ) ) ;
    public final void rule__Link__ServiceAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14355:1: ( ( ( RULE_ID ) ) )
            // InternalDockerCompose.g:14356:2: ( ( RULE_ID ) )
            {
            // InternalDockerCompose.g:14356:2: ( ( RULE_ID ) )
            // InternalDockerCompose.g:14357:3: ( RULE_ID )
            {
             before(grammarAccess.getLinkAccess().getServiceServiceCrossReference_1_0()); 
            // InternalDockerCompose.g:14358:3: ( RULE_ID )
            // InternalDockerCompose.g:14359:4: RULE_ID
            {
             before(grammarAccess.getLinkAccess().getServiceServiceIDTerminalRuleCall_1_0_1()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getLinkAccess().getServiceServiceIDTerminalRuleCall_1_0_1()); 

            }

             after(grammarAccess.getLinkAccess().getServiceServiceCrossReference_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__ServiceAssignment_1"


    // $ANTLR start "rule__Link__AliasAssignment_2_1"
    // InternalDockerCompose.g:14370:1: rule__Link__AliasAssignment_2_1 : ( ruleEString ) ;
    public final void rule__Link__AliasAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14374:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:14375:2: ( ruleEString )
            {
            // InternalDockerCompose.g:14375:2: ( ruleEString )
            // InternalDockerCompose.g:14376:3: ruleEString
            {
             before(grammarAccess.getLinkAccess().getAliasEStringParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getLinkAccess().getAliasEStringParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Link__AliasAssignment_2_1"


    // $ANTLR start "rule__Dependency__ServiceAssignment_1_0_1"
    // InternalDockerCompose.g:14385:1: rule__Dependency__ServiceAssignment_1_0_1 : ( ( RULE_ID ) ) ;
    public final void rule__Dependency__ServiceAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14389:1: ( ( ( RULE_ID ) ) )
            // InternalDockerCompose.g:14390:2: ( ( RULE_ID ) )
            {
            // InternalDockerCompose.g:14390:2: ( ( RULE_ID ) )
            // InternalDockerCompose.g:14391:3: ( RULE_ID )
            {
             before(grammarAccess.getDependencyAccess().getServiceServiceCrossReference_1_0_1_0()); 
            // InternalDockerCompose.g:14392:3: ( RULE_ID )
            // InternalDockerCompose.g:14393:4: RULE_ID
            {
             before(grammarAccess.getDependencyAccess().getServiceServiceIDTerminalRuleCall_1_0_1_0_1()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getDependencyAccess().getServiceServiceIDTerminalRuleCall_1_0_1_0_1()); 

            }

             after(grammarAccess.getDependencyAccess().getServiceServiceCrossReference_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency__ServiceAssignment_1_0_1"


    // $ANTLR start "rule__Dependency__ServiceAssignment_1_1_0"
    // InternalDockerCompose.g:14404:1: rule__Dependency__ServiceAssignment_1_1_0 : ( ( RULE_ID ) ) ;
    public final void rule__Dependency__ServiceAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14408:1: ( ( ( RULE_ID ) ) )
            // InternalDockerCompose.g:14409:2: ( ( RULE_ID ) )
            {
            // InternalDockerCompose.g:14409:2: ( ( RULE_ID ) )
            // InternalDockerCompose.g:14410:3: ( RULE_ID )
            {
             before(grammarAccess.getDependencyAccess().getServiceServiceCrossReference_1_1_0_0()); 
            // InternalDockerCompose.g:14411:3: ( RULE_ID )
            // InternalDockerCompose.g:14412:4: RULE_ID
            {
             before(grammarAccess.getDependencyAccess().getServiceServiceIDTerminalRuleCall_1_1_0_0_1()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getDependencyAccess().getServiceServiceIDTerminalRuleCall_1_1_0_0_1()); 

            }

             after(grammarAccess.getDependencyAccess().getServiceServiceCrossReference_1_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency__ServiceAssignment_1_1_0"


    // $ANTLR start "rule__Dependency__ConditionAssignment_1_1_3"
    // InternalDockerCompose.g:14423:1: rule__Dependency__ConditionAssignment_1_1_3 : ( ruleCondition ) ;
    public final void rule__Dependency__ConditionAssignment_1_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14427:1: ( ( ruleCondition ) )
            // InternalDockerCompose.g:14428:2: ( ruleCondition )
            {
            // InternalDockerCompose.g:14428:2: ( ruleCondition )
            // InternalDockerCompose.g:14429:3: ruleCondition
            {
             before(grammarAccess.getDependencyAccess().getConditionConditionEnumRuleCall_1_1_3_0()); 
            pushFollow(FOLLOW_2);
            ruleCondition();

            state._fsp--;

             after(grammarAccess.getDependencyAccess().getConditionConditionEnumRuleCall_1_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency__ConditionAssignment_1_1_3"


    // $ANTLR start "rule__NetworkConnector_long__NetworkAssignment_1"
    // InternalDockerCompose.g:14438:1: rule__NetworkConnector_long__NetworkAssignment_1 : ( ( RULE_ID ) ) ;
    public final void rule__NetworkConnector_long__NetworkAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14442:1: ( ( ( RULE_ID ) ) )
            // InternalDockerCompose.g:14443:2: ( ( RULE_ID ) )
            {
            // InternalDockerCompose.g:14443:2: ( ( RULE_ID ) )
            // InternalDockerCompose.g:14444:3: ( RULE_ID )
            {
             before(grammarAccess.getNetworkConnector_longAccess().getNetworkNetworkCrossReference_1_0()); 
            // InternalDockerCompose.g:14445:3: ( RULE_ID )
            // InternalDockerCompose.g:14446:4: RULE_ID
            {
             before(grammarAccess.getNetworkConnector_longAccess().getNetworkNetworkIDTerminalRuleCall_1_0_1()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getNetworkConnector_longAccess().getNetworkNetworkIDTerminalRuleCall_1_0_1()); 

            }

             after(grammarAccess.getNetworkConnector_longAccess().getNetworkNetworkCrossReference_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__NetworkAssignment_1"


    // $ANTLR start "rule__NetworkConnector_long__Ipv4_addressAssignment_3_0_1"
    // InternalDockerCompose.g:14457:1: rule__NetworkConnector_long__Ipv4_addressAssignment_3_0_1 : ( ruleDNS ) ;
    public final void rule__NetworkConnector_long__Ipv4_addressAssignment_3_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14461:1: ( ( ruleDNS ) )
            // InternalDockerCompose.g:14462:2: ( ruleDNS )
            {
            // InternalDockerCompose.g:14462:2: ( ruleDNS )
            // InternalDockerCompose.g:14463:3: ruleDNS
            {
             before(grammarAccess.getNetworkConnector_longAccess().getIpv4_addressDNSParserRuleCall_3_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getNetworkConnector_longAccess().getIpv4_addressDNSParserRuleCall_3_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Ipv4_addressAssignment_3_0_1"


    // $ANTLR start "rule__NetworkConnector_long__PriorityAssignment_3_1_1"
    // InternalDockerCompose.g:14472:1: rule__NetworkConnector_long__PriorityAssignment_3_1_1 : ( ruleEInt ) ;
    public final void rule__NetworkConnector_long__PriorityAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14476:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:14477:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:14477:2: ( ruleEInt )
            // InternalDockerCompose.g:14478:3: ruleEInt
            {
             before(grammarAccess.getNetworkConnector_longAccess().getPriorityEIntParserRuleCall_3_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getNetworkConnector_longAccess().getPriorityEIntParserRuleCall_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__PriorityAssignment_3_1_1"


    // $ANTLR start "rule__NetworkConnector_long__AliasesAssignment_3_2_1_1"
    // InternalDockerCompose.g:14487:1: rule__NetworkConnector_long__AliasesAssignment_3_2_1_1 : ( ruleAlias ) ;
    public final void rule__NetworkConnector_long__AliasesAssignment_3_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14491:1: ( ( ruleAlias ) )
            // InternalDockerCompose.g:14492:2: ( ruleAlias )
            {
            // InternalDockerCompose.g:14492:2: ( ruleAlias )
            // InternalDockerCompose.g:14493:3: ruleAlias
            {
             before(grammarAccess.getNetworkConnector_longAccess().getAliasesAliasParserRuleCall_3_2_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleAlias();

            state._fsp--;

             after(grammarAccess.getNetworkConnector_longAccess().getAliasesAliasParserRuleCall_3_2_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__AliasesAssignment_3_2_1_1"


    // $ANTLR start "rule__NetworkConnector_long__Link_local_ipsAssignment_3_3_1_1"
    // InternalDockerCompose.g:14502:1: rule__NetworkConnector_long__Link_local_ipsAssignment_3_3_1_1 : ( ruleDNS ) ;
    public final void rule__NetworkConnector_long__Link_local_ipsAssignment_3_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14506:1: ( ( ruleDNS ) )
            // InternalDockerCompose.g:14507:2: ( ruleDNS )
            {
            // InternalDockerCompose.g:14507:2: ( ruleDNS )
            // InternalDockerCompose.g:14508:3: ruleDNS
            {
             before(grammarAccess.getNetworkConnector_longAccess().getLink_local_ipsDNSParserRuleCall_3_3_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getNetworkConnector_longAccess().getLink_local_ipsDNSParserRuleCall_3_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Link_local_ipsAssignment_3_3_1_1"


    // $ANTLR start "rule__NetworkConnector_short__NetworkAssignment_2"
    // InternalDockerCompose.g:14517:1: rule__NetworkConnector_short__NetworkAssignment_2 : ( ( RULE_ID ) ) ;
    public final void rule__NetworkConnector_short__NetworkAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14521:1: ( ( ( RULE_ID ) ) )
            // InternalDockerCompose.g:14522:2: ( ( RULE_ID ) )
            {
            // InternalDockerCompose.g:14522:2: ( ( RULE_ID ) )
            // InternalDockerCompose.g:14523:3: ( RULE_ID )
            {
             before(grammarAccess.getNetworkConnector_shortAccess().getNetworkNetworkCrossReference_2_0()); 
            // InternalDockerCompose.g:14524:3: ( RULE_ID )
            // InternalDockerCompose.g:14525:4: RULE_ID
            {
             before(grammarAccess.getNetworkConnector_shortAccess().getNetworkNetworkIDTerminalRuleCall_2_0_1()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getNetworkConnector_shortAccess().getNetworkNetworkIDTerminalRuleCall_2_0_1()); 

            }

             after(grammarAccess.getNetworkConnector_shortAccess().getNetworkNetworkCrossReference_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_short__NetworkAssignment_2"


    // $ANTLR start "rule__Alias__AliasAssignment_1"
    // InternalDockerCompose.g:14536:1: rule__Alias__AliasAssignment_1 : ( ruleEString ) ;
    public final void rule__Alias__AliasAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14540:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:14541:2: ( ruleEString )
            {
            // InternalDockerCompose.g:14541:2: ( ruleEString )
            // InternalDockerCompose.g:14542:3: ruleEString
            {
             before(grammarAccess.getAliasAccess().getAliasEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getAliasAccess().getAliasEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Alias__AliasAssignment_1"


    // $ANTLR start "rule__VolumeConnector__VolumeAssignment_1_0_0"
    // InternalDockerCompose.g:14551:1: rule__VolumeConnector__VolumeAssignment_1_0_0 : ( ( RULE_ID ) ) ;
    public final void rule__VolumeConnector__VolumeAssignment_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14555:1: ( ( ( RULE_ID ) ) )
            // InternalDockerCompose.g:14556:2: ( ( RULE_ID ) )
            {
            // InternalDockerCompose.g:14556:2: ( ( RULE_ID ) )
            // InternalDockerCompose.g:14557:3: ( RULE_ID )
            {
             before(grammarAccess.getVolumeConnectorAccess().getVolumeVolumeCrossReference_1_0_0_0()); 
            // InternalDockerCompose.g:14558:3: ( RULE_ID )
            // InternalDockerCompose.g:14559:4: RULE_ID
            {
             before(grammarAccess.getVolumeConnectorAccess().getVolumeVolumeIDTerminalRuleCall_1_0_0_0_1()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getVolumeConnectorAccess().getVolumeVolumeIDTerminalRuleCall_1_0_0_0_1()); 

            }

             after(grammarAccess.getVolumeConnectorAccess().getVolumeVolumeCrossReference_1_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__VolumeAssignment_1_0_0"


    // $ANTLR start "rule__VolumeConnector__Container_pathAssignment_1_0_2"
    // InternalDockerCompose.g:14570:1: rule__VolumeConnector__Container_pathAssignment_1_0_2 : ( rulePATH ) ;
    public final void rule__VolumeConnector__Container_pathAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14574:1: ( ( rulePATH ) )
            // InternalDockerCompose.g:14575:2: ( rulePATH )
            {
            // InternalDockerCompose.g:14575:2: ( rulePATH )
            // InternalDockerCompose.g:14576:3: rulePATH
            {
             before(grammarAccess.getVolumeConnectorAccess().getContainer_pathPATHParserRuleCall_1_0_2_0()); 
            pushFollow(FOLLOW_2);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getVolumeConnectorAccess().getContainer_pathPATHParserRuleCall_1_0_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Container_pathAssignment_1_0_2"


    // $ANTLR start "rule__VolumeConnector__Access_modeAssignment_1_0_3_1"
    // InternalDockerCompose.g:14585:1: rule__VolumeConnector__Access_modeAssignment_1_0_3_1 : ( ruleAccessMode ) ;
    public final void rule__VolumeConnector__Access_modeAssignment_1_0_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14589:1: ( ( ruleAccessMode ) )
            // InternalDockerCompose.g:14590:2: ( ruleAccessMode )
            {
            // InternalDockerCompose.g:14590:2: ( ruleAccessMode )
            // InternalDockerCompose.g:14591:3: ruleAccessMode
            {
             before(grammarAccess.getVolumeConnectorAccess().getAccess_modeAccessModeEnumRuleCall_1_0_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleAccessMode();

            state._fsp--;

             after(grammarAccess.getVolumeConnectorAccess().getAccess_modeAccessModeEnumRuleCall_1_0_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Access_modeAssignment_1_0_3_1"


    // $ANTLR start "rule__VolumeConnector__VolumeAssignment_1_1_0_1"
    // InternalDockerCompose.g:14600:1: rule__VolumeConnector__VolumeAssignment_1_1_0_1 : ( ( RULE_ID ) ) ;
    public final void rule__VolumeConnector__VolumeAssignment_1_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14604:1: ( ( ( RULE_ID ) ) )
            // InternalDockerCompose.g:14605:2: ( ( RULE_ID ) )
            {
            // InternalDockerCompose.g:14605:2: ( ( RULE_ID ) )
            // InternalDockerCompose.g:14606:3: ( RULE_ID )
            {
             before(grammarAccess.getVolumeConnectorAccess().getVolumeVolumeCrossReference_1_1_0_1_0()); 
            // InternalDockerCompose.g:14607:3: ( RULE_ID )
            // InternalDockerCompose.g:14608:4: RULE_ID
            {
             before(grammarAccess.getVolumeConnectorAccess().getVolumeVolumeIDTerminalRuleCall_1_1_0_1_0_1()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getVolumeConnectorAccess().getVolumeVolumeIDTerminalRuleCall_1_1_0_1_0_1()); 

            }

             after(grammarAccess.getVolumeConnectorAccess().getVolumeVolumeCrossReference_1_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__VolumeAssignment_1_1_0_1"


    // $ANTLR start "rule__VolumeConnector__TypeAssignment_1_1_1_1"
    // InternalDockerCompose.g:14619:1: rule__VolumeConnector__TypeAssignment_1_1_1_1 : ( ruleMountType ) ;
    public final void rule__VolumeConnector__TypeAssignment_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14623:1: ( ( ruleMountType ) )
            // InternalDockerCompose.g:14624:2: ( ruleMountType )
            {
            // InternalDockerCompose.g:14624:2: ( ruleMountType )
            // InternalDockerCompose.g:14625:3: ruleMountType
            {
             before(grammarAccess.getVolumeConnectorAccess().getTypeMountTypeEnumRuleCall_1_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleMountType();

            state._fsp--;

             after(grammarAccess.getVolumeConnectorAccess().getTypeMountTypeEnumRuleCall_1_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__TypeAssignment_1_1_1_1"


    // $ANTLR start "rule__VolumeConnector__Container_pathAssignment_1_1_2_1"
    // InternalDockerCompose.g:14634:1: rule__VolumeConnector__Container_pathAssignment_1_1_2_1 : ( rulePATH ) ;
    public final void rule__VolumeConnector__Container_pathAssignment_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14638:1: ( ( rulePATH ) )
            // InternalDockerCompose.g:14639:2: ( rulePATH )
            {
            // InternalDockerCompose.g:14639:2: ( rulePATH )
            // InternalDockerCompose.g:14640:3: rulePATH
            {
             before(grammarAccess.getVolumeConnectorAccess().getContainer_pathPATHParserRuleCall_1_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getVolumeConnectorAccess().getContainer_pathPATHParserRuleCall_1_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Container_pathAssignment_1_1_2_1"


    // $ANTLR start "rule__VolumeConnector__Read_onlyAssignment_1_1_3_1"
    // InternalDockerCompose.g:14649:1: rule__VolumeConnector__Read_onlyAssignment_1_1_3_1 : ( ruleEBoolean ) ;
    public final void rule__VolumeConnector__Read_onlyAssignment_1_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14653:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:14654:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:14654:2: ( ruleEBoolean )
            // InternalDockerCompose.g:14655:3: ruleEBoolean
            {
             before(grammarAccess.getVolumeConnectorAccess().getRead_onlyEBooleanParserRuleCall_1_1_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getVolumeConnectorAccess().getRead_onlyEBooleanParserRuleCall_1_1_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__Read_onlyAssignment_1_1_3_1"


    // $ANTLR start "rule__VolumeConnector__PropagationAssignment_1_1_4_2"
    // InternalDockerCompose.g:14664:1: rule__VolumeConnector__PropagationAssignment_1_1_4_2 : ( rulePropagationType ) ;
    public final void rule__VolumeConnector__PropagationAssignment_1_1_4_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14668:1: ( ( rulePropagationType ) )
            // InternalDockerCompose.g:14669:2: ( rulePropagationType )
            {
            // InternalDockerCompose.g:14669:2: ( rulePropagationType )
            // InternalDockerCompose.g:14670:3: rulePropagationType
            {
             before(grammarAccess.getVolumeConnectorAccess().getPropagationPropagationTypeEnumRuleCall_1_1_4_2_0()); 
            pushFollow(FOLLOW_2);
            rulePropagationType();

            state._fsp--;

             after(grammarAccess.getVolumeConnectorAccess().getPropagationPropagationTypeEnumRuleCall_1_1_4_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__PropagationAssignment_1_1_4_2"


    // $ANTLR start "rule__VolumeConnector__NocopyAssignment_1_1_5_2"
    // InternalDockerCompose.g:14679:1: rule__VolumeConnector__NocopyAssignment_1_1_5_2 : ( ruleEBoolean ) ;
    public final void rule__VolumeConnector__NocopyAssignment_1_1_5_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14683:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:14684:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:14684:2: ( ruleEBoolean )
            // InternalDockerCompose.g:14685:3: ruleEBoolean
            {
             before(grammarAccess.getVolumeConnectorAccess().getNocopyEBooleanParserRuleCall_1_1_5_2_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getVolumeConnectorAccess().getNocopyEBooleanParserRuleCall_1_1_5_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__NocopyAssignment_1_1_5_2"


    // $ANTLR start "rule__VolumeConnector__SizeAssignment_1_1_6_3"
    // InternalDockerCompose.g:14694:1: rule__VolumeConnector__SizeAssignment_1_1_6_3 : ( ruleEInt ) ;
    public final void rule__VolumeConnector__SizeAssignment_1_1_6_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14698:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:14699:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:14699:2: ( ruleEInt )
            // InternalDockerCompose.g:14700:3: ruleEInt
            {
             before(grammarAccess.getVolumeConnectorAccess().getSizeEIntParserRuleCall_1_1_6_3_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getVolumeConnectorAccess().getSizeEIntParserRuleCall_1_1_6_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector__SizeAssignment_1_1_6_3"


    // $ANTLR start "rule__ConfigConnector__ConfigAssignment_1_0"
    // InternalDockerCompose.g:14709:1: rule__ConfigConnector__ConfigAssignment_1_0 : ( ( RULE_ID ) ) ;
    public final void rule__ConfigConnector__ConfigAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14713:1: ( ( ( RULE_ID ) ) )
            // InternalDockerCompose.g:14714:2: ( ( RULE_ID ) )
            {
            // InternalDockerCompose.g:14714:2: ( ( RULE_ID ) )
            // InternalDockerCompose.g:14715:3: ( RULE_ID )
            {
             before(grammarAccess.getConfigConnectorAccess().getConfigConfigCrossReference_1_0_0()); 
            // InternalDockerCompose.g:14716:3: ( RULE_ID )
            // InternalDockerCompose.g:14717:4: RULE_ID
            {
             before(grammarAccess.getConfigConnectorAccess().getConfigConfigIDTerminalRuleCall_1_0_0_1()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getConfigConnectorAccess().getConfigConfigIDTerminalRuleCall_1_0_0_1()); 

            }

             after(grammarAccess.getConfigConnectorAccess().getConfigConfigCrossReference_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__ConfigAssignment_1_0"


    // $ANTLR start "rule__ConfigConnector__ConfigAssignment_1_1_0_1"
    // InternalDockerCompose.g:14728:1: rule__ConfigConnector__ConfigAssignment_1_1_0_1 : ( ( RULE_ID ) ) ;
    public final void rule__ConfigConnector__ConfigAssignment_1_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14732:1: ( ( ( RULE_ID ) ) )
            // InternalDockerCompose.g:14733:2: ( ( RULE_ID ) )
            {
            // InternalDockerCompose.g:14733:2: ( ( RULE_ID ) )
            // InternalDockerCompose.g:14734:3: ( RULE_ID )
            {
             before(grammarAccess.getConfigConnectorAccess().getConfigConfigCrossReference_1_1_0_1_0()); 
            // InternalDockerCompose.g:14735:3: ( RULE_ID )
            // InternalDockerCompose.g:14736:4: RULE_ID
            {
             before(grammarAccess.getConfigConnectorAccess().getConfigConfigIDTerminalRuleCall_1_1_0_1_0_1()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getConfigConnectorAccess().getConfigConfigIDTerminalRuleCall_1_1_0_1_0_1()); 

            }

             after(grammarAccess.getConfigConnectorAccess().getConfigConfigCrossReference_1_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__ConfigAssignment_1_1_0_1"


    // $ANTLR start "rule__ConfigConnector__TargetAssignment_1_1_1_1"
    // InternalDockerCompose.g:14747:1: rule__ConfigConnector__TargetAssignment_1_1_1_1 : ( rulePATH ) ;
    public final void rule__ConfigConnector__TargetAssignment_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14751:1: ( ( rulePATH ) )
            // InternalDockerCompose.g:14752:2: ( rulePATH )
            {
            // InternalDockerCompose.g:14752:2: ( rulePATH )
            // InternalDockerCompose.g:14753:3: rulePATH
            {
             before(grammarAccess.getConfigConnectorAccess().getTargetPATHParserRuleCall_1_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getConfigConnectorAccess().getTargetPATHParserRuleCall_1_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__TargetAssignment_1_1_1_1"


    // $ANTLR start "rule__ConfigConnector__UidAssignment_1_1_2_1"
    // InternalDockerCompose.g:14762:1: rule__ConfigConnector__UidAssignment_1_1_2_1 : ( ruleQuotedInt ) ;
    public final void rule__ConfigConnector__UidAssignment_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14766:1: ( ( ruleQuotedInt ) )
            // InternalDockerCompose.g:14767:2: ( ruleQuotedInt )
            {
            // InternalDockerCompose.g:14767:2: ( ruleQuotedInt )
            // InternalDockerCompose.g:14768:3: ruleQuotedInt
            {
             before(grammarAccess.getConfigConnectorAccess().getUidQuotedIntParserRuleCall_1_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQuotedInt();

            state._fsp--;

             after(grammarAccess.getConfigConnectorAccess().getUidQuotedIntParserRuleCall_1_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__UidAssignment_1_1_2_1"


    // $ANTLR start "rule__ConfigConnector__GidAssignment_1_1_3_1"
    // InternalDockerCompose.g:14777:1: rule__ConfigConnector__GidAssignment_1_1_3_1 : ( ruleQuotedInt ) ;
    public final void rule__ConfigConnector__GidAssignment_1_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14781:1: ( ( ruleQuotedInt ) )
            // InternalDockerCompose.g:14782:2: ( ruleQuotedInt )
            {
            // InternalDockerCompose.g:14782:2: ( ruleQuotedInt )
            // InternalDockerCompose.g:14783:3: ruleQuotedInt
            {
             before(grammarAccess.getConfigConnectorAccess().getGidQuotedIntParserRuleCall_1_1_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQuotedInt();

            state._fsp--;

             after(grammarAccess.getConfigConnectorAccess().getGidQuotedIntParserRuleCall_1_1_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__GidAssignment_1_1_3_1"


    // $ANTLR start "rule__ConfigConnector__ModeAssignment_1_1_4_1"
    // InternalDockerCompose.g:14792:1: rule__ConfigConnector__ModeAssignment_1_1_4_1 : ( ruleEInt ) ;
    public final void rule__ConfigConnector__ModeAssignment_1_1_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14796:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:14797:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:14797:2: ( ruleEInt )
            // InternalDockerCompose.g:14798:3: ruleEInt
            {
             before(grammarAccess.getConfigConnectorAccess().getModeEIntParserRuleCall_1_1_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getConfigConnectorAccess().getModeEIntParserRuleCall_1_1_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector__ModeAssignment_1_1_4_1"


    // $ANTLR start "rule__SecretConnector__SecretAssignment_1_0"
    // InternalDockerCompose.g:14807:1: rule__SecretConnector__SecretAssignment_1_0 : ( ( RULE_ID ) ) ;
    public final void rule__SecretConnector__SecretAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14811:1: ( ( ( RULE_ID ) ) )
            // InternalDockerCompose.g:14812:2: ( ( RULE_ID ) )
            {
            // InternalDockerCompose.g:14812:2: ( ( RULE_ID ) )
            // InternalDockerCompose.g:14813:3: ( RULE_ID )
            {
             before(grammarAccess.getSecretConnectorAccess().getSecretSecretCrossReference_1_0_0()); 
            // InternalDockerCompose.g:14814:3: ( RULE_ID )
            // InternalDockerCompose.g:14815:4: RULE_ID
            {
             before(grammarAccess.getSecretConnectorAccess().getSecretSecretIDTerminalRuleCall_1_0_0_1()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getSecretConnectorAccess().getSecretSecretIDTerminalRuleCall_1_0_0_1()); 

            }

             after(grammarAccess.getSecretConnectorAccess().getSecretSecretCrossReference_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__SecretAssignment_1_0"


    // $ANTLR start "rule__SecretConnector__SecretAssignment_1_1_0_1"
    // InternalDockerCompose.g:14826:1: rule__SecretConnector__SecretAssignment_1_1_0_1 : ( ( RULE_ID ) ) ;
    public final void rule__SecretConnector__SecretAssignment_1_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14830:1: ( ( ( RULE_ID ) ) )
            // InternalDockerCompose.g:14831:2: ( ( RULE_ID ) )
            {
            // InternalDockerCompose.g:14831:2: ( ( RULE_ID ) )
            // InternalDockerCompose.g:14832:3: ( RULE_ID )
            {
             before(grammarAccess.getSecretConnectorAccess().getSecretSecretCrossReference_1_1_0_1_0()); 
            // InternalDockerCompose.g:14833:3: ( RULE_ID )
            // InternalDockerCompose.g:14834:4: RULE_ID
            {
             before(grammarAccess.getSecretConnectorAccess().getSecretSecretIDTerminalRuleCall_1_1_0_1_0_1()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getSecretConnectorAccess().getSecretSecretIDTerminalRuleCall_1_1_0_1_0_1()); 

            }

             after(grammarAccess.getSecretConnectorAccess().getSecretSecretCrossReference_1_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__SecretAssignment_1_1_0_1"


    // $ANTLR start "rule__SecretConnector__TargetAssignment_1_1_1_1"
    // InternalDockerCompose.g:14845:1: rule__SecretConnector__TargetAssignment_1_1_1_1 : ( rulePATH ) ;
    public final void rule__SecretConnector__TargetAssignment_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14849:1: ( ( rulePATH ) )
            // InternalDockerCompose.g:14850:2: ( rulePATH )
            {
            // InternalDockerCompose.g:14850:2: ( rulePATH )
            // InternalDockerCompose.g:14851:3: rulePATH
            {
             before(grammarAccess.getSecretConnectorAccess().getTargetPATHParserRuleCall_1_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getSecretConnectorAccess().getTargetPATHParserRuleCall_1_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__TargetAssignment_1_1_1_1"


    // $ANTLR start "rule__SecretConnector__UidAssignment_1_1_2_1"
    // InternalDockerCompose.g:14860:1: rule__SecretConnector__UidAssignment_1_1_2_1 : ( ruleQuotedInt ) ;
    public final void rule__SecretConnector__UidAssignment_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14864:1: ( ( ruleQuotedInt ) )
            // InternalDockerCompose.g:14865:2: ( ruleQuotedInt )
            {
            // InternalDockerCompose.g:14865:2: ( ruleQuotedInt )
            // InternalDockerCompose.g:14866:3: ruleQuotedInt
            {
             before(grammarAccess.getSecretConnectorAccess().getUidQuotedIntParserRuleCall_1_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQuotedInt();

            state._fsp--;

             after(grammarAccess.getSecretConnectorAccess().getUidQuotedIntParserRuleCall_1_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__UidAssignment_1_1_2_1"


    // $ANTLR start "rule__SecretConnector__GidAssignment_1_1_3_1"
    // InternalDockerCompose.g:14875:1: rule__SecretConnector__GidAssignment_1_1_3_1 : ( ruleQuotedInt ) ;
    public final void rule__SecretConnector__GidAssignment_1_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14879:1: ( ( ruleQuotedInt ) )
            // InternalDockerCompose.g:14880:2: ( ruleQuotedInt )
            {
            // InternalDockerCompose.g:14880:2: ( ruleQuotedInt )
            // InternalDockerCompose.g:14881:3: ruleQuotedInt
            {
             before(grammarAccess.getSecretConnectorAccess().getGidQuotedIntParserRuleCall_1_1_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleQuotedInt();

            state._fsp--;

             after(grammarAccess.getSecretConnectorAccess().getGidQuotedIntParserRuleCall_1_1_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__GidAssignment_1_1_3_1"


    // $ANTLR start "rule__SecretConnector__ModeAssignment_1_1_4_1"
    // InternalDockerCompose.g:14890:1: rule__SecretConnector__ModeAssignment_1_1_4_1 : ( ruleEInt ) ;
    public final void rule__SecretConnector__ModeAssignment_1_1_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14894:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:14895:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:14895:2: ( ruleEInt )
            // InternalDockerCompose.g:14896:3: ruleEInt
            {
             before(grammarAccess.getSecretConnectorAccess().getModeEIntParserRuleCall_1_1_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getSecretConnectorAccess().getModeEIntParserRuleCall_1_1_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector__ModeAssignment_1_1_4_1"


    // $ANTLR start "rule__Network__NameAssignment_1"
    // InternalDockerCompose.g:14905:1: rule__Network__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Network__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14909:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:14910:2: ( RULE_ID )
            {
            // InternalDockerCompose.g:14910:2: ( RULE_ID )
            // InternalDockerCompose.g:14911:3: RULE_ID
            {
             before(grammarAccess.getNetworkAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__NameAssignment_1"


    // $ANTLR start "rule__Network__DriverAssignment_3_1_0_1"
    // InternalDockerCompose.g:14920:1: rule__Network__DriverAssignment_3_1_0_1 : ( ruleEString ) ;
    public final void rule__Network__DriverAssignment_3_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14924:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:14925:2: ( ruleEString )
            {
            // InternalDockerCompose.g:14925:2: ( ruleEString )
            // InternalDockerCompose.g:14926:3: ruleEString
            {
             before(grammarAccess.getNetworkAccess().getDriverEStringParserRuleCall_3_1_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getDriverEStringParserRuleCall_3_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__DriverAssignment_3_1_0_1"


    // $ANTLR start "rule__Network__AttachableAssignment_3_1_1_1"
    // InternalDockerCompose.g:14935:1: rule__Network__AttachableAssignment_3_1_1_1 : ( ruleEBoolean ) ;
    public final void rule__Network__AttachableAssignment_3_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14939:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:14940:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:14940:2: ( ruleEBoolean )
            // InternalDockerCompose.g:14941:3: ruleEBoolean
            {
             before(grammarAccess.getNetworkAccess().getAttachableEBooleanParserRuleCall_3_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getAttachableEBooleanParserRuleCall_3_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__AttachableAssignment_3_1_1_1"


    // $ANTLR start "rule__Network__Enable_ipv6Assignment_3_1_2_1"
    // InternalDockerCompose.g:14950:1: rule__Network__Enable_ipv6Assignment_3_1_2_1 : ( ruleEBoolean ) ;
    public final void rule__Network__Enable_ipv6Assignment_3_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14954:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:14955:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:14955:2: ( ruleEBoolean )
            // InternalDockerCompose.g:14956:3: ruleEBoolean
            {
             before(grammarAccess.getNetworkAccess().getEnable_ipv6EBooleanParserRuleCall_3_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getEnable_ipv6EBooleanParserRuleCall_3_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Enable_ipv6Assignment_3_1_2_1"


    // $ANTLR start "rule__Network__InternalAssignment_3_1_3_1"
    // InternalDockerCompose.g:14965:1: rule__Network__InternalAssignment_3_1_3_1 : ( ruleEBoolean ) ;
    public final void rule__Network__InternalAssignment_3_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14969:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:14970:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:14970:2: ( ruleEBoolean )
            // InternalDockerCompose.g:14971:3: ruleEBoolean
            {
             before(grammarAccess.getNetworkAccess().getInternalEBooleanParserRuleCall_3_1_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getInternalEBooleanParserRuleCall_3_1_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__InternalAssignment_3_1_3_1"


    // $ANTLR start "rule__Network__ExternalAssignment_3_1_4_1"
    // InternalDockerCompose.g:14980:1: rule__Network__ExternalAssignment_3_1_4_1 : ( ruleEBoolean ) ;
    public final void rule__Network__ExternalAssignment_3_1_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14984:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:14985:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:14985:2: ( ruleEBoolean )
            // InternalDockerCompose.g:14986:3: ruleEBoolean
            {
             before(grammarAccess.getNetworkAccess().getExternalEBooleanParserRuleCall_3_1_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getExternalEBooleanParserRuleCall_3_1_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__ExternalAssignment_3_1_4_1"


    // $ANTLR start "rule__Network__Network_nameAssignment_3_1_5_1"
    // InternalDockerCompose.g:14995:1: rule__Network__Network_nameAssignment_3_1_5_1 : ( ruleEString ) ;
    public final void rule__Network__Network_nameAssignment_3_1_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:14999:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:15000:2: ( ruleEString )
            {
            // InternalDockerCompose.g:15000:2: ( ruleEString )
            // InternalDockerCompose.g:15001:3: ruleEString
            {
             before(grammarAccess.getNetworkAccess().getNetwork_nameEStringParserRuleCall_3_1_5_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getNetwork_nameEStringParserRuleCall_3_1_5_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Network_nameAssignment_3_1_5_1"


    // $ANTLR start "rule__Network__LabelsAssignment_3_1_6_1"
    // InternalDockerCompose.g:15010:1: rule__Network__LabelsAssignment_3_1_6_1 : ( ruleNetworkLabel ) ;
    public final void rule__Network__LabelsAssignment_3_1_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15014:1: ( ( ruleNetworkLabel ) )
            // InternalDockerCompose.g:15015:2: ( ruleNetworkLabel )
            {
            // InternalDockerCompose.g:15015:2: ( ruleNetworkLabel )
            // InternalDockerCompose.g:15016:3: ruleNetworkLabel
            {
             before(grammarAccess.getNetworkAccess().getLabelsNetworkLabelParserRuleCall_3_1_6_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNetworkLabel();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getLabelsNetworkLabelParserRuleCall_3_1_6_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__LabelsAssignment_3_1_6_1"


    // $ANTLR start "rule__Network__Driver_optsAssignment_3_1_7_1"
    // InternalDockerCompose.g:15025:1: rule__Network__Driver_optsAssignment_3_1_7_1 : ( ruleNetworkDriverOpt ) ;
    public final void rule__Network__Driver_optsAssignment_3_1_7_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15029:1: ( ( ruleNetworkDriverOpt ) )
            // InternalDockerCompose.g:15030:2: ( ruleNetworkDriverOpt )
            {
            // InternalDockerCompose.g:15030:2: ( ruleNetworkDriverOpt )
            // InternalDockerCompose.g:15031:3: ruleNetworkDriverOpt
            {
             before(grammarAccess.getNetworkAccess().getDriver_optsNetworkDriverOptParserRuleCall_3_1_7_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNetworkDriverOpt();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getDriver_optsNetworkDriverOptParserRuleCall_3_1_7_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Driver_optsAssignment_3_1_7_1"


    // $ANTLR start "rule__Network__IpamAssignment_3_1_8_1"
    // InternalDockerCompose.g:15040:1: rule__Network__IpamAssignment_3_1_8_1 : ( ruleIPAM ) ;
    public final void rule__Network__IpamAssignment_3_1_8_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15044:1: ( ( ruleIPAM ) )
            // InternalDockerCompose.g:15045:2: ( ruleIPAM )
            {
            // InternalDockerCompose.g:15045:2: ( ruleIPAM )
            // InternalDockerCompose.g:15046:3: ruleIPAM
            {
             before(grammarAccess.getNetworkAccess().getIpamIPAMParserRuleCall_3_1_8_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIPAM();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getIpamIPAMParserRuleCall_3_1_8_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__IpamAssignment_3_1_8_1"


    // $ANTLR start "rule__Volume__NameAssignment_1"
    // InternalDockerCompose.g:15055:1: rule__Volume__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Volume__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15059:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:15060:2: ( RULE_ID )
            {
            // InternalDockerCompose.g:15060:2: ( RULE_ID )
            // InternalDockerCompose.g:15061:3: RULE_ID
            {
             before(grammarAccess.getVolumeAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getVolumeAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__NameAssignment_1"


    // $ANTLR start "rule__Volume__ExternalAssignment_3_0_1"
    // InternalDockerCompose.g:15070:1: rule__Volume__ExternalAssignment_3_0_1 : ( ruleEBoolean ) ;
    public final void rule__Volume__ExternalAssignment_3_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15074:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:15075:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:15075:2: ( ruleEBoolean )
            // InternalDockerCompose.g:15076:3: ruleEBoolean
            {
             before(grammarAccess.getVolumeAccess().getExternalEBooleanParserRuleCall_3_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getVolumeAccess().getExternalEBooleanParserRuleCall_3_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__ExternalAssignment_3_0_1"


    // $ANTLR start "rule__Volume__DriverAssignment_3_1_1"
    // InternalDockerCompose.g:15085:1: rule__Volume__DriverAssignment_3_1_1 : ( ruleEString ) ;
    public final void rule__Volume__DriverAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15089:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:15090:2: ( ruleEString )
            {
            // InternalDockerCompose.g:15090:2: ( ruleEString )
            // InternalDockerCompose.g:15091:3: ruleEString
            {
             before(grammarAccess.getVolumeAccess().getDriverEStringParserRuleCall_3_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeAccess().getDriverEStringParserRuleCall_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__DriverAssignment_3_1_1"


    // $ANTLR start "rule__Volume__Volume_nameAssignment_3_2_1"
    // InternalDockerCompose.g:15100:1: rule__Volume__Volume_nameAssignment_3_2_1 : ( ruleEString ) ;
    public final void rule__Volume__Volume_nameAssignment_3_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15104:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:15105:2: ( ruleEString )
            {
            // InternalDockerCompose.g:15105:2: ( ruleEString )
            // InternalDockerCompose.g:15106:3: ruleEString
            {
             before(grammarAccess.getVolumeAccess().getVolume_nameEStringParserRuleCall_3_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeAccess().getVolume_nameEStringParserRuleCall_3_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Volume_nameAssignment_3_2_1"


    // $ANTLR start "rule__Volume__LabelsAssignment_3_3_1"
    // InternalDockerCompose.g:15115:1: rule__Volume__LabelsAssignment_3_3_1 : ( ruleVolumeLabel ) ;
    public final void rule__Volume__LabelsAssignment_3_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15119:1: ( ( ruleVolumeLabel ) )
            // InternalDockerCompose.g:15120:2: ( ruleVolumeLabel )
            {
            // InternalDockerCompose.g:15120:2: ( ruleVolumeLabel )
            // InternalDockerCompose.g:15121:3: ruleVolumeLabel
            {
             before(grammarAccess.getVolumeAccess().getLabelsVolumeLabelParserRuleCall_3_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleVolumeLabel();

            state._fsp--;

             after(grammarAccess.getVolumeAccess().getLabelsVolumeLabelParserRuleCall_3_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__LabelsAssignment_3_3_1"


    // $ANTLR start "rule__Volume__Driver_optsAssignment_3_4_1"
    // InternalDockerCompose.g:15130:1: rule__Volume__Driver_optsAssignment_3_4_1 : ( ruleVolumeDriverOpt ) ;
    public final void rule__Volume__Driver_optsAssignment_3_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15134:1: ( ( ruleVolumeDriverOpt ) )
            // InternalDockerCompose.g:15135:2: ( ruleVolumeDriverOpt )
            {
            // InternalDockerCompose.g:15135:2: ( ruleVolumeDriverOpt )
            // InternalDockerCompose.g:15136:3: ruleVolumeDriverOpt
            {
             before(grammarAccess.getVolumeAccess().getDriver_optsVolumeDriverOptParserRuleCall_3_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleVolumeDriverOpt();

            state._fsp--;

             after(grammarAccess.getVolumeAccess().getDriver_optsVolumeDriverOptParserRuleCall_3_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Driver_optsAssignment_3_4_1"


    // $ANTLR start "rule__Config__NameAssignment_1"
    // InternalDockerCompose.g:15145:1: rule__Config__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Config__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15149:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:15150:2: ( RULE_ID )
            {
            // InternalDockerCompose.g:15150:2: ( RULE_ID )
            // InternalDockerCompose.g:15151:3: RULE_ID
            {
             before(grammarAccess.getConfigAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getConfigAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__NameAssignment_1"


    // $ANTLR start "rule__Config__ExternalAssignment_3_0_1"
    // InternalDockerCompose.g:15160:1: rule__Config__ExternalAssignment_3_0_1 : ( ruleEBoolean ) ;
    public final void rule__Config__ExternalAssignment_3_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15164:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:15165:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:15165:2: ( ruleEBoolean )
            // InternalDockerCompose.g:15166:3: ruleEBoolean
            {
             before(grammarAccess.getConfigAccess().getExternalEBooleanParserRuleCall_3_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getConfigAccess().getExternalEBooleanParserRuleCall_3_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__ExternalAssignment_3_0_1"


    // $ANTLR start "rule__Config__FileAssignment_3_1_1"
    // InternalDockerCompose.g:15175:1: rule__Config__FileAssignment_3_1_1 : ( rulePATH ) ;
    public final void rule__Config__FileAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15179:1: ( ( rulePATH ) )
            // InternalDockerCompose.g:15180:2: ( rulePATH )
            {
            // InternalDockerCompose.g:15180:2: ( rulePATH )
            // InternalDockerCompose.g:15181:3: rulePATH
            {
             before(grammarAccess.getConfigAccess().getFilePATHParserRuleCall_3_1_1_0()); 
            pushFollow(FOLLOW_2);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getConfigAccess().getFilePATHParserRuleCall_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__FileAssignment_3_1_1"


    // $ANTLR start "rule__Config__Config_nameAssignment_3_2_1"
    // InternalDockerCompose.g:15190:1: rule__Config__Config_nameAssignment_3_2_1 : ( ruleEString ) ;
    public final void rule__Config__Config_nameAssignment_3_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15194:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:15195:2: ( ruleEString )
            {
            // InternalDockerCompose.g:15195:2: ( ruleEString )
            // InternalDockerCompose.g:15196:3: ruleEString
            {
             before(grammarAccess.getConfigAccess().getConfig_nameEStringParserRuleCall_3_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getConfigAccess().getConfig_nameEStringParserRuleCall_3_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Config_nameAssignment_3_2_1"


    // $ANTLR start "rule__Secret__NameAssignment_1"
    // InternalDockerCompose.g:15205:1: rule__Secret__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Secret__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15209:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:15210:2: ( RULE_ID )
            {
            // InternalDockerCompose.g:15210:2: ( RULE_ID )
            // InternalDockerCompose.g:15211:3: RULE_ID
            {
             before(grammarAccess.getSecretAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getSecretAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__NameAssignment_1"


    // $ANTLR start "rule__Secret__ExternalAssignment_3_0_1"
    // InternalDockerCompose.g:15220:1: rule__Secret__ExternalAssignment_3_0_1 : ( ruleEBoolean ) ;
    public final void rule__Secret__ExternalAssignment_3_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15224:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:15225:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:15225:2: ( ruleEBoolean )
            // InternalDockerCompose.g:15226:3: ruleEBoolean
            {
             before(grammarAccess.getSecretAccess().getExternalEBooleanParserRuleCall_3_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getSecretAccess().getExternalEBooleanParserRuleCall_3_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__ExternalAssignment_3_0_1"


    // $ANTLR start "rule__Secret__FileAssignment_3_1_1"
    // InternalDockerCompose.g:15235:1: rule__Secret__FileAssignment_3_1_1 : ( rulePATH ) ;
    public final void rule__Secret__FileAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15239:1: ( ( rulePATH ) )
            // InternalDockerCompose.g:15240:2: ( rulePATH )
            {
            // InternalDockerCompose.g:15240:2: ( rulePATH )
            // InternalDockerCompose.g:15241:3: rulePATH
            {
             before(grammarAccess.getSecretAccess().getFilePATHParserRuleCall_3_1_1_0()); 
            pushFollow(FOLLOW_2);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getSecretAccess().getFilePATHParserRuleCall_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__FileAssignment_3_1_1"


    // $ANTLR start "rule__Secret__EnvironmentAssignment_3_2_1"
    // InternalDockerCompose.g:15250:1: rule__Secret__EnvironmentAssignment_3_2_1 : ( ruleEString ) ;
    public final void rule__Secret__EnvironmentAssignment_3_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15254:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:15255:2: ( ruleEString )
            {
            // InternalDockerCompose.g:15255:2: ( ruleEString )
            // InternalDockerCompose.g:15256:3: ruleEString
            {
             before(grammarAccess.getSecretAccess().getEnvironmentEStringParserRuleCall_3_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getSecretAccess().getEnvironmentEStringParserRuleCall_3_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__EnvironmentAssignment_3_2_1"


    // $ANTLR start "rule__Secret__Secret_nameAssignment_3_3_1"
    // InternalDockerCompose.g:15265:1: rule__Secret__Secret_nameAssignment_3_3_1 : ( ruleEString ) ;
    public final void rule__Secret__Secret_nameAssignment_3_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15269:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:15270:2: ( ruleEString )
            {
            // InternalDockerCompose.g:15270:2: ( ruleEString )
            // InternalDockerCompose.g:15271:3: ruleEString
            {
             before(grammarAccess.getSecretAccess().getSecret_nameEStringParserRuleCall_3_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getSecretAccess().getSecret_nameEStringParserRuleCall_3_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Secret_nameAssignment_3_3_1"


    // $ANTLR start "rule__VolumeLabel__NameAssignment_1"
    // InternalDockerCompose.g:15280:1: rule__VolumeLabel__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__VolumeLabel__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15284:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:15285:2: ( ruleEString )
            {
            // InternalDockerCompose.g:15285:2: ( ruleEString )
            // InternalDockerCompose.g:15286:3: ruleEString
            {
             before(grammarAccess.getVolumeLabelAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeLabelAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__NameAssignment_1"


    // $ANTLR start "rule__VolumeLabel__ValueAssignment_3"
    // InternalDockerCompose.g:15295:1: rule__VolumeLabel__ValueAssignment_3 : ( ruleEString ) ;
    public final void rule__VolumeLabel__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15299:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:15300:2: ( ruleEString )
            {
            // InternalDockerCompose.g:15300:2: ( ruleEString )
            // InternalDockerCompose.g:15301:3: ruleEString
            {
             before(grammarAccess.getVolumeLabelAccess().getValueEStringParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeLabelAccess().getValueEStringParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__ValueAssignment_3"


    // $ANTLR start "rule__VolumeDriverOpt__NameAssignment_1"
    // InternalDockerCompose.g:15310:1: rule__VolumeDriverOpt__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__VolumeDriverOpt__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15314:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:15315:2: ( ruleEString )
            {
            // InternalDockerCompose.g:15315:2: ( ruleEString )
            // InternalDockerCompose.g:15316:3: ruleEString
            {
             before(grammarAccess.getVolumeDriverOptAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeDriverOptAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__NameAssignment_1"


    // $ANTLR start "rule__VolumeDriverOpt__ValueAssignment_3"
    // InternalDockerCompose.g:15325:1: rule__VolumeDriverOpt__ValueAssignment_3 : ( ruleEString ) ;
    public final void rule__VolumeDriverOpt__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15329:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:15330:2: ( ruleEString )
            {
            // InternalDockerCompose.g:15330:2: ( ruleEString )
            // InternalDockerCompose.g:15331:3: ruleEString
            {
             before(grammarAccess.getVolumeDriverOptAccess().getValueEStringParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeDriverOptAccess().getValueEStringParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__ValueAssignment_3"


    // $ANTLR start "rule__NetworkLabel__NameAssignment_1"
    // InternalDockerCompose.g:15340:1: rule__NetworkLabel__NameAssignment_1 : ( ruleLabelID ) ;
    public final void rule__NetworkLabel__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15344:1: ( ( ruleLabelID ) )
            // InternalDockerCompose.g:15345:2: ( ruleLabelID )
            {
            // InternalDockerCompose.g:15345:2: ( ruleLabelID )
            // InternalDockerCompose.g:15346:3: ruleLabelID
            {
             before(grammarAccess.getNetworkLabelAccess().getNameLabelIDParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleLabelID();

            state._fsp--;

             after(grammarAccess.getNetworkLabelAccess().getNameLabelIDParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__NameAssignment_1"


    // $ANTLR start "rule__NetworkLabel__ValueAssignment_3"
    // InternalDockerCompose.g:15355:1: rule__NetworkLabel__ValueAssignment_3 : ( ruleEString ) ;
    public final void rule__NetworkLabel__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15359:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:15360:2: ( ruleEString )
            {
            // InternalDockerCompose.g:15360:2: ( ruleEString )
            // InternalDockerCompose.g:15361:3: ruleEString
            {
             before(grammarAccess.getNetworkLabelAccess().getValueEStringParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkLabelAccess().getValueEStringParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__ValueAssignment_3"


    // $ANTLR start "rule__NetworkDriverOpt__NameAssignment_1"
    // InternalDockerCompose.g:15370:1: rule__NetworkDriverOpt__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__NetworkDriverOpt__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15374:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:15375:2: ( ruleEString )
            {
            // InternalDockerCompose.g:15375:2: ( ruleEString )
            // InternalDockerCompose.g:15376:3: ruleEString
            {
             before(grammarAccess.getNetworkDriverOptAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkDriverOptAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__NameAssignment_1"


    // $ANTLR start "rule__NetworkDriverOpt__ValueAssignment_3"
    // InternalDockerCompose.g:15385:1: rule__NetworkDriverOpt__ValueAssignment_3 : ( ruleEString ) ;
    public final void rule__NetworkDriverOpt__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15389:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:15390:2: ( ruleEString )
            {
            // InternalDockerCompose.g:15390:2: ( ruleEString )
            // InternalDockerCompose.g:15391:3: ruleEString
            {
             before(grammarAccess.getNetworkDriverOptAccess().getValueEStringParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkDriverOptAccess().getValueEStringParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__ValueAssignment_3"


    // $ANTLR start "rule__IPAM__DriverAssignment_1_0_1"
    // InternalDockerCompose.g:15400:1: rule__IPAM__DriverAssignment_1_0_1 : ( ruleEString ) ;
    public final void rule__IPAM__DriverAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15404:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:15405:2: ( ruleEString )
            {
            // InternalDockerCompose.g:15405:2: ( ruleEString )
            // InternalDockerCompose.g:15406:3: ruleEString
            {
             before(grammarAccess.getIPAMAccess().getDriverEStringParserRuleCall_1_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getIPAMAccess().getDriverEStringParserRuleCall_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__DriverAssignment_1_0_1"


    // $ANTLR start "rule__IPAM__ConfigsAssignment_1_1_1_1"
    // InternalDockerCompose.g:15415:1: rule__IPAM__ConfigsAssignment_1_1_1_1 : ( ruleIPAMConfig ) ;
    public final void rule__IPAM__ConfigsAssignment_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15419:1: ( ( ruleIPAMConfig ) )
            // InternalDockerCompose.g:15420:2: ( ruleIPAMConfig )
            {
            // InternalDockerCompose.g:15420:2: ( ruleIPAMConfig )
            // InternalDockerCompose.g:15421:3: ruleIPAMConfig
            {
             before(grammarAccess.getIPAMAccess().getConfigsIPAMConfigParserRuleCall_1_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIPAMConfig();

            state._fsp--;

             after(grammarAccess.getIPAMAccess().getConfigsIPAMConfigParserRuleCall_1_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__ConfigsAssignment_1_1_1_1"


    // $ANTLR start "rule__IPAM__OptionsAssignment_1_2_1"
    // InternalDockerCompose.g:15430:1: rule__IPAM__OptionsAssignment_1_2_1 : ( ruleIPAMOption ) ;
    public final void rule__IPAM__OptionsAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15434:1: ( ( ruleIPAMOption ) )
            // InternalDockerCompose.g:15435:2: ( ruleIPAMOption )
            {
            // InternalDockerCompose.g:15435:2: ( ruleIPAMOption )
            // InternalDockerCompose.g:15436:3: ruleIPAMOption
            {
             before(grammarAccess.getIPAMAccess().getOptionsIPAMOptionParserRuleCall_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIPAMOption();

            state._fsp--;

             after(grammarAccess.getIPAMAccess().getOptionsIPAMOptionParserRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__OptionsAssignment_1_2_1"


    // $ANTLR start "rule__IPAMConfig__SubnetAssignment_1_0_1"
    // InternalDockerCompose.g:15445:1: rule__IPAMConfig__SubnetAssignment_1_0_1 : ( ruleNetworkAddress ) ;
    public final void rule__IPAMConfig__SubnetAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15449:1: ( ( ruleNetworkAddress ) )
            // InternalDockerCompose.g:15450:2: ( ruleNetworkAddress )
            {
            // InternalDockerCompose.g:15450:2: ( ruleNetworkAddress )
            // InternalDockerCompose.g:15451:3: ruleNetworkAddress
            {
             before(grammarAccess.getIPAMConfigAccess().getSubnetNetworkAddressParserRuleCall_1_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNetworkAddress();

            state._fsp--;

             after(grammarAccess.getIPAMConfigAccess().getSubnetNetworkAddressParserRuleCall_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__SubnetAssignment_1_0_1"


    // $ANTLR start "rule__IPAMConfig__Ip_rangeAssignment_1_1_1"
    // InternalDockerCompose.g:15460:1: rule__IPAMConfig__Ip_rangeAssignment_1_1_1 : ( ruleNetworkAddress ) ;
    public final void rule__IPAMConfig__Ip_rangeAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15464:1: ( ( ruleNetworkAddress ) )
            // InternalDockerCompose.g:15465:2: ( ruleNetworkAddress )
            {
            // InternalDockerCompose.g:15465:2: ( ruleNetworkAddress )
            // InternalDockerCompose.g:15466:3: ruleNetworkAddress
            {
             before(grammarAccess.getIPAMConfigAccess().getIp_rangeNetworkAddressParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNetworkAddress();

            state._fsp--;

             after(grammarAccess.getIPAMConfigAccess().getIp_rangeNetworkAddressParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Ip_rangeAssignment_1_1_1"


    // $ANTLR start "rule__IPAMConfig__GatewayAssignment_1_2_1"
    // InternalDockerCompose.g:15475:1: rule__IPAMConfig__GatewayAssignment_1_2_1 : ( ruleDNS ) ;
    public final void rule__IPAMConfig__GatewayAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15479:1: ( ( ruleDNS ) )
            // InternalDockerCompose.g:15480:2: ( ruleDNS )
            {
            // InternalDockerCompose.g:15480:2: ( ruleDNS )
            // InternalDockerCompose.g:15481:3: ruleDNS
            {
             before(grammarAccess.getIPAMConfigAccess().getGatewayDNSParserRuleCall_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getIPAMConfigAccess().getGatewayDNSParserRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__GatewayAssignment_1_2_1"


    // $ANTLR start "rule__IPAMConfig__Aux_addressesAssignment_1_3_1"
    // InternalDockerCompose.g:15490:1: rule__IPAMConfig__Aux_addressesAssignment_1_3_1 : ( ruleIPAMAddress ) ;
    public final void rule__IPAMConfig__Aux_addressesAssignment_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15494:1: ( ( ruleIPAMAddress ) )
            // InternalDockerCompose.g:15495:2: ( ruleIPAMAddress )
            {
            // InternalDockerCompose.g:15495:2: ( ruleIPAMAddress )
            // InternalDockerCompose.g:15496:3: ruleIPAMAddress
            {
             before(grammarAccess.getIPAMConfigAccess().getAux_addressesIPAMAddressParserRuleCall_1_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIPAMAddress();

            state._fsp--;

             after(grammarAccess.getIPAMConfigAccess().getAux_addressesIPAMAddressParserRuleCall_1_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Aux_addressesAssignment_1_3_1"


    // $ANTLR start "rule__IPAMOption__NameAssignment_1"
    // InternalDockerCompose.g:15505:1: rule__IPAMOption__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__IPAMOption__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15509:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:15510:2: ( ruleEString )
            {
            // InternalDockerCompose.g:15510:2: ( ruleEString )
            // InternalDockerCompose.g:15511:3: ruleEString
            {
             before(grammarAccess.getIPAMOptionAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getIPAMOptionAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__NameAssignment_1"


    // $ANTLR start "rule__IPAMOption__ValueAssignment_3"
    // InternalDockerCompose.g:15520:1: rule__IPAMOption__ValueAssignment_3 : ( ruleEString ) ;
    public final void rule__IPAMOption__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15524:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:15525:2: ( ruleEString )
            {
            // InternalDockerCompose.g:15525:2: ( ruleEString )
            // InternalDockerCompose.g:15526:3: ruleEString
            {
             before(grammarAccess.getIPAMOptionAccess().getValueEStringParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getIPAMOptionAccess().getValueEStringParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__ValueAssignment_3"


    // $ANTLR start "rule__IPAMAddress__NameAssignment_1"
    // InternalDockerCompose.g:15535:1: rule__IPAMAddress__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__IPAMAddress__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15539:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:15540:2: ( ruleEString )
            {
            // InternalDockerCompose.g:15540:2: ( ruleEString )
            // InternalDockerCompose.g:15541:3: ruleEString
            {
             before(grammarAccess.getIPAMAddressAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getIPAMAddressAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__NameAssignment_1"


    // $ANTLR start "rule__IPAMAddress__DnsAssignment_3"
    // InternalDockerCompose.g:15550:1: rule__IPAMAddress__DnsAssignment_3 : ( ruleDNS ) ;
    public final void rule__IPAMAddress__DnsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15554:1: ( ( ruleDNS ) )
            // InternalDockerCompose.g:15555:2: ( ruleDNS )
            {
            // InternalDockerCompose.g:15555:2: ( ruleDNS )
            // InternalDockerCompose.g:15556:3: ruleDNS
            {
             before(grammarAccess.getIPAMAddressAccess().getDnsDNSParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getIPAMAddressAccess().getDnsDNSParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__DnsAssignment_3"


    // $ANTLR start "rule__DNS__Dns1Assignment_0"
    // InternalDockerCompose.g:15565:1: rule__DNS__Dns1Assignment_0 : ( ruleEInt ) ;
    public final void rule__DNS__Dns1Assignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15569:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:15570:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:15570:2: ( ruleEInt )
            // InternalDockerCompose.g:15571:3: ruleEInt
            {
             before(grammarAccess.getDNSAccess().getDns1EIntParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getDNSAccess().getDns1EIntParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Dns1Assignment_0"


    // $ANTLR start "rule__DNS__Dns2Assignment_2"
    // InternalDockerCompose.g:15580:1: rule__DNS__Dns2Assignment_2 : ( ruleEInt ) ;
    public final void rule__DNS__Dns2Assignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15584:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:15585:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:15585:2: ( ruleEInt )
            // InternalDockerCompose.g:15586:3: ruleEInt
            {
             before(grammarAccess.getDNSAccess().getDns2EIntParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getDNSAccess().getDns2EIntParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Dns2Assignment_2"


    // $ANTLR start "rule__DNS__Dns3Assignment_4"
    // InternalDockerCompose.g:15595:1: rule__DNS__Dns3Assignment_4 : ( ruleEInt ) ;
    public final void rule__DNS__Dns3Assignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15599:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:15600:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:15600:2: ( ruleEInt )
            // InternalDockerCompose.g:15601:3: ruleEInt
            {
             before(grammarAccess.getDNSAccess().getDns3EIntParserRuleCall_4_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getDNSAccess().getDns3EIntParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Dns3Assignment_4"


    // $ANTLR start "rule__DNS__Dns4Assignment_6"
    // InternalDockerCompose.g:15610:1: rule__DNS__Dns4Assignment_6 : ( ruleEInt ) ;
    public final void rule__DNS__Dns4Assignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15614:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:15615:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:15615:2: ( ruleEInt )
            // InternalDockerCompose.g:15616:3: ruleEInt
            {
             before(grammarAccess.getDNSAccess().getDns4EIntParserRuleCall_6_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getDNSAccess().getDns4EIntParserRuleCall_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Dns4Assignment_6"


    // $ANTLR start "rule__NetworkAddress__Dns1Assignment_0"
    // InternalDockerCompose.g:15625:1: rule__NetworkAddress__Dns1Assignment_0 : ( ruleEInt ) ;
    public final void rule__NetworkAddress__Dns1Assignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15629:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:15630:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:15630:2: ( ruleEInt )
            // InternalDockerCompose.g:15631:3: ruleEInt
            {
             before(grammarAccess.getNetworkAddressAccess().getDns1EIntParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getNetworkAddressAccess().getDns1EIntParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Dns1Assignment_0"


    // $ANTLR start "rule__NetworkAddress__Dns2Assignment_2"
    // InternalDockerCompose.g:15640:1: rule__NetworkAddress__Dns2Assignment_2 : ( ruleEInt ) ;
    public final void rule__NetworkAddress__Dns2Assignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15644:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:15645:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:15645:2: ( ruleEInt )
            // InternalDockerCompose.g:15646:3: ruleEInt
            {
             before(grammarAccess.getNetworkAddressAccess().getDns2EIntParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getNetworkAddressAccess().getDns2EIntParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Dns2Assignment_2"


    // $ANTLR start "rule__NetworkAddress__Dns3Assignment_4"
    // InternalDockerCompose.g:15655:1: rule__NetworkAddress__Dns3Assignment_4 : ( ruleEInt ) ;
    public final void rule__NetworkAddress__Dns3Assignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15659:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:15660:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:15660:2: ( ruleEInt )
            // InternalDockerCompose.g:15661:3: ruleEInt
            {
             before(grammarAccess.getNetworkAddressAccess().getDns3EIntParserRuleCall_4_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getNetworkAddressAccess().getDns3EIntParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Dns3Assignment_4"


    // $ANTLR start "rule__NetworkAddress__Dns4Assignment_6"
    // InternalDockerCompose.g:15670:1: rule__NetworkAddress__Dns4Assignment_6 : ( ruleEInt ) ;
    public final void rule__NetworkAddress__Dns4Assignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15674:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:15675:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:15675:2: ( ruleEInt )
            // InternalDockerCompose.g:15676:3: ruleEInt
            {
             before(grammarAccess.getNetworkAddressAccess().getDns4EIntParserRuleCall_6_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getNetworkAddressAccess().getDns4EIntParserRuleCall_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Dns4Assignment_6"


    // $ANTLR start "rule__NetworkAddress__NetIdAssignment_8"
    // InternalDockerCompose.g:15685:1: rule__NetworkAddress__NetIdAssignment_8 : ( ruleEInt ) ;
    public final void rule__NetworkAddress__NetIdAssignment_8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:15689:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:15690:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:15690:2: ( ruleEInt )
            // InternalDockerCompose.g:15691:3: ruleEInt
            {
             before(grammarAccess.getNetworkAddressAccess().getNetIdEIntParserRuleCall_8_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getNetworkAddressAccess().getNetIdEIntParserRuleCall_8_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__NetIdAssignment_8"

    // Delegated rules


    protected DFA52 dfa52 = new DFA52(this);
    protected DFA53 dfa53 = new DFA53(this);
    protected DFA62 dfa62 = new DFA62(this);
    protected DFA78 dfa78 = new DFA78(this);
    protected DFA90 dfa90 = new DFA90(this);
    protected DFA91 dfa91 = new DFA91(this);
    protected DFA92 dfa92 = new DFA92(this);
    protected DFA93 dfa93 = new DFA93(this);
    protected DFA94 dfa94 = new DFA94(this);
    protected DFA95 dfa95 = new DFA95(this);
    protected DFA96 dfa96 = new DFA96(this);
    protected DFA97 dfa97 = new DFA97(this);
    protected DFA98 dfa98 = new DFA98(this);
    protected DFA99 dfa99 = new DFA99(this);
    protected DFA100 dfa100 = new DFA100(this);
    protected DFA101 dfa101 = new DFA101(this);
    protected DFA102 dfa102 = new DFA102(this);
    protected DFA103 dfa103 = new DFA103(this);
    protected DFA104 dfa104 = new DFA104(this);
    protected DFA105 dfa105 = new DFA105(this);
    protected DFA106 dfa106 = new DFA106(this);
    protected DFA107 dfa107 = new DFA107(this);
    protected DFA108 dfa108 = new DFA108(this);
    protected DFA115 dfa115 = new DFA115(this);
    protected DFA116 dfa116 = new DFA116(this);
    protected DFA117 dfa117 = new DFA117(this);
    protected DFA118 dfa118 = new DFA118(this);
    protected DFA119 dfa119 = new DFA119(this);
    protected DFA120 dfa120 = new DFA120(this);
    protected DFA131 dfa131 = new DFA131(this);
    protected DFA132 dfa132 = new DFA132(this);
    protected DFA133 dfa133 = new DFA133(this);
    protected DFA134 dfa134 = new DFA134(this);
    protected DFA135 dfa135 = new DFA135(this);
    protected DFA136 dfa136 = new DFA136(this);
    protected DFA137 dfa137 = new DFA137(this);
    protected DFA138 dfa138 = new DFA138(this);
    protected DFA139 dfa139 = new DFA139(this);
    protected DFA140 dfa140 = new DFA140(this);
    protected DFA156 dfa156 = new DFA156(this);
    protected DFA158 dfa158 = new DFA158(this);
    protected DFA159 dfa159 = new DFA159(this);
    static final String dfa_1s = "\32\uffff";
    static final String dfa_2s = "\1\uffff\1\5\5\uffff\2\5\1\uffff\2\5\3\uffff\1\5\1\uffff\1\5\4\uffff\1\5\3\uffff";
    static final String dfa_3s = "\3\12\1\4\2\uffff\1\21\5\4\1\12\3\4\1\12\3\4\1\12\2\4\1\12\2\4";
    static final String dfa_4s = "\1\12\1\101\1\12\1\23\2\uffff\3\100\1\12\2\100\1\12\2\100\1\76\1\12\3\100\1\12\2\100\1\12\2\100";
    static final String dfa_5s = "\4\uffff\1\1\1\2\24\uffff";
    static final String dfa_6s = "\32\uffff}>";
    static final String[] dfa_7s = {
            "\1\1",
            "\1\5\6\uffff\1\2\30\uffff\6\5\1\3\16\5\1\uffff\1\4\1\5",
            "\1\6",
            "\1\7\5\uffff\1\10\10\uffff\1\5",
            "",
            "",
            "\1\2\36\uffff\1\11\17\uffff\1\4",
            "\1\12\5\uffff\1\13\6\uffff\1\5\1\uffff\1\5\26\uffff\6\5\1\11\16\5\1\uffff\1\4",
            "\1\12\5\uffff\1\13\6\uffff\1\14\1\uffff\1\5\26\uffff\6\5\1\11\16\5\1\uffff\1\4",
            "\1\15\5\uffff\1\16",
            "\1\12\5\uffff\1\13\6\uffff\1\5\1\uffff\1\5\26\uffff\6\5\1\11\16\5\1\uffff\1\4",
            "\1\12\5\uffff\1\13\6\uffff\1\20\1\uffff\1\5\26\uffff\6\5\1\17\16\5\1\uffff\1\4",
            "\1\21",
            "\1\22\5\uffff\1\23\45\uffff\1\11\17\uffff\1\4",
            "\1\22\5\uffff\1\23\6\uffff\1\24\36\uffff\1\11\17\uffff\1\4",
            "\1\15\5\uffff\1\25\37\uffff\6\5\1\uffff\16\5",
            "\1\26",
            "\1\12\5\uffff\1\13\6\uffff\1\14\1\uffff\1\5\26\uffff\6\5\1\11\16\5\1\uffff\1\4",
            "\1\22\5\uffff\1\23\45\uffff\1\11\17\uffff\1\4",
            "\1\22\5\uffff\1\23\6\uffff\1\27\36\uffff\1\11\17\uffff\1\4",
            "\1\30",
            "\1\22\5\uffff\1\23\6\uffff\1\24\36\uffff\1\17\17\uffff\1\4",
            "\1\12\5\uffff\1\13\6\uffff\1\20\1\uffff\1\5\26\uffff\6\5\1\11\16\5\1\uffff\1\4",
            "\1\31",
            "\1\22\5\uffff\1\23\6\uffff\1\24\36\uffff\1\11\17\uffff\1\4",
            "\1\22\5\uffff\1\23\6\uffff\1\27\36\uffff\1\11\17\uffff\1\4"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA52 extends DFA {

        public DFA52(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 52;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "4319:2: ( rule__Image__Group_0__0 )?";
        }
    }
    static final String dfa_8s = "\17\uffff";
    static final String dfa_9s = "\1\uffff\1\4\3\uffff\4\4\1\uffff\1\4\1\uffff\1\4\1\uffff\1\4";
    static final String dfa_10s = "\2\12\1\uffff\1\4\1\uffff\4\4\1\12\1\4\1\12\3\4";
    static final String dfa_11s = "\1\12\1\101\1\uffff\1\23\1\uffff\4\100\1\12\1\76\1\12\3\100";
    static final String dfa_12s = "\2\uffff\1\1\1\uffff\1\2\12\uffff";
    static final String dfa_13s = "\17\uffff}>";
    static final String[] dfa_14s = {
            "\1\1",
            "\1\4\6\uffff\1\2\30\uffff\6\4\1\3\16\4\1\uffff\1\2\1\4",
            "",
            "\1\5\5\uffff\1\6\10\uffff\1\4",
            "",
            "\1\7\5\uffff\1\10\6\uffff\1\4\1\uffff\1\4\26\uffff\6\4\1\2\16\4\1\uffff\1\2",
            "\1\7\5\uffff\1\10\6\uffff\1\11\1\uffff\1\4\26\uffff\6\4\1\2\16\4\1\uffff\1\2",
            "\1\7\5\uffff\1\10\6\uffff\1\4\1\uffff\1\4\26\uffff\6\4\1\2\16\4\1\uffff\1\2",
            "\1\7\5\uffff\1\10\6\uffff\1\13\1\uffff\1\4\26\uffff\6\4\1\12\16\4\1\uffff\1\2",
            "\1\14",
            "\1\2\5\uffff\1\15\37\uffff\6\4\1\uffff\16\4",
            "\1\16",
            "\1\7\5\uffff\1\10\6\uffff\1\11\1\uffff\1\4\26\uffff\6\4\1\2\16\4\1\uffff\1\2",
            "\1\2\5\uffff\1\2\6\uffff\1\2\36\uffff\1\12\17\uffff\1\2",
            "\1\7\5\uffff\1\10\6\uffff\1\13\1\uffff\1\4\26\uffff\6\4\1\2\16\4\1\uffff\1\2"
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final short[] dfa_9 = DFA.unpackEncodedString(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final char[] dfa_11 = DFA.unpackEncodedStringToUnsignedChars(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[][] dfa_14 = unpackEncodedStringArray(dfa_14s);

    class DFA53 extends DFA {

        public DFA53(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 53;
            this.eot = dfa_8;
            this.eof = dfa_9;
            this.min = dfa_10;
            this.max = dfa_11;
            this.accept = dfa_12;
            this.special = dfa_13;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "4346:2: ( rule__Image__Group_1__0 )?";
        }
    }
    static final String dfa_15s = "\6\uffff";
    static final String dfa_16s = "\1\1\1\uffff\1\3\1\uffff\1\1\1\3";
    static final String dfa_17s = "\1\4\1\uffff\1\4\1\uffff\2\4";
    static final String dfa_18s = "\1\76\1\uffff\1\76\1\uffff\2\76";
    static final String dfa_19s = "\1\uffff\1\2\1\uffff\1\1\2\uffff";
    static final String dfa_20s = "\6\uffff}>";
    static final String[] dfa_21s = {
            "\1\3\5\uffff\1\2\37\uffff\25\1",
            "",
            "\1\3\5\uffff\1\3\6\uffff\1\3\30\uffff\6\3\1\4\16\3",
            "",
            "\1\3\5\uffff\1\5\37\uffff\6\1\1\uffff\16\1",
            "\1\3\5\uffff\1\3\6\uffff\1\3\30\uffff\6\3\1\4\16\3"
    };

    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final char[] dfa_18 = DFA.unpackEncodedStringToUnsignedChars(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[][] dfa_21 = unpackEncodedStringArray(dfa_21s);

    class DFA62 extends DFA {

        public DFA62(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 62;
            this.eot = dfa_15;
            this.eof = dfa_16;
            this.min = dfa_17;
            this.max = dfa_18;
            this.accept = dfa_19;
            this.special = dfa_20;
            this.transition = dfa_21;
        }
        public String getDescription() {
            return "()* loopback of 4939:3: ( rule__Image__Alternatives_3_1_2_1 )*";
        }
    }
    static final String dfa_22s = "\10\uffff";
    static final String dfa_23s = "\4\4\1\uffff\1\4\1\uffff\1\4";
    static final String dfa_24s = "\4\145\1\uffff\1\145\1\uffff\1\145";
    static final String dfa_25s = "\4\uffff\1\2\1\uffff\1\1\1\uffff";
    static final String dfa_26s = "\10\uffff}>";
    static final String[] dfa_27s = {
            "\6\4\1\1\2\4\4\uffff\1\2\1\3\1\4\26\uffff\25\4\1\uffff\1\4\6\uffff\4\4\1\uffff\1\4\1\uffff\1\4\1\uffff\3\4\6\uffff\2\4\3\uffff\1\4\6\uffff\1\4",
            "\11\4\4\uffff\1\5\2\4\26\uffff\25\4\1\uffff\1\6\6\uffff\4\4\1\uffff\1\4\1\uffff\1\4\1\uffff\3\4\6\uffff\2\4\3\uffff\1\4\6\uffff\1\4",
            "\11\4\4\uffff\3\4\26\uffff\25\4\1\uffff\1\6\6\uffff\4\4\1\uffff\1\4\1\uffff\1\4\1\uffff\3\4\6\uffff\2\4\3\uffff\1\4\6\uffff\1\4",
            "\11\4\4\uffff\3\4\26\uffff\25\4\1\uffff\1\6\6\uffff\4\4\1\uffff\1\4\1\uffff\1\4\1\uffff\3\4\6\uffff\2\4\3\uffff\1\4\6\uffff\1\4",
            "",
            "\6\4\1\7\2\4\4\uffff\3\4\26\uffff\6\4\1\uffff\16\4\1\uffff\1\4\44\uffff\1\4",
            "",
            "\11\4\4\uffff\1\5\2\4\26\uffff\25\4\1\uffff\1\6\6\uffff\4\4\1\uffff\1\4\1\uffff\1\4\1\uffff\3\4\6\uffff\2\4\3\uffff\1\4\6\uffff\1\4"
    };

    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final char[] dfa_24 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final char[] dfa_25 = DFA.unpackEncodedStringToUnsignedChars(dfa_24s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_25s);
    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_26s);
    static final short[][] dfa_28 = unpackEncodedStringArray(dfa_27s);

    class DFA78 extends DFA {

        public DFA78(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 78;
            this.eot = dfa_22;
            this.eof = dfa_23;
            this.min = dfa_24;
            this.max = dfa_25;
            this.accept = dfa_26;
            this.special = dfa_27;
            this.transition = dfa_28;
        }
        public String getDescription() {
            return "()* loopback of 10485:2: ( rule__PATH__Group_1_1__0 )*";
        }
    }
    static final String dfa_28s = "\1\23\31\uffff";
    static final String dfa_29s = "\1\12\12\uffff\4\12\5\uffff\1\60\4\uffff\1\0";
    static final String dfa_30s = "\1\76\12\uffff\4\23\5\uffff\1\60\4\uffff\1\0";
    static final String dfa_31s = "\1\uffff\12\1\4\uffff\4\1\1\2\1\uffff\4\1\1\uffff";
    static final String dfa_32s = "\1\4\12\uffff\1\5\1\0\1\3\1\2\12\uffff\1\1}>";
    static final String[] dfa_33s = {
            "\1\23\37\uffff\2\23\1\14\1\15\1\16\1\13\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\17\1\20\1\21\1\22",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\24\10\uffff\1\25",
            "\1\23\10\uffff\1\26",
            "\1\23\10\uffff\1\27",
            "\1\23\10\uffff\1\30",
            "",
            "",
            "",
            "",
            "",
            "\1\31",
            "",
            "",
            "",
            "",
            "\1\uffff"
    };
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_28s);
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final char[] dfa_31 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_31s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_32s);
    static final short[][] dfa_34 = unpackEncodedStringArray(dfa_33s);

    class DFA90 extends DFA {

        public DFA90(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 90;
            this.eot = dfa_1;
            this.eof = dfa_29;
            this.min = dfa_30;
            this.max = dfa_31;
            this.accept = dfa_32;
            this.special = dfa_33;
            this.transition = dfa_34;
        }
        public String getDescription() {
            return "11689:2: ( rule__Service__UnorderedGroup_3__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA90_12 = input.LA(1);

                         
                        int index90_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA90_12==RULE_ID) ) {s = 19;}

                        else if ( LA90_12 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index90_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA90_25 = input.LA(1);

                         
                        int index90_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 24;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index90_25);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA90_14 = input.LA(1);

                         
                        int index90_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA90_14==RULE_ID) ) {s = 19;}

                        else if ( LA90_14 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 24;}

                         
                        input.seek(index90_14);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA90_13 = input.LA(1);

                         
                        int index90_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA90_13==RULE_ID) ) {s = 19;}

                        else if ( LA90_13 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                         
                        input.seek(index90_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA90_0 = input.LA(1);

                         
                        int index90_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA90_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA90_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA90_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA90_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA90_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA90_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA90_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA90_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA90_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( LA90_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 10;}

                        else if ( (LA90_0==47) ) {s = 11;}

                        else if ( (LA90_0==44) ) {s = 12;}

                        else if ( (LA90_0==45) ) {s = 13;}

                        else if ( (LA90_0==46) ) {s = 14;}

                        else if ( LA90_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA90_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA90_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( LA90_0 == 62 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 17) ) {s = 18;}

                        else if ( (LA90_0==EOF||LA90_0==RULE_ID||(LA90_0>=42 && LA90_0<=43)) ) {s = 19;}

                         
                        input.seek(index90_0);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA90_11 = input.LA(1);

                         
                        int index90_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA90_11==RULE_ID) ) {s = 20;}

                        else if ( LA90_11 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index90_11);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 90, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_34s = "\23\uffff";
    static final String dfa_35s = "\1\54\22\uffff";
    static final String dfa_36s = "\1\76\22\uffff";
    static final String dfa_37s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22";
    static final String dfa_38s = "\1\0\22\uffff}>";
    static final String[] dfa_39s = {
            "\1\14\1\15\1\16\1\13\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\17\1\20\1\21\1\22",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_34s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final char[] dfa_37 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_37s);
    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_38s);
    static final short[][] dfa_40 = unpackEncodedStringArray(dfa_39s);

    class DFA91 extends DFA {

        public DFA91(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 91;
            this.eot = dfa_35;
            this.eof = dfa_35;
            this.min = dfa_36;
            this.max = dfa_37;
            this.accept = dfa_38;
            this.special = dfa_39;
            this.transition = dfa_40;
        }
        public String getDescription() {
            return "11703:3: ( ({...}? => ( ( ( rule__Service__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_15__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_16__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_17__0 ) ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA91_0 = input.LA(1);

                         
                        int index91_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA91_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA91_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA91_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA91_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA91_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA91_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA91_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA91_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA91_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( LA91_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 10;}

                        else if ( LA91_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 11;}

                        else if ( LA91_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 12;}

                        else if ( LA91_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA91_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA91_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA91_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA91_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( LA91_0 == 62 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 17) ) {s = 18;}

                         
                        input.seek(index91_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 91, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_40s = "\1\0\12\uffff\1\5\1\1\1\3\1\2\12\uffff\1\4}>";
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_40s);

    class DFA92 extends DFA {

        public DFA92(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 92;
            this.eot = dfa_1;
            this.eof = dfa_29;
            this.min = dfa_30;
            this.max = dfa_31;
            this.accept = dfa_32;
            this.special = dfa_41;
            this.transition = dfa_34;
        }
        public String getDescription() {
            return "11988:2: ( rule__Service__UnorderedGroup_3__1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA92_0 = input.LA(1);

                         
                        int index92_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA92_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA92_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA92_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA92_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA92_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA92_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA92_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA92_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA92_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( LA92_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 10;}

                        else if ( (LA92_0==47) ) {s = 11;}

                        else if ( (LA92_0==44) ) {s = 12;}

                        else if ( (LA92_0==45) ) {s = 13;}

                        else if ( (LA92_0==46) ) {s = 14;}

                        else if ( LA92_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA92_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA92_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( LA92_0 == 62 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 17) ) {s = 18;}

                        else if ( (LA92_0==EOF||LA92_0==RULE_ID||(LA92_0>=42 && LA92_0<=43)) ) {s = 19;}

                         
                        input.seek(index92_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA92_12 = input.LA(1);

                         
                        int index92_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA92_12==RULE_ID) ) {s = 19;}

                        else if ( LA92_12 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index92_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA92_14 = input.LA(1);

                         
                        int index92_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA92_14==RULE_ID) ) {s = 19;}

                        else if ( LA92_14 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 24;}

                         
                        input.seek(index92_14);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA92_13 = input.LA(1);

                         
                        int index92_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA92_13==RULE_ID) ) {s = 19;}

                        else if ( LA92_13 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                         
                        input.seek(index92_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA92_25 = input.LA(1);

                         
                        int index92_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 24;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index92_25);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA92_11 = input.LA(1);

                         
                        int index92_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA92_11==RULE_ID) ) {s = 20;}

                        else if ( LA92_11 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index92_11);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 92, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_41s = "\1\4\12\uffff\1\3\1\0\1\2\1\1\12\uffff\1\5}>";
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_41s);

    class DFA93 extends DFA {

        public DFA93(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 93;
            this.eot = dfa_1;
            this.eof = dfa_29;
            this.min = dfa_30;
            this.max = dfa_31;
            this.accept = dfa_32;
            this.special = dfa_42;
            this.transition = dfa_34;
        }
        public String getDescription() {
            return "12000:2: ( rule__Service__UnorderedGroup_3__2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA93_12 = input.LA(1);

                         
                        int index93_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA93_12==RULE_ID) ) {s = 19;}

                        else if ( LA93_12 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index93_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA93_14 = input.LA(1);

                         
                        int index93_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA93_14==RULE_ID) ) {s = 19;}

                        else if ( LA93_14 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 24;}

                         
                        input.seek(index93_14);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA93_13 = input.LA(1);

                         
                        int index93_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA93_13==RULE_ID) ) {s = 19;}

                        else if ( LA93_13 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                         
                        input.seek(index93_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA93_11 = input.LA(1);

                         
                        int index93_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA93_11==RULE_ID) ) {s = 20;}

                        else if ( LA93_11 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index93_11);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA93_0 = input.LA(1);

                         
                        int index93_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA93_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA93_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA93_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA93_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA93_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA93_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA93_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA93_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA93_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( LA93_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 10;}

                        else if ( (LA93_0==47) ) {s = 11;}

                        else if ( (LA93_0==44) ) {s = 12;}

                        else if ( (LA93_0==45) ) {s = 13;}

                        else if ( (LA93_0==46) ) {s = 14;}

                        else if ( LA93_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA93_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA93_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( LA93_0 == 62 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 17) ) {s = 18;}

                        else if ( (LA93_0==EOF||LA93_0==RULE_ID||(LA93_0>=42 && LA93_0<=43)) ) {s = 19;}

                         
                        input.seek(index93_0);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA93_25 = input.LA(1);

                         
                        int index93_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 24;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index93_25);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 93, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_42s = "\1\5\12\uffff\1\4\1\0\1\3\1\2\12\uffff\1\1}>";
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_42s);

    class DFA94 extends DFA {

        public DFA94(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 94;
            this.eot = dfa_1;
            this.eof = dfa_29;
            this.min = dfa_30;
            this.max = dfa_31;
            this.accept = dfa_32;
            this.special = dfa_43;
            this.transition = dfa_34;
        }
        public String getDescription() {
            return "12012:2: ( rule__Service__UnorderedGroup_3__3 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA94_12 = input.LA(1);

                         
                        int index94_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA94_12==RULE_ID) ) {s = 19;}

                        else if ( LA94_12 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index94_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA94_25 = input.LA(1);

                         
                        int index94_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 24;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index94_25);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA94_14 = input.LA(1);

                         
                        int index94_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA94_14==RULE_ID) ) {s = 19;}

                        else if ( LA94_14 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 24;}

                         
                        input.seek(index94_14);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA94_13 = input.LA(1);

                         
                        int index94_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA94_13==RULE_ID) ) {s = 19;}

                        else if ( LA94_13 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                         
                        input.seek(index94_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA94_11 = input.LA(1);

                         
                        int index94_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA94_11==RULE_ID) ) {s = 20;}

                        else if ( LA94_11 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index94_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA94_0 = input.LA(1);

                         
                        int index94_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA94_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA94_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA94_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA94_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA94_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA94_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA94_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA94_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA94_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( LA94_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 10;}

                        else if ( (LA94_0==47) ) {s = 11;}

                        else if ( (LA94_0==44) ) {s = 12;}

                        else if ( (LA94_0==45) ) {s = 13;}

                        else if ( (LA94_0==46) ) {s = 14;}

                        else if ( LA94_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA94_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA94_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( LA94_0 == 62 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 17) ) {s = 18;}

                        else if ( (LA94_0==EOF||LA94_0==RULE_ID||(LA94_0>=42 && LA94_0<=43)) ) {s = 19;}

                         
                        input.seek(index94_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 94, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_43s = "\1\1\12\uffff\1\4\1\0\1\3\1\2\12\uffff\1\5}>";
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_43s);

    class DFA95 extends DFA {

        public DFA95(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 95;
            this.eot = dfa_1;
            this.eof = dfa_29;
            this.min = dfa_30;
            this.max = dfa_31;
            this.accept = dfa_32;
            this.special = dfa_44;
            this.transition = dfa_34;
        }
        public String getDescription() {
            return "12024:2: ( rule__Service__UnorderedGroup_3__4 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA95_12 = input.LA(1);

                         
                        int index95_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA95_12==RULE_ID) ) {s = 19;}

                        else if ( LA95_12 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index95_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA95_0 = input.LA(1);

                         
                        int index95_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA95_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA95_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA95_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA95_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA95_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA95_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA95_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA95_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA95_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( LA95_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 10;}

                        else if ( (LA95_0==47) ) {s = 11;}

                        else if ( (LA95_0==44) ) {s = 12;}

                        else if ( (LA95_0==45) ) {s = 13;}

                        else if ( (LA95_0==46) ) {s = 14;}

                        else if ( LA95_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA95_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA95_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( LA95_0 == 62 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 17) ) {s = 18;}

                        else if ( (LA95_0==EOF||LA95_0==RULE_ID||(LA95_0>=42 && LA95_0<=43)) ) {s = 19;}

                         
                        input.seek(index95_0);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA95_14 = input.LA(1);

                         
                        int index95_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA95_14==RULE_ID) ) {s = 19;}

                        else if ( LA95_14 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 24;}

                         
                        input.seek(index95_14);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA95_13 = input.LA(1);

                         
                        int index95_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA95_13==RULE_ID) ) {s = 19;}

                        else if ( LA95_13 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                         
                        input.seek(index95_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA95_11 = input.LA(1);

                         
                        int index95_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA95_11==RULE_ID) ) {s = 20;}

                        else if ( LA95_11 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index95_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA95_25 = input.LA(1);

                         
                        int index95_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 24;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index95_25);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 95, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_44s = "\1\0\12\uffff\1\4\1\1\1\3\1\2\12\uffff\1\5}>";
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_44s);

    class DFA96 extends DFA {

        public DFA96(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 96;
            this.eot = dfa_1;
            this.eof = dfa_29;
            this.min = dfa_30;
            this.max = dfa_31;
            this.accept = dfa_32;
            this.special = dfa_45;
            this.transition = dfa_34;
        }
        public String getDescription() {
            return "12036:2: ( rule__Service__UnorderedGroup_3__5 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA96_0 = input.LA(1);

                         
                        int index96_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA96_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA96_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA96_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA96_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA96_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA96_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA96_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA96_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA96_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( LA96_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 10;}

                        else if ( (LA96_0==47) ) {s = 11;}

                        else if ( (LA96_0==44) ) {s = 12;}

                        else if ( (LA96_0==45) ) {s = 13;}

                        else if ( (LA96_0==46) ) {s = 14;}

                        else if ( LA96_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA96_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA96_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( LA96_0 == 62 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 17) ) {s = 18;}

                        else if ( (LA96_0==EOF||LA96_0==RULE_ID||(LA96_0>=42 && LA96_0<=43)) ) {s = 19;}

                         
                        input.seek(index96_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA96_12 = input.LA(1);

                         
                        int index96_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA96_12==RULE_ID) ) {s = 19;}

                        else if ( LA96_12 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index96_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA96_14 = input.LA(1);

                         
                        int index96_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA96_14==RULE_ID) ) {s = 19;}

                        else if ( LA96_14 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 24;}

                         
                        input.seek(index96_14);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA96_13 = input.LA(1);

                         
                        int index96_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA96_13==RULE_ID) ) {s = 19;}

                        else if ( LA96_13 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                         
                        input.seek(index96_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA96_11 = input.LA(1);

                         
                        int index96_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA96_11==RULE_ID) ) {s = 20;}

                        else if ( LA96_11 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index96_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA96_25 = input.LA(1);

                         
                        int index96_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 24;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index96_25);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 96, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA97 extends DFA {

        public DFA97(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 97;
            this.eot = dfa_1;
            this.eof = dfa_29;
            this.min = dfa_30;
            this.max = dfa_31;
            this.accept = dfa_32;
            this.special = dfa_45;
            this.transition = dfa_34;
        }
        public String getDescription() {
            return "12048:2: ( rule__Service__UnorderedGroup_3__6 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA97_0 = input.LA(1);

                         
                        int index97_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA97_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA97_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA97_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA97_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA97_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA97_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA97_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA97_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA97_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( LA97_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 10;}

                        else if ( (LA97_0==47) ) {s = 11;}

                        else if ( (LA97_0==44) ) {s = 12;}

                        else if ( (LA97_0==45) ) {s = 13;}

                        else if ( (LA97_0==46) ) {s = 14;}

                        else if ( LA97_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA97_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA97_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( LA97_0 == 62 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 17) ) {s = 18;}

                        else if ( (LA97_0==EOF||LA97_0==RULE_ID||(LA97_0>=42 && LA97_0<=43)) ) {s = 19;}

                         
                        input.seek(index97_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA97_12 = input.LA(1);

                         
                        int index97_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA97_12==RULE_ID) ) {s = 19;}

                        else if ( LA97_12 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index97_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA97_14 = input.LA(1);

                         
                        int index97_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA97_14==RULE_ID) ) {s = 19;}

                        else if ( LA97_14 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 24;}

                         
                        input.seek(index97_14);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA97_13 = input.LA(1);

                         
                        int index97_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA97_13==RULE_ID) ) {s = 19;}

                        else if ( LA97_13 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                         
                        input.seek(index97_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA97_11 = input.LA(1);

                         
                        int index97_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA97_11==RULE_ID) ) {s = 20;}

                        else if ( LA97_11 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index97_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA97_25 = input.LA(1);

                         
                        int index97_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 24;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index97_25);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 97, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_45s = "\1\2\12\uffff\1\4\1\0\1\3\1\1\12\uffff\1\5}>";
    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_45s);

    class DFA98 extends DFA {

        public DFA98(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 98;
            this.eot = dfa_1;
            this.eof = dfa_29;
            this.min = dfa_30;
            this.max = dfa_31;
            this.accept = dfa_32;
            this.special = dfa_46;
            this.transition = dfa_34;
        }
        public String getDescription() {
            return "12060:2: ( rule__Service__UnorderedGroup_3__7 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA98_12 = input.LA(1);

                         
                        int index98_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA98_12==RULE_ID) ) {s = 19;}

                        else if ( LA98_12 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index98_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA98_14 = input.LA(1);

                         
                        int index98_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA98_14==RULE_ID) ) {s = 19;}

                        else if ( LA98_14 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 24;}

                         
                        input.seek(index98_14);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA98_0 = input.LA(1);

                         
                        int index98_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA98_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA98_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA98_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA98_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA98_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA98_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA98_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA98_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA98_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( LA98_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 10;}

                        else if ( (LA98_0==47) ) {s = 11;}

                        else if ( (LA98_0==44) ) {s = 12;}

                        else if ( (LA98_0==45) ) {s = 13;}

                        else if ( (LA98_0==46) ) {s = 14;}

                        else if ( LA98_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA98_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA98_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( LA98_0 == 62 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 17) ) {s = 18;}

                        else if ( (LA98_0==EOF||LA98_0==RULE_ID||(LA98_0>=42 && LA98_0<=43)) ) {s = 19;}

                         
                        input.seek(index98_0);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA98_13 = input.LA(1);

                         
                        int index98_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA98_13==RULE_ID) ) {s = 19;}

                        else if ( LA98_13 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                         
                        input.seek(index98_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA98_11 = input.LA(1);

                         
                        int index98_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA98_11==RULE_ID) ) {s = 20;}

                        else if ( LA98_11 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index98_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA98_25 = input.LA(1);

                         
                        int index98_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 24;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index98_25);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 98, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_46s = "\1\0\12\uffff\1\5\1\1\1\4\1\3\12\uffff\1\2}>";
    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_46s);

    class DFA99 extends DFA {

        public DFA99(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 99;
            this.eot = dfa_1;
            this.eof = dfa_29;
            this.min = dfa_30;
            this.max = dfa_31;
            this.accept = dfa_32;
            this.special = dfa_47;
            this.transition = dfa_34;
        }
        public String getDescription() {
            return "12072:2: ( rule__Service__UnorderedGroup_3__8 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA99_0 = input.LA(1);

                         
                        int index99_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA99_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA99_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA99_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA99_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA99_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA99_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA99_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA99_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA99_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( LA99_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 10;}

                        else if ( (LA99_0==47) ) {s = 11;}

                        else if ( (LA99_0==44) ) {s = 12;}

                        else if ( (LA99_0==45) ) {s = 13;}

                        else if ( (LA99_0==46) ) {s = 14;}

                        else if ( LA99_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA99_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA99_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( LA99_0 == 62 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 17) ) {s = 18;}

                        else if ( (LA99_0==EOF||LA99_0==RULE_ID||(LA99_0>=42 && LA99_0<=43)) ) {s = 19;}

                         
                        input.seek(index99_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA99_12 = input.LA(1);

                         
                        int index99_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA99_12==RULE_ID) ) {s = 19;}

                        else if ( LA99_12 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index99_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA99_25 = input.LA(1);

                         
                        int index99_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 24;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index99_25);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA99_14 = input.LA(1);

                         
                        int index99_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA99_14==RULE_ID) ) {s = 19;}

                        else if ( LA99_14 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 24;}

                         
                        input.seek(index99_14);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA99_13 = input.LA(1);

                         
                        int index99_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA99_13==RULE_ID) ) {s = 19;}

                        else if ( LA99_13 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                         
                        input.seek(index99_13);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA99_11 = input.LA(1);

                         
                        int index99_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA99_11==RULE_ID) ) {s = 20;}

                        else if ( LA99_11 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index99_11);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 99, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA100 extends DFA {

        public DFA100(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 100;
            this.eot = dfa_1;
            this.eof = dfa_29;
            this.min = dfa_30;
            this.max = dfa_31;
            this.accept = dfa_32;
            this.special = dfa_44;
            this.transition = dfa_34;
        }
        public String getDescription() {
            return "12084:2: ( rule__Service__UnorderedGroup_3__9 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA100_12 = input.LA(1);

                         
                        int index100_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA100_12==RULE_ID) ) {s = 19;}

                        else if ( LA100_12 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index100_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA100_0 = input.LA(1);

                         
                        int index100_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA100_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA100_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA100_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA100_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA100_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA100_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA100_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA100_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA100_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( LA100_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 10;}

                        else if ( (LA100_0==47) ) {s = 11;}

                        else if ( (LA100_0==44) ) {s = 12;}

                        else if ( (LA100_0==45) ) {s = 13;}

                        else if ( (LA100_0==46) ) {s = 14;}

                        else if ( LA100_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA100_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA100_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( LA100_0 == 62 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 17) ) {s = 18;}

                        else if ( (LA100_0==EOF||LA100_0==RULE_ID||(LA100_0>=42 && LA100_0<=43)) ) {s = 19;}

                         
                        input.seek(index100_0);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA100_14 = input.LA(1);

                         
                        int index100_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA100_14==RULE_ID) ) {s = 19;}

                        else if ( LA100_14 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 24;}

                         
                        input.seek(index100_14);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA100_13 = input.LA(1);

                         
                        int index100_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA100_13==RULE_ID) ) {s = 19;}

                        else if ( LA100_13 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                         
                        input.seek(index100_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA100_11 = input.LA(1);

                         
                        int index100_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA100_11==RULE_ID) ) {s = 20;}

                        else if ( LA100_11 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index100_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA100_25 = input.LA(1);

                         
                        int index100_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 24;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index100_25);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 100, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA101 extends DFA {

        public DFA101(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 101;
            this.eot = dfa_1;
            this.eof = dfa_29;
            this.min = dfa_30;
            this.max = dfa_31;
            this.accept = dfa_32;
            this.special = dfa_44;
            this.transition = dfa_34;
        }
        public String getDescription() {
            return "12096:2: ( rule__Service__UnorderedGroup_3__10 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA101_12 = input.LA(1);

                         
                        int index101_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA101_12==RULE_ID) ) {s = 19;}

                        else if ( LA101_12 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index101_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA101_0 = input.LA(1);

                         
                        int index101_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA101_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA101_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA101_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA101_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA101_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA101_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA101_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA101_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA101_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( LA101_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 10;}

                        else if ( (LA101_0==47) ) {s = 11;}

                        else if ( (LA101_0==44) ) {s = 12;}

                        else if ( (LA101_0==45) ) {s = 13;}

                        else if ( (LA101_0==46) ) {s = 14;}

                        else if ( LA101_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA101_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA101_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( LA101_0 == 62 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 17) ) {s = 18;}

                        else if ( (LA101_0==EOF||LA101_0==RULE_ID||(LA101_0>=42 && LA101_0<=43)) ) {s = 19;}

                         
                        input.seek(index101_0);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA101_14 = input.LA(1);

                         
                        int index101_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA101_14==RULE_ID) ) {s = 19;}

                        else if ( LA101_14 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 24;}

                         
                        input.seek(index101_14);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA101_13 = input.LA(1);

                         
                        int index101_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA101_13==RULE_ID) ) {s = 19;}

                        else if ( LA101_13 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                         
                        input.seek(index101_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA101_11 = input.LA(1);

                         
                        int index101_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA101_11==RULE_ID) ) {s = 20;}

                        else if ( LA101_11 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index101_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA101_25 = input.LA(1);

                         
                        int index101_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 24;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index101_25);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 101, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_47s = "\1\5\12\uffff\1\3\1\0\1\2\1\1\12\uffff\1\4}>";
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_47s);

    class DFA102 extends DFA {

        public DFA102(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 102;
            this.eot = dfa_1;
            this.eof = dfa_29;
            this.min = dfa_30;
            this.max = dfa_31;
            this.accept = dfa_32;
            this.special = dfa_48;
            this.transition = dfa_34;
        }
        public String getDescription() {
            return "12108:2: ( rule__Service__UnorderedGroup_3__11 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA102_12 = input.LA(1);

                         
                        int index102_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA102_12==RULE_ID) ) {s = 19;}

                        else if ( LA102_12 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index102_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA102_14 = input.LA(1);

                         
                        int index102_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA102_14==RULE_ID) ) {s = 19;}

                        else if ( LA102_14 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 24;}

                         
                        input.seek(index102_14);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA102_13 = input.LA(1);

                         
                        int index102_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA102_13==RULE_ID) ) {s = 19;}

                        else if ( LA102_13 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                         
                        input.seek(index102_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA102_11 = input.LA(1);

                         
                        int index102_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA102_11==RULE_ID) ) {s = 20;}

                        else if ( LA102_11 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index102_11);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA102_25 = input.LA(1);

                         
                        int index102_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 24;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index102_25);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA102_0 = input.LA(1);

                         
                        int index102_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA102_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA102_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA102_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA102_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA102_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA102_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA102_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA102_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA102_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( LA102_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 10;}

                        else if ( (LA102_0==47) ) {s = 11;}

                        else if ( (LA102_0==44) ) {s = 12;}

                        else if ( (LA102_0==45) ) {s = 13;}

                        else if ( (LA102_0==46) ) {s = 14;}

                        else if ( LA102_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA102_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA102_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( LA102_0 == 62 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 17) ) {s = 18;}

                        else if ( (LA102_0==EOF||LA102_0==RULE_ID||(LA102_0>=42 && LA102_0<=43)) ) {s = 19;}

                         
                        input.seek(index102_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 102, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA103 extends DFA {

        public DFA103(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 103;
            this.eot = dfa_1;
            this.eof = dfa_29;
            this.min = dfa_30;
            this.max = dfa_31;
            this.accept = dfa_32;
            this.special = dfa_42;
            this.transition = dfa_34;
        }
        public String getDescription() {
            return "12120:2: ( rule__Service__UnorderedGroup_3__12 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA103_12 = input.LA(1);

                         
                        int index103_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA103_12==RULE_ID) ) {s = 19;}

                        else if ( LA103_12 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index103_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA103_14 = input.LA(1);

                         
                        int index103_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA103_14==RULE_ID) ) {s = 19;}

                        else if ( LA103_14 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 24;}

                         
                        input.seek(index103_14);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA103_13 = input.LA(1);

                         
                        int index103_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA103_13==RULE_ID) ) {s = 19;}

                        else if ( LA103_13 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                         
                        input.seek(index103_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA103_11 = input.LA(1);

                         
                        int index103_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA103_11==RULE_ID) ) {s = 20;}

                        else if ( LA103_11 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index103_11);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA103_0 = input.LA(1);

                         
                        int index103_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA103_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA103_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA103_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA103_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA103_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA103_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA103_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA103_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA103_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( LA103_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 10;}

                        else if ( (LA103_0==47) ) {s = 11;}

                        else if ( (LA103_0==44) ) {s = 12;}

                        else if ( (LA103_0==45) ) {s = 13;}

                        else if ( (LA103_0==46) ) {s = 14;}

                        else if ( LA103_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA103_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA103_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( LA103_0 == 62 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 17) ) {s = 18;}

                        else if ( (LA103_0==EOF||LA103_0==RULE_ID||(LA103_0>=42 && LA103_0<=43)) ) {s = 19;}

                         
                        input.seek(index103_0);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA103_25 = input.LA(1);

                         
                        int index103_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 24;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index103_25);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 103, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_48s = "\1\0\12\uffff\1\5\1\2\1\4\1\3\12\uffff\1\1}>";
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_48s);

    class DFA104 extends DFA {

        public DFA104(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 104;
            this.eot = dfa_1;
            this.eof = dfa_29;
            this.min = dfa_30;
            this.max = dfa_31;
            this.accept = dfa_32;
            this.special = dfa_49;
            this.transition = dfa_34;
        }
        public String getDescription() {
            return "12132:2: ( rule__Service__UnorderedGroup_3__13 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA104_0 = input.LA(1);

                         
                        int index104_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA104_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA104_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA104_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA104_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA104_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA104_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA104_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA104_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA104_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( LA104_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 10;}

                        else if ( (LA104_0==47) ) {s = 11;}

                        else if ( (LA104_0==44) ) {s = 12;}

                        else if ( (LA104_0==45) ) {s = 13;}

                        else if ( (LA104_0==46) ) {s = 14;}

                        else if ( LA104_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA104_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA104_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( LA104_0 == 62 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 17) ) {s = 18;}

                        else if ( (LA104_0==EOF||LA104_0==RULE_ID||(LA104_0>=42 && LA104_0<=43)) ) {s = 19;}

                         
                        input.seek(index104_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA104_25 = input.LA(1);

                         
                        int index104_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 24;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index104_25);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA104_12 = input.LA(1);

                         
                        int index104_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA104_12==RULE_ID) ) {s = 19;}

                        else if ( LA104_12 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index104_12);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA104_14 = input.LA(1);

                         
                        int index104_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA104_14==RULE_ID) ) {s = 19;}

                        else if ( LA104_14 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 24;}

                         
                        input.seek(index104_14);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA104_13 = input.LA(1);

                         
                        int index104_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA104_13==RULE_ID) ) {s = 19;}

                        else if ( LA104_13 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                         
                        input.seek(index104_13);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA104_11 = input.LA(1);

                         
                        int index104_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA104_11==RULE_ID) ) {s = 20;}

                        else if ( LA104_11 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index104_11);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 104, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_49s = "\1\3\12\uffff\1\4\1\0\1\2\1\1\12\uffff\1\5}>";
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_49s);

    class DFA105 extends DFA {

        public DFA105(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 105;
            this.eot = dfa_1;
            this.eof = dfa_29;
            this.min = dfa_30;
            this.max = dfa_31;
            this.accept = dfa_32;
            this.special = dfa_50;
            this.transition = dfa_34;
        }
        public String getDescription() {
            return "12144:2: ( rule__Service__UnorderedGroup_3__14 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA105_12 = input.LA(1);

                         
                        int index105_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA105_12==RULE_ID) ) {s = 19;}

                        else if ( LA105_12 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index105_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA105_14 = input.LA(1);

                         
                        int index105_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA105_14==RULE_ID) ) {s = 19;}

                        else if ( LA105_14 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 24;}

                         
                        input.seek(index105_14);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA105_13 = input.LA(1);

                         
                        int index105_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA105_13==RULE_ID) ) {s = 19;}

                        else if ( LA105_13 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                         
                        input.seek(index105_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA105_0 = input.LA(1);

                         
                        int index105_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA105_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA105_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA105_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA105_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA105_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA105_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA105_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA105_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA105_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( LA105_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 10;}

                        else if ( (LA105_0==47) ) {s = 11;}

                        else if ( (LA105_0==44) ) {s = 12;}

                        else if ( (LA105_0==45) ) {s = 13;}

                        else if ( (LA105_0==46) ) {s = 14;}

                        else if ( LA105_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA105_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA105_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( LA105_0 == 62 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 17) ) {s = 18;}

                        else if ( (LA105_0==EOF||LA105_0==RULE_ID||(LA105_0>=42 && LA105_0<=43)) ) {s = 19;}

                         
                        input.seek(index105_0);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA105_11 = input.LA(1);

                         
                        int index105_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA105_11==RULE_ID) ) {s = 20;}

                        else if ( LA105_11 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index105_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA105_25 = input.LA(1);

                         
                        int index105_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 24;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index105_25);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 105, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_50s = "\1\2\12\uffff\1\5\1\0\1\4\1\3\12\uffff\1\1}>";
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_50s);

    class DFA106 extends DFA {

        public DFA106(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 106;
            this.eot = dfa_1;
            this.eof = dfa_29;
            this.min = dfa_30;
            this.max = dfa_31;
            this.accept = dfa_32;
            this.special = dfa_51;
            this.transition = dfa_34;
        }
        public String getDescription() {
            return "12156:2: ( rule__Service__UnorderedGroup_3__15 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA106_12 = input.LA(1);

                         
                        int index106_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA106_12==RULE_ID) ) {s = 19;}

                        else if ( LA106_12 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index106_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA106_25 = input.LA(1);

                         
                        int index106_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 24;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index106_25);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA106_0 = input.LA(1);

                         
                        int index106_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA106_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA106_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA106_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA106_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA106_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA106_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA106_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA106_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA106_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( LA106_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 10;}

                        else if ( (LA106_0==47) ) {s = 11;}

                        else if ( (LA106_0==44) ) {s = 12;}

                        else if ( (LA106_0==45) ) {s = 13;}

                        else if ( (LA106_0==46) ) {s = 14;}

                        else if ( LA106_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA106_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA106_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( LA106_0 == 62 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 17) ) {s = 18;}

                        else if ( (LA106_0==EOF||LA106_0==RULE_ID||(LA106_0>=42 && LA106_0<=43)) ) {s = 19;}

                         
                        input.seek(index106_0);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA106_14 = input.LA(1);

                         
                        int index106_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA106_14==RULE_ID) ) {s = 19;}

                        else if ( LA106_14 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 24;}

                         
                        input.seek(index106_14);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA106_13 = input.LA(1);

                         
                        int index106_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA106_13==RULE_ID) ) {s = 19;}

                        else if ( LA106_13 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                         
                        input.seek(index106_13);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA106_11 = input.LA(1);

                         
                        int index106_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA106_11==RULE_ID) ) {s = 20;}

                        else if ( LA106_11 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index106_11);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 106, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_51s = "\1\3\12\uffff\1\5\1\0\1\2\1\1\12\uffff\1\4}>";
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_51s);

    class DFA107 extends DFA {

        public DFA107(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 107;
            this.eot = dfa_1;
            this.eof = dfa_29;
            this.min = dfa_30;
            this.max = dfa_31;
            this.accept = dfa_32;
            this.special = dfa_52;
            this.transition = dfa_34;
        }
        public String getDescription() {
            return "12168:2: ( rule__Service__UnorderedGroup_3__16 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA107_12 = input.LA(1);

                         
                        int index107_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA107_12==RULE_ID) ) {s = 19;}

                        else if ( LA107_12 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index107_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA107_14 = input.LA(1);

                         
                        int index107_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA107_14==RULE_ID) ) {s = 19;}

                        else if ( LA107_14 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 24;}

                         
                        input.seek(index107_14);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA107_13 = input.LA(1);

                         
                        int index107_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA107_13==RULE_ID) ) {s = 19;}

                        else if ( LA107_13 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                         
                        input.seek(index107_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA107_0 = input.LA(1);

                         
                        int index107_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA107_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA107_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA107_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA107_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA107_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA107_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA107_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA107_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA107_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( LA107_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 10;}

                        else if ( (LA107_0==47) ) {s = 11;}

                        else if ( (LA107_0==44) ) {s = 12;}

                        else if ( (LA107_0==45) ) {s = 13;}

                        else if ( (LA107_0==46) ) {s = 14;}

                        else if ( LA107_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA107_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA107_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( LA107_0 == 62 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 17) ) {s = 18;}

                        else if ( (LA107_0==EOF||LA107_0==RULE_ID||(LA107_0>=42 && LA107_0<=43)) ) {s = 19;}

                         
                        input.seek(index107_0);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA107_25 = input.LA(1);

                         
                        int index107_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 24;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index107_25);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA107_11 = input.LA(1);

                         
                        int index107_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA107_11==RULE_ID) ) {s = 20;}

                        else if ( LA107_11 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index107_11);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 107, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_52s = "\1\5\12\uffff\1\4\1\1\1\3\1\2\12\uffff\1\0}>";
    static final short[] dfa_53 = DFA.unpackEncodedString(dfa_52s);

    class DFA108 extends DFA {

        public DFA108(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 108;
            this.eot = dfa_1;
            this.eof = dfa_29;
            this.min = dfa_30;
            this.max = dfa_31;
            this.accept = dfa_32;
            this.special = dfa_53;
            this.transition = dfa_34;
        }
        public String getDescription() {
            return "12180:2: ( rule__Service__UnorderedGroup_3__17 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA108_25 = input.LA(1);

                         
                        int index108_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 24;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index108_25);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA108_12 = input.LA(1);

                         
                        int index108_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA108_12==RULE_ID) ) {s = 19;}

                        else if ( LA108_12 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index108_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA108_14 = input.LA(1);

                         
                        int index108_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA108_14==RULE_ID) ) {s = 19;}

                        else if ( LA108_14 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 24;}

                         
                        input.seek(index108_14);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA108_13 = input.LA(1);

                         
                        int index108_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA108_13==RULE_ID) ) {s = 19;}

                        else if ( LA108_13 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 23;}

                         
                        input.seek(index108_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA108_11 = input.LA(1);

                         
                        int index108_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA108_11==RULE_ID) ) {s = 20;}

                        else if ( LA108_11 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index108_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA108_0 = input.LA(1);

                         
                        int index108_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA108_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA108_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA108_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA108_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA108_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA108_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA108_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA108_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA108_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( LA108_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 10;}

                        else if ( (LA108_0==47) ) {s = 11;}

                        else if ( (LA108_0==44) ) {s = 12;}

                        else if ( (LA108_0==45) ) {s = 13;}

                        else if ( (LA108_0==46) ) {s = 14;}

                        else if ( LA108_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( LA108_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 15) ) {s = 16;}

                        else if ( LA108_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 16) ) {s = 17;}

                        else if ( LA108_0 == 62 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 17) ) {s = 18;}

                        else if ( (LA108_0==EOF||LA108_0==RULE_ID||(LA108_0>=42 && LA108_0<=43)) ) {s = 19;}

                         
                        input.seek(index108_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 108, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_53s = "\13\uffff";
    static final String dfa_54s = "\1\10\12\uffff";
    static final String dfa_55s = "\1\12\3\uffff\1\24\4\uffff\2\0";
    static final String dfa_56s = "\1\116\3\uffff\1\25\4\uffff\2\0";
    static final String dfa_57s = "\1\uffff\3\1\1\uffff\3\1\1\2\2\uffff";
    static final String dfa_58s = "\1\1\10\uffff\1\2\1\0}>";
    static final String[] dfa_59s = {
            "\1\10\10\uffff\1\10\26\uffff\6\10\1\uffff\7\10\1\4\6\10\10\uffff\1\1\1\2\1\3\1\5\1\uffff\1\6\1\uffff\1\7",
            "",
            "",
            "",
            "\1\11\1\12",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff"
    };

    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_53s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_54s);
    static final char[] dfa_56 = DFA.unpackEncodedStringToUnsignedChars(dfa_55s);
    static final char[] dfa_57 = DFA.unpackEncodedStringToUnsignedChars(dfa_56s);
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_57s);
    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_58s);
    static final short[][] dfa_60 = unpackEncodedStringArray(dfa_59s);

    class DFA115 extends DFA {

        public DFA115(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 115;
            this.eot = dfa_54;
            this.eof = dfa_55;
            this.min = dfa_56;
            this.max = dfa_57;
            this.accept = dfa_58;
            this.special = dfa_59;
            this.transition = dfa_60;
        }
        public String getDescription() {
            return "12475:2: ( rule__VolumeConnector__UnorderedGroup_1_1__1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA115_10 = input.LA(1);

                         
                        int index115_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1()) ) {s = 8;}

                         
                        input.seek(index115_10);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA115_0 = input.LA(1);

                         
                        int index115_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA115_0 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 0) ) {s = 1;}

                        else if ( LA115_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 1) ) {s = 2;}

                        else if ( LA115_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 2) ) {s = 3;}

                        else if ( (LA115_0==56) ) {s = 4;}

                        else if ( LA115_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 4) ) {s = 5;}

                        else if ( LA115_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 5) ) {s = 6;}

                        else if ( LA115_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 6) ) {s = 7;}

                        else if ( (LA115_0==EOF||LA115_0==RULE_ID||LA115_0==19||(LA115_0>=42 && LA115_0<=47)||(LA115_0>=49 && LA115_0<=55)||(LA115_0>=57 && LA115_0<=62)) ) {s = 8;}

                         
                        input.seek(index115_0);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA115_9 = input.LA(1);

                         
                        int index115_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1()) ) {s = 8;}

                         
                        input.seek(index115_9);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 115, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_60s = "\1\2\10\uffff\1\0\1\1}>";
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_60s);

    class DFA116 extends DFA {

        public DFA116(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 116;
            this.eot = dfa_54;
            this.eof = dfa_55;
            this.min = dfa_56;
            this.max = dfa_57;
            this.accept = dfa_58;
            this.special = dfa_61;
            this.transition = dfa_60;
        }
        public String getDescription() {
            return "12487:2: ( rule__VolumeConnector__UnorderedGroup_1_1__2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA116_9 = input.LA(1);

                         
                        int index116_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1()) ) {s = 8;}

                         
                        input.seek(index116_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA116_10 = input.LA(1);

                         
                        int index116_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1()) ) {s = 8;}

                         
                        input.seek(index116_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA116_0 = input.LA(1);

                         
                        int index116_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA116_0 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 0) ) {s = 1;}

                        else if ( LA116_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 1) ) {s = 2;}

                        else if ( LA116_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 2) ) {s = 3;}

                        else if ( (LA116_0==56) ) {s = 4;}

                        else if ( LA116_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 4) ) {s = 5;}

                        else if ( LA116_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 5) ) {s = 6;}

                        else if ( LA116_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 6) ) {s = 7;}

                        else if ( (LA116_0==EOF||LA116_0==RULE_ID||LA116_0==19||(LA116_0>=42 && LA116_0<=47)||(LA116_0>=49 && LA116_0<=55)||(LA116_0>=57 && LA116_0<=62)) ) {s = 8;}

                         
                        input.seek(index116_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 116, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_61s = "\1\1\10\uffff\1\0\1\2}>";
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_61s);

    class DFA117 extends DFA {

        public DFA117(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 117;
            this.eot = dfa_54;
            this.eof = dfa_55;
            this.min = dfa_56;
            this.max = dfa_57;
            this.accept = dfa_58;
            this.special = dfa_62;
            this.transition = dfa_60;
        }
        public String getDescription() {
            return "12499:2: ( rule__VolumeConnector__UnorderedGroup_1_1__3 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA117_9 = input.LA(1);

                         
                        int index117_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1()) ) {s = 8;}

                         
                        input.seek(index117_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA117_0 = input.LA(1);

                         
                        int index117_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA117_0 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 0) ) {s = 1;}

                        else if ( LA117_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 1) ) {s = 2;}

                        else if ( LA117_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 2) ) {s = 3;}

                        else if ( (LA117_0==56) ) {s = 4;}

                        else if ( LA117_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 4) ) {s = 5;}

                        else if ( LA117_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 5) ) {s = 6;}

                        else if ( LA117_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 6) ) {s = 7;}

                        else if ( (LA117_0==EOF||LA117_0==RULE_ID||LA117_0==19||(LA117_0>=42 && LA117_0<=47)||(LA117_0>=49 && LA117_0<=55)||(LA117_0>=57 && LA117_0<=62)) ) {s = 8;}

                         
                        input.seek(index117_0);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA117_10 = input.LA(1);

                         
                        int index117_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1()) ) {s = 8;}

                         
                        input.seek(index117_10);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 117, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_62s = "\1\0\10\uffff\1\1\1\2}>";
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_62s);

    class DFA118 extends DFA {

        public DFA118(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 118;
            this.eot = dfa_54;
            this.eof = dfa_55;
            this.min = dfa_56;
            this.max = dfa_57;
            this.accept = dfa_58;
            this.special = dfa_63;
            this.transition = dfa_60;
        }
        public String getDescription() {
            return "12511:2: ( rule__VolumeConnector__UnorderedGroup_1_1__4 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA118_0 = input.LA(1);

                         
                        int index118_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA118_0 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 0) ) {s = 1;}

                        else if ( LA118_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 1) ) {s = 2;}

                        else if ( LA118_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 2) ) {s = 3;}

                        else if ( (LA118_0==56) ) {s = 4;}

                        else if ( LA118_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 4) ) {s = 5;}

                        else if ( LA118_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 5) ) {s = 6;}

                        else if ( LA118_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 6) ) {s = 7;}

                        else if ( (LA118_0==EOF||LA118_0==RULE_ID||LA118_0==19||(LA118_0>=42 && LA118_0<=47)||(LA118_0>=49 && LA118_0<=55)||(LA118_0>=57 && LA118_0<=62)) ) {s = 8;}

                         
                        input.seek(index118_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA118_9 = input.LA(1);

                         
                        int index118_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1()) ) {s = 8;}

                         
                        input.seek(index118_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA118_10 = input.LA(1);

                         
                        int index118_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1()) ) {s = 8;}

                         
                        input.seek(index118_10);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 118, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA119 extends DFA {

        public DFA119(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 119;
            this.eot = dfa_54;
            this.eof = dfa_55;
            this.min = dfa_56;
            this.max = dfa_57;
            this.accept = dfa_58;
            this.special = dfa_61;
            this.transition = dfa_60;
        }
        public String getDescription() {
            return "12523:2: ( rule__VolumeConnector__UnorderedGroup_1_1__5 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA119_9 = input.LA(1);

                         
                        int index119_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1()) ) {s = 8;}

                         
                        input.seek(index119_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA119_10 = input.LA(1);

                         
                        int index119_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1()) ) {s = 8;}

                         
                        input.seek(index119_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA119_0 = input.LA(1);

                         
                        int index119_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA119_0 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 0) ) {s = 1;}

                        else if ( LA119_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 1) ) {s = 2;}

                        else if ( LA119_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 2) ) {s = 3;}

                        else if ( (LA119_0==56) ) {s = 4;}

                        else if ( LA119_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 4) ) {s = 5;}

                        else if ( LA119_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 5) ) {s = 6;}

                        else if ( LA119_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 6) ) {s = 7;}

                        else if ( (LA119_0==EOF||LA119_0==RULE_ID||LA119_0==19||(LA119_0>=42 && LA119_0<=47)||(LA119_0>=49 && LA119_0<=55)||(LA119_0>=57 && LA119_0<=62)) ) {s = 8;}

                         
                        input.seek(index119_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 119, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA120 extends DFA {

        public DFA120(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 120;
            this.eot = dfa_54;
            this.eof = dfa_55;
            this.min = dfa_56;
            this.max = dfa_57;
            this.accept = dfa_58;
            this.special = dfa_61;
            this.transition = dfa_60;
        }
        public String getDescription() {
            return "12535:2: ( rule__VolumeConnector__UnorderedGroup_1_1__6 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA120_9 = input.LA(1);

                         
                        int index120_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1()) ) {s = 8;}

                         
                        input.seek(index120_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA120_10 = input.LA(1);

                         
                        int index120_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1()) ) {s = 8;}

                         
                        input.seek(index120_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA120_0 = input.LA(1);

                         
                        int index120_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA120_0 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 0) ) {s = 1;}

                        else if ( LA120_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 1) ) {s = 2;}

                        else if ( LA120_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 2) ) {s = 3;}

                        else if ( (LA120_0==56) ) {s = 4;}

                        else if ( LA120_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 4) ) {s = 5;}

                        else if ( LA120_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 5) ) {s = 6;}

                        else if ( LA120_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnectorAccess().getUnorderedGroup_1_1(), 6) ) {s = 7;}

                        else if ( (LA120_0==EOF||LA120_0==RULE_ID||LA120_0==19||(LA120_0>=42 && LA120_0<=47)||(LA120_0>=49 && LA120_0<=55)||(LA120_0>=57 && LA120_0<=62)) ) {s = 8;}

                         
                        input.seek(index120_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 120, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_63s = "\1\12\12\uffff";
    static final String dfa_64s = "\1\135\12\uffff";
    static final String dfa_65s = "\1\uffff\11\1\1\2";
    static final String dfa_66s = "\1\0\12\uffff}>";
    static final String[] dfa_67s = {
            "\1\12\37\uffff\6\12\45\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_63s);
    static final char[] dfa_65 = DFA.unpackEncodedStringToUnsignedChars(dfa_63s);
    static final char[] dfa_66 = DFA.unpackEncodedStringToUnsignedChars(dfa_64s);
    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_65s);
    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_66s);
    static final short[][] dfa_69 = unpackEncodedStringArray(dfa_67s);

    class DFA131 extends DFA {

        public DFA131(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 131;
            this.eot = dfa_54;
            this.eof = dfa_64;
            this.min = dfa_65;
            this.max = dfa_66;
            this.accept = dfa_67;
            this.special = dfa_68;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "12887:2: ( rule__Network__UnorderedGroup_3_1__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA131_0 = input.LA(1);

                         
                        int index131_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA131_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA131_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA131_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA131_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA131_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA131_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA131_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA131_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA131_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA131_0==EOF||LA131_0==RULE_ID||(LA131_0>=42 && LA131_0<=47)) ) {s = 10;}

                         
                        input.seek(index131_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 131, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_68s = "\12\uffff";
    static final String dfa_69s = "\1\125\11\uffff";
    static final String dfa_70s = "\1\135\11\uffff";
    static final String dfa_71s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11";
    static final String dfa_72s = "\1\0\11\uffff}>";
    static final String[] dfa_73s = {
            "\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_68s);
    static final char[] dfa_71 = DFA.unpackEncodedStringToUnsignedChars(dfa_69s);
    static final char[] dfa_72 = DFA.unpackEncodedStringToUnsignedChars(dfa_70s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_71s);
    static final short[] dfa_74 = DFA.unpackEncodedString(dfa_72s);
    static final short[][] dfa_75 = unpackEncodedStringArray(dfa_73s);

    class DFA132 extends DFA {

        public DFA132(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 132;
            this.eot = dfa_70;
            this.eof = dfa_70;
            this.min = dfa_71;
            this.max = dfa_72;
            this.accept = dfa_73;
            this.special = dfa_74;
            this.transition = dfa_75;
        }
        public String getDescription() {
            return "12901:3: ( ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA132_0 = input.LA(1);

                         
                        int index132_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA132_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA132_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA132_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA132_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA132_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA132_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA132_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA132_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA132_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                         
                        input.seek(index132_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 132, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA133 extends DFA {

        public DFA133(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 133;
            this.eot = dfa_54;
            this.eof = dfa_64;
            this.min = dfa_65;
            this.max = dfa_66;
            this.accept = dfa_67;
            this.special = dfa_68;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "13051:2: ( rule__Network__UnorderedGroup_3_1__1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA133_0 = input.LA(1);

                         
                        int index133_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA133_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA133_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA133_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA133_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA133_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA133_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA133_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA133_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA133_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA133_0==EOF||LA133_0==RULE_ID||(LA133_0>=42 && LA133_0<=47)) ) {s = 10;}

                         
                        input.seek(index133_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 133, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA134 extends DFA {

        public DFA134(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 134;
            this.eot = dfa_54;
            this.eof = dfa_64;
            this.min = dfa_65;
            this.max = dfa_66;
            this.accept = dfa_67;
            this.special = dfa_68;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "13063:2: ( rule__Network__UnorderedGroup_3_1__2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA134_0 = input.LA(1);

                         
                        int index134_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA134_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA134_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA134_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA134_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA134_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA134_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA134_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA134_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA134_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA134_0==EOF||LA134_0==RULE_ID||(LA134_0>=42 && LA134_0<=47)) ) {s = 10;}

                         
                        input.seek(index134_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 134, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA135 extends DFA {

        public DFA135(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 135;
            this.eot = dfa_54;
            this.eof = dfa_64;
            this.min = dfa_65;
            this.max = dfa_66;
            this.accept = dfa_67;
            this.special = dfa_68;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "13075:2: ( rule__Network__UnorderedGroup_3_1__3 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA135_0 = input.LA(1);

                         
                        int index135_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA135_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA135_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA135_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA135_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA135_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA135_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA135_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA135_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA135_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA135_0==EOF||LA135_0==RULE_ID||(LA135_0>=42 && LA135_0<=47)) ) {s = 10;}

                         
                        input.seek(index135_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 135, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA136 extends DFA {

        public DFA136(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 136;
            this.eot = dfa_54;
            this.eof = dfa_64;
            this.min = dfa_65;
            this.max = dfa_66;
            this.accept = dfa_67;
            this.special = dfa_68;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "13087:2: ( rule__Network__UnorderedGroup_3_1__4 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA136_0 = input.LA(1);

                         
                        int index136_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA136_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA136_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA136_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA136_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA136_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA136_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA136_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA136_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA136_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA136_0==EOF||LA136_0==RULE_ID||(LA136_0>=42 && LA136_0<=47)) ) {s = 10;}

                         
                        input.seek(index136_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 136, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA137 extends DFA {

        public DFA137(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 137;
            this.eot = dfa_54;
            this.eof = dfa_64;
            this.min = dfa_65;
            this.max = dfa_66;
            this.accept = dfa_67;
            this.special = dfa_68;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "13099:2: ( rule__Network__UnorderedGroup_3_1__5 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA137_0 = input.LA(1);

                         
                        int index137_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA137_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA137_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA137_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA137_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA137_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA137_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA137_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA137_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA137_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA137_0==EOF||LA137_0==RULE_ID||(LA137_0>=42 && LA137_0<=47)) ) {s = 10;}

                         
                        input.seek(index137_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 137, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA138 extends DFA {

        public DFA138(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 138;
            this.eot = dfa_54;
            this.eof = dfa_64;
            this.min = dfa_65;
            this.max = dfa_66;
            this.accept = dfa_67;
            this.special = dfa_68;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "13111:2: ( rule__Network__UnorderedGroup_3_1__6 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA138_0 = input.LA(1);

                         
                        int index138_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA138_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA138_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA138_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA138_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA138_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA138_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA138_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA138_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA138_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA138_0==EOF||LA138_0==RULE_ID||(LA138_0>=42 && LA138_0<=47)) ) {s = 10;}

                         
                        input.seek(index138_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 138, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA139 extends DFA {

        public DFA139(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 139;
            this.eot = dfa_54;
            this.eof = dfa_64;
            this.min = dfa_65;
            this.max = dfa_66;
            this.accept = dfa_67;
            this.special = dfa_68;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "13123:2: ( rule__Network__UnorderedGroup_3_1__7 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA139_0 = input.LA(1);

                         
                        int index139_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA139_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA139_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA139_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA139_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA139_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA139_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA139_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA139_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA139_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA139_0==EOF||LA139_0==RULE_ID||(LA139_0>=42 && LA139_0<=47)) ) {s = 10;}

                         
                        input.seek(index139_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 139, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA140 extends DFA {

        public DFA140(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 140;
            this.eot = dfa_54;
            this.eof = dfa_64;
            this.min = dfa_65;
            this.max = dfa_66;
            this.accept = dfa_67;
            this.special = dfa_68;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "13135:2: ( rule__Network__UnorderedGroup_3_1__8 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA140_0 = input.LA(1);

                         
                        int index140_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA140_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA140_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA140_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA140_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA140_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA140_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA140_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA140_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA140_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA140_0==EOF||LA140_0==RULE_ID||(LA140_0>=42 && LA140_0<=47)) ) {s = 10;}

                         
                        input.seek(index140_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 140, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_74s = "\16\uffff";
    static final String dfa_75s = "\1\4\15\uffff";
    static final String dfa_76s = "\1\12\1\5\3\uffff\2\0\1\145\6\0";
    static final String dfa_77s = "\1\140\1\145\3\uffff\2\0\1\145\6\0";
    static final String dfa_78s = "\2\uffff\2\1\1\2\11\uffff";
    static final String dfa_79s = "\1\2\4\uffff\1\0\1\5\1\uffff\1\10\1\7\1\6\1\4\1\3\1\1}>";
    static final String[] dfa_80s = {
            "\1\4\37\uffff\6\4\45\uffff\1\1\10\4\1\uffff\1\2\1\3",
            "\1\11\1\13\1\12\1\10\1\5\1\6\1\14\131\uffff\1\7",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\15",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff"
    };

    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_74s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_75s);
    static final char[] dfa_78 = DFA.unpackEncodedStringToUnsignedChars(dfa_76s);
    static final char[] dfa_79 = DFA.unpackEncodedStringToUnsignedChars(dfa_77s);
    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_78s);
    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_79s);
    static final short[][] dfa_82 = unpackEncodedStringArray(dfa_80s);

    class DFA156 extends DFA {

        public DFA156(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 156;
            this.eot = dfa_76;
            this.eof = dfa_77;
            this.min = dfa_78;
            this.max = dfa_79;
            this.accept = dfa_80;
            this.special = dfa_81;
            this.transition = dfa_82;
        }
        public String getDescription() {
            return "13570:2: ( rule__IPAM__UnorderedGroup_1__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA156_5 = input.LA(1);

                         
                        int index156_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index156_5);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA156_13 = input.LA(1);

                         
                        int index156_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index156_13);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA156_0 = input.LA(1);

                         
                        int index156_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA156_0==85) ) {s = 1;}

                        else if ( LA156_0 == 95 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1) ) {s = 2;}

                        else if ( LA156_0 == 96 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2) ) {s = 3;}

                        else if ( (LA156_0==EOF||LA156_0==RULE_ID||(LA156_0>=42 && LA156_0<=47)||(LA156_0>=86 && LA156_0<=93)) ) {s = 4;}

                         
                        input.seek(index156_0);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA156_12 = input.LA(1);

                         
                        int index156_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index156_12);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA156_11 = input.LA(1);

                         
                        int index156_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index156_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA156_6 = input.LA(1);

                         
                        int index156_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index156_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA156_10 = input.LA(1);

                         
                        int index156_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index156_10);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA156_9 = input.LA(1);

                         
                        int index156_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index156_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA156_8 = input.LA(1);

                         
                        int index156_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index156_8);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 156, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_81s = "\1\7\4\uffff\1\3\1\10\1\uffff\1\2\1\1\1\0\1\6\1\5\1\4}>";
    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_81s);

    class DFA158 extends DFA {

        public DFA158(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 158;
            this.eot = dfa_76;
            this.eof = dfa_77;
            this.min = dfa_78;
            this.max = dfa_79;
            this.accept = dfa_80;
            this.special = dfa_83;
            this.transition = dfa_82;
        }
        public String getDescription() {
            return "13644:2: ( rule__IPAM__UnorderedGroup_1__1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA158_10 = input.LA(1);

                         
                        int index158_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index158_10);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA158_9 = input.LA(1);

                         
                        int index158_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index158_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA158_8 = input.LA(1);

                         
                        int index158_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index158_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA158_5 = input.LA(1);

                         
                        int index158_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index158_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA158_13 = input.LA(1);

                         
                        int index158_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index158_13);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA158_12 = input.LA(1);

                         
                        int index158_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index158_12);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA158_11 = input.LA(1);

                         
                        int index158_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index158_11);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA158_0 = input.LA(1);

                         
                        int index158_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA158_0==85) ) {s = 1;}

                        else if ( LA158_0 == 95 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1) ) {s = 2;}

                        else if ( LA158_0 == 96 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2) ) {s = 3;}

                        else if ( (LA158_0==EOF||LA158_0==RULE_ID||(LA158_0>=42 && LA158_0<=47)||(LA158_0>=86 && LA158_0<=93)) ) {s = 4;}

                         
                        input.seek(index158_0);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA158_6 = input.LA(1);

                         
                        int index158_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index158_6);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 158, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_82s = "\1\0\4\uffff\1\2\1\1\1\uffff\1\10\1\7\1\4\1\3\1\5\1\6}>";
    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_82s);

    class DFA159 extends DFA {

        public DFA159(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 159;
            this.eot = dfa_76;
            this.eof = dfa_77;
            this.min = dfa_78;
            this.max = dfa_79;
            this.accept = dfa_80;
            this.special = dfa_84;
            this.transition = dfa_82;
        }
        public String getDescription() {
            return "13656:2: ( rule__IPAM__UnorderedGroup_1__2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA159_0 = input.LA(1);

                         
                        int index159_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA159_0==85) ) {s = 1;}

                        else if ( LA159_0 == 95 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1) ) {s = 2;}

                        else if ( LA159_0 == 96 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2) ) {s = 3;}

                        else if ( (LA159_0==EOF||LA159_0==RULE_ID||(LA159_0>=42 && LA159_0<=47)||(LA159_0>=86 && LA159_0<=93)) ) {s = 4;}

                         
                        input.seek(index159_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA159_6 = input.LA(1);

                         
                        int index159_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index159_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA159_5 = input.LA(1);

                         
                        int index159_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index159_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA159_11 = input.LA(1);

                         
                        int index159_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index159_11);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA159_10 = input.LA(1);

                         
                        int index159_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index159_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA159_12 = input.LA(1);

                         
                        int index159_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index159_12);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA159_13 = input.LA(1);

                         
                        int index159_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index159_13);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA159_9 = input.LA(1);

                         
                        int index159_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index159_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA159_8 = input.LA(1);

                         
                        int index159_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index159_8);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 159, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x00000000000E1FF2L,0x0000002000000001L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000402L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000080002L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000060L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x7FFEF00000000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000060400L,0x0000000000000001L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x00000000000E1FF0L,0x0000002000000001L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000FE0L,0x0000002000000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000003C00000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000080400L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000080402L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0100000000000400L,0x0000000000005780L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000000400L,0x0000000000070280L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000080010L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x00000000000001A0L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000060FE0L,0x0000002000000001L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0001000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0001000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0001000000000002L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000000410L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000412L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000080410L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000080412L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000038000000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000078L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x000000001C000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x00000001E0000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000007E00000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x00000000000000A0L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000000L,0x000000003FE80000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000FE2L,0x0000002000000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000000L,0x0000000180200000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000000L,0x000000001E200000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000000L,0x0000000046000000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0800000000000000L,0x0000000046000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000000L,0x0000001E00000000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000001L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000060400L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000060402L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000FC0000000002L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x7FFEF00000000002L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000078L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0100000000000402L,0x0000000000005780L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000402L,0x0000000000070280L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000002L,0x000000003FE00000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000002L,0x000000001E200000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000000002L,0x0000000046000000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0800000000000002L,0x0000000046000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000002L,0x0000000180200000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000002L,0x0000001E00000000L});

}
