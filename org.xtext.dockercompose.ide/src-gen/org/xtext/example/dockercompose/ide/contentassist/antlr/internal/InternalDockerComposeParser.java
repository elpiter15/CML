package org.xtext.example.dockercompose.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.dockercompose.services.DockerComposeGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings("all")
public class InternalDockerComposeParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_INT", "RULE_STRING", "RULE_ID", "RULE_VERSION", "RULE_PORT_DEF", "RULE_DEVICE_DEF", "RULE_QUOTED_INT", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'true'", "'false'", "'\"no\"'", "'always'", "'on-failure'", "'unless-stopped'", "'rw'", "'ro'", "'z'", "'volume'", "'bind'", "'tmpfs'", "'npipe'", "'rprivate'", "'private'", "'rshared'", "'shared'", "'rslave'", "'slave'", "'version:'", "'services:'", "'networks:'", "'volumes:'", "'configs:'", "'secrets:'", "':'", "'build:'", "'image:'", "'cpu_count:'", "'command:'", "'container_name:'", "'restart:'", "'init:'", "'read_only:'", "'depends_on:'", "'-'", "'devices:'", "'dns:'", "'ports:'", "'ipv4_address:'", "'priority:'", "'aliases:'", "'link_local_ips:'", "'source:'", "'type:'", "'target:'", "'bind:'", "'propagation:'", "'volume:'", "'nocopy:'", "'tmpfs:'", "'size:'", "'uid:'", "'gid:'", "'mode:'", "'{'", "'}'", "'driver:'", "'attachable:'", "'enable_ipv6:'", "'internal:'", "'external:'", "'name:'", "'labels:'", "'driver_opts:'", "'ipam:'", "'file:'", "'environment:'", "'config:'", "'options:'", "'subnet:'", "'ip_range:'", "'gateway:'", "'aux_addresses:'", "'.'", "'/'"
    };
    public static final int RULE_DEVICE_DEF=9;
    public static final int T__50=50;
    public static final int T__90=90;
    public static final int T__19=19;
    public static final int RULE_VERSION=7;
    public static final int T__15=15;
    public static final int T__59=59;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_QUOTED_INT=10;
    public static final int RULE_ID=6;
    public static final int RULE_PORT_DEF=8;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int RULE_INT=4;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=11;
    public static final int T__23=23;
    public static final int T__67=67;
    public static final int T__24=24;
    public static final int T__68=68;
    public static final int T__25=25;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__20=20;
    public static final int T__64=64;
    public static final int T__21=21;
    public static final int T__65=65;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=5;
    public static final int RULE_SL_COMMENT=12;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__77=77;
    public static final int T__34=34;
    public static final int T__78=78;
    public static final int T__35=35;
    public static final int T__79=79;
    public static final int T__36=36;
    public static final int T__73=73;
    public static final int EOF=-1;
    public static final int T__30=30;
    public static final int T__74=74;
    public static final int T__31=31;
    public static final int T__75=75;
    public static final int T__32=32;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int RULE_WS=13;
    public static final int RULE_ANY_OTHER=14;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__88=88;
    public static final int T__45=45;
    public static final int T__89=89;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__84=84;
    public static final int T__41=41;
    public static final int T__85=85;
    public static final int T__42=42;
    public static final int T__86=86;
    public static final int T__43=43;
    public static final int T__87=87;

    // delegates
    // delegators


        public InternalDockerComposeParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalDockerComposeParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalDockerComposeParser.tokenNames; }
    public String getGrammarFileName() { return "InternalDockerCompose.g"; }


    	private DockerComposeGrammarAccess grammarAccess;

    	public void setGrammarAccess(DockerComposeGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		return tokenName;
    	}



    // $ANTLR start "entryRuleDockerCompose"
    // InternalDockerCompose.g:53:1: entryRuleDockerCompose : ruleDockerCompose EOF ;
    public final void entryRuleDockerCompose() throws RecognitionException {
        try {
            // InternalDockerCompose.g:54:1: ( ruleDockerCompose EOF )
            // InternalDockerCompose.g:55:1: ruleDockerCompose EOF
            {
             before(grammarAccess.getDockerComposeRule()); 
            pushFollow(FOLLOW_1);
            ruleDockerCompose();

            state._fsp--;

             after(grammarAccess.getDockerComposeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDockerCompose"


    // $ANTLR start "ruleDockerCompose"
    // InternalDockerCompose.g:62:1: ruleDockerCompose : ( ( rule__DockerCompose__UnorderedGroup ) ) ;
    public final void ruleDockerCompose() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:66:2: ( ( ( rule__DockerCompose__UnorderedGroup ) ) )
            // InternalDockerCompose.g:67:2: ( ( rule__DockerCompose__UnorderedGroup ) )
            {
            // InternalDockerCompose.g:67:2: ( ( rule__DockerCompose__UnorderedGroup ) )
            // InternalDockerCompose.g:68:3: ( rule__DockerCompose__UnorderedGroup )
            {
             before(grammarAccess.getDockerComposeAccess().getUnorderedGroup()); 
            // InternalDockerCompose.g:69:3: ( rule__DockerCompose__UnorderedGroup )
            // InternalDockerCompose.g:69:4: rule__DockerCompose__UnorderedGroup
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__UnorderedGroup();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getUnorderedGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDockerCompose"


    // $ANTLR start "entryRuleService"
    // InternalDockerCompose.g:78:1: entryRuleService : ruleService EOF ;
    public final void entryRuleService() throws RecognitionException {
        try {
            // InternalDockerCompose.g:79:1: ( ruleService EOF )
            // InternalDockerCompose.g:80:1: ruleService EOF
            {
             before(grammarAccess.getServiceRule()); 
            pushFollow(FOLLOW_1);
            ruleService();

            state._fsp--;

             after(grammarAccess.getServiceRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleService"


    // $ANTLR start "ruleService"
    // InternalDockerCompose.g:87:1: ruleService : ( ( rule__Service__Group__0 ) ) ;
    public final void ruleService() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:91:2: ( ( ( rule__Service__Group__0 ) ) )
            // InternalDockerCompose.g:92:2: ( ( rule__Service__Group__0 ) )
            {
            // InternalDockerCompose.g:92:2: ( ( rule__Service__Group__0 ) )
            // InternalDockerCompose.g:93:3: ( rule__Service__Group__0 )
            {
             before(grammarAccess.getServiceAccess().getGroup()); 
            // InternalDockerCompose.g:94:3: ( rule__Service__Group__0 )
            // InternalDockerCompose.g:94:4: rule__Service__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleService"


    // $ANTLR start "entryRulePort"
    // InternalDockerCompose.g:103:1: entryRulePort : rulePort EOF ;
    public final void entryRulePort() throws RecognitionException {
        try {
            // InternalDockerCompose.g:104:1: ( rulePort EOF )
            // InternalDockerCompose.g:105:1: rulePort EOF
            {
             before(grammarAccess.getPortRule()); 
            pushFollow(FOLLOW_1);
            rulePort();

            state._fsp--;

             after(grammarAccess.getPortRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePort"


    // $ANTLR start "rulePort"
    // InternalDockerCompose.g:112:1: rulePort : ( ( rule__Port__Group__0 ) ) ;
    public final void rulePort() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:116:2: ( ( ( rule__Port__Group__0 ) ) )
            // InternalDockerCompose.g:117:2: ( ( rule__Port__Group__0 ) )
            {
            // InternalDockerCompose.g:117:2: ( ( rule__Port__Group__0 ) )
            // InternalDockerCompose.g:118:3: ( rule__Port__Group__0 )
            {
             before(grammarAccess.getPortAccess().getGroup()); 
            // InternalDockerCompose.g:119:3: ( rule__Port__Group__0 )
            // InternalDockerCompose.g:119:4: rule__Port__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Port__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getPortAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePort"


    // $ANTLR start "entryRuleDevice"
    // InternalDockerCompose.g:128:1: entryRuleDevice : ruleDevice EOF ;
    public final void entryRuleDevice() throws RecognitionException {
        try {
            // InternalDockerCompose.g:129:1: ( ruleDevice EOF )
            // InternalDockerCompose.g:130:1: ruleDevice EOF
            {
             before(grammarAccess.getDeviceRule()); 
            pushFollow(FOLLOW_1);
            ruleDevice();

            state._fsp--;

             after(grammarAccess.getDeviceRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDevice"


    // $ANTLR start "ruleDevice"
    // InternalDockerCompose.g:137:1: ruleDevice : ( ( rule__Device__Group__0 ) ) ;
    public final void ruleDevice() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:141:2: ( ( ( rule__Device__Group__0 ) ) )
            // InternalDockerCompose.g:142:2: ( ( rule__Device__Group__0 ) )
            {
            // InternalDockerCompose.g:142:2: ( ( rule__Device__Group__0 ) )
            // InternalDockerCompose.g:143:3: ( rule__Device__Group__0 )
            {
             before(grammarAccess.getDeviceAccess().getGroup()); 
            // InternalDockerCompose.g:144:3: ( rule__Device__Group__0 )
            // InternalDockerCompose.g:144:4: rule__Device__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Device__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDeviceAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDevice"


    // $ANTLR start "entryRuleImage"
    // InternalDockerCompose.g:153:1: entryRuleImage : ruleImage EOF ;
    public final void entryRuleImage() throws RecognitionException {
        try {
            // InternalDockerCompose.g:154:1: ( ruleImage EOF )
            // InternalDockerCompose.g:155:1: ruleImage EOF
            {
             before(grammarAccess.getImageRule()); 
            pushFollow(FOLLOW_1);
            ruleImage();

            state._fsp--;

             after(grammarAccess.getImageRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleImage"


    // $ANTLR start "ruleImage"
    // InternalDockerCompose.g:162:1: ruleImage : ( ( rule__Image__Alternatives ) ) ;
    public final void ruleImage() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:166:2: ( ( ( rule__Image__Alternatives ) ) )
            // InternalDockerCompose.g:167:2: ( ( rule__Image__Alternatives ) )
            {
            // InternalDockerCompose.g:167:2: ( ( rule__Image__Alternatives ) )
            // InternalDockerCompose.g:168:3: ( rule__Image__Alternatives )
            {
             before(grammarAccess.getImageAccess().getAlternatives()); 
            // InternalDockerCompose.g:169:3: ( rule__Image__Alternatives )
            // InternalDockerCompose.g:169:4: rule__Image__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Image__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getImageAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleImage"


    // $ANTLR start "entryRuleDependency"
    // InternalDockerCompose.g:178:1: entryRuleDependency : ruleDependency EOF ;
    public final void entryRuleDependency() throws RecognitionException {
        try {
            // InternalDockerCompose.g:179:1: ( ruleDependency EOF )
            // InternalDockerCompose.g:180:1: ruleDependency EOF
            {
             before(grammarAccess.getDependencyRule()); 
            pushFollow(FOLLOW_1);
            ruleDependency();

            state._fsp--;

             after(grammarAccess.getDependencyRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDependency"


    // $ANTLR start "ruleDependency"
    // InternalDockerCompose.g:187:1: ruleDependency : ( ( rule__Dependency__Group__0 ) ) ;
    public final void ruleDependency() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:191:2: ( ( ( rule__Dependency__Group__0 ) ) )
            // InternalDockerCompose.g:192:2: ( ( rule__Dependency__Group__0 ) )
            {
            // InternalDockerCompose.g:192:2: ( ( rule__Dependency__Group__0 ) )
            // InternalDockerCompose.g:193:3: ( rule__Dependency__Group__0 )
            {
             before(grammarAccess.getDependencyAccess().getGroup()); 
            // InternalDockerCompose.g:194:3: ( rule__Dependency__Group__0 )
            // InternalDockerCompose.g:194:4: rule__Dependency__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Dependency__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDependencyAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDependency"


    // $ANTLR start "entryRuleNetworkConnector_short"
    // InternalDockerCompose.g:203:1: entryRuleNetworkConnector_short : ruleNetworkConnector_short EOF ;
    public final void entryRuleNetworkConnector_short() throws RecognitionException {
        try {
            // InternalDockerCompose.g:204:1: ( ruleNetworkConnector_short EOF )
            // InternalDockerCompose.g:205:1: ruleNetworkConnector_short EOF
            {
             before(grammarAccess.getNetworkConnector_shortRule()); 
            pushFollow(FOLLOW_1);
            ruleNetworkConnector_short();

            state._fsp--;

             after(grammarAccess.getNetworkConnector_shortRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNetworkConnector_short"


    // $ANTLR start "ruleNetworkConnector_short"
    // InternalDockerCompose.g:212:1: ruleNetworkConnector_short : ( ( rule__NetworkConnector_short__Group__0 ) ) ;
    public final void ruleNetworkConnector_short() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:216:2: ( ( ( rule__NetworkConnector_short__Group__0 ) ) )
            // InternalDockerCompose.g:217:2: ( ( rule__NetworkConnector_short__Group__0 ) )
            {
            // InternalDockerCompose.g:217:2: ( ( rule__NetworkConnector_short__Group__0 ) )
            // InternalDockerCompose.g:218:3: ( rule__NetworkConnector_short__Group__0 )
            {
             before(grammarAccess.getNetworkConnector_shortAccess().getGroup()); 
            // InternalDockerCompose.g:219:3: ( rule__NetworkConnector_short__Group__0 )
            // InternalDockerCompose.g:219:4: rule__NetworkConnector_short__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_short__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnector_shortAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNetworkConnector_short"


    // $ANTLR start "entryRuleNetworkConnector_long"
    // InternalDockerCompose.g:228:1: entryRuleNetworkConnector_long : ruleNetworkConnector_long EOF ;
    public final void entryRuleNetworkConnector_long() throws RecognitionException {
        try {
            // InternalDockerCompose.g:229:1: ( ruleNetworkConnector_long EOF )
            // InternalDockerCompose.g:230:1: ruleNetworkConnector_long EOF
            {
             before(grammarAccess.getNetworkConnector_longRule()); 
            pushFollow(FOLLOW_1);
            ruleNetworkConnector_long();

            state._fsp--;

             after(grammarAccess.getNetworkConnector_longRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNetworkConnector_long"


    // $ANTLR start "ruleNetworkConnector_long"
    // InternalDockerCompose.g:237:1: ruleNetworkConnector_long : ( ( rule__NetworkConnector_long__Group__0 ) ) ;
    public final void ruleNetworkConnector_long() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:241:2: ( ( ( rule__NetworkConnector_long__Group__0 ) ) )
            // InternalDockerCompose.g:242:2: ( ( rule__NetworkConnector_long__Group__0 ) )
            {
            // InternalDockerCompose.g:242:2: ( ( rule__NetworkConnector_long__Group__0 ) )
            // InternalDockerCompose.g:243:3: ( rule__NetworkConnector_long__Group__0 )
            {
             before(grammarAccess.getNetworkConnector_longAccess().getGroup()); 
            // InternalDockerCompose.g:244:3: ( rule__NetworkConnector_long__Group__0 )
            // InternalDockerCompose.g:244:4: rule__NetworkConnector_long__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnector_longAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNetworkConnector_long"


    // $ANTLR start "entryRuleAlias"
    // InternalDockerCompose.g:253:1: entryRuleAlias : ruleAlias EOF ;
    public final void entryRuleAlias() throws RecognitionException {
        try {
            // InternalDockerCompose.g:254:1: ( ruleAlias EOF )
            // InternalDockerCompose.g:255:1: ruleAlias EOF
            {
             before(grammarAccess.getAliasRule()); 
            pushFollow(FOLLOW_1);
            ruleAlias();

            state._fsp--;

             after(grammarAccess.getAliasRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAlias"


    // $ANTLR start "ruleAlias"
    // InternalDockerCompose.g:262:1: ruleAlias : ( ( rule__Alias__Group__0 ) ) ;
    public final void ruleAlias() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:266:2: ( ( ( rule__Alias__Group__0 ) ) )
            // InternalDockerCompose.g:267:2: ( ( rule__Alias__Group__0 ) )
            {
            // InternalDockerCompose.g:267:2: ( ( rule__Alias__Group__0 ) )
            // InternalDockerCompose.g:268:3: ( rule__Alias__Group__0 )
            {
             before(grammarAccess.getAliasAccess().getGroup()); 
            // InternalDockerCompose.g:269:3: ( rule__Alias__Group__0 )
            // InternalDockerCompose.g:269:4: rule__Alias__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Alias__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAliasAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAlias"


    // $ANTLR start "entryRuleVolumeConnector_short"
    // InternalDockerCompose.g:278:1: entryRuleVolumeConnector_short : ruleVolumeConnector_short EOF ;
    public final void entryRuleVolumeConnector_short() throws RecognitionException {
        try {
            // InternalDockerCompose.g:279:1: ( ruleVolumeConnector_short EOF )
            // InternalDockerCompose.g:280:1: ruleVolumeConnector_short EOF
            {
             before(grammarAccess.getVolumeConnector_shortRule()); 
            pushFollow(FOLLOW_1);
            ruleVolumeConnector_short();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_shortRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVolumeConnector_short"


    // $ANTLR start "ruleVolumeConnector_short"
    // InternalDockerCompose.g:287:1: ruleVolumeConnector_short : ( ( rule__VolumeConnector_short__Group__0 ) ) ;
    public final void ruleVolumeConnector_short() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:291:2: ( ( ( rule__VolumeConnector_short__Group__0 ) ) )
            // InternalDockerCompose.g:292:2: ( ( rule__VolumeConnector_short__Group__0 ) )
            {
            // InternalDockerCompose.g:292:2: ( ( rule__VolumeConnector_short__Group__0 ) )
            // InternalDockerCompose.g:293:3: ( rule__VolumeConnector_short__Group__0 )
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getGroup()); 
            // InternalDockerCompose.g:294:3: ( rule__VolumeConnector_short__Group__0 )
            // InternalDockerCompose.g:294:4: rule__VolumeConnector_short__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_shortAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVolumeConnector_short"


    // $ANTLR start "entryRuleVolumeConnector_long"
    // InternalDockerCompose.g:303:1: entryRuleVolumeConnector_long : ruleVolumeConnector_long EOF ;
    public final void entryRuleVolumeConnector_long() throws RecognitionException {
        try {
            // InternalDockerCompose.g:304:1: ( ruleVolumeConnector_long EOF )
            // InternalDockerCompose.g:305:1: ruleVolumeConnector_long EOF
            {
             before(grammarAccess.getVolumeConnector_longRule()); 
            pushFollow(FOLLOW_1);
            ruleVolumeConnector_long();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_longRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVolumeConnector_long"


    // $ANTLR start "ruleVolumeConnector_long"
    // InternalDockerCompose.g:312:1: ruleVolumeConnector_long : ( ( rule__VolumeConnector_long__Group__0 ) ) ;
    public final void ruleVolumeConnector_long() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:316:2: ( ( ( rule__VolumeConnector_long__Group__0 ) ) )
            // InternalDockerCompose.g:317:2: ( ( rule__VolumeConnector_long__Group__0 ) )
            {
            // InternalDockerCompose.g:317:2: ( ( rule__VolumeConnector_long__Group__0 ) )
            // InternalDockerCompose.g:318:3: ( rule__VolumeConnector_long__Group__0 )
            {
             before(grammarAccess.getVolumeConnector_longAccess().getGroup()); 
            // InternalDockerCompose.g:319:3: ( rule__VolumeConnector_long__Group__0 )
            // InternalDockerCompose.g:319:4: rule__VolumeConnector_long__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_longAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVolumeConnector_long"


    // $ANTLR start "entryRuleConfigConnector_short"
    // InternalDockerCompose.g:328:1: entryRuleConfigConnector_short : ruleConfigConnector_short EOF ;
    public final void entryRuleConfigConnector_short() throws RecognitionException {
        try {
            // InternalDockerCompose.g:329:1: ( ruleConfigConnector_short EOF )
            // InternalDockerCompose.g:330:1: ruleConfigConnector_short EOF
            {
             before(grammarAccess.getConfigConnector_shortRule()); 
            pushFollow(FOLLOW_1);
            ruleConfigConnector_short();

            state._fsp--;

             after(grammarAccess.getConfigConnector_shortRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConfigConnector_short"


    // $ANTLR start "ruleConfigConnector_short"
    // InternalDockerCompose.g:337:1: ruleConfigConnector_short : ( ( rule__ConfigConnector_short__Group__0 ) ) ;
    public final void ruleConfigConnector_short() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:341:2: ( ( ( rule__ConfigConnector_short__Group__0 ) ) )
            // InternalDockerCompose.g:342:2: ( ( rule__ConfigConnector_short__Group__0 ) )
            {
            // InternalDockerCompose.g:342:2: ( ( rule__ConfigConnector_short__Group__0 ) )
            // InternalDockerCompose.g:343:3: ( rule__ConfigConnector_short__Group__0 )
            {
             before(grammarAccess.getConfigConnector_shortAccess().getGroup()); 
            // InternalDockerCompose.g:344:3: ( rule__ConfigConnector_short__Group__0 )
            // InternalDockerCompose.g:344:4: rule__ConfigConnector_short__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_short__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnector_shortAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConfigConnector_short"


    // $ANTLR start "entryRuleConfigConnector_long"
    // InternalDockerCompose.g:353:1: entryRuleConfigConnector_long : ruleConfigConnector_long EOF ;
    public final void entryRuleConfigConnector_long() throws RecognitionException {
        try {
            // InternalDockerCompose.g:354:1: ( ruleConfigConnector_long EOF )
            // InternalDockerCompose.g:355:1: ruleConfigConnector_long EOF
            {
             before(grammarAccess.getConfigConnector_longRule()); 
            pushFollow(FOLLOW_1);
            ruleConfigConnector_long();

            state._fsp--;

             after(grammarAccess.getConfigConnector_longRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConfigConnector_long"


    // $ANTLR start "ruleConfigConnector_long"
    // InternalDockerCompose.g:362:1: ruleConfigConnector_long : ( ( rule__ConfigConnector_long__Group__0 ) ) ;
    public final void ruleConfigConnector_long() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:366:2: ( ( ( rule__ConfigConnector_long__Group__0 ) ) )
            // InternalDockerCompose.g:367:2: ( ( rule__ConfigConnector_long__Group__0 ) )
            {
            // InternalDockerCompose.g:367:2: ( ( rule__ConfigConnector_long__Group__0 ) )
            // InternalDockerCompose.g:368:3: ( rule__ConfigConnector_long__Group__0 )
            {
             before(grammarAccess.getConfigConnector_longAccess().getGroup()); 
            // InternalDockerCompose.g:369:3: ( rule__ConfigConnector_long__Group__0 )
            // InternalDockerCompose.g:369:4: rule__ConfigConnector_long__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnector_longAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConfigConnector_long"


    // $ANTLR start "entryRuleSecretConnector_short"
    // InternalDockerCompose.g:378:1: entryRuleSecretConnector_short : ruleSecretConnector_short EOF ;
    public final void entryRuleSecretConnector_short() throws RecognitionException {
        try {
            // InternalDockerCompose.g:379:1: ( ruleSecretConnector_short EOF )
            // InternalDockerCompose.g:380:1: ruleSecretConnector_short EOF
            {
             before(grammarAccess.getSecretConnector_shortRule()); 
            pushFollow(FOLLOW_1);
            ruleSecretConnector_short();

            state._fsp--;

             after(grammarAccess.getSecretConnector_shortRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSecretConnector_short"


    // $ANTLR start "ruleSecretConnector_short"
    // InternalDockerCompose.g:387:1: ruleSecretConnector_short : ( ( rule__SecretConnector_short__Group__0 ) ) ;
    public final void ruleSecretConnector_short() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:391:2: ( ( ( rule__SecretConnector_short__Group__0 ) ) )
            // InternalDockerCompose.g:392:2: ( ( rule__SecretConnector_short__Group__0 ) )
            {
            // InternalDockerCompose.g:392:2: ( ( rule__SecretConnector_short__Group__0 ) )
            // InternalDockerCompose.g:393:3: ( rule__SecretConnector_short__Group__0 )
            {
             before(grammarAccess.getSecretConnector_shortAccess().getGroup()); 
            // InternalDockerCompose.g:394:3: ( rule__SecretConnector_short__Group__0 )
            // InternalDockerCompose.g:394:4: rule__SecretConnector_short__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_short__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnector_shortAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSecretConnector_short"


    // $ANTLR start "entryRuleSecretConnector_long"
    // InternalDockerCompose.g:403:1: entryRuleSecretConnector_long : ruleSecretConnector_long EOF ;
    public final void entryRuleSecretConnector_long() throws RecognitionException {
        try {
            // InternalDockerCompose.g:404:1: ( ruleSecretConnector_long EOF )
            // InternalDockerCompose.g:405:1: ruleSecretConnector_long EOF
            {
             before(grammarAccess.getSecretConnector_longRule()); 
            pushFollow(FOLLOW_1);
            ruleSecretConnector_long();

            state._fsp--;

             after(grammarAccess.getSecretConnector_longRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSecretConnector_long"


    // $ANTLR start "ruleSecretConnector_long"
    // InternalDockerCompose.g:412:1: ruleSecretConnector_long : ( ( rule__SecretConnector_long__Group__0 ) ) ;
    public final void ruleSecretConnector_long() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:416:2: ( ( ( rule__SecretConnector_long__Group__0 ) ) )
            // InternalDockerCompose.g:417:2: ( ( rule__SecretConnector_long__Group__0 ) )
            {
            // InternalDockerCompose.g:417:2: ( ( rule__SecretConnector_long__Group__0 ) )
            // InternalDockerCompose.g:418:3: ( rule__SecretConnector_long__Group__0 )
            {
             before(grammarAccess.getSecretConnector_longAccess().getGroup()); 
            // InternalDockerCompose.g:419:3: ( rule__SecretConnector_long__Group__0 )
            // InternalDockerCompose.g:419:4: rule__SecretConnector_long__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnector_longAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSecretConnector_long"


    // $ANTLR start "entryRuleNetwork"
    // InternalDockerCompose.g:428:1: entryRuleNetwork : ruleNetwork EOF ;
    public final void entryRuleNetwork() throws RecognitionException {
        try {
            // InternalDockerCompose.g:429:1: ( ruleNetwork EOF )
            // InternalDockerCompose.g:430:1: ruleNetwork EOF
            {
             before(grammarAccess.getNetworkRule()); 
            pushFollow(FOLLOW_1);
            ruleNetwork();

            state._fsp--;

             after(grammarAccess.getNetworkRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNetwork"


    // $ANTLR start "ruleNetwork"
    // InternalDockerCompose.g:437:1: ruleNetwork : ( ( rule__Network__Group__0 ) ) ;
    public final void ruleNetwork() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:441:2: ( ( ( rule__Network__Group__0 ) ) )
            // InternalDockerCompose.g:442:2: ( ( rule__Network__Group__0 ) )
            {
            // InternalDockerCompose.g:442:2: ( ( rule__Network__Group__0 ) )
            // InternalDockerCompose.g:443:3: ( rule__Network__Group__0 )
            {
             before(grammarAccess.getNetworkAccess().getGroup()); 
            // InternalDockerCompose.g:444:3: ( rule__Network__Group__0 )
            // InternalDockerCompose.g:444:4: rule__Network__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNetwork"


    // $ANTLR start "entryRuleVolume"
    // InternalDockerCompose.g:453:1: entryRuleVolume : ruleVolume EOF ;
    public final void entryRuleVolume() throws RecognitionException {
        try {
            // InternalDockerCompose.g:454:1: ( ruleVolume EOF )
            // InternalDockerCompose.g:455:1: ruleVolume EOF
            {
             before(grammarAccess.getVolumeRule()); 
            pushFollow(FOLLOW_1);
            ruleVolume();

            state._fsp--;

             after(grammarAccess.getVolumeRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVolume"


    // $ANTLR start "ruleVolume"
    // InternalDockerCompose.g:462:1: ruleVolume : ( ( rule__Volume__Group__0 ) ) ;
    public final void ruleVolume() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:466:2: ( ( ( rule__Volume__Group__0 ) ) )
            // InternalDockerCompose.g:467:2: ( ( rule__Volume__Group__0 ) )
            {
            // InternalDockerCompose.g:467:2: ( ( rule__Volume__Group__0 ) )
            // InternalDockerCompose.g:468:3: ( rule__Volume__Group__0 )
            {
             before(grammarAccess.getVolumeAccess().getGroup()); 
            // InternalDockerCompose.g:469:3: ( rule__Volume__Group__0 )
            // InternalDockerCompose.g:469:4: rule__Volume__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVolume"


    // $ANTLR start "entryRuleConfig"
    // InternalDockerCompose.g:478:1: entryRuleConfig : ruleConfig EOF ;
    public final void entryRuleConfig() throws RecognitionException {
        try {
            // InternalDockerCompose.g:479:1: ( ruleConfig EOF )
            // InternalDockerCompose.g:480:1: ruleConfig EOF
            {
             before(grammarAccess.getConfigRule()); 
            pushFollow(FOLLOW_1);
            ruleConfig();

            state._fsp--;

             after(grammarAccess.getConfigRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConfig"


    // $ANTLR start "ruleConfig"
    // InternalDockerCompose.g:487:1: ruleConfig : ( ( rule__Config__Group__0 ) ) ;
    public final void ruleConfig() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:491:2: ( ( ( rule__Config__Group__0 ) ) )
            // InternalDockerCompose.g:492:2: ( ( rule__Config__Group__0 ) )
            {
            // InternalDockerCompose.g:492:2: ( ( rule__Config__Group__0 ) )
            // InternalDockerCompose.g:493:3: ( rule__Config__Group__0 )
            {
             before(grammarAccess.getConfigAccess().getGroup()); 
            // InternalDockerCompose.g:494:3: ( rule__Config__Group__0 )
            // InternalDockerCompose.g:494:4: rule__Config__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Config__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getConfigAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConfig"


    // $ANTLR start "entryRuleSecret"
    // InternalDockerCompose.g:503:1: entryRuleSecret : ruleSecret EOF ;
    public final void entryRuleSecret() throws RecognitionException {
        try {
            // InternalDockerCompose.g:504:1: ( ruleSecret EOF )
            // InternalDockerCompose.g:505:1: ruleSecret EOF
            {
             before(grammarAccess.getSecretRule()); 
            pushFollow(FOLLOW_1);
            ruleSecret();

            state._fsp--;

             after(grammarAccess.getSecretRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSecret"


    // $ANTLR start "ruleSecret"
    // InternalDockerCompose.g:512:1: ruleSecret : ( ( rule__Secret__Group__0 ) ) ;
    public final void ruleSecret() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:516:2: ( ( ( rule__Secret__Group__0 ) ) )
            // InternalDockerCompose.g:517:2: ( ( rule__Secret__Group__0 ) )
            {
            // InternalDockerCompose.g:517:2: ( ( rule__Secret__Group__0 ) )
            // InternalDockerCompose.g:518:3: ( rule__Secret__Group__0 )
            {
             before(grammarAccess.getSecretAccess().getGroup()); 
            // InternalDockerCompose.g:519:3: ( rule__Secret__Group__0 )
            // InternalDockerCompose.g:519:4: rule__Secret__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSecret"


    // $ANTLR start "entryRuleVolumeLabel"
    // InternalDockerCompose.g:528:1: entryRuleVolumeLabel : ruleVolumeLabel EOF ;
    public final void entryRuleVolumeLabel() throws RecognitionException {
        try {
            // InternalDockerCompose.g:529:1: ( ruleVolumeLabel EOF )
            // InternalDockerCompose.g:530:1: ruleVolumeLabel EOF
            {
             before(grammarAccess.getVolumeLabelRule()); 
            pushFollow(FOLLOW_1);
            ruleVolumeLabel();

            state._fsp--;

             after(grammarAccess.getVolumeLabelRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVolumeLabel"


    // $ANTLR start "ruleVolumeLabel"
    // InternalDockerCompose.g:537:1: ruleVolumeLabel : ( ( rule__VolumeLabel__Group__0 ) ) ;
    public final void ruleVolumeLabel() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:541:2: ( ( ( rule__VolumeLabel__Group__0 ) ) )
            // InternalDockerCompose.g:542:2: ( ( rule__VolumeLabel__Group__0 ) )
            {
            // InternalDockerCompose.g:542:2: ( ( rule__VolumeLabel__Group__0 ) )
            // InternalDockerCompose.g:543:3: ( rule__VolumeLabel__Group__0 )
            {
             before(grammarAccess.getVolumeLabelAccess().getGroup()); 
            // InternalDockerCompose.g:544:3: ( rule__VolumeLabel__Group__0 )
            // InternalDockerCompose.g:544:4: rule__VolumeLabel__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VolumeLabel__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getVolumeLabelAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVolumeLabel"


    // $ANTLR start "entryRuleVolumeDriverOpt"
    // InternalDockerCompose.g:553:1: entryRuleVolumeDriverOpt : ruleVolumeDriverOpt EOF ;
    public final void entryRuleVolumeDriverOpt() throws RecognitionException {
        try {
            // InternalDockerCompose.g:554:1: ( ruleVolumeDriverOpt EOF )
            // InternalDockerCompose.g:555:1: ruleVolumeDriverOpt EOF
            {
             before(grammarAccess.getVolumeDriverOptRule()); 
            pushFollow(FOLLOW_1);
            ruleVolumeDriverOpt();

            state._fsp--;

             after(grammarAccess.getVolumeDriverOptRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVolumeDriverOpt"


    // $ANTLR start "ruleVolumeDriverOpt"
    // InternalDockerCompose.g:562:1: ruleVolumeDriverOpt : ( ( rule__VolumeDriverOpt__Group__0 ) ) ;
    public final void ruleVolumeDriverOpt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:566:2: ( ( ( rule__VolumeDriverOpt__Group__0 ) ) )
            // InternalDockerCompose.g:567:2: ( ( rule__VolumeDriverOpt__Group__0 ) )
            {
            // InternalDockerCompose.g:567:2: ( ( rule__VolumeDriverOpt__Group__0 ) )
            // InternalDockerCompose.g:568:3: ( rule__VolumeDriverOpt__Group__0 )
            {
             before(grammarAccess.getVolumeDriverOptAccess().getGroup()); 
            // InternalDockerCompose.g:569:3: ( rule__VolumeDriverOpt__Group__0 )
            // InternalDockerCompose.g:569:4: rule__VolumeDriverOpt__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getVolumeDriverOptAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVolumeDriverOpt"


    // $ANTLR start "entryRuleNetworkLabel"
    // InternalDockerCompose.g:578:1: entryRuleNetworkLabel : ruleNetworkLabel EOF ;
    public final void entryRuleNetworkLabel() throws RecognitionException {
        try {
            // InternalDockerCompose.g:579:1: ( ruleNetworkLabel EOF )
            // InternalDockerCompose.g:580:1: ruleNetworkLabel EOF
            {
             before(grammarAccess.getNetworkLabelRule()); 
            pushFollow(FOLLOW_1);
            ruleNetworkLabel();

            state._fsp--;

             after(grammarAccess.getNetworkLabelRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNetworkLabel"


    // $ANTLR start "ruleNetworkLabel"
    // InternalDockerCompose.g:587:1: ruleNetworkLabel : ( ( rule__NetworkLabel__Group__0 ) ) ;
    public final void ruleNetworkLabel() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:591:2: ( ( ( rule__NetworkLabel__Group__0 ) ) )
            // InternalDockerCompose.g:592:2: ( ( rule__NetworkLabel__Group__0 ) )
            {
            // InternalDockerCompose.g:592:2: ( ( rule__NetworkLabel__Group__0 ) )
            // InternalDockerCompose.g:593:3: ( rule__NetworkLabel__Group__0 )
            {
             before(grammarAccess.getNetworkLabelAccess().getGroup()); 
            // InternalDockerCompose.g:594:3: ( rule__NetworkLabel__Group__0 )
            // InternalDockerCompose.g:594:4: rule__NetworkLabel__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NetworkLabel__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkLabelAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNetworkLabel"


    // $ANTLR start "entryRuleNetworkDriverOpt"
    // InternalDockerCompose.g:603:1: entryRuleNetworkDriverOpt : ruleNetworkDriverOpt EOF ;
    public final void entryRuleNetworkDriverOpt() throws RecognitionException {
        try {
            // InternalDockerCompose.g:604:1: ( ruleNetworkDriverOpt EOF )
            // InternalDockerCompose.g:605:1: ruleNetworkDriverOpt EOF
            {
             before(grammarAccess.getNetworkDriverOptRule()); 
            pushFollow(FOLLOW_1);
            ruleNetworkDriverOpt();

            state._fsp--;

             after(grammarAccess.getNetworkDriverOptRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNetworkDriverOpt"


    // $ANTLR start "ruleNetworkDriverOpt"
    // InternalDockerCompose.g:612:1: ruleNetworkDriverOpt : ( ( rule__NetworkDriverOpt__Group__0 ) ) ;
    public final void ruleNetworkDriverOpt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:616:2: ( ( ( rule__NetworkDriverOpt__Group__0 ) ) )
            // InternalDockerCompose.g:617:2: ( ( rule__NetworkDriverOpt__Group__0 ) )
            {
            // InternalDockerCompose.g:617:2: ( ( rule__NetworkDriverOpt__Group__0 ) )
            // InternalDockerCompose.g:618:3: ( rule__NetworkDriverOpt__Group__0 )
            {
             before(grammarAccess.getNetworkDriverOptAccess().getGroup()); 
            // InternalDockerCompose.g:619:3: ( rule__NetworkDriverOpt__Group__0 )
            // InternalDockerCompose.g:619:4: rule__NetworkDriverOpt__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkDriverOptAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNetworkDriverOpt"


    // $ANTLR start "entryRuleIPAM"
    // InternalDockerCompose.g:628:1: entryRuleIPAM : ruleIPAM EOF ;
    public final void entryRuleIPAM() throws RecognitionException {
        try {
            // InternalDockerCompose.g:629:1: ( ruleIPAM EOF )
            // InternalDockerCompose.g:630:1: ruleIPAM EOF
            {
             before(grammarAccess.getIPAMRule()); 
            pushFollow(FOLLOW_1);
            ruleIPAM();

            state._fsp--;

             after(grammarAccess.getIPAMRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIPAM"


    // $ANTLR start "ruleIPAM"
    // InternalDockerCompose.g:637:1: ruleIPAM : ( ( rule__IPAM__Group__0 ) ) ;
    public final void ruleIPAM() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:641:2: ( ( ( rule__IPAM__Group__0 ) ) )
            // InternalDockerCompose.g:642:2: ( ( rule__IPAM__Group__0 ) )
            {
            // InternalDockerCompose.g:642:2: ( ( rule__IPAM__Group__0 ) )
            // InternalDockerCompose.g:643:3: ( rule__IPAM__Group__0 )
            {
             before(grammarAccess.getIPAMAccess().getGroup()); 
            // InternalDockerCompose.g:644:3: ( rule__IPAM__Group__0 )
            // InternalDockerCompose.g:644:4: rule__IPAM__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIPAM"


    // $ANTLR start "entryRuleIPAMConfig"
    // InternalDockerCompose.g:653:1: entryRuleIPAMConfig : ruleIPAMConfig EOF ;
    public final void entryRuleIPAMConfig() throws RecognitionException {
        try {
            // InternalDockerCompose.g:654:1: ( ruleIPAMConfig EOF )
            // InternalDockerCompose.g:655:1: ruleIPAMConfig EOF
            {
             before(grammarAccess.getIPAMConfigRule()); 
            pushFollow(FOLLOW_1);
            ruleIPAMConfig();

            state._fsp--;

             after(grammarAccess.getIPAMConfigRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIPAMConfig"


    // $ANTLR start "ruleIPAMConfig"
    // InternalDockerCompose.g:662:1: ruleIPAMConfig : ( ( rule__IPAMConfig__Group__0 ) ) ;
    public final void ruleIPAMConfig() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:666:2: ( ( ( rule__IPAMConfig__Group__0 ) ) )
            // InternalDockerCompose.g:667:2: ( ( rule__IPAMConfig__Group__0 ) )
            {
            // InternalDockerCompose.g:667:2: ( ( rule__IPAMConfig__Group__0 ) )
            // InternalDockerCompose.g:668:3: ( rule__IPAMConfig__Group__0 )
            {
             before(grammarAccess.getIPAMConfigAccess().getGroup()); 
            // InternalDockerCompose.g:669:3: ( rule__IPAMConfig__Group__0 )
            // InternalDockerCompose.g:669:4: rule__IPAMConfig__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIPAMConfigAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIPAMConfig"


    // $ANTLR start "entryRuleIPAMOption"
    // InternalDockerCompose.g:678:1: entryRuleIPAMOption : ruleIPAMOption EOF ;
    public final void entryRuleIPAMOption() throws RecognitionException {
        try {
            // InternalDockerCompose.g:679:1: ( ruleIPAMOption EOF )
            // InternalDockerCompose.g:680:1: ruleIPAMOption EOF
            {
             before(grammarAccess.getIPAMOptionRule()); 
            pushFollow(FOLLOW_1);
            ruleIPAMOption();

            state._fsp--;

             after(grammarAccess.getIPAMOptionRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIPAMOption"


    // $ANTLR start "ruleIPAMOption"
    // InternalDockerCompose.g:687:1: ruleIPAMOption : ( ( rule__IPAMOption__Group__0 ) ) ;
    public final void ruleIPAMOption() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:691:2: ( ( ( rule__IPAMOption__Group__0 ) ) )
            // InternalDockerCompose.g:692:2: ( ( rule__IPAMOption__Group__0 ) )
            {
            // InternalDockerCompose.g:692:2: ( ( rule__IPAMOption__Group__0 ) )
            // InternalDockerCompose.g:693:3: ( rule__IPAMOption__Group__0 )
            {
             before(grammarAccess.getIPAMOptionAccess().getGroup()); 
            // InternalDockerCompose.g:694:3: ( rule__IPAMOption__Group__0 )
            // InternalDockerCompose.g:694:4: rule__IPAMOption__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IPAMOption__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIPAMOptionAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIPAMOption"


    // $ANTLR start "entryRuleIPAMAddress"
    // InternalDockerCompose.g:703:1: entryRuleIPAMAddress : ruleIPAMAddress EOF ;
    public final void entryRuleIPAMAddress() throws RecognitionException {
        try {
            // InternalDockerCompose.g:704:1: ( ruleIPAMAddress EOF )
            // InternalDockerCompose.g:705:1: ruleIPAMAddress EOF
            {
             before(grammarAccess.getIPAMAddressRule()); 
            pushFollow(FOLLOW_1);
            ruleIPAMAddress();

            state._fsp--;

             after(grammarAccess.getIPAMAddressRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIPAMAddress"


    // $ANTLR start "ruleIPAMAddress"
    // InternalDockerCompose.g:712:1: ruleIPAMAddress : ( ( rule__IPAMAddress__Group__0 ) ) ;
    public final void ruleIPAMAddress() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:716:2: ( ( ( rule__IPAMAddress__Group__0 ) ) )
            // InternalDockerCompose.g:717:2: ( ( rule__IPAMAddress__Group__0 ) )
            {
            // InternalDockerCompose.g:717:2: ( ( rule__IPAMAddress__Group__0 ) )
            // InternalDockerCompose.g:718:3: ( rule__IPAMAddress__Group__0 )
            {
             before(grammarAccess.getIPAMAddressAccess().getGroup()); 
            // InternalDockerCompose.g:719:3: ( rule__IPAMAddress__Group__0 )
            // InternalDockerCompose.g:719:4: rule__IPAMAddress__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IPAMAddress__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAddressAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIPAMAddress"


    // $ANTLR start "entryRulePATH"
    // InternalDockerCompose.g:728:1: entryRulePATH : rulePATH EOF ;
    public final void entryRulePATH() throws RecognitionException {
        try {
            // InternalDockerCompose.g:729:1: ( rulePATH EOF )
            // InternalDockerCompose.g:730:1: rulePATH EOF
            {
             before(grammarAccess.getPATHRule()); 
            pushFollow(FOLLOW_1);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getPATHRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePATH"


    // $ANTLR start "rulePATH"
    // InternalDockerCompose.g:737:1: rulePATH : ( ( rule__PATH__Group__0 ) ) ;
    public final void rulePATH() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:741:2: ( ( ( rule__PATH__Group__0 ) ) )
            // InternalDockerCompose.g:742:2: ( ( rule__PATH__Group__0 ) )
            {
            // InternalDockerCompose.g:742:2: ( ( rule__PATH__Group__0 ) )
            // InternalDockerCompose.g:743:3: ( rule__PATH__Group__0 )
            {
             before(grammarAccess.getPATHAccess().getGroup()); 
            // InternalDockerCompose.g:744:3: ( rule__PATH__Group__0 )
            // InternalDockerCompose.g:744:4: rule__PATH__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getPATHAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePATH"


    // $ANTLR start "entryRuleEString"
    // InternalDockerCompose.g:753:1: entryRuleEString : ruleEString EOF ;
    public final void entryRuleEString() throws RecognitionException {
        try {
            // InternalDockerCompose.g:754:1: ( ruleEString EOF )
            // InternalDockerCompose.g:755:1: ruleEString EOF
            {
             before(grammarAccess.getEStringRule()); 
            pushFollow(FOLLOW_1);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getEStringRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEString"


    // $ANTLR start "ruleEString"
    // InternalDockerCompose.g:762:1: ruleEString : ( ( rule__EString__Alternatives ) ) ;
    public final void ruleEString() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:766:2: ( ( ( rule__EString__Alternatives ) ) )
            // InternalDockerCompose.g:767:2: ( ( rule__EString__Alternatives ) )
            {
            // InternalDockerCompose.g:767:2: ( ( rule__EString__Alternatives ) )
            // InternalDockerCompose.g:768:3: ( rule__EString__Alternatives )
            {
             before(grammarAccess.getEStringAccess().getAlternatives()); 
            // InternalDockerCompose.g:769:3: ( rule__EString__Alternatives )
            // InternalDockerCompose.g:769:4: rule__EString__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EString__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getEStringAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEString"


    // $ANTLR start "entryRuleEInt"
    // InternalDockerCompose.g:778:1: entryRuleEInt : ruleEInt EOF ;
    public final void entryRuleEInt() throws RecognitionException {
        try {
            // InternalDockerCompose.g:779:1: ( ruleEInt EOF )
            // InternalDockerCompose.g:780:1: ruleEInt EOF
            {
             before(grammarAccess.getEIntRule()); 
            pushFollow(FOLLOW_1);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getEIntRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEInt"


    // $ANTLR start "ruleEInt"
    // InternalDockerCompose.g:787:1: ruleEInt : ( RULE_INT ) ;
    public final void ruleEInt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:791:2: ( ( RULE_INT ) )
            // InternalDockerCompose.g:792:2: ( RULE_INT )
            {
            // InternalDockerCompose.g:792:2: ( RULE_INT )
            // InternalDockerCompose.g:793:3: RULE_INT
            {
             before(grammarAccess.getEIntAccess().getINTTerminalRuleCall()); 
            match(input,RULE_INT,FOLLOW_2); 
             after(grammarAccess.getEIntAccess().getINTTerminalRuleCall()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEInt"


    // $ANTLR start "entryRuleDNS"
    // InternalDockerCompose.g:803:1: entryRuleDNS : ruleDNS EOF ;
    public final void entryRuleDNS() throws RecognitionException {
        try {
            // InternalDockerCompose.g:804:1: ( ruleDNS EOF )
            // InternalDockerCompose.g:805:1: ruleDNS EOF
            {
             before(grammarAccess.getDNSRule()); 
            pushFollow(FOLLOW_1);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getDNSRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDNS"


    // $ANTLR start "ruleDNS"
    // InternalDockerCompose.g:812:1: ruleDNS : ( ( rule__DNS__Group__0 ) ) ;
    public final void ruleDNS() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:816:2: ( ( ( rule__DNS__Group__0 ) ) )
            // InternalDockerCompose.g:817:2: ( ( rule__DNS__Group__0 ) )
            {
            // InternalDockerCompose.g:817:2: ( ( rule__DNS__Group__0 ) )
            // InternalDockerCompose.g:818:3: ( rule__DNS__Group__0 )
            {
             before(grammarAccess.getDNSAccess().getGroup()); 
            // InternalDockerCompose.g:819:3: ( rule__DNS__Group__0 )
            // InternalDockerCompose.g:819:4: rule__DNS__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DNS__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getDNSAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDNS"


    // $ANTLR start "entryRuleNetworkAddress"
    // InternalDockerCompose.g:828:1: entryRuleNetworkAddress : ruleNetworkAddress EOF ;
    public final void entryRuleNetworkAddress() throws RecognitionException {
        try {
            // InternalDockerCompose.g:829:1: ( ruleNetworkAddress EOF )
            // InternalDockerCompose.g:830:1: ruleNetworkAddress EOF
            {
             before(grammarAccess.getNetworkAddressRule()); 
            pushFollow(FOLLOW_1);
            ruleNetworkAddress();

            state._fsp--;

             after(grammarAccess.getNetworkAddressRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNetworkAddress"


    // $ANTLR start "ruleNetworkAddress"
    // InternalDockerCompose.g:837:1: ruleNetworkAddress : ( ( rule__NetworkAddress__Group__0 ) ) ;
    public final void ruleNetworkAddress() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:841:2: ( ( ( rule__NetworkAddress__Group__0 ) ) )
            // InternalDockerCompose.g:842:2: ( ( rule__NetworkAddress__Group__0 ) )
            {
            // InternalDockerCompose.g:842:2: ( ( rule__NetworkAddress__Group__0 ) )
            // InternalDockerCompose.g:843:3: ( rule__NetworkAddress__Group__0 )
            {
             before(grammarAccess.getNetworkAddressAccess().getGroup()); 
            // InternalDockerCompose.g:844:3: ( rule__NetworkAddress__Group__0 )
            // InternalDockerCompose.g:844:4: rule__NetworkAddress__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAddressAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNetworkAddress"


    // $ANTLR start "entryRuleEBoolean"
    // InternalDockerCompose.g:853:1: entryRuleEBoolean : ruleEBoolean EOF ;
    public final void entryRuleEBoolean() throws RecognitionException {
        try {
            // InternalDockerCompose.g:854:1: ( ruleEBoolean EOF )
            // InternalDockerCompose.g:855:1: ruleEBoolean EOF
            {
             before(grammarAccess.getEBooleanRule()); 
            pushFollow(FOLLOW_1);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getEBooleanRule()); 
            match(input,EOF,FOLLOW_2); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEBoolean"


    // $ANTLR start "ruleEBoolean"
    // InternalDockerCompose.g:862:1: ruleEBoolean : ( ( rule__EBoolean__Alternatives ) ) ;
    public final void ruleEBoolean() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:866:2: ( ( ( rule__EBoolean__Alternatives ) ) )
            // InternalDockerCompose.g:867:2: ( ( rule__EBoolean__Alternatives ) )
            {
            // InternalDockerCompose.g:867:2: ( ( rule__EBoolean__Alternatives ) )
            // InternalDockerCompose.g:868:3: ( rule__EBoolean__Alternatives )
            {
             before(grammarAccess.getEBooleanAccess().getAlternatives()); 
            // InternalDockerCompose.g:869:3: ( rule__EBoolean__Alternatives )
            // InternalDockerCompose.g:869:4: rule__EBoolean__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EBoolean__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getEBooleanAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEBoolean"


    // $ANTLR start "ruleRestartPolicy"
    // InternalDockerCompose.g:878:1: ruleRestartPolicy : ( ( rule__RestartPolicy__Alternatives ) ) ;
    public final void ruleRestartPolicy() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:882:1: ( ( ( rule__RestartPolicy__Alternatives ) ) )
            // InternalDockerCompose.g:883:2: ( ( rule__RestartPolicy__Alternatives ) )
            {
            // InternalDockerCompose.g:883:2: ( ( rule__RestartPolicy__Alternatives ) )
            // InternalDockerCompose.g:884:3: ( rule__RestartPolicy__Alternatives )
            {
             before(grammarAccess.getRestartPolicyAccess().getAlternatives()); 
            // InternalDockerCompose.g:885:3: ( rule__RestartPolicy__Alternatives )
            // InternalDockerCompose.g:885:4: rule__RestartPolicy__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__RestartPolicy__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getRestartPolicyAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRestartPolicy"


    // $ANTLR start "ruleAccessMode"
    // InternalDockerCompose.g:894:1: ruleAccessMode : ( ( rule__AccessMode__Alternatives ) ) ;
    public final void ruleAccessMode() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:898:1: ( ( ( rule__AccessMode__Alternatives ) ) )
            // InternalDockerCompose.g:899:2: ( ( rule__AccessMode__Alternatives ) )
            {
            // InternalDockerCompose.g:899:2: ( ( rule__AccessMode__Alternatives ) )
            // InternalDockerCompose.g:900:3: ( rule__AccessMode__Alternatives )
            {
             before(grammarAccess.getAccessModeAccess().getAlternatives()); 
            // InternalDockerCompose.g:901:3: ( rule__AccessMode__Alternatives )
            // InternalDockerCompose.g:901:4: rule__AccessMode__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AccessMode__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getAccessModeAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAccessMode"


    // $ANTLR start "ruleMountType"
    // InternalDockerCompose.g:910:1: ruleMountType : ( ( rule__MountType__Alternatives ) ) ;
    public final void ruleMountType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:914:1: ( ( ( rule__MountType__Alternatives ) ) )
            // InternalDockerCompose.g:915:2: ( ( rule__MountType__Alternatives ) )
            {
            // InternalDockerCompose.g:915:2: ( ( rule__MountType__Alternatives ) )
            // InternalDockerCompose.g:916:3: ( rule__MountType__Alternatives )
            {
             before(grammarAccess.getMountTypeAccess().getAlternatives()); 
            // InternalDockerCompose.g:917:3: ( rule__MountType__Alternatives )
            // InternalDockerCompose.g:917:4: rule__MountType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__MountType__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getMountTypeAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMountType"


    // $ANTLR start "rulePropagationType"
    // InternalDockerCompose.g:926:1: rulePropagationType : ( ( rule__PropagationType__Alternatives ) ) ;
    public final void rulePropagationType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:930:1: ( ( ( rule__PropagationType__Alternatives ) ) )
            // InternalDockerCompose.g:931:2: ( ( rule__PropagationType__Alternatives ) )
            {
            // InternalDockerCompose.g:931:2: ( ( rule__PropagationType__Alternatives ) )
            // InternalDockerCompose.g:932:3: ( rule__PropagationType__Alternatives )
            {
             before(grammarAccess.getPropagationTypeAccess().getAlternatives()); 
            // InternalDockerCompose.g:933:3: ( rule__PropagationType__Alternatives )
            // InternalDockerCompose.g:933:4: rule__PropagationType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__PropagationType__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getPropagationTypeAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePropagationType"


    // $ANTLR start "rule__Service__Alternatives_3_0"
    // InternalDockerCompose.g:941:1: rule__Service__Alternatives_3_0 : ( ( ( rule__Service__Group_3_0_0__0 ) ) | ( ( rule__Service__Group_3_0_1__0 ) ) );
    public final void rule__Service__Alternatives_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:945:1: ( ( ( rule__Service__Group_3_0_0__0 ) ) | ( ( rule__Service__Group_3_0_1__0 ) ) )
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==41) ) {
                alt1=1;
            }
            else if ( (LA1_0==42) ) {
                alt1=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 1, 0, input);

                throw nvae;
            }
            switch (alt1) {
                case 1 :
                    // InternalDockerCompose.g:946:2: ( ( rule__Service__Group_3_0_0__0 ) )
                    {
                    // InternalDockerCompose.g:946:2: ( ( rule__Service__Group_3_0_0__0 ) )
                    // InternalDockerCompose.g:947:3: ( rule__Service__Group_3_0_0__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_0_0()); 
                    // InternalDockerCompose.g:948:3: ( rule__Service__Group_3_0_0__0 )
                    // InternalDockerCompose.g:948:4: rule__Service__Group_3_0_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_0_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:952:2: ( ( rule__Service__Group_3_0_1__0 ) )
                    {
                    // InternalDockerCompose.g:952:2: ( ( rule__Service__Group_3_0_1__0 ) )
                    // InternalDockerCompose.g:953:3: ( rule__Service__Group_3_0_1__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_0_1()); 
                    // InternalDockerCompose.g:954:3: ( rule__Service__Group_3_0_1__0 )
                    // InternalDockerCompose.g:954:4: rule__Service__Group_3_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_0_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Alternatives_3_0"


    // $ANTLR start "rule__Service__Alternatives_3_8_1"
    // InternalDockerCompose.g:962:1: rule__Service__Alternatives_3_8_1 : ( ( ( ( rule__Service__NetworksAssignment_3_8_1_0 ) ) ( ( rule__Service__NetworksAssignment_3_8_1_0 )* ) ) | ( ( ( rule__Service__NetworksAssignment_3_8_1_1 ) ) ( ( rule__Service__NetworksAssignment_3_8_1_1 )* ) ) );
    public final void rule__Service__Alternatives_3_8_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:966:1: ( ( ( ( rule__Service__NetworksAssignment_3_8_1_0 ) ) ( ( rule__Service__NetworksAssignment_3_8_1_0 )* ) ) | ( ( ( rule__Service__NetworksAssignment_3_8_1_1 ) ) ( ( rule__Service__NetworksAssignment_3_8_1_1 )* ) ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==50) ) {
                alt4=1;
            }
            else if ( ((LA4_0>=RULE_STRING && LA4_0<=RULE_ID)) ) {
                alt4=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalDockerCompose.g:967:2: ( ( ( rule__Service__NetworksAssignment_3_8_1_0 ) ) ( ( rule__Service__NetworksAssignment_3_8_1_0 )* ) )
                    {
                    // InternalDockerCompose.g:967:2: ( ( ( rule__Service__NetworksAssignment_3_8_1_0 ) ) ( ( rule__Service__NetworksAssignment_3_8_1_0 )* ) )
                    // InternalDockerCompose.g:968:3: ( ( rule__Service__NetworksAssignment_3_8_1_0 ) ) ( ( rule__Service__NetworksAssignment_3_8_1_0 )* )
                    {
                    // InternalDockerCompose.g:968:3: ( ( rule__Service__NetworksAssignment_3_8_1_0 ) )
                    // InternalDockerCompose.g:969:4: ( rule__Service__NetworksAssignment_3_8_1_0 )
                    {
                     before(grammarAccess.getServiceAccess().getNetworksAssignment_3_8_1_0()); 
                    // InternalDockerCompose.g:970:4: ( rule__Service__NetworksAssignment_3_8_1_0 )
                    // InternalDockerCompose.g:970:5: rule__Service__NetworksAssignment_3_8_1_0
                    {
                    pushFollow(FOLLOW_3);
                    rule__Service__NetworksAssignment_3_8_1_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getNetworksAssignment_3_8_1_0()); 

                    }

                    // InternalDockerCompose.g:973:3: ( ( rule__Service__NetworksAssignment_3_8_1_0 )* )
                    // InternalDockerCompose.g:974:4: ( rule__Service__NetworksAssignment_3_8_1_0 )*
                    {
                     before(grammarAccess.getServiceAccess().getNetworksAssignment_3_8_1_0()); 
                    // InternalDockerCompose.g:975:4: ( rule__Service__NetworksAssignment_3_8_1_0 )*
                    loop2:
                    do {
                        int alt2=2;
                        int LA2_0 = input.LA(1);

                        if ( (LA2_0==50) ) {
                            alt2=1;
                        }


                        switch (alt2) {
                    	case 1 :
                    	    // InternalDockerCompose.g:975:5: rule__Service__NetworksAssignment_3_8_1_0
                    	    {
                    	    pushFollow(FOLLOW_3);
                    	    rule__Service__NetworksAssignment_3_8_1_0();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop2;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getNetworksAssignment_3_8_1_0()); 

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:980:2: ( ( ( rule__Service__NetworksAssignment_3_8_1_1 ) ) ( ( rule__Service__NetworksAssignment_3_8_1_1 )* ) )
                    {
                    // InternalDockerCompose.g:980:2: ( ( ( rule__Service__NetworksAssignment_3_8_1_1 ) ) ( ( rule__Service__NetworksAssignment_3_8_1_1 )* ) )
                    // InternalDockerCompose.g:981:3: ( ( rule__Service__NetworksAssignment_3_8_1_1 ) ) ( ( rule__Service__NetworksAssignment_3_8_1_1 )* )
                    {
                    // InternalDockerCompose.g:981:3: ( ( rule__Service__NetworksAssignment_3_8_1_1 ) )
                    // InternalDockerCompose.g:982:4: ( rule__Service__NetworksAssignment_3_8_1_1 )
                    {
                     before(grammarAccess.getServiceAccess().getNetworksAssignment_3_8_1_1()); 
                    // InternalDockerCompose.g:983:4: ( rule__Service__NetworksAssignment_3_8_1_1 )
                    // InternalDockerCompose.g:983:5: rule__Service__NetworksAssignment_3_8_1_1
                    {
                    pushFollow(FOLLOW_4);
                    rule__Service__NetworksAssignment_3_8_1_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getNetworksAssignment_3_8_1_1()); 

                    }

                    // InternalDockerCompose.g:986:3: ( ( rule__Service__NetworksAssignment_3_8_1_1 )* )
                    // InternalDockerCompose.g:987:4: ( rule__Service__NetworksAssignment_3_8_1_1 )*
                    {
                     before(grammarAccess.getServiceAccess().getNetworksAssignment_3_8_1_1()); 
                    // InternalDockerCompose.g:988:4: ( rule__Service__NetworksAssignment_3_8_1_1 )*
                    loop3:
                    do {
                        int alt3=2;
                        alt3 = dfa3.predict(input);
                        switch (alt3) {
                    	case 1 :
                    	    // InternalDockerCompose.g:988:5: rule__Service__NetworksAssignment_3_8_1_1
                    	    {
                    	    pushFollow(FOLLOW_4);
                    	    rule__Service__NetworksAssignment_3_8_1_1();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop3;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getNetworksAssignment_3_8_1_1()); 

                    }


                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Alternatives_3_8_1"


    // $ANTLR start "rule__Service__Alternatives_3_9_1"
    // InternalDockerCompose.g:997:1: rule__Service__Alternatives_3_9_1 : ( ( ( ( rule__Service__Group_3_9_1_0__0 ) ) ( ( rule__Service__Group_3_9_1_0__0 )* ) ) | ( ( ( rule__Service__Group_3_9_1_1__0 ) ) ( ( rule__Service__Group_3_9_1_1__0 )* ) ) );
    public final void rule__Service__Alternatives_3_9_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1001:1: ( ( ( ( rule__Service__Group_3_9_1_0__0 ) ) ( ( rule__Service__Group_3_9_1_0__0 )* ) ) | ( ( ( rule__Service__Group_3_9_1_1__0 ) ) ( ( rule__Service__Group_3_9_1_1__0 )* ) ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==50) ) {
                int LA7_1 = input.LA(2);

                if ( (LA7_1==48||(LA7_1>=58 && LA7_1<=61)||LA7_1==63||LA7_1==65) ) {
                    alt7=2;
                }
                else if ( ((LA7_1>=RULE_STRING && LA7_1<=RULE_ID)) ) {
                    alt7=1;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 7, 1, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalDockerCompose.g:1002:2: ( ( ( rule__Service__Group_3_9_1_0__0 ) ) ( ( rule__Service__Group_3_9_1_0__0 )* ) )
                    {
                    // InternalDockerCompose.g:1002:2: ( ( ( rule__Service__Group_3_9_1_0__0 ) ) ( ( rule__Service__Group_3_9_1_0__0 )* ) )
                    // InternalDockerCompose.g:1003:3: ( ( rule__Service__Group_3_9_1_0__0 ) ) ( ( rule__Service__Group_3_9_1_0__0 )* )
                    {
                    // InternalDockerCompose.g:1003:3: ( ( rule__Service__Group_3_9_1_0__0 ) )
                    // InternalDockerCompose.g:1004:4: ( rule__Service__Group_3_9_1_0__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_9_1_0()); 
                    // InternalDockerCompose.g:1005:4: ( rule__Service__Group_3_9_1_0__0 )
                    // InternalDockerCompose.g:1005:5: rule__Service__Group_3_9_1_0__0
                    {
                    pushFollow(FOLLOW_3);
                    rule__Service__Group_3_9_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_9_1_0()); 

                    }

                    // InternalDockerCompose.g:1008:3: ( ( rule__Service__Group_3_9_1_0__0 )* )
                    // InternalDockerCompose.g:1009:4: ( rule__Service__Group_3_9_1_0__0 )*
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_9_1_0()); 
                    // InternalDockerCompose.g:1010:4: ( rule__Service__Group_3_9_1_0__0 )*
                    loop5:
                    do {
                        int alt5=2;
                        int LA5_0 = input.LA(1);

                        if ( (LA5_0==50) ) {
                            alt5=1;
                        }


                        switch (alt5) {
                    	case 1 :
                    	    // InternalDockerCompose.g:1010:5: rule__Service__Group_3_9_1_0__0
                    	    {
                    	    pushFollow(FOLLOW_3);
                    	    rule__Service__Group_3_9_1_0__0();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop5;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getGroup_3_9_1_0()); 

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1015:2: ( ( ( rule__Service__Group_3_9_1_1__0 ) ) ( ( rule__Service__Group_3_9_1_1__0 )* ) )
                    {
                    // InternalDockerCompose.g:1015:2: ( ( ( rule__Service__Group_3_9_1_1__0 ) ) ( ( rule__Service__Group_3_9_1_1__0 )* ) )
                    // InternalDockerCompose.g:1016:3: ( ( rule__Service__Group_3_9_1_1__0 ) ) ( ( rule__Service__Group_3_9_1_1__0 )* )
                    {
                    // InternalDockerCompose.g:1016:3: ( ( rule__Service__Group_3_9_1_1__0 ) )
                    // InternalDockerCompose.g:1017:4: ( rule__Service__Group_3_9_1_1__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_9_1_1()); 
                    // InternalDockerCompose.g:1018:4: ( rule__Service__Group_3_9_1_1__0 )
                    // InternalDockerCompose.g:1018:5: rule__Service__Group_3_9_1_1__0
                    {
                    pushFollow(FOLLOW_3);
                    rule__Service__Group_3_9_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_9_1_1()); 

                    }

                    // InternalDockerCompose.g:1021:3: ( ( rule__Service__Group_3_9_1_1__0 )* )
                    // InternalDockerCompose.g:1022:4: ( rule__Service__Group_3_9_1_1__0 )*
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_9_1_1()); 
                    // InternalDockerCompose.g:1023:4: ( rule__Service__Group_3_9_1_1__0 )*
                    loop6:
                    do {
                        int alt6=2;
                        int LA6_0 = input.LA(1);

                        if ( (LA6_0==50) ) {
                            alt6=1;
                        }


                        switch (alt6) {
                    	case 1 :
                    	    // InternalDockerCompose.g:1023:5: rule__Service__Group_3_9_1_1__0
                    	    {
                    	    pushFollow(FOLLOW_3);
                    	    rule__Service__Group_3_9_1_1__0();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop6;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getGroup_3_9_1_1()); 

                    }


                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Alternatives_3_9_1"


    // $ANTLR start "rule__Service__Alternatives_3_10_1"
    // InternalDockerCompose.g:1032:1: rule__Service__Alternatives_3_10_1 : ( ( ( ( rule__Service__Group_3_10_1_0__0 ) ) ( ( rule__Service__Group_3_10_1_0__0 )* ) ) | ( ( ( rule__Service__Group_3_10_1_1__0 ) ) ( ( rule__Service__Group_3_10_1_1__0 )* ) ) );
    public final void rule__Service__Alternatives_3_10_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1036:1: ( ( ( ( rule__Service__Group_3_10_1_0__0 ) ) ( ( rule__Service__Group_3_10_1_0__0 )* ) ) | ( ( ( rule__Service__Group_3_10_1_1__0 ) ) ( ( rule__Service__Group_3_10_1_1__0 )* ) ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==50) ) {
                int LA10_1 = input.LA(2);

                if ( ((LA10_1>=RULE_STRING && LA10_1<=RULE_ID)) ) {
                    alt10=1;
                }
                else if ( (LA10_1==58||LA10_1==60||(LA10_1>=67 && LA10_1<=69)) ) {
                    alt10=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 1, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalDockerCompose.g:1037:2: ( ( ( rule__Service__Group_3_10_1_0__0 ) ) ( ( rule__Service__Group_3_10_1_0__0 )* ) )
                    {
                    // InternalDockerCompose.g:1037:2: ( ( ( rule__Service__Group_3_10_1_0__0 ) ) ( ( rule__Service__Group_3_10_1_0__0 )* ) )
                    // InternalDockerCompose.g:1038:3: ( ( rule__Service__Group_3_10_1_0__0 ) ) ( ( rule__Service__Group_3_10_1_0__0 )* )
                    {
                    // InternalDockerCompose.g:1038:3: ( ( rule__Service__Group_3_10_1_0__0 ) )
                    // InternalDockerCompose.g:1039:4: ( rule__Service__Group_3_10_1_0__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_10_1_0()); 
                    // InternalDockerCompose.g:1040:4: ( rule__Service__Group_3_10_1_0__0 )
                    // InternalDockerCompose.g:1040:5: rule__Service__Group_3_10_1_0__0
                    {
                    pushFollow(FOLLOW_3);
                    rule__Service__Group_3_10_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_10_1_0()); 

                    }

                    // InternalDockerCompose.g:1043:3: ( ( rule__Service__Group_3_10_1_0__0 )* )
                    // InternalDockerCompose.g:1044:4: ( rule__Service__Group_3_10_1_0__0 )*
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_10_1_0()); 
                    // InternalDockerCompose.g:1045:4: ( rule__Service__Group_3_10_1_0__0 )*
                    loop8:
                    do {
                        int alt8=2;
                        int LA8_0 = input.LA(1);

                        if ( (LA8_0==50) ) {
                            alt8=1;
                        }


                        switch (alt8) {
                    	case 1 :
                    	    // InternalDockerCompose.g:1045:5: rule__Service__Group_3_10_1_0__0
                    	    {
                    	    pushFollow(FOLLOW_3);
                    	    rule__Service__Group_3_10_1_0__0();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop8;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getGroup_3_10_1_0()); 

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1050:2: ( ( ( rule__Service__Group_3_10_1_1__0 ) ) ( ( rule__Service__Group_3_10_1_1__0 )* ) )
                    {
                    // InternalDockerCompose.g:1050:2: ( ( ( rule__Service__Group_3_10_1_1__0 ) ) ( ( rule__Service__Group_3_10_1_1__0 )* ) )
                    // InternalDockerCompose.g:1051:3: ( ( rule__Service__Group_3_10_1_1__0 ) ) ( ( rule__Service__Group_3_10_1_1__0 )* )
                    {
                    // InternalDockerCompose.g:1051:3: ( ( rule__Service__Group_3_10_1_1__0 ) )
                    // InternalDockerCompose.g:1052:4: ( rule__Service__Group_3_10_1_1__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_10_1_1()); 
                    // InternalDockerCompose.g:1053:4: ( rule__Service__Group_3_10_1_1__0 )
                    // InternalDockerCompose.g:1053:5: rule__Service__Group_3_10_1_1__0
                    {
                    pushFollow(FOLLOW_3);
                    rule__Service__Group_3_10_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_10_1_1()); 

                    }

                    // InternalDockerCompose.g:1056:3: ( ( rule__Service__Group_3_10_1_1__0 )* )
                    // InternalDockerCompose.g:1057:4: ( rule__Service__Group_3_10_1_1__0 )*
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_10_1_1()); 
                    // InternalDockerCompose.g:1058:4: ( rule__Service__Group_3_10_1_1__0 )*
                    loop9:
                    do {
                        int alt9=2;
                        int LA9_0 = input.LA(1);

                        if ( (LA9_0==50) ) {
                            alt9=1;
                        }


                        switch (alt9) {
                    	case 1 :
                    	    // InternalDockerCompose.g:1058:5: rule__Service__Group_3_10_1_1__0
                    	    {
                    	    pushFollow(FOLLOW_3);
                    	    rule__Service__Group_3_10_1_1__0();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop9;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getGroup_3_10_1_1()); 

                    }


                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Alternatives_3_10_1"


    // $ANTLR start "rule__Service__Alternatives_3_11_1"
    // InternalDockerCompose.g:1067:1: rule__Service__Alternatives_3_11_1 : ( ( ( ( rule__Service__Group_3_11_1_0__0 ) ) ( ( rule__Service__Group_3_11_1_0__0 )* ) ) | ( ( ( rule__Service__Group_3_11_1_1__0 ) ) ( ( rule__Service__Group_3_11_1_1__0 )* ) ) );
    public final void rule__Service__Alternatives_3_11_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1071:1: ( ( ( ( rule__Service__Group_3_11_1_0__0 ) ) ( ( rule__Service__Group_3_11_1_0__0 )* ) ) | ( ( ( rule__Service__Group_3_11_1_1__0 ) ) ( ( rule__Service__Group_3_11_1_1__0 )* ) ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==50) ) {
                int LA13_1 = input.LA(2);

                if ( ((LA13_1>=RULE_STRING && LA13_1<=RULE_ID)) ) {
                    alt13=1;
                }
                else if ( (LA13_1==58||LA13_1==60||(LA13_1>=67 && LA13_1<=69)) ) {
                    alt13=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 13, 1, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalDockerCompose.g:1072:2: ( ( ( rule__Service__Group_3_11_1_0__0 ) ) ( ( rule__Service__Group_3_11_1_0__0 )* ) )
                    {
                    // InternalDockerCompose.g:1072:2: ( ( ( rule__Service__Group_3_11_1_0__0 ) ) ( ( rule__Service__Group_3_11_1_0__0 )* ) )
                    // InternalDockerCompose.g:1073:3: ( ( rule__Service__Group_3_11_1_0__0 ) ) ( ( rule__Service__Group_3_11_1_0__0 )* )
                    {
                    // InternalDockerCompose.g:1073:3: ( ( rule__Service__Group_3_11_1_0__0 ) )
                    // InternalDockerCompose.g:1074:4: ( rule__Service__Group_3_11_1_0__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_11_1_0()); 
                    // InternalDockerCompose.g:1075:4: ( rule__Service__Group_3_11_1_0__0 )
                    // InternalDockerCompose.g:1075:5: rule__Service__Group_3_11_1_0__0
                    {
                    pushFollow(FOLLOW_3);
                    rule__Service__Group_3_11_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_11_1_0()); 

                    }

                    // InternalDockerCompose.g:1078:3: ( ( rule__Service__Group_3_11_1_0__0 )* )
                    // InternalDockerCompose.g:1079:4: ( rule__Service__Group_3_11_1_0__0 )*
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_11_1_0()); 
                    // InternalDockerCompose.g:1080:4: ( rule__Service__Group_3_11_1_0__0 )*
                    loop11:
                    do {
                        int alt11=2;
                        int LA11_0 = input.LA(1);

                        if ( (LA11_0==50) ) {
                            alt11=1;
                        }


                        switch (alt11) {
                    	case 1 :
                    	    // InternalDockerCompose.g:1080:5: rule__Service__Group_3_11_1_0__0
                    	    {
                    	    pushFollow(FOLLOW_3);
                    	    rule__Service__Group_3_11_1_0__0();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop11;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getGroup_3_11_1_0()); 

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1085:2: ( ( ( rule__Service__Group_3_11_1_1__0 ) ) ( ( rule__Service__Group_3_11_1_1__0 )* ) )
                    {
                    // InternalDockerCompose.g:1085:2: ( ( ( rule__Service__Group_3_11_1_1__0 ) ) ( ( rule__Service__Group_3_11_1_1__0 )* ) )
                    // InternalDockerCompose.g:1086:3: ( ( rule__Service__Group_3_11_1_1__0 ) ) ( ( rule__Service__Group_3_11_1_1__0 )* )
                    {
                    // InternalDockerCompose.g:1086:3: ( ( rule__Service__Group_3_11_1_1__0 ) )
                    // InternalDockerCompose.g:1087:4: ( rule__Service__Group_3_11_1_1__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_11_1_1()); 
                    // InternalDockerCompose.g:1088:4: ( rule__Service__Group_3_11_1_1__0 )
                    // InternalDockerCompose.g:1088:5: rule__Service__Group_3_11_1_1__0
                    {
                    pushFollow(FOLLOW_3);
                    rule__Service__Group_3_11_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_11_1_1()); 

                    }

                    // InternalDockerCompose.g:1091:3: ( ( rule__Service__Group_3_11_1_1__0 )* )
                    // InternalDockerCompose.g:1092:4: ( rule__Service__Group_3_11_1_1__0 )*
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_11_1_1()); 
                    // InternalDockerCompose.g:1093:4: ( rule__Service__Group_3_11_1_1__0 )*
                    loop12:
                    do {
                        int alt12=2;
                        int LA12_0 = input.LA(1);

                        if ( (LA12_0==50) ) {
                            alt12=1;
                        }


                        switch (alt12) {
                    	case 1 :
                    	    // InternalDockerCompose.g:1093:5: rule__Service__Group_3_11_1_1__0
                    	    {
                    	    pushFollow(FOLLOW_3);
                    	    rule__Service__Group_3_11_1_1__0();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop12;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getGroup_3_11_1_1()); 

                    }


                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Alternatives_3_11_1"


    // $ANTLR start "rule__Service__Alternatives_3_13_1"
    // InternalDockerCompose.g:1102:1: rule__Service__Alternatives_3_13_1 : ( ( ( ( rule__Service__Group_3_13_1_0__0 ) ) ( ( rule__Service__Group_3_13_1_0__0 )* ) ) | ( ( rule__Service__DnsAssignment_3_13_1_1 ) ) );
    public final void rule__Service__Alternatives_3_13_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1106:1: ( ( ( ( rule__Service__Group_3_13_1_0__0 ) ) ( ( rule__Service__Group_3_13_1_0__0 )* ) ) | ( ( rule__Service__DnsAssignment_3_13_1_1 ) ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==50) ) {
                alt15=1;
            }
            else if ( (LA15_0==RULE_INT) ) {
                alt15=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalDockerCompose.g:1107:2: ( ( ( rule__Service__Group_3_13_1_0__0 ) ) ( ( rule__Service__Group_3_13_1_0__0 )* ) )
                    {
                    // InternalDockerCompose.g:1107:2: ( ( ( rule__Service__Group_3_13_1_0__0 ) ) ( ( rule__Service__Group_3_13_1_0__0 )* ) )
                    // InternalDockerCompose.g:1108:3: ( ( rule__Service__Group_3_13_1_0__0 ) ) ( ( rule__Service__Group_3_13_1_0__0 )* )
                    {
                    // InternalDockerCompose.g:1108:3: ( ( rule__Service__Group_3_13_1_0__0 ) )
                    // InternalDockerCompose.g:1109:4: ( rule__Service__Group_3_13_1_0__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_13_1_0()); 
                    // InternalDockerCompose.g:1110:4: ( rule__Service__Group_3_13_1_0__0 )
                    // InternalDockerCompose.g:1110:5: rule__Service__Group_3_13_1_0__0
                    {
                    pushFollow(FOLLOW_3);
                    rule__Service__Group_3_13_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_13_1_0()); 

                    }

                    // InternalDockerCompose.g:1113:3: ( ( rule__Service__Group_3_13_1_0__0 )* )
                    // InternalDockerCompose.g:1114:4: ( rule__Service__Group_3_13_1_0__0 )*
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_13_1_0()); 
                    // InternalDockerCompose.g:1115:4: ( rule__Service__Group_3_13_1_0__0 )*
                    loop14:
                    do {
                        int alt14=2;
                        int LA14_0 = input.LA(1);

                        if ( (LA14_0==50) ) {
                            alt14=1;
                        }


                        switch (alt14) {
                    	case 1 :
                    	    // InternalDockerCompose.g:1115:5: rule__Service__Group_3_13_1_0__0
                    	    {
                    	    pushFollow(FOLLOW_3);
                    	    rule__Service__Group_3_13_1_0__0();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop14;
                        }
                    } while (true);

                     after(grammarAccess.getServiceAccess().getGroup_3_13_1_0()); 

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1120:2: ( ( rule__Service__DnsAssignment_3_13_1_1 ) )
                    {
                    // InternalDockerCompose.g:1120:2: ( ( rule__Service__DnsAssignment_3_13_1_1 ) )
                    // InternalDockerCompose.g:1121:3: ( rule__Service__DnsAssignment_3_13_1_1 )
                    {
                     before(grammarAccess.getServiceAccess().getDnsAssignment_3_13_1_1()); 
                    // InternalDockerCompose.g:1122:3: ( rule__Service__DnsAssignment_3_13_1_1 )
                    // InternalDockerCompose.g:1122:4: rule__Service__DnsAssignment_3_13_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__DnsAssignment_3_13_1_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getDnsAssignment_3_13_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Alternatives_3_13_1"


    // $ANTLR start "rule__Image__Alternatives"
    // InternalDockerCompose.g:1130:1: rule__Image__Alternatives : ( ( ruleEString ) | ( ( rule__Image__Group_1__0 ) ) );
    public final void rule__Image__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1134:1: ( ( ruleEString ) | ( ( rule__Image__Group_1__0 ) ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==RULE_STRING) ) {
                alt16=1;
            }
            else if ( (LA16_0==RULE_ID) ) {
                int LA16_2 = input.LA(2);

                if ( (LA16_2==40) ) {
                    alt16=2;
                }
                else if ( (LA16_2==EOF||(LA16_2>=RULE_STRING && LA16_2<=RULE_ID)||(LA16_2>=34 && LA16_2<=39)||(LA16_2>=41 && LA16_2<=49)||(LA16_2>=51 && LA16_2<=53)) ) {
                    alt16=1;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 16, 2, input);

                    throw nvae;
                }
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalDockerCompose.g:1135:2: ( ruleEString )
                    {
                    // InternalDockerCompose.g:1135:2: ( ruleEString )
                    // InternalDockerCompose.g:1136:3: ruleEString
                    {
                     before(grammarAccess.getImageAccess().getEStringParserRuleCall_0()); 
                    pushFollow(FOLLOW_2);
                    ruleEString();

                    state._fsp--;

                     after(grammarAccess.getImageAccess().getEStringParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1141:2: ( ( rule__Image__Group_1__0 ) )
                    {
                    // InternalDockerCompose.g:1141:2: ( ( rule__Image__Group_1__0 ) )
                    // InternalDockerCompose.g:1142:3: ( rule__Image__Group_1__0 )
                    {
                     before(grammarAccess.getImageAccess().getGroup_1()); 
                    // InternalDockerCompose.g:1143:3: ( rule__Image__Group_1__0 )
                    // InternalDockerCompose.g:1143:4: rule__Image__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Image__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getImageAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Alternatives"


    // $ANTLR start "rule__Network__Alternatives_3"
    // InternalDockerCompose.g:1151:1: rule__Network__Alternatives_3 : ( ( ( rule__Network__Group_3_0__0 ) ) | ( ( rule__Network__UnorderedGroup_3_1 ) ) );
    public final void rule__Network__Alternatives_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1155:1: ( ( ( rule__Network__Group_3_0__0 ) ) | ( ( rule__Network__UnorderedGroup_3_1 ) ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==70) ) {
                alt17=1;
            }
            else if ( (LA17_0==EOF||(LA17_0>=RULE_STRING && LA17_0<=RULE_ID)||(LA17_0>=34 && LA17_0<=39)||(LA17_0>=72 && LA17_0<=80)) ) {
                alt17=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalDockerCompose.g:1156:2: ( ( rule__Network__Group_3_0__0 ) )
                    {
                    // InternalDockerCompose.g:1156:2: ( ( rule__Network__Group_3_0__0 ) )
                    // InternalDockerCompose.g:1157:3: ( rule__Network__Group_3_0__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_0()); 
                    // InternalDockerCompose.g:1158:3: ( rule__Network__Group_3_0__0 )
                    // InternalDockerCompose.g:1158:4: rule__Network__Group_3_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1162:2: ( ( rule__Network__UnorderedGroup_3_1 ) )
                    {
                    // InternalDockerCompose.g:1162:2: ( ( rule__Network__UnorderedGroup_3_1 ) )
                    // InternalDockerCompose.g:1163:3: ( rule__Network__UnorderedGroup_3_1 )
                    {
                     before(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1()); 
                    // InternalDockerCompose.g:1164:3: ( rule__Network__UnorderedGroup_3_1 )
                    // InternalDockerCompose.g:1164:4: rule__Network__UnorderedGroup_3_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Alternatives_3"


    // $ANTLR start "rule__EString__Alternatives"
    // InternalDockerCompose.g:1172:1: rule__EString__Alternatives : ( ( RULE_STRING ) | ( RULE_ID ) );
    public final void rule__EString__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1176:1: ( ( RULE_STRING ) | ( RULE_ID ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==RULE_STRING) ) {
                alt18=1;
            }
            else if ( (LA18_0==RULE_ID) ) {
                alt18=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalDockerCompose.g:1177:2: ( RULE_STRING )
                    {
                    // InternalDockerCompose.g:1177:2: ( RULE_STRING )
                    // InternalDockerCompose.g:1178:3: RULE_STRING
                    {
                     before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
                    match(input,RULE_STRING,FOLLOW_2); 
                     after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1183:2: ( RULE_ID )
                    {
                    // InternalDockerCompose.g:1183:2: ( RULE_ID )
                    // InternalDockerCompose.g:1184:3: RULE_ID
                    {
                     before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
                    match(input,RULE_ID,FOLLOW_2); 
                     after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EString__Alternatives"


    // $ANTLR start "rule__EBoolean__Alternatives"
    // InternalDockerCompose.g:1193:1: rule__EBoolean__Alternatives : ( ( 'true' ) | ( 'false' ) );
    public final void rule__EBoolean__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1197:1: ( ( 'true' ) | ( 'false' ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==15) ) {
                alt19=1;
            }
            else if ( (LA19_0==16) ) {
                alt19=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalDockerCompose.g:1198:2: ( 'true' )
                    {
                    // InternalDockerCompose.g:1198:2: ( 'true' )
                    // InternalDockerCompose.g:1199:3: 'true'
                    {
                     before(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); 
                    match(input,15,FOLLOW_2); 
                     after(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1204:2: ( 'false' )
                    {
                    // InternalDockerCompose.g:1204:2: ( 'false' )
                    // InternalDockerCompose.g:1205:3: 'false'
                    {
                     before(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); 
                    match(input,16,FOLLOW_2); 
                     after(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EBoolean__Alternatives"


    // $ANTLR start "rule__RestartPolicy__Alternatives"
    // InternalDockerCompose.g:1214:1: rule__RestartPolicy__Alternatives : ( ( ( '\"no\"' ) ) | ( ( 'always' ) ) | ( ( 'on-failure' ) ) | ( ( 'unless-stopped' ) ) );
    public final void rule__RestartPolicy__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1218:1: ( ( ( '\"no\"' ) ) | ( ( 'always' ) ) | ( ( 'on-failure' ) ) | ( ( 'unless-stopped' ) ) )
            int alt20=4;
            switch ( input.LA(1) ) {
            case 17:
                {
                alt20=1;
                }
                break;
            case 18:
                {
                alt20=2;
                }
                break;
            case 19:
                {
                alt20=3;
                }
                break;
            case 20:
                {
                alt20=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }

            switch (alt20) {
                case 1 :
                    // InternalDockerCompose.g:1219:2: ( ( '\"no\"' ) )
                    {
                    // InternalDockerCompose.g:1219:2: ( ( '\"no\"' ) )
                    // InternalDockerCompose.g:1220:3: ( '\"no\"' )
                    {
                     before(grammarAccess.getRestartPolicyAccess().getNoEnumLiteralDeclaration_0()); 
                    // InternalDockerCompose.g:1221:3: ( '\"no\"' )
                    // InternalDockerCompose.g:1221:4: '\"no\"'
                    {
                    match(input,17,FOLLOW_2); 

                    }

                     after(grammarAccess.getRestartPolicyAccess().getNoEnumLiteralDeclaration_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1225:2: ( ( 'always' ) )
                    {
                    // InternalDockerCompose.g:1225:2: ( ( 'always' ) )
                    // InternalDockerCompose.g:1226:3: ( 'always' )
                    {
                     before(grammarAccess.getRestartPolicyAccess().getAlwaysEnumLiteralDeclaration_1()); 
                    // InternalDockerCompose.g:1227:3: ( 'always' )
                    // InternalDockerCompose.g:1227:4: 'always'
                    {
                    match(input,18,FOLLOW_2); 

                    }

                     after(grammarAccess.getRestartPolicyAccess().getAlwaysEnumLiteralDeclaration_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1231:2: ( ( 'on-failure' ) )
                    {
                    // InternalDockerCompose.g:1231:2: ( ( 'on-failure' ) )
                    // InternalDockerCompose.g:1232:3: ( 'on-failure' )
                    {
                     before(grammarAccess.getRestartPolicyAccess().getOnfailureEnumLiteralDeclaration_2()); 
                    // InternalDockerCompose.g:1233:3: ( 'on-failure' )
                    // InternalDockerCompose.g:1233:4: 'on-failure'
                    {
                    match(input,19,FOLLOW_2); 

                    }

                     after(grammarAccess.getRestartPolicyAccess().getOnfailureEnumLiteralDeclaration_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:1237:2: ( ( 'unless-stopped' ) )
                    {
                    // InternalDockerCompose.g:1237:2: ( ( 'unless-stopped' ) )
                    // InternalDockerCompose.g:1238:3: ( 'unless-stopped' )
                    {
                     before(grammarAccess.getRestartPolicyAccess().getUnlessstoppedEnumLiteralDeclaration_3()); 
                    // InternalDockerCompose.g:1239:3: ( 'unless-stopped' )
                    // InternalDockerCompose.g:1239:4: 'unless-stopped'
                    {
                    match(input,20,FOLLOW_2); 

                    }

                     after(grammarAccess.getRestartPolicyAccess().getUnlessstoppedEnumLiteralDeclaration_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RestartPolicy__Alternatives"


    // $ANTLR start "rule__AccessMode__Alternatives"
    // InternalDockerCompose.g:1247:1: rule__AccessMode__Alternatives : ( ( ( 'rw' ) ) | ( ( 'ro' ) ) | ( ( 'z' ) ) );
    public final void rule__AccessMode__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1251:1: ( ( ( 'rw' ) ) | ( ( 'ro' ) ) | ( ( 'z' ) ) )
            int alt21=3;
            switch ( input.LA(1) ) {
            case 21:
                {
                alt21=1;
                }
                break;
            case 22:
                {
                alt21=2;
                }
                break;
            case 23:
                {
                alt21=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }

            switch (alt21) {
                case 1 :
                    // InternalDockerCompose.g:1252:2: ( ( 'rw' ) )
                    {
                    // InternalDockerCompose.g:1252:2: ( ( 'rw' ) )
                    // InternalDockerCompose.g:1253:3: ( 'rw' )
                    {
                     before(grammarAccess.getAccessModeAccess().getRwEnumLiteralDeclaration_0()); 
                    // InternalDockerCompose.g:1254:3: ( 'rw' )
                    // InternalDockerCompose.g:1254:4: 'rw'
                    {
                    match(input,21,FOLLOW_2); 

                    }

                     after(grammarAccess.getAccessModeAccess().getRwEnumLiteralDeclaration_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1258:2: ( ( 'ro' ) )
                    {
                    // InternalDockerCompose.g:1258:2: ( ( 'ro' ) )
                    // InternalDockerCompose.g:1259:3: ( 'ro' )
                    {
                     before(grammarAccess.getAccessModeAccess().getRoEnumLiteralDeclaration_1()); 
                    // InternalDockerCompose.g:1260:3: ( 'ro' )
                    // InternalDockerCompose.g:1260:4: 'ro'
                    {
                    match(input,22,FOLLOW_2); 

                    }

                     after(grammarAccess.getAccessModeAccess().getRoEnumLiteralDeclaration_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1264:2: ( ( 'z' ) )
                    {
                    // InternalDockerCompose.g:1264:2: ( ( 'z' ) )
                    // InternalDockerCompose.g:1265:3: ( 'z' )
                    {
                     before(grammarAccess.getAccessModeAccess().getZEnumLiteralDeclaration_2()); 
                    // InternalDockerCompose.g:1266:3: ( 'z' )
                    // InternalDockerCompose.g:1266:4: 'z'
                    {
                    match(input,23,FOLLOW_2); 

                    }

                     after(grammarAccess.getAccessModeAccess().getZEnumLiteralDeclaration_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AccessMode__Alternatives"


    // $ANTLR start "rule__MountType__Alternatives"
    // InternalDockerCompose.g:1274:1: rule__MountType__Alternatives : ( ( ( 'volume' ) ) | ( ( 'bind' ) ) | ( ( 'tmpfs' ) ) | ( ( 'npipe' ) ) );
    public final void rule__MountType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1278:1: ( ( ( 'volume' ) ) | ( ( 'bind' ) ) | ( ( 'tmpfs' ) ) | ( ( 'npipe' ) ) )
            int alt22=4;
            switch ( input.LA(1) ) {
            case 24:
                {
                alt22=1;
                }
                break;
            case 25:
                {
                alt22=2;
                }
                break;
            case 26:
                {
                alt22=3;
                }
                break;
            case 27:
                {
                alt22=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }

            switch (alt22) {
                case 1 :
                    // InternalDockerCompose.g:1279:2: ( ( 'volume' ) )
                    {
                    // InternalDockerCompose.g:1279:2: ( ( 'volume' ) )
                    // InternalDockerCompose.g:1280:3: ( 'volume' )
                    {
                     before(grammarAccess.getMountTypeAccess().getVolumeEnumLiteralDeclaration_0()); 
                    // InternalDockerCompose.g:1281:3: ( 'volume' )
                    // InternalDockerCompose.g:1281:4: 'volume'
                    {
                    match(input,24,FOLLOW_2); 

                    }

                     after(grammarAccess.getMountTypeAccess().getVolumeEnumLiteralDeclaration_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1285:2: ( ( 'bind' ) )
                    {
                    // InternalDockerCompose.g:1285:2: ( ( 'bind' ) )
                    // InternalDockerCompose.g:1286:3: ( 'bind' )
                    {
                     before(grammarAccess.getMountTypeAccess().getBindEnumLiteralDeclaration_1()); 
                    // InternalDockerCompose.g:1287:3: ( 'bind' )
                    // InternalDockerCompose.g:1287:4: 'bind'
                    {
                    match(input,25,FOLLOW_2); 

                    }

                     after(grammarAccess.getMountTypeAccess().getBindEnumLiteralDeclaration_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1291:2: ( ( 'tmpfs' ) )
                    {
                    // InternalDockerCompose.g:1291:2: ( ( 'tmpfs' ) )
                    // InternalDockerCompose.g:1292:3: ( 'tmpfs' )
                    {
                     before(grammarAccess.getMountTypeAccess().getTmpfsEnumLiteralDeclaration_2()); 
                    // InternalDockerCompose.g:1293:3: ( 'tmpfs' )
                    // InternalDockerCompose.g:1293:4: 'tmpfs'
                    {
                    match(input,26,FOLLOW_2); 

                    }

                     after(grammarAccess.getMountTypeAccess().getTmpfsEnumLiteralDeclaration_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:1297:2: ( ( 'npipe' ) )
                    {
                    // InternalDockerCompose.g:1297:2: ( ( 'npipe' ) )
                    // InternalDockerCompose.g:1298:3: ( 'npipe' )
                    {
                     before(grammarAccess.getMountTypeAccess().getNpipeEnumLiteralDeclaration_3()); 
                    // InternalDockerCompose.g:1299:3: ( 'npipe' )
                    // InternalDockerCompose.g:1299:4: 'npipe'
                    {
                    match(input,27,FOLLOW_2); 

                    }

                     after(grammarAccess.getMountTypeAccess().getNpipeEnumLiteralDeclaration_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MountType__Alternatives"


    // $ANTLR start "rule__PropagationType__Alternatives"
    // InternalDockerCompose.g:1307:1: rule__PropagationType__Alternatives : ( ( ( 'rprivate' ) ) | ( ( 'private' ) ) | ( ( 'rshared' ) ) | ( ( 'shared' ) ) | ( ( 'rslave' ) ) | ( ( 'slave' ) ) );
    public final void rule__PropagationType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1311:1: ( ( ( 'rprivate' ) ) | ( ( 'private' ) ) | ( ( 'rshared' ) ) | ( ( 'shared' ) ) | ( ( 'rslave' ) ) | ( ( 'slave' ) ) )
            int alt23=6;
            switch ( input.LA(1) ) {
            case 28:
                {
                alt23=1;
                }
                break;
            case 29:
                {
                alt23=2;
                }
                break;
            case 30:
                {
                alt23=3;
                }
                break;
            case 31:
                {
                alt23=4;
                }
                break;
            case 32:
                {
                alt23=5;
                }
                break;
            case 33:
                {
                alt23=6;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }

            switch (alt23) {
                case 1 :
                    // InternalDockerCompose.g:1312:2: ( ( 'rprivate' ) )
                    {
                    // InternalDockerCompose.g:1312:2: ( ( 'rprivate' ) )
                    // InternalDockerCompose.g:1313:3: ( 'rprivate' )
                    {
                     before(grammarAccess.getPropagationTypeAccess().getRprivateEnumLiteralDeclaration_0()); 
                    // InternalDockerCompose.g:1314:3: ( 'rprivate' )
                    // InternalDockerCompose.g:1314:4: 'rprivate'
                    {
                    match(input,28,FOLLOW_2); 

                    }

                     after(grammarAccess.getPropagationTypeAccess().getRprivateEnumLiteralDeclaration_0()); 

                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:1318:2: ( ( 'private' ) )
                    {
                    // InternalDockerCompose.g:1318:2: ( ( 'private' ) )
                    // InternalDockerCompose.g:1319:3: ( 'private' )
                    {
                     before(grammarAccess.getPropagationTypeAccess().getPrivateEnumLiteralDeclaration_1()); 
                    // InternalDockerCompose.g:1320:3: ( 'private' )
                    // InternalDockerCompose.g:1320:4: 'private'
                    {
                    match(input,29,FOLLOW_2); 

                    }

                     after(grammarAccess.getPropagationTypeAccess().getPrivateEnumLiteralDeclaration_1()); 

                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:1324:2: ( ( 'rshared' ) )
                    {
                    // InternalDockerCompose.g:1324:2: ( ( 'rshared' ) )
                    // InternalDockerCompose.g:1325:3: ( 'rshared' )
                    {
                     before(grammarAccess.getPropagationTypeAccess().getRsharedEnumLiteralDeclaration_2()); 
                    // InternalDockerCompose.g:1326:3: ( 'rshared' )
                    // InternalDockerCompose.g:1326:4: 'rshared'
                    {
                    match(input,30,FOLLOW_2); 

                    }

                     after(grammarAccess.getPropagationTypeAccess().getRsharedEnumLiteralDeclaration_2()); 

                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:1330:2: ( ( 'shared' ) )
                    {
                    // InternalDockerCompose.g:1330:2: ( ( 'shared' ) )
                    // InternalDockerCompose.g:1331:3: ( 'shared' )
                    {
                     before(grammarAccess.getPropagationTypeAccess().getSharedEnumLiteralDeclaration_3()); 
                    // InternalDockerCompose.g:1332:3: ( 'shared' )
                    // InternalDockerCompose.g:1332:4: 'shared'
                    {
                    match(input,31,FOLLOW_2); 

                    }

                     after(grammarAccess.getPropagationTypeAccess().getSharedEnumLiteralDeclaration_3()); 

                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:1336:2: ( ( 'rslave' ) )
                    {
                    // InternalDockerCompose.g:1336:2: ( ( 'rslave' ) )
                    // InternalDockerCompose.g:1337:3: ( 'rslave' )
                    {
                     before(grammarAccess.getPropagationTypeAccess().getRslaveEnumLiteralDeclaration_4()); 
                    // InternalDockerCompose.g:1338:3: ( 'rslave' )
                    // InternalDockerCompose.g:1338:4: 'rslave'
                    {
                    match(input,32,FOLLOW_2); 

                    }

                     after(grammarAccess.getPropagationTypeAccess().getRslaveEnumLiteralDeclaration_4()); 

                    }


                    }
                    break;
                case 6 :
                    // InternalDockerCompose.g:1342:2: ( ( 'slave' ) )
                    {
                    // InternalDockerCompose.g:1342:2: ( ( 'slave' ) )
                    // InternalDockerCompose.g:1343:3: ( 'slave' )
                    {
                     before(grammarAccess.getPropagationTypeAccess().getSlaveEnumLiteralDeclaration_5()); 
                    // InternalDockerCompose.g:1344:3: ( 'slave' )
                    // InternalDockerCompose.g:1344:4: 'slave'
                    {
                    match(input,33,FOLLOW_2); 

                    }

                     after(grammarAccess.getPropagationTypeAccess().getSlaveEnumLiteralDeclaration_5()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PropagationType__Alternatives"


    // $ANTLR start "rule__DockerCompose__Group_0__0"
    // InternalDockerCompose.g:1352:1: rule__DockerCompose__Group_0__0 : rule__DockerCompose__Group_0__0__Impl rule__DockerCompose__Group_0__1 ;
    public final void rule__DockerCompose__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1356:1: ( rule__DockerCompose__Group_0__0__Impl rule__DockerCompose__Group_0__1 )
            // InternalDockerCompose.g:1357:2: rule__DockerCompose__Group_0__0__Impl rule__DockerCompose__Group_0__1
            {
            pushFollow(FOLLOW_5);
            rule__DockerCompose__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_0__0"


    // $ANTLR start "rule__DockerCompose__Group_0__0__Impl"
    // InternalDockerCompose.g:1364:1: rule__DockerCompose__Group_0__0__Impl : ( 'version:' ) ;
    public final void rule__DockerCompose__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1368:1: ( ( 'version:' ) )
            // InternalDockerCompose.g:1369:1: ( 'version:' )
            {
            // InternalDockerCompose.g:1369:1: ( 'version:' )
            // InternalDockerCompose.g:1370:2: 'version:'
            {
             before(grammarAccess.getDockerComposeAccess().getVersionKeyword_0_0()); 
            match(input,34,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getVersionKeyword_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_0__0__Impl"


    // $ANTLR start "rule__DockerCompose__Group_0__1"
    // InternalDockerCompose.g:1379:1: rule__DockerCompose__Group_0__1 : rule__DockerCompose__Group_0__1__Impl ;
    public final void rule__DockerCompose__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1383:1: ( rule__DockerCompose__Group_0__1__Impl )
            // InternalDockerCompose.g:1384:2: rule__DockerCompose__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_0__1"


    // $ANTLR start "rule__DockerCompose__Group_0__1__Impl"
    // InternalDockerCompose.g:1390:1: rule__DockerCompose__Group_0__1__Impl : ( ( rule__DockerCompose__VersionAssignment_0_1 ) ) ;
    public final void rule__DockerCompose__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1394:1: ( ( ( rule__DockerCompose__VersionAssignment_0_1 ) ) )
            // InternalDockerCompose.g:1395:1: ( ( rule__DockerCompose__VersionAssignment_0_1 ) )
            {
            // InternalDockerCompose.g:1395:1: ( ( rule__DockerCompose__VersionAssignment_0_1 ) )
            // InternalDockerCompose.g:1396:2: ( rule__DockerCompose__VersionAssignment_0_1 )
            {
             before(grammarAccess.getDockerComposeAccess().getVersionAssignment_0_1()); 
            // InternalDockerCompose.g:1397:2: ( rule__DockerCompose__VersionAssignment_0_1 )
            // InternalDockerCompose.g:1397:3: rule__DockerCompose__VersionAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__VersionAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getVersionAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_0__1__Impl"


    // $ANTLR start "rule__DockerCompose__Group_1__0"
    // InternalDockerCompose.g:1406:1: rule__DockerCompose__Group_1__0 : rule__DockerCompose__Group_1__0__Impl rule__DockerCompose__Group_1__1 ;
    public final void rule__DockerCompose__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1410:1: ( rule__DockerCompose__Group_1__0__Impl rule__DockerCompose__Group_1__1 )
            // InternalDockerCompose.g:1411:2: rule__DockerCompose__Group_1__0__Impl rule__DockerCompose__Group_1__1
            {
            pushFollow(FOLLOW_6);
            rule__DockerCompose__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_1__0"


    // $ANTLR start "rule__DockerCompose__Group_1__0__Impl"
    // InternalDockerCompose.g:1418:1: rule__DockerCompose__Group_1__0__Impl : ( 'services:' ) ;
    public final void rule__DockerCompose__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1422:1: ( ( 'services:' ) )
            // InternalDockerCompose.g:1423:1: ( 'services:' )
            {
            // InternalDockerCompose.g:1423:1: ( 'services:' )
            // InternalDockerCompose.g:1424:2: 'services:'
            {
             before(grammarAccess.getDockerComposeAccess().getServicesKeyword_1_0()); 
            match(input,35,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getServicesKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_1__0__Impl"


    // $ANTLR start "rule__DockerCompose__Group_1__1"
    // InternalDockerCompose.g:1433:1: rule__DockerCompose__Group_1__1 : rule__DockerCompose__Group_1__1__Impl ;
    public final void rule__DockerCompose__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1437:1: ( rule__DockerCompose__Group_1__1__Impl )
            // InternalDockerCompose.g:1438:2: rule__DockerCompose__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_1__1"


    // $ANTLR start "rule__DockerCompose__Group_1__1__Impl"
    // InternalDockerCompose.g:1444:1: rule__DockerCompose__Group_1__1__Impl : ( ( ( rule__DockerCompose__ServicesAssignment_1_1 ) ) ( ( rule__DockerCompose__ServicesAssignment_1_1 )* ) ) ;
    public final void rule__DockerCompose__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1448:1: ( ( ( ( rule__DockerCompose__ServicesAssignment_1_1 ) ) ( ( rule__DockerCompose__ServicesAssignment_1_1 )* ) ) )
            // InternalDockerCompose.g:1449:1: ( ( ( rule__DockerCompose__ServicesAssignment_1_1 ) ) ( ( rule__DockerCompose__ServicesAssignment_1_1 )* ) )
            {
            // InternalDockerCompose.g:1449:1: ( ( ( rule__DockerCompose__ServicesAssignment_1_1 ) ) ( ( rule__DockerCompose__ServicesAssignment_1_1 )* ) )
            // InternalDockerCompose.g:1450:2: ( ( rule__DockerCompose__ServicesAssignment_1_1 ) ) ( ( rule__DockerCompose__ServicesAssignment_1_1 )* )
            {
            // InternalDockerCompose.g:1450:2: ( ( rule__DockerCompose__ServicesAssignment_1_1 ) )
            // InternalDockerCompose.g:1451:3: ( rule__DockerCompose__ServicesAssignment_1_1 )
            {
             before(grammarAccess.getDockerComposeAccess().getServicesAssignment_1_1()); 
            // InternalDockerCompose.g:1452:3: ( rule__DockerCompose__ServicesAssignment_1_1 )
            // InternalDockerCompose.g:1452:4: rule__DockerCompose__ServicesAssignment_1_1
            {
            pushFollow(FOLLOW_4);
            rule__DockerCompose__ServicesAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getServicesAssignment_1_1()); 

            }

            // InternalDockerCompose.g:1455:2: ( ( rule__DockerCompose__ServicesAssignment_1_1 )* )
            // InternalDockerCompose.g:1456:3: ( rule__DockerCompose__ServicesAssignment_1_1 )*
            {
             before(grammarAccess.getDockerComposeAccess().getServicesAssignment_1_1()); 
            // InternalDockerCompose.g:1457:3: ( rule__DockerCompose__ServicesAssignment_1_1 )*
            loop24:
            do {
                int alt24=2;
                int LA24_0 = input.LA(1);

                if ( ((LA24_0>=RULE_STRING && LA24_0<=RULE_ID)) ) {
                    alt24=1;
                }


                switch (alt24) {
            	case 1 :
            	    // InternalDockerCompose.g:1457:4: rule__DockerCompose__ServicesAssignment_1_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__DockerCompose__ServicesAssignment_1_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop24;
                }
            } while (true);

             after(grammarAccess.getDockerComposeAccess().getServicesAssignment_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_1__1__Impl"


    // $ANTLR start "rule__DockerCompose__Group_2__0"
    // InternalDockerCompose.g:1467:1: rule__DockerCompose__Group_2__0 : rule__DockerCompose__Group_2__0__Impl rule__DockerCompose__Group_2__1 ;
    public final void rule__DockerCompose__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1471:1: ( rule__DockerCompose__Group_2__0__Impl rule__DockerCompose__Group_2__1 )
            // InternalDockerCompose.g:1472:2: rule__DockerCompose__Group_2__0__Impl rule__DockerCompose__Group_2__1
            {
            pushFollow(FOLLOW_6);
            rule__DockerCompose__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_2__0"


    // $ANTLR start "rule__DockerCompose__Group_2__0__Impl"
    // InternalDockerCompose.g:1479:1: rule__DockerCompose__Group_2__0__Impl : ( 'networks:' ) ;
    public final void rule__DockerCompose__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1483:1: ( ( 'networks:' ) )
            // InternalDockerCompose.g:1484:1: ( 'networks:' )
            {
            // InternalDockerCompose.g:1484:1: ( 'networks:' )
            // InternalDockerCompose.g:1485:2: 'networks:'
            {
             before(grammarAccess.getDockerComposeAccess().getNetworksKeyword_2_0()); 
            match(input,36,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getNetworksKeyword_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_2__0__Impl"


    // $ANTLR start "rule__DockerCompose__Group_2__1"
    // InternalDockerCompose.g:1494:1: rule__DockerCompose__Group_2__1 : rule__DockerCompose__Group_2__1__Impl ;
    public final void rule__DockerCompose__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1498:1: ( rule__DockerCompose__Group_2__1__Impl )
            // InternalDockerCompose.g:1499:2: rule__DockerCompose__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_2__1"


    // $ANTLR start "rule__DockerCompose__Group_2__1__Impl"
    // InternalDockerCompose.g:1505:1: rule__DockerCompose__Group_2__1__Impl : ( ( ( rule__DockerCompose__NetworksAssignment_2_1 ) ) ( ( rule__DockerCompose__NetworksAssignment_2_1 )* ) ) ;
    public final void rule__DockerCompose__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1509:1: ( ( ( ( rule__DockerCompose__NetworksAssignment_2_1 ) ) ( ( rule__DockerCompose__NetworksAssignment_2_1 )* ) ) )
            // InternalDockerCompose.g:1510:1: ( ( ( rule__DockerCompose__NetworksAssignment_2_1 ) ) ( ( rule__DockerCompose__NetworksAssignment_2_1 )* ) )
            {
            // InternalDockerCompose.g:1510:1: ( ( ( rule__DockerCompose__NetworksAssignment_2_1 ) ) ( ( rule__DockerCompose__NetworksAssignment_2_1 )* ) )
            // InternalDockerCompose.g:1511:2: ( ( rule__DockerCompose__NetworksAssignment_2_1 ) ) ( ( rule__DockerCompose__NetworksAssignment_2_1 )* )
            {
            // InternalDockerCompose.g:1511:2: ( ( rule__DockerCompose__NetworksAssignment_2_1 ) )
            // InternalDockerCompose.g:1512:3: ( rule__DockerCompose__NetworksAssignment_2_1 )
            {
             before(grammarAccess.getDockerComposeAccess().getNetworksAssignment_2_1()); 
            // InternalDockerCompose.g:1513:3: ( rule__DockerCompose__NetworksAssignment_2_1 )
            // InternalDockerCompose.g:1513:4: rule__DockerCompose__NetworksAssignment_2_1
            {
            pushFollow(FOLLOW_4);
            rule__DockerCompose__NetworksAssignment_2_1();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getNetworksAssignment_2_1()); 

            }

            // InternalDockerCompose.g:1516:2: ( ( rule__DockerCompose__NetworksAssignment_2_1 )* )
            // InternalDockerCompose.g:1517:3: ( rule__DockerCompose__NetworksAssignment_2_1 )*
            {
             before(grammarAccess.getDockerComposeAccess().getNetworksAssignment_2_1()); 
            // InternalDockerCompose.g:1518:3: ( rule__DockerCompose__NetworksAssignment_2_1 )*
            loop25:
            do {
                int alt25=2;
                int LA25_0 = input.LA(1);

                if ( ((LA25_0>=RULE_STRING && LA25_0<=RULE_ID)) ) {
                    alt25=1;
                }


                switch (alt25) {
            	case 1 :
            	    // InternalDockerCompose.g:1518:4: rule__DockerCompose__NetworksAssignment_2_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__DockerCompose__NetworksAssignment_2_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop25;
                }
            } while (true);

             after(grammarAccess.getDockerComposeAccess().getNetworksAssignment_2_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_2__1__Impl"


    // $ANTLR start "rule__DockerCompose__Group_3__0"
    // InternalDockerCompose.g:1528:1: rule__DockerCompose__Group_3__0 : rule__DockerCompose__Group_3__0__Impl rule__DockerCompose__Group_3__1 ;
    public final void rule__DockerCompose__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1532:1: ( rule__DockerCompose__Group_3__0__Impl rule__DockerCompose__Group_3__1 )
            // InternalDockerCompose.g:1533:2: rule__DockerCompose__Group_3__0__Impl rule__DockerCompose__Group_3__1
            {
            pushFollow(FOLLOW_6);
            rule__DockerCompose__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_3__0"


    // $ANTLR start "rule__DockerCompose__Group_3__0__Impl"
    // InternalDockerCompose.g:1540:1: rule__DockerCompose__Group_3__0__Impl : ( 'volumes:' ) ;
    public final void rule__DockerCompose__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1544:1: ( ( 'volumes:' ) )
            // InternalDockerCompose.g:1545:1: ( 'volumes:' )
            {
            // InternalDockerCompose.g:1545:1: ( 'volumes:' )
            // InternalDockerCompose.g:1546:2: 'volumes:'
            {
             before(grammarAccess.getDockerComposeAccess().getVolumesKeyword_3_0()); 
            match(input,37,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getVolumesKeyword_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_3__0__Impl"


    // $ANTLR start "rule__DockerCompose__Group_3__1"
    // InternalDockerCompose.g:1555:1: rule__DockerCompose__Group_3__1 : rule__DockerCompose__Group_3__1__Impl ;
    public final void rule__DockerCompose__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1559:1: ( rule__DockerCompose__Group_3__1__Impl )
            // InternalDockerCompose.g:1560:2: rule__DockerCompose__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_3__1"


    // $ANTLR start "rule__DockerCompose__Group_3__1__Impl"
    // InternalDockerCompose.g:1566:1: rule__DockerCompose__Group_3__1__Impl : ( ( ( rule__DockerCompose__VolumesAssignment_3_1 ) ) ( ( rule__DockerCompose__VolumesAssignment_3_1 )* ) ) ;
    public final void rule__DockerCompose__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1570:1: ( ( ( ( rule__DockerCompose__VolumesAssignment_3_1 ) ) ( ( rule__DockerCompose__VolumesAssignment_3_1 )* ) ) )
            // InternalDockerCompose.g:1571:1: ( ( ( rule__DockerCompose__VolumesAssignment_3_1 ) ) ( ( rule__DockerCompose__VolumesAssignment_3_1 )* ) )
            {
            // InternalDockerCompose.g:1571:1: ( ( ( rule__DockerCompose__VolumesAssignment_3_1 ) ) ( ( rule__DockerCompose__VolumesAssignment_3_1 )* ) )
            // InternalDockerCompose.g:1572:2: ( ( rule__DockerCompose__VolumesAssignment_3_1 ) ) ( ( rule__DockerCompose__VolumesAssignment_3_1 )* )
            {
            // InternalDockerCompose.g:1572:2: ( ( rule__DockerCompose__VolumesAssignment_3_1 ) )
            // InternalDockerCompose.g:1573:3: ( rule__DockerCompose__VolumesAssignment_3_1 )
            {
             before(grammarAccess.getDockerComposeAccess().getVolumesAssignment_3_1()); 
            // InternalDockerCompose.g:1574:3: ( rule__DockerCompose__VolumesAssignment_3_1 )
            // InternalDockerCompose.g:1574:4: rule__DockerCompose__VolumesAssignment_3_1
            {
            pushFollow(FOLLOW_4);
            rule__DockerCompose__VolumesAssignment_3_1();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getVolumesAssignment_3_1()); 

            }

            // InternalDockerCompose.g:1577:2: ( ( rule__DockerCompose__VolumesAssignment_3_1 )* )
            // InternalDockerCompose.g:1578:3: ( rule__DockerCompose__VolumesAssignment_3_1 )*
            {
             before(grammarAccess.getDockerComposeAccess().getVolumesAssignment_3_1()); 
            // InternalDockerCompose.g:1579:3: ( rule__DockerCompose__VolumesAssignment_3_1 )*
            loop26:
            do {
                int alt26=2;
                int LA26_0 = input.LA(1);

                if ( ((LA26_0>=RULE_STRING && LA26_0<=RULE_ID)) ) {
                    alt26=1;
                }


                switch (alt26) {
            	case 1 :
            	    // InternalDockerCompose.g:1579:4: rule__DockerCompose__VolumesAssignment_3_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__DockerCompose__VolumesAssignment_3_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop26;
                }
            } while (true);

             after(grammarAccess.getDockerComposeAccess().getVolumesAssignment_3_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_3__1__Impl"


    // $ANTLR start "rule__DockerCompose__Group_4__0"
    // InternalDockerCompose.g:1589:1: rule__DockerCompose__Group_4__0 : rule__DockerCompose__Group_4__0__Impl rule__DockerCompose__Group_4__1 ;
    public final void rule__DockerCompose__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1593:1: ( rule__DockerCompose__Group_4__0__Impl rule__DockerCompose__Group_4__1 )
            // InternalDockerCompose.g:1594:2: rule__DockerCompose__Group_4__0__Impl rule__DockerCompose__Group_4__1
            {
            pushFollow(FOLLOW_6);
            rule__DockerCompose__Group_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_4__0"


    // $ANTLR start "rule__DockerCompose__Group_4__0__Impl"
    // InternalDockerCompose.g:1601:1: rule__DockerCompose__Group_4__0__Impl : ( 'configs:' ) ;
    public final void rule__DockerCompose__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1605:1: ( ( 'configs:' ) )
            // InternalDockerCompose.g:1606:1: ( 'configs:' )
            {
            // InternalDockerCompose.g:1606:1: ( 'configs:' )
            // InternalDockerCompose.g:1607:2: 'configs:'
            {
             before(grammarAccess.getDockerComposeAccess().getConfigsKeyword_4_0()); 
            match(input,38,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getConfigsKeyword_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_4__0__Impl"


    // $ANTLR start "rule__DockerCompose__Group_4__1"
    // InternalDockerCompose.g:1616:1: rule__DockerCompose__Group_4__1 : rule__DockerCompose__Group_4__1__Impl ;
    public final void rule__DockerCompose__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1620:1: ( rule__DockerCompose__Group_4__1__Impl )
            // InternalDockerCompose.g:1621:2: rule__DockerCompose__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_4__1"


    // $ANTLR start "rule__DockerCompose__Group_4__1__Impl"
    // InternalDockerCompose.g:1627:1: rule__DockerCompose__Group_4__1__Impl : ( ( ( rule__DockerCompose__ConfigsAssignment_4_1 ) ) ( ( rule__DockerCompose__ConfigsAssignment_4_1 )* ) ) ;
    public final void rule__DockerCompose__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1631:1: ( ( ( ( rule__DockerCompose__ConfigsAssignment_4_1 ) ) ( ( rule__DockerCompose__ConfigsAssignment_4_1 )* ) ) )
            // InternalDockerCompose.g:1632:1: ( ( ( rule__DockerCompose__ConfigsAssignment_4_1 ) ) ( ( rule__DockerCompose__ConfigsAssignment_4_1 )* ) )
            {
            // InternalDockerCompose.g:1632:1: ( ( ( rule__DockerCompose__ConfigsAssignment_4_1 ) ) ( ( rule__DockerCompose__ConfigsAssignment_4_1 )* ) )
            // InternalDockerCompose.g:1633:2: ( ( rule__DockerCompose__ConfigsAssignment_4_1 ) ) ( ( rule__DockerCompose__ConfigsAssignment_4_1 )* )
            {
            // InternalDockerCompose.g:1633:2: ( ( rule__DockerCompose__ConfigsAssignment_4_1 ) )
            // InternalDockerCompose.g:1634:3: ( rule__DockerCompose__ConfigsAssignment_4_1 )
            {
             before(grammarAccess.getDockerComposeAccess().getConfigsAssignment_4_1()); 
            // InternalDockerCompose.g:1635:3: ( rule__DockerCompose__ConfigsAssignment_4_1 )
            // InternalDockerCompose.g:1635:4: rule__DockerCompose__ConfigsAssignment_4_1
            {
            pushFollow(FOLLOW_4);
            rule__DockerCompose__ConfigsAssignment_4_1();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getConfigsAssignment_4_1()); 

            }

            // InternalDockerCompose.g:1638:2: ( ( rule__DockerCompose__ConfigsAssignment_4_1 )* )
            // InternalDockerCompose.g:1639:3: ( rule__DockerCompose__ConfigsAssignment_4_1 )*
            {
             before(grammarAccess.getDockerComposeAccess().getConfigsAssignment_4_1()); 
            // InternalDockerCompose.g:1640:3: ( rule__DockerCompose__ConfigsAssignment_4_1 )*
            loop27:
            do {
                int alt27=2;
                int LA27_0 = input.LA(1);

                if ( ((LA27_0>=RULE_STRING && LA27_0<=RULE_ID)) ) {
                    alt27=1;
                }


                switch (alt27) {
            	case 1 :
            	    // InternalDockerCompose.g:1640:4: rule__DockerCompose__ConfigsAssignment_4_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__DockerCompose__ConfigsAssignment_4_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);

             after(grammarAccess.getDockerComposeAccess().getConfigsAssignment_4_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_4__1__Impl"


    // $ANTLR start "rule__DockerCompose__Group_5__0"
    // InternalDockerCompose.g:1650:1: rule__DockerCompose__Group_5__0 : rule__DockerCompose__Group_5__0__Impl rule__DockerCompose__Group_5__1 ;
    public final void rule__DockerCompose__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1654:1: ( rule__DockerCompose__Group_5__0__Impl rule__DockerCompose__Group_5__1 )
            // InternalDockerCompose.g:1655:2: rule__DockerCompose__Group_5__0__Impl rule__DockerCompose__Group_5__1
            {
            pushFollow(FOLLOW_6);
            rule__DockerCompose__Group_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_5__0"


    // $ANTLR start "rule__DockerCompose__Group_5__0__Impl"
    // InternalDockerCompose.g:1662:1: rule__DockerCompose__Group_5__0__Impl : ( 'secrets:' ) ;
    public final void rule__DockerCompose__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1666:1: ( ( 'secrets:' ) )
            // InternalDockerCompose.g:1667:1: ( 'secrets:' )
            {
            // InternalDockerCompose.g:1667:1: ( 'secrets:' )
            // InternalDockerCompose.g:1668:2: 'secrets:'
            {
             before(grammarAccess.getDockerComposeAccess().getSecretsKeyword_5_0()); 
            match(input,39,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getSecretsKeyword_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_5__0__Impl"


    // $ANTLR start "rule__DockerCompose__Group_5__1"
    // InternalDockerCompose.g:1677:1: rule__DockerCompose__Group_5__1 : rule__DockerCompose__Group_5__1__Impl ;
    public final void rule__DockerCompose__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1681:1: ( rule__DockerCompose__Group_5__1__Impl )
            // InternalDockerCompose.g:1682:2: rule__DockerCompose__Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__Group_5__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_5__1"


    // $ANTLR start "rule__DockerCompose__Group_5__1__Impl"
    // InternalDockerCompose.g:1688:1: rule__DockerCompose__Group_5__1__Impl : ( ( ( rule__DockerCompose__SecretsAssignment_5_1 ) ) ( ( rule__DockerCompose__SecretsAssignment_5_1 )* ) ) ;
    public final void rule__DockerCompose__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1692:1: ( ( ( ( rule__DockerCompose__SecretsAssignment_5_1 ) ) ( ( rule__DockerCompose__SecretsAssignment_5_1 )* ) ) )
            // InternalDockerCompose.g:1693:1: ( ( ( rule__DockerCompose__SecretsAssignment_5_1 ) ) ( ( rule__DockerCompose__SecretsAssignment_5_1 )* ) )
            {
            // InternalDockerCompose.g:1693:1: ( ( ( rule__DockerCompose__SecretsAssignment_5_1 ) ) ( ( rule__DockerCompose__SecretsAssignment_5_1 )* ) )
            // InternalDockerCompose.g:1694:2: ( ( rule__DockerCompose__SecretsAssignment_5_1 ) ) ( ( rule__DockerCompose__SecretsAssignment_5_1 )* )
            {
            // InternalDockerCompose.g:1694:2: ( ( rule__DockerCompose__SecretsAssignment_5_1 ) )
            // InternalDockerCompose.g:1695:3: ( rule__DockerCompose__SecretsAssignment_5_1 )
            {
             before(grammarAccess.getDockerComposeAccess().getSecretsAssignment_5_1()); 
            // InternalDockerCompose.g:1696:3: ( rule__DockerCompose__SecretsAssignment_5_1 )
            // InternalDockerCompose.g:1696:4: rule__DockerCompose__SecretsAssignment_5_1
            {
            pushFollow(FOLLOW_4);
            rule__DockerCompose__SecretsAssignment_5_1();

            state._fsp--;


            }

             after(grammarAccess.getDockerComposeAccess().getSecretsAssignment_5_1()); 

            }

            // InternalDockerCompose.g:1699:2: ( ( rule__DockerCompose__SecretsAssignment_5_1 )* )
            // InternalDockerCompose.g:1700:3: ( rule__DockerCompose__SecretsAssignment_5_1 )*
            {
             before(grammarAccess.getDockerComposeAccess().getSecretsAssignment_5_1()); 
            // InternalDockerCompose.g:1701:3: ( rule__DockerCompose__SecretsAssignment_5_1 )*
            loop28:
            do {
                int alt28=2;
                int LA28_0 = input.LA(1);

                if ( ((LA28_0>=RULE_STRING && LA28_0<=RULE_ID)) ) {
                    alt28=1;
                }


                switch (alt28) {
            	case 1 :
            	    // InternalDockerCompose.g:1701:4: rule__DockerCompose__SecretsAssignment_5_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__DockerCompose__SecretsAssignment_5_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop28;
                }
            } while (true);

             after(grammarAccess.getDockerComposeAccess().getSecretsAssignment_5_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__Group_5__1__Impl"


    // $ANTLR start "rule__Service__Group__0"
    // InternalDockerCompose.g:1711:1: rule__Service__Group__0 : rule__Service__Group__0__Impl rule__Service__Group__1 ;
    public final void rule__Service__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1715:1: ( rule__Service__Group__0__Impl rule__Service__Group__1 )
            // InternalDockerCompose.g:1716:2: rule__Service__Group__0__Impl rule__Service__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__Service__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__0"


    // $ANTLR start "rule__Service__Group__0__Impl"
    // InternalDockerCompose.g:1723:1: rule__Service__Group__0__Impl : ( () ) ;
    public final void rule__Service__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1727:1: ( ( () ) )
            // InternalDockerCompose.g:1728:1: ( () )
            {
            // InternalDockerCompose.g:1728:1: ( () )
            // InternalDockerCompose.g:1729:2: ()
            {
             before(grammarAccess.getServiceAccess().getServiceAction_0()); 
            // InternalDockerCompose.g:1730:2: ()
            // InternalDockerCompose.g:1730:3: 
            {
            }

             after(grammarAccess.getServiceAccess().getServiceAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__0__Impl"


    // $ANTLR start "rule__Service__Group__1"
    // InternalDockerCompose.g:1738:1: rule__Service__Group__1 : rule__Service__Group__1__Impl rule__Service__Group__2 ;
    public final void rule__Service__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1742:1: ( rule__Service__Group__1__Impl rule__Service__Group__2 )
            // InternalDockerCompose.g:1743:2: rule__Service__Group__1__Impl rule__Service__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__Service__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__1"


    // $ANTLR start "rule__Service__Group__1__Impl"
    // InternalDockerCompose.g:1750:1: rule__Service__Group__1__Impl : ( ( rule__Service__NameAssignment_1 ) ) ;
    public final void rule__Service__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1754:1: ( ( ( rule__Service__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:1755:1: ( ( rule__Service__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:1755:1: ( ( rule__Service__NameAssignment_1 ) )
            // InternalDockerCompose.g:1756:2: ( rule__Service__NameAssignment_1 )
            {
             before(grammarAccess.getServiceAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:1757:2: ( rule__Service__NameAssignment_1 )
            // InternalDockerCompose.g:1757:3: rule__Service__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__1__Impl"


    // $ANTLR start "rule__Service__Group__2"
    // InternalDockerCompose.g:1765:1: rule__Service__Group__2 : rule__Service__Group__2__Impl rule__Service__Group__3 ;
    public final void rule__Service__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1769:1: ( rule__Service__Group__2__Impl rule__Service__Group__3 )
            // InternalDockerCompose.g:1770:2: rule__Service__Group__2__Impl rule__Service__Group__3
            {
            pushFollow(FOLLOW_8);
            rule__Service__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__2"


    // $ANTLR start "rule__Service__Group__2__Impl"
    // InternalDockerCompose.g:1777:1: rule__Service__Group__2__Impl : ( ':' ) ;
    public final void rule__Service__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1781:1: ( ( ':' ) )
            // InternalDockerCompose.g:1782:1: ( ':' )
            {
            // InternalDockerCompose.g:1782:1: ( ':' )
            // InternalDockerCompose.g:1783:2: ':'
            {
             before(grammarAccess.getServiceAccess().getColonKeyword_2()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__2__Impl"


    // $ANTLR start "rule__Service__Group__3"
    // InternalDockerCompose.g:1792:1: rule__Service__Group__3 : rule__Service__Group__3__Impl ;
    public final void rule__Service__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1796:1: ( rule__Service__Group__3__Impl )
            // InternalDockerCompose.g:1797:2: rule__Service__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__3"


    // $ANTLR start "rule__Service__Group__3__Impl"
    // InternalDockerCompose.g:1803:1: rule__Service__Group__3__Impl : ( ( rule__Service__UnorderedGroup_3 ) ) ;
    public final void rule__Service__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1807:1: ( ( ( rule__Service__UnorderedGroup_3 ) ) )
            // InternalDockerCompose.g:1808:1: ( ( rule__Service__UnorderedGroup_3 ) )
            {
            // InternalDockerCompose.g:1808:1: ( ( rule__Service__UnorderedGroup_3 ) )
            // InternalDockerCompose.g:1809:2: ( rule__Service__UnorderedGroup_3 )
            {
             before(grammarAccess.getServiceAccess().getUnorderedGroup_3()); 
            // InternalDockerCompose.g:1810:2: ( rule__Service__UnorderedGroup_3 )
            // InternalDockerCompose.g:1810:3: rule__Service__UnorderedGroup_3
            {
            pushFollow(FOLLOW_2);
            rule__Service__UnorderedGroup_3();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getUnorderedGroup_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group__3__Impl"


    // $ANTLR start "rule__Service__Group_3_0_0__0"
    // InternalDockerCompose.g:1819:1: rule__Service__Group_3_0_0__0 : rule__Service__Group_3_0_0__0__Impl rule__Service__Group_3_0_0__1 ;
    public final void rule__Service__Group_3_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1823:1: ( rule__Service__Group_3_0_0__0__Impl rule__Service__Group_3_0_0__1 )
            // InternalDockerCompose.g:1824:2: rule__Service__Group_3_0_0__0__Impl rule__Service__Group_3_0_0__1
            {
            pushFollow(FOLLOW_9);
            rule__Service__Group_3_0_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_0_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0_0__0"


    // $ANTLR start "rule__Service__Group_3_0_0__0__Impl"
    // InternalDockerCompose.g:1831:1: rule__Service__Group_3_0_0__0__Impl : ( 'build:' ) ;
    public final void rule__Service__Group_3_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1835:1: ( ( 'build:' ) )
            // InternalDockerCompose.g:1836:1: ( 'build:' )
            {
            // InternalDockerCompose.g:1836:1: ( 'build:' )
            // InternalDockerCompose.g:1837:2: 'build:'
            {
             before(grammarAccess.getServiceAccess().getBuildKeyword_3_0_0_0()); 
            match(input,41,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getBuildKeyword_3_0_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0_0__0__Impl"


    // $ANTLR start "rule__Service__Group_3_0_0__1"
    // InternalDockerCompose.g:1846:1: rule__Service__Group_3_0_0__1 : rule__Service__Group_3_0_0__1__Impl ;
    public final void rule__Service__Group_3_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1850:1: ( rule__Service__Group_3_0_0__1__Impl )
            // InternalDockerCompose.g:1851:2: rule__Service__Group_3_0_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_0_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0_0__1"


    // $ANTLR start "rule__Service__Group_3_0_0__1__Impl"
    // InternalDockerCompose.g:1857:1: rule__Service__Group_3_0_0__1__Impl : ( ( rule__Service__BuildAssignment_3_0_0_1 ) ) ;
    public final void rule__Service__Group_3_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1861:1: ( ( ( rule__Service__BuildAssignment_3_0_0_1 ) ) )
            // InternalDockerCompose.g:1862:1: ( ( rule__Service__BuildAssignment_3_0_0_1 ) )
            {
            // InternalDockerCompose.g:1862:1: ( ( rule__Service__BuildAssignment_3_0_0_1 ) )
            // InternalDockerCompose.g:1863:2: ( rule__Service__BuildAssignment_3_0_0_1 )
            {
             before(grammarAccess.getServiceAccess().getBuildAssignment_3_0_0_1()); 
            // InternalDockerCompose.g:1864:2: ( rule__Service__BuildAssignment_3_0_0_1 )
            // InternalDockerCompose.g:1864:3: rule__Service__BuildAssignment_3_0_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__BuildAssignment_3_0_0_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getBuildAssignment_3_0_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0_0__1__Impl"


    // $ANTLR start "rule__Service__Group_3_0_1__0"
    // InternalDockerCompose.g:1873:1: rule__Service__Group_3_0_1__0 : rule__Service__Group_3_0_1__0__Impl rule__Service__Group_3_0_1__1 ;
    public final void rule__Service__Group_3_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1877:1: ( rule__Service__Group_3_0_1__0__Impl rule__Service__Group_3_0_1__1 )
            // InternalDockerCompose.g:1878:2: rule__Service__Group_3_0_1__0__Impl rule__Service__Group_3_0_1__1
            {
            pushFollow(FOLLOW_6);
            rule__Service__Group_3_0_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_0_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0_1__0"


    // $ANTLR start "rule__Service__Group_3_0_1__0__Impl"
    // InternalDockerCompose.g:1885:1: rule__Service__Group_3_0_1__0__Impl : ( 'image:' ) ;
    public final void rule__Service__Group_3_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1889:1: ( ( 'image:' ) )
            // InternalDockerCompose.g:1890:1: ( 'image:' )
            {
            // InternalDockerCompose.g:1890:1: ( 'image:' )
            // InternalDockerCompose.g:1891:2: 'image:'
            {
             before(grammarAccess.getServiceAccess().getImageKeyword_3_0_1_0()); 
            match(input,42,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getImageKeyword_3_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_0_1__1"
    // InternalDockerCompose.g:1900:1: rule__Service__Group_3_0_1__1 : rule__Service__Group_3_0_1__1__Impl ;
    public final void rule__Service__Group_3_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1904:1: ( rule__Service__Group_3_0_1__1__Impl )
            // InternalDockerCompose.g:1905:2: rule__Service__Group_3_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_0_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0_1__1"


    // $ANTLR start "rule__Service__Group_3_0_1__1__Impl"
    // InternalDockerCompose.g:1911:1: rule__Service__Group_3_0_1__1__Impl : ( ( rule__Service__ImageAssignment_3_0_1_1 ) ) ;
    public final void rule__Service__Group_3_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1915:1: ( ( ( rule__Service__ImageAssignment_3_0_1_1 ) ) )
            // InternalDockerCompose.g:1916:1: ( ( rule__Service__ImageAssignment_3_0_1_1 ) )
            {
            // InternalDockerCompose.g:1916:1: ( ( rule__Service__ImageAssignment_3_0_1_1 ) )
            // InternalDockerCompose.g:1917:2: ( rule__Service__ImageAssignment_3_0_1_1 )
            {
             before(grammarAccess.getServiceAccess().getImageAssignment_3_0_1_1()); 
            // InternalDockerCompose.g:1918:2: ( rule__Service__ImageAssignment_3_0_1_1 )
            // InternalDockerCompose.g:1918:3: rule__Service__ImageAssignment_3_0_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__ImageAssignment_3_0_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getImageAssignment_3_0_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_0_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_1__0"
    // InternalDockerCompose.g:1927:1: rule__Service__Group_3_1__0 : rule__Service__Group_3_1__0__Impl rule__Service__Group_3_1__1 ;
    public final void rule__Service__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1931:1: ( rule__Service__Group_3_1__0__Impl rule__Service__Group_3_1__1 )
            // InternalDockerCompose.g:1932:2: rule__Service__Group_3_1__0__Impl rule__Service__Group_3_1__1
            {
            pushFollow(FOLLOW_10);
            rule__Service__Group_3_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_1__0"


    // $ANTLR start "rule__Service__Group_3_1__0__Impl"
    // InternalDockerCompose.g:1939:1: rule__Service__Group_3_1__0__Impl : ( 'cpu_count:' ) ;
    public final void rule__Service__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1943:1: ( ( 'cpu_count:' ) )
            // InternalDockerCompose.g:1944:1: ( 'cpu_count:' )
            {
            // InternalDockerCompose.g:1944:1: ( 'cpu_count:' )
            // InternalDockerCompose.g:1945:2: 'cpu_count:'
            {
             before(grammarAccess.getServiceAccess().getCpu_countKeyword_3_1_0()); 
            match(input,43,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getCpu_countKeyword_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_1__1"
    // InternalDockerCompose.g:1954:1: rule__Service__Group_3_1__1 : rule__Service__Group_3_1__1__Impl ;
    public final void rule__Service__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1958:1: ( rule__Service__Group_3_1__1__Impl )
            // InternalDockerCompose.g:1959:2: rule__Service__Group_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_1__1"


    // $ANTLR start "rule__Service__Group_3_1__1__Impl"
    // InternalDockerCompose.g:1965:1: rule__Service__Group_3_1__1__Impl : ( ( rule__Service__Cpu_countAssignment_3_1_1 ) ) ;
    public final void rule__Service__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1969:1: ( ( ( rule__Service__Cpu_countAssignment_3_1_1 ) ) )
            // InternalDockerCompose.g:1970:1: ( ( rule__Service__Cpu_countAssignment_3_1_1 ) )
            {
            // InternalDockerCompose.g:1970:1: ( ( rule__Service__Cpu_countAssignment_3_1_1 ) )
            // InternalDockerCompose.g:1971:2: ( rule__Service__Cpu_countAssignment_3_1_1 )
            {
             before(grammarAccess.getServiceAccess().getCpu_countAssignment_3_1_1()); 
            // InternalDockerCompose.g:1972:2: ( rule__Service__Cpu_countAssignment_3_1_1 )
            // InternalDockerCompose.g:1972:3: rule__Service__Cpu_countAssignment_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Cpu_countAssignment_3_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getCpu_countAssignment_3_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_2__0"
    // InternalDockerCompose.g:1981:1: rule__Service__Group_3_2__0 : rule__Service__Group_3_2__0__Impl rule__Service__Group_3_2__1 ;
    public final void rule__Service__Group_3_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1985:1: ( rule__Service__Group_3_2__0__Impl rule__Service__Group_3_2__1 )
            // InternalDockerCompose.g:1986:2: rule__Service__Group_3_2__0__Impl rule__Service__Group_3_2__1
            {
            pushFollow(FOLLOW_6);
            rule__Service__Group_3_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_2__0"


    // $ANTLR start "rule__Service__Group_3_2__0__Impl"
    // InternalDockerCompose.g:1993:1: rule__Service__Group_3_2__0__Impl : ( 'command:' ) ;
    public final void rule__Service__Group_3_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:1997:1: ( ( 'command:' ) )
            // InternalDockerCompose.g:1998:1: ( 'command:' )
            {
            // InternalDockerCompose.g:1998:1: ( 'command:' )
            // InternalDockerCompose.g:1999:2: 'command:'
            {
             before(grammarAccess.getServiceAccess().getCommandKeyword_3_2_0()); 
            match(input,44,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getCommandKeyword_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_2__0__Impl"


    // $ANTLR start "rule__Service__Group_3_2__1"
    // InternalDockerCompose.g:2008:1: rule__Service__Group_3_2__1 : rule__Service__Group_3_2__1__Impl ;
    public final void rule__Service__Group_3_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2012:1: ( rule__Service__Group_3_2__1__Impl )
            // InternalDockerCompose.g:2013:2: rule__Service__Group_3_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_2__1"


    // $ANTLR start "rule__Service__Group_3_2__1__Impl"
    // InternalDockerCompose.g:2019:1: rule__Service__Group_3_2__1__Impl : ( ( rule__Service__CommandAssignment_3_2_1 ) ) ;
    public final void rule__Service__Group_3_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2023:1: ( ( ( rule__Service__CommandAssignment_3_2_1 ) ) )
            // InternalDockerCompose.g:2024:1: ( ( rule__Service__CommandAssignment_3_2_1 ) )
            {
            // InternalDockerCompose.g:2024:1: ( ( rule__Service__CommandAssignment_3_2_1 ) )
            // InternalDockerCompose.g:2025:2: ( rule__Service__CommandAssignment_3_2_1 )
            {
             before(grammarAccess.getServiceAccess().getCommandAssignment_3_2_1()); 
            // InternalDockerCompose.g:2026:2: ( rule__Service__CommandAssignment_3_2_1 )
            // InternalDockerCompose.g:2026:3: rule__Service__CommandAssignment_3_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__CommandAssignment_3_2_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getCommandAssignment_3_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_2__1__Impl"


    // $ANTLR start "rule__Service__Group_3_3__0"
    // InternalDockerCompose.g:2035:1: rule__Service__Group_3_3__0 : rule__Service__Group_3_3__0__Impl rule__Service__Group_3_3__1 ;
    public final void rule__Service__Group_3_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2039:1: ( rule__Service__Group_3_3__0__Impl rule__Service__Group_3_3__1 )
            // InternalDockerCompose.g:2040:2: rule__Service__Group_3_3__0__Impl rule__Service__Group_3_3__1
            {
            pushFollow(FOLLOW_6);
            rule__Service__Group_3_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_3__0"


    // $ANTLR start "rule__Service__Group_3_3__0__Impl"
    // InternalDockerCompose.g:2047:1: rule__Service__Group_3_3__0__Impl : ( 'container_name:' ) ;
    public final void rule__Service__Group_3_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2051:1: ( ( 'container_name:' ) )
            // InternalDockerCompose.g:2052:1: ( 'container_name:' )
            {
            // InternalDockerCompose.g:2052:1: ( 'container_name:' )
            // InternalDockerCompose.g:2053:2: 'container_name:'
            {
             before(grammarAccess.getServiceAccess().getContainer_nameKeyword_3_3_0()); 
            match(input,45,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getContainer_nameKeyword_3_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_3__0__Impl"


    // $ANTLR start "rule__Service__Group_3_3__1"
    // InternalDockerCompose.g:2062:1: rule__Service__Group_3_3__1 : rule__Service__Group_3_3__1__Impl ;
    public final void rule__Service__Group_3_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2066:1: ( rule__Service__Group_3_3__1__Impl )
            // InternalDockerCompose.g:2067:2: rule__Service__Group_3_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_3__1"


    // $ANTLR start "rule__Service__Group_3_3__1__Impl"
    // InternalDockerCompose.g:2073:1: rule__Service__Group_3_3__1__Impl : ( ( rule__Service__Container_nameAssignment_3_3_1 ) ) ;
    public final void rule__Service__Group_3_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2077:1: ( ( ( rule__Service__Container_nameAssignment_3_3_1 ) ) )
            // InternalDockerCompose.g:2078:1: ( ( rule__Service__Container_nameAssignment_3_3_1 ) )
            {
            // InternalDockerCompose.g:2078:1: ( ( rule__Service__Container_nameAssignment_3_3_1 ) )
            // InternalDockerCompose.g:2079:2: ( rule__Service__Container_nameAssignment_3_3_1 )
            {
             before(grammarAccess.getServiceAccess().getContainer_nameAssignment_3_3_1()); 
            // InternalDockerCompose.g:2080:2: ( rule__Service__Container_nameAssignment_3_3_1 )
            // InternalDockerCompose.g:2080:3: rule__Service__Container_nameAssignment_3_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Container_nameAssignment_3_3_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getContainer_nameAssignment_3_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_3__1__Impl"


    // $ANTLR start "rule__Service__Group_3_4__0"
    // InternalDockerCompose.g:2089:1: rule__Service__Group_3_4__0 : rule__Service__Group_3_4__0__Impl rule__Service__Group_3_4__1 ;
    public final void rule__Service__Group_3_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2093:1: ( rule__Service__Group_3_4__0__Impl rule__Service__Group_3_4__1 )
            // InternalDockerCompose.g:2094:2: rule__Service__Group_3_4__0__Impl rule__Service__Group_3_4__1
            {
            pushFollow(FOLLOW_11);
            rule__Service__Group_3_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_4__0"


    // $ANTLR start "rule__Service__Group_3_4__0__Impl"
    // InternalDockerCompose.g:2101:1: rule__Service__Group_3_4__0__Impl : ( 'restart:' ) ;
    public final void rule__Service__Group_3_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2105:1: ( ( 'restart:' ) )
            // InternalDockerCompose.g:2106:1: ( 'restart:' )
            {
            // InternalDockerCompose.g:2106:1: ( 'restart:' )
            // InternalDockerCompose.g:2107:2: 'restart:'
            {
             before(grammarAccess.getServiceAccess().getRestartKeyword_3_4_0()); 
            match(input,46,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getRestartKeyword_3_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_4__0__Impl"


    // $ANTLR start "rule__Service__Group_3_4__1"
    // InternalDockerCompose.g:2116:1: rule__Service__Group_3_4__1 : rule__Service__Group_3_4__1__Impl ;
    public final void rule__Service__Group_3_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2120:1: ( rule__Service__Group_3_4__1__Impl )
            // InternalDockerCompose.g:2121:2: rule__Service__Group_3_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_4__1"


    // $ANTLR start "rule__Service__Group_3_4__1__Impl"
    // InternalDockerCompose.g:2127:1: rule__Service__Group_3_4__1__Impl : ( ( rule__Service__RestartAssignment_3_4_1 ) ) ;
    public final void rule__Service__Group_3_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2131:1: ( ( ( rule__Service__RestartAssignment_3_4_1 ) ) )
            // InternalDockerCompose.g:2132:1: ( ( rule__Service__RestartAssignment_3_4_1 ) )
            {
            // InternalDockerCompose.g:2132:1: ( ( rule__Service__RestartAssignment_3_4_1 ) )
            // InternalDockerCompose.g:2133:2: ( rule__Service__RestartAssignment_3_4_1 )
            {
             before(grammarAccess.getServiceAccess().getRestartAssignment_3_4_1()); 
            // InternalDockerCompose.g:2134:2: ( rule__Service__RestartAssignment_3_4_1 )
            // InternalDockerCompose.g:2134:3: rule__Service__RestartAssignment_3_4_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__RestartAssignment_3_4_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getRestartAssignment_3_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_4__1__Impl"


    // $ANTLR start "rule__Service__Group_3_5__0"
    // InternalDockerCompose.g:2143:1: rule__Service__Group_3_5__0 : rule__Service__Group_3_5__0__Impl rule__Service__Group_3_5__1 ;
    public final void rule__Service__Group_3_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2147:1: ( rule__Service__Group_3_5__0__Impl rule__Service__Group_3_5__1 )
            // InternalDockerCompose.g:2148:2: rule__Service__Group_3_5__0__Impl rule__Service__Group_3_5__1
            {
            pushFollow(FOLLOW_12);
            rule__Service__Group_3_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_5__0"


    // $ANTLR start "rule__Service__Group_3_5__0__Impl"
    // InternalDockerCompose.g:2155:1: rule__Service__Group_3_5__0__Impl : ( 'init:' ) ;
    public final void rule__Service__Group_3_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2159:1: ( ( 'init:' ) )
            // InternalDockerCompose.g:2160:1: ( 'init:' )
            {
            // InternalDockerCompose.g:2160:1: ( 'init:' )
            // InternalDockerCompose.g:2161:2: 'init:'
            {
             before(grammarAccess.getServiceAccess().getInitKeyword_3_5_0()); 
            match(input,47,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getInitKeyword_3_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_5__0__Impl"


    // $ANTLR start "rule__Service__Group_3_5__1"
    // InternalDockerCompose.g:2170:1: rule__Service__Group_3_5__1 : rule__Service__Group_3_5__1__Impl ;
    public final void rule__Service__Group_3_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2174:1: ( rule__Service__Group_3_5__1__Impl )
            // InternalDockerCompose.g:2175:2: rule__Service__Group_3_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_5__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_5__1"


    // $ANTLR start "rule__Service__Group_3_5__1__Impl"
    // InternalDockerCompose.g:2181:1: rule__Service__Group_3_5__1__Impl : ( ( rule__Service__InitAssignment_3_5_1 ) ) ;
    public final void rule__Service__Group_3_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2185:1: ( ( ( rule__Service__InitAssignment_3_5_1 ) ) )
            // InternalDockerCompose.g:2186:1: ( ( rule__Service__InitAssignment_3_5_1 ) )
            {
            // InternalDockerCompose.g:2186:1: ( ( rule__Service__InitAssignment_3_5_1 ) )
            // InternalDockerCompose.g:2187:2: ( rule__Service__InitAssignment_3_5_1 )
            {
             before(grammarAccess.getServiceAccess().getInitAssignment_3_5_1()); 
            // InternalDockerCompose.g:2188:2: ( rule__Service__InitAssignment_3_5_1 )
            // InternalDockerCompose.g:2188:3: rule__Service__InitAssignment_3_5_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__InitAssignment_3_5_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getInitAssignment_3_5_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_5__1__Impl"


    // $ANTLR start "rule__Service__Group_3_6__0"
    // InternalDockerCompose.g:2197:1: rule__Service__Group_3_6__0 : rule__Service__Group_3_6__0__Impl rule__Service__Group_3_6__1 ;
    public final void rule__Service__Group_3_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2201:1: ( rule__Service__Group_3_6__0__Impl rule__Service__Group_3_6__1 )
            // InternalDockerCompose.g:2202:2: rule__Service__Group_3_6__0__Impl rule__Service__Group_3_6__1
            {
            pushFollow(FOLLOW_12);
            rule__Service__Group_3_6__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_6__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_6__0"


    // $ANTLR start "rule__Service__Group_3_6__0__Impl"
    // InternalDockerCompose.g:2209:1: rule__Service__Group_3_6__0__Impl : ( 'read_only:' ) ;
    public final void rule__Service__Group_3_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2213:1: ( ( 'read_only:' ) )
            // InternalDockerCompose.g:2214:1: ( 'read_only:' )
            {
            // InternalDockerCompose.g:2214:1: ( 'read_only:' )
            // InternalDockerCompose.g:2215:2: 'read_only:'
            {
             before(grammarAccess.getServiceAccess().getRead_onlyKeyword_3_6_0()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getRead_onlyKeyword_3_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_6__0__Impl"


    // $ANTLR start "rule__Service__Group_3_6__1"
    // InternalDockerCompose.g:2224:1: rule__Service__Group_3_6__1 : rule__Service__Group_3_6__1__Impl ;
    public final void rule__Service__Group_3_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2228:1: ( rule__Service__Group_3_6__1__Impl )
            // InternalDockerCompose.g:2229:2: rule__Service__Group_3_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_6__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_6__1"


    // $ANTLR start "rule__Service__Group_3_6__1__Impl"
    // InternalDockerCompose.g:2235:1: rule__Service__Group_3_6__1__Impl : ( ( rule__Service__Read_onlyAssignment_3_6_1 ) ) ;
    public final void rule__Service__Group_3_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2239:1: ( ( ( rule__Service__Read_onlyAssignment_3_6_1 ) ) )
            // InternalDockerCompose.g:2240:1: ( ( rule__Service__Read_onlyAssignment_3_6_1 ) )
            {
            // InternalDockerCompose.g:2240:1: ( ( rule__Service__Read_onlyAssignment_3_6_1 ) )
            // InternalDockerCompose.g:2241:2: ( rule__Service__Read_onlyAssignment_3_6_1 )
            {
             before(grammarAccess.getServiceAccess().getRead_onlyAssignment_3_6_1()); 
            // InternalDockerCompose.g:2242:2: ( rule__Service__Read_onlyAssignment_3_6_1 )
            // InternalDockerCompose.g:2242:3: rule__Service__Read_onlyAssignment_3_6_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Read_onlyAssignment_3_6_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getRead_onlyAssignment_3_6_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_6__1__Impl"


    // $ANTLR start "rule__Service__Group_3_7__0"
    // InternalDockerCompose.g:2251:1: rule__Service__Group_3_7__0 : rule__Service__Group_3_7__0__Impl rule__Service__Group_3_7__1 ;
    public final void rule__Service__Group_3_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2255:1: ( rule__Service__Group_3_7__0__Impl rule__Service__Group_3_7__1 )
            // InternalDockerCompose.g:2256:2: rule__Service__Group_3_7__0__Impl rule__Service__Group_3_7__1
            {
            pushFollow(FOLLOW_13);
            rule__Service__Group_3_7__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_7__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7__0"


    // $ANTLR start "rule__Service__Group_3_7__0__Impl"
    // InternalDockerCompose.g:2263:1: rule__Service__Group_3_7__0__Impl : ( 'depends_on:' ) ;
    public final void rule__Service__Group_3_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2267:1: ( ( 'depends_on:' ) )
            // InternalDockerCompose.g:2268:1: ( 'depends_on:' )
            {
            // InternalDockerCompose.g:2268:1: ( 'depends_on:' )
            // InternalDockerCompose.g:2269:2: 'depends_on:'
            {
             before(grammarAccess.getServiceAccess().getDepends_onKeyword_3_7_0()); 
            match(input,49,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getDepends_onKeyword_3_7_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7__0__Impl"


    // $ANTLR start "rule__Service__Group_3_7__1"
    // InternalDockerCompose.g:2278:1: rule__Service__Group_3_7__1 : rule__Service__Group_3_7__1__Impl ;
    public final void rule__Service__Group_3_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2282:1: ( rule__Service__Group_3_7__1__Impl )
            // InternalDockerCompose.g:2283:2: rule__Service__Group_3_7__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_7__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7__1"


    // $ANTLR start "rule__Service__Group_3_7__1__Impl"
    // InternalDockerCompose.g:2289:1: rule__Service__Group_3_7__1__Impl : ( ( ( rule__Service__Group_3_7_1__0 ) ) ( ( rule__Service__Group_3_7_1__0 )* ) ) ;
    public final void rule__Service__Group_3_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2293:1: ( ( ( ( rule__Service__Group_3_7_1__0 ) ) ( ( rule__Service__Group_3_7_1__0 )* ) ) )
            // InternalDockerCompose.g:2294:1: ( ( ( rule__Service__Group_3_7_1__0 ) ) ( ( rule__Service__Group_3_7_1__0 )* ) )
            {
            // InternalDockerCompose.g:2294:1: ( ( ( rule__Service__Group_3_7_1__0 ) ) ( ( rule__Service__Group_3_7_1__0 )* ) )
            // InternalDockerCompose.g:2295:2: ( ( rule__Service__Group_3_7_1__0 ) ) ( ( rule__Service__Group_3_7_1__0 )* )
            {
            // InternalDockerCompose.g:2295:2: ( ( rule__Service__Group_3_7_1__0 ) )
            // InternalDockerCompose.g:2296:3: ( rule__Service__Group_3_7_1__0 )
            {
             before(grammarAccess.getServiceAccess().getGroup_3_7_1()); 
            // InternalDockerCompose.g:2297:3: ( rule__Service__Group_3_7_1__0 )
            // InternalDockerCompose.g:2297:4: rule__Service__Group_3_7_1__0
            {
            pushFollow(FOLLOW_3);
            rule__Service__Group_3_7_1__0();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getGroup_3_7_1()); 

            }

            // InternalDockerCompose.g:2300:2: ( ( rule__Service__Group_3_7_1__0 )* )
            // InternalDockerCompose.g:2301:3: ( rule__Service__Group_3_7_1__0 )*
            {
             before(grammarAccess.getServiceAccess().getGroup_3_7_1()); 
            // InternalDockerCompose.g:2302:3: ( rule__Service__Group_3_7_1__0 )*
            loop29:
            do {
                int alt29=2;
                int LA29_0 = input.LA(1);

                if ( (LA29_0==50) ) {
                    alt29=1;
                }


                switch (alt29) {
            	case 1 :
            	    // InternalDockerCompose.g:2302:4: rule__Service__Group_3_7_1__0
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Service__Group_3_7_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop29;
                }
            } while (true);

             after(grammarAccess.getServiceAccess().getGroup_3_7_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7__1__Impl"


    // $ANTLR start "rule__Service__Group_3_7_1__0"
    // InternalDockerCompose.g:2312:1: rule__Service__Group_3_7_1__0 : rule__Service__Group_3_7_1__0__Impl rule__Service__Group_3_7_1__1 ;
    public final void rule__Service__Group_3_7_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2316:1: ( rule__Service__Group_3_7_1__0__Impl rule__Service__Group_3_7_1__1 )
            // InternalDockerCompose.g:2317:2: rule__Service__Group_3_7_1__0__Impl rule__Service__Group_3_7_1__1
            {
            pushFollow(FOLLOW_6);
            rule__Service__Group_3_7_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_7_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7_1__0"


    // $ANTLR start "rule__Service__Group_3_7_1__0__Impl"
    // InternalDockerCompose.g:2324:1: rule__Service__Group_3_7_1__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_7_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2328:1: ( ( '-' ) )
            // InternalDockerCompose.g:2329:1: ( '-' )
            {
            // InternalDockerCompose.g:2329:1: ( '-' )
            // InternalDockerCompose.g:2330:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_7_1_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_7_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_7_1__1"
    // InternalDockerCompose.g:2339:1: rule__Service__Group_3_7_1__1 : rule__Service__Group_3_7_1__1__Impl ;
    public final void rule__Service__Group_3_7_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2343:1: ( rule__Service__Group_3_7_1__1__Impl )
            // InternalDockerCompose.g:2344:2: rule__Service__Group_3_7_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_7_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7_1__1"


    // $ANTLR start "rule__Service__Group_3_7_1__1__Impl"
    // InternalDockerCompose.g:2350:1: rule__Service__Group_3_7_1__1__Impl : ( ( rule__Service__Depends_onAssignment_3_7_1_1 ) ) ;
    public final void rule__Service__Group_3_7_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2354:1: ( ( ( rule__Service__Depends_onAssignment_3_7_1_1 ) ) )
            // InternalDockerCompose.g:2355:1: ( ( rule__Service__Depends_onAssignment_3_7_1_1 ) )
            {
            // InternalDockerCompose.g:2355:1: ( ( rule__Service__Depends_onAssignment_3_7_1_1 ) )
            // InternalDockerCompose.g:2356:2: ( rule__Service__Depends_onAssignment_3_7_1_1 )
            {
             before(grammarAccess.getServiceAccess().getDepends_onAssignment_3_7_1_1()); 
            // InternalDockerCompose.g:2357:2: ( rule__Service__Depends_onAssignment_3_7_1_1 )
            // InternalDockerCompose.g:2357:3: rule__Service__Depends_onAssignment_3_7_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Depends_onAssignment_3_7_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getDepends_onAssignment_3_7_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_7_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_8__0"
    // InternalDockerCompose.g:2366:1: rule__Service__Group_3_8__0 : rule__Service__Group_3_8__0__Impl rule__Service__Group_3_8__1 ;
    public final void rule__Service__Group_3_8__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2370:1: ( rule__Service__Group_3_8__0__Impl rule__Service__Group_3_8__1 )
            // InternalDockerCompose.g:2371:2: rule__Service__Group_3_8__0__Impl rule__Service__Group_3_8__1
            {
            pushFollow(FOLLOW_14);
            rule__Service__Group_3_8__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_8__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_8__0"


    // $ANTLR start "rule__Service__Group_3_8__0__Impl"
    // InternalDockerCompose.g:2378:1: rule__Service__Group_3_8__0__Impl : ( 'networks:' ) ;
    public final void rule__Service__Group_3_8__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2382:1: ( ( 'networks:' ) )
            // InternalDockerCompose.g:2383:1: ( 'networks:' )
            {
            // InternalDockerCompose.g:2383:1: ( 'networks:' )
            // InternalDockerCompose.g:2384:2: 'networks:'
            {
             before(grammarAccess.getServiceAccess().getNetworksKeyword_3_8_0()); 
            match(input,36,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getNetworksKeyword_3_8_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_8__0__Impl"


    // $ANTLR start "rule__Service__Group_3_8__1"
    // InternalDockerCompose.g:2393:1: rule__Service__Group_3_8__1 : rule__Service__Group_3_8__1__Impl ;
    public final void rule__Service__Group_3_8__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2397:1: ( rule__Service__Group_3_8__1__Impl )
            // InternalDockerCompose.g:2398:2: rule__Service__Group_3_8__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_8__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_8__1"


    // $ANTLR start "rule__Service__Group_3_8__1__Impl"
    // InternalDockerCompose.g:2404:1: rule__Service__Group_3_8__1__Impl : ( ( rule__Service__Alternatives_3_8_1 ) ) ;
    public final void rule__Service__Group_3_8__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2408:1: ( ( ( rule__Service__Alternatives_3_8_1 ) ) )
            // InternalDockerCompose.g:2409:1: ( ( rule__Service__Alternatives_3_8_1 ) )
            {
            // InternalDockerCompose.g:2409:1: ( ( rule__Service__Alternatives_3_8_1 ) )
            // InternalDockerCompose.g:2410:2: ( rule__Service__Alternatives_3_8_1 )
            {
             before(grammarAccess.getServiceAccess().getAlternatives_3_8_1()); 
            // InternalDockerCompose.g:2411:2: ( rule__Service__Alternatives_3_8_1 )
            // InternalDockerCompose.g:2411:3: rule__Service__Alternatives_3_8_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Alternatives_3_8_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getAlternatives_3_8_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_8__1__Impl"


    // $ANTLR start "rule__Service__Group_3_9__0"
    // InternalDockerCompose.g:2420:1: rule__Service__Group_3_9__0 : rule__Service__Group_3_9__0__Impl rule__Service__Group_3_9__1 ;
    public final void rule__Service__Group_3_9__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2424:1: ( rule__Service__Group_3_9__0__Impl rule__Service__Group_3_9__1 )
            // InternalDockerCompose.g:2425:2: rule__Service__Group_3_9__0__Impl rule__Service__Group_3_9__1
            {
            pushFollow(FOLLOW_13);
            rule__Service__Group_3_9__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_9__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_9__0"


    // $ANTLR start "rule__Service__Group_3_9__0__Impl"
    // InternalDockerCompose.g:2432:1: rule__Service__Group_3_9__0__Impl : ( 'volumes:' ) ;
    public final void rule__Service__Group_3_9__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2436:1: ( ( 'volumes:' ) )
            // InternalDockerCompose.g:2437:1: ( 'volumes:' )
            {
            // InternalDockerCompose.g:2437:1: ( 'volumes:' )
            // InternalDockerCompose.g:2438:2: 'volumes:'
            {
             before(grammarAccess.getServiceAccess().getVolumesKeyword_3_9_0()); 
            match(input,37,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getVolumesKeyword_3_9_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_9__0__Impl"


    // $ANTLR start "rule__Service__Group_3_9__1"
    // InternalDockerCompose.g:2447:1: rule__Service__Group_3_9__1 : rule__Service__Group_3_9__1__Impl ;
    public final void rule__Service__Group_3_9__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2451:1: ( rule__Service__Group_3_9__1__Impl )
            // InternalDockerCompose.g:2452:2: rule__Service__Group_3_9__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_9__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_9__1"


    // $ANTLR start "rule__Service__Group_3_9__1__Impl"
    // InternalDockerCompose.g:2458:1: rule__Service__Group_3_9__1__Impl : ( ( rule__Service__Alternatives_3_9_1 ) ) ;
    public final void rule__Service__Group_3_9__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2462:1: ( ( ( rule__Service__Alternatives_3_9_1 ) ) )
            // InternalDockerCompose.g:2463:1: ( ( rule__Service__Alternatives_3_9_1 ) )
            {
            // InternalDockerCompose.g:2463:1: ( ( rule__Service__Alternatives_3_9_1 ) )
            // InternalDockerCompose.g:2464:2: ( rule__Service__Alternatives_3_9_1 )
            {
             before(grammarAccess.getServiceAccess().getAlternatives_3_9_1()); 
            // InternalDockerCompose.g:2465:2: ( rule__Service__Alternatives_3_9_1 )
            // InternalDockerCompose.g:2465:3: rule__Service__Alternatives_3_9_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Alternatives_3_9_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getAlternatives_3_9_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_9__1__Impl"


    // $ANTLR start "rule__Service__Group_3_9_1_0__0"
    // InternalDockerCompose.g:2474:1: rule__Service__Group_3_9_1_0__0 : rule__Service__Group_3_9_1_0__0__Impl rule__Service__Group_3_9_1_0__1 ;
    public final void rule__Service__Group_3_9_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2478:1: ( rule__Service__Group_3_9_1_0__0__Impl rule__Service__Group_3_9_1_0__1 )
            // InternalDockerCompose.g:2479:2: rule__Service__Group_3_9_1_0__0__Impl rule__Service__Group_3_9_1_0__1
            {
            pushFollow(FOLLOW_6);
            rule__Service__Group_3_9_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_9_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_9_1_0__0"


    // $ANTLR start "rule__Service__Group_3_9_1_0__0__Impl"
    // InternalDockerCompose.g:2486:1: rule__Service__Group_3_9_1_0__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_9_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2490:1: ( ( '-' ) )
            // InternalDockerCompose.g:2491:1: ( '-' )
            {
            // InternalDockerCompose.g:2491:1: ( '-' )
            // InternalDockerCompose.g:2492:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_9_1_0_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_9_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_9_1_0__0__Impl"


    // $ANTLR start "rule__Service__Group_3_9_1_0__1"
    // InternalDockerCompose.g:2501:1: rule__Service__Group_3_9_1_0__1 : rule__Service__Group_3_9_1_0__1__Impl ;
    public final void rule__Service__Group_3_9_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2505:1: ( rule__Service__Group_3_9_1_0__1__Impl )
            // InternalDockerCompose.g:2506:2: rule__Service__Group_3_9_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_9_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_9_1_0__1"


    // $ANTLR start "rule__Service__Group_3_9_1_0__1__Impl"
    // InternalDockerCompose.g:2512:1: rule__Service__Group_3_9_1_0__1__Impl : ( ( rule__Service__VolumesAssignment_3_9_1_0_1 ) ) ;
    public final void rule__Service__Group_3_9_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2516:1: ( ( ( rule__Service__VolumesAssignment_3_9_1_0_1 ) ) )
            // InternalDockerCompose.g:2517:1: ( ( rule__Service__VolumesAssignment_3_9_1_0_1 ) )
            {
            // InternalDockerCompose.g:2517:1: ( ( rule__Service__VolumesAssignment_3_9_1_0_1 ) )
            // InternalDockerCompose.g:2518:2: ( rule__Service__VolumesAssignment_3_9_1_0_1 )
            {
             before(grammarAccess.getServiceAccess().getVolumesAssignment_3_9_1_0_1()); 
            // InternalDockerCompose.g:2519:2: ( rule__Service__VolumesAssignment_3_9_1_0_1 )
            // InternalDockerCompose.g:2519:3: rule__Service__VolumesAssignment_3_9_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__VolumesAssignment_3_9_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getVolumesAssignment_3_9_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_9_1_0__1__Impl"


    // $ANTLR start "rule__Service__Group_3_9_1_1__0"
    // InternalDockerCompose.g:2528:1: rule__Service__Group_3_9_1_1__0 : rule__Service__Group_3_9_1_1__0__Impl rule__Service__Group_3_9_1_1__1 ;
    public final void rule__Service__Group_3_9_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2532:1: ( rule__Service__Group_3_9_1_1__0__Impl rule__Service__Group_3_9_1_1__1 )
            // InternalDockerCompose.g:2533:2: rule__Service__Group_3_9_1_1__0__Impl rule__Service__Group_3_9_1_1__1
            {
            pushFollow(FOLLOW_15);
            rule__Service__Group_3_9_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_9_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_9_1_1__0"


    // $ANTLR start "rule__Service__Group_3_9_1_1__0__Impl"
    // InternalDockerCompose.g:2540:1: rule__Service__Group_3_9_1_1__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_9_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2544:1: ( ( '-' ) )
            // InternalDockerCompose.g:2545:1: ( '-' )
            {
            // InternalDockerCompose.g:2545:1: ( '-' )
            // InternalDockerCompose.g:2546:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_9_1_1_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_9_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_9_1_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_9_1_1__1"
    // InternalDockerCompose.g:2555:1: rule__Service__Group_3_9_1_1__1 : rule__Service__Group_3_9_1_1__1__Impl ;
    public final void rule__Service__Group_3_9_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2559:1: ( rule__Service__Group_3_9_1_1__1__Impl )
            // InternalDockerCompose.g:2560:2: rule__Service__Group_3_9_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_9_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_9_1_1__1"


    // $ANTLR start "rule__Service__Group_3_9_1_1__1__Impl"
    // InternalDockerCompose.g:2566:1: rule__Service__Group_3_9_1_1__1__Impl : ( ( rule__Service__VolumesAssignment_3_9_1_1_1 ) ) ;
    public final void rule__Service__Group_3_9_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2570:1: ( ( ( rule__Service__VolumesAssignment_3_9_1_1_1 ) ) )
            // InternalDockerCompose.g:2571:1: ( ( rule__Service__VolumesAssignment_3_9_1_1_1 ) )
            {
            // InternalDockerCompose.g:2571:1: ( ( rule__Service__VolumesAssignment_3_9_1_1_1 ) )
            // InternalDockerCompose.g:2572:2: ( rule__Service__VolumesAssignment_3_9_1_1_1 )
            {
             before(grammarAccess.getServiceAccess().getVolumesAssignment_3_9_1_1_1()); 
            // InternalDockerCompose.g:2573:2: ( rule__Service__VolumesAssignment_3_9_1_1_1 )
            // InternalDockerCompose.g:2573:3: rule__Service__VolumesAssignment_3_9_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__VolumesAssignment_3_9_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getVolumesAssignment_3_9_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_9_1_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_10__0"
    // InternalDockerCompose.g:2582:1: rule__Service__Group_3_10__0 : rule__Service__Group_3_10__0__Impl rule__Service__Group_3_10__1 ;
    public final void rule__Service__Group_3_10__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2586:1: ( rule__Service__Group_3_10__0__Impl rule__Service__Group_3_10__1 )
            // InternalDockerCompose.g:2587:2: rule__Service__Group_3_10__0__Impl rule__Service__Group_3_10__1
            {
            pushFollow(FOLLOW_13);
            rule__Service__Group_3_10__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_10__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10__0"


    // $ANTLR start "rule__Service__Group_3_10__0__Impl"
    // InternalDockerCompose.g:2594:1: rule__Service__Group_3_10__0__Impl : ( 'configs:' ) ;
    public final void rule__Service__Group_3_10__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2598:1: ( ( 'configs:' ) )
            // InternalDockerCompose.g:2599:1: ( 'configs:' )
            {
            // InternalDockerCompose.g:2599:1: ( 'configs:' )
            // InternalDockerCompose.g:2600:2: 'configs:'
            {
             before(grammarAccess.getServiceAccess().getConfigsKeyword_3_10_0()); 
            match(input,38,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getConfigsKeyword_3_10_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10__0__Impl"


    // $ANTLR start "rule__Service__Group_3_10__1"
    // InternalDockerCompose.g:2609:1: rule__Service__Group_3_10__1 : rule__Service__Group_3_10__1__Impl ;
    public final void rule__Service__Group_3_10__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2613:1: ( rule__Service__Group_3_10__1__Impl )
            // InternalDockerCompose.g:2614:2: rule__Service__Group_3_10__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_10__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10__1"


    // $ANTLR start "rule__Service__Group_3_10__1__Impl"
    // InternalDockerCompose.g:2620:1: rule__Service__Group_3_10__1__Impl : ( ( rule__Service__Alternatives_3_10_1 ) ) ;
    public final void rule__Service__Group_3_10__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2624:1: ( ( ( rule__Service__Alternatives_3_10_1 ) ) )
            // InternalDockerCompose.g:2625:1: ( ( rule__Service__Alternatives_3_10_1 ) )
            {
            // InternalDockerCompose.g:2625:1: ( ( rule__Service__Alternatives_3_10_1 ) )
            // InternalDockerCompose.g:2626:2: ( rule__Service__Alternatives_3_10_1 )
            {
             before(grammarAccess.getServiceAccess().getAlternatives_3_10_1()); 
            // InternalDockerCompose.g:2627:2: ( rule__Service__Alternatives_3_10_1 )
            // InternalDockerCompose.g:2627:3: rule__Service__Alternatives_3_10_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Alternatives_3_10_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getAlternatives_3_10_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10__1__Impl"


    // $ANTLR start "rule__Service__Group_3_10_1_0__0"
    // InternalDockerCompose.g:2636:1: rule__Service__Group_3_10_1_0__0 : rule__Service__Group_3_10_1_0__0__Impl rule__Service__Group_3_10_1_0__1 ;
    public final void rule__Service__Group_3_10_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2640:1: ( rule__Service__Group_3_10_1_0__0__Impl rule__Service__Group_3_10_1_0__1 )
            // InternalDockerCompose.g:2641:2: rule__Service__Group_3_10_1_0__0__Impl rule__Service__Group_3_10_1_0__1
            {
            pushFollow(FOLLOW_6);
            rule__Service__Group_3_10_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_10_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10_1_0__0"


    // $ANTLR start "rule__Service__Group_3_10_1_0__0__Impl"
    // InternalDockerCompose.g:2648:1: rule__Service__Group_3_10_1_0__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_10_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2652:1: ( ( '-' ) )
            // InternalDockerCompose.g:2653:1: ( '-' )
            {
            // InternalDockerCompose.g:2653:1: ( '-' )
            // InternalDockerCompose.g:2654:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_10_1_0_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_10_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10_1_0__0__Impl"


    // $ANTLR start "rule__Service__Group_3_10_1_0__1"
    // InternalDockerCompose.g:2663:1: rule__Service__Group_3_10_1_0__1 : rule__Service__Group_3_10_1_0__1__Impl ;
    public final void rule__Service__Group_3_10_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2667:1: ( rule__Service__Group_3_10_1_0__1__Impl )
            // InternalDockerCompose.g:2668:2: rule__Service__Group_3_10_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_10_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10_1_0__1"


    // $ANTLR start "rule__Service__Group_3_10_1_0__1__Impl"
    // InternalDockerCompose.g:2674:1: rule__Service__Group_3_10_1_0__1__Impl : ( ( rule__Service__ConfigsAssignment_3_10_1_0_1 ) ) ;
    public final void rule__Service__Group_3_10_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2678:1: ( ( ( rule__Service__ConfigsAssignment_3_10_1_0_1 ) ) )
            // InternalDockerCompose.g:2679:1: ( ( rule__Service__ConfigsAssignment_3_10_1_0_1 ) )
            {
            // InternalDockerCompose.g:2679:1: ( ( rule__Service__ConfigsAssignment_3_10_1_0_1 ) )
            // InternalDockerCompose.g:2680:2: ( rule__Service__ConfigsAssignment_3_10_1_0_1 )
            {
             before(grammarAccess.getServiceAccess().getConfigsAssignment_3_10_1_0_1()); 
            // InternalDockerCompose.g:2681:2: ( rule__Service__ConfigsAssignment_3_10_1_0_1 )
            // InternalDockerCompose.g:2681:3: rule__Service__ConfigsAssignment_3_10_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__ConfigsAssignment_3_10_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getConfigsAssignment_3_10_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10_1_0__1__Impl"


    // $ANTLR start "rule__Service__Group_3_10_1_1__0"
    // InternalDockerCompose.g:2690:1: rule__Service__Group_3_10_1_1__0 : rule__Service__Group_3_10_1_1__0__Impl rule__Service__Group_3_10_1_1__1 ;
    public final void rule__Service__Group_3_10_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2694:1: ( rule__Service__Group_3_10_1_1__0__Impl rule__Service__Group_3_10_1_1__1 )
            // InternalDockerCompose.g:2695:2: rule__Service__Group_3_10_1_1__0__Impl rule__Service__Group_3_10_1_1__1
            {
            pushFollow(FOLLOW_16);
            rule__Service__Group_3_10_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_10_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10_1_1__0"


    // $ANTLR start "rule__Service__Group_3_10_1_1__0__Impl"
    // InternalDockerCompose.g:2702:1: rule__Service__Group_3_10_1_1__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_10_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2706:1: ( ( '-' ) )
            // InternalDockerCompose.g:2707:1: ( '-' )
            {
            // InternalDockerCompose.g:2707:1: ( '-' )
            // InternalDockerCompose.g:2708:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_10_1_1_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_10_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10_1_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_10_1_1__1"
    // InternalDockerCompose.g:2717:1: rule__Service__Group_3_10_1_1__1 : rule__Service__Group_3_10_1_1__1__Impl ;
    public final void rule__Service__Group_3_10_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2721:1: ( rule__Service__Group_3_10_1_1__1__Impl )
            // InternalDockerCompose.g:2722:2: rule__Service__Group_3_10_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_10_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10_1_1__1"


    // $ANTLR start "rule__Service__Group_3_10_1_1__1__Impl"
    // InternalDockerCompose.g:2728:1: rule__Service__Group_3_10_1_1__1__Impl : ( ( rule__Service__ConfigsAssignment_3_10_1_1_1 ) ) ;
    public final void rule__Service__Group_3_10_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2732:1: ( ( ( rule__Service__ConfigsAssignment_3_10_1_1_1 ) ) )
            // InternalDockerCompose.g:2733:1: ( ( rule__Service__ConfigsAssignment_3_10_1_1_1 ) )
            {
            // InternalDockerCompose.g:2733:1: ( ( rule__Service__ConfigsAssignment_3_10_1_1_1 ) )
            // InternalDockerCompose.g:2734:2: ( rule__Service__ConfigsAssignment_3_10_1_1_1 )
            {
             before(grammarAccess.getServiceAccess().getConfigsAssignment_3_10_1_1_1()); 
            // InternalDockerCompose.g:2735:2: ( rule__Service__ConfigsAssignment_3_10_1_1_1 )
            // InternalDockerCompose.g:2735:3: rule__Service__ConfigsAssignment_3_10_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__ConfigsAssignment_3_10_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getConfigsAssignment_3_10_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_10_1_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_11__0"
    // InternalDockerCompose.g:2744:1: rule__Service__Group_3_11__0 : rule__Service__Group_3_11__0__Impl rule__Service__Group_3_11__1 ;
    public final void rule__Service__Group_3_11__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2748:1: ( rule__Service__Group_3_11__0__Impl rule__Service__Group_3_11__1 )
            // InternalDockerCompose.g:2749:2: rule__Service__Group_3_11__0__Impl rule__Service__Group_3_11__1
            {
            pushFollow(FOLLOW_13);
            rule__Service__Group_3_11__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_11__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11__0"


    // $ANTLR start "rule__Service__Group_3_11__0__Impl"
    // InternalDockerCompose.g:2756:1: rule__Service__Group_3_11__0__Impl : ( 'secrets:' ) ;
    public final void rule__Service__Group_3_11__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2760:1: ( ( 'secrets:' ) )
            // InternalDockerCompose.g:2761:1: ( 'secrets:' )
            {
            // InternalDockerCompose.g:2761:1: ( 'secrets:' )
            // InternalDockerCompose.g:2762:2: 'secrets:'
            {
             before(grammarAccess.getServiceAccess().getSecretsKeyword_3_11_0()); 
            match(input,39,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getSecretsKeyword_3_11_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11__0__Impl"


    // $ANTLR start "rule__Service__Group_3_11__1"
    // InternalDockerCompose.g:2771:1: rule__Service__Group_3_11__1 : rule__Service__Group_3_11__1__Impl ;
    public final void rule__Service__Group_3_11__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2775:1: ( rule__Service__Group_3_11__1__Impl )
            // InternalDockerCompose.g:2776:2: rule__Service__Group_3_11__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_11__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11__1"


    // $ANTLR start "rule__Service__Group_3_11__1__Impl"
    // InternalDockerCompose.g:2782:1: rule__Service__Group_3_11__1__Impl : ( ( rule__Service__Alternatives_3_11_1 ) ) ;
    public final void rule__Service__Group_3_11__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2786:1: ( ( ( rule__Service__Alternatives_3_11_1 ) ) )
            // InternalDockerCompose.g:2787:1: ( ( rule__Service__Alternatives_3_11_1 ) )
            {
            // InternalDockerCompose.g:2787:1: ( ( rule__Service__Alternatives_3_11_1 ) )
            // InternalDockerCompose.g:2788:2: ( rule__Service__Alternatives_3_11_1 )
            {
             before(grammarAccess.getServiceAccess().getAlternatives_3_11_1()); 
            // InternalDockerCompose.g:2789:2: ( rule__Service__Alternatives_3_11_1 )
            // InternalDockerCompose.g:2789:3: rule__Service__Alternatives_3_11_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Alternatives_3_11_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getAlternatives_3_11_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11__1__Impl"


    // $ANTLR start "rule__Service__Group_3_11_1_0__0"
    // InternalDockerCompose.g:2798:1: rule__Service__Group_3_11_1_0__0 : rule__Service__Group_3_11_1_0__0__Impl rule__Service__Group_3_11_1_0__1 ;
    public final void rule__Service__Group_3_11_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2802:1: ( rule__Service__Group_3_11_1_0__0__Impl rule__Service__Group_3_11_1_0__1 )
            // InternalDockerCompose.g:2803:2: rule__Service__Group_3_11_1_0__0__Impl rule__Service__Group_3_11_1_0__1
            {
            pushFollow(FOLLOW_6);
            rule__Service__Group_3_11_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_11_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11_1_0__0"


    // $ANTLR start "rule__Service__Group_3_11_1_0__0__Impl"
    // InternalDockerCompose.g:2810:1: rule__Service__Group_3_11_1_0__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_11_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2814:1: ( ( '-' ) )
            // InternalDockerCompose.g:2815:1: ( '-' )
            {
            // InternalDockerCompose.g:2815:1: ( '-' )
            // InternalDockerCompose.g:2816:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_11_1_0_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_11_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11_1_0__0__Impl"


    // $ANTLR start "rule__Service__Group_3_11_1_0__1"
    // InternalDockerCompose.g:2825:1: rule__Service__Group_3_11_1_0__1 : rule__Service__Group_3_11_1_0__1__Impl ;
    public final void rule__Service__Group_3_11_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2829:1: ( rule__Service__Group_3_11_1_0__1__Impl )
            // InternalDockerCompose.g:2830:2: rule__Service__Group_3_11_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_11_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11_1_0__1"


    // $ANTLR start "rule__Service__Group_3_11_1_0__1__Impl"
    // InternalDockerCompose.g:2836:1: rule__Service__Group_3_11_1_0__1__Impl : ( ( rule__Service__SecretsAssignment_3_11_1_0_1 ) ) ;
    public final void rule__Service__Group_3_11_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2840:1: ( ( ( rule__Service__SecretsAssignment_3_11_1_0_1 ) ) )
            // InternalDockerCompose.g:2841:1: ( ( rule__Service__SecretsAssignment_3_11_1_0_1 ) )
            {
            // InternalDockerCompose.g:2841:1: ( ( rule__Service__SecretsAssignment_3_11_1_0_1 ) )
            // InternalDockerCompose.g:2842:2: ( rule__Service__SecretsAssignment_3_11_1_0_1 )
            {
             before(grammarAccess.getServiceAccess().getSecretsAssignment_3_11_1_0_1()); 
            // InternalDockerCompose.g:2843:2: ( rule__Service__SecretsAssignment_3_11_1_0_1 )
            // InternalDockerCompose.g:2843:3: rule__Service__SecretsAssignment_3_11_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__SecretsAssignment_3_11_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getSecretsAssignment_3_11_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11_1_0__1__Impl"


    // $ANTLR start "rule__Service__Group_3_11_1_1__0"
    // InternalDockerCompose.g:2852:1: rule__Service__Group_3_11_1_1__0 : rule__Service__Group_3_11_1_1__0__Impl rule__Service__Group_3_11_1_1__1 ;
    public final void rule__Service__Group_3_11_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2856:1: ( rule__Service__Group_3_11_1_1__0__Impl rule__Service__Group_3_11_1_1__1 )
            // InternalDockerCompose.g:2857:2: rule__Service__Group_3_11_1_1__0__Impl rule__Service__Group_3_11_1_1__1
            {
            pushFollow(FOLLOW_16);
            rule__Service__Group_3_11_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_11_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11_1_1__0"


    // $ANTLR start "rule__Service__Group_3_11_1_1__0__Impl"
    // InternalDockerCompose.g:2864:1: rule__Service__Group_3_11_1_1__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_11_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2868:1: ( ( '-' ) )
            // InternalDockerCompose.g:2869:1: ( '-' )
            {
            // InternalDockerCompose.g:2869:1: ( '-' )
            // InternalDockerCompose.g:2870:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_11_1_1_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_11_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11_1_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_11_1_1__1"
    // InternalDockerCompose.g:2879:1: rule__Service__Group_3_11_1_1__1 : rule__Service__Group_3_11_1_1__1__Impl ;
    public final void rule__Service__Group_3_11_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2883:1: ( rule__Service__Group_3_11_1_1__1__Impl )
            // InternalDockerCompose.g:2884:2: rule__Service__Group_3_11_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_11_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11_1_1__1"


    // $ANTLR start "rule__Service__Group_3_11_1_1__1__Impl"
    // InternalDockerCompose.g:2890:1: rule__Service__Group_3_11_1_1__1__Impl : ( ( rule__Service__SecretsAssignment_3_11_1_1_1 ) ) ;
    public final void rule__Service__Group_3_11_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2894:1: ( ( ( rule__Service__SecretsAssignment_3_11_1_1_1 ) ) )
            // InternalDockerCompose.g:2895:1: ( ( rule__Service__SecretsAssignment_3_11_1_1_1 ) )
            {
            // InternalDockerCompose.g:2895:1: ( ( rule__Service__SecretsAssignment_3_11_1_1_1 ) )
            // InternalDockerCompose.g:2896:2: ( rule__Service__SecretsAssignment_3_11_1_1_1 )
            {
             before(grammarAccess.getServiceAccess().getSecretsAssignment_3_11_1_1_1()); 
            // InternalDockerCompose.g:2897:2: ( rule__Service__SecretsAssignment_3_11_1_1_1 )
            // InternalDockerCompose.g:2897:3: rule__Service__SecretsAssignment_3_11_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__SecretsAssignment_3_11_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getSecretsAssignment_3_11_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_11_1_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_12__0"
    // InternalDockerCompose.g:2906:1: rule__Service__Group_3_12__0 : rule__Service__Group_3_12__0__Impl rule__Service__Group_3_12__1 ;
    public final void rule__Service__Group_3_12__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2910:1: ( rule__Service__Group_3_12__0__Impl rule__Service__Group_3_12__1 )
            // InternalDockerCompose.g:2911:2: rule__Service__Group_3_12__0__Impl rule__Service__Group_3_12__1
            {
            pushFollow(FOLLOW_13);
            rule__Service__Group_3_12__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_12__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12__0"


    // $ANTLR start "rule__Service__Group_3_12__0__Impl"
    // InternalDockerCompose.g:2918:1: rule__Service__Group_3_12__0__Impl : ( 'devices:' ) ;
    public final void rule__Service__Group_3_12__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2922:1: ( ( 'devices:' ) )
            // InternalDockerCompose.g:2923:1: ( 'devices:' )
            {
            // InternalDockerCompose.g:2923:1: ( 'devices:' )
            // InternalDockerCompose.g:2924:2: 'devices:'
            {
             before(grammarAccess.getServiceAccess().getDevicesKeyword_3_12_0()); 
            match(input,51,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getDevicesKeyword_3_12_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12__0__Impl"


    // $ANTLR start "rule__Service__Group_3_12__1"
    // InternalDockerCompose.g:2933:1: rule__Service__Group_3_12__1 : rule__Service__Group_3_12__1__Impl ;
    public final void rule__Service__Group_3_12__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2937:1: ( rule__Service__Group_3_12__1__Impl )
            // InternalDockerCompose.g:2938:2: rule__Service__Group_3_12__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_12__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12__1"


    // $ANTLR start "rule__Service__Group_3_12__1__Impl"
    // InternalDockerCompose.g:2944:1: rule__Service__Group_3_12__1__Impl : ( ( ( rule__Service__Group_3_12_1__0 ) ) ( ( rule__Service__Group_3_12_1__0 )* ) ) ;
    public final void rule__Service__Group_3_12__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2948:1: ( ( ( ( rule__Service__Group_3_12_1__0 ) ) ( ( rule__Service__Group_3_12_1__0 )* ) ) )
            // InternalDockerCompose.g:2949:1: ( ( ( rule__Service__Group_3_12_1__0 ) ) ( ( rule__Service__Group_3_12_1__0 )* ) )
            {
            // InternalDockerCompose.g:2949:1: ( ( ( rule__Service__Group_3_12_1__0 ) ) ( ( rule__Service__Group_3_12_1__0 )* ) )
            // InternalDockerCompose.g:2950:2: ( ( rule__Service__Group_3_12_1__0 ) ) ( ( rule__Service__Group_3_12_1__0 )* )
            {
            // InternalDockerCompose.g:2950:2: ( ( rule__Service__Group_3_12_1__0 ) )
            // InternalDockerCompose.g:2951:3: ( rule__Service__Group_3_12_1__0 )
            {
             before(grammarAccess.getServiceAccess().getGroup_3_12_1()); 
            // InternalDockerCompose.g:2952:3: ( rule__Service__Group_3_12_1__0 )
            // InternalDockerCompose.g:2952:4: rule__Service__Group_3_12_1__0
            {
            pushFollow(FOLLOW_3);
            rule__Service__Group_3_12_1__0();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getGroup_3_12_1()); 

            }

            // InternalDockerCompose.g:2955:2: ( ( rule__Service__Group_3_12_1__0 )* )
            // InternalDockerCompose.g:2956:3: ( rule__Service__Group_3_12_1__0 )*
            {
             before(grammarAccess.getServiceAccess().getGroup_3_12_1()); 
            // InternalDockerCompose.g:2957:3: ( rule__Service__Group_3_12_1__0 )*
            loop30:
            do {
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( (LA30_0==50) ) {
                    alt30=1;
                }


                switch (alt30) {
            	case 1 :
            	    // InternalDockerCompose.g:2957:4: rule__Service__Group_3_12_1__0
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Service__Group_3_12_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop30;
                }
            } while (true);

             after(grammarAccess.getServiceAccess().getGroup_3_12_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12__1__Impl"


    // $ANTLR start "rule__Service__Group_3_12_1__0"
    // InternalDockerCompose.g:2967:1: rule__Service__Group_3_12_1__0 : rule__Service__Group_3_12_1__0__Impl rule__Service__Group_3_12_1__1 ;
    public final void rule__Service__Group_3_12_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2971:1: ( rule__Service__Group_3_12_1__0__Impl rule__Service__Group_3_12_1__1 )
            // InternalDockerCompose.g:2972:2: rule__Service__Group_3_12_1__0__Impl rule__Service__Group_3_12_1__1
            {
            pushFollow(FOLLOW_17);
            rule__Service__Group_3_12_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_12_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12_1__0"


    // $ANTLR start "rule__Service__Group_3_12_1__0__Impl"
    // InternalDockerCompose.g:2979:1: rule__Service__Group_3_12_1__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_12_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2983:1: ( ( '-' ) )
            // InternalDockerCompose.g:2984:1: ( '-' )
            {
            // InternalDockerCompose.g:2984:1: ( '-' )
            // InternalDockerCompose.g:2985:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_12_1_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_12_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_12_1__1"
    // InternalDockerCompose.g:2994:1: rule__Service__Group_3_12_1__1 : rule__Service__Group_3_12_1__1__Impl ;
    public final void rule__Service__Group_3_12_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:2998:1: ( rule__Service__Group_3_12_1__1__Impl )
            // InternalDockerCompose.g:2999:2: rule__Service__Group_3_12_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_12_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12_1__1"


    // $ANTLR start "rule__Service__Group_3_12_1__1__Impl"
    // InternalDockerCompose.g:3005:1: rule__Service__Group_3_12_1__1__Impl : ( ( rule__Service__DevicesAssignment_3_12_1_1 ) ) ;
    public final void rule__Service__Group_3_12_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3009:1: ( ( ( rule__Service__DevicesAssignment_3_12_1_1 ) ) )
            // InternalDockerCompose.g:3010:1: ( ( rule__Service__DevicesAssignment_3_12_1_1 ) )
            {
            // InternalDockerCompose.g:3010:1: ( ( rule__Service__DevicesAssignment_3_12_1_1 ) )
            // InternalDockerCompose.g:3011:2: ( rule__Service__DevicesAssignment_3_12_1_1 )
            {
             before(grammarAccess.getServiceAccess().getDevicesAssignment_3_12_1_1()); 
            // InternalDockerCompose.g:3012:2: ( rule__Service__DevicesAssignment_3_12_1_1 )
            // InternalDockerCompose.g:3012:3: rule__Service__DevicesAssignment_3_12_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__DevicesAssignment_3_12_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getDevicesAssignment_3_12_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_12_1__1__Impl"


    // $ANTLR start "rule__Service__Group_3_13__0"
    // InternalDockerCompose.g:3021:1: rule__Service__Group_3_13__0 : rule__Service__Group_3_13__0__Impl rule__Service__Group_3_13__1 ;
    public final void rule__Service__Group_3_13__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3025:1: ( rule__Service__Group_3_13__0__Impl rule__Service__Group_3_13__1 )
            // InternalDockerCompose.g:3026:2: rule__Service__Group_3_13__0__Impl rule__Service__Group_3_13__1
            {
            pushFollow(FOLLOW_18);
            rule__Service__Group_3_13__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_13__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13__0"


    // $ANTLR start "rule__Service__Group_3_13__0__Impl"
    // InternalDockerCompose.g:3033:1: rule__Service__Group_3_13__0__Impl : ( 'dns:' ) ;
    public final void rule__Service__Group_3_13__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3037:1: ( ( 'dns:' ) )
            // InternalDockerCompose.g:3038:1: ( 'dns:' )
            {
            // InternalDockerCompose.g:3038:1: ( 'dns:' )
            // InternalDockerCompose.g:3039:2: 'dns:'
            {
             before(grammarAccess.getServiceAccess().getDnsKeyword_3_13_0()); 
            match(input,52,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getDnsKeyword_3_13_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13__0__Impl"


    // $ANTLR start "rule__Service__Group_3_13__1"
    // InternalDockerCompose.g:3048:1: rule__Service__Group_3_13__1 : rule__Service__Group_3_13__1__Impl ;
    public final void rule__Service__Group_3_13__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3052:1: ( rule__Service__Group_3_13__1__Impl )
            // InternalDockerCompose.g:3053:2: rule__Service__Group_3_13__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_13__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13__1"


    // $ANTLR start "rule__Service__Group_3_13__1__Impl"
    // InternalDockerCompose.g:3059:1: rule__Service__Group_3_13__1__Impl : ( ( rule__Service__Alternatives_3_13_1 ) ) ;
    public final void rule__Service__Group_3_13__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3063:1: ( ( ( rule__Service__Alternatives_3_13_1 ) ) )
            // InternalDockerCompose.g:3064:1: ( ( rule__Service__Alternatives_3_13_1 ) )
            {
            // InternalDockerCompose.g:3064:1: ( ( rule__Service__Alternatives_3_13_1 ) )
            // InternalDockerCompose.g:3065:2: ( rule__Service__Alternatives_3_13_1 )
            {
             before(grammarAccess.getServiceAccess().getAlternatives_3_13_1()); 
            // InternalDockerCompose.g:3066:2: ( rule__Service__Alternatives_3_13_1 )
            // InternalDockerCompose.g:3066:3: rule__Service__Alternatives_3_13_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__Alternatives_3_13_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getAlternatives_3_13_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13__1__Impl"


    // $ANTLR start "rule__Service__Group_3_13_1_0__0"
    // InternalDockerCompose.g:3075:1: rule__Service__Group_3_13_1_0__0 : rule__Service__Group_3_13_1_0__0__Impl rule__Service__Group_3_13_1_0__1 ;
    public final void rule__Service__Group_3_13_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3079:1: ( rule__Service__Group_3_13_1_0__0__Impl rule__Service__Group_3_13_1_0__1 )
            // InternalDockerCompose.g:3080:2: rule__Service__Group_3_13_1_0__0__Impl rule__Service__Group_3_13_1_0__1
            {
            pushFollow(FOLLOW_18);
            rule__Service__Group_3_13_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_13_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13_1_0__0"


    // $ANTLR start "rule__Service__Group_3_13_1_0__0__Impl"
    // InternalDockerCompose.g:3087:1: rule__Service__Group_3_13_1_0__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_13_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3091:1: ( ( '-' ) )
            // InternalDockerCompose.g:3092:1: ( '-' )
            {
            // InternalDockerCompose.g:3092:1: ( '-' )
            // InternalDockerCompose.g:3093:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_13_1_0_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_13_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13_1_0__0__Impl"


    // $ANTLR start "rule__Service__Group_3_13_1_0__1"
    // InternalDockerCompose.g:3102:1: rule__Service__Group_3_13_1_0__1 : rule__Service__Group_3_13_1_0__1__Impl ;
    public final void rule__Service__Group_3_13_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3106:1: ( rule__Service__Group_3_13_1_0__1__Impl )
            // InternalDockerCompose.g:3107:2: rule__Service__Group_3_13_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_13_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13_1_0__1"


    // $ANTLR start "rule__Service__Group_3_13_1_0__1__Impl"
    // InternalDockerCompose.g:3113:1: rule__Service__Group_3_13_1_0__1__Impl : ( ( rule__Service__DnsAssignment_3_13_1_0_1 ) ) ;
    public final void rule__Service__Group_3_13_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3117:1: ( ( ( rule__Service__DnsAssignment_3_13_1_0_1 ) ) )
            // InternalDockerCompose.g:3118:1: ( ( rule__Service__DnsAssignment_3_13_1_0_1 ) )
            {
            // InternalDockerCompose.g:3118:1: ( ( rule__Service__DnsAssignment_3_13_1_0_1 ) )
            // InternalDockerCompose.g:3119:2: ( rule__Service__DnsAssignment_3_13_1_0_1 )
            {
             before(grammarAccess.getServiceAccess().getDnsAssignment_3_13_1_0_1()); 
            // InternalDockerCompose.g:3120:2: ( rule__Service__DnsAssignment_3_13_1_0_1 )
            // InternalDockerCompose.g:3120:3: rule__Service__DnsAssignment_3_13_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__DnsAssignment_3_13_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getDnsAssignment_3_13_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_13_1_0__1__Impl"


    // $ANTLR start "rule__Service__Group_3_14__0"
    // InternalDockerCompose.g:3129:1: rule__Service__Group_3_14__0 : rule__Service__Group_3_14__0__Impl rule__Service__Group_3_14__1 ;
    public final void rule__Service__Group_3_14__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3133:1: ( rule__Service__Group_3_14__0__Impl rule__Service__Group_3_14__1 )
            // InternalDockerCompose.g:3134:2: rule__Service__Group_3_14__0__Impl rule__Service__Group_3_14__1
            {
            pushFollow(FOLLOW_13);
            rule__Service__Group_3_14__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_14__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14__0"


    // $ANTLR start "rule__Service__Group_3_14__0__Impl"
    // InternalDockerCompose.g:3141:1: rule__Service__Group_3_14__0__Impl : ( 'ports:' ) ;
    public final void rule__Service__Group_3_14__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3145:1: ( ( 'ports:' ) )
            // InternalDockerCompose.g:3146:1: ( 'ports:' )
            {
            // InternalDockerCompose.g:3146:1: ( 'ports:' )
            // InternalDockerCompose.g:3147:2: 'ports:'
            {
             before(grammarAccess.getServiceAccess().getPortsKeyword_3_14_0()); 
            match(input,53,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getPortsKeyword_3_14_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14__0__Impl"


    // $ANTLR start "rule__Service__Group_3_14__1"
    // InternalDockerCompose.g:3156:1: rule__Service__Group_3_14__1 : rule__Service__Group_3_14__1__Impl ;
    public final void rule__Service__Group_3_14__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3160:1: ( rule__Service__Group_3_14__1__Impl )
            // InternalDockerCompose.g:3161:2: rule__Service__Group_3_14__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_14__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14__1"


    // $ANTLR start "rule__Service__Group_3_14__1__Impl"
    // InternalDockerCompose.g:3167:1: rule__Service__Group_3_14__1__Impl : ( ( ( rule__Service__Group_3_14_1__0 ) ) ( ( rule__Service__Group_3_14_1__0 )* ) ) ;
    public final void rule__Service__Group_3_14__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3171:1: ( ( ( ( rule__Service__Group_3_14_1__0 ) ) ( ( rule__Service__Group_3_14_1__0 )* ) ) )
            // InternalDockerCompose.g:3172:1: ( ( ( rule__Service__Group_3_14_1__0 ) ) ( ( rule__Service__Group_3_14_1__0 )* ) )
            {
            // InternalDockerCompose.g:3172:1: ( ( ( rule__Service__Group_3_14_1__0 ) ) ( ( rule__Service__Group_3_14_1__0 )* ) )
            // InternalDockerCompose.g:3173:2: ( ( rule__Service__Group_3_14_1__0 ) ) ( ( rule__Service__Group_3_14_1__0 )* )
            {
            // InternalDockerCompose.g:3173:2: ( ( rule__Service__Group_3_14_1__0 ) )
            // InternalDockerCompose.g:3174:3: ( rule__Service__Group_3_14_1__0 )
            {
             before(grammarAccess.getServiceAccess().getGroup_3_14_1()); 
            // InternalDockerCompose.g:3175:3: ( rule__Service__Group_3_14_1__0 )
            // InternalDockerCompose.g:3175:4: rule__Service__Group_3_14_1__0
            {
            pushFollow(FOLLOW_3);
            rule__Service__Group_3_14_1__0();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getGroup_3_14_1()); 

            }

            // InternalDockerCompose.g:3178:2: ( ( rule__Service__Group_3_14_1__0 )* )
            // InternalDockerCompose.g:3179:3: ( rule__Service__Group_3_14_1__0 )*
            {
             before(grammarAccess.getServiceAccess().getGroup_3_14_1()); 
            // InternalDockerCompose.g:3180:3: ( rule__Service__Group_3_14_1__0 )*
            loop31:
            do {
                int alt31=2;
                int LA31_0 = input.LA(1);

                if ( (LA31_0==50) ) {
                    alt31=1;
                }


                switch (alt31) {
            	case 1 :
            	    // InternalDockerCompose.g:3180:4: rule__Service__Group_3_14_1__0
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__Service__Group_3_14_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop31;
                }
            } while (true);

             after(grammarAccess.getServiceAccess().getGroup_3_14_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14__1__Impl"


    // $ANTLR start "rule__Service__Group_3_14_1__0"
    // InternalDockerCompose.g:3190:1: rule__Service__Group_3_14_1__0 : rule__Service__Group_3_14_1__0__Impl rule__Service__Group_3_14_1__1 ;
    public final void rule__Service__Group_3_14_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3194:1: ( rule__Service__Group_3_14_1__0__Impl rule__Service__Group_3_14_1__1 )
            // InternalDockerCompose.g:3195:2: rule__Service__Group_3_14_1__0__Impl rule__Service__Group_3_14_1__1
            {
            pushFollow(FOLLOW_19);
            rule__Service__Group_3_14_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Service__Group_3_14_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14_1__0"


    // $ANTLR start "rule__Service__Group_3_14_1__0__Impl"
    // InternalDockerCompose.g:3202:1: rule__Service__Group_3_14_1__0__Impl : ( '-' ) ;
    public final void rule__Service__Group_3_14_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3206:1: ( ( '-' ) )
            // InternalDockerCompose.g:3207:1: ( '-' )
            {
            // InternalDockerCompose.g:3207:1: ( '-' )
            // InternalDockerCompose.g:3208:2: '-'
            {
             before(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_14_1_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getServiceAccess().getHyphenMinusKeyword_3_14_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14_1__0__Impl"


    // $ANTLR start "rule__Service__Group_3_14_1__1"
    // InternalDockerCompose.g:3217:1: rule__Service__Group_3_14_1__1 : rule__Service__Group_3_14_1__1__Impl ;
    public final void rule__Service__Group_3_14_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3221:1: ( rule__Service__Group_3_14_1__1__Impl )
            // InternalDockerCompose.g:3222:2: rule__Service__Group_3_14_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__Group_3_14_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14_1__1"


    // $ANTLR start "rule__Service__Group_3_14_1__1__Impl"
    // InternalDockerCompose.g:3228:1: rule__Service__Group_3_14_1__1__Impl : ( ( rule__Service__PortsAssignment_3_14_1_1 ) ) ;
    public final void rule__Service__Group_3_14_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3232:1: ( ( ( rule__Service__PortsAssignment_3_14_1_1 ) ) )
            // InternalDockerCompose.g:3233:1: ( ( rule__Service__PortsAssignment_3_14_1_1 ) )
            {
            // InternalDockerCompose.g:3233:1: ( ( rule__Service__PortsAssignment_3_14_1_1 ) )
            // InternalDockerCompose.g:3234:2: ( rule__Service__PortsAssignment_3_14_1_1 )
            {
             before(grammarAccess.getServiceAccess().getPortsAssignment_3_14_1_1()); 
            // InternalDockerCompose.g:3235:2: ( rule__Service__PortsAssignment_3_14_1_1 )
            // InternalDockerCompose.g:3235:3: rule__Service__PortsAssignment_3_14_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Service__PortsAssignment_3_14_1_1();

            state._fsp--;


            }

             after(grammarAccess.getServiceAccess().getPortsAssignment_3_14_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Group_3_14_1__1__Impl"


    // $ANTLR start "rule__Port__Group__0"
    // InternalDockerCompose.g:3244:1: rule__Port__Group__0 : rule__Port__Group__0__Impl rule__Port__Group__1 ;
    public final void rule__Port__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3248:1: ( rule__Port__Group__0__Impl rule__Port__Group__1 )
            // InternalDockerCompose.g:3249:2: rule__Port__Group__0__Impl rule__Port__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__Port__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Port__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__Group__0"


    // $ANTLR start "rule__Port__Group__0__Impl"
    // InternalDockerCompose.g:3256:1: rule__Port__Group__0__Impl : ( () ) ;
    public final void rule__Port__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3260:1: ( ( () ) )
            // InternalDockerCompose.g:3261:1: ( () )
            {
            // InternalDockerCompose.g:3261:1: ( () )
            // InternalDockerCompose.g:3262:2: ()
            {
             before(grammarAccess.getPortAccess().getPortAction_0()); 
            // InternalDockerCompose.g:3263:2: ()
            // InternalDockerCompose.g:3263:3: 
            {
            }

             after(grammarAccess.getPortAccess().getPortAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__Group__0__Impl"


    // $ANTLR start "rule__Port__Group__1"
    // InternalDockerCompose.g:3271:1: rule__Port__Group__1 : rule__Port__Group__1__Impl ;
    public final void rule__Port__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3275:1: ( rule__Port__Group__1__Impl )
            // InternalDockerCompose.g:3276:2: rule__Port__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Port__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__Group__1"


    // $ANTLR start "rule__Port__Group__1__Impl"
    // InternalDockerCompose.g:3282:1: rule__Port__Group__1__Impl : ( ( rule__Port__ValueAssignment_1 ) ) ;
    public final void rule__Port__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3286:1: ( ( ( rule__Port__ValueAssignment_1 ) ) )
            // InternalDockerCompose.g:3287:1: ( ( rule__Port__ValueAssignment_1 ) )
            {
            // InternalDockerCompose.g:3287:1: ( ( rule__Port__ValueAssignment_1 ) )
            // InternalDockerCompose.g:3288:2: ( rule__Port__ValueAssignment_1 )
            {
             before(grammarAccess.getPortAccess().getValueAssignment_1()); 
            // InternalDockerCompose.g:3289:2: ( rule__Port__ValueAssignment_1 )
            // InternalDockerCompose.g:3289:3: rule__Port__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Port__ValueAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getPortAccess().getValueAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__Group__1__Impl"


    // $ANTLR start "rule__Device__Group__0"
    // InternalDockerCompose.g:3298:1: rule__Device__Group__0 : rule__Device__Group__0__Impl rule__Device__Group__1 ;
    public final void rule__Device__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3302:1: ( rule__Device__Group__0__Impl rule__Device__Group__1 )
            // InternalDockerCompose.g:3303:2: rule__Device__Group__0__Impl rule__Device__Group__1
            {
            pushFollow(FOLLOW_17);
            rule__Device__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Device__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Device__Group__0"


    // $ANTLR start "rule__Device__Group__0__Impl"
    // InternalDockerCompose.g:3310:1: rule__Device__Group__0__Impl : ( () ) ;
    public final void rule__Device__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3314:1: ( ( () ) )
            // InternalDockerCompose.g:3315:1: ( () )
            {
            // InternalDockerCompose.g:3315:1: ( () )
            // InternalDockerCompose.g:3316:2: ()
            {
             before(grammarAccess.getDeviceAccess().getDeviceAction_0()); 
            // InternalDockerCompose.g:3317:2: ()
            // InternalDockerCompose.g:3317:3: 
            {
            }

             after(grammarAccess.getDeviceAccess().getDeviceAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Device__Group__0__Impl"


    // $ANTLR start "rule__Device__Group__1"
    // InternalDockerCompose.g:3325:1: rule__Device__Group__1 : rule__Device__Group__1__Impl ;
    public final void rule__Device__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3329:1: ( rule__Device__Group__1__Impl )
            // InternalDockerCompose.g:3330:2: rule__Device__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Device__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Device__Group__1"


    // $ANTLR start "rule__Device__Group__1__Impl"
    // InternalDockerCompose.g:3336:1: rule__Device__Group__1__Impl : ( ( rule__Device__ValueAssignment_1 ) ) ;
    public final void rule__Device__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3340:1: ( ( ( rule__Device__ValueAssignment_1 ) ) )
            // InternalDockerCompose.g:3341:1: ( ( rule__Device__ValueAssignment_1 ) )
            {
            // InternalDockerCompose.g:3341:1: ( ( rule__Device__ValueAssignment_1 ) )
            // InternalDockerCompose.g:3342:2: ( rule__Device__ValueAssignment_1 )
            {
             before(grammarAccess.getDeviceAccess().getValueAssignment_1()); 
            // InternalDockerCompose.g:3343:2: ( rule__Device__ValueAssignment_1 )
            // InternalDockerCompose.g:3343:3: rule__Device__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Device__ValueAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getDeviceAccess().getValueAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Device__Group__1__Impl"


    // $ANTLR start "rule__Image__Group_1__0"
    // InternalDockerCompose.g:3352:1: rule__Image__Group_1__0 : rule__Image__Group_1__0__Impl rule__Image__Group_1__1 ;
    public final void rule__Image__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3356:1: ( rule__Image__Group_1__0__Impl rule__Image__Group_1__1 )
            // InternalDockerCompose.g:3357:2: rule__Image__Group_1__0__Impl rule__Image__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__Image__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1__0"


    // $ANTLR start "rule__Image__Group_1__0__Impl"
    // InternalDockerCompose.g:3364:1: rule__Image__Group_1__0__Impl : ( RULE_ID ) ;
    public final void rule__Image__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3368:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:3369:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:3369:1: ( RULE_ID )
            // InternalDockerCompose.g:3370:2: RULE_ID
            {
             before(grammarAccess.getImageAccess().getIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getImageAccess().getIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1__0__Impl"


    // $ANTLR start "rule__Image__Group_1__1"
    // InternalDockerCompose.g:3379:1: rule__Image__Group_1__1 : rule__Image__Group_1__1__Impl ;
    public final void rule__Image__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3383:1: ( rule__Image__Group_1__1__Impl )
            // InternalDockerCompose.g:3384:2: rule__Image__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Image__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1__1"


    // $ANTLR start "rule__Image__Group_1__1__Impl"
    // InternalDockerCompose.g:3390:1: rule__Image__Group_1__1__Impl : ( ( ( rule__Image__Group_1_1__0 ) ) ( ( rule__Image__Group_1_1__0 )* ) ) ;
    public final void rule__Image__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3394:1: ( ( ( ( rule__Image__Group_1_1__0 ) ) ( ( rule__Image__Group_1_1__0 )* ) ) )
            // InternalDockerCompose.g:3395:1: ( ( ( rule__Image__Group_1_1__0 ) ) ( ( rule__Image__Group_1_1__0 )* ) )
            {
            // InternalDockerCompose.g:3395:1: ( ( ( rule__Image__Group_1_1__0 ) ) ( ( rule__Image__Group_1_1__0 )* ) )
            // InternalDockerCompose.g:3396:2: ( ( rule__Image__Group_1_1__0 ) ) ( ( rule__Image__Group_1_1__0 )* )
            {
            // InternalDockerCompose.g:3396:2: ( ( rule__Image__Group_1_1__0 ) )
            // InternalDockerCompose.g:3397:3: ( rule__Image__Group_1_1__0 )
            {
             before(grammarAccess.getImageAccess().getGroup_1_1()); 
            // InternalDockerCompose.g:3398:3: ( rule__Image__Group_1_1__0 )
            // InternalDockerCompose.g:3398:4: rule__Image__Group_1_1__0
            {
            pushFollow(FOLLOW_20);
            rule__Image__Group_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getImageAccess().getGroup_1_1()); 

            }

            // InternalDockerCompose.g:3401:2: ( ( rule__Image__Group_1_1__0 )* )
            // InternalDockerCompose.g:3402:3: ( rule__Image__Group_1_1__0 )*
            {
             before(grammarAccess.getImageAccess().getGroup_1_1()); 
            // InternalDockerCompose.g:3403:3: ( rule__Image__Group_1_1__0 )*
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==40) ) {
                    alt32=1;
                }


                switch (alt32) {
            	case 1 :
            	    // InternalDockerCompose.g:3403:4: rule__Image__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_20);
            	    rule__Image__Group_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);

             after(grammarAccess.getImageAccess().getGroup_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1__1__Impl"


    // $ANTLR start "rule__Image__Group_1_1__0"
    // InternalDockerCompose.g:3413:1: rule__Image__Group_1_1__0 : rule__Image__Group_1_1__0__Impl rule__Image__Group_1_1__1 ;
    public final void rule__Image__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3417:1: ( rule__Image__Group_1_1__0__Impl rule__Image__Group_1_1__1 )
            // InternalDockerCompose.g:3418:2: rule__Image__Group_1_1__0__Impl rule__Image__Group_1_1__1
            {
            pushFollow(FOLLOW_21);
            rule__Image__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Image__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1_1__0"


    // $ANTLR start "rule__Image__Group_1_1__0__Impl"
    // InternalDockerCompose.g:3425:1: rule__Image__Group_1_1__0__Impl : ( ':' ) ;
    public final void rule__Image__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3429:1: ( ( ':' ) )
            // InternalDockerCompose.g:3430:1: ( ':' )
            {
            // InternalDockerCompose.g:3430:1: ( ':' )
            // InternalDockerCompose.g:3431:2: ':'
            {
             before(grammarAccess.getImageAccess().getColonKeyword_1_1_0()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getImageAccess().getColonKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1_1__0__Impl"


    // $ANTLR start "rule__Image__Group_1_1__1"
    // InternalDockerCompose.g:3440:1: rule__Image__Group_1_1__1 : rule__Image__Group_1_1__1__Impl ;
    public final void rule__Image__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3444:1: ( rule__Image__Group_1_1__1__Impl )
            // InternalDockerCompose.g:3445:2: rule__Image__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Image__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1_1__1"


    // $ANTLR start "rule__Image__Group_1_1__1__Impl"
    // InternalDockerCompose.g:3451:1: rule__Image__Group_1_1__1__Impl : ( RULE_ID ) ;
    public final void rule__Image__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3455:1: ( ( RULE_ID ) )
            // InternalDockerCompose.g:3456:1: ( RULE_ID )
            {
            // InternalDockerCompose.g:3456:1: ( RULE_ID )
            // InternalDockerCompose.g:3457:2: RULE_ID
            {
             before(grammarAccess.getImageAccess().getIDTerminalRuleCall_1_1_1()); 
            match(input,RULE_ID,FOLLOW_2); 
             after(grammarAccess.getImageAccess().getIDTerminalRuleCall_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Image__Group_1_1__1__Impl"


    // $ANTLR start "rule__Dependency__Group__0"
    // InternalDockerCompose.g:3467:1: rule__Dependency__Group__0 : rule__Dependency__Group__0__Impl rule__Dependency__Group__1 ;
    public final void rule__Dependency__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3471:1: ( rule__Dependency__Group__0__Impl rule__Dependency__Group__1 )
            // InternalDockerCompose.g:3472:2: rule__Dependency__Group__0__Impl rule__Dependency__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__Dependency__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Dependency__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency__Group__0"


    // $ANTLR start "rule__Dependency__Group__0__Impl"
    // InternalDockerCompose.g:3479:1: rule__Dependency__Group__0__Impl : ( () ) ;
    public final void rule__Dependency__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3483:1: ( ( () ) )
            // InternalDockerCompose.g:3484:1: ( () )
            {
            // InternalDockerCompose.g:3484:1: ( () )
            // InternalDockerCompose.g:3485:2: ()
            {
             before(grammarAccess.getDependencyAccess().getDependencyAction_0()); 
            // InternalDockerCompose.g:3486:2: ()
            // InternalDockerCompose.g:3486:3: 
            {
            }

             after(grammarAccess.getDependencyAccess().getDependencyAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency__Group__0__Impl"


    // $ANTLR start "rule__Dependency__Group__1"
    // InternalDockerCompose.g:3494:1: rule__Dependency__Group__1 : rule__Dependency__Group__1__Impl ;
    public final void rule__Dependency__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3498:1: ( rule__Dependency__Group__1__Impl )
            // InternalDockerCompose.g:3499:2: rule__Dependency__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Dependency__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency__Group__1"


    // $ANTLR start "rule__Dependency__Group__1__Impl"
    // InternalDockerCompose.g:3505:1: rule__Dependency__Group__1__Impl : ( ( rule__Dependency__ServiceAssignment_1 ) ) ;
    public final void rule__Dependency__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3509:1: ( ( ( rule__Dependency__ServiceAssignment_1 ) ) )
            // InternalDockerCompose.g:3510:1: ( ( rule__Dependency__ServiceAssignment_1 ) )
            {
            // InternalDockerCompose.g:3510:1: ( ( rule__Dependency__ServiceAssignment_1 ) )
            // InternalDockerCompose.g:3511:2: ( rule__Dependency__ServiceAssignment_1 )
            {
             before(grammarAccess.getDependencyAccess().getServiceAssignment_1()); 
            // InternalDockerCompose.g:3512:2: ( rule__Dependency__ServiceAssignment_1 )
            // InternalDockerCompose.g:3512:3: rule__Dependency__ServiceAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Dependency__ServiceAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getDependencyAccess().getServiceAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency__Group__1__Impl"


    // $ANTLR start "rule__NetworkConnector_short__Group__0"
    // InternalDockerCompose.g:3521:1: rule__NetworkConnector_short__Group__0 : rule__NetworkConnector_short__Group__0__Impl rule__NetworkConnector_short__Group__1 ;
    public final void rule__NetworkConnector_short__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3525:1: ( rule__NetworkConnector_short__Group__0__Impl rule__NetworkConnector_short__Group__1 )
            // InternalDockerCompose.g:3526:2: rule__NetworkConnector_short__Group__0__Impl rule__NetworkConnector_short__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__NetworkConnector_short__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector_short__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_short__Group__0"


    // $ANTLR start "rule__NetworkConnector_short__Group__0__Impl"
    // InternalDockerCompose.g:3533:1: rule__NetworkConnector_short__Group__0__Impl : ( () ) ;
    public final void rule__NetworkConnector_short__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3537:1: ( ( () ) )
            // InternalDockerCompose.g:3538:1: ( () )
            {
            // InternalDockerCompose.g:3538:1: ( () )
            // InternalDockerCompose.g:3539:2: ()
            {
             before(grammarAccess.getNetworkConnector_shortAccess().getNetworkConnectorAction_0()); 
            // InternalDockerCompose.g:3540:2: ()
            // InternalDockerCompose.g:3540:3: 
            {
            }

             after(grammarAccess.getNetworkConnector_shortAccess().getNetworkConnectorAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_short__Group__0__Impl"


    // $ANTLR start "rule__NetworkConnector_short__Group__1"
    // InternalDockerCompose.g:3548:1: rule__NetworkConnector_short__Group__1 : rule__NetworkConnector_short__Group__1__Impl rule__NetworkConnector_short__Group__2 ;
    public final void rule__NetworkConnector_short__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3552:1: ( rule__NetworkConnector_short__Group__1__Impl rule__NetworkConnector_short__Group__2 )
            // InternalDockerCompose.g:3553:2: rule__NetworkConnector_short__Group__1__Impl rule__NetworkConnector_short__Group__2
            {
            pushFollow(FOLLOW_6);
            rule__NetworkConnector_short__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector_short__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_short__Group__1"


    // $ANTLR start "rule__NetworkConnector_short__Group__1__Impl"
    // InternalDockerCompose.g:3560:1: rule__NetworkConnector_short__Group__1__Impl : ( '-' ) ;
    public final void rule__NetworkConnector_short__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3564:1: ( ( '-' ) )
            // InternalDockerCompose.g:3565:1: ( '-' )
            {
            // InternalDockerCompose.g:3565:1: ( '-' )
            // InternalDockerCompose.g:3566:2: '-'
            {
             before(grammarAccess.getNetworkConnector_shortAccess().getHyphenMinusKeyword_1()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getNetworkConnector_shortAccess().getHyphenMinusKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_short__Group__1__Impl"


    // $ANTLR start "rule__NetworkConnector_short__Group__2"
    // InternalDockerCompose.g:3575:1: rule__NetworkConnector_short__Group__2 : rule__NetworkConnector_short__Group__2__Impl ;
    public final void rule__NetworkConnector_short__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3579:1: ( rule__NetworkConnector_short__Group__2__Impl )
            // InternalDockerCompose.g:3580:2: rule__NetworkConnector_short__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_short__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_short__Group__2"


    // $ANTLR start "rule__NetworkConnector_short__Group__2__Impl"
    // InternalDockerCompose.g:3586:1: rule__NetworkConnector_short__Group__2__Impl : ( ( rule__NetworkConnector_short__NetworkAssignment_2 ) ) ;
    public final void rule__NetworkConnector_short__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3590:1: ( ( ( rule__NetworkConnector_short__NetworkAssignment_2 ) ) )
            // InternalDockerCompose.g:3591:1: ( ( rule__NetworkConnector_short__NetworkAssignment_2 ) )
            {
            // InternalDockerCompose.g:3591:1: ( ( rule__NetworkConnector_short__NetworkAssignment_2 ) )
            // InternalDockerCompose.g:3592:2: ( rule__NetworkConnector_short__NetworkAssignment_2 )
            {
             before(grammarAccess.getNetworkConnector_shortAccess().getNetworkAssignment_2()); 
            // InternalDockerCompose.g:3593:2: ( rule__NetworkConnector_short__NetworkAssignment_2 )
            // InternalDockerCompose.g:3593:3: rule__NetworkConnector_short__NetworkAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_short__NetworkAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnector_shortAccess().getNetworkAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_short__Group__2__Impl"


    // $ANTLR start "rule__NetworkConnector_long__Group__0"
    // InternalDockerCompose.g:3602:1: rule__NetworkConnector_long__Group__0 : rule__NetworkConnector_long__Group__0__Impl rule__NetworkConnector_long__Group__1 ;
    public final void rule__NetworkConnector_long__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3606:1: ( rule__NetworkConnector_long__Group__0__Impl rule__NetworkConnector_long__Group__1 )
            // InternalDockerCompose.g:3607:2: rule__NetworkConnector_long__Group__0__Impl rule__NetworkConnector_long__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__NetworkConnector_long__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group__0"


    // $ANTLR start "rule__NetworkConnector_long__Group__0__Impl"
    // InternalDockerCompose.g:3614:1: rule__NetworkConnector_long__Group__0__Impl : ( () ) ;
    public final void rule__NetworkConnector_long__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3618:1: ( ( () ) )
            // InternalDockerCompose.g:3619:1: ( () )
            {
            // InternalDockerCompose.g:3619:1: ( () )
            // InternalDockerCompose.g:3620:2: ()
            {
             before(grammarAccess.getNetworkConnector_longAccess().getNetworkConnectorAction_0()); 
            // InternalDockerCompose.g:3621:2: ()
            // InternalDockerCompose.g:3621:3: 
            {
            }

             after(grammarAccess.getNetworkConnector_longAccess().getNetworkConnectorAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group__0__Impl"


    // $ANTLR start "rule__NetworkConnector_long__Group__1"
    // InternalDockerCompose.g:3629:1: rule__NetworkConnector_long__Group__1 : rule__NetworkConnector_long__Group__1__Impl rule__NetworkConnector_long__Group__2 ;
    public final void rule__NetworkConnector_long__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3633:1: ( rule__NetworkConnector_long__Group__1__Impl rule__NetworkConnector_long__Group__2 )
            // InternalDockerCompose.g:3634:2: rule__NetworkConnector_long__Group__1__Impl rule__NetworkConnector_long__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__NetworkConnector_long__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group__1"


    // $ANTLR start "rule__NetworkConnector_long__Group__1__Impl"
    // InternalDockerCompose.g:3641:1: rule__NetworkConnector_long__Group__1__Impl : ( ( rule__NetworkConnector_long__NetworkAssignment_1 ) ) ;
    public final void rule__NetworkConnector_long__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3645:1: ( ( ( rule__NetworkConnector_long__NetworkAssignment_1 ) ) )
            // InternalDockerCompose.g:3646:1: ( ( rule__NetworkConnector_long__NetworkAssignment_1 ) )
            {
            // InternalDockerCompose.g:3646:1: ( ( rule__NetworkConnector_long__NetworkAssignment_1 ) )
            // InternalDockerCompose.g:3647:2: ( rule__NetworkConnector_long__NetworkAssignment_1 )
            {
             before(grammarAccess.getNetworkConnector_longAccess().getNetworkAssignment_1()); 
            // InternalDockerCompose.g:3648:2: ( rule__NetworkConnector_long__NetworkAssignment_1 )
            // InternalDockerCompose.g:3648:3: rule__NetworkConnector_long__NetworkAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__NetworkAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnector_longAccess().getNetworkAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group__1__Impl"


    // $ANTLR start "rule__NetworkConnector_long__Group__2"
    // InternalDockerCompose.g:3656:1: rule__NetworkConnector_long__Group__2 : rule__NetworkConnector_long__Group__2__Impl rule__NetworkConnector_long__Group__3 ;
    public final void rule__NetworkConnector_long__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3660:1: ( rule__NetworkConnector_long__Group__2__Impl rule__NetworkConnector_long__Group__3 )
            // InternalDockerCompose.g:3661:2: rule__NetworkConnector_long__Group__2__Impl rule__NetworkConnector_long__Group__3
            {
            pushFollow(FOLLOW_22);
            rule__NetworkConnector_long__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group__2"


    // $ANTLR start "rule__NetworkConnector_long__Group__2__Impl"
    // InternalDockerCompose.g:3668:1: rule__NetworkConnector_long__Group__2__Impl : ( ':' ) ;
    public final void rule__NetworkConnector_long__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3672:1: ( ( ':' ) )
            // InternalDockerCompose.g:3673:1: ( ':' )
            {
            // InternalDockerCompose.g:3673:1: ( ':' )
            // InternalDockerCompose.g:3674:2: ':'
            {
             before(grammarAccess.getNetworkConnector_longAccess().getColonKeyword_2()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getNetworkConnector_longAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group__2__Impl"


    // $ANTLR start "rule__NetworkConnector_long__Group__3"
    // InternalDockerCompose.g:3683:1: rule__NetworkConnector_long__Group__3 : rule__NetworkConnector_long__Group__3__Impl ;
    public final void rule__NetworkConnector_long__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3687:1: ( rule__NetworkConnector_long__Group__3__Impl )
            // InternalDockerCompose.g:3688:2: rule__NetworkConnector_long__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group__3"


    // $ANTLR start "rule__NetworkConnector_long__Group__3__Impl"
    // InternalDockerCompose.g:3694:1: rule__NetworkConnector_long__Group__3__Impl : ( ( rule__NetworkConnector_long__UnorderedGroup_3 ) ) ;
    public final void rule__NetworkConnector_long__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3698:1: ( ( ( rule__NetworkConnector_long__UnorderedGroup_3 ) ) )
            // InternalDockerCompose.g:3699:1: ( ( rule__NetworkConnector_long__UnorderedGroup_3 ) )
            {
            // InternalDockerCompose.g:3699:1: ( ( rule__NetworkConnector_long__UnorderedGroup_3 ) )
            // InternalDockerCompose.g:3700:2: ( rule__NetworkConnector_long__UnorderedGroup_3 )
            {
             before(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3()); 
            // InternalDockerCompose.g:3701:2: ( rule__NetworkConnector_long__UnorderedGroup_3 )
            // InternalDockerCompose.g:3701:3: rule__NetworkConnector_long__UnorderedGroup_3
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__UnorderedGroup_3();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group__3__Impl"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_0__0"
    // InternalDockerCompose.g:3710:1: rule__NetworkConnector_long__Group_3_0__0 : rule__NetworkConnector_long__Group_3_0__0__Impl rule__NetworkConnector_long__Group_3_0__1 ;
    public final void rule__NetworkConnector_long__Group_3_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3714:1: ( rule__NetworkConnector_long__Group_3_0__0__Impl rule__NetworkConnector_long__Group_3_0__1 )
            // InternalDockerCompose.g:3715:2: rule__NetworkConnector_long__Group_3_0__0__Impl rule__NetworkConnector_long__Group_3_0__1
            {
            pushFollow(FOLLOW_18);
            rule__NetworkConnector_long__Group_3_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group_3_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_0__0"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_0__0__Impl"
    // InternalDockerCompose.g:3722:1: rule__NetworkConnector_long__Group_3_0__0__Impl : ( 'ipv4_address:' ) ;
    public final void rule__NetworkConnector_long__Group_3_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3726:1: ( ( 'ipv4_address:' ) )
            // InternalDockerCompose.g:3727:1: ( 'ipv4_address:' )
            {
            // InternalDockerCompose.g:3727:1: ( 'ipv4_address:' )
            // InternalDockerCompose.g:3728:2: 'ipv4_address:'
            {
             before(grammarAccess.getNetworkConnector_longAccess().getIpv4_addressKeyword_3_0_0()); 
            match(input,54,FOLLOW_2); 
             after(grammarAccess.getNetworkConnector_longAccess().getIpv4_addressKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_0__0__Impl"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_0__1"
    // InternalDockerCompose.g:3737:1: rule__NetworkConnector_long__Group_3_0__1 : rule__NetworkConnector_long__Group_3_0__1__Impl ;
    public final void rule__NetworkConnector_long__Group_3_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3741:1: ( rule__NetworkConnector_long__Group_3_0__1__Impl )
            // InternalDockerCompose.g:3742:2: rule__NetworkConnector_long__Group_3_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group_3_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_0__1"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_0__1__Impl"
    // InternalDockerCompose.g:3748:1: rule__NetworkConnector_long__Group_3_0__1__Impl : ( ( rule__NetworkConnector_long__Ipv4_addressAssignment_3_0_1 ) ) ;
    public final void rule__NetworkConnector_long__Group_3_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3752:1: ( ( ( rule__NetworkConnector_long__Ipv4_addressAssignment_3_0_1 ) ) )
            // InternalDockerCompose.g:3753:1: ( ( rule__NetworkConnector_long__Ipv4_addressAssignment_3_0_1 ) )
            {
            // InternalDockerCompose.g:3753:1: ( ( rule__NetworkConnector_long__Ipv4_addressAssignment_3_0_1 ) )
            // InternalDockerCompose.g:3754:2: ( rule__NetworkConnector_long__Ipv4_addressAssignment_3_0_1 )
            {
             before(grammarAccess.getNetworkConnector_longAccess().getIpv4_addressAssignment_3_0_1()); 
            // InternalDockerCompose.g:3755:2: ( rule__NetworkConnector_long__Ipv4_addressAssignment_3_0_1 )
            // InternalDockerCompose.g:3755:3: rule__NetworkConnector_long__Ipv4_addressAssignment_3_0_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Ipv4_addressAssignment_3_0_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnector_longAccess().getIpv4_addressAssignment_3_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_0__1__Impl"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_1__0"
    // InternalDockerCompose.g:3764:1: rule__NetworkConnector_long__Group_3_1__0 : rule__NetworkConnector_long__Group_3_1__0__Impl rule__NetworkConnector_long__Group_3_1__1 ;
    public final void rule__NetworkConnector_long__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3768:1: ( rule__NetworkConnector_long__Group_3_1__0__Impl rule__NetworkConnector_long__Group_3_1__1 )
            // InternalDockerCompose.g:3769:2: rule__NetworkConnector_long__Group_3_1__0__Impl rule__NetworkConnector_long__Group_3_1__1
            {
            pushFollow(FOLLOW_10);
            rule__NetworkConnector_long__Group_3_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group_3_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_1__0"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_1__0__Impl"
    // InternalDockerCompose.g:3776:1: rule__NetworkConnector_long__Group_3_1__0__Impl : ( 'priority:' ) ;
    public final void rule__NetworkConnector_long__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3780:1: ( ( 'priority:' ) )
            // InternalDockerCompose.g:3781:1: ( 'priority:' )
            {
            // InternalDockerCompose.g:3781:1: ( 'priority:' )
            // InternalDockerCompose.g:3782:2: 'priority:'
            {
             before(grammarAccess.getNetworkConnector_longAccess().getPriorityKeyword_3_1_0()); 
            match(input,55,FOLLOW_2); 
             after(grammarAccess.getNetworkConnector_longAccess().getPriorityKeyword_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_1__0__Impl"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_1__1"
    // InternalDockerCompose.g:3791:1: rule__NetworkConnector_long__Group_3_1__1 : rule__NetworkConnector_long__Group_3_1__1__Impl ;
    public final void rule__NetworkConnector_long__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3795:1: ( rule__NetworkConnector_long__Group_3_1__1__Impl )
            // InternalDockerCompose.g:3796:2: rule__NetworkConnector_long__Group_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group_3_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_1__1"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_1__1__Impl"
    // InternalDockerCompose.g:3802:1: rule__NetworkConnector_long__Group_3_1__1__Impl : ( ( rule__NetworkConnector_long__PriorityAssignment_3_1_1 ) ) ;
    public final void rule__NetworkConnector_long__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3806:1: ( ( ( rule__NetworkConnector_long__PriorityAssignment_3_1_1 ) ) )
            // InternalDockerCompose.g:3807:1: ( ( rule__NetworkConnector_long__PriorityAssignment_3_1_1 ) )
            {
            // InternalDockerCompose.g:3807:1: ( ( rule__NetworkConnector_long__PriorityAssignment_3_1_1 ) )
            // InternalDockerCompose.g:3808:2: ( rule__NetworkConnector_long__PriorityAssignment_3_1_1 )
            {
             before(grammarAccess.getNetworkConnector_longAccess().getPriorityAssignment_3_1_1()); 
            // InternalDockerCompose.g:3809:2: ( rule__NetworkConnector_long__PriorityAssignment_3_1_1 )
            // InternalDockerCompose.g:3809:3: rule__NetworkConnector_long__PriorityAssignment_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__PriorityAssignment_3_1_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnector_longAccess().getPriorityAssignment_3_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_1__1__Impl"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_2__0"
    // InternalDockerCompose.g:3818:1: rule__NetworkConnector_long__Group_3_2__0 : rule__NetworkConnector_long__Group_3_2__0__Impl rule__NetworkConnector_long__Group_3_2__1 ;
    public final void rule__NetworkConnector_long__Group_3_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3822:1: ( rule__NetworkConnector_long__Group_3_2__0__Impl rule__NetworkConnector_long__Group_3_2__1 )
            // InternalDockerCompose.g:3823:2: rule__NetworkConnector_long__Group_3_2__0__Impl rule__NetworkConnector_long__Group_3_2__1
            {
            pushFollow(FOLLOW_13);
            rule__NetworkConnector_long__Group_3_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group_3_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_2__0"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_2__0__Impl"
    // InternalDockerCompose.g:3830:1: rule__NetworkConnector_long__Group_3_2__0__Impl : ( 'aliases:' ) ;
    public final void rule__NetworkConnector_long__Group_3_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3834:1: ( ( 'aliases:' ) )
            // InternalDockerCompose.g:3835:1: ( 'aliases:' )
            {
            // InternalDockerCompose.g:3835:1: ( 'aliases:' )
            // InternalDockerCompose.g:3836:2: 'aliases:'
            {
             before(grammarAccess.getNetworkConnector_longAccess().getAliasesKeyword_3_2_0()); 
            match(input,56,FOLLOW_2); 
             after(grammarAccess.getNetworkConnector_longAccess().getAliasesKeyword_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_2__0__Impl"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_2__1"
    // InternalDockerCompose.g:3845:1: rule__NetworkConnector_long__Group_3_2__1 : rule__NetworkConnector_long__Group_3_2__1__Impl ;
    public final void rule__NetworkConnector_long__Group_3_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3849:1: ( rule__NetworkConnector_long__Group_3_2__1__Impl )
            // InternalDockerCompose.g:3850:2: rule__NetworkConnector_long__Group_3_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group_3_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_2__1"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_2__1__Impl"
    // InternalDockerCompose.g:3856:1: rule__NetworkConnector_long__Group_3_2__1__Impl : ( ( ( rule__NetworkConnector_long__Group_3_2_1__0 ) ) ( ( rule__NetworkConnector_long__Group_3_2_1__0 )* ) ) ;
    public final void rule__NetworkConnector_long__Group_3_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3860:1: ( ( ( ( rule__NetworkConnector_long__Group_3_2_1__0 ) ) ( ( rule__NetworkConnector_long__Group_3_2_1__0 )* ) ) )
            // InternalDockerCompose.g:3861:1: ( ( ( rule__NetworkConnector_long__Group_3_2_1__0 ) ) ( ( rule__NetworkConnector_long__Group_3_2_1__0 )* ) )
            {
            // InternalDockerCompose.g:3861:1: ( ( ( rule__NetworkConnector_long__Group_3_2_1__0 ) ) ( ( rule__NetworkConnector_long__Group_3_2_1__0 )* ) )
            // InternalDockerCompose.g:3862:2: ( ( rule__NetworkConnector_long__Group_3_2_1__0 ) ) ( ( rule__NetworkConnector_long__Group_3_2_1__0 )* )
            {
            // InternalDockerCompose.g:3862:2: ( ( rule__NetworkConnector_long__Group_3_2_1__0 ) )
            // InternalDockerCompose.g:3863:3: ( rule__NetworkConnector_long__Group_3_2_1__0 )
            {
             before(grammarAccess.getNetworkConnector_longAccess().getGroup_3_2_1()); 
            // InternalDockerCompose.g:3864:3: ( rule__NetworkConnector_long__Group_3_2_1__0 )
            // InternalDockerCompose.g:3864:4: rule__NetworkConnector_long__Group_3_2_1__0
            {
            pushFollow(FOLLOW_3);
            rule__NetworkConnector_long__Group_3_2_1__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnector_longAccess().getGroup_3_2_1()); 

            }

            // InternalDockerCompose.g:3867:2: ( ( rule__NetworkConnector_long__Group_3_2_1__0 )* )
            // InternalDockerCompose.g:3868:3: ( rule__NetworkConnector_long__Group_3_2_1__0 )*
            {
             before(grammarAccess.getNetworkConnector_longAccess().getGroup_3_2_1()); 
            // InternalDockerCompose.g:3869:3: ( rule__NetworkConnector_long__Group_3_2_1__0 )*
            loop33:
            do {
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( (LA33_0==50) ) {
                    alt33=1;
                }


                switch (alt33) {
            	case 1 :
            	    // InternalDockerCompose.g:3869:4: rule__NetworkConnector_long__Group_3_2_1__0
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__NetworkConnector_long__Group_3_2_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop33;
                }
            } while (true);

             after(grammarAccess.getNetworkConnector_longAccess().getGroup_3_2_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_2__1__Impl"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_2_1__0"
    // InternalDockerCompose.g:3879:1: rule__NetworkConnector_long__Group_3_2_1__0 : rule__NetworkConnector_long__Group_3_2_1__0__Impl rule__NetworkConnector_long__Group_3_2_1__1 ;
    public final void rule__NetworkConnector_long__Group_3_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3883:1: ( rule__NetworkConnector_long__Group_3_2_1__0__Impl rule__NetworkConnector_long__Group_3_2_1__1 )
            // InternalDockerCompose.g:3884:2: rule__NetworkConnector_long__Group_3_2_1__0__Impl rule__NetworkConnector_long__Group_3_2_1__1
            {
            pushFollow(FOLLOW_6);
            rule__NetworkConnector_long__Group_3_2_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group_3_2_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_2_1__0"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_2_1__0__Impl"
    // InternalDockerCompose.g:3891:1: rule__NetworkConnector_long__Group_3_2_1__0__Impl : ( '-' ) ;
    public final void rule__NetworkConnector_long__Group_3_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3895:1: ( ( '-' ) )
            // InternalDockerCompose.g:3896:1: ( '-' )
            {
            // InternalDockerCompose.g:3896:1: ( '-' )
            // InternalDockerCompose.g:3897:2: '-'
            {
             before(grammarAccess.getNetworkConnector_longAccess().getHyphenMinusKeyword_3_2_1_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getNetworkConnector_longAccess().getHyphenMinusKeyword_3_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_2_1__0__Impl"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_2_1__1"
    // InternalDockerCompose.g:3906:1: rule__NetworkConnector_long__Group_3_2_1__1 : rule__NetworkConnector_long__Group_3_2_1__1__Impl ;
    public final void rule__NetworkConnector_long__Group_3_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3910:1: ( rule__NetworkConnector_long__Group_3_2_1__1__Impl )
            // InternalDockerCompose.g:3911:2: rule__NetworkConnector_long__Group_3_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group_3_2_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_2_1__1"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_2_1__1__Impl"
    // InternalDockerCompose.g:3917:1: rule__NetworkConnector_long__Group_3_2_1__1__Impl : ( ( rule__NetworkConnector_long__AliasesAssignment_3_2_1_1 ) ) ;
    public final void rule__NetworkConnector_long__Group_3_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3921:1: ( ( ( rule__NetworkConnector_long__AliasesAssignment_3_2_1_1 ) ) )
            // InternalDockerCompose.g:3922:1: ( ( rule__NetworkConnector_long__AliasesAssignment_3_2_1_1 ) )
            {
            // InternalDockerCompose.g:3922:1: ( ( rule__NetworkConnector_long__AliasesAssignment_3_2_1_1 ) )
            // InternalDockerCompose.g:3923:2: ( rule__NetworkConnector_long__AliasesAssignment_3_2_1_1 )
            {
             before(grammarAccess.getNetworkConnector_longAccess().getAliasesAssignment_3_2_1_1()); 
            // InternalDockerCompose.g:3924:2: ( rule__NetworkConnector_long__AliasesAssignment_3_2_1_1 )
            // InternalDockerCompose.g:3924:3: rule__NetworkConnector_long__AliasesAssignment_3_2_1_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__AliasesAssignment_3_2_1_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnector_longAccess().getAliasesAssignment_3_2_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_2_1__1__Impl"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_3__0"
    // InternalDockerCompose.g:3933:1: rule__NetworkConnector_long__Group_3_3__0 : rule__NetworkConnector_long__Group_3_3__0__Impl rule__NetworkConnector_long__Group_3_3__1 ;
    public final void rule__NetworkConnector_long__Group_3_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3937:1: ( rule__NetworkConnector_long__Group_3_3__0__Impl rule__NetworkConnector_long__Group_3_3__1 )
            // InternalDockerCompose.g:3938:2: rule__NetworkConnector_long__Group_3_3__0__Impl rule__NetworkConnector_long__Group_3_3__1
            {
            pushFollow(FOLLOW_13);
            rule__NetworkConnector_long__Group_3_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group_3_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_3__0"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_3__0__Impl"
    // InternalDockerCompose.g:3945:1: rule__NetworkConnector_long__Group_3_3__0__Impl : ( 'link_local_ips:' ) ;
    public final void rule__NetworkConnector_long__Group_3_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3949:1: ( ( 'link_local_ips:' ) )
            // InternalDockerCompose.g:3950:1: ( 'link_local_ips:' )
            {
            // InternalDockerCompose.g:3950:1: ( 'link_local_ips:' )
            // InternalDockerCompose.g:3951:2: 'link_local_ips:'
            {
             before(grammarAccess.getNetworkConnector_longAccess().getLink_local_ipsKeyword_3_3_0()); 
            match(input,57,FOLLOW_2); 
             after(grammarAccess.getNetworkConnector_longAccess().getLink_local_ipsKeyword_3_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_3__0__Impl"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_3__1"
    // InternalDockerCompose.g:3960:1: rule__NetworkConnector_long__Group_3_3__1 : rule__NetworkConnector_long__Group_3_3__1__Impl ;
    public final void rule__NetworkConnector_long__Group_3_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3964:1: ( rule__NetworkConnector_long__Group_3_3__1__Impl )
            // InternalDockerCompose.g:3965:2: rule__NetworkConnector_long__Group_3_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group_3_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_3__1"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_3__1__Impl"
    // InternalDockerCompose.g:3971:1: rule__NetworkConnector_long__Group_3_3__1__Impl : ( ( ( rule__NetworkConnector_long__Group_3_3_1__0 ) ) ( ( rule__NetworkConnector_long__Group_3_3_1__0 )* ) ) ;
    public final void rule__NetworkConnector_long__Group_3_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3975:1: ( ( ( ( rule__NetworkConnector_long__Group_3_3_1__0 ) ) ( ( rule__NetworkConnector_long__Group_3_3_1__0 )* ) ) )
            // InternalDockerCompose.g:3976:1: ( ( ( rule__NetworkConnector_long__Group_3_3_1__0 ) ) ( ( rule__NetworkConnector_long__Group_3_3_1__0 )* ) )
            {
            // InternalDockerCompose.g:3976:1: ( ( ( rule__NetworkConnector_long__Group_3_3_1__0 ) ) ( ( rule__NetworkConnector_long__Group_3_3_1__0 )* ) )
            // InternalDockerCompose.g:3977:2: ( ( rule__NetworkConnector_long__Group_3_3_1__0 ) ) ( ( rule__NetworkConnector_long__Group_3_3_1__0 )* )
            {
            // InternalDockerCompose.g:3977:2: ( ( rule__NetworkConnector_long__Group_3_3_1__0 ) )
            // InternalDockerCompose.g:3978:3: ( rule__NetworkConnector_long__Group_3_3_1__0 )
            {
             before(grammarAccess.getNetworkConnector_longAccess().getGroup_3_3_1()); 
            // InternalDockerCompose.g:3979:3: ( rule__NetworkConnector_long__Group_3_3_1__0 )
            // InternalDockerCompose.g:3979:4: rule__NetworkConnector_long__Group_3_3_1__0
            {
            pushFollow(FOLLOW_3);
            rule__NetworkConnector_long__Group_3_3_1__0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnector_longAccess().getGroup_3_3_1()); 

            }

            // InternalDockerCompose.g:3982:2: ( ( rule__NetworkConnector_long__Group_3_3_1__0 )* )
            // InternalDockerCompose.g:3983:3: ( rule__NetworkConnector_long__Group_3_3_1__0 )*
            {
             before(grammarAccess.getNetworkConnector_longAccess().getGroup_3_3_1()); 
            // InternalDockerCompose.g:3984:3: ( rule__NetworkConnector_long__Group_3_3_1__0 )*
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==50) ) {
                    alt34=1;
                }


                switch (alt34) {
            	case 1 :
            	    // InternalDockerCompose.g:3984:4: rule__NetworkConnector_long__Group_3_3_1__0
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__NetworkConnector_long__Group_3_3_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);

             after(grammarAccess.getNetworkConnector_longAccess().getGroup_3_3_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_3__1__Impl"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_3_1__0"
    // InternalDockerCompose.g:3994:1: rule__NetworkConnector_long__Group_3_3_1__0 : rule__NetworkConnector_long__Group_3_3_1__0__Impl rule__NetworkConnector_long__Group_3_3_1__1 ;
    public final void rule__NetworkConnector_long__Group_3_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:3998:1: ( rule__NetworkConnector_long__Group_3_3_1__0__Impl rule__NetworkConnector_long__Group_3_3_1__1 )
            // InternalDockerCompose.g:3999:2: rule__NetworkConnector_long__Group_3_3_1__0__Impl rule__NetworkConnector_long__Group_3_3_1__1
            {
            pushFollow(FOLLOW_18);
            rule__NetworkConnector_long__Group_3_3_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group_3_3_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_3_1__0"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_3_1__0__Impl"
    // InternalDockerCompose.g:4006:1: rule__NetworkConnector_long__Group_3_3_1__0__Impl : ( '-' ) ;
    public final void rule__NetworkConnector_long__Group_3_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4010:1: ( ( '-' ) )
            // InternalDockerCompose.g:4011:1: ( '-' )
            {
            // InternalDockerCompose.g:4011:1: ( '-' )
            // InternalDockerCompose.g:4012:2: '-'
            {
             before(grammarAccess.getNetworkConnector_longAccess().getHyphenMinusKeyword_3_3_1_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getNetworkConnector_longAccess().getHyphenMinusKeyword_3_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_3_1__0__Impl"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_3_1__1"
    // InternalDockerCompose.g:4021:1: rule__NetworkConnector_long__Group_3_3_1__1 : rule__NetworkConnector_long__Group_3_3_1__1__Impl ;
    public final void rule__NetworkConnector_long__Group_3_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4025:1: ( rule__NetworkConnector_long__Group_3_3_1__1__Impl )
            // InternalDockerCompose.g:4026:2: rule__NetworkConnector_long__Group_3_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Group_3_3_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_3_1__1"


    // $ANTLR start "rule__NetworkConnector_long__Group_3_3_1__1__Impl"
    // InternalDockerCompose.g:4032:1: rule__NetworkConnector_long__Group_3_3_1__1__Impl : ( ( rule__NetworkConnector_long__Link_local_ipsAssignment_3_3_1_1 ) ) ;
    public final void rule__NetworkConnector_long__Group_3_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4036:1: ( ( ( rule__NetworkConnector_long__Link_local_ipsAssignment_3_3_1_1 ) ) )
            // InternalDockerCompose.g:4037:1: ( ( rule__NetworkConnector_long__Link_local_ipsAssignment_3_3_1_1 ) )
            {
            // InternalDockerCompose.g:4037:1: ( ( rule__NetworkConnector_long__Link_local_ipsAssignment_3_3_1_1 ) )
            // InternalDockerCompose.g:4038:2: ( rule__NetworkConnector_long__Link_local_ipsAssignment_3_3_1_1 )
            {
             before(grammarAccess.getNetworkConnector_longAccess().getLink_local_ipsAssignment_3_3_1_1()); 
            // InternalDockerCompose.g:4039:2: ( rule__NetworkConnector_long__Link_local_ipsAssignment_3_3_1_1 )
            // InternalDockerCompose.g:4039:3: rule__NetworkConnector_long__Link_local_ipsAssignment_3_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__Link_local_ipsAssignment_3_3_1_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkConnector_longAccess().getLink_local_ipsAssignment_3_3_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Group_3_3_1__1__Impl"


    // $ANTLR start "rule__Alias__Group__0"
    // InternalDockerCompose.g:4048:1: rule__Alias__Group__0 : rule__Alias__Group__0__Impl rule__Alias__Group__1 ;
    public final void rule__Alias__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4052:1: ( rule__Alias__Group__0__Impl rule__Alias__Group__1 )
            // InternalDockerCompose.g:4053:2: rule__Alias__Group__0__Impl rule__Alias__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__Alias__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Alias__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Alias__Group__0"


    // $ANTLR start "rule__Alias__Group__0__Impl"
    // InternalDockerCompose.g:4060:1: rule__Alias__Group__0__Impl : ( () ) ;
    public final void rule__Alias__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4064:1: ( ( () ) )
            // InternalDockerCompose.g:4065:1: ( () )
            {
            // InternalDockerCompose.g:4065:1: ( () )
            // InternalDockerCompose.g:4066:2: ()
            {
             before(grammarAccess.getAliasAccess().getAliasAction_0()); 
            // InternalDockerCompose.g:4067:2: ()
            // InternalDockerCompose.g:4067:3: 
            {
            }

             after(grammarAccess.getAliasAccess().getAliasAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Alias__Group__0__Impl"


    // $ANTLR start "rule__Alias__Group__1"
    // InternalDockerCompose.g:4075:1: rule__Alias__Group__1 : rule__Alias__Group__1__Impl ;
    public final void rule__Alias__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4079:1: ( rule__Alias__Group__1__Impl )
            // InternalDockerCompose.g:4080:2: rule__Alias__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Alias__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Alias__Group__1"


    // $ANTLR start "rule__Alias__Group__1__Impl"
    // InternalDockerCompose.g:4086:1: rule__Alias__Group__1__Impl : ( ( rule__Alias__AliasAssignment_1 ) ) ;
    public final void rule__Alias__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4090:1: ( ( ( rule__Alias__AliasAssignment_1 ) ) )
            // InternalDockerCompose.g:4091:1: ( ( rule__Alias__AliasAssignment_1 ) )
            {
            // InternalDockerCompose.g:4091:1: ( ( rule__Alias__AliasAssignment_1 ) )
            // InternalDockerCompose.g:4092:2: ( rule__Alias__AliasAssignment_1 )
            {
             before(grammarAccess.getAliasAccess().getAliasAssignment_1()); 
            // InternalDockerCompose.g:4093:2: ( rule__Alias__AliasAssignment_1 )
            // InternalDockerCompose.g:4093:3: rule__Alias__AliasAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Alias__AliasAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getAliasAccess().getAliasAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Alias__Group__1__Impl"


    // $ANTLR start "rule__VolumeConnector_short__Group__0"
    // InternalDockerCompose.g:4102:1: rule__VolumeConnector_short__Group__0 : rule__VolumeConnector_short__Group__0__Impl rule__VolumeConnector_short__Group__1 ;
    public final void rule__VolumeConnector_short__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4106:1: ( rule__VolumeConnector_short__Group__0__Impl rule__VolumeConnector_short__Group__1 )
            // InternalDockerCompose.g:4107:2: rule__VolumeConnector_short__Group__0__Impl rule__VolumeConnector_short__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__VolumeConnector_short__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group__0"


    // $ANTLR start "rule__VolumeConnector_short__Group__0__Impl"
    // InternalDockerCompose.g:4114:1: rule__VolumeConnector_short__Group__0__Impl : ( () ) ;
    public final void rule__VolumeConnector_short__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4118:1: ( ( () ) )
            // InternalDockerCompose.g:4119:1: ( () )
            {
            // InternalDockerCompose.g:4119:1: ( () )
            // InternalDockerCompose.g:4120:2: ()
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getVolumeConnectorAction_0()); 
            // InternalDockerCompose.g:4121:2: ()
            // InternalDockerCompose.g:4121:3: 
            {
            }

             after(grammarAccess.getVolumeConnector_shortAccess().getVolumeConnectorAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group__0__Impl"


    // $ANTLR start "rule__VolumeConnector_short__Group__1"
    // InternalDockerCompose.g:4129:1: rule__VolumeConnector_short__Group__1 : rule__VolumeConnector_short__Group__1__Impl rule__VolumeConnector_short__Group__2 ;
    public final void rule__VolumeConnector_short__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4133:1: ( rule__VolumeConnector_short__Group__1__Impl rule__VolumeConnector_short__Group__2 )
            // InternalDockerCompose.g:4134:2: rule__VolumeConnector_short__Group__1__Impl rule__VolumeConnector_short__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__VolumeConnector_short__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group__1"


    // $ANTLR start "rule__VolumeConnector_short__Group__1__Impl"
    // InternalDockerCompose.g:4141:1: rule__VolumeConnector_short__Group__1__Impl : ( ( rule__VolumeConnector_short__VolumeAssignment_1 ) ) ;
    public final void rule__VolumeConnector_short__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4145:1: ( ( ( rule__VolumeConnector_short__VolumeAssignment_1 ) ) )
            // InternalDockerCompose.g:4146:1: ( ( rule__VolumeConnector_short__VolumeAssignment_1 ) )
            {
            // InternalDockerCompose.g:4146:1: ( ( rule__VolumeConnector_short__VolumeAssignment_1 ) )
            // InternalDockerCompose.g:4147:2: ( rule__VolumeConnector_short__VolumeAssignment_1 )
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getVolumeAssignment_1()); 
            // InternalDockerCompose.g:4148:2: ( rule__VolumeConnector_short__VolumeAssignment_1 )
            // InternalDockerCompose.g:4148:3: rule__VolumeConnector_short__VolumeAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__VolumeAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_shortAccess().getVolumeAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group__1__Impl"


    // $ANTLR start "rule__VolumeConnector_short__Group__2"
    // InternalDockerCompose.g:4156:1: rule__VolumeConnector_short__Group__2 : rule__VolumeConnector_short__Group__2__Impl rule__VolumeConnector_short__Group__3 ;
    public final void rule__VolumeConnector_short__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4160:1: ( rule__VolumeConnector_short__Group__2__Impl rule__VolumeConnector_short__Group__3 )
            // InternalDockerCompose.g:4161:2: rule__VolumeConnector_short__Group__2__Impl rule__VolumeConnector_short__Group__3
            {
            pushFollow(FOLLOW_9);
            rule__VolumeConnector_short__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group__2"


    // $ANTLR start "rule__VolumeConnector_short__Group__2__Impl"
    // InternalDockerCompose.g:4168:1: rule__VolumeConnector_short__Group__2__Impl : ( ':' ) ;
    public final void rule__VolumeConnector_short__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4172:1: ( ( ':' ) )
            // InternalDockerCompose.g:4173:1: ( ':' )
            {
            // InternalDockerCompose.g:4173:1: ( ':' )
            // InternalDockerCompose.g:4174:2: ':'
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getColonKeyword_2()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_shortAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group__2__Impl"


    // $ANTLR start "rule__VolumeConnector_short__Group__3"
    // InternalDockerCompose.g:4183:1: rule__VolumeConnector_short__Group__3 : rule__VolumeConnector_short__Group__3__Impl rule__VolumeConnector_short__Group__4 ;
    public final void rule__VolumeConnector_short__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4187:1: ( rule__VolumeConnector_short__Group__3__Impl rule__VolumeConnector_short__Group__4 )
            // InternalDockerCompose.g:4188:2: rule__VolumeConnector_short__Group__3__Impl rule__VolumeConnector_short__Group__4
            {
            pushFollow(FOLLOW_7);
            rule__VolumeConnector_short__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group__3"


    // $ANTLR start "rule__VolumeConnector_short__Group__3__Impl"
    // InternalDockerCompose.g:4195:1: rule__VolumeConnector_short__Group__3__Impl : ( ( rule__VolumeConnector_short__Container_pathAssignment_3 ) ) ;
    public final void rule__VolumeConnector_short__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4199:1: ( ( ( rule__VolumeConnector_short__Container_pathAssignment_3 ) ) )
            // InternalDockerCompose.g:4200:1: ( ( rule__VolumeConnector_short__Container_pathAssignment_3 ) )
            {
            // InternalDockerCompose.g:4200:1: ( ( rule__VolumeConnector_short__Container_pathAssignment_3 ) )
            // InternalDockerCompose.g:4201:2: ( rule__VolumeConnector_short__Container_pathAssignment_3 )
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getContainer_pathAssignment_3()); 
            // InternalDockerCompose.g:4202:2: ( rule__VolumeConnector_short__Container_pathAssignment_3 )
            // InternalDockerCompose.g:4202:3: rule__VolumeConnector_short__Container_pathAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__Container_pathAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_shortAccess().getContainer_pathAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group__3__Impl"


    // $ANTLR start "rule__VolumeConnector_short__Group__4"
    // InternalDockerCompose.g:4210:1: rule__VolumeConnector_short__Group__4 : rule__VolumeConnector_short__Group__4__Impl ;
    public final void rule__VolumeConnector_short__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4214:1: ( rule__VolumeConnector_short__Group__4__Impl )
            // InternalDockerCompose.g:4215:2: rule__VolumeConnector_short__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__Group__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group__4"


    // $ANTLR start "rule__VolumeConnector_short__Group__4__Impl"
    // InternalDockerCompose.g:4221:1: rule__VolumeConnector_short__Group__4__Impl : ( ( rule__VolumeConnector_short__Group_4__0 )? ) ;
    public final void rule__VolumeConnector_short__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4225:1: ( ( ( rule__VolumeConnector_short__Group_4__0 )? ) )
            // InternalDockerCompose.g:4226:1: ( ( rule__VolumeConnector_short__Group_4__0 )? )
            {
            // InternalDockerCompose.g:4226:1: ( ( rule__VolumeConnector_short__Group_4__0 )? )
            // InternalDockerCompose.g:4227:2: ( rule__VolumeConnector_short__Group_4__0 )?
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getGroup_4()); 
            // InternalDockerCompose.g:4228:2: ( rule__VolumeConnector_short__Group_4__0 )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==40) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // InternalDockerCompose.g:4228:3: rule__VolumeConnector_short__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_short__Group_4__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getVolumeConnector_shortAccess().getGroup_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group__4__Impl"


    // $ANTLR start "rule__VolumeConnector_short__Group_4__0"
    // InternalDockerCompose.g:4237:1: rule__VolumeConnector_short__Group_4__0 : rule__VolumeConnector_short__Group_4__0__Impl rule__VolumeConnector_short__Group_4__1 ;
    public final void rule__VolumeConnector_short__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4241:1: ( rule__VolumeConnector_short__Group_4__0__Impl rule__VolumeConnector_short__Group_4__1 )
            // InternalDockerCompose.g:4242:2: rule__VolumeConnector_short__Group_4__0__Impl rule__VolumeConnector_short__Group_4__1
            {
            pushFollow(FOLLOW_23);
            rule__VolumeConnector_short__Group_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__Group_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group_4__0"


    // $ANTLR start "rule__VolumeConnector_short__Group_4__0__Impl"
    // InternalDockerCompose.g:4249:1: rule__VolumeConnector_short__Group_4__0__Impl : ( ':' ) ;
    public final void rule__VolumeConnector_short__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4253:1: ( ( ':' ) )
            // InternalDockerCompose.g:4254:1: ( ':' )
            {
            // InternalDockerCompose.g:4254:1: ( ':' )
            // InternalDockerCompose.g:4255:2: ':'
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getColonKeyword_4_0()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_shortAccess().getColonKeyword_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group_4__0__Impl"


    // $ANTLR start "rule__VolumeConnector_short__Group_4__1"
    // InternalDockerCompose.g:4264:1: rule__VolumeConnector_short__Group_4__1 : rule__VolumeConnector_short__Group_4__1__Impl ;
    public final void rule__VolumeConnector_short__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4268:1: ( rule__VolumeConnector_short__Group_4__1__Impl )
            // InternalDockerCompose.g:4269:2: rule__VolumeConnector_short__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__Group_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group_4__1"


    // $ANTLR start "rule__VolumeConnector_short__Group_4__1__Impl"
    // InternalDockerCompose.g:4275:1: rule__VolumeConnector_short__Group_4__1__Impl : ( ( rule__VolumeConnector_short__Access_modeAssignment_4_1 ) ) ;
    public final void rule__VolumeConnector_short__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4279:1: ( ( ( rule__VolumeConnector_short__Access_modeAssignment_4_1 ) ) )
            // InternalDockerCompose.g:4280:1: ( ( rule__VolumeConnector_short__Access_modeAssignment_4_1 ) )
            {
            // InternalDockerCompose.g:4280:1: ( ( rule__VolumeConnector_short__Access_modeAssignment_4_1 ) )
            // InternalDockerCompose.g:4281:2: ( rule__VolumeConnector_short__Access_modeAssignment_4_1 )
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getAccess_modeAssignment_4_1()); 
            // InternalDockerCompose.g:4282:2: ( rule__VolumeConnector_short__Access_modeAssignment_4_1 )
            // InternalDockerCompose.g:4282:3: rule__VolumeConnector_short__Access_modeAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_short__Access_modeAssignment_4_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_shortAccess().getAccess_modeAssignment_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Group_4__1__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group__0"
    // InternalDockerCompose.g:4291:1: rule__VolumeConnector_long__Group__0 : rule__VolumeConnector_long__Group__0__Impl rule__VolumeConnector_long__Group__1 ;
    public final void rule__VolumeConnector_long__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4295:1: ( rule__VolumeConnector_long__Group__0__Impl rule__VolumeConnector_long__Group__1 )
            // InternalDockerCompose.g:4296:2: rule__VolumeConnector_long__Group__0__Impl rule__VolumeConnector_long__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__VolumeConnector_long__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group__0"


    // $ANTLR start "rule__VolumeConnector_long__Group__0__Impl"
    // InternalDockerCompose.g:4303:1: rule__VolumeConnector_long__Group__0__Impl : ( () ) ;
    public final void rule__VolumeConnector_long__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4307:1: ( ( () ) )
            // InternalDockerCompose.g:4308:1: ( () )
            {
            // InternalDockerCompose.g:4308:1: ( () )
            // InternalDockerCompose.g:4309:2: ()
            {
             before(grammarAccess.getVolumeConnector_longAccess().getVolumeConnectorAction_0()); 
            // InternalDockerCompose.g:4310:2: ()
            // InternalDockerCompose.g:4310:3: 
            {
            }

             after(grammarAccess.getVolumeConnector_longAccess().getVolumeConnectorAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group__0__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group__1"
    // InternalDockerCompose.g:4318:1: rule__VolumeConnector_long__Group__1 : rule__VolumeConnector_long__Group__1__Impl ;
    public final void rule__VolumeConnector_long__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4322:1: ( rule__VolumeConnector_long__Group__1__Impl )
            // InternalDockerCompose.g:4323:2: rule__VolumeConnector_long__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group__1"


    // $ANTLR start "rule__VolumeConnector_long__Group__1__Impl"
    // InternalDockerCompose.g:4329:1: rule__VolumeConnector_long__Group__1__Impl : ( ( rule__VolumeConnector_long__UnorderedGroup_1 ) ) ;
    public final void rule__VolumeConnector_long__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4333:1: ( ( ( rule__VolumeConnector_long__UnorderedGroup_1 ) ) )
            // InternalDockerCompose.g:4334:1: ( ( rule__VolumeConnector_long__UnorderedGroup_1 ) )
            {
            // InternalDockerCompose.g:4334:1: ( ( rule__VolumeConnector_long__UnorderedGroup_1 ) )
            // InternalDockerCompose.g:4335:2: ( rule__VolumeConnector_long__UnorderedGroup_1 )
            {
             before(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()); 
            // InternalDockerCompose.g:4336:2: ( rule__VolumeConnector_long__UnorderedGroup_1 )
            // InternalDockerCompose.g:4336:3: rule__VolumeConnector_long__UnorderedGroup_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__UnorderedGroup_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group__1__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_0__0"
    // InternalDockerCompose.g:4345:1: rule__VolumeConnector_long__Group_1_0__0 : rule__VolumeConnector_long__Group_1_0__0__Impl rule__VolumeConnector_long__Group_1_0__1 ;
    public final void rule__VolumeConnector_long__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4349:1: ( rule__VolumeConnector_long__Group_1_0__0__Impl rule__VolumeConnector_long__Group_1_0__1 )
            // InternalDockerCompose.g:4350:2: rule__VolumeConnector_long__Group_1_0__0__Impl rule__VolumeConnector_long__Group_1_0__1
            {
            pushFollow(FOLLOW_6);
            rule__VolumeConnector_long__Group_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_0__0"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_0__0__Impl"
    // InternalDockerCompose.g:4357:1: rule__VolumeConnector_long__Group_1_0__0__Impl : ( 'source:' ) ;
    public final void rule__VolumeConnector_long__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4361:1: ( ( 'source:' ) )
            // InternalDockerCompose.g:4362:1: ( 'source:' )
            {
            // InternalDockerCompose.g:4362:1: ( 'source:' )
            // InternalDockerCompose.g:4363:2: 'source:'
            {
             before(grammarAccess.getVolumeConnector_longAccess().getSourceKeyword_1_0_0()); 
            match(input,58,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_longAccess().getSourceKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_0__0__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_0__1"
    // InternalDockerCompose.g:4372:1: rule__VolumeConnector_long__Group_1_0__1 : rule__VolumeConnector_long__Group_1_0__1__Impl ;
    public final void rule__VolumeConnector_long__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4376:1: ( rule__VolumeConnector_long__Group_1_0__1__Impl )
            // InternalDockerCompose.g:4377:2: rule__VolumeConnector_long__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_0__1"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_0__1__Impl"
    // InternalDockerCompose.g:4383:1: rule__VolumeConnector_long__Group_1_0__1__Impl : ( ( rule__VolumeConnector_long__VolumeAssignment_1_0_1 ) ) ;
    public final void rule__VolumeConnector_long__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4387:1: ( ( ( rule__VolumeConnector_long__VolumeAssignment_1_0_1 ) ) )
            // InternalDockerCompose.g:4388:1: ( ( rule__VolumeConnector_long__VolumeAssignment_1_0_1 ) )
            {
            // InternalDockerCompose.g:4388:1: ( ( rule__VolumeConnector_long__VolumeAssignment_1_0_1 ) )
            // InternalDockerCompose.g:4389:2: ( rule__VolumeConnector_long__VolumeAssignment_1_0_1 )
            {
             before(grammarAccess.getVolumeConnector_longAccess().getVolumeAssignment_1_0_1()); 
            // InternalDockerCompose.g:4390:2: ( rule__VolumeConnector_long__VolumeAssignment_1_0_1 )
            // InternalDockerCompose.g:4390:3: rule__VolumeConnector_long__VolumeAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__VolumeAssignment_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_longAccess().getVolumeAssignment_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_0__1__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_1__0"
    // InternalDockerCompose.g:4399:1: rule__VolumeConnector_long__Group_1_1__0 : rule__VolumeConnector_long__Group_1_1__0__Impl rule__VolumeConnector_long__Group_1_1__1 ;
    public final void rule__VolumeConnector_long__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4403:1: ( rule__VolumeConnector_long__Group_1_1__0__Impl rule__VolumeConnector_long__Group_1_1__1 )
            // InternalDockerCompose.g:4404:2: rule__VolumeConnector_long__Group_1_1__0__Impl rule__VolumeConnector_long__Group_1_1__1
            {
            pushFollow(FOLLOW_24);
            rule__VolumeConnector_long__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_1__0"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_1__0__Impl"
    // InternalDockerCompose.g:4411:1: rule__VolumeConnector_long__Group_1_1__0__Impl : ( 'type:' ) ;
    public final void rule__VolumeConnector_long__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4415:1: ( ( 'type:' ) )
            // InternalDockerCompose.g:4416:1: ( 'type:' )
            {
            // InternalDockerCompose.g:4416:1: ( 'type:' )
            // InternalDockerCompose.g:4417:2: 'type:'
            {
             before(grammarAccess.getVolumeConnector_longAccess().getTypeKeyword_1_1_0()); 
            match(input,59,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_longAccess().getTypeKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_1__0__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_1__1"
    // InternalDockerCompose.g:4426:1: rule__VolumeConnector_long__Group_1_1__1 : rule__VolumeConnector_long__Group_1_1__1__Impl ;
    public final void rule__VolumeConnector_long__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4430:1: ( rule__VolumeConnector_long__Group_1_1__1__Impl )
            // InternalDockerCompose.g:4431:2: rule__VolumeConnector_long__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_1__1"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_1__1__Impl"
    // InternalDockerCompose.g:4437:1: rule__VolumeConnector_long__Group_1_1__1__Impl : ( ( rule__VolumeConnector_long__TypeAssignment_1_1_1 ) ) ;
    public final void rule__VolumeConnector_long__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4441:1: ( ( ( rule__VolumeConnector_long__TypeAssignment_1_1_1 ) ) )
            // InternalDockerCompose.g:4442:1: ( ( rule__VolumeConnector_long__TypeAssignment_1_1_1 ) )
            {
            // InternalDockerCompose.g:4442:1: ( ( rule__VolumeConnector_long__TypeAssignment_1_1_1 ) )
            // InternalDockerCompose.g:4443:2: ( rule__VolumeConnector_long__TypeAssignment_1_1_1 )
            {
             before(grammarAccess.getVolumeConnector_longAccess().getTypeAssignment_1_1_1()); 
            // InternalDockerCompose.g:4444:2: ( rule__VolumeConnector_long__TypeAssignment_1_1_1 )
            // InternalDockerCompose.g:4444:3: rule__VolumeConnector_long__TypeAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__TypeAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_longAccess().getTypeAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_1__1__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_2__0"
    // InternalDockerCompose.g:4453:1: rule__VolumeConnector_long__Group_1_2__0 : rule__VolumeConnector_long__Group_1_2__0__Impl rule__VolumeConnector_long__Group_1_2__1 ;
    public final void rule__VolumeConnector_long__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4457:1: ( rule__VolumeConnector_long__Group_1_2__0__Impl rule__VolumeConnector_long__Group_1_2__1 )
            // InternalDockerCompose.g:4458:2: rule__VolumeConnector_long__Group_1_2__0__Impl rule__VolumeConnector_long__Group_1_2__1
            {
            pushFollow(FOLLOW_9);
            rule__VolumeConnector_long__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_2__0"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_2__0__Impl"
    // InternalDockerCompose.g:4465:1: rule__VolumeConnector_long__Group_1_2__0__Impl : ( 'target:' ) ;
    public final void rule__VolumeConnector_long__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4469:1: ( ( 'target:' ) )
            // InternalDockerCompose.g:4470:1: ( 'target:' )
            {
            // InternalDockerCompose.g:4470:1: ( 'target:' )
            // InternalDockerCompose.g:4471:2: 'target:'
            {
             before(grammarAccess.getVolumeConnector_longAccess().getTargetKeyword_1_2_0()); 
            match(input,60,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_longAccess().getTargetKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_2__0__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_2__1"
    // InternalDockerCompose.g:4480:1: rule__VolumeConnector_long__Group_1_2__1 : rule__VolumeConnector_long__Group_1_2__1__Impl ;
    public final void rule__VolumeConnector_long__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4484:1: ( rule__VolumeConnector_long__Group_1_2__1__Impl )
            // InternalDockerCompose.g:4485:2: rule__VolumeConnector_long__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_2__1"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_2__1__Impl"
    // InternalDockerCompose.g:4491:1: rule__VolumeConnector_long__Group_1_2__1__Impl : ( ( rule__VolumeConnector_long__Container_pathAssignment_1_2_1 ) ) ;
    public final void rule__VolumeConnector_long__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4495:1: ( ( ( rule__VolumeConnector_long__Container_pathAssignment_1_2_1 ) ) )
            // InternalDockerCompose.g:4496:1: ( ( rule__VolumeConnector_long__Container_pathAssignment_1_2_1 ) )
            {
            // InternalDockerCompose.g:4496:1: ( ( rule__VolumeConnector_long__Container_pathAssignment_1_2_1 ) )
            // InternalDockerCompose.g:4497:2: ( rule__VolumeConnector_long__Container_pathAssignment_1_2_1 )
            {
             before(grammarAccess.getVolumeConnector_longAccess().getContainer_pathAssignment_1_2_1()); 
            // InternalDockerCompose.g:4498:2: ( rule__VolumeConnector_long__Container_pathAssignment_1_2_1 )
            // InternalDockerCompose.g:4498:3: rule__VolumeConnector_long__Container_pathAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Container_pathAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_longAccess().getContainer_pathAssignment_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_2__1__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_3__0"
    // InternalDockerCompose.g:4507:1: rule__VolumeConnector_long__Group_1_3__0 : rule__VolumeConnector_long__Group_1_3__0__Impl rule__VolumeConnector_long__Group_1_3__1 ;
    public final void rule__VolumeConnector_long__Group_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4511:1: ( rule__VolumeConnector_long__Group_1_3__0__Impl rule__VolumeConnector_long__Group_1_3__1 )
            // InternalDockerCompose.g:4512:2: rule__VolumeConnector_long__Group_1_3__0__Impl rule__VolumeConnector_long__Group_1_3__1
            {
            pushFollow(FOLLOW_12);
            rule__VolumeConnector_long__Group_1_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_3__0"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_3__0__Impl"
    // InternalDockerCompose.g:4519:1: rule__VolumeConnector_long__Group_1_3__0__Impl : ( 'read_only:' ) ;
    public final void rule__VolumeConnector_long__Group_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4523:1: ( ( 'read_only:' ) )
            // InternalDockerCompose.g:4524:1: ( 'read_only:' )
            {
            // InternalDockerCompose.g:4524:1: ( 'read_only:' )
            // InternalDockerCompose.g:4525:2: 'read_only:'
            {
             before(grammarAccess.getVolumeConnector_longAccess().getRead_onlyKeyword_1_3_0()); 
            match(input,48,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_longAccess().getRead_onlyKeyword_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_3__0__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_3__1"
    // InternalDockerCompose.g:4534:1: rule__VolumeConnector_long__Group_1_3__1 : rule__VolumeConnector_long__Group_1_3__1__Impl ;
    public final void rule__VolumeConnector_long__Group_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4538:1: ( rule__VolumeConnector_long__Group_1_3__1__Impl )
            // InternalDockerCompose.g:4539:2: rule__VolumeConnector_long__Group_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_3__1"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_3__1__Impl"
    // InternalDockerCompose.g:4545:1: rule__VolumeConnector_long__Group_1_3__1__Impl : ( ( rule__VolumeConnector_long__Read_onlyAssignment_1_3_1 ) ) ;
    public final void rule__VolumeConnector_long__Group_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4549:1: ( ( ( rule__VolumeConnector_long__Read_onlyAssignment_1_3_1 ) ) )
            // InternalDockerCompose.g:4550:1: ( ( rule__VolumeConnector_long__Read_onlyAssignment_1_3_1 ) )
            {
            // InternalDockerCompose.g:4550:1: ( ( rule__VolumeConnector_long__Read_onlyAssignment_1_3_1 ) )
            // InternalDockerCompose.g:4551:2: ( rule__VolumeConnector_long__Read_onlyAssignment_1_3_1 )
            {
             before(grammarAccess.getVolumeConnector_longAccess().getRead_onlyAssignment_1_3_1()); 
            // InternalDockerCompose.g:4552:2: ( rule__VolumeConnector_long__Read_onlyAssignment_1_3_1 )
            // InternalDockerCompose.g:4552:3: rule__VolumeConnector_long__Read_onlyAssignment_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Read_onlyAssignment_1_3_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_longAccess().getRead_onlyAssignment_1_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_3__1__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_4__0"
    // InternalDockerCompose.g:4561:1: rule__VolumeConnector_long__Group_1_4__0 : rule__VolumeConnector_long__Group_1_4__0__Impl rule__VolumeConnector_long__Group_1_4__1 ;
    public final void rule__VolumeConnector_long__Group_1_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4565:1: ( rule__VolumeConnector_long__Group_1_4__0__Impl rule__VolumeConnector_long__Group_1_4__1 )
            // InternalDockerCompose.g:4566:2: rule__VolumeConnector_long__Group_1_4__0__Impl rule__VolumeConnector_long__Group_1_4__1
            {
            pushFollow(FOLLOW_25);
            rule__VolumeConnector_long__Group_1_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_4__0"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_4__0__Impl"
    // InternalDockerCompose.g:4573:1: rule__VolumeConnector_long__Group_1_4__0__Impl : ( 'bind:' ) ;
    public final void rule__VolumeConnector_long__Group_1_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4577:1: ( ( 'bind:' ) )
            // InternalDockerCompose.g:4578:1: ( 'bind:' )
            {
            // InternalDockerCompose.g:4578:1: ( 'bind:' )
            // InternalDockerCompose.g:4579:2: 'bind:'
            {
             before(grammarAccess.getVolumeConnector_longAccess().getBindKeyword_1_4_0()); 
            match(input,61,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_longAccess().getBindKeyword_1_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_4__0__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_4__1"
    // InternalDockerCompose.g:4588:1: rule__VolumeConnector_long__Group_1_4__1 : rule__VolumeConnector_long__Group_1_4__1__Impl rule__VolumeConnector_long__Group_1_4__2 ;
    public final void rule__VolumeConnector_long__Group_1_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4592:1: ( rule__VolumeConnector_long__Group_1_4__1__Impl rule__VolumeConnector_long__Group_1_4__2 )
            // InternalDockerCompose.g:4593:2: rule__VolumeConnector_long__Group_1_4__1__Impl rule__VolumeConnector_long__Group_1_4__2
            {
            pushFollow(FOLLOW_26);
            rule__VolumeConnector_long__Group_1_4__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_4__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_4__1"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_4__1__Impl"
    // InternalDockerCompose.g:4600:1: rule__VolumeConnector_long__Group_1_4__1__Impl : ( 'propagation:' ) ;
    public final void rule__VolumeConnector_long__Group_1_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4604:1: ( ( 'propagation:' ) )
            // InternalDockerCompose.g:4605:1: ( 'propagation:' )
            {
            // InternalDockerCompose.g:4605:1: ( 'propagation:' )
            // InternalDockerCompose.g:4606:2: 'propagation:'
            {
             before(grammarAccess.getVolumeConnector_longAccess().getPropagationKeyword_1_4_1()); 
            match(input,62,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_longAccess().getPropagationKeyword_1_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_4__1__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_4__2"
    // InternalDockerCompose.g:4615:1: rule__VolumeConnector_long__Group_1_4__2 : rule__VolumeConnector_long__Group_1_4__2__Impl ;
    public final void rule__VolumeConnector_long__Group_1_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4619:1: ( rule__VolumeConnector_long__Group_1_4__2__Impl )
            // InternalDockerCompose.g:4620:2: rule__VolumeConnector_long__Group_1_4__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_4__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_4__2"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_4__2__Impl"
    // InternalDockerCompose.g:4626:1: rule__VolumeConnector_long__Group_1_4__2__Impl : ( ( rule__VolumeConnector_long__PropagationAssignment_1_4_2 ) ) ;
    public final void rule__VolumeConnector_long__Group_1_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4630:1: ( ( ( rule__VolumeConnector_long__PropagationAssignment_1_4_2 ) ) )
            // InternalDockerCompose.g:4631:1: ( ( rule__VolumeConnector_long__PropagationAssignment_1_4_2 ) )
            {
            // InternalDockerCompose.g:4631:1: ( ( rule__VolumeConnector_long__PropagationAssignment_1_4_2 ) )
            // InternalDockerCompose.g:4632:2: ( rule__VolumeConnector_long__PropagationAssignment_1_4_2 )
            {
             before(grammarAccess.getVolumeConnector_longAccess().getPropagationAssignment_1_4_2()); 
            // InternalDockerCompose.g:4633:2: ( rule__VolumeConnector_long__PropagationAssignment_1_4_2 )
            // InternalDockerCompose.g:4633:3: rule__VolumeConnector_long__PropagationAssignment_1_4_2
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__PropagationAssignment_1_4_2();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_longAccess().getPropagationAssignment_1_4_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_4__2__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_5__0"
    // InternalDockerCompose.g:4642:1: rule__VolumeConnector_long__Group_1_5__0 : rule__VolumeConnector_long__Group_1_5__0__Impl rule__VolumeConnector_long__Group_1_5__1 ;
    public final void rule__VolumeConnector_long__Group_1_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4646:1: ( rule__VolumeConnector_long__Group_1_5__0__Impl rule__VolumeConnector_long__Group_1_5__1 )
            // InternalDockerCompose.g:4647:2: rule__VolumeConnector_long__Group_1_5__0__Impl rule__VolumeConnector_long__Group_1_5__1
            {
            pushFollow(FOLLOW_27);
            rule__VolumeConnector_long__Group_1_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_5__0"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_5__0__Impl"
    // InternalDockerCompose.g:4654:1: rule__VolumeConnector_long__Group_1_5__0__Impl : ( 'volume:' ) ;
    public final void rule__VolumeConnector_long__Group_1_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4658:1: ( ( 'volume:' ) )
            // InternalDockerCompose.g:4659:1: ( 'volume:' )
            {
            // InternalDockerCompose.g:4659:1: ( 'volume:' )
            // InternalDockerCompose.g:4660:2: 'volume:'
            {
             before(grammarAccess.getVolumeConnector_longAccess().getVolumeKeyword_1_5_0()); 
            match(input,63,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_longAccess().getVolumeKeyword_1_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_5__0__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_5__1"
    // InternalDockerCompose.g:4669:1: rule__VolumeConnector_long__Group_1_5__1 : rule__VolumeConnector_long__Group_1_5__1__Impl rule__VolumeConnector_long__Group_1_5__2 ;
    public final void rule__VolumeConnector_long__Group_1_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4673:1: ( rule__VolumeConnector_long__Group_1_5__1__Impl rule__VolumeConnector_long__Group_1_5__2 )
            // InternalDockerCompose.g:4674:2: rule__VolumeConnector_long__Group_1_5__1__Impl rule__VolumeConnector_long__Group_1_5__2
            {
            pushFollow(FOLLOW_12);
            rule__VolumeConnector_long__Group_1_5__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_5__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_5__1"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_5__1__Impl"
    // InternalDockerCompose.g:4681:1: rule__VolumeConnector_long__Group_1_5__1__Impl : ( 'nocopy:' ) ;
    public final void rule__VolumeConnector_long__Group_1_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4685:1: ( ( 'nocopy:' ) )
            // InternalDockerCompose.g:4686:1: ( 'nocopy:' )
            {
            // InternalDockerCompose.g:4686:1: ( 'nocopy:' )
            // InternalDockerCompose.g:4687:2: 'nocopy:'
            {
             before(grammarAccess.getVolumeConnector_longAccess().getNocopyKeyword_1_5_1()); 
            match(input,64,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_longAccess().getNocopyKeyword_1_5_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_5__1__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_5__2"
    // InternalDockerCompose.g:4696:1: rule__VolumeConnector_long__Group_1_5__2 : rule__VolumeConnector_long__Group_1_5__2__Impl ;
    public final void rule__VolumeConnector_long__Group_1_5__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4700:1: ( rule__VolumeConnector_long__Group_1_5__2__Impl )
            // InternalDockerCompose.g:4701:2: rule__VolumeConnector_long__Group_1_5__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_5__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_5__2"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_5__2__Impl"
    // InternalDockerCompose.g:4707:1: rule__VolumeConnector_long__Group_1_5__2__Impl : ( ( rule__VolumeConnector_long__NocopyAssignment_1_5_2 ) ) ;
    public final void rule__VolumeConnector_long__Group_1_5__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4711:1: ( ( ( rule__VolumeConnector_long__NocopyAssignment_1_5_2 ) ) )
            // InternalDockerCompose.g:4712:1: ( ( rule__VolumeConnector_long__NocopyAssignment_1_5_2 ) )
            {
            // InternalDockerCompose.g:4712:1: ( ( rule__VolumeConnector_long__NocopyAssignment_1_5_2 ) )
            // InternalDockerCompose.g:4713:2: ( rule__VolumeConnector_long__NocopyAssignment_1_5_2 )
            {
             before(grammarAccess.getVolumeConnector_longAccess().getNocopyAssignment_1_5_2()); 
            // InternalDockerCompose.g:4714:2: ( rule__VolumeConnector_long__NocopyAssignment_1_5_2 )
            // InternalDockerCompose.g:4714:3: rule__VolumeConnector_long__NocopyAssignment_1_5_2
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__NocopyAssignment_1_5_2();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_longAccess().getNocopyAssignment_1_5_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_5__2__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_6__0"
    // InternalDockerCompose.g:4723:1: rule__VolumeConnector_long__Group_1_6__0 : rule__VolumeConnector_long__Group_1_6__0__Impl rule__VolumeConnector_long__Group_1_6__1 ;
    public final void rule__VolumeConnector_long__Group_1_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4727:1: ( rule__VolumeConnector_long__Group_1_6__0__Impl rule__VolumeConnector_long__Group_1_6__1 )
            // InternalDockerCompose.g:4728:2: rule__VolumeConnector_long__Group_1_6__0__Impl rule__VolumeConnector_long__Group_1_6__1
            {
            pushFollow(FOLLOW_28);
            rule__VolumeConnector_long__Group_1_6__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_6__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_6__0"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_6__0__Impl"
    // InternalDockerCompose.g:4735:1: rule__VolumeConnector_long__Group_1_6__0__Impl : ( 'tmpfs:' ) ;
    public final void rule__VolumeConnector_long__Group_1_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4739:1: ( ( 'tmpfs:' ) )
            // InternalDockerCompose.g:4740:1: ( 'tmpfs:' )
            {
            // InternalDockerCompose.g:4740:1: ( 'tmpfs:' )
            // InternalDockerCompose.g:4741:2: 'tmpfs:'
            {
             before(grammarAccess.getVolumeConnector_longAccess().getTmpfsKeyword_1_6_0()); 
            match(input,65,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_longAccess().getTmpfsKeyword_1_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_6__0__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_6__1"
    // InternalDockerCompose.g:4750:1: rule__VolumeConnector_long__Group_1_6__1 : rule__VolumeConnector_long__Group_1_6__1__Impl rule__VolumeConnector_long__Group_1_6__2 ;
    public final void rule__VolumeConnector_long__Group_1_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4754:1: ( rule__VolumeConnector_long__Group_1_6__1__Impl rule__VolumeConnector_long__Group_1_6__2 )
            // InternalDockerCompose.g:4755:2: rule__VolumeConnector_long__Group_1_6__1__Impl rule__VolumeConnector_long__Group_1_6__2
            {
            pushFollow(FOLLOW_10);
            rule__VolumeConnector_long__Group_1_6__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_6__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_6__1"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_6__1__Impl"
    // InternalDockerCompose.g:4762:1: rule__VolumeConnector_long__Group_1_6__1__Impl : ( 'size:' ) ;
    public final void rule__VolumeConnector_long__Group_1_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4766:1: ( ( 'size:' ) )
            // InternalDockerCompose.g:4767:1: ( 'size:' )
            {
            // InternalDockerCompose.g:4767:1: ( 'size:' )
            // InternalDockerCompose.g:4768:2: 'size:'
            {
             before(grammarAccess.getVolumeConnector_longAccess().getSizeKeyword_1_6_1()); 
            match(input,66,FOLLOW_2); 
             after(grammarAccess.getVolumeConnector_longAccess().getSizeKeyword_1_6_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_6__1__Impl"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_6__2"
    // InternalDockerCompose.g:4777:1: rule__VolumeConnector_long__Group_1_6__2 : rule__VolumeConnector_long__Group_1_6__2__Impl ;
    public final void rule__VolumeConnector_long__Group_1_6__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4781:1: ( rule__VolumeConnector_long__Group_1_6__2__Impl )
            // InternalDockerCompose.g:4782:2: rule__VolumeConnector_long__Group_1_6__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__Group_1_6__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_6__2"


    // $ANTLR start "rule__VolumeConnector_long__Group_1_6__2__Impl"
    // InternalDockerCompose.g:4788:1: rule__VolumeConnector_long__Group_1_6__2__Impl : ( ( rule__VolumeConnector_long__SizeAssignment_1_6_2 ) ) ;
    public final void rule__VolumeConnector_long__Group_1_6__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4792:1: ( ( ( rule__VolumeConnector_long__SizeAssignment_1_6_2 ) ) )
            // InternalDockerCompose.g:4793:1: ( ( rule__VolumeConnector_long__SizeAssignment_1_6_2 ) )
            {
            // InternalDockerCompose.g:4793:1: ( ( rule__VolumeConnector_long__SizeAssignment_1_6_2 ) )
            // InternalDockerCompose.g:4794:2: ( rule__VolumeConnector_long__SizeAssignment_1_6_2 )
            {
             before(grammarAccess.getVolumeConnector_longAccess().getSizeAssignment_1_6_2()); 
            // InternalDockerCompose.g:4795:2: ( rule__VolumeConnector_long__SizeAssignment_1_6_2 )
            // InternalDockerCompose.g:4795:3: rule__VolumeConnector_long__SizeAssignment_1_6_2
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__SizeAssignment_1_6_2();

            state._fsp--;


            }

             after(grammarAccess.getVolumeConnector_longAccess().getSizeAssignment_1_6_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Group_1_6__2__Impl"


    // $ANTLR start "rule__ConfigConnector_short__Group__0"
    // InternalDockerCompose.g:4804:1: rule__ConfigConnector_short__Group__0 : rule__ConfigConnector_short__Group__0__Impl rule__ConfigConnector_short__Group__1 ;
    public final void rule__ConfigConnector_short__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4808:1: ( rule__ConfigConnector_short__Group__0__Impl rule__ConfigConnector_short__Group__1 )
            // InternalDockerCompose.g:4809:2: rule__ConfigConnector_short__Group__0__Impl rule__ConfigConnector_short__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__ConfigConnector_short__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector_short__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_short__Group__0"


    // $ANTLR start "rule__ConfigConnector_short__Group__0__Impl"
    // InternalDockerCompose.g:4816:1: rule__ConfigConnector_short__Group__0__Impl : ( () ) ;
    public final void rule__ConfigConnector_short__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4820:1: ( ( () ) )
            // InternalDockerCompose.g:4821:1: ( () )
            {
            // InternalDockerCompose.g:4821:1: ( () )
            // InternalDockerCompose.g:4822:2: ()
            {
             before(grammarAccess.getConfigConnector_shortAccess().getConfigConnectorAction_0()); 
            // InternalDockerCompose.g:4823:2: ()
            // InternalDockerCompose.g:4823:3: 
            {
            }

             after(grammarAccess.getConfigConnector_shortAccess().getConfigConnectorAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_short__Group__0__Impl"


    // $ANTLR start "rule__ConfigConnector_short__Group__1"
    // InternalDockerCompose.g:4831:1: rule__ConfigConnector_short__Group__1 : rule__ConfigConnector_short__Group__1__Impl ;
    public final void rule__ConfigConnector_short__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4835:1: ( rule__ConfigConnector_short__Group__1__Impl )
            // InternalDockerCompose.g:4836:2: rule__ConfigConnector_short__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_short__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_short__Group__1"


    // $ANTLR start "rule__ConfigConnector_short__Group__1__Impl"
    // InternalDockerCompose.g:4842:1: rule__ConfigConnector_short__Group__1__Impl : ( ( rule__ConfigConnector_short__ConfigAssignment_1 ) ) ;
    public final void rule__ConfigConnector_short__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4846:1: ( ( ( rule__ConfigConnector_short__ConfigAssignment_1 ) ) )
            // InternalDockerCompose.g:4847:1: ( ( rule__ConfigConnector_short__ConfigAssignment_1 ) )
            {
            // InternalDockerCompose.g:4847:1: ( ( rule__ConfigConnector_short__ConfigAssignment_1 ) )
            // InternalDockerCompose.g:4848:2: ( rule__ConfigConnector_short__ConfigAssignment_1 )
            {
             before(grammarAccess.getConfigConnector_shortAccess().getConfigAssignment_1()); 
            // InternalDockerCompose.g:4849:2: ( rule__ConfigConnector_short__ConfigAssignment_1 )
            // InternalDockerCompose.g:4849:3: rule__ConfigConnector_short__ConfigAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_short__ConfigAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnector_shortAccess().getConfigAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_short__Group__1__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group__0"
    // InternalDockerCompose.g:4858:1: rule__ConfigConnector_long__Group__0 : rule__ConfigConnector_long__Group__0__Impl rule__ConfigConnector_long__Group__1 ;
    public final void rule__ConfigConnector_long__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4862:1: ( rule__ConfigConnector_long__Group__0__Impl rule__ConfigConnector_long__Group__1 )
            // InternalDockerCompose.g:4863:2: rule__ConfigConnector_long__Group__0__Impl rule__ConfigConnector_long__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__ConfigConnector_long__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group__0"


    // $ANTLR start "rule__ConfigConnector_long__Group__0__Impl"
    // InternalDockerCompose.g:4870:1: rule__ConfigConnector_long__Group__0__Impl : ( () ) ;
    public final void rule__ConfigConnector_long__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4874:1: ( ( () ) )
            // InternalDockerCompose.g:4875:1: ( () )
            {
            // InternalDockerCompose.g:4875:1: ( () )
            // InternalDockerCompose.g:4876:2: ()
            {
             before(grammarAccess.getConfigConnector_longAccess().getConfigConnectorAction_0()); 
            // InternalDockerCompose.g:4877:2: ()
            // InternalDockerCompose.g:4877:3: 
            {
            }

             after(grammarAccess.getConfigConnector_longAccess().getConfigConnectorAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group__0__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group__1"
    // InternalDockerCompose.g:4885:1: rule__ConfigConnector_long__Group__1 : rule__ConfigConnector_long__Group__1__Impl ;
    public final void rule__ConfigConnector_long__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4889:1: ( rule__ConfigConnector_long__Group__1__Impl )
            // InternalDockerCompose.g:4890:2: rule__ConfigConnector_long__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group__1"


    // $ANTLR start "rule__ConfigConnector_long__Group__1__Impl"
    // InternalDockerCompose.g:4896:1: rule__ConfigConnector_long__Group__1__Impl : ( ( rule__ConfigConnector_long__UnorderedGroup_1 ) ) ;
    public final void rule__ConfigConnector_long__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4900:1: ( ( ( rule__ConfigConnector_long__UnorderedGroup_1 ) ) )
            // InternalDockerCompose.g:4901:1: ( ( rule__ConfigConnector_long__UnorderedGroup_1 ) )
            {
            // InternalDockerCompose.g:4901:1: ( ( rule__ConfigConnector_long__UnorderedGroup_1 ) )
            // InternalDockerCompose.g:4902:2: ( rule__ConfigConnector_long__UnorderedGroup_1 )
            {
             before(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1()); 
            // InternalDockerCompose.g:4903:2: ( rule__ConfigConnector_long__UnorderedGroup_1 )
            // InternalDockerCompose.g:4903:3: rule__ConfigConnector_long__UnorderedGroup_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__UnorderedGroup_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group__1__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_0__0"
    // InternalDockerCompose.g:4912:1: rule__ConfigConnector_long__Group_1_0__0 : rule__ConfigConnector_long__Group_1_0__0__Impl rule__ConfigConnector_long__Group_1_0__1 ;
    public final void rule__ConfigConnector_long__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4916:1: ( rule__ConfigConnector_long__Group_1_0__0__Impl rule__ConfigConnector_long__Group_1_0__1 )
            // InternalDockerCompose.g:4917:2: rule__ConfigConnector_long__Group_1_0__0__Impl rule__ConfigConnector_long__Group_1_0__1
            {
            pushFollow(FOLLOW_6);
            rule__ConfigConnector_long__Group_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_0__0"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_0__0__Impl"
    // InternalDockerCompose.g:4924:1: rule__ConfigConnector_long__Group_1_0__0__Impl : ( 'source:' ) ;
    public final void rule__ConfigConnector_long__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4928:1: ( ( 'source:' ) )
            // InternalDockerCompose.g:4929:1: ( 'source:' )
            {
            // InternalDockerCompose.g:4929:1: ( 'source:' )
            // InternalDockerCompose.g:4930:2: 'source:'
            {
             before(grammarAccess.getConfigConnector_longAccess().getSourceKeyword_1_0_0()); 
            match(input,58,FOLLOW_2); 
             after(grammarAccess.getConfigConnector_longAccess().getSourceKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_0__0__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_0__1"
    // InternalDockerCompose.g:4939:1: rule__ConfigConnector_long__Group_1_0__1 : rule__ConfigConnector_long__Group_1_0__1__Impl ;
    public final void rule__ConfigConnector_long__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4943:1: ( rule__ConfigConnector_long__Group_1_0__1__Impl )
            // InternalDockerCompose.g:4944:2: rule__ConfigConnector_long__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_0__1"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_0__1__Impl"
    // InternalDockerCompose.g:4950:1: rule__ConfigConnector_long__Group_1_0__1__Impl : ( ( rule__ConfigConnector_long__ConfigAssignment_1_0_1 ) ) ;
    public final void rule__ConfigConnector_long__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4954:1: ( ( ( rule__ConfigConnector_long__ConfigAssignment_1_0_1 ) ) )
            // InternalDockerCompose.g:4955:1: ( ( rule__ConfigConnector_long__ConfigAssignment_1_0_1 ) )
            {
            // InternalDockerCompose.g:4955:1: ( ( rule__ConfigConnector_long__ConfigAssignment_1_0_1 ) )
            // InternalDockerCompose.g:4956:2: ( rule__ConfigConnector_long__ConfigAssignment_1_0_1 )
            {
             before(grammarAccess.getConfigConnector_longAccess().getConfigAssignment_1_0_1()); 
            // InternalDockerCompose.g:4957:2: ( rule__ConfigConnector_long__ConfigAssignment_1_0_1 )
            // InternalDockerCompose.g:4957:3: rule__ConfigConnector_long__ConfigAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__ConfigAssignment_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnector_longAccess().getConfigAssignment_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_0__1__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_1__0"
    // InternalDockerCompose.g:4966:1: rule__ConfigConnector_long__Group_1_1__0 : rule__ConfigConnector_long__Group_1_1__0__Impl rule__ConfigConnector_long__Group_1_1__1 ;
    public final void rule__ConfigConnector_long__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4970:1: ( rule__ConfigConnector_long__Group_1_1__0__Impl rule__ConfigConnector_long__Group_1_1__1 )
            // InternalDockerCompose.g:4971:2: rule__ConfigConnector_long__Group_1_1__0__Impl rule__ConfigConnector_long__Group_1_1__1
            {
            pushFollow(FOLLOW_9);
            rule__ConfigConnector_long__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_1__0"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_1__0__Impl"
    // InternalDockerCompose.g:4978:1: rule__ConfigConnector_long__Group_1_1__0__Impl : ( 'target:' ) ;
    public final void rule__ConfigConnector_long__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4982:1: ( ( 'target:' ) )
            // InternalDockerCompose.g:4983:1: ( 'target:' )
            {
            // InternalDockerCompose.g:4983:1: ( 'target:' )
            // InternalDockerCompose.g:4984:2: 'target:'
            {
             before(grammarAccess.getConfigConnector_longAccess().getTargetKeyword_1_1_0()); 
            match(input,60,FOLLOW_2); 
             after(grammarAccess.getConfigConnector_longAccess().getTargetKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_1__0__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_1__1"
    // InternalDockerCompose.g:4993:1: rule__ConfigConnector_long__Group_1_1__1 : rule__ConfigConnector_long__Group_1_1__1__Impl ;
    public final void rule__ConfigConnector_long__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:4997:1: ( rule__ConfigConnector_long__Group_1_1__1__Impl )
            // InternalDockerCompose.g:4998:2: rule__ConfigConnector_long__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_1__1"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_1__1__Impl"
    // InternalDockerCompose.g:5004:1: rule__ConfigConnector_long__Group_1_1__1__Impl : ( ( rule__ConfigConnector_long__TargetAssignment_1_1_1 ) ) ;
    public final void rule__ConfigConnector_long__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5008:1: ( ( ( rule__ConfigConnector_long__TargetAssignment_1_1_1 ) ) )
            // InternalDockerCompose.g:5009:1: ( ( rule__ConfigConnector_long__TargetAssignment_1_1_1 ) )
            {
            // InternalDockerCompose.g:5009:1: ( ( rule__ConfigConnector_long__TargetAssignment_1_1_1 ) )
            // InternalDockerCompose.g:5010:2: ( rule__ConfigConnector_long__TargetAssignment_1_1_1 )
            {
             before(grammarAccess.getConfigConnector_longAccess().getTargetAssignment_1_1_1()); 
            // InternalDockerCompose.g:5011:2: ( rule__ConfigConnector_long__TargetAssignment_1_1_1 )
            // InternalDockerCompose.g:5011:3: rule__ConfigConnector_long__TargetAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__TargetAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnector_longAccess().getTargetAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_1__1__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_2__0"
    // InternalDockerCompose.g:5020:1: rule__ConfigConnector_long__Group_1_2__0 : rule__ConfigConnector_long__Group_1_2__0__Impl rule__ConfigConnector_long__Group_1_2__1 ;
    public final void rule__ConfigConnector_long__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5024:1: ( rule__ConfigConnector_long__Group_1_2__0__Impl rule__ConfigConnector_long__Group_1_2__1 )
            // InternalDockerCompose.g:5025:2: rule__ConfigConnector_long__Group_1_2__0__Impl rule__ConfigConnector_long__Group_1_2__1
            {
            pushFollow(FOLLOW_29);
            rule__ConfigConnector_long__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_2__0"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_2__0__Impl"
    // InternalDockerCompose.g:5032:1: rule__ConfigConnector_long__Group_1_2__0__Impl : ( 'uid:' ) ;
    public final void rule__ConfigConnector_long__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5036:1: ( ( 'uid:' ) )
            // InternalDockerCompose.g:5037:1: ( 'uid:' )
            {
            // InternalDockerCompose.g:5037:1: ( 'uid:' )
            // InternalDockerCompose.g:5038:2: 'uid:'
            {
             before(grammarAccess.getConfigConnector_longAccess().getUidKeyword_1_2_0()); 
            match(input,67,FOLLOW_2); 
             after(grammarAccess.getConfigConnector_longAccess().getUidKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_2__0__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_2__1"
    // InternalDockerCompose.g:5047:1: rule__ConfigConnector_long__Group_1_2__1 : rule__ConfigConnector_long__Group_1_2__1__Impl ;
    public final void rule__ConfigConnector_long__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5051:1: ( rule__ConfigConnector_long__Group_1_2__1__Impl )
            // InternalDockerCompose.g:5052:2: rule__ConfigConnector_long__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_2__1"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_2__1__Impl"
    // InternalDockerCompose.g:5058:1: rule__ConfigConnector_long__Group_1_2__1__Impl : ( ( rule__ConfigConnector_long__UidAssignment_1_2_1 ) ) ;
    public final void rule__ConfigConnector_long__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5062:1: ( ( ( rule__ConfigConnector_long__UidAssignment_1_2_1 ) ) )
            // InternalDockerCompose.g:5063:1: ( ( rule__ConfigConnector_long__UidAssignment_1_2_1 ) )
            {
            // InternalDockerCompose.g:5063:1: ( ( rule__ConfigConnector_long__UidAssignment_1_2_1 ) )
            // InternalDockerCompose.g:5064:2: ( rule__ConfigConnector_long__UidAssignment_1_2_1 )
            {
             before(grammarAccess.getConfigConnector_longAccess().getUidAssignment_1_2_1()); 
            // InternalDockerCompose.g:5065:2: ( rule__ConfigConnector_long__UidAssignment_1_2_1 )
            // InternalDockerCompose.g:5065:3: rule__ConfigConnector_long__UidAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__UidAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnector_longAccess().getUidAssignment_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_2__1__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_3__0"
    // InternalDockerCompose.g:5074:1: rule__ConfigConnector_long__Group_1_3__0 : rule__ConfigConnector_long__Group_1_3__0__Impl rule__ConfigConnector_long__Group_1_3__1 ;
    public final void rule__ConfigConnector_long__Group_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5078:1: ( rule__ConfigConnector_long__Group_1_3__0__Impl rule__ConfigConnector_long__Group_1_3__1 )
            // InternalDockerCompose.g:5079:2: rule__ConfigConnector_long__Group_1_3__0__Impl rule__ConfigConnector_long__Group_1_3__1
            {
            pushFollow(FOLLOW_29);
            rule__ConfigConnector_long__Group_1_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group_1_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_3__0"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_3__0__Impl"
    // InternalDockerCompose.g:5086:1: rule__ConfigConnector_long__Group_1_3__0__Impl : ( 'gid:' ) ;
    public final void rule__ConfigConnector_long__Group_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5090:1: ( ( 'gid:' ) )
            // InternalDockerCompose.g:5091:1: ( 'gid:' )
            {
            // InternalDockerCompose.g:5091:1: ( 'gid:' )
            // InternalDockerCompose.g:5092:2: 'gid:'
            {
             before(grammarAccess.getConfigConnector_longAccess().getGidKeyword_1_3_0()); 
            match(input,68,FOLLOW_2); 
             after(grammarAccess.getConfigConnector_longAccess().getGidKeyword_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_3__0__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_3__1"
    // InternalDockerCompose.g:5101:1: rule__ConfigConnector_long__Group_1_3__1 : rule__ConfigConnector_long__Group_1_3__1__Impl ;
    public final void rule__ConfigConnector_long__Group_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5105:1: ( rule__ConfigConnector_long__Group_1_3__1__Impl )
            // InternalDockerCompose.g:5106:2: rule__ConfigConnector_long__Group_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group_1_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_3__1"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_3__1__Impl"
    // InternalDockerCompose.g:5112:1: rule__ConfigConnector_long__Group_1_3__1__Impl : ( ( rule__ConfigConnector_long__GidAssignment_1_3_1 ) ) ;
    public final void rule__ConfigConnector_long__Group_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5116:1: ( ( ( rule__ConfigConnector_long__GidAssignment_1_3_1 ) ) )
            // InternalDockerCompose.g:5117:1: ( ( rule__ConfigConnector_long__GidAssignment_1_3_1 ) )
            {
            // InternalDockerCompose.g:5117:1: ( ( rule__ConfigConnector_long__GidAssignment_1_3_1 ) )
            // InternalDockerCompose.g:5118:2: ( rule__ConfigConnector_long__GidAssignment_1_3_1 )
            {
             before(grammarAccess.getConfigConnector_longAccess().getGidAssignment_1_3_1()); 
            // InternalDockerCompose.g:5119:2: ( rule__ConfigConnector_long__GidAssignment_1_3_1 )
            // InternalDockerCompose.g:5119:3: rule__ConfigConnector_long__GidAssignment_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__GidAssignment_1_3_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnector_longAccess().getGidAssignment_1_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_3__1__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_4__0"
    // InternalDockerCompose.g:5128:1: rule__ConfigConnector_long__Group_1_4__0 : rule__ConfigConnector_long__Group_1_4__0__Impl rule__ConfigConnector_long__Group_1_4__1 ;
    public final void rule__ConfigConnector_long__Group_1_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5132:1: ( rule__ConfigConnector_long__Group_1_4__0__Impl rule__ConfigConnector_long__Group_1_4__1 )
            // InternalDockerCompose.g:5133:2: rule__ConfigConnector_long__Group_1_4__0__Impl rule__ConfigConnector_long__Group_1_4__1
            {
            pushFollow(FOLLOW_10);
            rule__ConfigConnector_long__Group_1_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group_1_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_4__0"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_4__0__Impl"
    // InternalDockerCompose.g:5140:1: rule__ConfigConnector_long__Group_1_4__0__Impl : ( 'mode:' ) ;
    public final void rule__ConfigConnector_long__Group_1_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5144:1: ( ( 'mode:' ) )
            // InternalDockerCompose.g:5145:1: ( 'mode:' )
            {
            // InternalDockerCompose.g:5145:1: ( 'mode:' )
            // InternalDockerCompose.g:5146:2: 'mode:'
            {
             before(grammarAccess.getConfigConnector_longAccess().getModeKeyword_1_4_0()); 
            match(input,69,FOLLOW_2); 
             after(grammarAccess.getConfigConnector_longAccess().getModeKeyword_1_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_4__0__Impl"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_4__1"
    // InternalDockerCompose.g:5155:1: rule__ConfigConnector_long__Group_1_4__1 : rule__ConfigConnector_long__Group_1_4__1__Impl ;
    public final void rule__ConfigConnector_long__Group_1_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5159:1: ( rule__ConfigConnector_long__Group_1_4__1__Impl )
            // InternalDockerCompose.g:5160:2: rule__ConfigConnector_long__Group_1_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__Group_1_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_4__1"


    // $ANTLR start "rule__ConfigConnector_long__Group_1_4__1__Impl"
    // InternalDockerCompose.g:5166:1: rule__ConfigConnector_long__Group_1_4__1__Impl : ( ( rule__ConfigConnector_long__ModeAssignment_1_4_1 ) ) ;
    public final void rule__ConfigConnector_long__Group_1_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5170:1: ( ( ( rule__ConfigConnector_long__ModeAssignment_1_4_1 ) ) )
            // InternalDockerCompose.g:5171:1: ( ( rule__ConfigConnector_long__ModeAssignment_1_4_1 ) )
            {
            // InternalDockerCompose.g:5171:1: ( ( rule__ConfigConnector_long__ModeAssignment_1_4_1 ) )
            // InternalDockerCompose.g:5172:2: ( rule__ConfigConnector_long__ModeAssignment_1_4_1 )
            {
             before(grammarAccess.getConfigConnector_longAccess().getModeAssignment_1_4_1()); 
            // InternalDockerCompose.g:5173:2: ( rule__ConfigConnector_long__ModeAssignment_1_4_1 )
            // InternalDockerCompose.g:5173:3: rule__ConfigConnector_long__ModeAssignment_1_4_1
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__ModeAssignment_1_4_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigConnector_longAccess().getModeAssignment_1_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__Group_1_4__1__Impl"


    // $ANTLR start "rule__SecretConnector_short__Group__0"
    // InternalDockerCompose.g:5182:1: rule__SecretConnector_short__Group__0 : rule__SecretConnector_short__Group__0__Impl rule__SecretConnector_short__Group__1 ;
    public final void rule__SecretConnector_short__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5186:1: ( rule__SecretConnector_short__Group__0__Impl rule__SecretConnector_short__Group__1 )
            // InternalDockerCompose.g:5187:2: rule__SecretConnector_short__Group__0__Impl rule__SecretConnector_short__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__SecretConnector_short__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector_short__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_short__Group__0"


    // $ANTLR start "rule__SecretConnector_short__Group__0__Impl"
    // InternalDockerCompose.g:5194:1: rule__SecretConnector_short__Group__0__Impl : ( () ) ;
    public final void rule__SecretConnector_short__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5198:1: ( ( () ) )
            // InternalDockerCompose.g:5199:1: ( () )
            {
            // InternalDockerCompose.g:5199:1: ( () )
            // InternalDockerCompose.g:5200:2: ()
            {
             before(grammarAccess.getSecretConnector_shortAccess().getSecretConnectorAction_0()); 
            // InternalDockerCompose.g:5201:2: ()
            // InternalDockerCompose.g:5201:3: 
            {
            }

             after(grammarAccess.getSecretConnector_shortAccess().getSecretConnectorAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_short__Group__0__Impl"


    // $ANTLR start "rule__SecretConnector_short__Group__1"
    // InternalDockerCompose.g:5209:1: rule__SecretConnector_short__Group__1 : rule__SecretConnector_short__Group__1__Impl ;
    public final void rule__SecretConnector_short__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5213:1: ( rule__SecretConnector_short__Group__1__Impl )
            // InternalDockerCompose.g:5214:2: rule__SecretConnector_short__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_short__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_short__Group__1"


    // $ANTLR start "rule__SecretConnector_short__Group__1__Impl"
    // InternalDockerCompose.g:5220:1: rule__SecretConnector_short__Group__1__Impl : ( ( rule__SecretConnector_short__SecretAssignment_1 ) ) ;
    public final void rule__SecretConnector_short__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5224:1: ( ( ( rule__SecretConnector_short__SecretAssignment_1 ) ) )
            // InternalDockerCompose.g:5225:1: ( ( rule__SecretConnector_short__SecretAssignment_1 ) )
            {
            // InternalDockerCompose.g:5225:1: ( ( rule__SecretConnector_short__SecretAssignment_1 ) )
            // InternalDockerCompose.g:5226:2: ( rule__SecretConnector_short__SecretAssignment_1 )
            {
             before(grammarAccess.getSecretConnector_shortAccess().getSecretAssignment_1()); 
            // InternalDockerCompose.g:5227:2: ( rule__SecretConnector_short__SecretAssignment_1 )
            // InternalDockerCompose.g:5227:3: rule__SecretConnector_short__SecretAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_short__SecretAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnector_shortAccess().getSecretAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_short__Group__1__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group__0"
    // InternalDockerCompose.g:5236:1: rule__SecretConnector_long__Group__0 : rule__SecretConnector_long__Group__0__Impl rule__SecretConnector_long__Group__1 ;
    public final void rule__SecretConnector_long__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5240:1: ( rule__SecretConnector_long__Group__0__Impl rule__SecretConnector_long__Group__1 )
            // InternalDockerCompose.g:5241:2: rule__SecretConnector_long__Group__0__Impl rule__SecretConnector_long__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__SecretConnector_long__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group__0"


    // $ANTLR start "rule__SecretConnector_long__Group__0__Impl"
    // InternalDockerCompose.g:5248:1: rule__SecretConnector_long__Group__0__Impl : ( () ) ;
    public final void rule__SecretConnector_long__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5252:1: ( ( () ) )
            // InternalDockerCompose.g:5253:1: ( () )
            {
            // InternalDockerCompose.g:5253:1: ( () )
            // InternalDockerCompose.g:5254:2: ()
            {
             before(grammarAccess.getSecretConnector_longAccess().getSecretConnectorAction_0()); 
            // InternalDockerCompose.g:5255:2: ()
            // InternalDockerCompose.g:5255:3: 
            {
            }

             after(grammarAccess.getSecretConnector_longAccess().getSecretConnectorAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group__0__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group__1"
    // InternalDockerCompose.g:5263:1: rule__SecretConnector_long__Group__1 : rule__SecretConnector_long__Group__1__Impl ;
    public final void rule__SecretConnector_long__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5267:1: ( rule__SecretConnector_long__Group__1__Impl )
            // InternalDockerCompose.g:5268:2: rule__SecretConnector_long__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group__1"


    // $ANTLR start "rule__SecretConnector_long__Group__1__Impl"
    // InternalDockerCompose.g:5274:1: rule__SecretConnector_long__Group__1__Impl : ( ( rule__SecretConnector_long__UnorderedGroup_1 ) ) ;
    public final void rule__SecretConnector_long__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5278:1: ( ( ( rule__SecretConnector_long__UnorderedGroup_1 ) ) )
            // InternalDockerCompose.g:5279:1: ( ( rule__SecretConnector_long__UnorderedGroup_1 ) )
            {
            // InternalDockerCompose.g:5279:1: ( ( rule__SecretConnector_long__UnorderedGroup_1 ) )
            // InternalDockerCompose.g:5280:2: ( rule__SecretConnector_long__UnorderedGroup_1 )
            {
             before(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1()); 
            // InternalDockerCompose.g:5281:2: ( rule__SecretConnector_long__UnorderedGroup_1 )
            // InternalDockerCompose.g:5281:3: rule__SecretConnector_long__UnorderedGroup_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__UnorderedGroup_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group__1__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group_1_0__0"
    // InternalDockerCompose.g:5290:1: rule__SecretConnector_long__Group_1_0__0 : rule__SecretConnector_long__Group_1_0__0__Impl rule__SecretConnector_long__Group_1_0__1 ;
    public final void rule__SecretConnector_long__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5294:1: ( rule__SecretConnector_long__Group_1_0__0__Impl rule__SecretConnector_long__Group_1_0__1 )
            // InternalDockerCompose.g:5295:2: rule__SecretConnector_long__Group_1_0__0__Impl rule__SecretConnector_long__Group_1_0__1
            {
            pushFollow(FOLLOW_6);
            rule__SecretConnector_long__Group_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_0__0"


    // $ANTLR start "rule__SecretConnector_long__Group_1_0__0__Impl"
    // InternalDockerCompose.g:5302:1: rule__SecretConnector_long__Group_1_0__0__Impl : ( 'source:' ) ;
    public final void rule__SecretConnector_long__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5306:1: ( ( 'source:' ) )
            // InternalDockerCompose.g:5307:1: ( 'source:' )
            {
            // InternalDockerCompose.g:5307:1: ( 'source:' )
            // InternalDockerCompose.g:5308:2: 'source:'
            {
             before(grammarAccess.getSecretConnector_longAccess().getSourceKeyword_1_0_0()); 
            match(input,58,FOLLOW_2); 
             after(grammarAccess.getSecretConnector_longAccess().getSourceKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_0__0__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group_1_0__1"
    // InternalDockerCompose.g:5317:1: rule__SecretConnector_long__Group_1_0__1 : rule__SecretConnector_long__Group_1_0__1__Impl ;
    public final void rule__SecretConnector_long__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5321:1: ( rule__SecretConnector_long__Group_1_0__1__Impl )
            // InternalDockerCompose.g:5322:2: rule__SecretConnector_long__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_0__1"


    // $ANTLR start "rule__SecretConnector_long__Group_1_0__1__Impl"
    // InternalDockerCompose.g:5328:1: rule__SecretConnector_long__Group_1_0__1__Impl : ( ( rule__SecretConnector_long__SecretAssignment_1_0_1 ) ) ;
    public final void rule__SecretConnector_long__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5332:1: ( ( ( rule__SecretConnector_long__SecretAssignment_1_0_1 ) ) )
            // InternalDockerCompose.g:5333:1: ( ( rule__SecretConnector_long__SecretAssignment_1_0_1 ) )
            {
            // InternalDockerCompose.g:5333:1: ( ( rule__SecretConnector_long__SecretAssignment_1_0_1 ) )
            // InternalDockerCompose.g:5334:2: ( rule__SecretConnector_long__SecretAssignment_1_0_1 )
            {
             before(grammarAccess.getSecretConnector_longAccess().getSecretAssignment_1_0_1()); 
            // InternalDockerCompose.g:5335:2: ( rule__SecretConnector_long__SecretAssignment_1_0_1 )
            // InternalDockerCompose.g:5335:3: rule__SecretConnector_long__SecretAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__SecretAssignment_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnector_longAccess().getSecretAssignment_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_0__1__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group_1_1__0"
    // InternalDockerCompose.g:5344:1: rule__SecretConnector_long__Group_1_1__0 : rule__SecretConnector_long__Group_1_1__0__Impl rule__SecretConnector_long__Group_1_1__1 ;
    public final void rule__SecretConnector_long__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5348:1: ( rule__SecretConnector_long__Group_1_1__0__Impl rule__SecretConnector_long__Group_1_1__1 )
            // InternalDockerCompose.g:5349:2: rule__SecretConnector_long__Group_1_1__0__Impl rule__SecretConnector_long__Group_1_1__1
            {
            pushFollow(FOLLOW_9);
            rule__SecretConnector_long__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_1__0"


    // $ANTLR start "rule__SecretConnector_long__Group_1_1__0__Impl"
    // InternalDockerCompose.g:5356:1: rule__SecretConnector_long__Group_1_1__0__Impl : ( 'target:' ) ;
    public final void rule__SecretConnector_long__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5360:1: ( ( 'target:' ) )
            // InternalDockerCompose.g:5361:1: ( 'target:' )
            {
            // InternalDockerCompose.g:5361:1: ( 'target:' )
            // InternalDockerCompose.g:5362:2: 'target:'
            {
             before(grammarAccess.getSecretConnector_longAccess().getTargetKeyword_1_1_0()); 
            match(input,60,FOLLOW_2); 
             after(grammarAccess.getSecretConnector_longAccess().getTargetKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_1__0__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group_1_1__1"
    // InternalDockerCompose.g:5371:1: rule__SecretConnector_long__Group_1_1__1 : rule__SecretConnector_long__Group_1_1__1__Impl ;
    public final void rule__SecretConnector_long__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5375:1: ( rule__SecretConnector_long__Group_1_1__1__Impl )
            // InternalDockerCompose.g:5376:2: rule__SecretConnector_long__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_1__1"


    // $ANTLR start "rule__SecretConnector_long__Group_1_1__1__Impl"
    // InternalDockerCompose.g:5382:1: rule__SecretConnector_long__Group_1_1__1__Impl : ( ( rule__SecretConnector_long__TargetAssignment_1_1_1 ) ) ;
    public final void rule__SecretConnector_long__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5386:1: ( ( ( rule__SecretConnector_long__TargetAssignment_1_1_1 ) ) )
            // InternalDockerCompose.g:5387:1: ( ( rule__SecretConnector_long__TargetAssignment_1_1_1 ) )
            {
            // InternalDockerCompose.g:5387:1: ( ( rule__SecretConnector_long__TargetAssignment_1_1_1 ) )
            // InternalDockerCompose.g:5388:2: ( rule__SecretConnector_long__TargetAssignment_1_1_1 )
            {
             before(grammarAccess.getSecretConnector_longAccess().getTargetAssignment_1_1_1()); 
            // InternalDockerCompose.g:5389:2: ( rule__SecretConnector_long__TargetAssignment_1_1_1 )
            // InternalDockerCompose.g:5389:3: rule__SecretConnector_long__TargetAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__TargetAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnector_longAccess().getTargetAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_1__1__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group_1_2__0"
    // InternalDockerCompose.g:5398:1: rule__SecretConnector_long__Group_1_2__0 : rule__SecretConnector_long__Group_1_2__0__Impl rule__SecretConnector_long__Group_1_2__1 ;
    public final void rule__SecretConnector_long__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5402:1: ( rule__SecretConnector_long__Group_1_2__0__Impl rule__SecretConnector_long__Group_1_2__1 )
            // InternalDockerCompose.g:5403:2: rule__SecretConnector_long__Group_1_2__0__Impl rule__SecretConnector_long__Group_1_2__1
            {
            pushFollow(FOLLOW_29);
            rule__SecretConnector_long__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_2__0"


    // $ANTLR start "rule__SecretConnector_long__Group_1_2__0__Impl"
    // InternalDockerCompose.g:5410:1: rule__SecretConnector_long__Group_1_2__0__Impl : ( 'uid:' ) ;
    public final void rule__SecretConnector_long__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5414:1: ( ( 'uid:' ) )
            // InternalDockerCompose.g:5415:1: ( 'uid:' )
            {
            // InternalDockerCompose.g:5415:1: ( 'uid:' )
            // InternalDockerCompose.g:5416:2: 'uid:'
            {
             before(grammarAccess.getSecretConnector_longAccess().getUidKeyword_1_2_0()); 
            match(input,67,FOLLOW_2); 
             after(grammarAccess.getSecretConnector_longAccess().getUidKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_2__0__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group_1_2__1"
    // InternalDockerCompose.g:5425:1: rule__SecretConnector_long__Group_1_2__1 : rule__SecretConnector_long__Group_1_2__1__Impl ;
    public final void rule__SecretConnector_long__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5429:1: ( rule__SecretConnector_long__Group_1_2__1__Impl )
            // InternalDockerCompose.g:5430:2: rule__SecretConnector_long__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_2__1"


    // $ANTLR start "rule__SecretConnector_long__Group_1_2__1__Impl"
    // InternalDockerCompose.g:5436:1: rule__SecretConnector_long__Group_1_2__1__Impl : ( ( rule__SecretConnector_long__UidAssignment_1_2_1 ) ) ;
    public final void rule__SecretConnector_long__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5440:1: ( ( ( rule__SecretConnector_long__UidAssignment_1_2_1 ) ) )
            // InternalDockerCompose.g:5441:1: ( ( rule__SecretConnector_long__UidAssignment_1_2_1 ) )
            {
            // InternalDockerCompose.g:5441:1: ( ( rule__SecretConnector_long__UidAssignment_1_2_1 ) )
            // InternalDockerCompose.g:5442:2: ( rule__SecretConnector_long__UidAssignment_1_2_1 )
            {
             before(grammarAccess.getSecretConnector_longAccess().getUidAssignment_1_2_1()); 
            // InternalDockerCompose.g:5443:2: ( rule__SecretConnector_long__UidAssignment_1_2_1 )
            // InternalDockerCompose.g:5443:3: rule__SecretConnector_long__UidAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__UidAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnector_longAccess().getUidAssignment_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_2__1__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group_1_3__0"
    // InternalDockerCompose.g:5452:1: rule__SecretConnector_long__Group_1_3__0 : rule__SecretConnector_long__Group_1_3__0__Impl rule__SecretConnector_long__Group_1_3__1 ;
    public final void rule__SecretConnector_long__Group_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5456:1: ( rule__SecretConnector_long__Group_1_3__0__Impl rule__SecretConnector_long__Group_1_3__1 )
            // InternalDockerCompose.g:5457:2: rule__SecretConnector_long__Group_1_3__0__Impl rule__SecretConnector_long__Group_1_3__1
            {
            pushFollow(FOLLOW_29);
            rule__SecretConnector_long__Group_1_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group_1_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_3__0"


    // $ANTLR start "rule__SecretConnector_long__Group_1_3__0__Impl"
    // InternalDockerCompose.g:5464:1: rule__SecretConnector_long__Group_1_3__0__Impl : ( 'gid:' ) ;
    public final void rule__SecretConnector_long__Group_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5468:1: ( ( 'gid:' ) )
            // InternalDockerCompose.g:5469:1: ( 'gid:' )
            {
            // InternalDockerCompose.g:5469:1: ( 'gid:' )
            // InternalDockerCompose.g:5470:2: 'gid:'
            {
             before(grammarAccess.getSecretConnector_longAccess().getGidKeyword_1_3_0()); 
            match(input,68,FOLLOW_2); 
             after(grammarAccess.getSecretConnector_longAccess().getGidKeyword_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_3__0__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group_1_3__1"
    // InternalDockerCompose.g:5479:1: rule__SecretConnector_long__Group_1_3__1 : rule__SecretConnector_long__Group_1_3__1__Impl ;
    public final void rule__SecretConnector_long__Group_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5483:1: ( rule__SecretConnector_long__Group_1_3__1__Impl )
            // InternalDockerCompose.g:5484:2: rule__SecretConnector_long__Group_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group_1_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_3__1"


    // $ANTLR start "rule__SecretConnector_long__Group_1_3__1__Impl"
    // InternalDockerCompose.g:5490:1: rule__SecretConnector_long__Group_1_3__1__Impl : ( ( rule__SecretConnector_long__GidAssignment_1_3_1 ) ) ;
    public final void rule__SecretConnector_long__Group_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5494:1: ( ( ( rule__SecretConnector_long__GidAssignment_1_3_1 ) ) )
            // InternalDockerCompose.g:5495:1: ( ( rule__SecretConnector_long__GidAssignment_1_3_1 ) )
            {
            // InternalDockerCompose.g:5495:1: ( ( rule__SecretConnector_long__GidAssignment_1_3_1 ) )
            // InternalDockerCompose.g:5496:2: ( rule__SecretConnector_long__GidAssignment_1_3_1 )
            {
             before(grammarAccess.getSecretConnector_longAccess().getGidAssignment_1_3_1()); 
            // InternalDockerCompose.g:5497:2: ( rule__SecretConnector_long__GidAssignment_1_3_1 )
            // InternalDockerCompose.g:5497:3: rule__SecretConnector_long__GidAssignment_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__GidAssignment_1_3_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnector_longAccess().getGidAssignment_1_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_3__1__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group_1_4__0"
    // InternalDockerCompose.g:5506:1: rule__SecretConnector_long__Group_1_4__0 : rule__SecretConnector_long__Group_1_4__0__Impl rule__SecretConnector_long__Group_1_4__1 ;
    public final void rule__SecretConnector_long__Group_1_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5510:1: ( rule__SecretConnector_long__Group_1_4__0__Impl rule__SecretConnector_long__Group_1_4__1 )
            // InternalDockerCompose.g:5511:2: rule__SecretConnector_long__Group_1_4__0__Impl rule__SecretConnector_long__Group_1_4__1
            {
            pushFollow(FOLLOW_10);
            rule__SecretConnector_long__Group_1_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group_1_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_4__0"


    // $ANTLR start "rule__SecretConnector_long__Group_1_4__0__Impl"
    // InternalDockerCompose.g:5518:1: rule__SecretConnector_long__Group_1_4__0__Impl : ( 'mode:' ) ;
    public final void rule__SecretConnector_long__Group_1_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5522:1: ( ( 'mode:' ) )
            // InternalDockerCompose.g:5523:1: ( 'mode:' )
            {
            // InternalDockerCompose.g:5523:1: ( 'mode:' )
            // InternalDockerCompose.g:5524:2: 'mode:'
            {
             before(grammarAccess.getSecretConnector_longAccess().getModeKeyword_1_4_0()); 
            match(input,69,FOLLOW_2); 
             after(grammarAccess.getSecretConnector_longAccess().getModeKeyword_1_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_4__0__Impl"


    // $ANTLR start "rule__SecretConnector_long__Group_1_4__1"
    // InternalDockerCompose.g:5533:1: rule__SecretConnector_long__Group_1_4__1 : rule__SecretConnector_long__Group_1_4__1__Impl ;
    public final void rule__SecretConnector_long__Group_1_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5537:1: ( rule__SecretConnector_long__Group_1_4__1__Impl )
            // InternalDockerCompose.g:5538:2: rule__SecretConnector_long__Group_1_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__Group_1_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_4__1"


    // $ANTLR start "rule__SecretConnector_long__Group_1_4__1__Impl"
    // InternalDockerCompose.g:5544:1: rule__SecretConnector_long__Group_1_4__1__Impl : ( ( rule__SecretConnector_long__ModeAssignment_1_4_1 ) ) ;
    public final void rule__SecretConnector_long__Group_1_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5548:1: ( ( ( rule__SecretConnector_long__ModeAssignment_1_4_1 ) ) )
            // InternalDockerCompose.g:5549:1: ( ( rule__SecretConnector_long__ModeAssignment_1_4_1 ) )
            {
            // InternalDockerCompose.g:5549:1: ( ( rule__SecretConnector_long__ModeAssignment_1_4_1 ) )
            // InternalDockerCompose.g:5550:2: ( rule__SecretConnector_long__ModeAssignment_1_4_1 )
            {
             before(grammarAccess.getSecretConnector_longAccess().getModeAssignment_1_4_1()); 
            // InternalDockerCompose.g:5551:2: ( rule__SecretConnector_long__ModeAssignment_1_4_1 )
            // InternalDockerCompose.g:5551:3: rule__SecretConnector_long__ModeAssignment_1_4_1
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__ModeAssignment_1_4_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretConnector_longAccess().getModeAssignment_1_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__Group_1_4__1__Impl"


    // $ANTLR start "rule__Network__Group__0"
    // InternalDockerCompose.g:5560:1: rule__Network__Group__0 : rule__Network__Group__0__Impl rule__Network__Group__1 ;
    public final void rule__Network__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5564:1: ( rule__Network__Group__0__Impl rule__Network__Group__1 )
            // InternalDockerCompose.g:5565:2: rule__Network__Group__0__Impl rule__Network__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__Network__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__0"


    // $ANTLR start "rule__Network__Group__0__Impl"
    // InternalDockerCompose.g:5572:1: rule__Network__Group__0__Impl : ( () ) ;
    public final void rule__Network__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5576:1: ( ( () ) )
            // InternalDockerCompose.g:5577:1: ( () )
            {
            // InternalDockerCompose.g:5577:1: ( () )
            // InternalDockerCompose.g:5578:2: ()
            {
             before(grammarAccess.getNetworkAccess().getNetworkAction_0()); 
            // InternalDockerCompose.g:5579:2: ()
            // InternalDockerCompose.g:5579:3: 
            {
            }

             after(grammarAccess.getNetworkAccess().getNetworkAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__0__Impl"


    // $ANTLR start "rule__Network__Group__1"
    // InternalDockerCompose.g:5587:1: rule__Network__Group__1 : rule__Network__Group__1__Impl rule__Network__Group__2 ;
    public final void rule__Network__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5591:1: ( rule__Network__Group__1__Impl rule__Network__Group__2 )
            // InternalDockerCompose.g:5592:2: rule__Network__Group__1__Impl rule__Network__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__Network__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__1"


    // $ANTLR start "rule__Network__Group__1__Impl"
    // InternalDockerCompose.g:5599:1: rule__Network__Group__1__Impl : ( ( rule__Network__NameAssignment_1 ) ) ;
    public final void rule__Network__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5603:1: ( ( ( rule__Network__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:5604:1: ( ( rule__Network__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:5604:1: ( ( rule__Network__NameAssignment_1 ) )
            // InternalDockerCompose.g:5605:2: ( rule__Network__NameAssignment_1 )
            {
             before(grammarAccess.getNetworkAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:5606:2: ( rule__Network__NameAssignment_1 )
            // InternalDockerCompose.g:5606:3: rule__Network__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__1__Impl"


    // $ANTLR start "rule__Network__Group__2"
    // InternalDockerCompose.g:5614:1: rule__Network__Group__2 : rule__Network__Group__2__Impl rule__Network__Group__3 ;
    public final void rule__Network__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5618:1: ( rule__Network__Group__2__Impl rule__Network__Group__3 )
            // InternalDockerCompose.g:5619:2: rule__Network__Group__2__Impl rule__Network__Group__3
            {
            pushFollow(FOLLOW_30);
            rule__Network__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__2"


    // $ANTLR start "rule__Network__Group__2__Impl"
    // InternalDockerCompose.g:5626:1: rule__Network__Group__2__Impl : ( ':' ) ;
    public final void rule__Network__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5630:1: ( ( ':' ) )
            // InternalDockerCompose.g:5631:1: ( ':' )
            {
            // InternalDockerCompose.g:5631:1: ( ':' )
            // InternalDockerCompose.g:5632:2: ':'
            {
             before(grammarAccess.getNetworkAccess().getColonKeyword_2()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__2__Impl"


    // $ANTLR start "rule__Network__Group__3"
    // InternalDockerCompose.g:5641:1: rule__Network__Group__3 : rule__Network__Group__3__Impl ;
    public final void rule__Network__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5645:1: ( rule__Network__Group__3__Impl )
            // InternalDockerCompose.g:5646:2: rule__Network__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__3"


    // $ANTLR start "rule__Network__Group__3__Impl"
    // InternalDockerCompose.g:5652:1: rule__Network__Group__3__Impl : ( ( rule__Network__Alternatives_3 ) ) ;
    public final void rule__Network__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5656:1: ( ( ( rule__Network__Alternatives_3 ) ) )
            // InternalDockerCompose.g:5657:1: ( ( rule__Network__Alternatives_3 ) )
            {
            // InternalDockerCompose.g:5657:1: ( ( rule__Network__Alternatives_3 ) )
            // InternalDockerCompose.g:5658:2: ( rule__Network__Alternatives_3 )
            {
             before(grammarAccess.getNetworkAccess().getAlternatives_3()); 
            // InternalDockerCompose.g:5659:2: ( rule__Network__Alternatives_3 )
            // InternalDockerCompose.g:5659:3: rule__Network__Alternatives_3
            {
            pushFollow(FOLLOW_2);
            rule__Network__Alternatives_3();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getAlternatives_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group__3__Impl"


    // $ANTLR start "rule__Network__Group_3_0__0"
    // InternalDockerCompose.g:5668:1: rule__Network__Group_3_0__0 : rule__Network__Group_3_0__0__Impl rule__Network__Group_3_0__1 ;
    public final void rule__Network__Group_3_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5672:1: ( rule__Network__Group_3_0__0__Impl rule__Network__Group_3_0__1 )
            // InternalDockerCompose.g:5673:2: rule__Network__Group_3_0__0__Impl rule__Network__Group_3_0__1
            {
            pushFollow(FOLLOW_31);
            rule__Network__Group_3_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_0__0"


    // $ANTLR start "rule__Network__Group_3_0__0__Impl"
    // InternalDockerCompose.g:5680:1: rule__Network__Group_3_0__0__Impl : ( '{' ) ;
    public final void rule__Network__Group_3_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5684:1: ( ( '{' ) )
            // InternalDockerCompose.g:5685:1: ( '{' )
            {
            // InternalDockerCompose.g:5685:1: ( '{' )
            // InternalDockerCompose.g:5686:2: '{'
            {
             before(grammarAccess.getNetworkAccess().getLeftCurlyBracketKeyword_3_0_0()); 
            match(input,70,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getLeftCurlyBracketKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_0__0__Impl"


    // $ANTLR start "rule__Network__Group_3_0__1"
    // InternalDockerCompose.g:5695:1: rule__Network__Group_3_0__1 : rule__Network__Group_3_0__1__Impl ;
    public final void rule__Network__Group_3_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5699:1: ( rule__Network__Group_3_0__1__Impl )
            // InternalDockerCompose.g:5700:2: rule__Network__Group_3_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_0__1"


    // $ANTLR start "rule__Network__Group_3_0__1__Impl"
    // InternalDockerCompose.g:5706:1: rule__Network__Group_3_0__1__Impl : ( '}' ) ;
    public final void rule__Network__Group_3_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5710:1: ( ( '}' ) )
            // InternalDockerCompose.g:5711:1: ( '}' )
            {
            // InternalDockerCompose.g:5711:1: ( '}' )
            // InternalDockerCompose.g:5712:2: '}'
            {
             before(grammarAccess.getNetworkAccess().getRightCurlyBracketKeyword_3_0_1()); 
            match(input,71,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getRightCurlyBracketKeyword_3_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_0__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_0__0"
    // InternalDockerCompose.g:5722:1: rule__Network__Group_3_1_0__0 : rule__Network__Group_3_1_0__0__Impl rule__Network__Group_3_1_0__1 ;
    public final void rule__Network__Group_3_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5726:1: ( rule__Network__Group_3_1_0__0__Impl rule__Network__Group_3_1_0__1 )
            // InternalDockerCompose.g:5727:2: rule__Network__Group_3_1_0__0__Impl rule__Network__Group_3_1_0__1
            {
            pushFollow(FOLLOW_6);
            rule__Network__Group_3_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_0__0"


    // $ANTLR start "rule__Network__Group_3_1_0__0__Impl"
    // InternalDockerCompose.g:5734:1: rule__Network__Group_3_1_0__0__Impl : ( 'driver:' ) ;
    public final void rule__Network__Group_3_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5738:1: ( ( 'driver:' ) )
            // InternalDockerCompose.g:5739:1: ( 'driver:' )
            {
            // InternalDockerCompose.g:5739:1: ( 'driver:' )
            // InternalDockerCompose.g:5740:2: 'driver:'
            {
             before(grammarAccess.getNetworkAccess().getDriverKeyword_3_1_0_0()); 
            match(input,72,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getDriverKeyword_3_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_0__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_0__1"
    // InternalDockerCompose.g:5749:1: rule__Network__Group_3_1_0__1 : rule__Network__Group_3_1_0__1__Impl ;
    public final void rule__Network__Group_3_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5753:1: ( rule__Network__Group_3_1_0__1__Impl )
            // InternalDockerCompose.g:5754:2: rule__Network__Group_3_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_0__1"


    // $ANTLR start "rule__Network__Group_3_1_0__1__Impl"
    // InternalDockerCompose.g:5760:1: rule__Network__Group_3_1_0__1__Impl : ( ( rule__Network__DriverAssignment_3_1_0_1 ) ) ;
    public final void rule__Network__Group_3_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5764:1: ( ( ( rule__Network__DriverAssignment_3_1_0_1 ) ) )
            // InternalDockerCompose.g:5765:1: ( ( rule__Network__DriverAssignment_3_1_0_1 ) )
            {
            // InternalDockerCompose.g:5765:1: ( ( rule__Network__DriverAssignment_3_1_0_1 ) )
            // InternalDockerCompose.g:5766:2: ( rule__Network__DriverAssignment_3_1_0_1 )
            {
             before(grammarAccess.getNetworkAccess().getDriverAssignment_3_1_0_1()); 
            // InternalDockerCompose.g:5767:2: ( rule__Network__DriverAssignment_3_1_0_1 )
            // InternalDockerCompose.g:5767:3: rule__Network__DriverAssignment_3_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__DriverAssignment_3_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getDriverAssignment_3_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_0__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_1__0"
    // InternalDockerCompose.g:5776:1: rule__Network__Group_3_1_1__0 : rule__Network__Group_3_1_1__0__Impl rule__Network__Group_3_1_1__1 ;
    public final void rule__Network__Group_3_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5780:1: ( rule__Network__Group_3_1_1__0__Impl rule__Network__Group_3_1_1__1 )
            // InternalDockerCompose.g:5781:2: rule__Network__Group_3_1_1__0__Impl rule__Network__Group_3_1_1__1
            {
            pushFollow(FOLLOW_12);
            rule__Network__Group_3_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_1__0"


    // $ANTLR start "rule__Network__Group_3_1_1__0__Impl"
    // InternalDockerCompose.g:5788:1: rule__Network__Group_3_1_1__0__Impl : ( 'attachable:' ) ;
    public final void rule__Network__Group_3_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5792:1: ( ( 'attachable:' ) )
            // InternalDockerCompose.g:5793:1: ( 'attachable:' )
            {
            // InternalDockerCompose.g:5793:1: ( 'attachable:' )
            // InternalDockerCompose.g:5794:2: 'attachable:'
            {
             before(grammarAccess.getNetworkAccess().getAttachableKeyword_3_1_1_0()); 
            match(input,73,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getAttachableKeyword_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_1__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_1__1"
    // InternalDockerCompose.g:5803:1: rule__Network__Group_3_1_1__1 : rule__Network__Group_3_1_1__1__Impl ;
    public final void rule__Network__Group_3_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5807:1: ( rule__Network__Group_3_1_1__1__Impl )
            // InternalDockerCompose.g:5808:2: rule__Network__Group_3_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_1__1"


    // $ANTLR start "rule__Network__Group_3_1_1__1__Impl"
    // InternalDockerCompose.g:5814:1: rule__Network__Group_3_1_1__1__Impl : ( ( rule__Network__AttachableAssignment_3_1_1_1 ) ) ;
    public final void rule__Network__Group_3_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5818:1: ( ( ( rule__Network__AttachableAssignment_3_1_1_1 ) ) )
            // InternalDockerCompose.g:5819:1: ( ( rule__Network__AttachableAssignment_3_1_1_1 ) )
            {
            // InternalDockerCompose.g:5819:1: ( ( rule__Network__AttachableAssignment_3_1_1_1 ) )
            // InternalDockerCompose.g:5820:2: ( rule__Network__AttachableAssignment_3_1_1_1 )
            {
             before(grammarAccess.getNetworkAccess().getAttachableAssignment_3_1_1_1()); 
            // InternalDockerCompose.g:5821:2: ( rule__Network__AttachableAssignment_3_1_1_1 )
            // InternalDockerCompose.g:5821:3: rule__Network__AttachableAssignment_3_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__AttachableAssignment_3_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getAttachableAssignment_3_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_1__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_2__0"
    // InternalDockerCompose.g:5830:1: rule__Network__Group_3_1_2__0 : rule__Network__Group_3_1_2__0__Impl rule__Network__Group_3_1_2__1 ;
    public final void rule__Network__Group_3_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5834:1: ( rule__Network__Group_3_1_2__0__Impl rule__Network__Group_3_1_2__1 )
            // InternalDockerCompose.g:5835:2: rule__Network__Group_3_1_2__0__Impl rule__Network__Group_3_1_2__1
            {
            pushFollow(FOLLOW_12);
            rule__Network__Group_3_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_2__0"


    // $ANTLR start "rule__Network__Group_3_1_2__0__Impl"
    // InternalDockerCompose.g:5842:1: rule__Network__Group_3_1_2__0__Impl : ( 'enable_ipv6:' ) ;
    public final void rule__Network__Group_3_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5846:1: ( ( 'enable_ipv6:' ) )
            // InternalDockerCompose.g:5847:1: ( 'enable_ipv6:' )
            {
            // InternalDockerCompose.g:5847:1: ( 'enable_ipv6:' )
            // InternalDockerCompose.g:5848:2: 'enable_ipv6:'
            {
             before(grammarAccess.getNetworkAccess().getEnable_ipv6Keyword_3_1_2_0()); 
            match(input,74,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getEnable_ipv6Keyword_3_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_2__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_2__1"
    // InternalDockerCompose.g:5857:1: rule__Network__Group_3_1_2__1 : rule__Network__Group_3_1_2__1__Impl ;
    public final void rule__Network__Group_3_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5861:1: ( rule__Network__Group_3_1_2__1__Impl )
            // InternalDockerCompose.g:5862:2: rule__Network__Group_3_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_2__1"


    // $ANTLR start "rule__Network__Group_3_1_2__1__Impl"
    // InternalDockerCompose.g:5868:1: rule__Network__Group_3_1_2__1__Impl : ( ( rule__Network__Enable_ipv6Assignment_3_1_2_1 ) ) ;
    public final void rule__Network__Group_3_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5872:1: ( ( ( rule__Network__Enable_ipv6Assignment_3_1_2_1 ) ) )
            // InternalDockerCompose.g:5873:1: ( ( rule__Network__Enable_ipv6Assignment_3_1_2_1 ) )
            {
            // InternalDockerCompose.g:5873:1: ( ( rule__Network__Enable_ipv6Assignment_3_1_2_1 ) )
            // InternalDockerCompose.g:5874:2: ( rule__Network__Enable_ipv6Assignment_3_1_2_1 )
            {
             before(grammarAccess.getNetworkAccess().getEnable_ipv6Assignment_3_1_2_1()); 
            // InternalDockerCompose.g:5875:2: ( rule__Network__Enable_ipv6Assignment_3_1_2_1 )
            // InternalDockerCompose.g:5875:3: rule__Network__Enable_ipv6Assignment_3_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__Enable_ipv6Assignment_3_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getEnable_ipv6Assignment_3_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_2__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_3__0"
    // InternalDockerCompose.g:5884:1: rule__Network__Group_3_1_3__0 : rule__Network__Group_3_1_3__0__Impl rule__Network__Group_3_1_3__1 ;
    public final void rule__Network__Group_3_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5888:1: ( rule__Network__Group_3_1_3__0__Impl rule__Network__Group_3_1_3__1 )
            // InternalDockerCompose.g:5889:2: rule__Network__Group_3_1_3__0__Impl rule__Network__Group_3_1_3__1
            {
            pushFollow(FOLLOW_12);
            rule__Network__Group_3_1_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_3__0"


    // $ANTLR start "rule__Network__Group_3_1_3__0__Impl"
    // InternalDockerCompose.g:5896:1: rule__Network__Group_3_1_3__0__Impl : ( 'internal:' ) ;
    public final void rule__Network__Group_3_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5900:1: ( ( 'internal:' ) )
            // InternalDockerCompose.g:5901:1: ( 'internal:' )
            {
            // InternalDockerCompose.g:5901:1: ( 'internal:' )
            // InternalDockerCompose.g:5902:2: 'internal:'
            {
             before(grammarAccess.getNetworkAccess().getInternalKeyword_3_1_3_0()); 
            match(input,75,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getInternalKeyword_3_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_3__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_3__1"
    // InternalDockerCompose.g:5911:1: rule__Network__Group_3_1_3__1 : rule__Network__Group_3_1_3__1__Impl ;
    public final void rule__Network__Group_3_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5915:1: ( rule__Network__Group_3_1_3__1__Impl )
            // InternalDockerCompose.g:5916:2: rule__Network__Group_3_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_3__1"


    // $ANTLR start "rule__Network__Group_3_1_3__1__Impl"
    // InternalDockerCompose.g:5922:1: rule__Network__Group_3_1_3__1__Impl : ( ( rule__Network__InternalAssignment_3_1_3_1 ) ) ;
    public final void rule__Network__Group_3_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5926:1: ( ( ( rule__Network__InternalAssignment_3_1_3_1 ) ) )
            // InternalDockerCompose.g:5927:1: ( ( rule__Network__InternalAssignment_3_1_3_1 ) )
            {
            // InternalDockerCompose.g:5927:1: ( ( rule__Network__InternalAssignment_3_1_3_1 ) )
            // InternalDockerCompose.g:5928:2: ( rule__Network__InternalAssignment_3_1_3_1 )
            {
             before(grammarAccess.getNetworkAccess().getInternalAssignment_3_1_3_1()); 
            // InternalDockerCompose.g:5929:2: ( rule__Network__InternalAssignment_3_1_3_1 )
            // InternalDockerCompose.g:5929:3: rule__Network__InternalAssignment_3_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__InternalAssignment_3_1_3_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getInternalAssignment_3_1_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_3__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_4__0"
    // InternalDockerCompose.g:5938:1: rule__Network__Group_3_1_4__0 : rule__Network__Group_3_1_4__0__Impl rule__Network__Group_3_1_4__1 ;
    public final void rule__Network__Group_3_1_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5942:1: ( rule__Network__Group_3_1_4__0__Impl rule__Network__Group_3_1_4__1 )
            // InternalDockerCompose.g:5943:2: rule__Network__Group_3_1_4__0__Impl rule__Network__Group_3_1_4__1
            {
            pushFollow(FOLLOW_12);
            rule__Network__Group_3_1_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_4__0"


    // $ANTLR start "rule__Network__Group_3_1_4__0__Impl"
    // InternalDockerCompose.g:5950:1: rule__Network__Group_3_1_4__0__Impl : ( 'external:' ) ;
    public final void rule__Network__Group_3_1_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5954:1: ( ( 'external:' ) )
            // InternalDockerCompose.g:5955:1: ( 'external:' )
            {
            // InternalDockerCompose.g:5955:1: ( 'external:' )
            // InternalDockerCompose.g:5956:2: 'external:'
            {
             before(grammarAccess.getNetworkAccess().getExternalKeyword_3_1_4_0()); 
            match(input,76,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getExternalKeyword_3_1_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_4__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_4__1"
    // InternalDockerCompose.g:5965:1: rule__Network__Group_3_1_4__1 : rule__Network__Group_3_1_4__1__Impl ;
    public final void rule__Network__Group_3_1_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5969:1: ( rule__Network__Group_3_1_4__1__Impl )
            // InternalDockerCompose.g:5970:2: rule__Network__Group_3_1_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_4__1"


    // $ANTLR start "rule__Network__Group_3_1_4__1__Impl"
    // InternalDockerCompose.g:5976:1: rule__Network__Group_3_1_4__1__Impl : ( ( rule__Network__ExternalAssignment_3_1_4_1 ) ) ;
    public final void rule__Network__Group_3_1_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5980:1: ( ( ( rule__Network__ExternalAssignment_3_1_4_1 ) ) )
            // InternalDockerCompose.g:5981:1: ( ( rule__Network__ExternalAssignment_3_1_4_1 ) )
            {
            // InternalDockerCompose.g:5981:1: ( ( rule__Network__ExternalAssignment_3_1_4_1 ) )
            // InternalDockerCompose.g:5982:2: ( rule__Network__ExternalAssignment_3_1_4_1 )
            {
             before(grammarAccess.getNetworkAccess().getExternalAssignment_3_1_4_1()); 
            // InternalDockerCompose.g:5983:2: ( rule__Network__ExternalAssignment_3_1_4_1 )
            // InternalDockerCompose.g:5983:3: rule__Network__ExternalAssignment_3_1_4_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__ExternalAssignment_3_1_4_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getExternalAssignment_3_1_4_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_4__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_5__0"
    // InternalDockerCompose.g:5992:1: rule__Network__Group_3_1_5__0 : rule__Network__Group_3_1_5__0__Impl rule__Network__Group_3_1_5__1 ;
    public final void rule__Network__Group_3_1_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:5996:1: ( rule__Network__Group_3_1_5__0__Impl rule__Network__Group_3_1_5__1 )
            // InternalDockerCompose.g:5997:2: rule__Network__Group_3_1_5__0__Impl rule__Network__Group_3_1_5__1
            {
            pushFollow(FOLLOW_6);
            rule__Network__Group_3_1_5__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_5__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_5__0"


    // $ANTLR start "rule__Network__Group_3_1_5__0__Impl"
    // InternalDockerCompose.g:6004:1: rule__Network__Group_3_1_5__0__Impl : ( 'name:' ) ;
    public final void rule__Network__Group_3_1_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6008:1: ( ( 'name:' ) )
            // InternalDockerCompose.g:6009:1: ( 'name:' )
            {
            // InternalDockerCompose.g:6009:1: ( 'name:' )
            // InternalDockerCompose.g:6010:2: 'name:'
            {
             before(grammarAccess.getNetworkAccess().getNameKeyword_3_1_5_0()); 
            match(input,77,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getNameKeyword_3_1_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_5__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_5__1"
    // InternalDockerCompose.g:6019:1: rule__Network__Group_3_1_5__1 : rule__Network__Group_3_1_5__1__Impl ;
    public final void rule__Network__Group_3_1_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6023:1: ( rule__Network__Group_3_1_5__1__Impl )
            // InternalDockerCompose.g:6024:2: rule__Network__Group_3_1_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_5__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_5__1"


    // $ANTLR start "rule__Network__Group_3_1_5__1__Impl"
    // InternalDockerCompose.g:6030:1: rule__Network__Group_3_1_5__1__Impl : ( ( rule__Network__Network_nameAssignment_3_1_5_1 ) ) ;
    public final void rule__Network__Group_3_1_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6034:1: ( ( ( rule__Network__Network_nameAssignment_3_1_5_1 ) ) )
            // InternalDockerCompose.g:6035:1: ( ( rule__Network__Network_nameAssignment_3_1_5_1 ) )
            {
            // InternalDockerCompose.g:6035:1: ( ( rule__Network__Network_nameAssignment_3_1_5_1 ) )
            // InternalDockerCompose.g:6036:2: ( rule__Network__Network_nameAssignment_3_1_5_1 )
            {
             before(grammarAccess.getNetworkAccess().getNetwork_nameAssignment_3_1_5_1()); 
            // InternalDockerCompose.g:6037:2: ( rule__Network__Network_nameAssignment_3_1_5_1 )
            // InternalDockerCompose.g:6037:3: rule__Network__Network_nameAssignment_3_1_5_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__Network_nameAssignment_3_1_5_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getNetwork_nameAssignment_3_1_5_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_5__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_6__0"
    // InternalDockerCompose.g:6046:1: rule__Network__Group_3_1_6__0 : rule__Network__Group_3_1_6__0__Impl rule__Network__Group_3_1_6__1 ;
    public final void rule__Network__Group_3_1_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6050:1: ( rule__Network__Group_3_1_6__0__Impl rule__Network__Group_3_1_6__1 )
            // InternalDockerCompose.g:6051:2: rule__Network__Group_3_1_6__0__Impl rule__Network__Group_3_1_6__1
            {
            pushFollow(FOLLOW_6);
            rule__Network__Group_3_1_6__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_6__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_6__0"


    // $ANTLR start "rule__Network__Group_3_1_6__0__Impl"
    // InternalDockerCompose.g:6058:1: rule__Network__Group_3_1_6__0__Impl : ( 'labels:' ) ;
    public final void rule__Network__Group_3_1_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6062:1: ( ( 'labels:' ) )
            // InternalDockerCompose.g:6063:1: ( 'labels:' )
            {
            // InternalDockerCompose.g:6063:1: ( 'labels:' )
            // InternalDockerCompose.g:6064:2: 'labels:'
            {
             before(grammarAccess.getNetworkAccess().getLabelsKeyword_3_1_6_0()); 
            match(input,78,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getLabelsKeyword_3_1_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_6__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_6__1"
    // InternalDockerCompose.g:6073:1: rule__Network__Group_3_1_6__1 : rule__Network__Group_3_1_6__1__Impl ;
    public final void rule__Network__Group_3_1_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6077:1: ( rule__Network__Group_3_1_6__1__Impl )
            // InternalDockerCompose.g:6078:2: rule__Network__Group_3_1_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_6__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_6__1"


    // $ANTLR start "rule__Network__Group_3_1_6__1__Impl"
    // InternalDockerCompose.g:6084:1: rule__Network__Group_3_1_6__1__Impl : ( ( ( rule__Network__LabelsAssignment_3_1_6_1 ) ) ( ( rule__Network__LabelsAssignment_3_1_6_1 )* ) ) ;
    public final void rule__Network__Group_3_1_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6088:1: ( ( ( ( rule__Network__LabelsAssignment_3_1_6_1 ) ) ( ( rule__Network__LabelsAssignment_3_1_6_1 )* ) ) )
            // InternalDockerCompose.g:6089:1: ( ( ( rule__Network__LabelsAssignment_3_1_6_1 ) ) ( ( rule__Network__LabelsAssignment_3_1_6_1 )* ) )
            {
            // InternalDockerCompose.g:6089:1: ( ( ( rule__Network__LabelsAssignment_3_1_6_1 ) ) ( ( rule__Network__LabelsAssignment_3_1_6_1 )* ) )
            // InternalDockerCompose.g:6090:2: ( ( rule__Network__LabelsAssignment_3_1_6_1 ) ) ( ( rule__Network__LabelsAssignment_3_1_6_1 )* )
            {
            // InternalDockerCompose.g:6090:2: ( ( rule__Network__LabelsAssignment_3_1_6_1 ) )
            // InternalDockerCompose.g:6091:3: ( rule__Network__LabelsAssignment_3_1_6_1 )
            {
             before(grammarAccess.getNetworkAccess().getLabelsAssignment_3_1_6_1()); 
            // InternalDockerCompose.g:6092:3: ( rule__Network__LabelsAssignment_3_1_6_1 )
            // InternalDockerCompose.g:6092:4: rule__Network__LabelsAssignment_3_1_6_1
            {
            pushFollow(FOLLOW_4);
            rule__Network__LabelsAssignment_3_1_6_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getLabelsAssignment_3_1_6_1()); 

            }

            // InternalDockerCompose.g:6095:2: ( ( rule__Network__LabelsAssignment_3_1_6_1 )* )
            // InternalDockerCompose.g:6096:3: ( rule__Network__LabelsAssignment_3_1_6_1 )*
            {
             before(grammarAccess.getNetworkAccess().getLabelsAssignment_3_1_6_1()); 
            // InternalDockerCompose.g:6097:3: ( rule__Network__LabelsAssignment_3_1_6_1 )*
            loop36:
            do {
                int alt36=2;
                int LA36_0 = input.LA(1);

                if ( (LA36_0==RULE_STRING) ) {
                    int LA36_2 = input.LA(2);

                    if ( (LA36_2==40) ) {
                        int LA36_4 = input.LA(3);

                        if ( (LA36_4==RULE_STRING) ) {
                            int LA36_5 = input.LA(4);

                            if ( (LA36_5==EOF||(LA36_5>=RULE_STRING && LA36_5<=RULE_ID)||(LA36_5>=34 && LA36_5<=39)||(LA36_5>=72 && LA36_5<=80)) ) {
                                alt36=1;
                            }


                        }
                        else if ( (LA36_4==RULE_ID) ) {
                            int LA36_6 = input.LA(4);

                            if ( (LA36_6==EOF||(LA36_6>=RULE_STRING && LA36_6<=RULE_ID)||(LA36_6>=34 && LA36_6<=39)||(LA36_6>=72 && LA36_6<=80)) ) {
                                alt36=1;
                            }


                        }


                    }


                }
                else if ( (LA36_0==RULE_ID) ) {
                    int LA36_3 = input.LA(2);

                    if ( (LA36_3==40) ) {
                        int LA36_4 = input.LA(3);

                        if ( (LA36_4==RULE_STRING) ) {
                            int LA36_5 = input.LA(4);

                            if ( (LA36_5==EOF||(LA36_5>=RULE_STRING && LA36_5<=RULE_ID)||(LA36_5>=34 && LA36_5<=39)||(LA36_5>=72 && LA36_5<=80)) ) {
                                alt36=1;
                            }


                        }
                        else if ( (LA36_4==RULE_ID) ) {
                            int LA36_6 = input.LA(4);

                            if ( (LA36_6==EOF||(LA36_6>=RULE_STRING && LA36_6<=RULE_ID)||(LA36_6>=34 && LA36_6<=39)||(LA36_6>=72 && LA36_6<=80)) ) {
                                alt36=1;
                            }


                        }


                    }


                }


                switch (alt36) {
            	case 1 :
            	    // InternalDockerCompose.g:6097:4: rule__Network__LabelsAssignment_3_1_6_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__Network__LabelsAssignment_3_1_6_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop36;
                }
            } while (true);

             after(grammarAccess.getNetworkAccess().getLabelsAssignment_3_1_6_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_6__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_7__0"
    // InternalDockerCompose.g:6107:1: rule__Network__Group_3_1_7__0 : rule__Network__Group_3_1_7__0__Impl rule__Network__Group_3_1_7__1 ;
    public final void rule__Network__Group_3_1_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6111:1: ( rule__Network__Group_3_1_7__0__Impl rule__Network__Group_3_1_7__1 )
            // InternalDockerCompose.g:6112:2: rule__Network__Group_3_1_7__0__Impl rule__Network__Group_3_1_7__1
            {
            pushFollow(FOLLOW_6);
            rule__Network__Group_3_1_7__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_7__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_7__0"


    // $ANTLR start "rule__Network__Group_3_1_7__0__Impl"
    // InternalDockerCompose.g:6119:1: rule__Network__Group_3_1_7__0__Impl : ( 'driver_opts:' ) ;
    public final void rule__Network__Group_3_1_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6123:1: ( ( 'driver_opts:' ) )
            // InternalDockerCompose.g:6124:1: ( 'driver_opts:' )
            {
            // InternalDockerCompose.g:6124:1: ( 'driver_opts:' )
            // InternalDockerCompose.g:6125:2: 'driver_opts:'
            {
             before(grammarAccess.getNetworkAccess().getDriver_optsKeyword_3_1_7_0()); 
            match(input,79,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getDriver_optsKeyword_3_1_7_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_7__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_7__1"
    // InternalDockerCompose.g:6134:1: rule__Network__Group_3_1_7__1 : rule__Network__Group_3_1_7__1__Impl ;
    public final void rule__Network__Group_3_1_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6138:1: ( rule__Network__Group_3_1_7__1__Impl )
            // InternalDockerCompose.g:6139:2: rule__Network__Group_3_1_7__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_7__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_7__1"


    // $ANTLR start "rule__Network__Group_3_1_7__1__Impl"
    // InternalDockerCompose.g:6145:1: rule__Network__Group_3_1_7__1__Impl : ( ( ( rule__Network__Driver_optsAssignment_3_1_7_1 ) ) ( ( rule__Network__Driver_optsAssignment_3_1_7_1 )* ) ) ;
    public final void rule__Network__Group_3_1_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6149:1: ( ( ( ( rule__Network__Driver_optsAssignment_3_1_7_1 ) ) ( ( rule__Network__Driver_optsAssignment_3_1_7_1 )* ) ) )
            // InternalDockerCompose.g:6150:1: ( ( ( rule__Network__Driver_optsAssignment_3_1_7_1 ) ) ( ( rule__Network__Driver_optsAssignment_3_1_7_1 )* ) )
            {
            // InternalDockerCompose.g:6150:1: ( ( ( rule__Network__Driver_optsAssignment_3_1_7_1 ) ) ( ( rule__Network__Driver_optsAssignment_3_1_7_1 )* ) )
            // InternalDockerCompose.g:6151:2: ( ( rule__Network__Driver_optsAssignment_3_1_7_1 ) ) ( ( rule__Network__Driver_optsAssignment_3_1_7_1 )* )
            {
            // InternalDockerCompose.g:6151:2: ( ( rule__Network__Driver_optsAssignment_3_1_7_1 ) )
            // InternalDockerCompose.g:6152:3: ( rule__Network__Driver_optsAssignment_3_1_7_1 )
            {
             before(grammarAccess.getNetworkAccess().getDriver_optsAssignment_3_1_7_1()); 
            // InternalDockerCompose.g:6153:3: ( rule__Network__Driver_optsAssignment_3_1_7_1 )
            // InternalDockerCompose.g:6153:4: rule__Network__Driver_optsAssignment_3_1_7_1
            {
            pushFollow(FOLLOW_4);
            rule__Network__Driver_optsAssignment_3_1_7_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getDriver_optsAssignment_3_1_7_1()); 

            }

            // InternalDockerCompose.g:6156:2: ( ( rule__Network__Driver_optsAssignment_3_1_7_1 )* )
            // InternalDockerCompose.g:6157:3: ( rule__Network__Driver_optsAssignment_3_1_7_1 )*
            {
             before(grammarAccess.getNetworkAccess().getDriver_optsAssignment_3_1_7_1()); 
            // InternalDockerCompose.g:6158:3: ( rule__Network__Driver_optsAssignment_3_1_7_1 )*
            loop37:
            do {
                int alt37=2;
                int LA37_0 = input.LA(1);

                if ( (LA37_0==RULE_STRING) ) {
                    int LA37_2 = input.LA(2);

                    if ( (LA37_2==40) ) {
                        int LA37_4 = input.LA(3);

                        if ( (LA37_4==RULE_STRING) ) {
                            int LA37_5 = input.LA(4);

                            if ( (LA37_5==EOF||(LA37_5>=RULE_STRING && LA37_5<=RULE_ID)||(LA37_5>=34 && LA37_5<=39)||(LA37_5>=72 && LA37_5<=80)) ) {
                                alt37=1;
                            }


                        }
                        else if ( (LA37_4==RULE_ID) ) {
                            int LA37_6 = input.LA(4);

                            if ( (LA37_6==EOF||(LA37_6>=RULE_STRING && LA37_6<=RULE_ID)||(LA37_6>=34 && LA37_6<=39)||(LA37_6>=72 && LA37_6<=80)) ) {
                                alt37=1;
                            }


                        }


                    }


                }
                else if ( (LA37_0==RULE_ID) ) {
                    int LA37_3 = input.LA(2);

                    if ( (LA37_3==40) ) {
                        int LA37_4 = input.LA(3);

                        if ( (LA37_4==RULE_STRING) ) {
                            int LA37_5 = input.LA(4);

                            if ( (LA37_5==EOF||(LA37_5>=RULE_STRING && LA37_5<=RULE_ID)||(LA37_5>=34 && LA37_5<=39)||(LA37_5>=72 && LA37_5<=80)) ) {
                                alt37=1;
                            }


                        }
                        else if ( (LA37_4==RULE_ID) ) {
                            int LA37_6 = input.LA(4);

                            if ( (LA37_6==EOF||(LA37_6>=RULE_STRING && LA37_6<=RULE_ID)||(LA37_6>=34 && LA37_6<=39)||(LA37_6>=72 && LA37_6<=80)) ) {
                                alt37=1;
                            }


                        }


                    }


                }


                switch (alt37) {
            	case 1 :
            	    // InternalDockerCompose.g:6158:4: rule__Network__Driver_optsAssignment_3_1_7_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__Network__Driver_optsAssignment_3_1_7_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop37;
                }
            } while (true);

             after(grammarAccess.getNetworkAccess().getDriver_optsAssignment_3_1_7_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_7__1__Impl"


    // $ANTLR start "rule__Network__Group_3_1_8__0"
    // InternalDockerCompose.g:6168:1: rule__Network__Group_3_1_8__0 : rule__Network__Group_3_1_8__0__Impl rule__Network__Group_3_1_8__1 ;
    public final void rule__Network__Group_3_1_8__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6172:1: ( rule__Network__Group_3_1_8__0__Impl rule__Network__Group_3_1_8__1 )
            // InternalDockerCompose.g:6173:2: rule__Network__Group_3_1_8__0__Impl rule__Network__Group_3_1_8__1
            {
            pushFollow(FOLLOW_32);
            rule__Network__Group_3_1_8__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_8__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_8__0"


    // $ANTLR start "rule__Network__Group_3_1_8__0__Impl"
    // InternalDockerCompose.g:6180:1: rule__Network__Group_3_1_8__0__Impl : ( 'ipam:' ) ;
    public final void rule__Network__Group_3_1_8__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6184:1: ( ( 'ipam:' ) )
            // InternalDockerCompose.g:6185:1: ( 'ipam:' )
            {
            // InternalDockerCompose.g:6185:1: ( 'ipam:' )
            // InternalDockerCompose.g:6186:2: 'ipam:'
            {
             before(grammarAccess.getNetworkAccess().getIpamKeyword_3_1_8_0()); 
            match(input,80,FOLLOW_2); 
             after(grammarAccess.getNetworkAccess().getIpamKeyword_3_1_8_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_8__0__Impl"


    // $ANTLR start "rule__Network__Group_3_1_8__1"
    // InternalDockerCompose.g:6195:1: rule__Network__Group_3_1_8__1 : rule__Network__Group_3_1_8__1__Impl ;
    public final void rule__Network__Group_3_1_8__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6199:1: ( rule__Network__Group_3_1_8__1__Impl )
            // InternalDockerCompose.g:6200:2: rule__Network__Group_3_1_8__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__Group_3_1_8__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_8__1"


    // $ANTLR start "rule__Network__Group_3_1_8__1__Impl"
    // InternalDockerCompose.g:6206:1: rule__Network__Group_3_1_8__1__Impl : ( ( rule__Network__IpamAssignment_3_1_8_1 ) ) ;
    public final void rule__Network__Group_3_1_8__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6210:1: ( ( ( rule__Network__IpamAssignment_3_1_8_1 ) ) )
            // InternalDockerCompose.g:6211:1: ( ( rule__Network__IpamAssignment_3_1_8_1 ) )
            {
            // InternalDockerCompose.g:6211:1: ( ( rule__Network__IpamAssignment_3_1_8_1 ) )
            // InternalDockerCompose.g:6212:2: ( rule__Network__IpamAssignment_3_1_8_1 )
            {
             before(grammarAccess.getNetworkAccess().getIpamAssignment_3_1_8_1()); 
            // InternalDockerCompose.g:6213:2: ( rule__Network__IpamAssignment_3_1_8_1 )
            // InternalDockerCompose.g:6213:3: rule__Network__IpamAssignment_3_1_8_1
            {
            pushFollow(FOLLOW_2);
            rule__Network__IpamAssignment_3_1_8_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAccess().getIpamAssignment_3_1_8_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Group_3_1_8__1__Impl"


    // $ANTLR start "rule__Volume__Group__0"
    // InternalDockerCompose.g:6222:1: rule__Volume__Group__0 : rule__Volume__Group__0__Impl rule__Volume__Group__1 ;
    public final void rule__Volume__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6226:1: ( rule__Volume__Group__0__Impl rule__Volume__Group__1 )
            // InternalDockerCompose.g:6227:2: rule__Volume__Group__0__Impl rule__Volume__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__Volume__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__0"


    // $ANTLR start "rule__Volume__Group__0__Impl"
    // InternalDockerCompose.g:6234:1: rule__Volume__Group__0__Impl : ( () ) ;
    public final void rule__Volume__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6238:1: ( ( () ) )
            // InternalDockerCompose.g:6239:1: ( () )
            {
            // InternalDockerCompose.g:6239:1: ( () )
            // InternalDockerCompose.g:6240:2: ()
            {
             before(grammarAccess.getVolumeAccess().getVolumeAction_0()); 
            // InternalDockerCompose.g:6241:2: ()
            // InternalDockerCompose.g:6241:3: 
            {
            }

             after(grammarAccess.getVolumeAccess().getVolumeAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__0__Impl"


    // $ANTLR start "rule__Volume__Group__1"
    // InternalDockerCompose.g:6249:1: rule__Volume__Group__1 : rule__Volume__Group__1__Impl rule__Volume__Group__2 ;
    public final void rule__Volume__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6253:1: ( rule__Volume__Group__1__Impl rule__Volume__Group__2 )
            // InternalDockerCompose.g:6254:2: rule__Volume__Group__1__Impl rule__Volume__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__Volume__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__1"


    // $ANTLR start "rule__Volume__Group__1__Impl"
    // InternalDockerCompose.g:6261:1: rule__Volume__Group__1__Impl : ( ( rule__Volume__NameAssignment_1 ) ) ;
    public final void rule__Volume__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6265:1: ( ( ( rule__Volume__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:6266:1: ( ( rule__Volume__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:6266:1: ( ( rule__Volume__NameAssignment_1 ) )
            // InternalDockerCompose.g:6267:2: ( rule__Volume__NameAssignment_1 )
            {
             before(grammarAccess.getVolumeAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:6268:2: ( rule__Volume__NameAssignment_1 )
            // InternalDockerCompose.g:6268:3: rule__Volume__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Volume__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__1__Impl"


    // $ANTLR start "rule__Volume__Group__2"
    // InternalDockerCompose.g:6276:1: rule__Volume__Group__2 : rule__Volume__Group__2__Impl rule__Volume__Group__3 ;
    public final void rule__Volume__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6280:1: ( rule__Volume__Group__2__Impl rule__Volume__Group__3 )
            // InternalDockerCompose.g:6281:2: rule__Volume__Group__2__Impl rule__Volume__Group__3
            {
            pushFollow(FOLLOW_33);
            rule__Volume__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__2"


    // $ANTLR start "rule__Volume__Group__2__Impl"
    // InternalDockerCompose.g:6288:1: rule__Volume__Group__2__Impl : ( ':' ) ;
    public final void rule__Volume__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6292:1: ( ( ':' ) )
            // InternalDockerCompose.g:6293:1: ( ':' )
            {
            // InternalDockerCompose.g:6293:1: ( ':' )
            // InternalDockerCompose.g:6294:2: ':'
            {
             before(grammarAccess.getVolumeAccess().getColonKeyword_2()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getVolumeAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__2__Impl"


    // $ANTLR start "rule__Volume__Group__3"
    // InternalDockerCompose.g:6303:1: rule__Volume__Group__3 : rule__Volume__Group__3__Impl ;
    public final void rule__Volume__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6307:1: ( rule__Volume__Group__3__Impl )
            // InternalDockerCompose.g:6308:2: rule__Volume__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__3"


    // $ANTLR start "rule__Volume__Group__3__Impl"
    // InternalDockerCompose.g:6314:1: rule__Volume__Group__3__Impl : ( ( rule__Volume__UnorderedGroup_3 ) ) ;
    public final void rule__Volume__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6318:1: ( ( ( rule__Volume__UnorderedGroup_3 ) ) )
            // InternalDockerCompose.g:6319:1: ( ( rule__Volume__UnorderedGroup_3 ) )
            {
            // InternalDockerCompose.g:6319:1: ( ( rule__Volume__UnorderedGroup_3 ) )
            // InternalDockerCompose.g:6320:2: ( rule__Volume__UnorderedGroup_3 )
            {
             before(grammarAccess.getVolumeAccess().getUnorderedGroup_3()); 
            // InternalDockerCompose.g:6321:2: ( rule__Volume__UnorderedGroup_3 )
            // InternalDockerCompose.g:6321:3: rule__Volume__UnorderedGroup_3
            {
            pushFollow(FOLLOW_2);
            rule__Volume__UnorderedGroup_3();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getUnorderedGroup_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group__3__Impl"


    // $ANTLR start "rule__Volume__Group_3_0__0"
    // InternalDockerCompose.g:6330:1: rule__Volume__Group_3_0__0 : rule__Volume__Group_3_0__0__Impl rule__Volume__Group_3_0__1 ;
    public final void rule__Volume__Group_3_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6334:1: ( rule__Volume__Group_3_0__0__Impl rule__Volume__Group_3_0__1 )
            // InternalDockerCompose.g:6335:2: rule__Volume__Group_3_0__0__Impl rule__Volume__Group_3_0__1
            {
            pushFollow(FOLLOW_12);
            rule__Volume__Group_3_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_0__0"


    // $ANTLR start "rule__Volume__Group_3_0__0__Impl"
    // InternalDockerCompose.g:6342:1: rule__Volume__Group_3_0__0__Impl : ( 'external:' ) ;
    public final void rule__Volume__Group_3_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6346:1: ( ( 'external:' ) )
            // InternalDockerCompose.g:6347:1: ( 'external:' )
            {
            // InternalDockerCompose.g:6347:1: ( 'external:' )
            // InternalDockerCompose.g:6348:2: 'external:'
            {
             before(grammarAccess.getVolumeAccess().getExternalKeyword_3_0_0()); 
            match(input,76,FOLLOW_2); 
             after(grammarAccess.getVolumeAccess().getExternalKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_0__0__Impl"


    // $ANTLR start "rule__Volume__Group_3_0__1"
    // InternalDockerCompose.g:6357:1: rule__Volume__Group_3_0__1 : rule__Volume__Group_3_0__1__Impl ;
    public final void rule__Volume__Group_3_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6361:1: ( rule__Volume__Group_3_0__1__Impl )
            // InternalDockerCompose.g:6362:2: rule__Volume__Group_3_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_0__1"


    // $ANTLR start "rule__Volume__Group_3_0__1__Impl"
    // InternalDockerCompose.g:6368:1: rule__Volume__Group_3_0__1__Impl : ( ( rule__Volume__ExternalAssignment_3_0_1 ) ) ;
    public final void rule__Volume__Group_3_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6372:1: ( ( ( rule__Volume__ExternalAssignment_3_0_1 ) ) )
            // InternalDockerCompose.g:6373:1: ( ( rule__Volume__ExternalAssignment_3_0_1 ) )
            {
            // InternalDockerCompose.g:6373:1: ( ( rule__Volume__ExternalAssignment_3_0_1 ) )
            // InternalDockerCompose.g:6374:2: ( rule__Volume__ExternalAssignment_3_0_1 )
            {
             before(grammarAccess.getVolumeAccess().getExternalAssignment_3_0_1()); 
            // InternalDockerCompose.g:6375:2: ( rule__Volume__ExternalAssignment_3_0_1 )
            // InternalDockerCompose.g:6375:3: rule__Volume__ExternalAssignment_3_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Volume__ExternalAssignment_3_0_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getExternalAssignment_3_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_0__1__Impl"


    // $ANTLR start "rule__Volume__Group_3_1__0"
    // InternalDockerCompose.g:6384:1: rule__Volume__Group_3_1__0 : rule__Volume__Group_3_1__0__Impl rule__Volume__Group_3_1__1 ;
    public final void rule__Volume__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6388:1: ( rule__Volume__Group_3_1__0__Impl rule__Volume__Group_3_1__1 )
            // InternalDockerCompose.g:6389:2: rule__Volume__Group_3_1__0__Impl rule__Volume__Group_3_1__1
            {
            pushFollow(FOLLOW_6);
            rule__Volume__Group_3_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_1__0"


    // $ANTLR start "rule__Volume__Group_3_1__0__Impl"
    // InternalDockerCompose.g:6396:1: rule__Volume__Group_3_1__0__Impl : ( 'driver:' ) ;
    public final void rule__Volume__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6400:1: ( ( 'driver:' ) )
            // InternalDockerCompose.g:6401:1: ( 'driver:' )
            {
            // InternalDockerCompose.g:6401:1: ( 'driver:' )
            // InternalDockerCompose.g:6402:2: 'driver:'
            {
             before(grammarAccess.getVolumeAccess().getDriverKeyword_3_1_0()); 
            match(input,72,FOLLOW_2); 
             after(grammarAccess.getVolumeAccess().getDriverKeyword_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_1__0__Impl"


    // $ANTLR start "rule__Volume__Group_3_1__1"
    // InternalDockerCompose.g:6411:1: rule__Volume__Group_3_1__1 : rule__Volume__Group_3_1__1__Impl ;
    public final void rule__Volume__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6415:1: ( rule__Volume__Group_3_1__1__Impl )
            // InternalDockerCompose.g:6416:2: rule__Volume__Group_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_1__1"


    // $ANTLR start "rule__Volume__Group_3_1__1__Impl"
    // InternalDockerCompose.g:6422:1: rule__Volume__Group_3_1__1__Impl : ( ( rule__Volume__DriverAssignment_3_1_1 ) ) ;
    public final void rule__Volume__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6426:1: ( ( ( rule__Volume__DriverAssignment_3_1_1 ) ) )
            // InternalDockerCompose.g:6427:1: ( ( rule__Volume__DriverAssignment_3_1_1 ) )
            {
            // InternalDockerCompose.g:6427:1: ( ( rule__Volume__DriverAssignment_3_1_1 ) )
            // InternalDockerCompose.g:6428:2: ( rule__Volume__DriverAssignment_3_1_1 )
            {
             before(grammarAccess.getVolumeAccess().getDriverAssignment_3_1_1()); 
            // InternalDockerCompose.g:6429:2: ( rule__Volume__DriverAssignment_3_1_1 )
            // InternalDockerCompose.g:6429:3: rule__Volume__DriverAssignment_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Volume__DriverAssignment_3_1_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getDriverAssignment_3_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_1__1__Impl"


    // $ANTLR start "rule__Volume__Group_3_2__0"
    // InternalDockerCompose.g:6438:1: rule__Volume__Group_3_2__0 : rule__Volume__Group_3_2__0__Impl rule__Volume__Group_3_2__1 ;
    public final void rule__Volume__Group_3_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6442:1: ( rule__Volume__Group_3_2__0__Impl rule__Volume__Group_3_2__1 )
            // InternalDockerCompose.g:6443:2: rule__Volume__Group_3_2__0__Impl rule__Volume__Group_3_2__1
            {
            pushFollow(FOLLOW_6);
            rule__Volume__Group_3_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_2__0"


    // $ANTLR start "rule__Volume__Group_3_2__0__Impl"
    // InternalDockerCompose.g:6450:1: rule__Volume__Group_3_2__0__Impl : ( 'name:' ) ;
    public final void rule__Volume__Group_3_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6454:1: ( ( 'name:' ) )
            // InternalDockerCompose.g:6455:1: ( 'name:' )
            {
            // InternalDockerCompose.g:6455:1: ( 'name:' )
            // InternalDockerCompose.g:6456:2: 'name:'
            {
             before(grammarAccess.getVolumeAccess().getNameKeyword_3_2_0()); 
            match(input,77,FOLLOW_2); 
             after(grammarAccess.getVolumeAccess().getNameKeyword_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_2__0__Impl"


    // $ANTLR start "rule__Volume__Group_3_2__1"
    // InternalDockerCompose.g:6465:1: rule__Volume__Group_3_2__1 : rule__Volume__Group_3_2__1__Impl ;
    public final void rule__Volume__Group_3_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6469:1: ( rule__Volume__Group_3_2__1__Impl )
            // InternalDockerCompose.g:6470:2: rule__Volume__Group_3_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_2__1"


    // $ANTLR start "rule__Volume__Group_3_2__1__Impl"
    // InternalDockerCompose.g:6476:1: rule__Volume__Group_3_2__1__Impl : ( ( rule__Volume__Volume_nameAssignment_3_2_1 ) ) ;
    public final void rule__Volume__Group_3_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6480:1: ( ( ( rule__Volume__Volume_nameAssignment_3_2_1 ) ) )
            // InternalDockerCompose.g:6481:1: ( ( rule__Volume__Volume_nameAssignment_3_2_1 ) )
            {
            // InternalDockerCompose.g:6481:1: ( ( rule__Volume__Volume_nameAssignment_3_2_1 ) )
            // InternalDockerCompose.g:6482:2: ( rule__Volume__Volume_nameAssignment_3_2_1 )
            {
             before(grammarAccess.getVolumeAccess().getVolume_nameAssignment_3_2_1()); 
            // InternalDockerCompose.g:6483:2: ( rule__Volume__Volume_nameAssignment_3_2_1 )
            // InternalDockerCompose.g:6483:3: rule__Volume__Volume_nameAssignment_3_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Volume_nameAssignment_3_2_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getVolume_nameAssignment_3_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_2__1__Impl"


    // $ANTLR start "rule__Volume__Group_3_3__0"
    // InternalDockerCompose.g:6492:1: rule__Volume__Group_3_3__0 : rule__Volume__Group_3_3__0__Impl rule__Volume__Group_3_3__1 ;
    public final void rule__Volume__Group_3_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6496:1: ( rule__Volume__Group_3_3__0__Impl rule__Volume__Group_3_3__1 )
            // InternalDockerCompose.g:6497:2: rule__Volume__Group_3_3__0__Impl rule__Volume__Group_3_3__1
            {
            pushFollow(FOLLOW_6);
            rule__Volume__Group_3_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_3__0"


    // $ANTLR start "rule__Volume__Group_3_3__0__Impl"
    // InternalDockerCompose.g:6504:1: rule__Volume__Group_3_3__0__Impl : ( 'labels:' ) ;
    public final void rule__Volume__Group_3_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6508:1: ( ( 'labels:' ) )
            // InternalDockerCompose.g:6509:1: ( 'labels:' )
            {
            // InternalDockerCompose.g:6509:1: ( 'labels:' )
            // InternalDockerCompose.g:6510:2: 'labels:'
            {
             before(grammarAccess.getVolumeAccess().getLabelsKeyword_3_3_0()); 
            match(input,78,FOLLOW_2); 
             after(grammarAccess.getVolumeAccess().getLabelsKeyword_3_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_3__0__Impl"


    // $ANTLR start "rule__Volume__Group_3_3__1"
    // InternalDockerCompose.g:6519:1: rule__Volume__Group_3_3__1 : rule__Volume__Group_3_3__1__Impl ;
    public final void rule__Volume__Group_3_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6523:1: ( rule__Volume__Group_3_3__1__Impl )
            // InternalDockerCompose.g:6524:2: rule__Volume__Group_3_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_3__1"


    // $ANTLR start "rule__Volume__Group_3_3__1__Impl"
    // InternalDockerCompose.g:6530:1: rule__Volume__Group_3_3__1__Impl : ( ( ( rule__Volume__LabelsAssignment_3_3_1 ) ) ( ( rule__Volume__LabelsAssignment_3_3_1 )* ) ) ;
    public final void rule__Volume__Group_3_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6534:1: ( ( ( ( rule__Volume__LabelsAssignment_3_3_1 ) ) ( ( rule__Volume__LabelsAssignment_3_3_1 )* ) ) )
            // InternalDockerCompose.g:6535:1: ( ( ( rule__Volume__LabelsAssignment_3_3_1 ) ) ( ( rule__Volume__LabelsAssignment_3_3_1 )* ) )
            {
            // InternalDockerCompose.g:6535:1: ( ( ( rule__Volume__LabelsAssignment_3_3_1 ) ) ( ( rule__Volume__LabelsAssignment_3_3_1 )* ) )
            // InternalDockerCompose.g:6536:2: ( ( rule__Volume__LabelsAssignment_3_3_1 ) ) ( ( rule__Volume__LabelsAssignment_3_3_1 )* )
            {
            // InternalDockerCompose.g:6536:2: ( ( rule__Volume__LabelsAssignment_3_3_1 ) )
            // InternalDockerCompose.g:6537:3: ( rule__Volume__LabelsAssignment_3_3_1 )
            {
             before(grammarAccess.getVolumeAccess().getLabelsAssignment_3_3_1()); 
            // InternalDockerCompose.g:6538:3: ( rule__Volume__LabelsAssignment_3_3_1 )
            // InternalDockerCompose.g:6538:4: rule__Volume__LabelsAssignment_3_3_1
            {
            pushFollow(FOLLOW_4);
            rule__Volume__LabelsAssignment_3_3_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getLabelsAssignment_3_3_1()); 

            }

            // InternalDockerCompose.g:6541:2: ( ( rule__Volume__LabelsAssignment_3_3_1 )* )
            // InternalDockerCompose.g:6542:3: ( rule__Volume__LabelsAssignment_3_3_1 )*
            {
             before(grammarAccess.getVolumeAccess().getLabelsAssignment_3_3_1()); 
            // InternalDockerCompose.g:6543:3: ( rule__Volume__LabelsAssignment_3_3_1 )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==RULE_STRING) ) {
                    int LA38_2 = input.LA(2);

                    if ( (LA38_2==40) ) {
                        int LA38_4 = input.LA(3);

                        if ( (LA38_4==RULE_STRING) ) {
                            int LA38_5 = input.LA(4);

                            if ( (LA38_5==EOF||(LA38_5>=RULE_STRING && LA38_5<=RULE_ID)||(LA38_5>=34 && LA38_5<=39)||LA38_5==72||(LA38_5>=76 && LA38_5<=79)) ) {
                                alt38=1;
                            }


                        }
                        else if ( (LA38_4==RULE_ID) ) {
                            int LA38_6 = input.LA(4);

                            if ( (LA38_6==EOF||(LA38_6>=RULE_STRING && LA38_6<=RULE_ID)||(LA38_6>=34 && LA38_6<=39)||LA38_6==72||(LA38_6>=76 && LA38_6<=79)) ) {
                                alt38=1;
                            }


                        }


                    }


                }
                else if ( (LA38_0==RULE_ID) ) {
                    int LA38_3 = input.LA(2);

                    if ( (LA38_3==40) ) {
                        int LA38_4 = input.LA(3);

                        if ( (LA38_4==RULE_STRING) ) {
                            int LA38_5 = input.LA(4);

                            if ( (LA38_5==EOF||(LA38_5>=RULE_STRING && LA38_5<=RULE_ID)||(LA38_5>=34 && LA38_5<=39)||LA38_5==72||(LA38_5>=76 && LA38_5<=79)) ) {
                                alt38=1;
                            }


                        }
                        else if ( (LA38_4==RULE_ID) ) {
                            int LA38_6 = input.LA(4);

                            if ( (LA38_6==EOF||(LA38_6>=RULE_STRING && LA38_6<=RULE_ID)||(LA38_6>=34 && LA38_6<=39)||LA38_6==72||(LA38_6>=76 && LA38_6<=79)) ) {
                                alt38=1;
                            }


                        }


                    }


                }


                switch (alt38) {
            	case 1 :
            	    // InternalDockerCompose.g:6543:4: rule__Volume__LabelsAssignment_3_3_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__Volume__LabelsAssignment_3_3_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);

             after(grammarAccess.getVolumeAccess().getLabelsAssignment_3_3_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_3__1__Impl"


    // $ANTLR start "rule__Volume__Group_3_4__0"
    // InternalDockerCompose.g:6553:1: rule__Volume__Group_3_4__0 : rule__Volume__Group_3_4__0__Impl rule__Volume__Group_3_4__1 ;
    public final void rule__Volume__Group_3_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6557:1: ( rule__Volume__Group_3_4__0__Impl rule__Volume__Group_3_4__1 )
            // InternalDockerCompose.g:6558:2: rule__Volume__Group_3_4__0__Impl rule__Volume__Group_3_4__1
            {
            pushFollow(FOLLOW_6);
            rule__Volume__Group_3_4__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_4__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_4__0"


    // $ANTLR start "rule__Volume__Group_3_4__0__Impl"
    // InternalDockerCompose.g:6565:1: rule__Volume__Group_3_4__0__Impl : ( 'driver_opts:' ) ;
    public final void rule__Volume__Group_3_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6569:1: ( ( 'driver_opts:' ) )
            // InternalDockerCompose.g:6570:1: ( 'driver_opts:' )
            {
            // InternalDockerCompose.g:6570:1: ( 'driver_opts:' )
            // InternalDockerCompose.g:6571:2: 'driver_opts:'
            {
             before(grammarAccess.getVolumeAccess().getDriver_optsKeyword_3_4_0()); 
            match(input,79,FOLLOW_2); 
             after(grammarAccess.getVolumeAccess().getDriver_optsKeyword_3_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_4__0__Impl"


    // $ANTLR start "rule__Volume__Group_3_4__1"
    // InternalDockerCompose.g:6580:1: rule__Volume__Group_3_4__1 : rule__Volume__Group_3_4__1__Impl ;
    public final void rule__Volume__Group_3_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6584:1: ( rule__Volume__Group_3_4__1__Impl )
            // InternalDockerCompose.g:6585:2: rule__Volume__Group_3_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__Group_3_4__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_4__1"


    // $ANTLR start "rule__Volume__Group_3_4__1__Impl"
    // InternalDockerCompose.g:6591:1: rule__Volume__Group_3_4__1__Impl : ( ( ( rule__Volume__Driver_optsAssignment_3_4_1 ) ) ( ( rule__Volume__Driver_optsAssignment_3_4_1 )* ) ) ;
    public final void rule__Volume__Group_3_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6595:1: ( ( ( ( rule__Volume__Driver_optsAssignment_3_4_1 ) ) ( ( rule__Volume__Driver_optsAssignment_3_4_1 )* ) ) )
            // InternalDockerCompose.g:6596:1: ( ( ( rule__Volume__Driver_optsAssignment_3_4_1 ) ) ( ( rule__Volume__Driver_optsAssignment_3_4_1 )* ) )
            {
            // InternalDockerCompose.g:6596:1: ( ( ( rule__Volume__Driver_optsAssignment_3_4_1 ) ) ( ( rule__Volume__Driver_optsAssignment_3_4_1 )* ) )
            // InternalDockerCompose.g:6597:2: ( ( rule__Volume__Driver_optsAssignment_3_4_1 ) ) ( ( rule__Volume__Driver_optsAssignment_3_4_1 )* )
            {
            // InternalDockerCompose.g:6597:2: ( ( rule__Volume__Driver_optsAssignment_3_4_1 ) )
            // InternalDockerCompose.g:6598:3: ( rule__Volume__Driver_optsAssignment_3_4_1 )
            {
             before(grammarAccess.getVolumeAccess().getDriver_optsAssignment_3_4_1()); 
            // InternalDockerCompose.g:6599:3: ( rule__Volume__Driver_optsAssignment_3_4_1 )
            // InternalDockerCompose.g:6599:4: rule__Volume__Driver_optsAssignment_3_4_1
            {
            pushFollow(FOLLOW_4);
            rule__Volume__Driver_optsAssignment_3_4_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeAccess().getDriver_optsAssignment_3_4_1()); 

            }

            // InternalDockerCompose.g:6602:2: ( ( rule__Volume__Driver_optsAssignment_3_4_1 )* )
            // InternalDockerCompose.g:6603:3: ( rule__Volume__Driver_optsAssignment_3_4_1 )*
            {
             before(grammarAccess.getVolumeAccess().getDriver_optsAssignment_3_4_1()); 
            // InternalDockerCompose.g:6604:3: ( rule__Volume__Driver_optsAssignment_3_4_1 )*
            loop39:
            do {
                int alt39=2;
                int LA39_0 = input.LA(1);

                if ( (LA39_0==RULE_STRING) ) {
                    int LA39_2 = input.LA(2);

                    if ( (LA39_2==40) ) {
                        int LA39_4 = input.LA(3);

                        if ( (LA39_4==RULE_STRING) ) {
                            int LA39_5 = input.LA(4);

                            if ( (LA39_5==EOF||(LA39_5>=RULE_STRING && LA39_5<=RULE_ID)||(LA39_5>=34 && LA39_5<=39)||LA39_5==72||(LA39_5>=76 && LA39_5<=79)) ) {
                                alt39=1;
                            }


                        }
                        else if ( (LA39_4==RULE_ID) ) {
                            int LA39_6 = input.LA(4);

                            if ( (LA39_6==EOF||(LA39_6>=RULE_STRING && LA39_6<=RULE_ID)||(LA39_6>=34 && LA39_6<=39)||LA39_6==72||(LA39_6>=76 && LA39_6<=79)) ) {
                                alt39=1;
                            }


                        }


                    }


                }
                else if ( (LA39_0==RULE_ID) ) {
                    int LA39_3 = input.LA(2);

                    if ( (LA39_3==40) ) {
                        int LA39_4 = input.LA(3);

                        if ( (LA39_4==RULE_STRING) ) {
                            int LA39_5 = input.LA(4);

                            if ( (LA39_5==EOF||(LA39_5>=RULE_STRING && LA39_5<=RULE_ID)||(LA39_5>=34 && LA39_5<=39)||LA39_5==72||(LA39_5>=76 && LA39_5<=79)) ) {
                                alt39=1;
                            }


                        }
                        else if ( (LA39_4==RULE_ID) ) {
                            int LA39_6 = input.LA(4);

                            if ( (LA39_6==EOF||(LA39_6>=RULE_STRING && LA39_6<=RULE_ID)||(LA39_6>=34 && LA39_6<=39)||LA39_6==72||(LA39_6>=76 && LA39_6<=79)) ) {
                                alt39=1;
                            }


                        }


                    }


                }


                switch (alt39) {
            	case 1 :
            	    // InternalDockerCompose.g:6604:4: rule__Volume__Driver_optsAssignment_3_4_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__Volume__Driver_optsAssignment_3_4_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);

             after(grammarAccess.getVolumeAccess().getDriver_optsAssignment_3_4_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Group_3_4__1__Impl"


    // $ANTLR start "rule__Config__Group__0"
    // InternalDockerCompose.g:6614:1: rule__Config__Group__0 : rule__Config__Group__0__Impl rule__Config__Group__1 ;
    public final void rule__Config__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6618:1: ( rule__Config__Group__0__Impl rule__Config__Group__1 )
            // InternalDockerCompose.g:6619:2: rule__Config__Group__0__Impl rule__Config__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__Config__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Config__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__0"


    // $ANTLR start "rule__Config__Group__0__Impl"
    // InternalDockerCompose.g:6626:1: rule__Config__Group__0__Impl : ( () ) ;
    public final void rule__Config__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6630:1: ( ( () ) )
            // InternalDockerCompose.g:6631:1: ( () )
            {
            // InternalDockerCompose.g:6631:1: ( () )
            // InternalDockerCompose.g:6632:2: ()
            {
             before(grammarAccess.getConfigAccess().getConfigAction_0()); 
            // InternalDockerCompose.g:6633:2: ()
            // InternalDockerCompose.g:6633:3: 
            {
            }

             after(grammarAccess.getConfigAccess().getConfigAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__0__Impl"


    // $ANTLR start "rule__Config__Group__1"
    // InternalDockerCompose.g:6641:1: rule__Config__Group__1 : rule__Config__Group__1__Impl rule__Config__Group__2 ;
    public final void rule__Config__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6645:1: ( rule__Config__Group__1__Impl rule__Config__Group__2 )
            // InternalDockerCompose.g:6646:2: rule__Config__Group__1__Impl rule__Config__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__Config__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Config__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__1"


    // $ANTLR start "rule__Config__Group__1__Impl"
    // InternalDockerCompose.g:6653:1: rule__Config__Group__1__Impl : ( ( rule__Config__NameAssignment_1 ) ) ;
    public final void rule__Config__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6657:1: ( ( ( rule__Config__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:6658:1: ( ( rule__Config__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:6658:1: ( ( rule__Config__NameAssignment_1 ) )
            // InternalDockerCompose.g:6659:2: ( rule__Config__NameAssignment_1 )
            {
             before(grammarAccess.getConfigAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:6660:2: ( rule__Config__NameAssignment_1 )
            // InternalDockerCompose.g:6660:3: rule__Config__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Config__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__1__Impl"


    // $ANTLR start "rule__Config__Group__2"
    // InternalDockerCompose.g:6668:1: rule__Config__Group__2 : rule__Config__Group__2__Impl rule__Config__Group__3 ;
    public final void rule__Config__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6672:1: ( rule__Config__Group__2__Impl rule__Config__Group__3 )
            // InternalDockerCompose.g:6673:2: rule__Config__Group__2__Impl rule__Config__Group__3
            {
            pushFollow(FOLLOW_34);
            rule__Config__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Config__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__2"


    // $ANTLR start "rule__Config__Group__2__Impl"
    // InternalDockerCompose.g:6680:1: rule__Config__Group__2__Impl : ( ':' ) ;
    public final void rule__Config__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6684:1: ( ( ':' ) )
            // InternalDockerCompose.g:6685:1: ( ':' )
            {
            // InternalDockerCompose.g:6685:1: ( ':' )
            // InternalDockerCompose.g:6686:2: ':'
            {
             before(grammarAccess.getConfigAccess().getColonKeyword_2()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getConfigAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__2__Impl"


    // $ANTLR start "rule__Config__Group__3"
    // InternalDockerCompose.g:6695:1: rule__Config__Group__3 : rule__Config__Group__3__Impl ;
    public final void rule__Config__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6699:1: ( rule__Config__Group__3__Impl )
            // InternalDockerCompose.g:6700:2: rule__Config__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Config__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__3"


    // $ANTLR start "rule__Config__Group__3__Impl"
    // InternalDockerCompose.g:6706:1: rule__Config__Group__3__Impl : ( ( rule__Config__UnorderedGroup_3 ) ) ;
    public final void rule__Config__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6710:1: ( ( ( rule__Config__UnorderedGroup_3 ) ) )
            // InternalDockerCompose.g:6711:1: ( ( rule__Config__UnorderedGroup_3 ) )
            {
            // InternalDockerCompose.g:6711:1: ( ( rule__Config__UnorderedGroup_3 ) )
            // InternalDockerCompose.g:6712:2: ( rule__Config__UnorderedGroup_3 )
            {
             before(grammarAccess.getConfigAccess().getUnorderedGroup_3()); 
            // InternalDockerCompose.g:6713:2: ( rule__Config__UnorderedGroup_3 )
            // InternalDockerCompose.g:6713:3: rule__Config__UnorderedGroup_3
            {
            pushFollow(FOLLOW_2);
            rule__Config__UnorderedGroup_3();

            state._fsp--;


            }

             after(grammarAccess.getConfigAccess().getUnorderedGroup_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group__3__Impl"


    // $ANTLR start "rule__Config__Group_3_0__0"
    // InternalDockerCompose.g:6722:1: rule__Config__Group_3_0__0 : rule__Config__Group_3_0__0__Impl rule__Config__Group_3_0__1 ;
    public final void rule__Config__Group_3_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6726:1: ( rule__Config__Group_3_0__0__Impl rule__Config__Group_3_0__1 )
            // InternalDockerCompose.g:6727:2: rule__Config__Group_3_0__0__Impl rule__Config__Group_3_0__1
            {
            pushFollow(FOLLOW_12);
            rule__Config__Group_3_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Config__Group_3_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_0__0"


    // $ANTLR start "rule__Config__Group_3_0__0__Impl"
    // InternalDockerCompose.g:6734:1: rule__Config__Group_3_0__0__Impl : ( 'external:' ) ;
    public final void rule__Config__Group_3_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6738:1: ( ( 'external:' ) )
            // InternalDockerCompose.g:6739:1: ( 'external:' )
            {
            // InternalDockerCompose.g:6739:1: ( 'external:' )
            // InternalDockerCompose.g:6740:2: 'external:'
            {
             before(grammarAccess.getConfigAccess().getExternalKeyword_3_0_0()); 
            match(input,76,FOLLOW_2); 
             after(grammarAccess.getConfigAccess().getExternalKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_0__0__Impl"


    // $ANTLR start "rule__Config__Group_3_0__1"
    // InternalDockerCompose.g:6749:1: rule__Config__Group_3_0__1 : rule__Config__Group_3_0__1__Impl ;
    public final void rule__Config__Group_3_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6753:1: ( rule__Config__Group_3_0__1__Impl )
            // InternalDockerCompose.g:6754:2: rule__Config__Group_3_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Config__Group_3_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_0__1"


    // $ANTLR start "rule__Config__Group_3_0__1__Impl"
    // InternalDockerCompose.g:6760:1: rule__Config__Group_3_0__1__Impl : ( ( rule__Config__ExternalAssignment_3_0_1 ) ) ;
    public final void rule__Config__Group_3_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6764:1: ( ( ( rule__Config__ExternalAssignment_3_0_1 ) ) )
            // InternalDockerCompose.g:6765:1: ( ( rule__Config__ExternalAssignment_3_0_1 ) )
            {
            // InternalDockerCompose.g:6765:1: ( ( rule__Config__ExternalAssignment_3_0_1 ) )
            // InternalDockerCompose.g:6766:2: ( rule__Config__ExternalAssignment_3_0_1 )
            {
             before(grammarAccess.getConfigAccess().getExternalAssignment_3_0_1()); 
            // InternalDockerCompose.g:6767:2: ( rule__Config__ExternalAssignment_3_0_1 )
            // InternalDockerCompose.g:6767:3: rule__Config__ExternalAssignment_3_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Config__ExternalAssignment_3_0_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigAccess().getExternalAssignment_3_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_0__1__Impl"


    // $ANTLR start "rule__Config__Group_3_1__0"
    // InternalDockerCompose.g:6776:1: rule__Config__Group_3_1__0 : rule__Config__Group_3_1__0__Impl rule__Config__Group_3_1__1 ;
    public final void rule__Config__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6780:1: ( rule__Config__Group_3_1__0__Impl rule__Config__Group_3_1__1 )
            // InternalDockerCompose.g:6781:2: rule__Config__Group_3_1__0__Impl rule__Config__Group_3_1__1
            {
            pushFollow(FOLLOW_6);
            rule__Config__Group_3_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Config__Group_3_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_1__0"


    // $ANTLR start "rule__Config__Group_3_1__0__Impl"
    // InternalDockerCompose.g:6788:1: rule__Config__Group_3_1__0__Impl : ( 'file:' ) ;
    public final void rule__Config__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6792:1: ( ( 'file:' ) )
            // InternalDockerCompose.g:6793:1: ( 'file:' )
            {
            // InternalDockerCompose.g:6793:1: ( 'file:' )
            // InternalDockerCompose.g:6794:2: 'file:'
            {
             before(grammarAccess.getConfigAccess().getFileKeyword_3_1_0()); 
            match(input,81,FOLLOW_2); 
             after(grammarAccess.getConfigAccess().getFileKeyword_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_1__0__Impl"


    // $ANTLR start "rule__Config__Group_3_1__1"
    // InternalDockerCompose.g:6803:1: rule__Config__Group_3_1__1 : rule__Config__Group_3_1__1__Impl ;
    public final void rule__Config__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6807:1: ( rule__Config__Group_3_1__1__Impl )
            // InternalDockerCompose.g:6808:2: rule__Config__Group_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Config__Group_3_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_1__1"


    // $ANTLR start "rule__Config__Group_3_1__1__Impl"
    // InternalDockerCompose.g:6814:1: rule__Config__Group_3_1__1__Impl : ( ( rule__Config__FileAssignment_3_1_1 ) ) ;
    public final void rule__Config__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6818:1: ( ( ( rule__Config__FileAssignment_3_1_1 ) ) )
            // InternalDockerCompose.g:6819:1: ( ( rule__Config__FileAssignment_3_1_1 ) )
            {
            // InternalDockerCompose.g:6819:1: ( ( rule__Config__FileAssignment_3_1_1 ) )
            // InternalDockerCompose.g:6820:2: ( rule__Config__FileAssignment_3_1_1 )
            {
             before(grammarAccess.getConfigAccess().getFileAssignment_3_1_1()); 
            // InternalDockerCompose.g:6821:2: ( rule__Config__FileAssignment_3_1_1 )
            // InternalDockerCompose.g:6821:3: rule__Config__FileAssignment_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Config__FileAssignment_3_1_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigAccess().getFileAssignment_3_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_1__1__Impl"


    // $ANTLR start "rule__Config__Group_3_2__0"
    // InternalDockerCompose.g:6830:1: rule__Config__Group_3_2__0 : rule__Config__Group_3_2__0__Impl rule__Config__Group_3_2__1 ;
    public final void rule__Config__Group_3_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6834:1: ( rule__Config__Group_3_2__0__Impl rule__Config__Group_3_2__1 )
            // InternalDockerCompose.g:6835:2: rule__Config__Group_3_2__0__Impl rule__Config__Group_3_2__1
            {
            pushFollow(FOLLOW_6);
            rule__Config__Group_3_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Config__Group_3_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_2__0"


    // $ANTLR start "rule__Config__Group_3_2__0__Impl"
    // InternalDockerCompose.g:6842:1: rule__Config__Group_3_2__0__Impl : ( 'name:' ) ;
    public final void rule__Config__Group_3_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6846:1: ( ( 'name:' ) )
            // InternalDockerCompose.g:6847:1: ( 'name:' )
            {
            // InternalDockerCompose.g:6847:1: ( 'name:' )
            // InternalDockerCompose.g:6848:2: 'name:'
            {
             before(grammarAccess.getConfigAccess().getNameKeyword_3_2_0()); 
            match(input,77,FOLLOW_2); 
             after(grammarAccess.getConfigAccess().getNameKeyword_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_2__0__Impl"


    // $ANTLR start "rule__Config__Group_3_2__1"
    // InternalDockerCompose.g:6857:1: rule__Config__Group_3_2__1 : rule__Config__Group_3_2__1__Impl ;
    public final void rule__Config__Group_3_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6861:1: ( rule__Config__Group_3_2__1__Impl )
            // InternalDockerCompose.g:6862:2: rule__Config__Group_3_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Config__Group_3_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_2__1"


    // $ANTLR start "rule__Config__Group_3_2__1__Impl"
    // InternalDockerCompose.g:6868:1: rule__Config__Group_3_2__1__Impl : ( ( rule__Config__Config_nameAssignment_3_2_1 ) ) ;
    public final void rule__Config__Group_3_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6872:1: ( ( ( rule__Config__Config_nameAssignment_3_2_1 ) ) )
            // InternalDockerCompose.g:6873:1: ( ( rule__Config__Config_nameAssignment_3_2_1 ) )
            {
            // InternalDockerCompose.g:6873:1: ( ( rule__Config__Config_nameAssignment_3_2_1 ) )
            // InternalDockerCompose.g:6874:2: ( rule__Config__Config_nameAssignment_3_2_1 )
            {
             before(grammarAccess.getConfigAccess().getConfig_nameAssignment_3_2_1()); 
            // InternalDockerCompose.g:6875:2: ( rule__Config__Config_nameAssignment_3_2_1 )
            // InternalDockerCompose.g:6875:3: rule__Config__Config_nameAssignment_3_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Config__Config_nameAssignment_3_2_1();

            state._fsp--;


            }

             after(grammarAccess.getConfigAccess().getConfig_nameAssignment_3_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Group_3_2__1__Impl"


    // $ANTLR start "rule__Secret__Group__0"
    // InternalDockerCompose.g:6884:1: rule__Secret__Group__0 : rule__Secret__Group__0__Impl rule__Secret__Group__1 ;
    public final void rule__Secret__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6888:1: ( rule__Secret__Group__0__Impl rule__Secret__Group__1 )
            // InternalDockerCompose.g:6889:2: rule__Secret__Group__0__Impl rule__Secret__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__Secret__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__0"


    // $ANTLR start "rule__Secret__Group__0__Impl"
    // InternalDockerCompose.g:6896:1: rule__Secret__Group__0__Impl : ( () ) ;
    public final void rule__Secret__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6900:1: ( ( () ) )
            // InternalDockerCompose.g:6901:1: ( () )
            {
            // InternalDockerCompose.g:6901:1: ( () )
            // InternalDockerCompose.g:6902:2: ()
            {
             before(grammarAccess.getSecretAccess().getSecretAction_0()); 
            // InternalDockerCompose.g:6903:2: ()
            // InternalDockerCompose.g:6903:3: 
            {
            }

             after(grammarAccess.getSecretAccess().getSecretAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__0__Impl"


    // $ANTLR start "rule__Secret__Group__1"
    // InternalDockerCompose.g:6911:1: rule__Secret__Group__1 : rule__Secret__Group__1__Impl rule__Secret__Group__2 ;
    public final void rule__Secret__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6915:1: ( rule__Secret__Group__1__Impl rule__Secret__Group__2 )
            // InternalDockerCompose.g:6916:2: rule__Secret__Group__1__Impl rule__Secret__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__Secret__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__1"


    // $ANTLR start "rule__Secret__Group__1__Impl"
    // InternalDockerCompose.g:6923:1: rule__Secret__Group__1__Impl : ( ( rule__Secret__NameAssignment_1 ) ) ;
    public final void rule__Secret__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6927:1: ( ( ( rule__Secret__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:6928:1: ( ( rule__Secret__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:6928:1: ( ( rule__Secret__NameAssignment_1 ) )
            // InternalDockerCompose.g:6929:2: ( rule__Secret__NameAssignment_1 )
            {
             before(grammarAccess.getSecretAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:6930:2: ( rule__Secret__NameAssignment_1 )
            // InternalDockerCompose.g:6930:3: rule__Secret__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Secret__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__1__Impl"


    // $ANTLR start "rule__Secret__Group__2"
    // InternalDockerCompose.g:6938:1: rule__Secret__Group__2 : rule__Secret__Group__2__Impl rule__Secret__Group__3 ;
    public final void rule__Secret__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6942:1: ( rule__Secret__Group__2__Impl rule__Secret__Group__3 )
            // InternalDockerCompose.g:6943:2: rule__Secret__Group__2__Impl rule__Secret__Group__3
            {
            pushFollow(FOLLOW_35);
            rule__Secret__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__2"


    // $ANTLR start "rule__Secret__Group__2__Impl"
    // InternalDockerCompose.g:6950:1: rule__Secret__Group__2__Impl : ( ':' ) ;
    public final void rule__Secret__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6954:1: ( ( ':' ) )
            // InternalDockerCompose.g:6955:1: ( ':' )
            {
            // InternalDockerCompose.g:6955:1: ( ':' )
            // InternalDockerCompose.g:6956:2: ':'
            {
             before(grammarAccess.getSecretAccess().getColonKeyword_2()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getSecretAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__2__Impl"


    // $ANTLR start "rule__Secret__Group__3"
    // InternalDockerCompose.g:6965:1: rule__Secret__Group__3 : rule__Secret__Group__3__Impl ;
    public final void rule__Secret__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6969:1: ( rule__Secret__Group__3__Impl )
            // InternalDockerCompose.g:6970:2: rule__Secret__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__3"


    // $ANTLR start "rule__Secret__Group__3__Impl"
    // InternalDockerCompose.g:6976:1: rule__Secret__Group__3__Impl : ( ( rule__Secret__UnorderedGroup_3 ) ) ;
    public final void rule__Secret__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6980:1: ( ( ( rule__Secret__UnorderedGroup_3 ) ) )
            // InternalDockerCompose.g:6981:1: ( ( rule__Secret__UnorderedGroup_3 ) )
            {
            // InternalDockerCompose.g:6981:1: ( ( rule__Secret__UnorderedGroup_3 ) )
            // InternalDockerCompose.g:6982:2: ( rule__Secret__UnorderedGroup_3 )
            {
             before(grammarAccess.getSecretAccess().getUnorderedGroup_3()); 
            // InternalDockerCompose.g:6983:2: ( rule__Secret__UnorderedGroup_3 )
            // InternalDockerCompose.g:6983:3: rule__Secret__UnorderedGroup_3
            {
            pushFollow(FOLLOW_2);
            rule__Secret__UnorderedGroup_3();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getUnorderedGroup_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group__3__Impl"


    // $ANTLR start "rule__Secret__Group_3_0__0"
    // InternalDockerCompose.g:6992:1: rule__Secret__Group_3_0__0 : rule__Secret__Group_3_0__0__Impl rule__Secret__Group_3_0__1 ;
    public final void rule__Secret__Group_3_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:6996:1: ( rule__Secret__Group_3_0__0__Impl rule__Secret__Group_3_0__1 )
            // InternalDockerCompose.g:6997:2: rule__Secret__Group_3_0__0__Impl rule__Secret__Group_3_0__1
            {
            pushFollow(FOLLOW_12);
            rule__Secret__Group_3_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_0__0"


    // $ANTLR start "rule__Secret__Group_3_0__0__Impl"
    // InternalDockerCompose.g:7004:1: rule__Secret__Group_3_0__0__Impl : ( 'external:' ) ;
    public final void rule__Secret__Group_3_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7008:1: ( ( 'external:' ) )
            // InternalDockerCompose.g:7009:1: ( 'external:' )
            {
            // InternalDockerCompose.g:7009:1: ( 'external:' )
            // InternalDockerCompose.g:7010:2: 'external:'
            {
             before(grammarAccess.getSecretAccess().getExternalKeyword_3_0_0()); 
            match(input,76,FOLLOW_2); 
             after(grammarAccess.getSecretAccess().getExternalKeyword_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_0__0__Impl"


    // $ANTLR start "rule__Secret__Group_3_0__1"
    // InternalDockerCompose.g:7019:1: rule__Secret__Group_3_0__1 : rule__Secret__Group_3_0__1__Impl ;
    public final void rule__Secret__Group_3_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7023:1: ( rule__Secret__Group_3_0__1__Impl )
            // InternalDockerCompose.g:7024:2: rule__Secret__Group_3_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_0__1"


    // $ANTLR start "rule__Secret__Group_3_0__1__Impl"
    // InternalDockerCompose.g:7030:1: rule__Secret__Group_3_0__1__Impl : ( ( rule__Secret__ExternalAssignment_3_0_1 ) ) ;
    public final void rule__Secret__Group_3_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7034:1: ( ( ( rule__Secret__ExternalAssignment_3_0_1 ) ) )
            // InternalDockerCompose.g:7035:1: ( ( rule__Secret__ExternalAssignment_3_0_1 ) )
            {
            // InternalDockerCompose.g:7035:1: ( ( rule__Secret__ExternalAssignment_3_0_1 ) )
            // InternalDockerCompose.g:7036:2: ( rule__Secret__ExternalAssignment_3_0_1 )
            {
             before(grammarAccess.getSecretAccess().getExternalAssignment_3_0_1()); 
            // InternalDockerCompose.g:7037:2: ( rule__Secret__ExternalAssignment_3_0_1 )
            // InternalDockerCompose.g:7037:3: rule__Secret__ExternalAssignment_3_0_1
            {
            pushFollow(FOLLOW_2);
            rule__Secret__ExternalAssignment_3_0_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getExternalAssignment_3_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_0__1__Impl"


    // $ANTLR start "rule__Secret__Group_3_1__0"
    // InternalDockerCompose.g:7046:1: rule__Secret__Group_3_1__0 : rule__Secret__Group_3_1__0__Impl rule__Secret__Group_3_1__1 ;
    public final void rule__Secret__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7050:1: ( rule__Secret__Group_3_1__0__Impl rule__Secret__Group_3_1__1 )
            // InternalDockerCompose.g:7051:2: rule__Secret__Group_3_1__0__Impl rule__Secret__Group_3_1__1
            {
            pushFollow(FOLLOW_6);
            rule__Secret__Group_3_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_1__0"


    // $ANTLR start "rule__Secret__Group_3_1__0__Impl"
    // InternalDockerCompose.g:7058:1: rule__Secret__Group_3_1__0__Impl : ( 'file:' ) ;
    public final void rule__Secret__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7062:1: ( ( 'file:' ) )
            // InternalDockerCompose.g:7063:1: ( 'file:' )
            {
            // InternalDockerCompose.g:7063:1: ( 'file:' )
            // InternalDockerCompose.g:7064:2: 'file:'
            {
             before(grammarAccess.getSecretAccess().getFileKeyword_3_1_0()); 
            match(input,81,FOLLOW_2); 
             after(grammarAccess.getSecretAccess().getFileKeyword_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_1__0__Impl"


    // $ANTLR start "rule__Secret__Group_3_1__1"
    // InternalDockerCompose.g:7073:1: rule__Secret__Group_3_1__1 : rule__Secret__Group_3_1__1__Impl ;
    public final void rule__Secret__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7077:1: ( rule__Secret__Group_3_1__1__Impl )
            // InternalDockerCompose.g:7078:2: rule__Secret__Group_3_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_1__1"


    // $ANTLR start "rule__Secret__Group_3_1__1__Impl"
    // InternalDockerCompose.g:7084:1: rule__Secret__Group_3_1__1__Impl : ( ( rule__Secret__FileAssignment_3_1_1 ) ) ;
    public final void rule__Secret__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7088:1: ( ( ( rule__Secret__FileAssignment_3_1_1 ) ) )
            // InternalDockerCompose.g:7089:1: ( ( rule__Secret__FileAssignment_3_1_1 ) )
            {
            // InternalDockerCompose.g:7089:1: ( ( rule__Secret__FileAssignment_3_1_1 ) )
            // InternalDockerCompose.g:7090:2: ( rule__Secret__FileAssignment_3_1_1 )
            {
             before(grammarAccess.getSecretAccess().getFileAssignment_3_1_1()); 
            // InternalDockerCompose.g:7091:2: ( rule__Secret__FileAssignment_3_1_1 )
            // InternalDockerCompose.g:7091:3: rule__Secret__FileAssignment_3_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Secret__FileAssignment_3_1_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getFileAssignment_3_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_1__1__Impl"


    // $ANTLR start "rule__Secret__Group_3_2__0"
    // InternalDockerCompose.g:7100:1: rule__Secret__Group_3_2__0 : rule__Secret__Group_3_2__0__Impl rule__Secret__Group_3_2__1 ;
    public final void rule__Secret__Group_3_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7104:1: ( rule__Secret__Group_3_2__0__Impl rule__Secret__Group_3_2__1 )
            // InternalDockerCompose.g:7105:2: rule__Secret__Group_3_2__0__Impl rule__Secret__Group_3_2__1
            {
            pushFollow(FOLLOW_6);
            rule__Secret__Group_3_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_2__0"


    // $ANTLR start "rule__Secret__Group_3_2__0__Impl"
    // InternalDockerCompose.g:7112:1: rule__Secret__Group_3_2__0__Impl : ( 'environment:' ) ;
    public final void rule__Secret__Group_3_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7116:1: ( ( 'environment:' ) )
            // InternalDockerCompose.g:7117:1: ( 'environment:' )
            {
            // InternalDockerCompose.g:7117:1: ( 'environment:' )
            // InternalDockerCompose.g:7118:2: 'environment:'
            {
             before(grammarAccess.getSecretAccess().getEnvironmentKeyword_3_2_0()); 
            match(input,82,FOLLOW_2); 
             after(grammarAccess.getSecretAccess().getEnvironmentKeyword_3_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_2__0__Impl"


    // $ANTLR start "rule__Secret__Group_3_2__1"
    // InternalDockerCompose.g:7127:1: rule__Secret__Group_3_2__1 : rule__Secret__Group_3_2__1__Impl ;
    public final void rule__Secret__Group_3_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7131:1: ( rule__Secret__Group_3_2__1__Impl )
            // InternalDockerCompose.g:7132:2: rule__Secret__Group_3_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_2__1"


    // $ANTLR start "rule__Secret__Group_3_2__1__Impl"
    // InternalDockerCompose.g:7138:1: rule__Secret__Group_3_2__1__Impl : ( ( rule__Secret__EnvironmentAssignment_3_2_1 ) ) ;
    public final void rule__Secret__Group_3_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7142:1: ( ( ( rule__Secret__EnvironmentAssignment_3_2_1 ) ) )
            // InternalDockerCompose.g:7143:1: ( ( rule__Secret__EnvironmentAssignment_3_2_1 ) )
            {
            // InternalDockerCompose.g:7143:1: ( ( rule__Secret__EnvironmentAssignment_3_2_1 ) )
            // InternalDockerCompose.g:7144:2: ( rule__Secret__EnvironmentAssignment_3_2_1 )
            {
             before(grammarAccess.getSecretAccess().getEnvironmentAssignment_3_2_1()); 
            // InternalDockerCompose.g:7145:2: ( rule__Secret__EnvironmentAssignment_3_2_1 )
            // InternalDockerCompose.g:7145:3: rule__Secret__EnvironmentAssignment_3_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Secret__EnvironmentAssignment_3_2_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getEnvironmentAssignment_3_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_2__1__Impl"


    // $ANTLR start "rule__Secret__Group_3_3__0"
    // InternalDockerCompose.g:7154:1: rule__Secret__Group_3_3__0 : rule__Secret__Group_3_3__0__Impl rule__Secret__Group_3_3__1 ;
    public final void rule__Secret__Group_3_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7158:1: ( rule__Secret__Group_3_3__0__Impl rule__Secret__Group_3_3__1 )
            // InternalDockerCompose.g:7159:2: rule__Secret__Group_3_3__0__Impl rule__Secret__Group_3_3__1
            {
            pushFollow(FOLLOW_6);
            rule__Secret__Group_3_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_3__0"


    // $ANTLR start "rule__Secret__Group_3_3__0__Impl"
    // InternalDockerCompose.g:7166:1: rule__Secret__Group_3_3__0__Impl : ( 'name:' ) ;
    public final void rule__Secret__Group_3_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7170:1: ( ( 'name:' ) )
            // InternalDockerCompose.g:7171:1: ( 'name:' )
            {
            // InternalDockerCompose.g:7171:1: ( 'name:' )
            // InternalDockerCompose.g:7172:2: 'name:'
            {
             before(grammarAccess.getSecretAccess().getNameKeyword_3_3_0()); 
            match(input,77,FOLLOW_2); 
             after(grammarAccess.getSecretAccess().getNameKeyword_3_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_3__0__Impl"


    // $ANTLR start "rule__Secret__Group_3_3__1"
    // InternalDockerCompose.g:7181:1: rule__Secret__Group_3_3__1 : rule__Secret__Group_3_3__1__Impl ;
    public final void rule__Secret__Group_3_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7185:1: ( rule__Secret__Group_3_3__1__Impl )
            // InternalDockerCompose.g:7186:2: rule__Secret__Group_3_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Group_3_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_3__1"


    // $ANTLR start "rule__Secret__Group_3_3__1__Impl"
    // InternalDockerCompose.g:7192:1: rule__Secret__Group_3_3__1__Impl : ( ( rule__Secret__Secret_nameAssignment_3_3_1 ) ) ;
    public final void rule__Secret__Group_3_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7196:1: ( ( ( rule__Secret__Secret_nameAssignment_3_3_1 ) ) )
            // InternalDockerCompose.g:7197:1: ( ( rule__Secret__Secret_nameAssignment_3_3_1 ) )
            {
            // InternalDockerCompose.g:7197:1: ( ( rule__Secret__Secret_nameAssignment_3_3_1 ) )
            // InternalDockerCompose.g:7198:2: ( rule__Secret__Secret_nameAssignment_3_3_1 )
            {
             before(grammarAccess.getSecretAccess().getSecret_nameAssignment_3_3_1()); 
            // InternalDockerCompose.g:7199:2: ( rule__Secret__Secret_nameAssignment_3_3_1 )
            // InternalDockerCompose.g:7199:3: rule__Secret__Secret_nameAssignment_3_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Secret__Secret_nameAssignment_3_3_1();

            state._fsp--;


            }

             after(grammarAccess.getSecretAccess().getSecret_nameAssignment_3_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Group_3_3__1__Impl"


    // $ANTLR start "rule__VolumeLabel__Group__0"
    // InternalDockerCompose.g:7208:1: rule__VolumeLabel__Group__0 : rule__VolumeLabel__Group__0__Impl rule__VolumeLabel__Group__1 ;
    public final void rule__VolumeLabel__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7212:1: ( rule__VolumeLabel__Group__0__Impl rule__VolumeLabel__Group__1 )
            // InternalDockerCompose.g:7213:2: rule__VolumeLabel__Group__0__Impl rule__VolumeLabel__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__VolumeLabel__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeLabel__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__0"


    // $ANTLR start "rule__VolumeLabel__Group__0__Impl"
    // InternalDockerCompose.g:7220:1: rule__VolumeLabel__Group__0__Impl : ( () ) ;
    public final void rule__VolumeLabel__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7224:1: ( ( () ) )
            // InternalDockerCompose.g:7225:1: ( () )
            {
            // InternalDockerCompose.g:7225:1: ( () )
            // InternalDockerCompose.g:7226:2: ()
            {
             before(grammarAccess.getVolumeLabelAccess().getVolumeLabelAction_0()); 
            // InternalDockerCompose.g:7227:2: ()
            // InternalDockerCompose.g:7227:3: 
            {
            }

             after(grammarAccess.getVolumeLabelAccess().getVolumeLabelAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__0__Impl"


    // $ANTLR start "rule__VolumeLabel__Group__1"
    // InternalDockerCompose.g:7235:1: rule__VolumeLabel__Group__1 : rule__VolumeLabel__Group__1__Impl rule__VolumeLabel__Group__2 ;
    public final void rule__VolumeLabel__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7239:1: ( rule__VolumeLabel__Group__1__Impl rule__VolumeLabel__Group__2 )
            // InternalDockerCompose.g:7240:2: rule__VolumeLabel__Group__1__Impl rule__VolumeLabel__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__VolumeLabel__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeLabel__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__1"


    // $ANTLR start "rule__VolumeLabel__Group__1__Impl"
    // InternalDockerCompose.g:7247:1: rule__VolumeLabel__Group__1__Impl : ( ( rule__VolumeLabel__NameAssignment_1 ) ) ;
    public final void rule__VolumeLabel__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7251:1: ( ( ( rule__VolumeLabel__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:7252:1: ( ( rule__VolumeLabel__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:7252:1: ( ( rule__VolumeLabel__NameAssignment_1 ) )
            // InternalDockerCompose.g:7253:2: ( rule__VolumeLabel__NameAssignment_1 )
            {
             before(grammarAccess.getVolumeLabelAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:7254:2: ( rule__VolumeLabel__NameAssignment_1 )
            // InternalDockerCompose.g:7254:3: rule__VolumeLabel__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeLabel__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeLabelAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__1__Impl"


    // $ANTLR start "rule__VolumeLabel__Group__2"
    // InternalDockerCompose.g:7262:1: rule__VolumeLabel__Group__2 : rule__VolumeLabel__Group__2__Impl rule__VolumeLabel__Group__3 ;
    public final void rule__VolumeLabel__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7266:1: ( rule__VolumeLabel__Group__2__Impl rule__VolumeLabel__Group__3 )
            // InternalDockerCompose.g:7267:2: rule__VolumeLabel__Group__2__Impl rule__VolumeLabel__Group__3
            {
            pushFollow(FOLLOW_6);
            rule__VolumeLabel__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeLabel__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__2"


    // $ANTLR start "rule__VolumeLabel__Group__2__Impl"
    // InternalDockerCompose.g:7274:1: rule__VolumeLabel__Group__2__Impl : ( ':' ) ;
    public final void rule__VolumeLabel__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7278:1: ( ( ':' ) )
            // InternalDockerCompose.g:7279:1: ( ':' )
            {
            // InternalDockerCompose.g:7279:1: ( ':' )
            // InternalDockerCompose.g:7280:2: ':'
            {
             before(grammarAccess.getVolumeLabelAccess().getColonKeyword_2()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getVolumeLabelAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__2__Impl"


    // $ANTLR start "rule__VolumeLabel__Group__3"
    // InternalDockerCompose.g:7289:1: rule__VolumeLabel__Group__3 : rule__VolumeLabel__Group__3__Impl ;
    public final void rule__VolumeLabel__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7293:1: ( rule__VolumeLabel__Group__3__Impl )
            // InternalDockerCompose.g:7294:2: rule__VolumeLabel__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeLabel__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__3"


    // $ANTLR start "rule__VolumeLabel__Group__3__Impl"
    // InternalDockerCompose.g:7300:1: rule__VolumeLabel__Group__3__Impl : ( ( rule__VolumeLabel__ValueAssignment_3 ) ) ;
    public final void rule__VolumeLabel__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7304:1: ( ( ( rule__VolumeLabel__ValueAssignment_3 ) ) )
            // InternalDockerCompose.g:7305:1: ( ( rule__VolumeLabel__ValueAssignment_3 ) )
            {
            // InternalDockerCompose.g:7305:1: ( ( rule__VolumeLabel__ValueAssignment_3 ) )
            // InternalDockerCompose.g:7306:2: ( rule__VolumeLabel__ValueAssignment_3 )
            {
             before(grammarAccess.getVolumeLabelAccess().getValueAssignment_3()); 
            // InternalDockerCompose.g:7307:2: ( rule__VolumeLabel__ValueAssignment_3 )
            // InternalDockerCompose.g:7307:3: rule__VolumeLabel__ValueAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__VolumeLabel__ValueAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getVolumeLabelAccess().getValueAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__Group__3__Impl"


    // $ANTLR start "rule__VolumeDriverOpt__Group__0"
    // InternalDockerCompose.g:7316:1: rule__VolumeDriverOpt__Group__0 : rule__VolumeDriverOpt__Group__0__Impl rule__VolumeDriverOpt__Group__1 ;
    public final void rule__VolumeDriverOpt__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7320:1: ( rule__VolumeDriverOpt__Group__0__Impl rule__VolumeDriverOpt__Group__1 )
            // InternalDockerCompose.g:7321:2: rule__VolumeDriverOpt__Group__0__Impl rule__VolumeDriverOpt__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__VolumeDriverOpt__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__0"


    // $ANTLR start "rule__VolumeDriverOpt__Group__0__Impl"
    // InternalDockerCompose.g:7328:1: rule__VolumeDriverOpt__Group__0__Impl : ( () ) ;
    public final void rule__VolumeDriverOpt__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7332:1: ( ( () ) )
            // InternalDockerCompose.g:7333:1: ( () )
            {
            // InternalDockerCompose.g:7333:1: ( () )
            // InternalDockerCompose.g:7334:2: ()
            {
             before(grammarAccess.getVolumeDriverOptAccess().getVolumeDriverOptAction_0()); 
            // InternalDockerCompose.g:7335:2: ()
            // InternalDockerCompose.g:7335:3: 
            {
            }

             after(grammarAccess.getVolumeDriverOptAccess().getVolumeDriverOptAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__0__Impl"


    // $ANTLR start "rule__VolumeDriverOpt__Group__1"
    // InternalDockerCompose.g:7343:1: rule__VolumeDriverOpt__Group__1 : rule__VolumeDriverOpt__Group__1__Impl rule__VolumeDriverOpt__Group__2 ;
    public final void rule__VolumeDriverOpt__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7347:1: ( rule__VolumeDriverOpt__Group__1__Impl rule__VolumeDriverOpt__Group__2 )
            // InternalDockerCompose.g:7348:2: rule__VolumeDriverOpt__Group__1__Impl rule__VolumeDriverOpt__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__VolumeDriverOpt__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__1"


    // $ANTLR start "rule__VolumeDriverOpt__Group__1__Impl"
    // InternalDockerCompose.g:7355:1: rule__VolumeDriverOpt__Group__1__Impl : ( ( rule__VolumeDriverOpt__NameAssignment_1 ) ) ;
    public final void rule__VolumeDriverOpt__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7359:1: ( ( ( rule__VolumeDriverOpt__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:7360:1: ( ( rule__VolumeDriverOpt__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:7360:1: ( ( rule__VolumeDriverOpt__NameAssignment_1 ) )
            // InternalDockerCompose.g:7361:2: ( rule__VolumeDriverOpt__NameAssignment_1 )
            {
             before(grammarAccess.getVolumeDriverOptAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:7362:2: ( rule__VolumeDriverOpt__NameAssignment_1 )
            // InternalDockerCompose.g:7362:3: rule__VolumeDriverOpt__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getVolumeDriverOptAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__1__Impl"


    // $ANTLR start "rule__VolumeDriverOpt__Group__2"
    // InternalDockerCompose.g:7370:1: rule__VolumeDriverOpt__Group__2 : rule__VolumeDriverOpt__Group__2__Impl rule__VolumeDriverOpt__Group__3 ;
    public final void rule__VolumeDriverOpt__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7374:1: ( rule__VolumeDriverOpt__Group__2__Impl rule__VolumeDriverOpt__Group__3 )
            // InternalDockerCompose.g:7375:2: rule__VolumeDriverOpt__Group__2__Impl rule__VolumeDriverOpt__Group__3
            {
            pushFollow(FOLLOW_6);
            rule__VolumeDriverOpt__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__2"


    // $ANTLR start "rule__VolumeDriverOpt__Group__2__Impl"
    // InternalDockerCompose.g:7382:1: rule__VolumeDriverOpt__Group__2__Impl : ( ':' ) ;
    public final void rule__VolumeDriverOpt__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7386:1: ( ( ':' ) )
            // InternalDockerCompose.g:7387:1: ( ':' )
            {
            // InternalDockerCompose.g:7387:1: ( ':' )
            // InternalDockerCompose.g:7388:2: ':'
            {
             before(grammarAccess.getVolumeDriverOptAccess().getColonKeyword_2()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getVolumeDriverOptAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__2__Impl"


    // $ANTLR start "rule__VolumeDriverOpt__Group__3"
    // InternalDockerCompose.g:7397:1: rule__VolumeDriverOpt__Group__3 : rule__VolumeDriverOpt__Group__3__Impl ;
    public final void rule__VolumeDriverOpt__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7401:1: ( rule__VolumeDriverOpt__Group__3__Impl )
            // InternalDockerCompose.g:7402:2: rule__VolumeDriverOpt__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__3"


    // $ANTLR start "rule__VolumeDriverOpt__Group__3__Impl"
    // InternalDockerCompose.g:7408:1: rule__VolumeDriverOpt__Group__3__Impl : ( ( rule__VolumeDriverOpt__ValueAssignment_3 ) ) ;
    public final void rule__VolumeDriverOpt__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7412:1: ( ( ( rule__VolumeDriverOpt__ValueAssignment_3 ) ) )
            // InternalDockerCompose.g:7413:1: ( ( rule__VolumeDriverOpt__ValueAssignment_3 ) )
            {
            // InternalDockerCompose.g:7413:1: ( ( rule__VolumeDriverOpt__ValueAssignment_3 ) )
            // InternalDockerCompose.g:7414:2: ( rule__VolumeDriverOpt__ValueAssignment_3 )
            {
             before(grammarAccess.getVolumeDriverOptAccess().getValueAssignment_3()); 
            // InternalDockerCompose.g:7415:2: ( rule__VolumeDriverOpt__ValueAssignment_3 )
            // InternalDockerCompose.g:7415:3: rule__VolumeDriverOpt__ValueAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__VolumeDriverOpt__ValueAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getVolumeDriverOptAccess().getValueAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__Group__3__Impl"


    // $ANTLR start "rule__NetworkLabel__Group__0"
    // InternalDockerCompose.g:7424:1: rule__NetworkLabel__Group__0 : rule__NetworkLabel__Group__0__Impl rule__NetworkLabel__Group__1 ;
    public final void rule__NetworkLabel__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7428:1: ( rule__NetworkLabel__Group__0__Impl rule__NetworkLabel__Group__1 )
            // InternalDockerCompose.g:7429:2: rule__NetworkLabel__Group__0__Impl rule__NetworkLabel__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__NetworkLabel__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkLabel__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__0"


    // $ANTLR start "rule__NetworkLabel__Group__0__Impl"
    // InternalDockerCompose.g:7436:1: rule__NetworkLabel__Group__0__Impl : ( () ) ;
    public final void rule__NetworkLabel__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7440:1: ( ( () ) )
            // InternalDockerCompose.g:7441:1: ( () )
            {
            // InternalDockerCompose.g:7441:1: ( () )
            // InternalDockerCompose.g:7442:2: ()
            {
             before(grammarAccess.getNetworkLabelAccess().getNetworkLabelAction_0()); 
            // InternalDockerCompose.g:7443:2: ()
            // InternalDockerCompose.g:7443:3: 
            {
            }

             after(grammarAccess.getNetworkLabelAccess().getNetworkLabelAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__0__Impl"


    // $ANTLR start "rule__NetworkLabel__Group__1"
    // InternalDockerCompose.g:7451:1: rule__NetworkLabel__Group__1 : rule__NetworkLabel__Group__1__Impl rule__NetworkLabel__Group__2 ;
    public final void rule__NetworkLabel__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7455:1: ( rule__NetworkLabel__Group__1__Impl rule__NetworkLabel__Group__2 )
            // InternalDockerCompose.g:7456:2: rule__NetworkLabel__Group__1__Impl rule__NetworkLabel__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__NetworkLabel__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkLabel__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__1"


    // $ANTLR start "rule__NetworkLabel__Group__1__Impl"
    // InternalDockerCompose.g:7463:1: rule__NetworkLabel__Group__1__Impl : ( ( rule__NetworkLabel__NameAssignment_1 ) ) ;
    public final void rule__NetworkLabel__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7467:1: ( ( ( rule__NetworkLabel__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:7468:1: ( ( rule__NetworkLabel__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:7468:1: ( ( rule__NetworkLabel__NameAssignment_1 ) )
            // InternalDockerCompose.g:7469:2: ( rule__NetworkLabel__NameAssignment_1 )
            {
             before(grammarAccess.getNetworkLabelAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:7470:2: ( rule__NetworkLabel__NameAssignment_1 )
            // InternalDockerCompose.g:7470:3: rule__NetworkLabel__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkLabel__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkLabelAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__1__Impl"


    // $ANTLR start "rule__NetworkLabel__Group__2"
    // InternalDockerCompose.g:7478:1: rule__NetworkLabel__Group__2 : rule__NetworkLabel__Group__2__Impl rule__NetworkLabel__Group__3 ;
    public final void rule__NetworkLabel__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7482:1: ( rule__NetworkLabel__Group__2__Impl rule__NetworkLabel__Group__3 )
            // InternalDockerCompose.g:7483:2: rule__NetworkLabel__Group__2__Impl rule__NetworkLabel__Group__3
            {
            pushFollow(FOLLOW_6);
            rule__NetworkLabel__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkLabel__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__2"


    // $ANTLR start "rule__NetworkLabel__Group__2__Impl"
    // InternalDockerCompose.g:7490:1: rule__NetworkLabel__Group__2__Impl : ( ':' ) ;
    public final void rule__NetworkLabel__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7494:1: ( ( ':' ) )
            // InternalDockerCompose.g:7495:1: ( ':' )
            {
            // InternalDockerCompose.g:7495:1: ( ':' )
            // InternalDockerCompose.g:7496:2: ':'
            {
             before(grammarAccess.getNetworkLabelAccess().getColonKeyword_2()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getNetworkLabelAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__2__Impl"


    // $ANTLR start "rule__NetworkLabel__Group__3"
    // InternalDockerCompose.g:7505:1: rule__NetworkLabel__Group__3 : rule__NetworkLabel__Group__3__Impl ;
    public final void rule__NetworkLabel__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7509:1: ( rule__NetworkLabel__Group__3__Impl )
            // InternalDockerCompose.g:7510:2: rule__NetworkLabel__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkLabel__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__3"


    // $ANTLR start "rule__NetworkLabel__Group__3__Impl"
    // InternalDockerCompose.g:7516:1: rule__NetworkLabel__Group__3__Impl : ( ( rule__NetworkLabel__ValueAssignment_3 ) ) ;
    public final void rule__NetworkLabel__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7520:1: ( ( ( rule__NetworkLabel__ValueAssignment_3 ) ) )
            // InternalDockerCompose.g:7521:1: ( ( rule__NetworkLabel__ValueAssignment_3 ) )
            {
            // InternalDockerCompose.g:7521:1: ( ( rule__NetworkLabel__ValueAssignment_3 ) )
            // InternalDockerCompose.g:7522:2: ( rule__NetworkLabel__ValueAssignment_3 )
            {
             before(grammarAccess.getNetworkLabelAccess().getValueAssignment_3()); 
            // InternalDockerCompose.g:7523:2: ( rule__NetworkLabel__ValueAssignment_3 )
            // InternalDockerCompose.g:7523:3: rule__NetworkLabel__ValueAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__NetworkLabel__ValueAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getNetworkLabelAccess().getValueAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__Group__3__Impl"


    // $ANTLR start "rule__NetworkDriverOpt__Group__0"
    // InternalDockerCompose.g:7532:1: rule__NetworkDriverOpt__Group__0 : rule__NetworkDriverOpt__Group__0__Impl rule__NetworkDriverOpt__Group__1 ;
    public final void rule__NetworkDriverOpt__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7536:1: ( rule__NetworkDriverOpt__Group__0__Impl rule__NetworkDriverOpt__Group__1 )
            // InternalDockerCompose.g:7537:2: rule__NetworkDriverOpt__Group__0__Impl rule__NetworkDriverOpt__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__NetworkDriverOpt__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__0"


    // $ANTLR start "rule__NetworkDriverOpt__Group__0__Impl"
    // InternalDockerCompose.g:7544:1: rule__NetworkDriverOpt__Group__0__Impl : ( () ) ;
    public final void rule__NetworkDriverOpt__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7548:1: ( ( () ) )
            // InternalDockerCompose.g:7549:1: ( () )
            {
            // InternalDockerCompose.g:7549:1: ( () )
            // InternalDockerCompose.g:7550:2: ()
            {
             before(grammarAccess.getNetworkDriverOptAccess().getNetworkDriverOptAction_0()); 
            // InternalDockerCompose.g:7551:2: ()
            // InternalDockerCompose.g:7551:3: 
            {
            }

             after(grammarAccess.getNetworkDriverOptAccess().getNetworkDriverOptAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__0__Impl"


    // $ANTLR start "rule__NetworkDriverOpt__Group__1"
    // InternalDockerCompose.g:7559:1: rule__NetworkDriverOpt__Group__1 : rule__NetworkDriverOpt__Group__1__Impl rule__NetworkDriverOpt__Group__2 ;
    public final void rule__NetworkDriverOpt__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7563:1: ( rule__NetworkDriverOpt__Group__1__Impl rule__NetworkDriverOpt__Group__2 )
            // InternalDockerCompose.g:7564:2: rule__NetworkDriverOpt__Group__1__Impl rule__NetworkDriverOpt__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__NetworkDriverOpt__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__1"


    // $ANTLR start "rule__NetworkDriverOpt__Group__1__Impl"
    // InternalDockerCompose.g:7571:1: rule__NetworkDriverOpt__Group__1__Impl : ( ( rule__NetworkDriverOpt__NameAssignment_1 ) ) ;
    public final void rule__NetworkDriverOpt__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7575:1: ( ( ( rule__NetworkDriverOpt__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:7576:1: ( ( rule__NetworkDriverOpt__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:7576:1: ( ( rule__NetworkDriverOpt__NameAssignment_1 ) )
            // InternalDockerCompose.g:7577:2: ( rule__NetworkDriverOpt__NameAssignment_1 )
            {
             before(grammarAccess.getNetworkDriverOptAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:7578:2: ( rule__NetworkDriverOpt__NameAssignment_1 )
            // InternalDockerCompose.g:7578:3: rule__NetworkDriverOpt__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getNetworkDriverOptAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__1__Impl"


    // $ANTLR start "rule__NetworkDriverOpt__Group__2"
    // InternalDockerCompose.g:7586:1: rule__NetworkDriverOpt__Group__2 : rule__NetworkDriverOpt__Group__2__Impl rule__NetworkDriverOpt__Group__3 ;
    public final void rule__NetworkDriverOpt__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7590:1: ( rule__NetworkDriverOpt__Group__2__Impl rule__NetworkDriverOpt__Group__3 )
            // InternalDockerCompose.g:7591:2: rule__NetworkDriverOpt__Group__2__Impl rule__NetworkDriverOpt__Group__3
            {
            pushFollow(FOLLOW_6);
            rule__NetworkDriverOpt__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__2"


    // $ANTLR start "rule__NetworkDriverOpt__Group__2__Impl"
    // InternalDockerCompose.g:7598:1: rule__NetworkDriverOpt__Group__2__Impl : ( ':' ) ;
    public final void rule__NetworkDriverOpt__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7602:1: ( ( ':' ) )
            // InternalDockerCompose.g:7603:1: ( ':' )
            {
            // InternalDockerCompose.g:7603:1: ( ':' )
            // InternalDockerCompose.g:7604:2: ':'
            {
             before(grammarAccess.getNetworkDriverOptAccess().getColonKeyword_2()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getNetworkDriverOptAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__2__Impl"


    // $ANTLR start "rule__NetworkDriverOpt__Group__3"
    // InternalDockerCompose.g:7613:1: rule__NetworkDriverOpt__Group__3 : rule__NetworkDriverOpt__Group__3__Impl ;
    public final void rule__NetworkDriverOpt__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7617:1: ( rule__NetworkDriverOpt__Group__3__Impl )
            // InternalDockerCompose.g:7618:2: rule__NetworkDriverOpt__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__3"


    // $ANTLR start "rule__NetworkDriverOpt__Group__3__Impl"
    // InternalDockerCompose.g:7624:1: rule__NetworkDriverOpt__Group__3__Impl : ( ( rule__NetworkDriverOpt__ValueAssignment_3 ) ) ;
    public final void rule__NetworkDriverOpt__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7628:1: ( ( ( rule__NetworkDriverOpt__ValueAssignment_3 ) ) )
            // InternalDockerCompose.g:7629:1: ( ( rule__NetworkDriverOpt__ValueAssignment_3 ) )
            {
            // InternalDockerCompose.g:7629:1: ( ( rule__NetworkDriverOpt__ValueAssignment_3 ) )
            // InternalDockerCompose.g:7630:2: ( rule__NetworkDriverOpt__ValueAssignment_3 )
            {
             before(grammarAccess.getNetworkDriverOptAccess().getValueAssignment_3()); 
            // InternalDockerCompose.g:7631:2: ( rule__NetworkDriverOpt__ValueAssignment_3 )
            // InternalDockerCompose.g:7631:3: rule__NetworkDriverOpt__ValueAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__NetworkDriverOpt__ValueAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getNetworkDriverOptAccess().getValueAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__Group__3__Impl"


    // $ANTLR start "rule__IPAM__Group__0"
    // InternalDockerCompose.g:7640:1: rule__IPAM__Group__0 : rule__IPAM__Group__0__Impl rule__IPAM__Group__1 ;
    public final void rule__IPAM__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7644:1: ( rule__IPAM__Group__0__Impl rule__IPAM__Group__1 )
            // InternalDockerCompose.g:7645:2: rule__IPAM__Group__0__Impl rule__IPAM__Group__1
            {
            pushFollow(FOLLOW_32);
            rule__IPAM__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAM__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group__0"


    // $ANTLR start "rule__IPAM__Group__0__Impl"
    // InternalDockerCompose.g:7652:1: rule__IPAM__Group__0__Impl : ( () ) ;
    public final void rule__IPAM__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7656:1: ( ( () ) )
            // InternalDockerCompose.g:7657:1: ( () )
            {
            // InternalDockerCompose.g:7657:1: ( () )
            // InternalDockerCompose.g:7658:2: ()
            {
             before(grammarAccess.getIPAMAccess().getIPAMAction_0()); 
            // InternalDockerCompose.g:7659:2: ()
            // InternalDockerCompose.g:7659:3: 
            {
            }

             after(grammarAccess.getIPAMAccess().getIPAMAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group__0__Impl"


    // $ANTLR start "rule__IPAM__Group__1"
    // InternalDockerCompose.g:7667:1: rule__IPAM__Group__1 : rule__IPAM__Group__1__Impl ;
    public final void rule__IPAM__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7671:1: ( rule__IPAM__Group__1__Impl )
            // InternalDockerCompose.g:7672:2: rule__IPAM__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group__1"


    // $ANTLR start "rule__IPAM__Group__1__Impl"
    // InternalDockerCompose.g:7678:1: rule__IPAM__Group__1__Impl : ( ( rule__IPAM__UnorderedGroup_1 ) ) ;
    public final void rule__IPAM__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7682:1: ( ( ( rule__IPAM__UnorderedGroup_1 ) ) )
            // InternalDockerCompose.g:7683:1: ( ( rule__IPAM__UnorderedGroup_1 ) )
            {
            // InternalDockerCompose.g:7683:1: ( ( rule__IPAM__UnorderedGroup_1 ) )
            // InternalDockerCompose.g:7684:2: ( rule__IPAM__UnorderedGroup_1 )
            {
             before(grammarAccess.getIPAMAccess().getUnorderedGroup_1()); 
            // InternalDockerCompose.g:7685:2: ( rule__IPAM__UnorderedGroup_1 )
            // InternalDockerCompose.g:7685:3: rule__IPAM__UnorderedGroup_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__UnorderedGroup_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAccess().getUnorderedGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group__1__Impl"


    // $ANTLR start "rule__IPAM__Group_1_0__0"
    // InternalDockerCompose.g:7694:1: rule__IPAM__Group_1_0__0 : rule__IPAM__Group_1_0__0__Impl rule__IPAM__Group_1_0__1 ;
    public final void rule__IPAM__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7698:1: ( rule__IPAM__Group_1_0__0__Impl rule__IPAM__Group_1_0__1 )
            // InternalDockerCompose.g:7699:2: rule__IPAM__Group_1_0__0__Impl rule__IPAM__Group_1_0__1
            {
            pushFollow(FOLLOW_6);
            rule__IPAM__Group_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_0__0"


    // $ANTLR start "rule__IPAM__Group_1_0__0__Impl"
    // InternalDockerCompose.g:7706:1: rule__IPAM__Group_1_0__0__Impl : ( 'driver:' ) ;
    public final void rule__IPAM__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7710:1: ( ( 'driver:' ) )
            // InternalDockerCompose.g:7711:1: ( 'driver:' )
            {
            // InternalDockerCompose.g:7711:1: ( 'driver:' )
            // InternalDockerCompose.g:7712:2: 'driver:'
            {
             before(grammarAccess.getIPAMAccess().getDriverKeyword_1_0_0()); 
            match(input,72,FOLLOW_2); 
             after(grammarAccess.getIPAMAccess().getDriverKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_0__0__Impl"


    // $ANTLR start "rule__IPAM__Group_1_0__1"
    // InternalDockerCompose.g:7721:1: rule__IPAM__Group_1_0__1 : rule__IPAM__Group_1_0__1__Impl ;
    public final void rule__IPAM__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7725:1: ( rule__IPAM__Group_1_0__1__Impl )
            // InternalDockerCompose.g:7726:2: rule__IPAM__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_0__1"


    // $ANTLR start "rule__IPAM__Group_1_0__1__Impl"
    // InternalDockerCompose.g:7732:1: rule__IPAM__Group_1_0__1__Impl : ( ( rule__IPAM__DriverAssignment_1_0_1 ) ) ;
    public final void rule__IPAM__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7736:1: ( ( ( rule__IPAM__DriverAssignment_1_0_1 ) ) )
            // InternalDockerCompose.g:7737:1: ( ( rule__IPAM__DriverAssignment_1_0_1 ) )
            {
            // InternalDockerCompose.g:7737:1: ( ( rule__IPAM__DriverAssignment_1_0_1 ) )
            // InternalDockerCompose.g:7738:2: ( rule__IPAM__DriverAssignment_1_0_1 )
            {
             before(grammarAccess.getIPAMAccess().getDriverAssignment_1_0_1()); 
            // InternalDockerCompose.g:7739:2: ( rule__IPAM__DriverAssignment_1_0_1 )
            // InternalDockerCompose.g:7739:3: rule__IPAM__DriverAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__DriverAssignment_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAccess().getDriverAssignment_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_0__1__Impl"


    // $ANTLR start "rule__IPAM__Group_1_1__0"
    // InternalDockerCompose.g:7748:1: rule__IPAM__Group_1_1__0 : rule__IPAM__Group_1_1__0__Impl rule__IPAM__Group_1_1__1 ;
    public final void rule__IPAM__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7752:1: ( rule__IPAM__Group_1_1__0__Impl rule__IPAM__Group_1_1__1 )
            // InternalDockerCompose.g:7753:2: rule__IPAM__Group_1_1__0__Impl rule__IPAM__Group_1_1__1
            {
            pushFollow(FOLLOW_13);
            rule__IPAM__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1__0"


    // $ANTLR start "rule__IPAM__Group_1_1__0__Impl"
    // InternalDockerCompose.g:7760:1: rule__IPAM__Group_1_1__0__Impl : ( 'config:' ) ;
    public final void rule__IPAM__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7764:1: ( ( 'config:' ) )
            // InternalDockerCompose.g:7765:1: ( 'config:' )
            {
            // InternalDockerCompose.g:7765:1: ( 'config:' )
            // InternalDockerCompose.g:7766:2: 'config:'
            {
             before(grammarAccess.getIPAMAccess().getConfigKeyword_1_1_0()); 
            match(input,83,FOLLOW_2); 
             after(grammarAccess.getIPAMAccess().getConfigKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1__0__Impl"


    // $ANTLR start "rule__IPAM__Group_1_1__1"
    // InternalDockerCompose.g:7775:1: rule__IPAM__Group_1_1__1 : rule__IPAM__Group_1_1__1__Impl ;
    public final void rule__IPAM__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7779:1: ( rule__IPAM__Group_1_1__1__Impl )
            // InternalDockerCompose.g:7780:2: rule__IPAM__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1__1"


    // $ANTLR start "rule__IPAM__Group_1_1__1__Impl"
    // InternalDockerCompose.g:7786:1: rule__IPAM__Group_1_1__1__Impl : ( ( ( rule__IPAM__Group_1_1_1__0 ) ) ( ( rule__IPAM__Group_1_1_1__0 )* ) ) ;
    public final void rule__IPAM__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7790:1: ( ( ( ( rule__IPAM__Group_1_1_1__0 ) ) ( ( rule__IPAM__Group_1_1_1__0 )* ) ) )
            // InternalDockerCompose.g:7791:1: ( ( ( rule__IPAM__Group_1_1_1__0 ) ) ( ( rule__IPAM__Group_1_1_1__0 )* ) )
            {
            // InternalDockerCompose.g:7791:1: ( ( ( rule__IPAM__Group_1_1_1__0 ) ) ( ( rule__IPAM__Group_1_1_1__0 )* ) )
            // InternalDockerCompose.g:7792:2: ( ( rule__IPAM__Group_1_1_1__0 ) ) ( ( rule__IPAM__Group_1_1_1__0 )* )
            {
            // InternalDockerCompose.g:7792:2: ( ( rule__IPAM__Group_1_1_1__0 ) )
            // InternalDockerCompose.g:7793:3: ( rule__IPAM__Group_1_1_1__0 )
            {
             before(grammarAccess.getIPAMAccess().getGroup_1_1_1()); 
            // InternalDockerCompose.g:7794:3: ( rule__IPAM__Group_1_1_1__0 )
            // InternalDockerCompose.g:7794:4: rule__IPAM__Group_1_1_1__0
            {
            pushFollow(FOLLOW_3);
            rule__IPAM__Group_1_1_1__0();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAccess().getGroup_1_1_1()); 

            }

            // InternalDockerCompose.g:7797:2: ( ( rule__IPAM__Group_1_1_1__0 )* )
            // InternalDockerCompose.g:7798:3: ( rule__IPAM__Group_1_1_1__0 )*
            {
             before(grammarAccess.getIPAMAccess().getGroup_1_1_1()); 
            // InternalDockerCompose.g:7799:3: ( rule__IPAM__Group_1_1_1__0 )*
            loop40:
            do {
                int alt40=2;
                int LA40_0 = input.LA(1);

                if ( (LA40_0==50) ) {
                    alt40=1;
                }


                switch (alt40) {
            	case 1 :
            	    // InternalDockerCompose.g:7799:4: rule__IPAM__Group_1_1_1__0
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__IPAM__Group_1_1_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);

             after(grammarAccess.getIPAMAccess().getGroup_1_1_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1__1__Impl"


    // $ANTLR start "rule__IPAM__Group_1_1_1__0"
    // InternalDockerCompose.g:7809:1: rule__IPAM__Group_1_1_1__0 : rule__IPAM__Group_1_1_1__0__Impl rule__IPAM__Group_1_1_1__1 ;
    public final void rule__IPAM__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7813:1: ( rule__IPAM__Group_1_1_1__0__Impl rule__IPAM__Group_1_1_1__1 )
            // InternalDockerCompose.g:7814:2: rule__IPAM__Group_1_1_1__0__Impl rule__IPAM__Group_1_1_1__1
            {
            pushFollow(FOLLOW_36);
            rule__IPAM__Group_1_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1_1__0"


    // $ANTLR start "rule__IPAM__Group_1_1_1__0__Impl"
    // InternalDockerCompose.g:7821:1: rule__IPAM__Group_1_1_1__0__Impl : ( '-' ) ;
    public final void rule__IPAM__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7825:1: ( ( '-' ) )
            // InternalDockerCompose.g:7826:1: ( '-' )
            {
            // InternalDockerCompose.g:7826:1: ( '-' )
            // InternalDockerCompose.g:7827:2: '-'
            {
             before(grammarAccess.getIPAMAccess().getHyphenMinusKeyword_1_1_1_0()); 
            match(input,50,FOLLOW_2); 
             after(grammarAccess.getIPAMAccess().getHyphenMinusKeyword_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__IPAM__Group_1_1_1__1"
    // InternalDockerCompose.g:7836:1: rule__IPAM__Group_1_1_1__1 : rule__IPAM__Group_1_1_1__1__Impl ;
    public final void rule__IPAM__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7840:1: ( rule__IPAM__Group_1_1_1__1__Impl )
            // InternalDockerCompose.g:7841:2: rule__IPAM__Group_1_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1_1__1"


    // $ANTLR start "rule__IPAM__Group_1_1_1__1__Impl"
    // InternalDockerCompose.g:7847:1: rule__IPAM__Group_1_1_1__1__Impl : ( ( rule__IPAM__ConfigsAssignment_1_1_1_1 ) ) ;
    public final void rule__IPAM__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7851:1: ( ( ( rule__IPAM__ConfigsAssignment_1_1_1_1 ) ) )
            // InternalDockerCompose.g:7852:1: ( ( rule__IPAM__ConfigsAssignment_1_1_1_1 ) )
            {
            // InternalDockerCompose.g:7852:1: ( ( rule__IPAM__ConfigsAssignment_1_1_1_1 ) )
            // InternalDockerCompose.g:7853:2: ( rule__IPAM__ConfigsAssignment_1_1_1_1 )
            {
             before(grammarAccess.getIPAMAccess().getConfigsAssignment_1_1_1_1()); 
            // InternalDockerCompose.g:7854:2: ( rule__IPAM__ConfigsAssignment_1_1_1_1 )
            // InternalDockerCompose.g:7854:3: rule__IPAM__ConfigsAssignment_1_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__ConfigsAssignment_1_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAccess().getConfigsAssignment_1_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__IPAM__Group_1_2__0"
    // InternalDockerCompose.g:7863:1: rule__IPAM__Group_1_2__0 : rule__IPAM__Group_1_2__0__Impl rule__IPAM__Group_1_2__1 ;
    public final void rule__IPAM__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7867:1: ( rule__IPAM__Group_1_2__0__Impl rule__IPAM__Group_1_2__1 )
            // InternalDockerCompose.g:7868:2: rule__IPAM__Group_1_2__0__Impl rule__IPAM__Group_1_2__1
            {
            pushFollow(FOLLOW_6);
            rule__IPAM__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_2__0"


    // $ANTLR start "rule__IPAM__Group_1_2__0__Impl"
    // InternalDockerCompose.g:7875:1: rule__IPAM__Group_1_2__0__Impl : ( 'options:' ) ;
    public final void rule__IPAM__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7879:1: ( ( 'options:' ) )
            // InternalDockerCompose.g:7880:1: ( 'options:' )
            {
            // InternalDockerCompose.g:7880:1: ( 'options:' )
            // InternalDockerCompose.g:7881:2: 'options:'
            {
             before(grammarAccess.getIPAMAccess().getOptionsKeyword_1_2_0()); 
            match(input,84,FOLLOW_2); 
             after(grammarAccess.getIPAMAccess().getOptionsKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_2__0__Impl"


    // $ANTLR start "rule__IPAM__Group_1_2__1"
    // InternalDockerCompose.g:7890:1: rule__IPAM__Group_1_2__1 : rule__IPAM__Group_1_2__1__Impl ;
    public final void rule__IPAM__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7894:1: ( rule__IPAM__Group_1_2__1__Impl )
            // InternalDockerCompose.g:7895:2: rule__IPAM__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_2__1"


    // $ANTLR start "rule__IPAM__Group_1_2__1__Impl"
    // InternalDockerCompose.g:7901:1: rule__IPAM__Group_1_2__1__Impl : ( ( ( rule__IPAM__OptionsAssignment_1_2_1 ) ) ( ( rule__IPAM__OptionsAssignment_1_2_1 )* ) ) ;
    public final void rule__IPAM__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7905:1: ( ( ( ( rule__IPAM__OptionsAssignment_1_2_1 ) ) ( ( rule__IPAM__OptionsAssignment_1_2_1 )* ) ) )
            // InternalDockerCompose.g:7906:1: ( ( ( rule__IPAM__OptionsAssignment_1_2_1 ) ) ( ( rule__IPAM__OptionsAssignment_1_2_1 )* ) )
            {
            // InternalDockerCompose.g:7906:1: ( ( ( rule__IPAM__OptionsAssignment_1_2_1 ) ) ( ( rule__IPAM__OptionsAssignment_1_2_1 )* ) )
            // InternalDockerCompose.g:7907:2: ( ( rule__IPAM__OptionsAssignment_1_2_1 ) ) ( ( rule__IPAM__OptionsAssignment_1_2_1 )* )
            {
            // InternalDockerCompose.g:7907:2: ( ( rule__IPAM__OptionsAssignment_1_2_1 ) )
            // InternalDockerCompose.g:7908:3: ( rule__IPAM__OptionsAssignment_1_2_1 )
            {
             before(grammarAccess.getIPAMAccess().getOptionsAssignment_1_2_1()); 
            // InternalDockerCompose.g:7909:3: ( rule__IPAM__OptionsAssignment_1_2_1 )
            // InternalDockerCompose.g:7909:4: rule__IPAM__OptionsAssignment_1_2_1
            {
            pushFollow(FOLLOW_4);
            rule__IPAM__OptionsAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAccess().getOptionsAssignment_1_2_1()); 

            }

            // InternalDockerCompose.g:7912:2: ( ( rule__IPAM__OptionsAssignment_1_2_1 )* )
            // InternalDockerCompose.g:7913:3: ( rule__IPAM__OptionsAssignment_1_2_1 )*
            {
             before(grammarAccess.getIPAMAccess().getOptionsAssignment_1_2_1()); 
            // InternalDockerCompose.g:7914:3: ( rule__IPAM__OptionsAssignment_1_2_1 )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==RULE_STRING) ) {
                    int LA41_2 = input.LA(2);

                    if ( (LA41_2==40) ) {
                        int LA41_4 = input.LA(3);

                        if ( (LA41_4==RULE_STRING) ) {
                            int LA41_5 = input.LA(4);

                            if ( (LA41_5==EOF||(LA41_5>=RULE_STRING && LA41_5<=RULE_ID)||(LA41_5>=34 && LA41_5<=39)||(LA41_5>=72 && LA41_5<=80)||(LA41_5>=83 && LA41_5<=84)) ) {
                                alt41=1;
                            }


                        }
                        else if ( (LA41_4==RULE_ID) ) {
                            int LA41_6 = input.LA(4);

                            if ( (LA41_6==EOF||(LA41_6>=RULE_STRING && LA41_6<=RULE_ID)||(LA41_6>=34 && LA41_6<=39)||(LA41_6>=72 && LA41_6<=80)||(LA41_6>=83 && LA41_6<=84)) ) {
                                alt41=1;
                            }


                        }


                    }


                }
                else if ( (LA41_0==RULE_ID) ) {
                    int LA41_3 = input.LA(2);

                    if ( (LA41_3==40) ) {
                        int LA41_4 = input.LA(3);

                        if ( (LA41_4==RULE_STRING) ) {
                            int LA41_5 = input.LA(4);

                            if ( (LA41_5==EOF||(LA41_5>=RULE_STRING && LA41_5<=RULE_ID)||(LA41_5>=34 && LA41_5<=39)||(LA41_5>=72 && LA41_5<=80)||(LA41_5>=83 && LA41_5<=84)) ) {
                                alt41=1;
                            }


                        }
                        else if ( (LA41_4==RULE_ID) ) {
                            int LA41_6 = input.LA(4);

                            if ( (LA41_6==EOF||(LA41_6>=RULE_STRING && LA41_6<=RULE_ID)||(LA41_6>=34 && LA41_6<=39)||(LA41_6>=72 && LA41_6<=80)||(LA41_6>=83 && LA41_6<=84)) ) {
                                alt41=1;
                            }


                        }


                    }


                }


                switch (alt41) {
            	case 1 :
            	    // InternalDockerCompose.g:7914:4: rule__IPAM__OptionsAssignment_1_2_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__IPAM__OptionsAssignment_1_2_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);

             after(grammarAccess.getIPAMAccess().getOptionsAssignment_1_2_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__Group_1_2__1__Impl"


    // $ANTLR start "rule__IPAMConfig__Group__0"
    // InternalDockerCompose.g:7924:1: rule__IPAMConfig__Group__0 : rule__IPAMConfig__Group__0__Impl rule__IPAMConfig__Group__1 ;
    public final void rule__IPAMConfig__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7928:1: ( rule__IPAMConfig__Group__0__Impl rule__IPAMConfig__Group__1 )
            // InternalDockerCompose.g:7929:2: rule__IPAMConfig__Group__0__Impl rule__IPAMConfig__Group__1
            {
            pushFollow(FOLLOW_36);
            rule__IPAMConfig__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group__0"


    // $ANTLR start "rule__IPAMConfig__Group__0__Impl"
    // InternalDockerCompose.g:7936:1: rule__IPAMConfig__Group__0__Impl : ( () ) ;
    public final void rule__IPAMConfig__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7940:1: ( ( () ) )
            // InternalDockerCompose.g:7941:1: ( () )
            {
            // InternalDockerCompose.g:7941:1: ( () )
            // InternalDockerCompose.g:7942:2: ()
            {
             before(grammarAccess.getIPAMConfigAccess().getIPAMConfigAction_0()); 
            // InternalDockerCompose.g:7943:2: ()
            // InternalDockerCompose.g:7943:3: 
            {
            }

             after(grammarAccess.getIPAMConfigAccess().getIPAMConfigAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group__0__Impl"


    // $ANTLR start "rule__IPAMConfig__Group__1"
    // InternalDockerCompose.g:7951:1: rule__IPAMConfig__Group__1 : rule__IPAMConfig__Group__1__Impl ;
    public final void rule__IPAMConfig__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7955:1: ( rule__IPAMConfig__Group__1__Impl )
            // InternalDockerCompose.g:7956:2: rule__IPAMConfig__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group__1"


    // $ANTLR start "rule__IPAMConfig__Group__1__Impl"
    // InternalDockerCompose.g:7962:1: rule__IPAMConfig__Group__1__Impl : ( ( rule__IPAMConfig__UnorderedGroup_1 ) ) ;
    public final void rule__IPAMConfig__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7966:1: ( ( ( rule__IPAMConfig__UnorderedGroup_1 ) ) )
            // InternalDockerCompose.g:7967:1: ( ( rule__IPAMConfig__UnorderedGroup_1 ) )
            {
            // InternalDockerCompose.g:7967:1: ( ( rule__IPAMConfig__UnorderedGroup_1 ) )
            // InternalDockerCompose.g:7968:2: ( rule__IPAMConfig__UnorderedGroup_1 )
            {
             before(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1()); 
            // InternalDockerCompose.g:7969:2: ( rule__IPAMConfig__UnorderedGroup_1 )
            // InternalDockerCompose.g:7969:3: rule__IPAMConfig__UnorderedGroup_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__UnorderedGroup_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group__1__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_0__0"
    // InternalDockerCompose.g:7978:1: rule__IPAMConfig__Group_1_0__0 : rule__IPAMConfig__Group_1_0__0__Impl rule__IPAMConfig__Group_1_0__1 ;
    public final void rule__IPAMConfig__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7982:1: ( rule__IPAMConfig__Group_1_0__0__Impl rule__IPAMConfig__Group_1_0__1 )
            // InternalDockerCompose.g:7983:2: rule__IPAMConfig__Group_1_0__0__Impl rule__IPAMConfig__Group_1_0__1
            {
            pushFollow(FOLLOW_10);
            rule__IPAMConfig__Group_1_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_0__0"


    // $ANTLR start "rule__IPAMConfig__Group_1_0__0__Impl"
    // InternalDockerCompose.g:7990:1: rule__IPAMConfig__Group_1_0__0__Impl : ( 'subnet:' ) ;
    public final void rule__IPAMConfig__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:7994:1: ( ( 'subnet:' ) )
            // InternalDockerCompose.g:7995:1: ( 'subnet:' )
            {
            // InternalDockerCompose.g:7995:1: ( 'subnet:' )
            // InternalDockerCompose.g:7996:2: 'subnet:'
            {
             before(grammarAccess.getIPAMConfigAccess().getSubnetKeyword_1_0_0()); 
            match(input,85,FOLLOW_2); 
             after(grammarAccess.getIPAMConfigAccess().getSubnetKeyword_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_0__0__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_0__1"
    // InternalDockerCompose.g:8005:1: rule__IPAMConfig__Group_1_0__1 : rule__IPAMConfig__Group_1_0__1__Impl ;
    public final void rule__IPAMConfig__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8009:1: ( rule__IPAMConfig__Group_1_0__1__Impl )
            // InternalDockerCompose.g:8010:2: rule__IPAMConfig__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_0__1"


    // $ANTLR start "rule__IPAMConfig__Group_1_0__1__Impl"
    // InternalDockerCompose.g:8016:1: rule__IPAMConfig__Group_1_0__1__Impl : ( ( rule__IPAMConfig__SubnetAssignment_1_0_1 ) ) ;
    public final void rule__IPAMConfig__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8020:1: ( ( ( rule__IPAMConfig__SubnetAssignment_1_0_1 ) ) )
            // InternalDockerCompose.g:8021:1: ( ( rule__IPAMConfig__SubnetAssignment_1_0_1 ) )
            {
            // InternalDockerCompose.g:8021:1: ( ( rule__IPAMConfig__SubnetAssignment_1_0_1 ) )
            // InternalDockerCompose.g:8022:2: ( rule__IPAMConfig__SubnetAssignment_1_0_1 )
            {
             before(grammarAccess.getIPAMConfigAccess().getSubnetAssignment_1_0_1()); 
            // InternalDockerCompose.g:8023:2: ( rule__IPAMConfig__SubnetAssignment_1_0_1 )
            // InternalDockerCompose.g:8023:3: rule__IPAMConfig__SubnetAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__SubnetAssignment_1_0_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMConfigAccess().getSubnetAssignment_1_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_0__1__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_1__0"
    // InternalDockerCompose.g:8032:1: rule__IPAMConfig__Group_1_1__0 : rule__IPAMConfig__Group_1_1__0__Impl rule__IPAMConfig__Group_1_1__1 ;
    public final void rule__IPAMConfig__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8036:1: ( rule__IPAMConfig__Group_1_1__0__Impl rule__IPAMConfig__Group_1_1__1 )
            // InternalDockerCompose.g:8037:2: rule__IPAMConfig__Group_1_1__0__Impl rule__IPAMConfig__Group_1_1__1
            {
            pushFollow(FOLLOW_10);
            rule__IPAMConfig__Group_1_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_1__0"


    // $ANTLR start "rule__IPAMConfig__Group_1_1__0__Impl"
    // InternalDockerCompose.g:8044:1: rule__IPAMConfig__Group_1_1__0__Impl : ( 'ip_range:' ) ;
    public final void rule__IPAMConfig__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8048:1: ( ( 'ip_range:' ) )
            // InternalDockerCompose.g:8049:1: ( 'ip_range:' )
            {
            // InternalDockerCompose.g:8049:1: ( 'ip_range:' )
            // InternalDockerCompose.g:8050:2: 'ip_range:'
            {
             before(grammarAccess.getIPAMConfigAccess().getIp_rangeKeyword_1_1_0()); 
            match(input,86,FOLLOW_2); 
             after(grammarAccess.getIPAMConfigAccess().getIp_rangeKeyword_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_1__0__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_1__1"
    // InternalDockerCompose.g:8059:1: rule__IPAMConfig__Group_1_1__1 : rule__IPAMConfig__Group_1_1__1__Impl ;
    public final void rule__IPAMConfig__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8063:1: ( rule__IPAMConfig__Group_1_1__1__Impl )
            // InternalDockerCompose.g:8064:2: rule__IPAMConfig__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_1__1"


    // $ANTLR start "rule__IPAMConfig__Group_1_1__1__Impl"
    // InternalDockerCompose.g:8070:1: rule__IPAMConfig__Group_1_1__1__Impl : ( ( rule__IPAMConfig__Ip_rangeAssignment_1_1_1 ) ) ;
    public final void rule__IPAMConfig__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8074:1: ( ( ( rule__IPAMConfig__Ip_rangeAssignment_1_1_1 ) ) )
            // InternalDockerCompose.g:8075:1: ( ( rule__IPAMConfig__Ip_rangeAssignment_1_1_1 ) )
            {
            // InternalDockerCompose.g:8075:1: ( ( rule__IPAMConfig__Ip_rangeAssignment_1_1_1 ) )
            // InternalDockerCompose.g:8076:2: ( rule__IPAMConfig__Ip_rangeAssignment_1_1_1 )
            {
             before(grammarAccess.getIPAMConfigAccess().getIp_rangeAssignment_1_1_1()); 
            // InternalDockerCompose.g:8077:2: ( rule__IPAMConfig__Ip_rangeAssignment_1_1_1 )
            // InternalDockerCompose.g:8077:3: rule__IPAMConfig__Ip_rangeAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Ip_rangeAssignment_1_1_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMConfigAccess().getIp_rangeAssignment_1_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_1__1__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_2__0"
    // InternalDockerCompose.g:8086:1: rule__IPAMConfig__Group_1_2__0 : rule__IPAMConfig__Group_1_2__0__Impl rule__IPAMConfig__Group_1_2__1 ;
    public final void rule__IPAMConfig__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8090:1: ( rule__IPAMConfig__Group_1_2__0__Impl rule__IPAMConfig__Group_1_2__1 )
            // InternalDockerCompose.g:8091:2: rule__IPAMConfig__Group_1_2__0__Impl rule__IPAMConfig__Group_1_2__1
            {
            pushFollow(FOLLOW_18);
            rule__IPAMConfig__Group_1_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_2__0"


    // $ANTLR start "rule__IPAMConfig__Group_1_2__0__Impl"
    // InternalDockerCompose.g:8098:1: rule__IPAMConfig__Group_1_2__0__Impl : ( 'gateway:' ) ;
    public final void rule__IPAMConfig__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8102:1: ( ( 'gateway:' ) )
            // InternalDockerCompose.g:8103:1: ( 'gateway:' )
            {
            // InternalDockerCompose.g:8103:1: ( 'gateway:' )
            // InternalDockerCompose.g:8104:2: 'gateway:'
            {
             before(grammarAccess.getIPAMConfigAccess().getGatewayKeyword_1_2_0()); 
            match(input,87,FOLLOW_2); 
             after(grammarAccess.getIPAMConfigAccess().getGatewayKeyword_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_2__0__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_2__1"
    // InternalDockerCompose.g:8113:1: rule__IPAMConfig__Group_1_2__1 : rule__IPAMConfig__Group_1_2__1__Impl ;
    public final void rule__IPAMConfig__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8117:1: ( rule__IPAMConfig__Group_1_2__1__Impl )
            // InternalDockerCompose.g:8118:2: rule__IPAMConfig__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_2__1"


    // $ANTLR start "rule__IPAMConfig__Group_1_2__1__Impl"
    // InternalDockerCompose.g:8124:1: rule__IPAMConfig__Group_1_2__1__Impl : ( ( rule__IPAMConfig__GatewayAssignment_1_2_1 ) ) ;
    public final void rule__IPAMConfig__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8128:1: ( ( ( rule__IPAMConfig__GatewayAssignment_1_2_1 ) ) )
            // InternalDockerCompose.g:8129:1: ( ( rule__IPAMConfig__GatewayAssignment_1_2_1 ) )
            {
            // InternalDockerCompose.g:8129:1: ( ( rule__IPAMConfig__GatewayAssignment_1_2_1 ) )
            // InternalDockerCompose.g:8130:2: ( rule__IPAMConfig__GatewayAssignment_1_2_1 )
            {
             before(grammarAccess.getIPAMConfigAccess().getGatewayAssignment_1_2_1()); 
            // InternalDockerCompose.g:8131:2: ( rule__IPAMConfig__GatewayAssignment_1_2_1 )
            // InternalDockerCompose.g:8131:3: rule__IPAMConfig__GatewayAssignment_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__GatewayAssignment_1_2_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMConfigAccess().getGatewayAssignment_1_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_2__1__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_3__0"
    // InternalDockerCompose.g:8140:1: rule__IPAMConfig__Group_1_3__0 : rule__IPAMConfig__Group_1_3__0__Impl rule__IPAMConfig__Group_1_3__1 ;
    public final void rule__IPAMConfig__Group_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8144:1: ( rule__IPAMConfig__Group_1_3__0__Impl rule__IPAMConfig__Group_1_3__1 )
            // InternalDockerCompose.g:8145:2: rule__IPAMConfig__Group_1_3__0__Impl rule__IPAMConfig__Group_1_3__1
            {
            pushFollow(FOLLOW_6);
            rule__IPAMConfig__Group_1_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_3__0"


    // $ANTLR start "rule__IPAMConfig__Group_1_3__0__Impl"
    // InternalDockerCompose.g:8152:1: rule__IPAMConfig__Group_1_3__0__Impl : ( 'aux_addresses:' ) ;
    public final void rule__IPAMConfig__Group_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8156:1: ( ( 'aux_addresses:' ) )
            // InternalDockerCompose.g:8157:1: ( 'aux_addresses:' )
            {
            // InternalDockerCompose.g:8157:1: ( 'aux_addresses:' )
            // InternalDockerCompose.g:8158:2: 'aux_addresses:'
            {
             before(grammarAccess.getIPAMConfigAccess().getAux_addressesKeyword_1_3_0()); 
            match(input,88,FOLLOW_2); 
             after(grammarAccess.getIPAMConfigAccess().getAux_addressesKeyword_1_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_3__0__Impl"


    // $ANTLR start "rule__IPAMConfig__Group_1_3__1"
    // InternalDockerCompose.g:8167:1: rule__IPAMConfig__Group_1_3__1 : rule__IPAMConfig__Group_1_3__1__Impl ;
    public final void rule__IPAMConfig__Group_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8171:1: ( rule__IPAMConfig__Group_1_3__1__Impl )
            // InternalDockerCompose.g:8172:2: rule__IPAMConfig__Group_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__Group_1_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_3__1"


    // $ANTLR start "rule__IPAMConfig__Group_1_3__1__Impl"
    // InternalDockerCompose.g:8178:1: rule__IPAMConfig__Group_1_3__1__Impl : ( ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 ) ) ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )* ) ) ;
    public final void rule__IPAMConfig__Group_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8182:1: ( ( ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 ) ) ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )* ) ) )
            // InternalDockerCompose.g:8183:1: ( ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 ) ) ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )* ) )
            {
            // InternalDockerCompose.g:8183:1: ( ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 ) ) ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )* ) )
            // InternalDockerCompose.g:8184:2: ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 ) ) ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )* )
            {
            // InternalDockerCompose.g:8184:2: ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 ) )
            // InternalDockerCompose.g:8185:3: ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )
            {
             before(grammarAccess.getIPAMConfigAccess().getAux_addressesAssignment_1_3_1()); 
            // InternalDockerCompose.g:8186:3: ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )
            // InternalDockerCompose.g:8186:4: rule__IPAMConfig__Aux_addressesAssignment_1_3_1
            {
            pushFollow(FOLLOW_4);
            rule__IPAMConfig__Aux_addressesAssignment_1_3_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMConfigAccess().getAux_addressesAssignment_1_3_1()); 

            }

            // InternalDockerCompose.g:8189:2: ( ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )* )
            // InternalDockerCompose.g:8190:3: ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )*
            {
             before(grammarAccess.getIPAMConfigAccess().getAux_addressesAssignment_1_3_1()); 
            // InternalDockerCompose.g:8191:3: ( rule__IPAMConfig__Aux_addressesAssignment_1_3_1 )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( (LA42_0==RULE_STRING) ) {
                    int LA42_2 = input.LA(2);

                    if ( (LA42_2==40) ) {
                        int LA42_4 = input.LA(3);

                        if ( (LA42_4==RULE_INT) ) {
                            alt42=1;
                        }


                    }


                }
                else if ( (LA42_0==RULE_ID) ) {
                    int LA42_3 = input.LA(2);

                    if ( (LA42_3==40) ) {
                        int LA42_4 = input.LA(3);

                        if ( (LA42_4==RULE_INT) ) {
                            alt42=1;
                        }


                    }


                }


                switch (alt42) {
            	case 1 :
            	    // InternalDockerCompose.g:8191:4: rule__IPAMConfig__Aux_addressesAssignment_1_3_1
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__IPAMConfig__Aux_addressesAssignment_1_3_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

             after(grammarAccess.getIPAMConfigAccess().getAux_addressesAssignment_1_3_1()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Group_1_3__1__Impl"


    // $ANTLR start "rule__IPAMOption__Group__0"
    // InternalDockerCompose.g:8201:1: rule__IPAMOption__Group__0 : rule__IPAMOption__Group__0__Impl rule__IPAMOption__Group__1 ;
    public final void rule__IPAMOption__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8205:1: ( rule__IPAMOption__Group__0__Impl rule__IPAMOption__Group__1 )
            // InternalDockerCompose.g:8206:2: rule__IPAMOption__Group__0__Impl rule__IPAMOption__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__IPAMOption__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMOption__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__0"


    // $ANTLR start "rule__IPAMOption__Group__0__Impl"
    // InternalDockerCompose.g:8213:1: rule__IPAMOption__Group__0__Impl : ( () ) ;
    public final void rule__IPAMOption__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8217:1: ( ( () ) )
            // InternalDockerCompose.g:8218:1: ( () )
            {
            // InternalDockerCompose.g:8218:1: ( () )
            // InternalDockerCompose.g:8219:2: ()
            {
             before(grammarAccess.getIPAMOptionAccess().getIPAMOptionAction_0()); 
            // InternalDockerCompose.g:8220:2: ()
            // InternalDockerCompose.g:8220:3: 
            {
            }

             after(grammarAccess.getIPAMOptionAccess().getIPAMOptionAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__0__Impl"


    // $ANTLR start "rule__IPAMOption__Group__1"
    // InternalDockerCompose.g:8228:1: rule__IPAMOption__Group__1 : rule__IPAMOption__Group__1__Impl rule__IPAMOption__Group__2 ;
    public final void rule__IPAMOption__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8232:1: ( rule__IPAMOption__Group__1__Impl rule__IPAMOption__Group__2 )
            // InternalDockerCompose.g:8233:2: rule__IPAMOption__Group__1__Impl rule__IPAMOption__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__IPAMOption__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMOption__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__1"


    // $ANTLR start "rule__IPAMOption__Group__1__Impl"
    // InternalDockerCompose.g:8240:1: rule__IPAMOption__Group__1__Impl : ( ( rule__IPAMOption__NameAssignment_1 ) ) ;
    public final void rule__IPAMOption__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8244:1: ( ( ( rule__IPAMOption__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:8245:1: ( ( rule__IPAMOption__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:8245:1: ( ( rule__IPAMOption__NameAssignment_1 ) )
            // InternalDockerCompose.g:8246:2: ( rule__IPAMOption__NameAssignment_1 )
            {
             before(grammarAccess.getIPAMOptionAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:8247:2: ( rule__IPAMOption__NameAssignment_1 )
            // InternalDockerCompose.g:8247:3: rule__IPAMOption__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAMOption__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMOptionAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__1__Impl"


    // $ANTLR start "rule__IPAMOption__Group__2"
    // InternalDockerCompose.g:8255:1: rule__IPAMOption__Group__2 : rule__IPAMOption__Group__2__Impl rule__IPAMOption__Group__3 ;
    public final void rule__IPAMOption__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8259:1: ( rule__IPAMOption__Group__2__Impl rule__IPAMOption__Group__3 )
            // InternalDockerCompose.g:8260:2: rule__IPAMOption__Group__2__Impl rule__IPAMOption__Group__3
            {
            pushFollow(FOLLOW_6);
            rule__IPAMOption__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMOption__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__2"


    // $ANTLR start "rule__IPAMOption__Group__2__Impl"
    // InternalDockerCompose.g:8267:1: rule__IPAMOption__Group__2__Impl : ( ':' ) ;
    public final void rule__IPAMOption__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8271:1: ( ( ':' ) )
            // InternalDockerCompose.g:8272:1: ( ':' )
            {
            // InternalDockerCompose.g:8272:1: ( ':' )
            // InternalDockerCompose.g:8273:2: ':'
            {
             before(grammarAccess.getIPAMOptionAccess().getColonKeyword_2()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getIPAMOptionAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__2__Impl"


    // $ANTLR start "rule__IPAMOption__Group__3"
    // InternalDockerCompose.g:8282:1: rule__IPAMOption__Group__3 : rule__IPAMOption__Group__3__Impl ;
    public final void rule__IPAMOption__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8286:1: ( rule__IPAMOption__Group__3__Impl )
            // InternalDockerCompose.g:8287:2: rule__IPAMOption__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMOption__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__3"


    // $ANTLR start "rule__IPAMOption__Group__3__Impl"
    // InternalDockerCompose.g:8293:1: rule__IPAMOption__Group__3__Impl : ( ( rule__IPAMOption__ValueAssignment_3 ) ) ;
    public final void rule__IPAMOption__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8297:1: ( ( ( rule__IPAMOption__ValueAssignment_3 ) ) )
            // InternalDockerCompose.g:8298:1: ( ( rule__IPAMOption__ValueAssignment_3 ) )
            {
            // InternalDockerCompose.g:8298:1: ( ( rule__IPAMOption__ValueAssignment_3 ) )
            // InternalDockerCompose.g:8299:2: ( rule__IPAMOption__ValueAssignment_3 )
            {
             before(grammarAccess.getIPAMOptionAccess().getValueAssignment_3()); 
            // InternalDockerCompose.g:8300:2: ( rule__IPAMOption__ValueAssignment_3 )
            // InternalDockerCompose.g:8300:3: rule__IPAMOption__ValueAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__IPAMOption__ValueAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getIPAMOptionAccess().getValueAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__Group__3__Impl"


    // $ANTLR start "rule__IPAMAddress__Group__0"
    // InternalDockerCompose.g:8309:1: rule__IPAMAddress__Group__0 : rule__IPAMAddress__Group__0__Impl rule__IPAMAddress__Group__1 ;
    public final void rule__IPAMAddress__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8313:1: ( rule__IPAMAddress__Group__0__Impl rule__IPAMAddress__Group__1 )
            // InternalDockerCompose.g:8314:2: rule__IPAMAddress__Group__0__Impl rule__IPAMAddress__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__IPAMAddress__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMAddress__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__0"


    // $ANTLR start "rule__IPAMAddress__Group__0__Impl"
    // InternalDockerCompose.g:8321:1: rule__IPAMAddress__Group__0__Impl : ( () ) ;
    public final void rule__IPAMAddress__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8325:1: ( ( () ) )
            // InternalDockerCompose.g:8326:1: ( () )
            {
            // InternalDockerCompose.g:8326:1: ( () )
            // InternalDockerCompose.g:8327:2: ()
            {
             before(grammarAccess.getIPAMAddressAccess().getIPAMAddressAction_0()); 
            // InternalDockerCompose.g:8328:2: ()
            // InternalDockerCompose.g:8328:3: 
            {
            }

             after(grammarAccess.getIPAMAddressAccess().getIPAMAddressAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__0__Impl"


    // $ANTLR start "rule__IPAMAddress__Group__1"
    // InternalDockerCompose.g:8336:1: rule__IPAMAddress__Group__1 : rule__IPAMAddress__Group__1__Impl rule__IPAMAddress__Group__2 ;
    public final void rule__IPAMAddress__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8340:1: ( rule__IPAMAddress__Group__1__Impl rule__IPAMAddress__Group__2 )
            // InternalDockerCompose.g:8341:2: rule__IPAMAddress__Group__1__Impl rule__IPAMAddress__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__IPAMAddress__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMAddress__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__1"


    // $ANTLR start "rule__IPAMAddress__Group__1__Impl"
    // InternalDockerCompose.g:8348:1: rule__IPAMAddress__Group__1__Impl : ( ( rule__IPAMAddress__NameAssignment_1 ) ) ;
    public final void rule__IPAMAddress__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8352:1: ( ( ( rule__IPAMAddress__NameAssignment_1 ) ) )
            // InternalDockerCompose.g:8353:1: ( ( rule__IPAMAddress__NameAssignment_1 ) )
            {
            // InternalDockerCompose.g:8353:1: ( ( rule__IPAMAddress__NameAssignment_1 ) )
            // InternalDockerCompose.g:8354:2: ( rule__IPAMAddress__NameAssignment_1 )
            {
             before(grammarAccess.getIPAMAddressAccess().getNameAssignment_1()); 
            // InternalDockerCompose.g:8355:2: ( rule__IPAMAddress__NameAssignment_1 )
            // InternalDockerCompose.g:8355:3: rule__IPAMAddress__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__IPAMAddress__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAddressAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__1__Impl"


    // $ANTLR start "rule__IPAMAddress__Group__2"
    // InternalDockerCompose.g:8363:1: rule__IPAMAddress__Group__2 : rule__IPAMAddress__Group__2__Impl rule__IPAMAddress__Group__3 ;
    public final void rule__IPAMAddress__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8367:1: ( rule__IPAMAddress__Group__2__Impl rule__IPAMAddress__Group__3 )
            // InternalDockerCompose.g:8368:2: rule__IPAMAddress__Group__2__Impl rule__IPAMAddress__Group__3
            {
            pushFollow(FOLLOW_18);
            rule__IPAMAddress__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__IPAMAddress__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__2"


    // $ANTLR start "rule__IPAMAddress__Group__2__Impl"
    // InternalDockerCompose.g:8375:1: rule__IPAMAddress__Group__2__Impl : ( ':' ) ;
    public final void rule__IPAMAddress__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8379:1: ( ( ':' ) )
            // InternalDockerCompose.g:8380:1: ( ':' )
            {
            // InternalDockerCompose.g:8380:1: ( ':' )
            // InternalDockerCompose.g:8381:2: ':'
            {
             before(grammarAccess.getIPAMAddressAccess().getColonKeyword_2()); 
            match(input,40,FOLLOW_2); 
             after(grammarAccess.getIPAMAddressAccess().getColonKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__2__Impl"


    // $ANTLR start "rule__IPAMAddress__Group__3"
    // InternalDockerCompose.g:8390:1: rule__IPAMAddress__Group__3 : rule__IPAMAddress__Group__3__Impl ;
    public final void rule__IPAMAddress__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8394:1: ( rule__IPAMAddress__Group__3__Impl )
            // InternalDockerCompose.g:8395:2: rule__IPAMAddress__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMAddress__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__3"


    // $ANTLR start "rule__IPAMAddress__Group__3__Impl"
    // InternalDockerCompose.g:8401:1: rule__IPAMAddress__Group__3__Impl : ( ( rule__IPAMAddress__DnsAssignment_3 ) ) ;
    public final void rule__IPAMAddress__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8405:1: ( ( ( rule__IPAMAddress__DnsAssignment_3 ) ) )
            // InternalDockerCompose.g:8406:1: ( ( rule__IPAMAddress__DnsAssignment_3 ) )
            {
            // InternalDockerCompose.g:8406:1: ( ( rule__IPAMAddress__DnsAssignment_3 ) )
            // InternalDockerCompose.g:8407:2: ( rule__IPAMAddress__DnsAssignment_3 )
            {
             before(grammarAccess.getIPAMAddressAccess().getDnsAssignment_3()); 
            // InternalDockerCompose.g:8408:2: ( rule__IPAMAddress__DnsAssignment_3 )
            // InternalDockerCompose.g:8408:3: rule__IPAMAddress__DnsAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__IPAMAddress__DnsAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getIPAMAddressAccess().getDnsAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__Group__3__Impl"


    // $ANTLR start "rule__PATH__Group__0"
    // InternalDockerCompose.g:8417:1: rule__PATH__Group__0 : rule__PATH__Group__0__Impl rule__PATH__Group__1 ;
    public final void rule__PATH__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8421:1: ( rule__PATH__Group__0__Impl rule__PATH__Group__1 )
            // InternalDockerCompose.g:8422:2: rule__PATH__Group__0__Impl rule__PATH__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__PATH__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group__0"


    // $ANTLR start "rule__PATH__Group__0__Impl"
    // InternalDockerCompose.g:8429:1: rule__PATH__Group__0__Impl : ( ( '.' )? ) ;
    public final void rule__PATH__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8433:1: ( ( ( '.' )? ) )
            // InternalDockerCompose.g:8434:1: ( ( '.' )? )
            {
            // InternalDockerCompose.g:8434:1: ( ( '.' )? )
            // InternalDockerCompose.g:8435:2: ( '.' )?
            {
             before(grammarAccess.getPATHAccess().getFullStopKeyword_0()); 
            // InternalDockerCompose.g:8436:2: ( '.' )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==89) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // InternalDockerCompose.g:8436:3: '.'
                    {
                    match(input,89,FOLLOW_2); 

                    }
                    break;

            }

             after(grammarAccess.getPATHAccess().getFullStopKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group__0__Impl"


    // $ANTLR start "rule__PATH__Group__1"
    // InternalDockerCompose.g:8444:1: rule__PATH__Group__1 : rule__PATH__Group__1__Impl rule__PATH__Group__2 ;
    public final void rule__PATH__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8448:1: ( rule__PATH__Group__1__Impl rule__PATH__Group__2 )
            // InternalDockerCompose.g:8449:2: rule__PATH__Group__1__Impl rule__PATH__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__PATH__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__PATH__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group__1"


    // $ANTLR start "rule__PATH__Group__1__Impl"
    // InternalDockerCompose.g:8456:1: rule__PATH__Group__1__Impl : ( ( '/' )? ) ;
    public final void rule__PATH__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8460:1: ( ( ( '/' )? ) )
            // InternalDockerCompose.g:8461:1: ( ( '/' )? )
            {
            // InternalDockerCompose.g:8461:1: ( ( '/' )? )
            // InternalDockerCompose.g:8462:2: ( '/' )?
            {
             before(grammarAccess.getPATHAccess().getSolidusKeyword_1()); 
            // InternalDockerCompose.g:8463:2: ( '/' )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==90) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalDockerCompose.g:8463:3: '/'
                    {
                    match(input,90,FOLLOW_2); 

                    }
                    break;

            }

             after(grammarAccess.getPATHAccess().getSolidusKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group__1__Impl"


    // $ANTLR start "rule__PATH__Group__2"
    // InternalDockerCompose.g:8471:1: rule__PATH__Group__2 : rule__PATH__Group__2__Impl ;
    public final void rule__PATH__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8475:1: ( rule__PATH__Group__2__Impl )
            // InternalDockerCompose.g:8476:2: rule__PATH__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PATH__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group__2"


    // $ANTLR start "rule__PATH__Group__2__Impl"
    // InternalDockerCompose.g:8482:1: rule__PATH__Group__2__Impl : ( ( RULE_ID )* ) ;
    public final void rule__PATH__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8486:1: ( ( ( RULE_ID )* ) )
            // InternalDockerCompose.g:8487:1: ( ( RULE_ID )* )
            {
            // InternalDockerCompose.g:8487:1: ( ( RULE_ID )* )
            // InternalDockerCompose.g:8488:2: ( RULE_ID )*
            {
             before(grammarAccess.getPATHAccess().getIDTerminalRuleCall_2()); 
            // InternalDockerCompose.g:8489:2: ( RULE_ID )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==RULE_ID) ) {
                    int LA45_2 = input.LA(2);

                    if ( (LA45_2==40) ) {
                        int LA45_3 = input.LA(3);

                        if ( ((LA45_3>=21 && LA45_3<=23)) ) {
                            alt45=1;
                        }


                    }
                    else if ( (LA45_2==EOF||(LA45_2>=RULE_STRING && LA45_2<=RULE_ID)||(LA45_2>=34 && LA45_2<=39)||(LA45_2>=41 && LA45_2<=53)||(LA45_2>=58 && LA45_2<=61)||LA45_2==63||LA45_2==65||(LA45_2>=67 && LA45_2<=69)) ) {
                        alt45=1;
                    }


                }


                switch (alt45) {
            	case 1 :
            	    // InternalDockerCompose.g:8489:3: RULE_ID
            	    {
            	    match(input,RULE_ID,FOLLOW_37); 

            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);

             after(grammarAccess.getPATHAccess().getIDTerminalRuleCall_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PATH__Group__2__Impl"


    // $ANTLR start "rule__DNS__Group__0"
    // InternalDockerCompose.g:8498:1: rule__DNS__Group__0 : rule__DNS__Group__0__Impl rule__DNS__Group__1 ;
    public final void rule__DNS__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8502:1: ( rule__DNS__Group__0__Impl rule__DNS__Group__1 )
            // InternalDockerCompose.g:8503:2: rule__DNS__Group__0__Impl rule__DNS__Group__1
            {
            pushFollow(FOLLOW_38);
            rule__DNS__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DNS__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__0"


    // $ANTLR start "rule__DNS__Group__0__Impl"
    // InternalDockerCompose.g:8510:1: rule__DNS__Group__0__Impl : ( ( rule__DNS__Dns1Assignment_0 ) ) ;
    public final void rule__DNS__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8514:1: ( ( ( rule__DNS__Dns1Assignment_0 ) ) )
            // InternalDockerCompose.g:8515:1: ( ( rule__DNS__Dns1Assignment_0 ) )
            {
            // InternalDockerCompose.g:8515:1: ( ( rule__DNS__Dns1Assignment_0 ) )
            // InternalDockerCompose.g:8516:2: ( rule__DNS__Dns1Assignment_0 )
            {
             before(grammarAccess.getDNSAccess().getDns1Assignment_0()); 
            // InternalDockerCompose.g:8517:2: ( rule__DNS__Dns1Assignment_0 )
            // InternalDockerCompose.g:8517:3: rule__DNS__Dns1Assignment_0
            {
            pushFollow(FOLLOW_2);
            rule__DNS__Dns1Assignment_0();

            state._fsp--;


            }

             after(grammarAccess.getDNSAccess().getDns1Assignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__0__Impl"


    // $ANTLR start "rule__DNS__Group__1"
    // InternalDockerCompose.g:8525:1: rule__DNS__Group__1 : rule__DNS__Group__1__Impl rule__DNS__Group__2 ;
    public final void rule__DNS__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8529:1: ( rule__DNS__Group__1__Impl rule__DNS__Group__2 )
            // InternalDockerCompose.g:8530:2: rule__DNS__Group__1__Impl rule__DNS__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__DNS__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DNS__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__1"


    // $ANTLR start "rule__DNS__Group__1__Impl"
    // InternalDockerCompose.g:8537:1: rule__DNS__Group__1__Impl : ( '.' ) ;
    public final void rule__DNS__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8541:1: ( ( '.' ) )
            // InternalDockerCompose.g:8542:1: ( '.' )
            {
            // InternalDockerCompose.g:8542:1: ( '.' )
            // InternalDockerCompose.g:8543:2: '.'
            {
             before(grammarAccess.getDNSAccess().getFullStopKeyword_1()); 
            match(input,89,FOLLOW_2); 
             after(grammarAccess.getDNSAccess().getFullStopKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__1__Impl"


    // $ANTLR start "rule__DNS__Group__2"
    // InternalDockerCompose.g:8552:1: rule__DNS__Group__2 : rule__DNS__Group__2__Impl rule__DNS__Group__3 ;
    public final void rule__DNS__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8556:1: ( rule__DNS__Group__2__Impl rule__DNS__Group__3 )
            // InternalDockerCompose.g:8557:2: rule__DNS__Group__2__Impl rule__DNS__Group__3
            {
            pushFollow(FOLLOW_38);
            rule__DNS__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DNS__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__2"


    // $ANTLR start "rule__DNS__Group__2__Impl"
    // InternalDockerCompose.g:8564:1: rule__DNS__Group__2__Impl : ( ( rule__DNS__Dns2Assignment_2 ) ) ;
    public final void rule__DNS__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8568:1: ( ( ( rule__DNS__Dns2Assignment_2 ) ) )
            // InternalDockerCompose.g:8569:1: ( ( rule__DNS__Dns2Assignment_2 ) )
            {
            // InternalDockerCompose.g:8569:1: ( ( rule__DNS__Dns2Assignment_2 ) )
            // InternalDockerCompose.g:8570:2: ( rule__DNS__Dns2Assignment_2 )
            {
             before(grammarAccess.getDNSAccess().getDns2Assignment_2()); 
            // InternalDockerCompose.g:8571:2: ( rule__DNS__Dns2Assignment_2 )
            // InternalDockerCompose.g:8571:3: rule__DNS__Dns2Assignment_2
            {
            pushFollow(FOLLOW_2);
            rule__DNS__Dns2Assignment_2();

            state._fsp--;


            }

             after(grammarAccess.getDNSAccess().getDns2Assignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__2__Impl"


    // $ANTLR start "rule__DNS__Group__3"
    // InternalDockerCompose.g:8579:1: rule__DNS__Group__3 : rule__DNS__Group__3__Impl rule__DNS__Group__4 ;
    public final void rule__DNS__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8583:1: ( rule__DNS__Group__3__Impl rule__DNS__Group__4 )
            // InternalDockerCompose.g:8584:2: rule__DNS__Group__3__Impl rule__DNS__Group__4
            {
            pushFollow(FOLLOW_10);
            rule__DNS__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DNS__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__3"


    // $ANTLR start "rule__DNS__Group__3__Impl"
    // InternalDockerCompose.g:8591:1: rule__DNS__Group__3__Impl : ( '.' ) ;
    public final void rule__DNS__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8595:1: ( ( '.' ) )
            // InternalDockerCompose.g:8596:1: ( '.' )
            {
            // InternalDockerCompose.g:8596:1: ( '.' )
            // InternalDockerCompose.g:8597:2: '.'
            {
             before(grammarAccess.getDNSAccess().getFullStopKeyword_3()); 
            match(input,89,FOLLOW_2); 
             after(grammarAccess.getDNSAccess().getFullStopKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__3__Impl"


    // $ANTLR start "rule__DNS__Group__4"
    // InternalDockerCompose.g:8606:1: rule__DNS__Group__4 : rule__DNS__Group__4__Impl rule__DNS__Group__5 ;
    public final void rule__DNS__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8610:1: ( rule__DNS__Group__4__Impl rule__DNS__Group__5 )
            // InternalDockerCompose.g:8611:2: rule__DNS__Group__4__Impl rule__DNS__Group__5
            {
            pushFollow(FOLLOW_38);
            rule__DNS__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DNS__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__4"


    // $ANTLR start "rule__DNS__Group__4__Impl"
    // InternalDockerCompose.g:8618:1: rule__DNS__Group__4__Impl : ( ( rule__DNS__Dns3Assignment_4 ) ) ;
    public final void rule__DNS__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8622:1: ( ( ( rule__DNS__Dns3Assignment_4 ) ) )
            // InternalDockerCompose.g:8623:1: ( ( rule__DNS__Dns3Assignment_4 ) )
            {
            // InternalDockerCompose.g:8623:1: ( ( rule__DNS__Dns3Assignment_4 ) )
            // InternalDockerCompose.g:8624:2: ( rule__DNS__Dns3Assignment_4 )
            {
             before(grammarAccess.getDNSAccess().getDns3Assignment_4()); 
            // InternalDockerCompose.g:8625:2: ( rule__DNS__Dns3Assignment_4 )
            // InternalDockerCompose.g:8625:3: rule__DNS__Dns3Assignment_4
            {
            pushFollow(FOLLOW_2);
            rule__DNS__Dns3Assignment_4();

            state._fsp--;


            }

             after(grammarAccess.getDNSAccess().getDns3Assignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__4__Impl"


    // $ANTLR start "rule__DNS__Group__5"
    // InternalDockerCompose.g:8633:1: rule__DNS__Group__5 : rule__DNS__Group__5__Impl rule__DNS__Group__6 ;
    public final void rule__DNS__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8637:1: ( rule__DNS__Group__5__Impl rule__DNS__Group__6 )
            // InternalDockerCompose.g:8638:2: rule__DNS__Group__5__Impl rule__DNS__Group__6
            {
            pushFollow(FOLLOW_10);
            rule__DNS__Group__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__DNS__Group__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__5"


    // $ANTLR start "rule__DNS__Group__5__Impl"
    // InternalDockerCompose.g:8645:1: rule__DNS__Group__5__Impl : ( '.' ) ;
    public final void rule__DNS__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8649:1: ( ( '.' ) )
            // InternalDockerCompose.g:8650:1: ( '.' )
            {
            // InternalDockerCompose.g:8650:1: ( '.' )
            // InternalDockerCompose.g:8651:2: '.'
            {
             before(grammarAccess.getDNSAccess().getFullStopKeyword_5()); 
            match(input,89,FOLLOW_2); 
             after(grammarAccess.getDNSAccess().getFullStopKeyword_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__5__Impl"


    // $ANTLR start "rule__DNS__Group__6"
    // InternalDockerCompose.g:8660:1: rule__DNS__Group__6 : rule__DNS__Group__6__Impl ;
    public final void rule__DNS__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8664:1: ( rule__DNS__Group__6__Impl )
            // InternalDockerCompose.g:8665:2: rule__DNS__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DNS__Group__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__6"


    // $ANTLR start "rule__DNS__Group__6__Impl"
    // InternalDockerCompose.g:8671:1: rule__DNS__Group__6__Impl : ( ( rule__DNS__Dns4Assignment_6 ) ) ;
    public final void rule__DNS__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8675:1: ( ( ( rule__DNS__Dns4Assignment_6 ) ) )
            // InternalDockerCompose.g:8676:1: ( ( rule__DNS__Dns4Assignment_6 ) )
            {
            // InternalDockerCompose.g:8676:1: ( ( rule__DNS__Dns4Assignment_6 ) )
            // InternalDockerCompose.g:8677:2: ( rule__DNS__Dns4Assignment_6 )
            {
             before(grammarAccess.getDNSAccess().getDns4Assignment_6()); 
            // InternalDockerCompose.g:8678:2: ( rule__DNS__Dns4Assignment_6 )
            // InternalDockerCompose.g:8678:3: rule__DNS__Dns4Assignment_6
            {
            pushFollow(FOLLOW_2);
            rule__DNS__Dns4Assignment_6();

            state._fsp--;


            }

             after(grammarAccess.getDNSAccess().getDns4Assignment_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Group__6__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__0"
    // InternalDockerCompose.g:8687:1: rule__NetworkAddress__Group__0 : rule__NetworkAddress__Group__0__Impl rule__NetworkAddress__Group__1 ;
    public final void rule__NetworkAddress__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8691:1: ( rule__NetworkAddress__Group__0__Impl rule__NetworkAddress__Group__1 )
            // InternalDockerCompose.g:8692:2: rule__NetworkAddress__Group__0__Impl rule__NetworkAddress__Group__1
            {
            pushFollow(FOLLOW_38);
            rule__NetworkAddress__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__0"


    // $ANTLR start "rule__NetworkAddress__Group__0__Impl"
    // InternalDockerCompose.g:8699:1: rule__NetworkAddress__Group__0__Impl : ( ( rule__NetworkAddress__Dns1Assignment_0 ) ) ;
    public final void rule__NetworkAddress__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8703:1: ( ( ( rule__NetworkAddress__Dns1Assignment_0 ) ) )
            // InternalDockerCompose.g:8704:1: ( ( rule__NetworkAddress__Dns1Assignment_0 ) )
            {
            // InternalDockerCompose.g:8704:1: ( ( rule__NetworkAddress__Dns1Assignment_0 ) )
            // InternalDockerCompose.g:8705:2: ( rule__NetworkAddress__Dns1Assignment_0 )
            {
             before(grammarAccess.getNetworkAddressAccess().getDns1Assignment_0()); 
            // InternalDockerCompose.g:8706:2: ( rule__NetworkAddress__Dns1Assignment_0 )
            // InternalDockerCompose.g:8706:3: rule__NetworkAddress__Dns1Assignment_0
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Dns1Assignment_0();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAddressAccess().getDns1Assignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__0__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__1"
    // InternalDockerCompose.g:8714:1: rule__NetworkAddress__Group__1 : rule__NetworkAddress__Group__1__Impl rule__NetworkAddress__Group__2 ;
    public final void rule__NetworkAddress__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8718:1: ( rule__NetworkAddress__Group__1__Impl rule__NetworkAddress__Group__2 )
            // InternalDockerCompose.g:8719:2: rule__NetworkAddress__Group__1__Impl rule__NetworkAddress__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__NetworkAddress__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__1"


    // $ANTLR start "rule__NetworkAddress__Group__1__Impl"
    // InternalDockerCompose.g:8726:1: rule__NetworkAddress__Group__1__Impl : ( '.' ) ;
    public final void rule__NetworkAddress__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8730:1: ( ( '.' ) )
            // InternalDockerCompose.g:8731:1: ( '.' )
            {
            // InternalDockerCompose.g:8731:1: ( '.' )
            // InternalDockerCompose.g:8732:2: '.'
            {
             before(grammarAccess.getNetworkAddressAccess().getFullStopKeyword_1()); 
            match(input,89,FOLLOW_2); 
             after(grammarAccess.getNetworkAddressAccess().getFullStopKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__1__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__2"
    // InternalDockerCompose.g:8741:1: rule__NetworkAddress__Group__2 : rule__NetworkAddress__Group__2__Impl rule__NetworkAddress__Group__3 ;
    public final void rule__NetworkAddress__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8745:1: ( rule__NetworkAddress__Group__2__Impl rule__NetworkAddress__Group__3 )
            // InternalDockerCompose.g:8746:2: rule__NetworkAddress__Group__2__Impl rule__NetworkAddress__Group__3
            {
            pushFollow(FOLLOW_38);
            rule__NetworkAddress__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__2"


    // $ANTLR start "rule__NetworkAddress__Group__2__Impl"
    // InternalDockerCompose.g:8753:1: rule__NetworkAddress__Group__2__Impl : ( ( rule__NetworkAddress__Dns2Assignment_2 ) ) ;
    public final void rule__NetworkAddress__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8757:1: ( ( ( rule__NetworkAddress__Dns2Assignment_2 ) ) )
            // InternalDockerCompose.g:8758:1: ( ( rule__NetworkAddress__Dns2Assignment_2 ) )
            {
            // InternalDockerCompose.g:8758:1: ( ( rule__NetworkAddress__Dns2Assignment_2 ) )
            // InternalDockerCompose.g:8759:2: ( rule__NetworkAddress__Dns2Assignment_2 )
            {
             before(grammarAccess.getNetworkAddressAccess().getDns2Assignment_2()); 
            // InternalDockerCompose.g:8760:2: ( rule__NetworkAddress__Dns2Assignment_2 )
            // InternalDockerCompose.g:8760:3: rule__NetworkAddress__Dns2Assignment_2
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Dns2Assignment_2();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAddressAccess().getDns2Assignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__2__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__3"
    // InternalDockerCompose.g:8768:1: rule__NetworkAddress__Group__3 : rule__NetworkAddress__Group__3__Impl rule__NetworkAddress__Group__4 ;
    public final void rule__NetworkAddress__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8772:1: ( rule__NetworkAddress__Group__3__Impl rule__NetworkAddress__Group__4 )
            // InternalDockerCompose.g:8773:2: rule__NetworkAddress__Group__3__Impl rule__NetworkAddress__Group__4
            {
            pushFollow(FOLLOW_10);
            rule__NetworkAddress__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__3"


    // $ANTLR start "rule__NetworkAddress__Group__3__Impl"
    // InternalDockerCompose.g:8780:1: rule__NetworkAddress__Group__3__Impl : ( '.' ) ;
    public final void rule__NetworkAddress__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8784:1: ( ( '.' ) )
            // InternalDockerCompose.g:8785:1: ( '.' )
            {
            // InternalDockerCompose.g:8785:1: ( '.' )
            // InternalDockerCompose.g:8786:2: '.'
            {
             before(grammarAccess.getNetworkAddressAccess().getFullStopKeyword_3()); 
            match(input,89,FOLLOW_2); 
             after(grammarAccess.getNetworkAddressAccess().getFullStopKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__3__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__4"
    // InternalDockerCompose.g:8795:1: rule__NetworkAddress__Group__4 : rule__NetworkAddress__Group__4__Impl rule__NetworkAddress__Group__5 ;
    public final void rule__NetworkAddress__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8799:1: ( rule__NetworkAddress__Group__4__Impl rule__NetworkAddress__Group__5 )
            // InternalDockerCompose.g:8800:2: rule__NetworkAddress__Group__4__Impl rule__NetworkAddress__Group__5
            {
            pushFollow(FOLLOW_38);
            rule__NetworkAddress__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__4"


    // $ANTLR start "rule__NetworkAddress__Group__4__Impl"
    // InternalDockerCompose.g:8807:1: rule__NetworkAddress__Group__4__Impl : ( ( rule__NetworkAddress__Dns3Assignment_4 ) ) ;
    public final void rule__NetworkAddress__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8811:1: ( ( ( rule__NetworkAddress__Dns3Assignment_4 ) ) )
            // InternalDockerCompose.g:8812:1: ( ( rule__NetworkAddress__Dns3Assignment_4 ) )
            {
            // InternalDockerCompose.g:8812:1: ( ( rule__NetworkAddress__Dns3Assignment_4 ) )
            // InternalDockerCompose.g:8813:2: ( rule__NetworkAddress__Dns3Assignment_4 )
            {
             before(grammarAccess.getNetworkAddressAccess().getDns3Assignment_4()); 
            // InternalDockerCompose.g:8814:2: ( rule__NetworkAddress__Dns3Assignment_4 )
            // InternalDockerCompose.g:8814:3: rule__NetworkAddress__Dns3Assignment_4
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Dns3Assignment_4();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAddressAccess().getDns3Assignment_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__4__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__5"
    // InternalDockerCompose.g:8822:1: rule__NetworkAddress__Group__5 : rule__NetworkAddress__Group__5__Impl rule__NetworkAddress__Group__6 ;
    public final void rule__NetworkAddress__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8826:1: ( rule__NetworkAddress__Group__5__Impl rule__NetworkAddress__Group__6 )
            // InternalDockerCompose.g:8827:2: rule__NetworkAddress__Group__5__Impl rule__NetworkAddress__Group__6
            {
            pushFollow(FOLLOW_10);
            rule__NetworkAddress__Group__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__5"


    // $ANTLR start "rule__NetworkAddress__Group__5__Impl"
    // InternalDockerCompose.g:8834:1: rule__NetworkAddress__Group__5__Impl : ( '.' ) ;
    public final void rule__NetworkAddress__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8838:1: ( ( '.' ) )
            // InternalDockerCompose.g:8839:1: ( '.' )
            {
            // InternalDockerCompose.g:8839:1: ( '.' )
            // InternalDockerCompose.g:8840:2: '.'
            {
             before(grammarAccess.getNetworkAddressAccess().getFullStopKeyword_5()); 
            match(input,89,FOLLOW_2); 
             after(grammarAccess.getNetworkAddressAccess().getFullStopKeyword_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__5__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__6"
    // InternalDockerCompose.g:8849:1: rule__NetworkAddress__Group__6 : rule__NetworkAddress__Group__6__Impl rule__NetworkAddress__Group__7 ;
    public final void rule__NetworkAddress__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8853:1: ( rule__NetworkAddress__Group__6__Impl rule__NetworkAddress__Group__7 )
            // InternalDockerCompose.g:8854:2: rule__NetworkAddress__Group__6__Impl rule__NetworkAddress__Group__7
            {
            pushFollow(FOLLOW_39);
            rule__NetworkAddress__Group__6__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__7();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__6"


    // $ANTLR start "rule__NetworkAddress__Group__6__Impl"
    // InternalDockerCompose.g:8861:1: rule__NetworkAddress__Group__6__Impl : ( ( rule__NetworkAddress__Dns4Assignment_6 ) ) ;
    public final void rule__NetworkAddress__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8865:1: ( ( ( rule__NetworkAddress__Dns4Assignment_6 ) ) )
            // InternalDockerCompose.g:8866:1: ( ( rule__NetworkAddress__Dns4Assignment_6 ) )
            {
            // InternalDockerCompose.g:8866:1: ( ( rule__NetworkAddress__Dns4Assignment_6 ) )
            // InternalDockerCompose.g:8867:2: ( rule__NetworkAddress__Dns4Assignment_6 )
            {
             before(grammarAccess.getNetworkAddressAccess().getDns4Assignment_6()); 
            // InternalDockerCompose.g:8868:2: ( rule__NetworkAddress__Dns4Assignment_6 )
            // InternalDockerCompose.g:8868:3: rule__NetworkAddress__Dns4Assignment_6
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Dns4Assignment_6();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAddressAccess().getDns4Assignment_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__6__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__7"
    // InternalDockerCompose.g:8876:1: rule__NetworkAddress__Group__7 : rule__NetworkAddress__Group__7__Impl rule__NetworkAddress__Group__8 ;
    public final void rule__NetworkAddress__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8880:1: ( rule__NetworkAddress__Group__7__Impl rule__NetworkAddress__Group__8 )
            // InternalDockerCompose.g:8881:2: rule__NetworkAddress__Group__7__Impl rule__NetworkAddress__Group__8
            {
            pushFollow(FOLLOW_10);
            rule__NetworkAddress__Group__7__Impl();

            state._fsp--;

            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__8();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__7"


    // $ANTLR start "rule__NetworkAddress__Group__7__Impl"
    // InternalDockerCompose.g:8888:1: rule__NetworkAddress__Group__7__Impl : ( '/' ) ;
    public final void rule__NetworkAddress__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8892:1: ( ( '/' ) )
            // InternalDockerCompose.g:8893:1: ( '/' )
            {
            // InternalDockerCompose.g:8893:1: ( '/' )
            // InternalDockerCompose.g:8894:2: '/'
            {
             before(grammarAccess.getNetworkAddressAccess().getSolidusKeyword_7()); 
            match(input,90,FOLLOW_2); 
             after(grammarAccess.getNetworkAddressAccess().getSolidusKeyword_7()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__7__Impl"


    // $ANTLR start "rule__NetworkAddress__Group__8"
    // InternalDockerCompose.g:8903:1: rule__NetworkAddress__Group__8 : rule__NetworkAddress__Group__8__Impl ;
    public final void rule__NetworkAddress__Group__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8907:1: ( rule__NetworkAddress__Group__8__Impl )
            // InternalDockerCompose.g:8908:2: rule__NetworkAddress__Group__8__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__Group__8__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__8"


    // $ANTLR start "rule__NetworkAddress__Group__8__Impl"
    // InternalDockerCompose.g:8914:1: rule__NetworkAddress__Group__8__Impl : ( ( rule__NetworkAddress__NetIdAssignment_8 ) ) ;
    public final void rule__NetworkAddress__Group__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:8918:1: ( ( ( rule__NetworkAddress__NetIdAssignment_8 ) ) )
            // InternalDockerCompose.g:8919:1: ( ( rule__NetworkAddress__NetIdAssignment_8 ) )
            {
            // InternalDockerCompose.g:8919:1: ( ( rule__NetworkAddress__NetIdAssignment_8 ) )
            // InternalDockerCompose.g:8920:2: ( rule__NetworkAddress__NetIdAssignment_8 )
            {
             before(grammarAccess.getNetworkAddressAccess().getNetIdAssignment_8()); 
            // InternalDockerCompose.g:8921:2: ( rule__NetworkAddress__NetIdAssignment_8 )
            // InternalDockerCompose.g:8921:3: rule__NetworkAddress__NetIdAssignment_8
            {
            pushFollow(FOLLOW_2);
            rule__NetworkAddress__NetIdAssignment_8();

            state._fsp--;


            }

             after(grammarAccess.getNetworkAddressAccess().getNetIdAssignment_8()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Group__8__Impl"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup"
    // InternalDockerCompose.g:8930:1: rule__DockerCompose__UnorderedGroup : rule__DockerCompose__UnorderedGroup__0 {...}?;
    public final void rule__DockerCompose__UnorderedGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getDockerComposeAccess().getUnorderedGroup());
        	
        try {
            // InternalDockerCompose.g:8935:1: ( rule__DockerCompose__UnorderedGroup__0 {...}?)
            // InternalDockerCompose.g:8936:2: rule__DockerCompose__UnorderedGroup__0 {...}?
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__UnorderedGroup__0();

            state._fsp--;

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getDockerComposeAccess().getUnorderedGroup()) ) {
                throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup", "getUnorderedGroupHelper().canLeave(grammarAccess.getDockerComposeAccess().getUnorderedGroup())");
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getDockerComposeAccess().getUnorderedGroup());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__Impl"
    // InternalDockerCompose.g:8944:1: rule__DockerCompose__UnorderedGroup__Impl : ( ({...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) ) ) ) ;
    public final void rule__DockerCompose__UnorderedGroup__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:8949:1: ( ( ({...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) ) ) ) )
            // InternalDockerCompose.g:8950:3: ( ({...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:8950:3: ( ({...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) ) ) | ({...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) ) ) )
            int alt46=6;
            int LA46_0 = input.LA(1);

            if ( LA46_0 == 34 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                alt46=1;
            }
            else if ( LA46_0 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                alt46=2;
            }
            else if ( LA46_0 == 36 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                alt46=3;
            }
            else if ( LA46_0 == 37 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                alt46=4;
            }
            else if ( LA46_0 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                alt46=5;
            }
            else if ( LA46_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                alt46=6;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;
            }
            switch (alt46) {
                case 1 :
                    // InternalDockerCompose.g:8951:3: ({...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:8951:3: ({...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) ) )
                    // InternalDockerCompose.g:8952:4: {...}? => ( ( ( rule__DockerCompose__Group_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                        throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0)");
                    }
                    // InternalDockerCompose.g:8952:107: ( ( ( rule__DockerCompose__Group_0__0 ) ) )
                    // InternalDockerCompose.g:8953:5: ( ( rule__DockerCompose__Group_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:8959:5: ( ( rule__DockerCompose__Group_0__0 ) )
                    // InternalDockerCompose.g:8960:6: ( rule__DockerCompose__Group_0__0 )
                    {
                     before(grammarAccess.getDockerComposeAccess().getGroup_0()); 
                    // InternalDockerCompose.g:8961:6: ( rule__DockerCompose__Group_0__0 )
                    // InternalDockerCompose.g:8961:7: rule__DockerCompose__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDockerComposeAccess().getGroup_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:8966:3: ({...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:8966:3: ({...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) ) )
                    // InternalDockerCompose.g:8967:4: {...}? => ( ( ( rule__DockerCompose__Group_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                        throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1)");
                    }
                    // InternalDockerCompose.g:8967:107: ( ( ( rule__DockerCompose__Group_1__0 ) ) )
                    // InternalDockerCompose.g:8968:5: ( ( rule__DockerCompose__Group_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:8974:5: ( ( rule__DockerCompose__Group_1__0 ) )
                    // InternalDockerCompose.g:8975:6: ( rule__DockerCompose__Group_1__0 )
                    {
                     before(grammarAccess.getDockerComposeAccess().getGroup_1()); 
                    // InternalDockerCompose.g:8976:6: ( rule__DockerCompose__Group_1__0 )
                    // InternalDockerCompose.g:8976:7: rule__DockerCompose__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDockerComposeAccess().getGroup_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:8981:3: ({...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:8981:3: ({...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) ) )
                    // InternalDockerCompose.g:8982:4: {...}? => ( ( ( rule__DockerCompose__Group_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                        throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2)");
                    }
                    // InternalDockerCompose.g:8982:107: ( ( ( rule__DockerCompose__Group_2__0 ) ) )
                    // InternalDockerCompose.g:8983:5: ( ( rule__DockerCompose__Group_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:8989:5: ( ( rule__DockerCompose__Group_2__0 ) )
                    // InternalDockerCompose.g:8990:6: ( rule__DockerCompose__Group_2__0 )
                    {
                     before(grammarAccess.getDockerComposeAccess().getGroup_2()); 
                    // InternalDockerCompose.g:8991:6: ( rule__DockerCompose__Group_2__0 )
                    // InternalDockerCompose.g:8991:7: rule__DockerCompose__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__Group_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDockerComposeAccess().getGroup_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:8996:3: ({...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:8996:3: ({...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) ) )
                    // InternalDockerCompose.g:8997:4: {...}? => ( ( ( rule__DockerCompose__Group_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                        throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3)");
                    }
                    // InternalDockerCompose.g:8997:107: ( ( ( rule__DockerCompose__Group_3__0 ) ) )
                    // InternalDockerCompose.g:8998:5: ( ( rule__DockerCompose__Group_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9004:5: ( ( rule__DockerCompose__Group_3__0 ) )
                    // InternalDockerCompose.g:9005:6: ( rule__DockerCompose__Group_3__0 )
                    {
                     before(grammarAccess.getDockerComposeAccess().getGroup_3()); 
                    // InternalDockerCompose.g:9006:6: ( rule__DockerCompose__Group_3__0 )
                    // InternalDockerCompose.g:9006:7: rule__DockerCompose__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__Group_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDockerComposeAccess().getGroup_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:9011:3: ({...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9011:3: ({...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) ) )
                    // InternalDockerCompose.g:9012:4: {...}? => ( ( ( rule__DockerCompose__Group_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                        throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4)");
                    }
                    // InternalDockerCompose.g:9012:107: ( ( ( rule__DockerCompose__Group_4__0 ) ) )
                    // InternalDockerCompose.g:9013:5: ( ( rule__DockerCompose__Group_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9019:5: ( ( rule__DockerCompose__Group_4__0 ) )
                    // InternalDockerCompose.g:9020:6: ( rule__DockerCompose__Group_4__0 )
                    {
                     before(grammarAccess.getDockerComposeAccess().getGroup_4()); 
                    // InternalDockerCompose.g:9021:6: ( rule__DockerCompose__Group_4__0 )
                    // InternalDockerCompose.g:9021:7: rule__DockerCompose__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__Group_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDockerComposeAccess().getGroup_4()); 

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDockerCompose.g:9026:3: ({...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9026:3: ({...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) ) )
                    // InternalDockerCompose.g:9027:4: {...}? => ( ( ( rule__DockerCompose__Group_5__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                        throw new FailedPredicateException(input, "rule__DockerCompose__UnorderedGroup__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5)");
                    }
                    // InternalDockerCompose.g:9027:107: ( ( ( rule__DockerCompose__Group_5__0 ) ) )
                    // InternalDockerCompose.g:9028:5: ( ( rule__DockerCompose__Group_5__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9034:5: ( ( rule__DockerCompose__Group_5__0 ) )
                    // InternalDockerCompose.g:9035:6: ( rule__DockerCompose__Group_5__0 )
                    {
                     before(grammarAccess.getDockerComposeAccess().getGroup_5()); 
                    // InternalDockerCompose.g:9036:6: ( rule__DockerCompose__Group_5__0 )
                    // InternalDockerCompose.g:9036:7: rule__DockerCompose__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__Group_5__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getDockerComposeAccess().getGroup_5()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDockerComposeAccess().getUnorderedGroup());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__Impl"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__0"
    // InternalDockerCompose.g:9049:1: rule__DockerCompose__UnorderedGroup__0 : rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__1 )? ;
    public final void rule__DockerCompose__UnorderedGroup__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9053:1: ( rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__1 )? )
            // InternalDockerCompose.g:9054:2: rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__1 )?
            {
            pushFollow(FOLLOW_40);
            rule__DockerCompose__UnorderedGroup__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9055:2: ( rule__DockerCompose__UnorderedGroup__1 )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( LA47_0 == 34 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                alt47=1;
            }
            else if ( LA47_0 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                alt47=1;
            }
            else if ( LA47_0 == 36 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                alt47=1;
            }
            else if ( LA47_0 == 37 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                alt47=1;
            }
            else if ( LA47_0 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                alt47=1;
            }
            else if ( LA47_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalDockerCompose.g:9055:2: rule__DockerCompose__UnorderedGroup__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__UnorderedGroup__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__0"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__1"
    // InternalDockerCompose.g:9061:1: rule__DockerCompose__UnorderedGroup__1 : rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__2 )? ;
    public final void rule__DockerCompose__UnorderedGroup__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9065:1: ( rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__2 )? )
            // InternalDockerCompose.g:9066:2: rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__2 )?
            {
            pushFollow(FOLLOW_40);
            rule__DockerCompose__UnorderedGroup__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9067:2: ( rule__DockerCompose__UnorderedGroup__2 )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( LA48_0 == 34 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                alt48=1;
            }
            else if ( LA48_0 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                alt48=1;
            }
            else if ( LA48_0 == 36 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                alt48=1;
            }
            else if ( LA48_0 == 37 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                alt48=1;
            }
            else if ( LA48_0 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                alt48=1;
            }
            else if ( LA48_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalDockerCompose.g:9067:2: rule__DockerCompose__UnorderedGroup__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__UnorderedGroup__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__1"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__2"
    // InternalDockerCompose.g:9073:1: rule__DockerCompose__UnorderedGroup__2 : rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__3 )? ;
    public final void rule__DockerCompose__UnorderedGroup__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9077:1: ( rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__3 )? )
            // InternalDockerCompose.g:9078:2: rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__3 )?
            {
            pushFollow(FOLLOW_40);
            rule__DockerCompose__UnorderedGroup__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9079:2: ( rule__DockerCompose__UnorderedGroup__3 )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( LA49_0 == 34 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                alt49=1;
            }
            else if ( LA49_0 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                alt49=1;
            }
            else if ( LA49_0 == 36 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                alt49=1;
            }
            else if ( LA49_0 == 37 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                alt49=1;
            }
            else if ( LA49_0 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                alt49=1;
            }
            else if ( LA49_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalDockerCompose.g:9079:2: rule__DockerCompose__UnorderedGroup__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__UnorderedGroup__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__2"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__3"
    // InternalDockerCompose.g:9085:1: rule__DockerCompose__UnorderedGroup__3 : rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__4 )? ;
    public final void rule__DockerCompose__UnorderedGroup__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9089:1: ( rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__4 )? )
            // InternalDockerCompose.g:9090:2: rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__4 )?
            {
            pushFollow(FOLLOW_40);
            rule__DockerCompose__UnorderedGroup__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9091:2: ( rule__DockerCompose__UnorderedGroup__4 )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( LA50_0 == 34 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                alt50=1;
            }
            else if ( LA50_0 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                alt50=1;
            }
            else if ( LA50_0 == 36 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                alt50=1;
            }
            else if ( LA50_0 == 37 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                alt50=1;
            }
            else if ( LA50_0 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                alt50=1;
            }
            else if ( LA50_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // InternalDockerCompose.g:9091:2: rule__DockerCompose__UnorderedGroup__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__UnorderedGroup__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__3"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__4"
    // InternalDockerCompose.g:9097:1: rule__DockerCompose__UnorderedGroup__4 : rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__5 )? ;
    public final void rule__DockerCompose__UnorderedGroup__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9101:1: ( rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__5 )? )
            // InternalDockerCompose.g:9102:2: rule__DockerCompose__UnorderedGroup__Impl ( rule__DockerCompose__UnorderedGroup__5 )?
            {
            pushFollow(FOLLOW_40);
            rule__DockerCompose__UnorderedGroup__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9103:2: ( rule__DockerCompose__UnorderedGroup__5 )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( LA51_0 == 34 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 0) ) {
                alt51=1;
            }
            else if ( LA51_0 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 1) ) {
                alt51=1;
            }
            else if ( LA51_0 == 36 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 2) ) {
                alt51=1;
            }
            else if ( LA51_0 == 37 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 3) ) {
                alt51=1;
            }
            else if ( LA51_0 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 4) ) {
                alt51=1;
            }
            else if ( LA51_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getDockerComposeAccess().getUnorderedGroup(), 5) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalDockerCompose.g:9103:2: rule__DockerCompose__UnorderedGroup__5
                    {
                    pushFollow(FOLLOW_2);
                    rule__DockerCompose__UnorderedGroup__5();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__4"


    // $ANTLR start "rule__DockerCompose__UnorderedGroup__5"
    // InternalDockerCompose.g:9109:1: rule__DockerCompose__UnorderedGroup__5 : rule__DockerCompose__UnorderedGroup__Impl ;
    public final void rule__DockerCompose__UnorderedGroup__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9113:1: ( rule__DockerCompose__UnorderedGroup__Impl )
            // InternalDockerCompose.g:9114:2: rule__DockerCompose__UnorderedGroup__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DockerCompose__UnorderedGroup__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__UnorderedGroup__5"


    // $ANTLR start "rule__Service__UnorderedGroup_3"
    // InternalDockerCompose.g:9121:1: rule__Service__UnorderedGroup_3 : rule__Service__UnorderedGroup_3__0 {...}?;
    public final void rule__Service__UnorderedGroup_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getServiceAccess().getUnorderedGroup_3());
        	
        try {
            // InternalDockerCompose.g:9126:1: ( rule__Service__UnorderedGroup_3__0 {...}?)
            // InternalDockerCompose.g:9127:2: rule__Service__UnorderedGroup_3__0 {...}?
            {
            pushFollow(FOLLOW_2);
            rule__Service__UnorderedGroup_3__0();

            state._fsp--;

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {
                throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3", "getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3())");
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getServiceAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3"


    // $ANTLR start "rule__Service__UnorderedGroup_3__Impl"
    // InternalDockerCompose.g:9135:1: rule__Service__UnorderedGroup_3__Impl : ( ({...}? => ( ( ( rule__Service__Alternatives_3_0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) ) ) ;
    public final void rule__Service__UnorderedGroup_3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:9140:1: ( ( ({...}? => ( ( ( rule__Service__Alternatives_3_0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) ) ) )
            // InternalDockerCompose.g:9141:3: ( ({...}? => ( ( ( rule__Service__Alternatives_3_0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:9141:3: ( ({...}? => ( ( ( rule__Service__Alternatives_3_0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) ) )
            int alt52=15;
            alt52 = dfa52.predict(input);
            switch (alt52) {
                case 1 :
                    // InternalDockerCompose.g:9142:3: ({...}? => ( ( ( rule__Service__Alternatives_3_0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9142:3: ({...}? => ( ( ( rule__Service__Alternatives_3_0 ) ) ) )
                    // InternalDockerCompose.g:9143:4: {...}? => ( ( ( rule__Service__Alternatives_3_0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0)");
                    }
                    // InternalDockerCompose.g:9143:103: ( ( ( rule__Service__Alternatives_3_0 ) ) )
                    // InternalDockerCompose.g:9144:5: ( ( rule__Service__Alternatives_3_0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9150:5: ( ( rule__Service__Alternatives_3_0 ) )
                    // InternalDockerCompose.g:9151:6: ( rule__Service__Alternatives_3_0 )
                    {
                     before(grammarAccess.getServiceAccess().getAlternatives_3_0()); 
                    // InternalDockerCompose.g:9152:6: ( rule__Service__Alternatives_3_0 )
                    // InternalDockerCompose.g:9152:7: rule__Service__Alternatives_3_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Alternatives_3_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getAlternatives_3_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:9157:3: ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9157:3: ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) )
                    // InternalDockerCompose.g:9158:4: {...}? => ( ( ( rule__Service__Group_3_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1)");
                    }
                    // InternalDockerCompose.g:9158:103: ( ( ( rule__Service__Group_3_1__0 ) ) )
                    // InternalDockerCompose.g:9159:5: ( ( rule__Service__Group_3_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9165:5: ( ( rule__Service__Group_3_1__0 ) )
                    // InternalDockerCompose.g:9166:6: ( rule__Service__Group_3_1__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_1()); 
                    // InternalDockerCompose.g:9167:6: ( rule__Service__Group_3_1__0 )
                    // InternalDockerCompose.g:9167:7: rule__Service__Group_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:9172:3: ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9172:3: ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) )
                    // InternalDockerCompose.g:9173:4: {...}? => ( ( ( rule__Service__Group_3_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2)");
                    }
                    // InternalDockerCompose.g:9173:103: ( ( ( rule__Service__Group_3_2__0 ) ) )
                    // InternalDockerCompose.g:9174:5: ( ( rule__Service__Group_3_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9180:5: ( ( rule__Service__Group_3_2__0 ) )
                    // InternalDockerCompose.g:9181:6: ( rule__Service__Group_3_2__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_2()); 
                    // InternalDockerCompose.g:9182:6: ( rule__Service__Group_3_2__0 )
                    // InternalDockerCompose.g:9182:7: rule__Service__Group_3_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:9187:3: ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9187:3: ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) )
                    // InternalDockerCompose.g:9188:4: {...}? => ( ( ( rule__Service__Group_3_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3)");
                    }
                    // InternalDockerCompose.g:9188:103: ( ( ( rule__Service__Group_3_3__0 ) ) )
                    // InternalDockerCompose.g:9189:5: ( ( rule__Service__Group_3_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9195:5: ( ( rule__Service__Group_3_3__0 ) )
                    // InternalDockerCompose.g:9196:6: ( rule__Service__Group_3_3__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_3()); 
                    // InternalDockerCompose.g:9197:6: ( rule__Service__Group_3_3__0 )
                    // InternalDockerCompose.g:9197:7: rule__Service__Group_3_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:9202:3: ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9202:3: ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) )
                    // InternalDockerCompose.g:9203:4: {...}? => ( ( ( rule__Service__Group_3_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4)");
                    }
                    // InternalDockerCompose.g:9203:103: ( ( ( rule__Service__Group_3_4__0 ) ) )
                    // InternalDockerCompose.g:9204:5: ( ( rule__Service__Group_3_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9210:5: ( ( rule__Service__Group_3_4__0 ) )
                    // InternalDockerCompose.g:9211:6: ( rule__Service__Group_3_4__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_4()); 
                    // InternalDockerCompose.g:9212:6: ( rule__Service__Group_3_4__0 )
                    // InternalDockerCompose.g:9212:7: rule__Service__Group_3_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_4()); 

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDockerCompose.g:9217:3: ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9217:3: ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) )
                    // InternalDockerCompose.g:9218:4: {...}? => ( ( ( rule__Service__Group_3_5__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5)");
                    }
                    // InternalDockerCompose.g:9218:103: ( ( ( rule__Service__Group_3_5__0 ) ) )
                    // InternalDockerCompose.g:9219:5: ( ( rule__Service__Group_3_5__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9225:5: ( ( rule__Service__Group_3_5__0 ) )
                    // InternalDockerCompose.g:9226:6: ( rule__Service__Group_3_5__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_5()); 
                    // InternalDockerCompose.g:9227:6: ( rule__Service__Group_3_5__0 )
                    // InternalDockerCompose.g:9227:7: rule__Service__Group_3_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_5__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_5()); 

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalDockerCompose.g:9232:3: ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9232:3: ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) )
                    // InternalDockerCompose.g:9233:4: {...}? => ( ( ( rule__Service__Group_3_6__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6)");
                    }
                    // InternalDockerCompose.g:9233:103: ( ( ( rule__Service__Group_3_6__0 ) ) )
                    // InternalDockerCompose.g:9234:5: ( ( rule__Service__Group_3_6__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9240:5: ( ( rule__Service__Group_3_6__0 ) )
                    // InternalDockerCompose.g:9241:6: ( rule__Service__Group_3_6__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_6()); 
                    // InternalDockerCompose.g:9242:6: ( rule__Service__Group_3_6__0 )
                    // InternalDockerCompose.g:9242:7: rule__Service__Group_3_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_6__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_6()); 

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalDockerCompose.g:9247:3: ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9247:3: ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) )
                    // InternalDockerCompose.g:9248:4: {...}? => ( ( ( rule__Service__Group_3_7__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7)");
                    }
                    // InternalDockerCompose.g:9248:103: ( ( ( rule__Service__Group_3_7__0 ) ) )
                    // InternalDockerCompose.g:9249:5: ( ( rule__Service__Group_3_7__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9255:5: ( ( rule__Service__Group_3_7__0 ) )
                    // InternalDockerCompose.g:9256:6: ( rule__Service__Group_3_7__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_7()); 
                    // InternalDockerCompose.g:9257:6: ( rule__Service__Group_3_7__0 )
                    // InternalDockerCompose.g:9257:7: rule__Service__Group_3_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_7__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_7()); 

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalDockerCompose.g:9262:3: ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9262:3: ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) )
                    // InternalDockerCompose.g:9263:4: {...}? => ( ( ( rule__Service__Group_3_8__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8)");
                    }
                    // InternalDockerCompose.g:9263:103: ( ( ( rule__Service__Group_3_8__0 ) ) )
                    // InternalDockerCompose.g:9264:5: ( ( rule__Service__Group_3_8__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9270:5: ( ( rule__Service__Group_3_8__0 ) )
                    // InternalDockerCompose.g:9271:6: ( rule__Service__Group_3_8__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_8()); 
                    // InternalDockerCompose.g:9272:6: ( rule__Service__Group_3_8__0 )
                    // InternalDockerCompose.g:9272:7: rule__Service__Group_3_8__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_8__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_8()); 

                    }


                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalDockerCompose.g:9277:3: ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9277:3: ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) )
                    // InternalDockerCompose.g:9278:4: {...}? => ( ( ( rule__Service__Group_3_9__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9)");
                    }
                    // InternalDockerCompose.g:9278:103: ( ( ( rule__Service__Group_3_9__0 ) ) )
                    // InternalDockerCompose.g:9279:5: ( ( rule__Service__Group_3_9__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9285:5: ( ( rule__Service__Group_3_9__0 ) )
                    // InternalDockerCompose.g:9286:6: ( rule__Service__Group_3_9__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_9()); 
                    // InternalDockerCompose.g:9287:6: ( rule__Service__Group_3_9__0 )
                    // InternalDockerCompose.g:9287:7: rule__Service__Group_3_9__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_9__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_9()); 

                    }


                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalDockerCompose.g:9292:3: ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9292:3: ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) )
                    // InternalDockerCompose.g:9293:4: {...}? => ( ( ( rule__Service__Group_3_10__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10)");
                    }
                    // InternalDockerCompose.g:9293:104: ( ( ( rule__Service__Group_3_10__0 ) ) )
                    // InternalDockerCompose.g:9294:5: ( ( rule__Service__Group_3_10__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9300:5: ( ( rule__Service__Group_3_10__0 ) )
                    // InternalDockerCompose.g:9301:6: ( rule__Service__Group_3_10__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_10()); 
                    // InternalDockerCompose.g:9302:6: ( rule__Service__Group_3_10__0 )
                    // InternalDockerCompose.g:9302:7: rule__Service__Group_3_10__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_10__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_10()); 

                    }


                    }


                    }


                    }
                    break;
                case 12 :
                    // InternalDockerCompose.g:9307:3: ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9307:3: ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) )
                    // InternalDockerCompose.g:9308:4: {...}? => ( ( ( rule__Service__Group_3_11__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11)");
                    }
                    // InternalDockerCompose.g:9308:104: ( ( ( rule__Service__Group_3_11__0 ) ) )
                    // InternalDockerCompose.g:9309:5: ( ( rule__Service__Group_3_11__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9315:5: ( ( rule__Service__Group_3_11__0 ) )
                    // InternalDockerCompose.g:9316:6: ( rule__Service__Group_3_11__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_11()); 
                    // InternalDockerCompose.g:9317:6: ( rule__Service__Group_3_11__0 )
                    // InternalDockerCompose.g:9317:7: rule__Service__Group_3_11__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_11__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_11()); 

                    }


                    }


                    }


                    }
                    break;
                case 13 :
                    // InternalDockerCompose.g:9322:3: ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9322:3: ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) )
                    // InternalDockerCompose.g:9323:4: {...}? => ( ( ( rule__Service__Group_3_12__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12)");
                    }
                    // InternalDockerCompose.g:9323:104: ( ( ( rule__Service__Group_3_12__0 ) ) )
                    // InternalDockerCompose.g:9324:5: ( ( rule__Service__Group_3_12__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9330:5: ( ( rule__Service__Group_3_12__0 ) )
                    // InternalDockerCompose.g:9331:6: ( rule__Service__Group_3_12__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_12()); 
                    // InternalDockerCompose.g:9332:6: ( rule__Service__Group_3_12__0 )
                    // InternalDockerCompose.g:9332:7: rule__Service__Group_3_12__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_12__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_12()); 

                    }


                    }


                    }


                    }
                    break;
                case 14 :
                    // InternalDockerCompose.g:9337:3: ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9337:3: ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) )
                    // InternalDockerCompose.g:9338:4: {...}? => ( ( ( rule__Service__Group_3_13__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13)");
                    }
                    // InternalDockerCompose.g:9338:104: ( ( ( rule__Service__Group_3_13__0 ) ) )
                    // InternalDockerCompose.g:9339:5: ( ( rule__Service__Group_3_13__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9345:5: ( ( rule__Service__Group_3_13__0 ) )
                    // InternalDockerCompose.g:9346:6: ( rule__Service__Group_3_13__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_13()); 
                    // InternalDockerCompose.g:9347:6: ( rule__Service__Group_3_13__0 )
                    // InternalDockerCompose.g:9347:7: rule__Service__Group_3_13__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_13__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_13()); 

                    }


                    }


                    }


                    }
                    break;
                case 15 :
                    // InternalDockerCompose.g:9352:3: ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9352:3: ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) )
                    // InternalDockerCompose.g:9353:4: {...}? => ( ( ( rule__Service__Group_3_14__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {
                        throw new FailedPredicateException(input, "rule__Service__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14)");
                    }
                    // InternalDockerCompose.g:9353:104: ( ( ( rule__Service__Group_3_14__0 ) ) )
                    // InternalDockerCompose.g:9354:5: ( ( rule__Service__Group_3_14__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9360:5: ( ( rule__Service__Group_3_14__0 ) )
                    // InternalDockerCompose.g:9361:6: ( rule__Service__Group_3_14__0 )
                    {
                     before(grammarAccess.getServiceAccess().getGroup_3_14()); 
                    // InternalDockerCompose.g:9362:6: ( rule__Service__Group_3_14__0 )
                    // InternalDockerCompose.g:9362:7: rule__Service__Group_3_14__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__Group_3_14__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getServiceAccess().getGroup_3_14()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getServiceAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__Impl"


    // $ANTLR start "rule__Service__UnorderedGroup_3__0"
    // InternalDockerCompose.g:9375:1: rule__Service__UnorderedGroup_3__0 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__1 )? ;
    public final void rule__Service__UnorderedGroup_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9379:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__1 )? )
            // InternalDockerCompose.g:9380:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__1 )?
            {
            pushFollow(FOLLOW_41);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9381:2: ( rule__Service__UnorderedGroup_3__1 )?
            int alt53=2;
            alt53 = dfa53.predict(input);
            switch (alt53) {
                case 1 :
                    // InternalDockerCompose.g:9381:2: rule__Service__UnorderedGroup_3__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__0"


    // $ANTLR start "rule__Service__UnorderedGroup_3__1"
    // InternalDockerCompose.g:9387:1: rule__Service__UnorderedGroup_3__1 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__2 )? ;
    public final void rule__Service__UnorderedGroup_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9391:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__2 )? )
            // InternalDockerCompose.g:9392:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__2 )?
            {
            pushFollow(FOLLOW_41);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9393:2: ( rule__Service__UnorderedGroup_3__2 )?
            int alt54=2;
            alt54 = dfa54.predict(input);
            switch (alt54) {
                case 1 :
                    // InternalDockerCompose.g:9393:2: rule__Service__UnorderedGroup_3__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__1"


    // $ANTLR start "rule__Service__UnorderedGroup_3__2"
    // InternalDockerCompose.g:9399:1: rule__Service__UnorderedGroup_3__2 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__3 )? ;
    public final void rule__Service__UnorderedGroup_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9403:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__3 )? )
            // InternalDockerCompose.g:9404:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__3 )?
            {
            pushFollow(FOLLOW_41);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9405:2: ( rule__Service__UnorderedGroup_3__3 )?
            int alt55=2;
            alt55 = dfa55.predict(input);
            switch (alt55) {
                case 1 :
                    // InternalDockerCompose.g:9405:2: rule__Service__UnorderedGroup_3__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__2"


    // $ANTLR start "rule__Service__UnorderedGroup_3__3"
    // InternalDockerCompose.g:9411:1: rule__Service__UnorderedGroup_3__3 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__4 )? ;
    public final void rule__Service__UnorderedGroup_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9415:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__4 )? )
            // InternalDockerCompose.g:9416:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__4 )?
            {
            pushFollow(FOLLOW_41);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9417:2: ( rule__Service__UnorderedGroup_3__4 )?
            int alt56=2;
            alt56 = dfa56.predict(input);
            switch (alt56) {
                case 1 :
                    // InternalDockerCompose.g:9417:2: rule__Service__UnorderedGroup_3__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__3"


    // $ANTLR start "rule__Service__UnorderedGroup_3__4"
    // InternalDockerCompose.g:9423:1: rule__Service__UnorderedGroup_3__4 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__5 )? ;
    public final void rule__Service__UnorderedGroup_3__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9427:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__5 )? )
            // InternalDockerCompose.g:9428:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__5 )?
            {
            pushFollow(FOLLOW_41);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9429:2: ( rule__Service__UnorderedGroup_3__5 )?
            int alt57=2;
            alt57 = dfa57.predict(input);
            switch (alt57) {
                case 1 :
                    // InternalDockerCompose.g:9429:2: rule__Service__UnorderedGroup_3__5
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__5();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__4"


    // $ANTLR start "rule__Service__UnorderedGroup_3__5"
    // InternalDockerCompose.g:9435:1: rule__Service__UnorderedGroup_3__5 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__6 )? ;
    public final void rule__Service__UnorderedGroup_3__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9439:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__6 )? )
            // InternalDockerCompose.g:9440:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__6 )?
            {
            pushFollow(FOLLOW_41);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9441:2: ( rule__Service__UnorderedGroup_3__6 )?
            int alt58=2;
            alt58 = dfa58.predict(input);
            switch (alt58) {
                case 1 :
                    // InternalDockerCompose.g:9441:2: rule__Service__UnorderedGroup_3__6
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__6();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__5"


    // $ANTLR start "rule__Service__UnorderedGroup_3__6"
    // InternalDockerCompose.g:9447:1: rule__Service__UnorderedGroup_3__6 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__7 )? ;
    public final void rule__Service__UnorderedGroup_3__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9451:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__7 )? )
            // InternalDockerCompose.g:9452:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__7 )?
            {
            pushFollow(FOLLOW_41);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9453:2: ( rule__Service__UnorderedGroup_3__7 )?
            int alt59=2;
            alt59 = dfa59.predict(input);
            switch (alt59) {
                case 1 :
                    // InternalDockerCompose.g:9453:2: rule__Service__UnorderedGroup_3__7
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__7();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__6"


    // $ANTLR start "rule__Service__UnorderedGroup_3__7"
    // InternalDockerCompose.g:9459:1: rule__Service__UnorderedGroup_3__7 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__8 )? ;
    public final void rule__Service__UnorderedGroup_3__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9463:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__8 )? )
            // InternalDockerCompose.g:9464:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__8 )?
            {
            pushFollow(FOLLOW_41);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9465:2: ( rule__Service__UnorderedGroup_3__8 )?
            int alt60=2;
            alt60 = dfa60.predict(input);
            switch (alt60) {
                case 1 :
                    // InternalDockerCompose.g:9465:2: rule__Service__UnorderedGroup_3__8
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__8();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__7"


    // $ANTLR start "rule__Service__UnorderedGroup_3__8"
    // InternalDockerCompose.g:9471:1: rule__Service__UnorderedGroup_3__8 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__9 )? ;
    public final void rule__Service__UnorderedGroup_3__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9475:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__9 )? )
            // InternalDockerCompose.g:9476:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__9 )?
            {
            pushFollow(FOLLOW_41);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9477:2: ( rule__Service__UnorderedGroup_3__9 )?
            int alt61=2;
            alt61 = dfa61.predict(input);
            switch (alt61) {
                case 1 :
                    // InternalDockerCompose.g:9477:2: rule__Service__UnorderedGroup_3__9
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__9();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__8"


    // $ANTLR start "rule__Service__UnorderedGroup_3__9"
    // InternalDockerCompose.g:9483:1: rule__Service__UnorderedGroup_3__9 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__10 )? ;
    public final void rule__Service__UnorderedGroup_3__9() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9487:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__10 )? )
            // InternalDockerCompose.g:9488:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__10 )?
            {
            pushFollow(FOLLOW_41);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9489:2: ( rule__Service__UnorderedGroup_3__10 )?
            int alt62=2;
            alt62 = dfa62.predict(input);
            switch (alt62) {
                case 1 :
                    // InternalDockerCompose.g:9489:2: rule__Service__UnorderedGroup_3__10
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__10();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__9"


    // $ANTLR start "rule__Service__UnorderedGroup_3__10"
    // InternalDockerCompose.g:9495:1: rule__Service__UnorderedGroup_3__10 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__11 )? ;
    public final void rule__Service__UnorderedGroup_3__10() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9499:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__11 )? )
            // InternalDockerCompose.g:9500:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__11 )?
            {
            pushFollow(FOLLOW_41);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9501:2: ( rule__Service__UnorderedGroup_3__11 )?
            int alt63=2;
            alt63 = dfa63.predict(input);
            switch (alt63) {
                case 1 :
                    // InternalDockerCompose.g:9501:2: rule__Service__UnorderedGroup_3__11
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__11();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__10"


    // $ANTLR start "rule__Service__UnorderedGroup_3__11"
    // InternalDockerCompose.g:9507:1: rule__Service__UnorderedGroup_3__11 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__12 )? ;
    public final void rule__Service__UnorderedGroup_3__11() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9511:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__12 )? )
            // InternalDockerCompose.g:9512:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__12 )?
            {
            pushFollow(FOLLOW_41);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9513:2: ( rule__Service__UnorderedGroup_3__12 )?
            int alt64=2;
            alt64 = dfa64.predict(input);
            switch (alt64) {
                case 1 :
                    // InternalDockerCompose.g:9513:2: rule__Service__UnorderedGroup_3__12
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__12();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__11"


    // $ANTLR start "rule__Service__UnorderedGroup_3__12"
    // InternalDockerCompose.g:9519:1: rule__Service__UnorderedGroup_3__12 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__13 )? ;
    public final void rule__Service__UnorderedGroup_3__12() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9523:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__13 )? )
            // InternalDockerCompose.g:9524:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__13 )?
            {
            pushFollow(FOLLOW_41);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9525:2: ( rule__Service__UnorderedGroup_3__13 )?
            int alt65=2;
            alt65 = dfa65.predict(input);
            switch (alt65) {
                case 1 :
                    // InternalDockerCompose.g:9525:2: rule__Service__UnorderedGroup_3__13
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__13();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__12"


    // $ANTLR start "rule__Service__UnorderedGroup_3__13"
    // InternalDockerCompose.g:9531:1: rule__Service__UnorderedGroup_3__13 : rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__14 )? ;
    public final void rule__Service__UnorderedGroup_3__13() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9535:1: ( rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__14 )? )
            // InternalDockerCompose.g:9536:2: rule__Service__UnorderedGroup_3__Impl ( rule__Service__UnorderedGroup_3__14 )?
            {
            pushFollow(FOLLOW_41);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9537:2: ( rule__Service__UnorderedGroup_3__14 )?
            int alt66=2;
            alt66 = dfa66.predict(input);
            switch (alt66) {
                case 1 :
                    // InternalDockerCompose.g:9537:2: rule__Service__UnorderedGroup_3__14
                    {
                    pushFollow(FOLLOW_2);
                    rule__Service__UnorderedGroup_3__14();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__13"


    // $ANTLR start "rule__Service__UnorderedGroup_3__14"
    // InternalDockerCompose.g:9543:1: rule__Service__UnorderedGroup_3__14 : rule__Service__UnorderedGroup_3__Impl ;
    public final void rule__Service__UnorderedGroup_3__14() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9547:1: ( rule__Service__UnorderedGroup_3__Impl )
            // InternalDockerCompose.g:9548:2: rule__Service__UnorderedGroup_3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Service__UnorderedGroup_3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__UnorderedGroup_3__14"


    // $ANTLR start "rule__NetworkConnector_long__UnorderedGroup_3"
    // InternalDockerCompose.g:9555:1: rule__NetworkConnector_long__UnorderedGroup_3 : ( rule__NetworkConnector_long__UnorderedGroup_3__0 )? ;
    public final void rule__NetworkConnector_long__UnorderedGroup_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3());
        	
        try {
            // InternalDockerCompose.g:9560:1: ( ( rule__NetworkConnector_long__UnorderedGroup_3__0 )? )
            // InternalDockerCompose.g:9561:2: ( rule__NetworkConnector_long__UnorderedGroup_3__0 )?
            {
            // InternalDockerCompose.g:9561:2: ( rule__NetworkConnector_long__UnorderedGroup_3__0 )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( LA67_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 0) ) {
                alt67=1;
            }
            else if ( LA67_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 1) ) {
                alt67=1;
            }
            else if ( LA67_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 2) ) {
                alt67=1;
            }
            else if ( LA67_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 3) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalDockerCompose.g:9561:2: rule__NetworkConnector_long__UnorderedGroup_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector_long__UnorderedGroup_3__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__UnorderedGroup_3"


    // $ANTLR start "rule__NetworkConnector_long__UnorderedGroup_3__Impl"
    // InternalDockerCompose.g:9569:1: rule__NetworkConnector_long__UnorderedGroup_3__Impl : ( ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_3__0 ) ) ) ) ) ;
    public final void rule__NetworkConnector_long__UnorderedGroup_3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:9574:1: ( ( ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_3__0 ) ) ) ) ) )
            // InternalDockerCompose.g:9575:3: ( ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_3__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:9575:3: ( ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_3__0 ) ) ) ) )
            int alt68=4;
            int LA68_0 = input.LA(1);

            if ( LA68_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 0) ) {
                alt68=1;
            }
            else if ( LA68_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 1) ) {
                alt68=2;
            }
            else if ( LA68_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 2) ) {
                alt68=3;
            }
            else if ( LA68_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 3) ) {
                alt68=4;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 68, 0, input);

                throw nvae;
            }
            switch (alt68) {
                case 1 :
                    // InternalDockerCompose.g:9576:3: ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9576:3: ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_0__0 ) ) ) )
                    // InternalDockerCompose.g:9577:4: {...}? => ( ( ( rule__NetworkConnector_long__Group_3_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 0) ) {
                        throw new FailedPredicateException(input, "rule__NetworkConnector_long__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 0)");
                    }
                    // InternalDockerCompose.g:9577:117: ( ( ( rule__NetworkConnector_long__Group_3_0__0 ) ) )
                    // InternalDockerCompose.g:9578:5: ( ( rule__NetworkConnector_long__Group_3_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9584:5: ( ( rule__NetworkConnector_long__Group_3_0__0 ) )
                    // InternalDockerCompose.g:9585:6: ( rule__NetworkConnector_long__Group_3_0__0 )
                    {
                     before(grammarAccess.getNetworkConnector_longAccess().getGroup_3_0()); 
                    // InternalDockerCompose.g:9586:6: ( rule__NetworkConnector_long__Group_3_0__0 )
                    // InternalDockerCompose.g:9586:7: rule__NetworkConnector_long__Group_3_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector_long__Group_3_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkConnector_longAccess().getGroup_3_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:9591:3: ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9591:3: ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_1__0 ) ) ) )
                    // InternalDockerCompose.g:9592:4: {...}? => ( ( ( rule__NetworkConnector_long__Group_3_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 1) ) {
                        throw new FailedPredicateException(input, "rule__NetworkConnector_long__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 1)");
                    }
                    // InternalDockerCompose.g:9592:117: ( ( ( rule__NetworkConnector_long__Group_3_1__0 ) ) )
                    // InternalDockerCompose.g:9593:5: ( ( rule__NetworkConnector_long__Group_3_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9599:5: ( ( rule__NetworkConnector_long__Group_3_1__0 ) )
                    // InternalDockerCompose.g:9600:6: ( rule__NetworkConnector_long__Group_3_1__0 )
                    {
                     before(grammarAccess.getNetworkConnector_longAccess().getGroup_3_1()); 
                    // InternalDockerCompose.g:9601:6: ( rule__NetworkConnector_long__Group_3_1__0 )
                    // InternalDockerCompose.g:9601:7: rule__NetworkConnector_long__Group_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector_long__Group_3_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkConnector_longAccess().getGroup_3_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:9606:3: ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9606:3: ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_2__0 ) ) ) )
                    // InternalDockerCompose.g:9607:4: {...}? => ( ( ( rule__NetworkConnector_long__Group_3_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 2) ) {
                        throw new FailedPredicateException(input, "rule__NetworkConnector_long__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 2)");
                    }
                    // InternalDockerCompose.g:9607:117: ( ( ( rule__NetworkConnector_long__Group_3_2__0 ) ) )
                    // InternalDockerCompose.g:9608:5: ( ( rule__NetworkConnector_long__Group_3_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9614:5: ( ( rule__NetworkConnector_long__Group_3_2__0 ) )
                    // InternalDockerCompose.g:9615:6: ( rule__NetworkConnector_long__Group_3_2__0 )
                    {
                     before(grammarAccess.getNetworkConnector_longAccess().getGroup_3_2()); 
                    // InternalDockerCompose.g:9616:6: ( rule__NetworkConnector_long__Group_3_2__0 )
                    // InternalDockerCompose.g:9616:7: rule__NetworkConnector_long__Group_3_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector_long__Group_3_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkConnector_longAccess().getGroup_3_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:9621:3: ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9621:3: ({...}? => ( ( ( rule__NetworkConnector_long__Group_3_3__0 ) ) ) )
                    // InternalDockerCompose.g:9622:4: {...}? => ( ( ( rule__NetworkConnector_long__Group_3_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 3) ) {
                        throw new FailedPredicateException(input, "rule__NetworkConnector_long__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 3)");
                    }
                    // InternalDockerCompose.g:9622:117: ( ( ( rule__NetworkConnector_long__Group_3_3__0 ) ) )
                    // InternalDockerCompose.g:9623:5: ( ( rule__NetworkConnector_long__Group_3_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9629:5: ( ( rule__NetworkConnector_long__Group_3_3__0 ) )
                    // InternalDockerCompose.g:9630:6: ( rule__NetworkConnector_long__Group_3_3__0 )
                    {
                     before(grammarAccess.getNetworkConnector_longAccess().getGroup_3_3()); 
                    // InternalDockerCompose.g:9631:6: ( rule__NetworkConnector_long__Group_3_3__0 )
                    // InternalDockerCompose.g:9631:7: rule__NetworkConnector_long__Group_3_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector_long__Group_3_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkConnector_longAccess().getGroup_3_3()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__UnorderedGroup_3__Impl"


    // $ANTLR start "rule__NetworkConnector_long__UnorderedGroup_3__0"
    // InternalDockerCompose.g:9644:1: rule__NetworkConnector_long__UnorderedGroup_3__0 : rule__NetworkConnector_long__UnorderedGroup_3__Impl ( rule__NetworkConnector_long__UnorderedGroup_3__1 )? ;
    public final void rule__NetworkConnector_long__UnorderedGroup_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9648:1: ( rule__NetworkConnector_long__UnorderedGroup_3__Impl ( rule__NetworkConnector_long__UnorderedGroup_3__1 )? )
            // InternalDockerCompose.g:9649:2: rule__NetworkConnector_long__UnorderedGroup_3__Impl ( rule__NetworkConnector_long__UnorderedGroup_3__1 )?
            {
            pushFollow(FOLLOW_42);
            rule__NetworkConnector_long__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9650:2: ( rule__NetworkConnector_long__UnorderedGroup_3__1 )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( LA69_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 0) ) {
                alt69=1;
            }
            else if ( LA69_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 1) ) {
                alt69=1;
            }
            else if ( LA69_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 2) ) {
                alt69=1;
            }
            else if ( LA69_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 3) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // InternalDockerCompose.g:9650:2: rule__NetworkConnector_long__UnorderedGroup_3__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector_long__UnorderedGroup_3__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__UnorderedGroup_3__0"


    // $ANTLR start "rule__NetworkConnector_long__UnorderedGroup_3__1"
    // InternalDockerCompose.g:9656:1: rule__NetworkConnector_long__UnorderedGroup_3__1 : rule__NetworkConnector_long__UnorderedGroup_3__Impl ( rule__NetworkConnector_long__UnorderedGroup_3__2 )? ;
    public final void rule__NetworkConnector_long__UnorderedGroup_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9660:1: ( rule__NetworkConnector_long__UnorderedGroup_3__Impl ( rule__NetworkConnector_long__UnorderedGroup_3__2 )? )
            // InternalDockerCompose.g:9661:2: rule__NetworkConnector_long__UnorderedGroup_3__Impl ( rule__NetworkConnector_long__UnorderedGroup_3__2 )?
            {
            pushFollow(FOLLOW_42);
            rule__NetworkConnector_long__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9662:2: ( rule__NetworkConnector_long__UnorderedGroup_3__2 )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( LA70_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 0) ) {
                alt70=1;
            }
            else if ( LA70_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 1) ) {
                alt70=1;
            }
            else if ( LA70_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 2) ) {
                alt70=1;
            }
            else if ( LA70_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 3) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalDockerCompose.g:9662:2: rule__NetworkConnector_long__UnorderedGroup_3__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector_long__UnorderedGroup_3__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__UnorderedGroup_3__1"


    // $ANTLR start "rule__NetworkConnector_long__UnorderedGroup_3__2"
    // InternalDockerCompose.g:9668:1: rule__NetworkConnector_long__UnorderedGroup_3__2 : rule__NetworkConnector_long__UnorderedGroup_3__Impl ( rule__NetworkConnector_long__UnorderedGroup_3__3 )? ;
    public final void rule__NetworkConnector_long__UnorderedGroup_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9672:1: ( rule__NetworkConnector_long__UnorderedGroup_3__Impl ( rule__NetworkConnector_long__UnorderedGroup_3__3 )? )
            // InternalDockerCompose.g:9673:2: rule__NetworkConnector_long__UnorderedGroup_3__Impl ( rule__NetworkConnector_long__UnorderedGroup_3__3 )?
            {
            pushFollow(FOLLOW_42);
            rule__NetworkConnector_long__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9674:2: ( rule__NetworkConnector_long__UnorderedGroup_3__3 )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( LA71_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 0) ) {
                alt71=1;
            }
            else if ( LA71_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 1) ) {
                alt71=1;
            }
            else if ( LA71_0 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 2) ) {
                alt71=1;
            }
            else if ( LA71_0 == 57 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkConnector_longAccess().getUnorderedGroup_3(), 3) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalDockerCompose.g:9674:2: rule__NetworkConnector_long__UnorderedGroup_3__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__NetworkConnector_long__UnorderedGroup_3__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__UnorderedGroup_3__2"


    // $ANTLR start "rule__NetworkConnector_long__UnorderedGroup_3__3"
    // InternalDockerCompose.g:9680:1: rule__NetworkConnector_long__UnorderedGroup_3__3 : rule__NetworkConnector_long__UnorderedGroup_3__Impl ;
    public final void rule__NetworkConnector_long__UnorderedGroup_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9684:1: ( rule__NetworkConnector_long__UnorderedGroup_3__Impl )
            // InternalDockerCompose.g:9685:2: rule__NetworkConnector_long__UnorderedGroup_3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NetworkConnector_long__UnorderedGroup_3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__UnorderedGroup_3__3"


    // $ANTLR start "rule__VolumeConnector_long__UnorderedGroup_1"
    // InternalDockerCompose.g:9692:1: rule__VolumeConnector_long__UnorderedGroup_1 : rule__VolumeConnector_long__UnorderedGroup_1__0 {...}?;
    public final void rule__VolumeConnector_long__UnorderedGroup_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1());
        	
        try {
            // InternalDockerCompose.g:9697:1: ( rule__VolumeConnector_long__UnorderedGroup_1__0 {...}?)
            // InternalDockerCompose.g:9698:2: rule__VolumeConnector_long__UnorderedGroup_1__0 {...}?
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__UnorderedGroup_1__0();

            state._fsp--;

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "rule__VolumeConnector_long__UnorderedGroup_1", "getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1())");
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__UnorderedGroup_1"


    // $ANTLR start "rule__VolumeConnector_long__UnorderedGroup_1__Impl"
    // InternalDockerCompose.g:9706:1: rule__VolumeConnector_long__UnorderedGroup_1__Impl : ( ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_6__0 ) ) ) ) ) ;
    public final void rule__VolumeConnector_long__UnorderedGroup_1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:9711:1: ( ( ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_6__0 ) ) ) ) ) )
            // InternalDockerCompose.g:9712:3: ( ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_6__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:9712:3: ( ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_6__0 ) ) ) ) )
            int alt72=7;
            int LA72_0 = input.LA(1);

            if ( LA72_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt72=1;
            }
            else if ( LA72_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt72=2;
            }
            else if ( LA72_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt72=3;
            }
            else if ( LA72_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt72=4;
            }
            else if ( LA72_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt72=5;
            }
            else if ( LA72_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 5) ) {
                alt72=6;
            }
            else if ( LA72_0 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 6) ) {
                alt72=7;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 72, 0, input);

                throw nvae;
            }
            switch (alt72) {
                case 1 :
                    // InternalDockerCompose.g:9713:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9713:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_0__0 ) ) ) )
                    // InternalDockerCompose.g:9714:4: {...}? => ( ( ( rule__VolumeConnector_long__Group_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 0)");
                    }
                    // InternalDockerCompose.g:9714:116: ( ( ( rule__VolumeConnector_long__Group_1_0__0 ) ) )
                    // InternalDockerCompose.g:9715:5: ( ( rule__VolumeConnector_long__Group_1_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9721:5: ( ( rule__VolumeConnector_long__Group_1_0__0 ) )
                    // InternalDockerCompose.g:9722:6: ( rule__VolumeConnector_long__Group_1_0__0 )
                    {
                     before(grammarAccess.getVolumeConnector_longAccess().getGroup_1_0()); 
                    // InternalDockerCompose.g:9723:6: ( rule__VolumeConnector_long__Group_1_0__0 )
                    // InternalDockerCompose.g:9723:7: rule__VolumeConnector_long__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__Group_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnector_longAccess().getGroup_1_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:9728:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9728:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_1__0 ) ) ) )
                    // InternalDockerCompose.g:9729:4: {...}? => ( ( ( rule__VolumeConnector_long__Group_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 1)");
                    }
                    // InternalDockerCompose.g:9729:116: ( ( ( rule__VolumeConnector_long__Group_1_1__0 ) ) )
                    // InternalDockerCompose.g:9730:5: ( ( rule__VolumeConnector_long__Group_1_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9736:5: ( ( rule__VolumeConnector_long__Group_1_1__0 ) )
                    // InternalDockerCompose.g:9737:6: ( rule__VolumeConnector_long__Group_1_1__0 )
                    {
                     before(grammarAccess.getVolumeConnector_longAccess().getGroup_1_1()); 
                    // InternalDockerCompose.g:9738:6: ( rule__VolumeConnector_long__Group_1_1__0 )
                    // InternalDockerCompose.g:9738:7: rule__VolumeConnector_long__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__Group_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnector_longAccess().getGroup_1_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:9743:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9743:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_2__0 ) ) ) )
                    // InternalDockerCompose.g:9744:4: {...}? => ( ( ( rule__VolumeConnector_long__Group_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 2)");
                    }
                    // InternalDockerCompose.g:9744:116: ( ( ( rule__VolumeConnector_long__Group_1_2__0 ) ) )
                    // InternalDockerCompose.g:9745:5: ( ( rule__VolumeConnector_long__Group_1_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9751:5: ( ( rule__VolumeConnector_long__Group_1_2__0 ) )
                    // InternalDockerCompose.g:9752:6: ( rule__VolumeConnector_long__Group_1_2__0 )
                    {
                     before(grammarAccess.getVolumeConnector_longAccess().getGroup_1_2()); 
                    // InternalDockerCompose.g:9753:6: ( rule__VolumeConnector_long__Group_1_2__0 )
                    // InternalDockerCompose.g:9753:7: rule__VolumeConnector_long__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__Group_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnector_longAccess().getGroup_1_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:9758:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9758:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_3__0 ) ) ) )
                    // InternalDockerCompose.g:9759:4: {...}? => ( ( ( rule__VolumeConnector_long__Group_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3)");
                    }
                    // InternalDockerCompose.g:9759:116: ( ( ( rule__VolumeConnector_long__Group_1_3__0 ) ) )
                    // InternalDockerCompose.g:9760:5: ( ( rule__VolumeConnector_long__Group_1_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9766:5: ( ( rule__VolumeConnector_long__Group_1_3__0 ) )
                    // InternalDockerCompose.g:9767:6: ( rule__VolumeConnector_long__Group_1_3__0 )
                    {
                     before(grammarAccess.getVolumeConnector_longAccess().getGroup_1_3()); 
                    // InternalDockerCompose.g:9768:6: ( rule__VolumeConnector_long__Group_1_3__0 )
                    // InternalDockerCompose.g:9768:7: rule__VolumeConnector_long__Group_1_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__Group_1_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnector_longAccess().getGroup_1_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:9773:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9773:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_4__0 ) ) ) )
                    // InternalDockerCompose.g:9774:4: {...}? => ( ( ( rule__VolumeConnector_long__Group_1_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 4)");
                    }
                    // InternalDockerCompose.g:9774:116: ( ( ( rule__VolumeConnector_long__Group_1_4__0 ) ) )
                    // InternalDockerCompose.g:9775:5: ( ( rule__VolumeConnector_long__Group_1_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9781:5: ( ( rule__VolumeConnector_long__Group_1_4__0 ) )
                    // InternalDockerCompose.g:9782:6: ( rule__VolumeConnector_long__Group_1_4__0 )
                    {
                     before(grammarAccess.getVolumeConnector_longAccess().getGroup_1_4()); 
                    // InternalDockerCompose.g:9783:6: ( rule__VolumeConnector_long__Group_1_4__0 )
                    // InternalDockerCompose.g:9783:7: rule__VolumeConnector_long__Group_1_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__Group_1_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnector_longAccess().getGroup_1_4()); 

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDockerCompose.g:9788:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_5__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9788:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_5__0 ) ) ) )
                    // InternalDockerCompose.g:9789:4: {...}? => ( ( ( rule__VolumeConnector_long__Group_1_5__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 5) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 5)");
                    }
                    // InternalDockerCompose.g:9789:116: ( ( ( rule__VolumeConnector_long__Group_1_5__0 ) ) )
                    // InternalDockerCompose.g:9790:5: ( ( rule__VolumeConnector_long__Group_1_5__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 5);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9796:5: ( ( rule__VolumeConnector_long__Group_1_5__0 ) )
                    // InternalDockerCompose.g:9797:6: ( rule__VolumeConnector_long__Group_1_5__0 )
                    {
                     before(grammarAccess.getVolumeConnector_longAccess().getGroup_1_5()); 
                    // InternalDockerCompose.g:9798:6: ( rule__VolumeConnector_long__Group_1_5__0 )
                    // InternalDockerCompose.g:9798:7: rule__VolumeConnector_long__Group_1_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__Group_1_5__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnector_longAccess().getGroup_1_5()); 

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalDockerCompose.g:9803:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_6__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9803:3: ({...}? => ( ( ( rule__VolumeConnector_long__Group_1_6__0 ) ) ) )
                    // InternalDockerCompose.g:9804:4: {...}? => ( ( ( rule__VolumeConnector_long__Group_1_6__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 6) ) {
                        throw new FailedPredicateException(input, "rule__VolumeConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 6)");
                    }
                    // InternalDockerCompose.g:9804:116: ( ( ( rule__VolumeConnector_long__Group_1_6__0 ) ) )
                    // InternalDockerCompose.g:9805:5: ( ( rule__VolumeConnector_long__Group_1_6__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 6);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9811:5: ( ( rule__VolumeConnector_long__Group_1_6__0 ) )
                    // InternalDockerCompose.g:9812:6: ( rule__VolumeConnector_long__Group_1_6__0 )
                    {
                     before(grammarAccess.getVolumeConnector_longAccess().getGroup_1_6()); 
                    // InternalDockerCompose.g:9813:6: ( rule__VolumeConnector_long__Group_1_6__0 )
                    // InternalDockerCompose.g:9813:7: rule__VolumeConnector_long__Group_1_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__Group_1_6__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeConnector_longAccess().getGroup_1_6()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__UnorderedGroup_1__Impl"


    // $ANTLR start "rule__VolumeConnector_long__UnorderedGroup_1__0"
    // InternalDockerCompose.g:9826:1: rule__VolumeConnector_long__UnorderedGroup_1__0 : rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__1 )? ;
    public final void rule__VolumeConnector_long__UnorderedGroup_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9830:1: ( rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__1 )? )
            // InternalDockerCompose.g:9831:2: rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__1 )?
            {
            pushFollow(FOLLOW_43);
            rule__VolumeConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9832:2: ( rule__VolumeConnector_long__UnorderedGroup_1__1 )?
            int alt73=2;
            alt73 = dfa73.predict(input);
            switch (alt73) {
                case 1 :
                    // InternalDockerCompose.g:9832:2: rule__VolumeConnector_long__UnorderedGroup_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__UnorderedGroup_1__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__UnorderedGroup_1__0"


    // $ANTLR start "rule__VolumeConnector_long__UnorderedGroup_1__1"
    // InternalDockerCompose.g:9838:1: rule__VolumeConnector_long__UnorderedGroup_1__1 : rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__2 )? ;
    public final void rule__VolumeConnector_long__UnorderedGroup_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9842:1: ( rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__2 )? )
            // InternalDockerCompose.g:9843:2: rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__2 )?
            {
            pushFollow(FOLLOW_43);
            rule__VolumeConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9844:2: ( rule__VolumeConnector_long__UnorderedGroup_1__2 )?
            int alt74=2;
            alt74 = dfa74.predict(input);
            switch (alt74) {
                case 1 :
                    // InternalDockerCompose.g:9844:2: rule__VolumeConnector_long__UnorderedGroup_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__UnorderedGroup_1__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__UnorderedGroup_1__1"


    // $ANTLR start "rule__VolumeConnector_long__UnorderedGroup_1__2"
    // InternalDockerCompose.g:9850:1: rule__VolumeConnector_long__UnorderedGroup_1__2 : rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__3 )? ;
    public final void rule__VolumeConnector_long__UnorderedGroup_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9854:1: ( rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__3 )? )
            // InternalDockerCompose.g:9855:2: rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__3 )?
            {
            pushFollow(FOLLOW_43);
            rule__VolumeConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9856:2: ( rule__VolumeConnector_long__UnorderedGroup_1__3 )?
            int alt75=2;
            alt75 = dfa75.predict(input);
            switch (alt75) {
                case 1 :
                    // InternalDockerCompose.g:9856:2: rule__VolumeConnector_long__UnorderedGroup_1__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__UnorderedGroup_1__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__UnorderedGroup_1__2"


    // $ANTLR start "rule__VolumeConnector_long__UnorderedGroup_1__3"
    // InternalDockerCompose.g:9862:1: rule__VolumeConnector_long__UnorderedGroup_1__3 : rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__4 )? ;
    public final void rule__VolumeConnector_long__UnorderedGroup_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9866:1: ( rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__4 )? )
            // InternalDockerCompose.g:9867:2: rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__4 )?
            {
            pushFollow(FOLLOW_43);
            rule__VolumeConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9868:2: ( rule__VolumeConnector_long__UnorderedGroup_1__4 )?
            int alt76=2;
            alt76 = dfa76.predict(input);
            switch (alt76) {
                case 1 :
                    // InternalDockerCompose.g:9868:2: rule__VolumeConnector_long__UnorderedGroup_1__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__UnorderedGroup_1__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__UnorderedGroup_1__3"


    // $ANTLR start "rule__VolumeConnector_long__UnorderedGroup_1__4"
    // InternalDockerCompose.g:9874:1: rule__VolumeConnector_long__UnorderedGroup_1__4 : rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__5 )? ;
    public final void rule__VolumeConnector_long__UnorderedGroup_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9878:1: ( rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__5 )? )
            // InternalDockerCompose.g:9879:2: rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__5 )?
            {
            pushFollow(FOLLOW_43);
            rule__VolumeConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9880:2: ( rule__VolumeConnector_long__UnorderedGroup_1__5 )?
            int alt77=2;
            alt77 = dfa77.predict(input);
            switch (alt77) {
                case 1 :
                    // InternalDockerCompose.g:9880:2: rule__VolumeConnector_long__UnorderedGroup_1__5
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__UnorderedGroup_1__5();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__UnorderedGroup_1__4"


    // $ANTLR start "rule__VolumeConnector_long__UnorderedGroup_1__5"
    // InternalDockerCompose.g:9886:1: rule__VolumeConnector_long__UnorderedGroup_1__5 : rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__6 )? ;
    public final void rule__VolumeConnector_long__UnorderedGroup_1__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9890:1: ( rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__6 )? )
            // InternalDockerCompose.g:9891:2: rule__VolumeConnector_long__UnorderedGroup_1__Impl ( rule__VolumeConnector_long__UnorderedGroup_1__6 )?
            {
            pushFollow(FOLLOW_43);
            rule__VolumeConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:9892:2: ( rule__VolumeConnector_long__UnorderedGroup_1__6 )?
            int alt78=2;
            alt78 = dfa78.predict(input);
            switch (alt78) {
                case 1 :
                    // InternalDockerCompose.g:9892:2: rule__VolumeConnector_long__UnorderedGroup_1__6
                    {
                    pushFollow(FOLLOW_2);
                    rule__VolumeConnector_long__UnorderedGroup_1__6();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__UnorderedGroup_1__5"


    // $ANTLR start "rule__VolumeConnector_long__UnorderedGroup_1__6"
    // InternalDockerCompose.g:9898:1: rule__VolumeConnector_long__UnorderedGroup_1__6 : rule__VolumeConnector_long__UnorderedGroup_1__Impl ;
    public final void rule__VolumeConnector_long__UnorderedGroup_1__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:9902:1: ( rule__VolumeConnector_long__UnorderedGroup_1__Impl )
            // InternalDockerCompose.g:9903:2: rule__VolumeConnector_long__UnorderedGroup_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VolumeConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__UnorderedGroup_1__6"


    // $ANTLR start "rule__ConfigConnector_long__UnorderedGroup_1"
    // InternalDockerCompose.g:9910:1: rule__ConfigConnector_long__UnorderedGroup_1 : rule__ConfigConnector_long__UnorderedGroup_1__0 {...}?;
    public final void rule__ConfigConnector_long__UnorderedGroup_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1());
        	
        try {
            // InternalDockerCompose.g:9915:1: ( rule__ConfigConnector_long__UnorderedGroup_1__0 {...}?)
            // InternalDockerCompose.g:9916:2: rule__ConfigConnector_long__UnorderedGroup_1__0 {...}?
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__UnorderedGroup_1__0();

            state._fsp--;

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "rule__ConfigConnector_long__UnorderedGroup_1", "getUnorderedGroupHelper().canLeave(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1())");
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__UnorderedGroup_1"


    // $ANTLR start "rule__ConfigConnector_long__UnorderedGroup_1__Impl"
    // InternalDockerCompose.g:9924:1: rule__ConfigConnector_long__UnorderedGroup_1__Impl : ( ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_4__0 ) ) ) ) ) ;
    public final void rule__ConfigConnector_long__UnorderedGroup_1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:9929:1: ( ( ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_4__0 ) ) ) ) ) )
            // InternalDockerCompose.g:9930:3: ( ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_4__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:9930:3: ( ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_4__0 ) ) ) ) )
            int alt79=5;
            int LA79_0 = input.LA(1);

            if ( LA79_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt79=1;
            }
            else if ( LA79_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt79=2;
            }
            else if ( LA79_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt79=3;
            }
            else if ( LA79_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt79=4;
            }
            else if ( LA79_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt79=5;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 79, 0, input);

                throw nvae;
            }
            switch (alt79) {
                case 1 :
                    // InternalDockerCompose.g:9931:3: ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9931:3: ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_0__0 ) ) ) )
                    // InternalDockerCompose.g:9932:4: {...}? => ( ( ( rule__ConfigConnector_long__Group_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                        throw new FailedPredicateException(input, "rule__ConfigConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 0)");
                    }
                    // InternalDockerCompose.g:9932:116: ( ( ( rule__ConfigConnector_long__Group_1_0__0 ) ) )
                    // InternalDockerCompose.g:9933:5: ( ( rule__ConfigConnector_long__Group_1_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9939:5: ( ( rule__ConfigConnector_long__Group_1_0__0 ) )
                    // InternalDockerCompose.g:9940:6: ( rule__ConfigConnector_long__Group_1_0__0 )
                    {
                     before(grammarAccess.getConfigConnector_longAccess().getGroup_1_0()); 
                    // InternalDockerCompose.g:9941:6: ( rule__ConfigConnector_long__Group_1_0__0 )
                    // InternalDockerCompose.g:9941:7: rule__ConfigConnector_long__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector_long__Group_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigConnector_longAccess().getGroup_1_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:9946:3: ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9946:3: ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_1__0 ) ) ) )
                    // InternalDockerCompose.g:9947:4: {...}? => ( ( ( rule__ConfigConnector_long__Group_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                        throw new FailedPredicateException(input, "rule__ConfigConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 1)");
                    }
                    // InternalDockerCompose.g:9947:116: ( ( ( rule__ConfigConnector_long__Group_1_1__0 ) ) )
                    // InternalDockerCompose.g:9948:5: ( ( rule__ConfigConnector_long__Group_1_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9954:5: ( ( rule__ConfigConnector_long__Group_1_1__0 ) )
                    // InternalDockerCompose.g:9955:6: ( rule__ConfigConnector_long__Group_1_1__0 )
                    {
                     before(grammarAccess.getConfigConnector_longAccess().getGroup_1_1()); 
                    // InternalDockerCompose.g:9956:6: ( rule__ConfigConnector_long__Group_1_1__0 )
                    // InternalDockerCompose.g:9956:7: rule__ConfigConnector_long__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector_long__Group_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigConnector_longAccess().getGroup_1_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:9961:3: ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9961:3: ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_2__0 ) ) ) )
                    // InternalDockerCompose.g:9962:4: {...}? => ( ( ( rule__ConfigConnector_long__Group_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                        throw new FailedPredicateException(input, "rule__ConfigConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 2)");
                    }
                    // InternalDockerCompose.g:9962:116: ( ( ( rule__ConfigConnector_long__Group_1_2__0 ) ) )
                    // InternalDockerCompose.g:9963:5: ( ( rule__ConfigConnector_long__Group_1_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9969:5: ( ( rule__ConfigConnector_long__Group_1_2__0 ) )
                    // InternalDockerCompose.g:9970:6: ( rule__ConfigConnector_long__Group_1_2__0 )
                    {
                     before(grammarAccess.getConfigConnector_longAccess().getGroup_1_2()); 
                    // InternalDockerCompose.g:9971:6: ( rule__ConfigConnector_long__Group_1_2__0 )
                    // InternalDockerCompose.g:9971:7: rule__ConfigConnector_long__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector_long__Group_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigConnector_longAccess().getGroup_1_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:9976:3: ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9976:3: ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_3__0 ) ) ) )
                    // InternalDockerCompose.g:9977:4: {...}? => ( ( ( rule__ConfigConnector_long__Group_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                        throw new FailedPredicateException(input, "rule__ConfigConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 3)");
                    }
                    // InternalDockerCompose.g:9977:116: ( ( ( rule__ConfigConnector_long__Group_1_3__0 ) ) )
                    // InternalDockerCompose.g:9978:5: ( ( rule__ConfigConnector_long__Group_1_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9984:5: ( ( rule__ConfigConnector_long__Group_1_3__0 ) )
                    // InternalDockerCompose.g:9985:6: ( rule__ConfigConnector_long__Group_1_3__0 )
                    {
                     before(grammarAccess.getConfigConnector_longAccess().getGroup_1_3()); 
                    // InternalDockerCompose.g:9986:6: ( rule__ConfigConnector_long__Group_1_3__0 )
                    // InternalDockerCompose.g:9986:7: rule__ConfigConnector_long__Group_1_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector_long__Group_1_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigConnector_longAccess().getGroup_1_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:9991:3: ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:9991:3: ({...}? => ( ( ( rule__ConfigConnector_long__Group_1_4__0 ) ) ) )
                    // InternalDockerCompose.g:9992:4: {...}? => ( ( ( rule__ConfigConnector_long__Group_1_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                        throw new FailedPredicateException(input, "rule__ConfigConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 4)");
                    }
                    // InternalDockerCompose.g:9992:116: ( ( ( rule__ConfigConnector_long__Group_1_4__0 ) ) )
                    // InternalDockerCompose.g:9993:5: ( ( rule__ConfigConnector_long__Group_1_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:9999:5: ( ( rule__ConfigConnector_long__Group_1_4__0 ) )
                    // InternalDockerCompose.g:10000:6: ( rule__ConfigConnector_long__Group_1_4__0 )
                    {
                     before(grammarAccess.getConfigConnector_longAccess().getGroup_1_4()); 
                    // InternalDockerCompose.g:10001:6: ( rule__ConfigConnector_long__Group_1_4__0 )
                    // InternalDockerCompose.g:10001:7: rule__ConfigConnector_long__Group_1_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector_long__Group_1_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigConnector_longAccess().getGroup_1_4()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__UnorderedGroup_1__Impl"


    // $ANTLR start "rule__ConfigConnector_long__UnorderedGroup_1__0"
    // InternalDockerCompose.g:10014:1: rule__ConfigConnector_long__UnorderedGroup_1__0 : rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__1 )? ;
    public final void rule__ConfigConnector_long__UnorderedGroup_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10018:1: ( rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__1 )? )
            // InternalDockerCompose.g:10019:2: rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__1 )?
            {
            pushFollow(FOLLOW_44);
            rule__ConfigConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10020:2: ( rule__ConfigConnector_long__UnorderedGroup_1__1 )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( LA80_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt80=1;
            }
            else if ( LA80_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt80=1;
            }
            else if ( LA80_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt80=1;
            }
            else if ( LA80_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt80=1;
            }
            else if ( LA80_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalDockerCompose.g:10020:2: rule__ConfigConnector_long__UnorderedGroup_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector_long__UnorderedGroup_1__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__UnorderedGroup_1__0"


    // $ANTLR start "rule__ConfigConnector_long__UnorderedGroup_1__1"
    // InternalDockerCompose.g:10026:1: rule__ConfigConnector_long__UnorderedGroup_1__1 : rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__2 )? ;
    public final void rule__ConfigConnector_long__UnorderedGroup_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10030:1: ( rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__2 )? )
            // InternalDockerCompose.g:10031:2: rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__2 )?
            {
            pushFollow(FOLLOW_44);
            rule__ConfigConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10032:2: ( rule__ConfigConnector_long__UnorderedGroup_1__2 )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( LA81_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt81=1;
            }
            else if ( LA81_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt81=1;
            }
            else if ( LA81_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt81=1;
            }
            else if ( LA81_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt81=1;
            }
            else if ( LA81_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalDockerCompose.g:10032:2: rule__ConfigConnector_long__UnorderedGroup_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector_long__UnorderedGroup_1__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__UnorderedGroup_1__1"


    // $ANTLR start "rule__ConfigConnector_long__UnorderedGroup_1__2"
    // InternalDockerCompose.g:10038:1: rule__ConfigConnector_long__UnorderedGroup_1__2 : rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__3 )? ;
    public final void rule__ConfigConnector_long__UnorderedGroup_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10042:1: ( rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__3 )? )
            // InternalDockerCompose.g:10043:2: rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__3 )?
            {
            pushFollow(FOLLOW_44);
            rule__ConfigConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10044:2: ( rule__ConfigConnector_long__UnorderedGroup_1__3 )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( LA82_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt82=1;
            }
            else if ( LA82_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt82=1;
            }
            else if ( LA82_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt82=1;
            }
            else if ( LA82_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt82=1;
            }
            else if ( LA82_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalDockerCompose.g:10044:2: rule__ConfigConnector_long__UnorderedGroup_1__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector_long__UnorderedGroup_1__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__UnorderedGroup_1__2"


    // $ANTLR start "rule__ConfigConnector_long__UnorderedGroup_1__3"
    // InternalDockerCompose.g:10050:1: rule__ConfigConnector_long__UnorderedGroup_1__3 : rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__4 )? ;
    public final void rule__ConfigConnector_long__UnorderedGroup_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10054:1: ( rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__4 )? )
            // InternalDockerCompose.g:10055:2: rule__ConfigConnector_long__UnorderedGroup_1__Impl ( rule__ConfigConnector_long__UnorderedGroup_1__4 )?
            {
            pushFollow(FOLLOW_44);
            rule__ConfigConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10056:2: ( rule__ConfigConnector_long__UnorderedGroup_1__4 )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( LA83_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt83=1;
            }
            else if ( LA83_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt83=1;
            }
            else if ( LA83_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt83=1;
            }
            else if ( LA83_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt83=1;
            }
            else if ( LA83_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalDockerCompose.g:10056:2: rule__ConfigConnector_long__UnorderedGroup_1__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConfigConnector_long__UnorderedGroup_1__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__UnorderedGroup_1__3"


    // $ANTLR start "rule__ConfigConnector_long__UnorderedGroup_1__4"
    // InternalDockerCompose.g:10062:1: rule__ConfigConnector_long__UnorderedGroup_1__4 : rule__ConfigConnector_long__UnorderedGroup_1__Impl ;
    public final void rule__ConfigConnector_long__UnorderedGroup_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10066:1: ( rule__ConfigConnector_long__UnorderedGroup_1__Impl )
            // InternalDockerCompose.g:10067:2: rule__ConfigConnector_long__UnorderedGroup_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConfigConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__UnorderedGroup_1__4"


    // $ANTLR start "rule__SecretConnector_long__UnorderedGroup_1"
    // InternalDockerCompose.g:10074:1: rule__SecretConnector_long__UnorderedGroup_1 : rule__SecretConnector_long__UnorderedGroup_1__0 {...}?;
    public final void rule__SecretConnector_long__UnorderedGroup_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1());
        	
        try {
            // InternalDockerCompose.g:10079:1: ( rule__SecretConnector_long__UnorderedGroup_1__0 {...}?)
            // InternalDockerCompose.g:10080:2: rule__SecretConnector_long__UnorderedGroup_1__0 {...}?
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__UnorderedGroup_1__0();

            state._fsp--;

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "rule__SecretConnector_long__UnorderedGroup_1", "getUnorderedGroupHelper().canLeave(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1())");
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__UnorderedGroup_1"


    // $ANTLR start "rule__SecretConnector_long__UnorderedGroup_1__Impl"
    // InternalDockerCompose.g:10088:1: rule__SecretConnector_long__UnorderedGroup_1__Impl : ( ({...}? => ( ( ( rule__SecretConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_4__0 ) ) ) ) ) ;
    public final void rule__SecretConnector_long__UnorderedGroup_1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:10093:1: ( ( ({...}? => ( ( ( rule__SecretConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_4__0 ) ) ) ) ) )
            // InternalDockerCompose.g:10094:3: ( ({...}? => ( ( ( rule__SecretConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_4__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:10094:3: ( ({...}? => ( ( ( rule__SecretConnector_long__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__SecretConnector_long__Group_1_4__0 ) ) ) ) )
            int alt84=5;
            int LA84_0 = input.LA(1);

            if ( LA84_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt84=1;
            }
            else if ( LA84_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt84=2;
            }
            else if ( LA84_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt84=3;
            }
            else if ( LA84_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt84=4;
            }
            else if ( LA84_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt84=5;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 84, 0, input);

                throw nvae;
            }
            switch (alt84) {
                case 1 :
                    // InternalDockerCompose.g:10095:3: ({...}? => ( ( ( rule__SecretConnector_long__Group_1_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10095:3: ({...}? => ( ( ( rule__SecretConnector_long__Group_1_0__0 ) ) ) )
                    // InternalDockerCompose.g:10096:4: {...}? => ( ( ( rule__SecretConnector_long__Group_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                        throw new FailedPredicateException(input, "rule__SecretConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 0)");
                    }
                    // InternalDockerCompose.g:10096:116: ( ( ( rule__SecretConnector_long__Group_1_0__0 ) ) )
                    // InternalDockerCompose.g:10097:5: ( ( rule__SecretConnector_long__Group_1_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10103:5: ( ( rule__SecretConnector_long__Group_1_0__0 ) )
                    // InternalDockerCompose.g:10104:6: ( rule__SecretConnector_long__Group_1_0__0 )
                    {
                     before(grammarAccess.getSecretConnector_longAccess().getGroup_1_0()); 
                    // InternalDockerCompose.g:10105:6: ( rule__SecretConnector_long__Group_1_0__0 )
                    // InternalDockerCompose.g:10105:7: rule__SecretConnector_long__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector_long__Group_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretConnector_longAccess().getGroup_1_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:10110:3: ({...}? => ( ( ( rule__SecretConnector_long__Group_1_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10110:3: ({...}? => ( ( ( rule__SecretConnector_long__Group_1_1__0 ) ) ) )
                    // InternalDockerCompose.g:10111:4: {...}? => ( ( ( rule__SecretConnector_long__Group_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                        throw new FailedPredicateException(input, "rule__SecretConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 1)");
                    }
                    // InternalDockerCompose.g:10111:116: ( ( ( rule__SecretConnector_long__Group_1_1__0 ) ) )
                    // InternalDockerCompose.g:10112:5: ( ( rule__SecretConnector_long__Group_1_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10118:5: ( ( rule__SecretConnector_long__Group_1_1__0 ) )
                    // InternalDockerCompose.g:10119:6: ( rule__SecretConnector_long__Group_1_1__0 )
                    {
                     before(grammarAccess.getSecretConnector_longAccess().getGroup_1_1()); 
                    // InternalDockerCompose.g:10120:6: ( rule__SecretConnector_long__Group_1_1__0 )
                    // InternalDockerCompose.g:10120:7: rule__SecretConnector_long__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector_long__Group_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretConnector_longAccess().getGroup_1_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:10125:3: ({...}? => ( ( ( rule__SecretConnector_long__Group_1_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10125:3: ({...}? => ( ( ( rule__SecretConnector_long__Group_1_2__0 ) ) ) )
                    // InternalDockerCompose.g:10126:4: {...}? => ( ( ( rule__SecretConnector_long__Group_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                        throw new FailedPredicateException(input, "rule__SecretConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 2)");
                    }
                    // InternalDockerCompose.g:10126:116: ( ( ( rule__SecretConnector_long__Group_1_2__0 ) ) )
                    // InternalDockerCompose.g:10127:5: ( ( rule__SecretConnector_long__Group_1_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10133:5: ( ( rule__SecretConnector_long__Group_1_2__0 ) )
                    // InternalDockerCompose.g:10134:6: ( rule__SecretConnector_long__Group_1_2__0 )
                    {
                     before(grammarAccess.getSecretConnector_longAccess().getGroup_1_2()); 
                    // InternalDockerCompose.g:10135:6: ( rule__SecretConnector_long__Group_1_2__0 )
                    // InternalDockerCompose.g:10135:7: rule__SecretConnector_long__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector_long__Group_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretConnector_longAccess().getGroup_1_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:10140:3: ({...}? => ( ( ( rule__SecretConnector_long__Group_1_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10140:3: ({...}? => ( ( ( rule__SecretConnector_long__Group_1_3__0 ) ) ) )
                    // InternalDockerCompose.g:10141:4: {...}? => ( ( ( rule__SecretConnector_long__Group_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                        throw new FailedPredicateException(input, "rule__SecretConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 3)");
                    }
                    // InternalDockerCompose.g:10141:116: ( ( ( rule__SecretConnector_long__Group_1_3__0 ) ) )
                    // InternalDockerCompose.g:10142:5: ( ( rule__SecretConnector_long__Group_1_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10148:5: ( ( rule__SecretConnector_long__Group_1_3__0 ) )
                    // InternalDockerCompose.g:10149:6: ( rule__SecretConnector_long__Group_1_3__0 )
                    {
                     before(grammarAccess.getSecretConnector_longAccess().getGroup_1_3()); 
                    // InternalDockerCompose.g:10150:6: ( rule__SecretConnector_long__Group_1_3__0 )
                    // InternalDockerCompose.g:10150:7: rule__SecretConnector_long__Group_1_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector_long__Group_1_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretConnector_longAccess().getGroup_1_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:10155:3: ({...}? => ( ( ( rule__SecretConnector_long__Group_1_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10155:3: ({...}? => ( ( ( rule__SecretConnector_long__Group_1_4__0 ) ) ) )
                    // InternalDockerCompose.g:10156:4: {...}? => ( ( ( rule__SecretConnector_long__Group_1_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                        throw new FailedPredicateException(input, "rule__SecretConnector_long__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 4)");
                    }
                    // InternalDockerCompose.g:10156:116: ( ( ( rule__SecretConnector_long__Group_1_4__0 ) ) )
                    // InternalDockerCompose.g:10157:5: ( ( rule__SecretConnector_long__Group_1_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10163:5: ( ( rule__SecretConnector_long__Group_1_4__0 ) )
                    // InternalDockerCompose.g:10164:6: ( rule__SecretConnector_long__Group_1_4__0 )
                    {
                     before(grammarAccess.getSecretConnector_longAccess().getGroup_1_4()); 
                    // InternalDockerCompose.g:10165:6: ( rule__SecretConnector_long__Group_1_4__0 )
                    // InternalDockerCompose.g:10165:7: rule__SecretConnector_long__Group_1_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector_long__Group_1_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretConnector_longAccess().getGroup_1_4()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__UnorderedGroup_1__Impl"


    // $ANTLR start "rule__SecretConnector_long__UnorderedGroup_1__0"
    // InternalDockerCompose.g:10178:1: rule__SecretConnector_long__UnorderedGroup_1__0 : rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__1 )? ;
    public final void rule__SecretConnector_long__UnorderedGroup_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10182:1: ( rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__1 )? )
            // InternalDockerCompose.g:10183:2: rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__1 )?
            {
            pushFollow(FOLLOW_44);
            rule__SecretConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10184:2: ( rule__SecretConnector_long__UnorderedGroup_1__1 )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( LA85_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt85=1;
            }
            else if ( LA85_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt85=1;
            }
            else if ( LA85_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt85=1;
            }
            else if ( LA85_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt85=1;
            }
            else if ( LA85_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalDockerCompose.g:10184:2: rule__SecretConnector_long__UnorderedGroup_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector_long__UnorderedGroup_1__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__UnorderedGroup_1__0"


    // $ANTLR start "rule__SecretConnector_long__UnorderedGroup_1__1"
    // InternalDockerCompose.g:10190:1: rule__SecretConnector_long__UnorderedGroup_1__1 : rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__2 )? ;
    public final void rule__SecretConnector_long__UnorderedGroup_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10194:1: ( rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__2 )? )
            // InternalDockerCompose.g:10195:2: rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__2 )?
            {
            pushFollow(FOLLOW_44);
            rule__SecretConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10196:2: ( rule__SecretConnector_long__UnorderedGroup_1__2 )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( LA86_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt86=1;
            }
            else if ( LA86_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt86=1;
            }
            else if ( LA86_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt86=1;
            }
            else if ( LA86_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt86=1;
            }
            else if ( LA86_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // InternalDockerCompose.g:10196:2: rule__SecretConnector_long__UnorderedGroup_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector_long__UnorderedGroup_1__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__UnorderedGroup_1__1"


    // $ANTLR start "rule__SecretConnector_long__UnorderedGroup_1__2"
    // InternalDockerCompose.g:10202:1: rule__SecretConnector_long__UnorderedGroup_1__2 : rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__3 )? ;
    public final void rule__SecretConnector_long__UnorderedGroup_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10206:1: ( rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__3 )? )
            // InternalDockerCompose.g:10207:2: rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__3 )?
            {
            pushFollow(FOLLOW_44);
            rule__SecretConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10208:2: ( rule__SecretConnector_long__UnorderedGroup_1__3 )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( LA87_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt87=1;
            }
            else if ( LA87_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt87=1;
            }
            else if ( LA87_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt87=1;
            }
            else if ( LA87_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt87=1;
            }
            else if ( LA87_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalDockerCompose.g:10208:2: rule__SecretConnector_long__UnorderedGroup_1__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector_long__UnorderedGroup_1__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__UnorderedGroup_1__2"


    // $ANTLR start "rule__SecretConnector_long__UnorderedGroup_1__3"
    // InternalDockerCompose.g:10214:1: rule__SecretConnector_long__UnorderedGroup_1__3 : rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__4 )? ;
    public final void rule__SecretConnector_long__UnorderedGroup_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10218:1: ( rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__4 )? )
            // InternalDockerCompose.g:10219:2: rule__SecretConnector_long__UnorderedGroup_1__Impl ( rule__SecretConnector_long__UnorderedGroup_1__4 )?
            {
            pushFollow(FOLLOW_44);
            rule__SecretConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10220:2: ( rule__SecretConnector_long__UnorderedGroup_1__4 )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( LA88_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 0) ) {
                alt88=1;
            }
            else if ( LA88_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 1) ) {
                alt88=1;
            }
            else if ( LA88_0 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 2) ) {
                alt88=1;
            }
            else if ( LA88_0 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 3) ) {
                alt88=1;
            }
            else if ( LA88_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretConnector_longAccess().getUnorderedGroup_1(), 4) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // InternalDockerCompose.g:10220:2: rule__SecretConnector_long__UnorderedGroup_1__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__SecretConnector_long__UnorderedGroup_1__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__UnorderedGroup_1__3"


    // $ANTLR start "rule__SecretConnector_long__UnorderedGroup_1__4"
    // InternalDockerCompose.g:10226:1: rule__SecretConnector_long__UnorderedGroup_1__4 : rule__SecretConnector_long__UnorderedGroup_1__Impl ;
    public final void rule__SecretConnector_long__UnorderedGroup_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10230:1: ( rule__SecretConnector_long__UnorderedGroup_1__Impl )
            // InternalDockerCompose.g:10231:2: rule__SecretConnector_long__UnorderedGroup_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SecretConnector_long__UnorderedGroup_1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__UnorderedGroup_1__4"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1"
    // InternalDockerCompose.g:10238:1: rule__Network__UnorderedGroup_3_1 : ( rule__Network__UnorderedGroup_3_1__0 )? ;
    public final void rule__Network__UnorderedGroup_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1());
        	
        try {
            // InternalDockerCompose.g:10243:1: ( ( rule__Network__UnorderedGroup_3_1__0 )? )
            // InternalDockerCompose.g:10244:2: ( rule__Network__UnorderedGroup_3_1__0 )?
            {
            // InternalDockerCompose.g:10244:2: ( rule__Network__UnorderedGroup_3_1__0 )?
            int alt89=2;
            alt89 = dfa89.predict(input);
            switch (alt89) {
                case 1 :
                    // InternalDockerCompose.g:10244:2: rule__Network__UnorderedGroup_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__Impl"
    // InternalDockerCompose.g:10252:1: rule__Network__UnorderedGroup_3_1__Impl : ( ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) ) ) ;
    public final void rule__Network__UnorderedGroup_3_1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:10257:1: ( ( ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) ) ) )
            // InternalDockerCompose.g:10258:3: ( ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:10258:3: ( ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) ) )
            int alt90=9;
            alt90 = dfa90.predict(input);
            switch (alt90) {
                case 1 :
                    // InternalDockerCompose.g:10259:3: ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10259:3: ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) )
                    // InternalDockerCompose.g:10260:4: {...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0)");
                    }
                    // InternalDockerCompose.g:10260:105: ( ( ( rule__Network__Group_3_1_0__0 ) ) )
                    // InternalDockerCompose.g:10261:5: ( ( rule__Network__Group_3_1_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10267:5: ( ( rule__Network__Group_3_1_0__0 ) )
                    // InternalDockerCompose.g:10268:6: ( rule__Network__Group_3_1_0__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_0()); 
                    // InternalDockerCompose.g:10269:6: ( rule__Network__Group_3_1_0__0 )
                    // InternalDockerCompose.g:10269:7: rule__Network__Group_3_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:10274:3: ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10274:3: ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) )
                    // InternalDockerCompose.g:10275:4: {...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1)");
                    }
                    // InternalDockerCompose.g:10275:105: ( ( ( rule__Network__Group_3_1_1__0 ) ) )
                    // InternalDockerCompose.g:10276:5: ( ( rule__Network__Group_3_1_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10282:5: ( ( rule__Network__Group_3_1_1__0 ) )
                    // InternalDockerCompose.g:10283:6: ( rule__Network__Group_3_1_1__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_1()); 
                    // InternalDockerCompose.g:10284:6: ( rule__Network__Group_3_1_1__0 )
                    // InternalDockerCompose.g:10284:7: rule__Network__Group_3_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:10289:3: ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10289:3: ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) )
                    // InternalDockerCompose.g:10290:4: {...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2)");
                    }
                    // InternalDockerCompose.g:10290:105: ( ( ( rule__Network__Group_3_1_2__0 ) ) )
                    // InternalDockerCompose.g:10291:5: ( ( rule__Network__Group_3_1_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10297:5: ( ( rule__Network__Group_3_1_2__0 ) )
                    // InternalDockerCompose.g:10298:6: ( rule__Network__Group_3_1_2__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_2()); 
                    // InternalDockerCompose.g:10299:6: ( rule__Network__Group_3_1_2__0 )
                    // InternalDockerCompose.g:10299:7: rule__Network__Group_3_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:10304:3: ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10304:3: ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) )
                    // InternalDockerCompose.g:10305:4: {...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3)");
                    }
                    // InternalDockerCompose.g:10305:105: ( ( ( rule__Network__Group_3_1_3__0 ) ) )
                    // InternalDockerCompose.g:10306:5: ( ( rule__Network__Group_3_1_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10312:5: ( ( rule__Network__Group_3_1_3__0 ) )
                    // InternalDockerCompose.g:10313:6: ( rule__Network__Group_3_1_3__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_3()); 
                    // InternalDockerCompose.g:10314:6: ( rule__Network__Group_3_1_3__0 )
                    // InternalDockerCompose.g:10314:7: rule__Network__Group_3_1_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:10319:3: ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10319:3: ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) )
                    // InternalDockerCompose.g:10320:4: {...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4)");
                    }
                    // InternalDockerCompose.g:10320:105: ( ( ( rule__Network__Group_3_1_4__0 ) ) )
                    // InternalDockerCompose.g:10321:5: ( ( rule__Network__Group_3_1_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10327:5: ( ( rule__Network__Group_3_1_4__0 ) )
                    // InternalDockerCompose.g:10328:6: ( rule__Network__Group_3_1_4__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_4()); 
                    // InternalDockerCompose.g:10329:6: ( rule__Network__Group_3_1_4__0 )
                    // InternalDockerCompose.g:10329:7: rule__Network__Group_3_1_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_4()); 

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDockerCompose.g:10334:3: ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10334:3: ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) )
                    // InternalDockerCompose.g:10335:4: {...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5)");
                    }
                    // InternalDockerCompose.g:10335:105: ( ( ( rule__Network__Group_3_1_5__0 ) ) )
                    // InternalDockerCompose.g:10336:5: ( ( rule__Network__Group_3_1_5__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10342:5: ( ( rule__Network__Group_3_1_5__0 ) )
                    // InternalDockerCompose.g:10343:6: ( rule__Network__Group_3_1_5__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_5()); 
                    // InternalDockerCompose.g:10344:6: ( rule__Network__Group_3_1_5__0 )
                    // InternalDockerCompose.g:10344:7: rule__Network__Group_3_1_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_5__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_5()); 

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalDockerCompose.g:10349:3: ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10349:3: ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) )
                    // InternalDockerCompose.g:10350:4: {...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6)");
                    }
                    // InternalDockerCompose.g:10350:105: ( ( ( rule__Network__Group_3_1_6__0 ) ) )
                    // InternalDockerCompose.g:10351:5: ( ( rule__Network__Group_3_1_6__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10357:5: ( ( rule__Network__Group_3_1_6__0 ) )
                    // InternalDockerCompose.g:10358:6: ( rule__Network__Group_3_1_6__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_6()); 
                    // InternalDockerCompose.g:10359:6: ( rule__Network__Group_3_1_6__0 )
                    // InternalDockerCompose.g:10359:7: rule__Network__Group_3_1_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_6__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_6()); 

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalDockerCompose.g:10364:3: ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10364:3: ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) )
                    // InternalDockerCompose.g:10365:4: {...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7)");
                    }
                    // InternalDockerCompose.g:10365:105: ( ( ( rule__Network__Group_3_1_7__0 ) ) )
                    // InternalDockerCompose.g:10366:5: ( ( rule__Network__Group_3_1_7__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10372:5: ( ( rule__Network__Group_3_1_7__0 ) )
                    // InternalDockerCompose.g:10373:6: ( rule__Network__Group_3_1_7__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_7()); 
                    // InternalDockerCompose.g:10374:6: ( rule__Network__Group_3_1_7__0 )
                    // InternalDockerCompose.g:10374:7: rule__Network__Group_3_1_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_7__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_7()); 

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalDockerCompose.g:10379:3: ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10379:3: ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) )
                    // InternalDockerCompose.g:10380:4: {...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {
                        throw new FailedPredicateException(input, "rule__Network__UnorderedGroup_3_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8)");
                    }
                    // InternalDockerCompose.g:10380:105: ( ( ( rule__Network__Group_3_1_8__0 ) ) )
                    // InternalDockerCompose.g:10381:5: ( ( rule__Network__Group_3_1_8__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10387:5: ( ( rule__Network__Group_3_1_8__0 ) )
                    // InternalDockerCompose.g:10388:6: ( rule__Network__Group_3_1_8__0 )
                    {
                     before(grammarAccess.getNetworkAccess().getGroup_3_1_8()); 
                    // InternalDockerCompose.g:10389:6: ( rule__Network__Group_3_1_8__0 )
                    // InternalDockerCompose.g:10389:7: rule__Network__Group_3_1_8__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__Group_3_1_8__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNetworkAccess().getGroup_3_1_8()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__Impl"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__0"
    // InternalDockerCompose.g:10402:1: rule__Network__UnorderedGroup_3_1__0 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__1 )? ;
    public final void rule__Network__UnorderedGroup_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10406:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__1 )? )
            // InternalDockerCompose.g:10407:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__1 )?
            {
            pushFollow(FOLLOW_45);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10408:2: ( rule__Network__UnorderedGroup_3_1__1 )?
            int alt91=2;
            alt91 = dfa91.predict(input);
            switch (alt91) {
                case 1 :
                    // InternalDockerCompose.g:10408:2: rule__Network__UnorderedGroup_3_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__0"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__1"
    // InternalDockerCompose.g:10414:1: rule__Network__UnorderedGroup_3_1__1 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__2 )? ;
    public final void rule__Network__UnorderedGroup_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10418:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__2 )? )
            // InternalDockerCompose.g:10419:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__2 )?
            {
            pushFollow(FOLLOW_45);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10420:2: ( rule__Network__UnorderedGroup_3_1__2 )?
            int alt92=2;
            alt92 = dfa92.predict(input);
            switch (alt92) {
                case 1 :
                    // InternalDockerCompose.g:10420:2: rule__Network__UnorderedGroup_3_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__1"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__2"
    // InternalDockerCompose.g:10426:1: rule__Network__UnorderedGroup_3_1__2 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__3 )? ;
    public final void rule__Network__UnorderedGroup_3_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10430:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__3 )? )
            // InternalDockerCompose.g:10431:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__3 )?
            {
            pushFollow(FOLLOW_45);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10432:2: ( rule__Network__UnorderedGroup_3_1__3 )?
            int alt93=2;
            alt93 = dfa93.predict(input);
            switch (alt93) {
                case 1 :
                    // InternalDockerCompose.g:10432:2: rule__Network__UnorderedGroup_3_1__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__2"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__3"
    // InternalDockerCompose.g:10438:1: rule__Network__UnorderedGroup_3_1__3 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__4 )? ;
    public final void rule__Network__UnorderedGroup_3_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10442:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__4 )? )
            // InternalDockerCompose.g:10443:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__4 )?
            {
            pushFollow(FOLLOW_45);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10444:2: ( rule__Network__UnorderedGroup_3_1__4 )?
            int alt94=2;
            alt94 = dfa94.predict(input);
            switch (alt94) {
                case 1 :
                    // InternalDockerCompose.g:10444:2: rule__Network__UnorderedGroup_3_1__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__3"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__4"
    // InternalDockerCompose.g:10450:1: rule__Network__UnorderedGroup_3_1__4 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__5 )? ;
    public final void rule__Network__UnorderedGroup_3_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10454:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__5 )? )
            // InternalDockerCompose.g:10455:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__5 )?
            {
            pushFollow(FOLLOW_45);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10456:2: ( rule__Network__UnorderedGroup_3_1__5 )?
            int alt95=2;
            alt95 = dfa95.predict(input);
            switch (alt95) {
                case 1 :
                    // InternalDockerCompose.g:10456:2: rule__Network__UnorderedGroup_3_1__5
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__5();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__4"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__5"
    // InternalDockerCompose.g:10462:1: rule__Network__UnorderedGroup_3_1__5 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__6 )? ;
    public final void rule__Network__UnorderedGroup_3_1__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10466:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__6 )? )
            // InternalDockerCompose.g:10467:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__6 )?
            {
            pushFollow(FOLLOW_45);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10468:2: ( rule__Network__UnorderedGroup_3_1__6 )?
            int alt96=2;
            alt96 = dfa96.predict(input);
            switch (alt96) {
                case 1 :
                    // InternalDockerCompose.g:10468:2: rule__Network__UnorderedGroup_3_1__6
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__6();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__5"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__6"
    // InternalDockerCompose.g:10474:1: rule__Network__UnorderedGroup_3_1__6 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__7 )? ;
    public final void rule__Network__UnorderedGroup_3_1__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10478:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__7 )? )
            // InternalDockerCompose.g:10479:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__7 )?
            {
            pushFollow(FOLLOW_45);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10480:2: ( rule__Network__UnorderedGroup_3_1__7 )?
            int alt97=2;
            alt97 = dfa97.predict(input);
            switch (alt97) {
                case 1 :
                    // InternalDockerCompose.g:10480:2: rule__Network__UnorderedGroup_3_1__7
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__7();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__6"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__7"
    // InternalDockerCompose.g:10486:1: rule__Network__UnorderedGroup_3_1__7 : rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__8 )? ;
    public final void rule__Network__UnorderedGroup_3_1__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10490:1: ( rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__8 )? )
            // InternalDockerCompose.g:10491:2: rule__Network__UnorderedGroup_3_1__Impl ( rule__Network__UnorderedGroup_3_1__8 )?
            {
            pushFollow(FOLLOW_45);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10492:2: ( rule__Network__UnorderedGroup_3_1__8 )?
            int alt98=2;
            alt98 = dfa98.predict(input);
            switch (alt98) {
                case 1 :
                    // InternalDockerCompose.g:10492:2: rule__Network__UnorderedGroup_3_1__8
                    {
                    pushFollow(FOLLOW_2);
                    rule__Network__UnorderedGroup_3_1__8();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__7"


    // $ANTLR start "rule__Network__UnorderedGroup_3_1__8"
    // InternalDockerCompose.g:10498:1: rule__Network__UnorderedGroup_3_1__8 : rule__Network__UnorderedGroup_3_1__Impl ;
    public final void rule__Network__UnorderedGroup_3_1__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10502:1: ( rule__Network__UnorderedGroup_3_1__Impl )
            // InternalDockerCompose.g:10503:2: rule__Network__UnorderedGroup_3_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Network__UnorderedGroup_3_1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__UnorderedGroup_3_1__8"


    // $ANTLR start "rule__Volume__UnorderedGroup_3"
    // InternalDockerCompose.g:10510:1: rule__Volume__UnorderedGroup_3 : ( rule__Volume__UnorderedGroup_3__0 )? ;
    public final void rule__Volume__UnorderedGroup_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getVolumeAccess().getUnorderedGroup_3());
        	
        try {
            // InternalDockerCompose.g:10515:1: ( ( rule__Volume__UnorderedGroup_3__0 )? )
            // InternalDockerCompose.g:10516:2: ( rule__Volume__UnorderedGroup_3__0 )?
            {
            // InternalDockerCompose.g:10516:2: ( rule__Volume__UnorderedGroup_3__0 )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( LA99_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                alt99=1;
            }
            else if ( LA99_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                alt99=1;
            }
            else if ( LA99_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                alt99=1;
            }
            else if ( LA99_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                alt99=1;
            }
            else if ( LA99_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                alt99=1;
            }
            switch (alt99) {
                case 1 :
                    // InternalDockerCompose.g:10516:2: rule__Volume__UnorderedGroup_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__UnorderedGroup_3__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getVolumeAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3"


    // $ANTLR start "rule__Volume__UnorderedGroup_3__Impl"
    // InternalDockerCompose.g:10524:1: rule__Volume__UnorderedGroup_3__Impl : ( ({...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) ) ) ) ;
    public final void rule__Volume__UnorderedGroup_3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:10529:1: ( ( ({...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) ) ) ) )
            // InternalDockerCompose.g:10530:3: ( ({...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:10530:3: ( ({...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) ) ) )
            int alt100=5;
            int LA100_0 = input.LA(1);

            if ( LA100_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                alt100=1;
            }
            else if ( LA100_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                alt100=2;
            }
            else if ( LA100_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                alt100=3;
            }
            else if ( LA100_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                alt100=4;
            }
            else if ( LA100_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                alt100=5;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 100, 0, input);

                throw nvae;
            }
            switch (alt100) {
                case 1 :
                    // InternalDockerCompose.g:10531:3: ({...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10531:3: ({...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) ) )
                    // InternalDockerCompose.g:10532:4: {...}? => ( ( ( rule__Volume__Group_3_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                        throw new FailedPredicateException(input, "rule__Volume__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0)");
                    }
                    // InternalDockerCompose.g:10532:102: ( ( ( rule__Volume__Group_3_0__0 ) ) )
                    // InternalDockerCompose.g:10533:5: ( ( rule__Volume__Group_3_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10539:5: ( ( rule__Volume__Group_3_0__0 ) )
                    // InternalDockerCompose.g:10540:6: ( rule__Volume__Group_3_0__0 )
                    {
                     before(grammarAccess.getVolumeAccess().getGroup_3_0()); 
                    // InternalDockerCompose.g:10541:6: ( rule__Volume__Group_3_0__0 )
                    // InternalDockerCompose.g:10541:7: rule__Volume__Group_3_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__Group_3_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeAccess().getGroup_3_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:10546:3: ({...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10546:3: ({...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) ) )
                    // InternalDockerCompose.g:10547:4: {...}? => ( ( ( rule__Volume__Group_3_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                        throw new FailedPredicateException(input, "rule__Volume__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1)");
                    }
                    // InternalDockerCompose.g:10547:102: ( ( ( rule__Volume__Group_3_1__0 ) ) )
                    // InternalDockerCompose.g:10548:5: ( ( rule__Volume__Group_3_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10554:5: ( ( rule__Volume__Group_3_1__0 ) )
                    // InternalDockerCompose.g:10555:6: ( rule__Volume__Group_3_1__0 )
                    {
                     before(grammarAccess.getVolumeAccess().getGroup_3_1()); 
                    // InternalDockerCompose.g:10556:6: ( rule__Volume__Group_3_1__0 )
                    // InternalDockerCompose.g:10556:7: rule__Volume__Group_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__Group_3_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeAccess().getGroup_3_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:10561:3: ({...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10561:3: ({...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) ) )
                    // InternalDockerCompose.g:10562:4: {...}? => ( ( ( rule__Volume__Group_3_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                        throw new FailedPredicateException(input, "rule__Volume__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2)");
                    }
                    // InternalDockerCompose.g:10562:102: ( ( ( rule__Volume__Group_3_2__0 ) ) )
                    // InternalDockerCompose.g:10563:5: ( ( rule__Volume__Group_3_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10569:5: ( ( rule__Volume__Group_3_2__0 ) )
                    // InternalDockerCompose.g:10570:6: ( rule__Volume__Group_3_2__0 )
                    {
                     before(grammarAccess.getVolumeAccess().getGroup_3_2()); 
                    // InternalDockerCompose.g:10571:6: ( rule__Volume__Group_3_2__0 )
                    // InternalDockerCompose.g:10571:7: rule__Volume__Group_3_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__Group_3_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeAccess().getGroup_3_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:10576:3: ({...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10576:3: ({...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) ) )
                    // InternalDockerCompose.g:10577:4: {...}? => ( ( ( rule__Volume__Group_3_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                        throw new FailedPredicateException(input, "rule__Volume__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3)");
                    }
                    // InternalDockerCompose.g:10577:102: ( ( ( rule__Volume__Group_3_3__0 ) ) )
                    // InternalDockerCompose.g:10578:5: ( ( rule__Volume__Group_3_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10584:5: ( ( rule__Volume__Group_3_3__0 ) )
                    // InternalDockerCompose.g:10585:6: ( rule__Volume__Group_3_3__0 )
                    {
                     before(grammarAccess.getVolumeAccess().getGroup_3_3()); 
                    // InternalDockerCompose.g:10586:6: ( rule__Volume__Group_3_3__0 )
                    // InternalDockerCompose.g:10586:7: rule__Volume__Group_3_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__Group_3_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeAccess().getGroup_3_3()); 

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDockerCompose.g:10591:3: ({...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10591:3: ({...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) ) )
                    // InternalDockerCompose.g:10592:4: {...}? => ( ( ( rule__Volume__Group_3_4__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                        throw new FailedPredicateException(input, "rule__Volume__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4)");
                    }
                    // InternalDockerCompose.g:10592:102: ( ( ( rule__Volume__Group_3_4__0 ) ) )
                    // InternalDockerCompose.g:10593:5: ( ( rule__Volume__Group_3_4__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10599:5: ( ( rule__Volume__Group_3_4__0 ) )
                    // InternalDockerCompose.g:10600:6: ( rule__Volume__Group_3_4__0 )
                    {
                     before(grammarAccess.getVolumeAccess().getGroup_3_4()); 
                    // InternalDockerCompose.g:10601:6: ( rule__Volume__Group_3_4__0 )
                    // InternalDockerCompose.g:10601:7: rule__Volume__Group_3_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__Group_3_4__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getVolumeAccess().getGroup_3_4()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVolumeAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3__Impl"


    // $ANTLR start "rule__Volume__UnorderedGroup_3__0"
    // InternalDockerCompose.g:10614:1: rule__Volume__UnorderedGroup_3__0 : rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__1 )? ;
    public final void rule__Volume__UnorderedGroup_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10618:1: ( rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__1 )? )
            // InternalDockerCompose.g:10619:2: rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__1 )?
            {
            pushFollow(FOLLOW_46);
            rule__Volume__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10620:2: ( rule__Volume__UnorderedGroup_3__1 )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( LA101_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                alt101=1;
            }
            else if ( LA101_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                alt101=1;
            }
            else if ( LA101_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                alt101=1;
            }
            else if ( LA101_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                alt101=1;
            }
            else if ( LA101_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                alt101=1;
            }
            switch (alt101) {
                case 1 :
                    // InternalDockerCompose.g:10620:2: rule__Volume__UnorderedGroup_3__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__UnorderedGroup_3__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3__0"


    // $ANTLR start "rule__Volume__UnorderedGroup_3__1"
    // InternalDockerCompose.g:10626:1: rule__Volume__UnorderedGroup_3__1 : rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__2 )? ;
    public final void rule__Volume__UnorderedGroup_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10630:1: ( rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__2 )? )
            // InternalDockerCompose.g:10631:2: rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__2 )?
            {
            pushFollow(FOLLOW_46);
            rule__Volume__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10632:2: ( rule__Volume__UnorderedGroup_3__2 )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( LA102_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                alt102=1;
            }
            else if ( LA102_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                alt102=1;
            }
            else if ( LA102_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                alt102=1;
            }
            else if ( LA102_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                alt102=1;
            }
            else if ( LA102_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // InternalDockerCompose.g:10632:2: rule__Volume__UnorderedGroup_3__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__UnorderedGroup_3__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3__1"


    // $ANTLR start "rule__Volume__UnorderedGroup_3__2"
    // InternalDockerCompose.g:10638:1: rule__Volume__UnorderedGroup_3__2 : rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__3 )? ;
    public final void rule__Volume__UnorderedGroup_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10642:1: ( rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__3 )? )
            // InternalDockerCompose.g:10643:2: rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__3 )?
            {
            pushFollow(FOLLOW_46);
            rule__Volume__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10644:2: ( rule__Volume__UnorderedGroup_3__3 )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( LA103_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                alt103=1;
            }
            else if ( LA103_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                alt103=1;
            }
            else if ( LA103_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                alt103=1;
            }
            else if ( LA103_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                alt103=1;
            }
            else if ( LA103_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalDockerCompose.g:10644:2: rule__Volume__UnorderedGroup_3__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__UnorderedGroup_3__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3__2"


    // $ANTLR start "rule__Volume__UnorderedGroup_3__3"
    // InternalDockerCompose.g:10650:1: rule__Volume__UnorderedGroup_3__3 : rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__4 )? ;
    public final void rule__Volume__UnorderedGroup_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10654:1: ( rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__4 )? )
            // InternalDockerCompose.g:10655:2: rule__Volume__UnorderedGroup_3__Impl ( rule__Volume__UnorderedGroup_3__4 )?
            {
            pushFollow(FOLLOW_46);
            rule__Volume__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10656:2: ( rule__Volume__UnorderedGroup_3__4 )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( LA104_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 0) ) {
                alt104=1;
            }
            else if ( LA104_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 1) ) {
                alt104=1;
            }
            else if ( LA104_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 2) ) {
                alt104=1;
            }
            else if ( LA104_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 3) ) {
                alt104=1;
            }
            else if ( LA104_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeAccess().getUnorderedGroup_3(), 4) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalDockerCompose.g:10656:2: rule__Volume__UnorderedGroup_3__4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Volume__UnorderedGroup_3__4();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3__3"


    // $ANTLR start "rule__Volume__UnorderedGroup_3__4"
    // InternalDockerCompose.g:10662:1: rule__Volume__UnorderedGroup_3__4 : rule__Volume__UnorderedGroup_3__Impl ;
    public final void rule__Volume__UnorderedGroup_3__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10666:1: ( rule__Volume__UnorderedGroup_3__Impl )
            // InternalDockerCompose.g:10667:2: rule__Volume__UnorderedGroup_3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Volume__UnorderedGroup_3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__UnorderedGroup_3__4"


    // $ANTLR start "rule__Config__UnorderedGroup_3"
    // InternalDockerCompose.g:10674:1: rule__Config__UnorderedGroup_3 : ( rule__Config__UnorderedGroup_3__0 )? ;
    public final void rule__Config__UnorderedGroup_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getConfigAccess().getUnorderedGroup_3());
        	
        try {
            // InternalDockerCompose.g:10679:1: ( ( rule__Config__UnorderedGroup_3__0 )? )
            // InternalDockerCompose.g:10680:2: ( rule__Config__UnorderedGroup_3__0 )?
            {
            // InternalDockerCompose.g:10680:2: ( rule__Config__UnorderedGroup_3__0 )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( LA105_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0) ) {
                alt105=1;
            }
            else if ( LA105_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1) ) {
                alt105=1;
            }
            else if ( LA105_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // InternalDockerCompose.g:10680:2: rule__Config__UnorderedGroup_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Config__UnorderedGroup_3__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getConfigAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__UnorderedGroup_3"


    // $ANTLR start "rule__Config__UnorderedGroup_3__Impl"
    // InternalDockerCompose.g:10688:1: rule__Config__UnorderedGroup_3__Impl : ( ({...}? => ( ( ( rule__Config__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_2__0 ) ) ) ) ) ;
    public final void rule__Config__UnorderedGroup_3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:10693:1: ( ( ({...}? => ( ( ( rule__Config__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_2__0 ) ) ) ) ) )
            // InternalDockerCompose.g:10694:3: ( ({...}? => ( ( ( rule__Config__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_2__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:10694:3: ( ({...}? => ( ( ( rule__Config__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Config__Group_3_2__0 ) ) ) ) )
            int alt106=3;
            int LA106_0 = input.LA(1);

            if ( LA106_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0) ) {
                alt106=1;
            }
            else if ( LA106_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1) ) {
                alt106=2;
            }
            else if ( LA106_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2) ) {
                alt106=3;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 106, 0, input);

                throw nvae;
            }
            switch (alt106) {
                case 1 :
                    // InternalDockerCompose.g:10695:3: ({...}? => ( ( ( rule__Config__Group_3_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10695:3: ({...}? => ( ( ( rule__Config__Group_3_0__0 ) ) ) )
                    // InternalDockerCompose.g:10696:4: {...}? => ( ( ( rule__Config__Group_3_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0) ) {
                        throw new FailedPredicateException(input, "rule__Config__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0)");
                    }
                    // InternalDockerCompose.g:10696:102: ( ( ( rule__Config__Group_3_0__0 ) ) )
                    // InternalDockerCompose.g:10697:5: ( ( rule__Config__Group_3_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10703:5: ( ( rule__Config__Group_3_0__0 ) )
                    // InternalDockerCompose.g:10704:6: ( rule__Config__Group_3_0__0 )
                    {
                     before(grammarAccess.getConfigAccess().getGroup_3_0()); 
                    // InternalDockerCompose.g:10705:6: ( rule__Config__Group_3_0__0 )
                    // InternalDockerCompose.g:10705:7: rule__Config__Group_3_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Config__Group_3_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigAccess().getGroup_3_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:10710:3: ({...}? => ( ( ( rule__Config__Group_3_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10710:3: ({...}? => ( ( ( rule__Config__Group_3_1__0 ) ) ) )
                    // InternalDockerCompose.g:10711:4: {...}? => ( ( ( rule__Config__Group_3_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1) ) {
                        throw new FailedPredicateException(input, "rule__Config__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1)");
                    }
                    // InternalDockerCompose.g:10711:102: ( ( ( rule__Config__Group_3_1__0 ) ) )
                    // InternalDockerCompose.g:10712:5: ( ( rule__Config__Group_3_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10718:5: ( ( rule__Config__Group_3_1__0 ) )
                    // InternalDockerCompose.g:10719:6: ( rule__Config__Group_3_1__0 )
                    {
                     before(grammarAccess.getConfigAccess().getGroup_3_1()); 
                    // InternalDockerCompose.g:10720:6: ( rule__Config__Group_3_1__0 )
                    // InternalDockerCompose.g:10720:7: rule__Config__Group_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Config__Group_3_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigAccess().getGroup_3_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:10725:3: ({...}? => ( ( ( rule__Config__Group_3_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10725:3: ({...}? => ( ( ( rule__Config__Group_3_2__0 ) ) ) )
                    // InternalDockerCompose.g:10726:4: {...}? => ( ( ( rule__Config__Group_3_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2) ) {
                        throw new FailedPredicateException(input, "rule__Config__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2)");
                    }
                    // InternalDockerCompose.g:10726:102: ( ( ( rule__Config__Group_3_2__0 ) ) )
                    // InternalDockerCompose.g:10727:5: ( ( rule__Config__Group_3_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10733:5: ( ( rule__Config__Group_3_2__0 ) )
                    // InternalDockerCompose.g:10734:6: ( rule__Config__Group_3_2__0 )
                    {
                     before(grammarAccess.getConfigAccess().getGroup_3_2()); 
                    // InternalDockerCompose.g:10735:6: ( rule__Config__Group_3_2__0 )
                    // InternalDockerCompose.g:10735:7: rule__Config__Group_3_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Config__Group_3_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getConfigAccess().getGroup_3_2()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConfigAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__UnorderedGroup_3__Impl"


    // $ANTLR start "rule__Config__UnorderedGroup_3__0"
    // InternalDockerCompose.g:10748:1: rule__Config__UnorderedGroup_3__0 : rule__Config__UnorderedGroup_3__Impl ( rule__Config__UnorderedGroup_3__1 )? ;
    public final void rule__Config__UnorderedGroup_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10752:1: ( rule__Config__UnorderedGroup_3__Impl ( rule__Config__UnorderedGroup_3__1 )? )
            // InternalDockerCompose.g:10753:2: rule__Config__UnorderedGroup_3__Impl ( rule__Config__UnorderedGroup_3__1 )?
            {
            pushFollow(FOLLOW_47);
            rule__Config__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10754:2: ( rule__Config__UnorderedGroup_3__1 )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( LA107_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0) ) {
                alt107=1;
            }
            else if ( LA107_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1) ) {
                alt107=1;
            }
            else if ( LA107_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalDockerCompose.g:10754:2: rule__Config__UnorderedGroup_3__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Config__UnorderedGroup_3__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__UnorderedGroup_3__0"


    // $ANTLR start "rule__Config__UnorderedGroup_3__1"
    // InternalDockerCompose.g:10760:1: rule__Config__UnorderedGroup_3__1 : rule__Config__UnorderedGroup_3__Impl ( rule__Config__UnorderedGroup_3__2 )? ;
    public final void rule__Config__UnorderedGroup_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10764:1: ( rule__Config__UnorderedGroup_3__Impl ( rule__Config__UnorderedGroup_3__2 )? )
            // InternalDockerCompose.g:10765:2: rule__Config__UnorderedGroup_3__Impl ( rule__Config__UnorderedGroup_3__2 )?
            {
            pushFollow(FOLLOW_47);
            rule__Config__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10766:2: ( rule__Config__UnorderedGroup_3__2 )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( LA108_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 0) ) {
                alt108=1;
            }
            else if ( LA108_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 1) ) {
                alt108=1;
            }
            else if ( LA108_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_3(), 2) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalDockerCompose.g:10766:2: rule__Config__UnorderedGroup_3__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Config__UnorderedGroup_3__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__UnorderedGroup_3__1"


    // $ANTLR start "rule__Config__UnorderedGroup_3__2"
    // InternalDockerCompose.g:10772:1: rule__Config__UnorderedGroup_3__2 : rule__Config__UnorderedGroup_3__Impl ;
    public final void rule__Config__UnorderedGroup_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10776:1: ( rule__Config__UnorderedGroup_3__Impl )
            // InternalDockerCompose.g:10777:2: rule__Config__UnorderedGroup_3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Config__UnorderedGroup_3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__UnorderedGroup_3__2"


    // $ANTLR start "rule__Secret__UnorderedGroup_3"
    // InternalDockerCompose.g:10784:1: rule__Secret__UnorderedGroup_3 : ( rule__Secret__UnorderedGroup_3__0 )? ;
    public final void rule__Secret__UnorderedGroup_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getSecretAccess().getUnorderedGroup_3());
        	
        try {
            // InternalDockerCompose.g:10789:1: ( ( rule__Secret__UnorderedGroup_3__0 )? )
            // InternalDockerCompose.g:10790:2: ( rule__Secret__UnorderedGroup_3__0 )?
            {
            // InternalDockerCompose.g:10790:2: ( rule__Secret__UnorderedGroup_3__0 )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( LA109_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0) ) {
                alt109=1;
            }
            else if ( LA109_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1) ) {
                alt109=1;
            }
            else if ( LA109_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2) ) {
                alt109=1;
            }
            else if ( LA109_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // InternalDockerCompose.g:10790:2: rule__Secret__UnorderedGroup_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__UnorderedGroup_3__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getSecretAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__UnorderedGroup_3"


    // $ANTLR start "rule__Secret__UnorderedGroup_3__Impl"
    // InternalDockerCompose.g:10798:1: rule__Secret__UnorderedGroup_3__Impl : ( ({...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) ) ) ) ;
    public final void rule__Secret__UnorderedGroup_3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:10803:1: ( ( ({...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) ) ) ) )
            // InternalDockerCompose.g:10804:3: ( ({...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:10804:3: ( ({...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) ) ) )
            int alt110=4;
            int LA110_0 = input.LA(1);

            if ( LA110_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0) ) {
                alt110=1;
            }
            else if ( LA110_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1) ) {
                alt110=2;
            }
            else if ( LA110_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2) ) {
                alt110=3;
            }
            else if ( LA110_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3) ) {
                alt110=4;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 110, 0, input);

                throw nvae;
            }
            switch (alt110) {
                case 1 :
                    // InternalDockerCompose.g:10805:3: ({...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10805:3: ({...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) ) )
                    // InternalDockerCompose.g:10806:4: {...}? => ( ( ( rule__Secret__Group_3_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0) ) {
                        throw new FailedPredicateException(input, "rule__Secret__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0)");
                    }
                    // InternalDockerCompose.g:10806:102: ( ( ( rule__Secret__Group_3_0__0 ) ) )
                    // InternalDockerCompose.g:10807:5: ( ( rule__Secret__Group_3_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10813:5: ( ( rule__Secret__Group_3_0__0 ) )
                    // InternalDockerCompose.g:10814:6: ( rule__Secret__Group_3_0__0 )
                    {
                     before(grammarAccess.getSecretAccess().getGroup_3_0()); 
                    // InternalDockerCompose.g:10815:6: ( rule__Secret__Group_3_0__0 )
                    // InternalDockerCompose.g:10815:7: rule__Secret__Group_3_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__Group_3_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretAccess().getGroup_3_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:10820:3: ({...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10820:3: ({...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) ) )
                    // InternalDockerCompose.g:10821:4: {...}? => ( ( ( rule__Secret__Group_3_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1) ) {
                        throw new FailedPredicateException(input, "rule__Secret__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1)");
                    }
                    // InternalDockerCompose.g:10821:102: ( ( ( rule__Secret__Group_3_1__0 ) ) )
                    // InternalDockerCompose.g:10822:5: ( ( rule__Secret__Group_3_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10828:5: ( ( rule__Secret__Group_3_1__0 ) )
                    // InternalDockerCompose.g:10829:6: ( rule__Secret__Group_3_1__0 )
                    {
                     before(grammarAccess.getSecretAccess().getGroup_3_1()); 
                    // InternalDockerCompose.g:10830:6: ( rule__Secret__Group_3_1__0 )
                    // InternalDockerCompose.g:10830:7: rule__Secret__Group_3_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__Group_3_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretAccess().getGroup_3_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:10835:3: ({...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10835:3: ({...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) ) )
                    // InternalDockerCompose.g:10836:4: {...}? => ( ( ( rule__Secret__Group_3_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2) ) {
                        throw new FailedPredicateException(input, "rule__Secret__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2)");
                    }
                    // InternalDockerCompose.g:10836:102: ( ( ( rule__Secret__Group_3_2__0 ) ) )
                    // InternalDockerCompose.g:10837:5: ( ( rule__Secret__Group_3_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10843:5: ( ( rule__Secret__Group_3_2__0 ) )
                    // InternalDockerCompose.g:10844:6: ( rule__Secret__Group_3_2__0 )
                    {
                     before(grammarAccess.getSecretAccess().getGroup_3_2()); 
                    // InternalDockerCompose.g:10845:6: ( rule__Secret__Group_3_2__0 )
                    // InternalDockerCompose.g:10845:7: rule__Secret__Group_3_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__Group_3_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretAccess().getGroup_3_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:10850:3: ({...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10850:3: ({...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) ) )
                    // InternalDockerCompose.g:10851:4: {...}? => ( ( ( rule__Secret__Group_3_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3) ) {
                        throw new FailedPredicateException(input, "rule__Secret__UnorderedGroup_3__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3)");
                    }
                    // InternalDockerCompose.g:10851:102: ( ( ( rule__Secret__Group_3_3__0 ) ) )
                    // InternalDockerCompose.g:10852:5: ( ( rule__Secret__Group_3_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10858:5: ( ( rule__Secret__Group_3_3__0 ) )
                    // InternalDockerCompose.g:10859:6: ( rule__Secret__Group_3_3__0 )
                    {
                     before(grammarAccess.getSecretAccess().getGroup_3_3()); 
                    // InternalDockerCompose.g:10860:6: ( rule__Secret__Group_3_3__0 )
                    // InternalDockerCompose.g:10860:7: rule__Secret__Group_3_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__Group_3_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getSecretAccess().getGroup_3_3()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSecretAccess().getUnorderedGroup_3());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__UnorderedGroup_3__Impl"


    // $ANTLR start "rule__Secret__UnorderedGroup_3__0"
    // InternalDockerCompose.g:10873:1: rule__Secret__UnorderedGroup_3__0 : rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__1 )? ;
    public final void rule__Secret__UnorderedGroup_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10877:1: ( rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__1 )? )
            // InternalDockerCompose.g:10878:2: rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__1 )?
            {
            pushFollow(FOLLOW_48);
            rule__Secret__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10879:2: ( rule__Secret__UnorderedGroup_3__1 )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( LA111_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0) ) {
                alt111=1;
            }
            else if ( LA111_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1) ) {
                alt111=1;
            }
            else if ( LA111_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2) ) {
                alt111=1;
            }
            else if ( LA111_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // InternalDockerCompose.g:10879:2: rule__Secret__UnorderedGroup_3__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__UnorderedGroup_3__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__UnorderedGroup_3__0"


    // $ANTLR start "rule__Secret__UnorderedGroup_3__1"
    // InternalDockerCompose.g:10885:1: rule__Secret__UnorderedGroup_3__1 : rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__2 )? ;
    public final void rule__Secret__UnorderedGroup_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10889:1: ( rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__2 )? )
            // InternalDockerCompose.g:10890:2: rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__2 )?
            {
            pushFollow(FOLLOW_48);
            rule__Secret__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10891:2: ( rule__Secret__UnorderedGroup_3__2 )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( LA112_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0) ) {
                alt112=1;
            }
            else if ( LA112_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1) ) {
                alt112=1;
            }
            else if ( LA112_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2) ) {
                alt112=1;
            }
            else if ( LA112_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // InternalDockerCompose.g:10891:2: rule__Secret__UnorderedGroup_3__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__UnorderedGroup_3__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__UnorderedGroup_3__1"


    // $ANTLR start "rule__Secret__UnorderedGroup_3__2"
    // InternalDockerCompose.g:10897:1: rule__Secret__UnorderedGroup_3__2 : rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__3 )? ;
    public final void rule__Secret__UnorderedGroup_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10901:1: ( rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__3 )? )
            // InternalDockerCompose.g:10902:2: rule__Secret__UnorderedGroup_3__Impl ( rule__Secret__UnorderedGroup_3__3 )?
            {
            pushFollow(FOLLOW_48);
            rule__Secret__UnorderedGroup_3__Impl();

            state._fsp--;

            // InternalDockerCompose.g:10903:2: ( rule__Secret__UnorderedGroup_3__3 )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( LA113_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 0) ) {
                alt113=1;
            }
            else if ( LA113_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 1) ) {
                alt113=1;
            }
            else if ( LA113_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 2) ) {
                alt113=1;
            }
            else if ( LA113_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getSecretAccess().getUnorderedGroup_3(), 3) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalDockerCompose.g:10903:2: rule__Secret__UnorderedGroup_3__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Secret__UnorderedGroup_3__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__UnorderedGroup_3__2"


    // $ANTLR start "rule__Secret__UnorderedGroup_3__3"
    // InternalDockerCompose.g:10909:1: rule__Secret__UnorderedGroup_3__3 : rule__Secret__UnorderedGroup_3__Impl ;
    public final void rule__Secret__UnorderedGroup_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10913:1: ( rule__Secret__UnorderedGroup_3__Impl )
            // InternalDockerCompose.g:10914:2: rule__Secret__UnorderedGroup_3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Secret__UnorderedGroup_3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__UnorderedGroup_3__3"


    // $ANTLR start "rule__IPAM__UnorderedGroup_1"
    // InternalDockerCompose.g:10921:1: rule__IPAM__UnorderedGroup_1 : ( rule__IPAM__UnorderedGroup_1__0 )? ;
    public final void rule__IPAM__UnorderedGroup_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getIPAMAccess().getUnorderedGroup_1());
        	
        try {
            // InternalDockerCompose.g:10926:1: ( ( rule__IPAM__UnorderedGroup_1__0 )? )
            // InternalDockerCompose.g:10927:2: ( rule__IPAM__UnorderedGroup_1__0 )?
            {
            // InternalDockerCompose.g:10927:2: ( rule__IPAM__UnorderedGroup_1__0 )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==72) ) {
                int LA114_1 = input.LA(2);

                if ( (LA114_1==RULE_STRING) ) {
                    int LA114_5 = input.LA(3);

                    if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                        alt114=1;
                    }
                }
                else if ( (LA114_1==RULE_ID) ) {
                    int LA114_6 = input.LA(3);

                    if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                        alt114=1;
                    }
                }
            }
            else if ( LA114_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1) ) {
                alt114=1;
            }
            else if ( LA114_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalDockerCompose.g:10927:2: rule__IPAM__UnorderedGroup_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAM__UnorderedGroup_1__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getIPAMAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__UnorderedGroup_1"


    // $ANTLR start "rule__IPAM__UnorderedGroup_1__Impl"
    // InternalDockerCompose.g:10935:1: rule__IPAM__UnorderedGroup_1__Impl : ( ({...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) ) ) ) ;
    public final void rule__IPAM__UnorderedGroup_1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:10940:1: ( ( ({...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) ) ) ) )
            // InternalDockerCompose.g:10941:3: ( ({...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:10941:3: ( ({...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) ) ) )
            int alt115=3;
            int LA115_0 = input.LA(1);

            if ( LA115_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                alt115=1;
            }
            else if ( LA115_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1) ) {
                alt115=2;
            }
            else if ( LA115_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2) ) {
                alt115=3;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 115, 0, input);

                throw nvae;
            }
            switch (alt115) {
                case 1 :
                    // InternalDockerCompose.g:10942:3: ({...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10942:3: ({...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) ) )
                    // InternalDockerCompose.g:10943:4: {...}? => ( ( ( rule__IPAM__Group_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                        throw new FailedPredicateException(input, "rule__IPAM__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0)");
                    }
                    // InternalDockerCompose.g:10943:100: ( ( ( rule__IPAM__Group_1_0__0 ) ) )
                    // InternalDockerCompose.g:10944:5: ( ( rule__IPAM__Group_1_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10950:5: ( ( rule__IPAM__Group_1_0__0 ) )
                    // InternalDockerCompose.g:10951:6: ( rule__IPAM__Group_1_0__0 )
                    {
                     before(grammarAccess.getIPAMAccess().getGroup_1_0()); 
                    // InternalDockerCompose.g:10952:6: ( rule__IPAM__Group_1_0__0 )
                    // InternalDockerCompose.g:10952:7: rule__IPAM__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAM__Group_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMAccess().getGroup_1_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:10957:3: ({...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10957:3: ({...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) ) )
                    // InternalDockerCompose.g:10958:4: {...}? => ( ( ( rule__IPAM__Group_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1) ) {
                        throw new FailedPredicateException(input, "rule__IPAM__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1)");
                    }
                    // InternalDockerCompose.g:10958:100: ( ( ( rule__IPAM__Group_1_1__0 ) ) )
                    // InternalDockerCompose.g:10959:5: ( ( rule__IPAM__Group_1_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10965:5: ( ( rule__IPAM__Group_1_1__0 ) )
                    // InternalDockerCompose.g:10966:6: ( rule__IPAM__Group_1_1__0 )
                    {
                     before(grammarAccess.getIPAMAccess().getGroup_1_1()); 
                    // InternalDockerCompose.g:10967:6: ( rule__IPAM__Group_1_1__0 )
                    // InternalDockerCompose.g:10967:7: rule__IPAM__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAM__Group_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMAccess().getGroup_1_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:10972:3: ({...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:10972:3: ({...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) ) )
                    // InternalDockerCompose.g:10973:4: {...}? => ( ( ( rule__IPAM__Group_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2) ) {
                        throw new FailedPredicateException(input, "rule__IPAM__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2)");
                    }
                    // InternalDockerCompose.g:10973:100: ( ( ( rule__IPAM__Group_1_2__0 ) ) )
                    // InternalDockerCompose.g:10974:5: ( ( rule__IPAM__Group_1_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:10980:5: ( ( rule__IPAM__Group_1_2__0 ) )
                    // InternalDockerCompose.g:10981:6: ( rule__IPAM__Group_1_2__0 )
                    {
                     before(grammarAccess.getIPAMAccess().getGroup_1_2()); 
                    // InternalDockerCompose.g:10982:6: ( rule__IPAM__Group_1_2__0 )
                    // InternalDockerCompose.g:10982:7: rule__IPAM__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAM__Group_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMAccess().getGroup_1_2()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIPAMAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__UnorderedGroup_1__Impl"


    // $ANTLR start "rule__IPAM__UnorderedGroup_1__0"
    // InternalDockerCompose.g:10995:1: rule__IPAM__UnorderedGroup_1__0 : rule__IPAM__UnorderedGroup_1__Impl ( rule__IPAM__UnorderedGroup_1__1 )? ;
    public final void rule__IPAM__UnorderedGroup_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:10999:1: ( rule__IPAM__UnorderedGroup_1__Impl ( rule__IPAM__UnorderedGroup_1__1 )? )
            // InternalDockerCompose.g:11000:2: rule__IPAM__UnorderedGroup_1__Impl ( rule__IPAM__UnorderedGroup_1__1 )?
            {
            pushFollow(FOLLOW_49);
            rule__IPAM__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11001:2: ( rule__IPAM__UnorderedGroup_1__1 )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==72) ) {
                int LA116_1 = input.LA(2);

                if ( (LA116_1==RULE_STRING) ) {
                    int LA116_5 = input.LA(3);

                    if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                        alt116=1;
                    }
                }
                else if ( (LA116_1==RULE_ID) ) {
                    int LA116_6 = input.LA(3);

                    if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                        alt116=1;
                    }
                }
            }
            else if ( LA116_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1) ) {
                alt116=1;
            }
            else if ( LA116_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalDockerCompose.g:11001:2: rule__IPAM__UnorderedGroup_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAM__UnorderedGroup_1__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__UnorderedGroup_1__0"


    // $ANTLR start "rule__IPAM__UnorderedGroup_1__1"
    // InternalDockerCompose.g:11007:1: rule__IPAM__UnorderedGroup_1__1 : rule__IPAM__UnorderedGroup_1__Impl ( rule__IPAM__UnorderedGroup_1__2 )? ;
    public final void rule__IPAM__UnorderedGroup_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11011:1: ( rule__IPAM__UnorderedGroup_1__Impl ( rule__IPAM__UnorderedGroup_1__2 )? )
            // InternalDockerCompose.g:11012:2: rule__IPAM__UnorderedGroup_1__Impl ( rule__IPAM__UnorderedGroup_1__2 )?
            {
            pushFollow(FOLLOW_49);
            rule__IPAM__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11013:2: ( rule__IPAM__UnorderedGroup_1__2 )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==72) ) {
                int LA117_1 = input.LA(2);

                if ( (LA117_1==RULE_STRING) ) {
                    int LA117_5 = input.LA(3);

                    if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                        alt117=1;
                    }
                }
                else if ( (LA117_1==RULE_ID) ) {
                    int LA117_6 = input.LA(3);

                    if ( getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 0) ) {
                        alt117=1;
                    }
                }
            }
            else if ( LA117_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 1) ) {
                alt117=1;
            }
            else if ( LA117_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMAccess().getUnorderedGroup_1(), 2) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalDockerCompose.g:11013:2: rule__IPAM__UnorderedGroup_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAM__UnorderedGroup_1__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__UnorderedGroup_1__1"


    // $ANTLR start "rule__IPAM__UnorderedGroup_1__2"
    // InternalDockerCompose.g:11019:1: rule__IPAM__UnorderedGroup_1__2 : rule__IPAM__UnorderedGroup_1__Impl ;
    public final void rule__IPAM__UnorderedGroup_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11023:1: ( rule__IPAM__UnorderedGroup_1__Impl )
            // InternalDockerCompose.g:11024:2: rule__IPAM__UnorderedGroup_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAM__UnorderedGroup_1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__UnorderedGroup_1__2"


    // $ANTLR start "rule__IPAMConfig__UnorderedGroup_1"
    // InternalDockerCompose.g:11031:1: rule__IPAMConfig__UnorderedGroup_1 : ( rule__IPAMConfig__UnorderedGroup_1__0 )? ;
    public final void rule__IPAMConfig__UnorderedGroup_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        		getUnorderedGroupHelper().enter(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1());
        	
        try {
            // InternalDockerCompose.g:11036:1: ( ( rule__IPAMConfig__UnorderedGroup_1__0 )? )
            // InternalDockerCompose.g:11037:2: ( rule__IPAMConfig__UnorderedGroup_1__0 )?
            {
            // InternalDockerCompose.g:11037:2: ( rule__IPAMConfig__UnorderedGroup_1__0 )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( LA118_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0) ) {
                alt118=1;
            }
            else if ( LA118_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1) ) {
                alt118=1;
            }
            else if ( LA118_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2) ) {
                alt118=1;
            }
            else if ( LA118_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalDockerCompose.g:11037:2: rule__IPAMConfig__UnorderedGroup_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__UnorderedGroup_1__0();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	getUnorderedGroupHelper().leave(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__UnorderedGroup_1"


    // $ANTLR start "rule__IPAMConfig__UnorderedGroup_1__Impl"
    // InternalDockerCompose.g:11045:1: rule__IPAMConfig__UnorderedGroup_1__Impl : ( ({...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) ) ) ) ;
    public final void rule__IPAMConfig__UnorderedGroup_1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        		boolean selected = false;
        	
        try {
            // InternalDockerCompose.g:11050:1: ( ( ({...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) ) ) ) )
            // InternalDockerCompose.g:11051:3: ( ({...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) ) ) )
            {
            // InternalDockerCompose.g:11051:3: ( ({...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) ) ) )
            int alt119=4;
            int LA119_0 = input.LA(1);

            if ( LA119_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0) ) {
                alt119=1;
            }
            else if ( LA119_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1) ) {
                alt119=2;
            }
            else if ( LA119_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2) ) {
                alt119=3;
            }
            else if ( LA119_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3) ) {
                alt119=4;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 119, 0, input);

                throw nvae;
            }
            switch (alt119) {
                case 1 :
                    // InternalDockerCompose.g:11052:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11052:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) ) )
                    // InternalDockerCompose.g:11053:4: {...}? => ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0) ) {
                        throw new FailedPredicateException(input, "rule__IPAMConfig__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0)");
                    }
                    // InternalDockerCompose.g:11053:106: ( ( ( rule__IPAMConfig__Group_1_0__0 ) ) )
                    // InternalDockerCompose.g:11054:5: ( ( rule__IPAMConfig__Group_1_0__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11060:5: ( ( rule__IPAMConfig__Group_1_0__0 ) )
                    // InternalDockerCompose.g:11061:6: ( rule__IPAMConfig__Group_1_0__0 )
                    {
                     before(grammarAccess.getIPAMConfigAccess().getGroup_1_0()); 
                    // InternalDockerCompose.g:11062:6: ( rule__IPAMConfig__Group_1_0__0 )
                    // InternalDockerCompose.g:11062:7: rule__IPAMConfig__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__Group_1_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMConfigAccess().getGroup_1_0()); 

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDockerCompose.g:11067:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11067:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) ) )
                    // InternalDockerCompose.g:11068:4: {...}? => ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1) ) {
                        throw new FailedPredicateException(input, "rule__IPAMConfig__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1)");
                    }
                    // InternalDockerCompose.g:11068:106: ( ( ( rule__IPAMConfig__Group_1_1__0 ) ) )
                    // InternalDockerCompose.g:11069:5: ( ( rule__IPAMConfig__Group_1_1__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11075:5: ( ( rule__IPAMConfig__Group_1_1__0 ) )
                    // InternalDockerCompose.g:11076:6: ( rule__IPAMConfig__Group_1_1__0 )
                    {
                     before(grammarAccess.getIPAMConfigAccess().getGroup_1_1()); 
                    // InternalDockerCompose.g:11077:6: ( rule__IPAMConfig__Group_1_1__0 )
                    // InternalDockerCompose.g:11077:7: rule__IPAMConfig__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__Group_1_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMConfigAccess().getGroup_1_1()); 

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDockerCompose.g:11082:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11082:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) ) )
                    // InternalDockerCompose.g:11083:4: {...}? => ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2) ) {
                        throw new FailedPredicateException(input, "rule__IPAMConfig__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2)");
                    }
                    // InternalDockerCompose.g:11083:106: ( ( ( rule__IPAMConfig__Group_1_2__0 ) ) )
                    // InternalDockerCompose.g:11084:5: ( ( rule__IPAMConfig__Group_1_2__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11090:5: ( ( rule__IPAMConfig__Group_1_2__0 ) )
                    // InternalDockerCompose.g:11091:6: ( rule__IPAMConfig__Group_1_2__0 )
                    {
                     before(grammarAccess.getIPAMConfigAccess().getGroup_1_2()); 
                    // InternalDockerCompose.g:11092:6: ( rule__IPAMConfig__Group_1_2__0 )
                    // InternalDockerCompose.g:11092:7: rule__IPAMConfig__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__Group_1_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMConfigAccess().getGroup_1_2()); 

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDockerCompose.g:11097:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) ) )
                    {
                    // InternalDockerCompose.g:11097:3: ({...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) ) )
                    // InternalDockerCompose.g:11098:4: {...}? => ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) )
                    {
                    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3) ) {
                        throw new FailedPredicateException(input, "rule__IPAMConfig__UnorderedGroup_1__Impl", "getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3)");
                    }
                    // InternalDockerCompose.g:11098:106: ( ( ( rule__IPAMConfig__Group_1_3__0 ) ) )
                    // InternalDockerCompose.g:11099:5: ( ( rule__IPAMConfig__Group_1_3__0 ) )
                    {

                    					getUnorderedGroupHelper().select(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3);
                    				

                    					selected = true;
                    				
                    // InternalDockerCompose.g:11105:5: ( ( rule__IPAMConfig__Group_1_3__0 ) )
                    // InternalDockerCompose.g:11106:6: ( rule__IPAMConfig__Group_1_3__0 )
                    {
                     before(grammarAccess.getIPAMConfigAccess().getGroup_1_3()); 
                    // InternalDockerCompose.g:11107:6: ( rule__IPAMConfig__Group_1_3__0 )
                    // InternalDockerCompose.g:11107:7: rule__IPAMConfig__Group_1_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__Group_1_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIPAMConfigAccess().getGroup_1_3()); 

                    }


                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	if (selected)
            		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1());
            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__UnorderedGroup_1__Impl"


    // $ANTLR start "rule__IPAMConfig__UnorderedGroup_1__0"
    // InternalDockerCompose.g:11120:1: rule__IPAMConfig__UnorderedGroup_1__0 : rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__1 )? ;
    public final void rule__IPAMConfig__UnorderedGroup_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11124:1: ( rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__1 )? )
            // InternalDockerCompose.g:11125:2: rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__1 )?
            {
            pushFollow(FOLLOW_50);
            rule__IPAMConfig__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11126:2: ( rule__IPAMConfig__UnorderedGroup_1__1 )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( LA120_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0) ) {
                alt120=1;
            }
            else if ( LA120_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1) ) {
                alt120=1;
            }
            else if ( LA120_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2) ) {
                alt120=1;
            }
            else if ( LA120_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // InternalDockerCompose.g:11126:2: rule__IPAMConfig__UnorderedGroup_1__1
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__UnorderedGroup_1__1();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__UnorderedGroup_1__0"


    // $ANTLR start "rule__IPAMConfig__UnorderedGroup_1__1"
    // InternalDockerCompose.g:11132:1: rule__IPAMConfig__UnorderedGroup_1__1 : rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__2 )? ;
    public final void rule__IPAMConfig__UnorderedGroup_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11136:1: ( rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__2 )? )
            // InternalDockerCompose.g:11137:2: rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__2 )?
            {
            pushFollow(FOLLOW_50);
            rule__IPAMConfig__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11138:2: ( rule__IPAMConfig__UnorderedGroup_1__2 )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( LA121_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0) ) {
                alt121=1;
            }
            else if ( LA121_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1) ) {
                alt121=1;
            }
            else if ( LA121_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2) ) {
                alt121=1;
            }
            else if ( LA121_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // InternalDockerCompose.g:11138:2: rule__IPAMConfig__UnorderedGroup_1__2
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__UnorderedGroup_1__2();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__UnorderedGroup_1__1"


    // $ANTLR start "rule__IPAMConfig__UnorderedGroup_1__2"
    // InternalDockerCompose.g:11144:1: rule__IPAMConfig__UnorderedGroup_1__2 : rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__3 )? ;
    public final void rule__IPAMConfig__UnorderedGroup_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11148:1: ( rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__3 )? )
            // InternalDockerCompose.g:11149:2: rule__IPAMConfig__UnorderedGroup_1__Impl ( rule__IPAMConfig__UnorderedGroup_1__3 )?
            {
            pushFollow(FOLLOW_50);
            rule__IPAMConfig__UnorderedGroup_1__Impl();

            state._fsp--;

            // InternalDockerCompose.g:11150:2: ( rule__IPAMConfig__UnorderedGroup_1__3 )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( LA122_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 0) ) {
                alt122=1;
            }
            else if ( LA122_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 1) ) {
                alt122=1;
            }
            else if ( LA122_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 2) ) {
                alt122=1;
            }
            else if ( LA122_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getIPAMConfigAccess().getUnorderedGroup_1(), 3) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // InternalDockerCompose.g:11150:2: rule__IPAMConfig__UnorderedGroup_1__3
                    {
                    pushFollow(FOLLOW_2);
                    rule__IPAMConfig__UnorderedGroup_1__3();

                    state._fsp--;


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__UnorderedGroup_1__2"


    // $ANTLR start "rule__IPAMConfig__UnorderedGroup_1__3"
    // InternalDockerCompose.g:11156:1: rule__IPAMConfig__UnorderedGroup_1__3 : rule__IPAMConfig__UnorderedGroup_1__Impl ;
    public final void rule__IPAMConfig__UnorderedGroup_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11160:1: ( rule__IPAMConfig__UnorderedGroup_1__Impl )
            // InternalDockerCompose.g:11161:2: rule__IPAMConfig__UnorderedGroup_1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IPAMConfig__UnorderedGroup_1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__UnorderedGroup_1__3"


    // $ANTLR start "rule__DockerCompose__VersionAssignment_0_1"
    // InternalDockerCompose.g:11168:1: rule__DockerCompose__VersionAssignment_0_1 : ( RULE_VERSION ) ;
    public final void rule__DockerCompose__VersionAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11172:1: ( ( RULE_VERSION ) )
            // InternalDockerCompose.g:11173:2: ( RULE_VERSION )
            {
            // InternalDockerCompose.g:11173:2: ( RULE_VERSION )
            // InternalDockerCompose.g:11174:3: RULE_VERSION
            {
             before(grammarAccess.getDockerComposeAccess().getVersionVERSIONTerminalRuleCall_0_1_0()); 
            match(input,RULE_VERSION,FOLLOW_2); 
             after(grammarAccess.getDockerComposeAccess().getVersionVERSIONTerminalRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__VersionAssignment_0_1"


    // $ANTLR start "rule__DockerCompose__ServicesAssignment_1_1"
    // InternalDockerCompose.g:11183:1: rule__DockerCompose__ServicesAssignment_1_1 : ( ruleService ) ;
    public final void rule__DockerCompose__ServicesAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11187:1: ( ( ruleService ) )
            // InternalDockerCompose.g:11188:2: ( ruleService )
            {
            // InternalDockerCompose.g:11188:2: ( ruleService )
            // InternalDockerCompose.g:11189:3: ruleService
            {
             before(grammarAccess.getDockerComposeAccess().getServicesServiceParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleService();

            state._fsp--;

             after(grammarAccess.getDockerComposeAccess().getServicesServiceParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__ServicesAssignment_1_1"


    // $ANTLR start "rule__DockerCompose__NetworksAssignment_2_1"
    // InternalDockerCompose.g:11198:1: rule__DockerCompose__NetworksAssignment_2_1 : ( ruleNetwork ) ;
    public final void rule__DockerCompose__NetworksAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11202:1: ( ( ruleNetwork ) )
            // InternalDockerCompose.g:11203:2: ( ruleNetwork )
            {
            // InternalDockerCompose.g:11203:2: ( ruleNetwork )
            // InternalDockerCompose.g:11204:3: ruleNetwork
            {
             before(grammarAccess.getDockerComposeAccess().getNetworksNetworkParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNetwork();

            state._fsp--;

             after(grammarAccess.getDockerComposeAccess().getNetworksNetworkParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__NetworksAssignment_2_1"


    // $ANTLR start "rule__DockerCompose__VolumesAssignment_3_1"
    // InternalDockerCompose.g:11213:1: rule__DockerCompose__VolumesAssignment_3_1 : ( ruleVolume ) ;
    public final void rule__DockerCompose__VolumesAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11217:1: ( ( ruleVolume ) )
            // InternalDockerCompose.g:11218:2: ( ruleVolume )
            {
            // InternalDockerCompose.g:11218:2: ( ruleVolume )
            // InternalDockerCompose.g:11219:3: ruleVolume
            {
             before(grammarAccess.getDockerComposeAccess().getVolumesVolumeParserRuleCall_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleVolume();

            state._fsp--;

             after(grammarAccess.getDockerComposeAccess().getVolumesVolumeParserRuleCall_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__VolumesAssignment_3_1"


    // $ANTLR start "rule__DockerCompose__ConfigsAssignment_4_1"
    // InternalDockerCompose.g:11228:1: rule__DockerCompose__ConfigsAssignment_4_1 : ( ruleConfig ) ;
    public final void rule__DockerCompose__ConfigsAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11232:1: ( ( ruleConfig ) )
            // InternalDockerCompose.g:11233:2: ( ruleConfig )
            {
            // InternalDockerCompose.g:11233:2: ( ruleConfig )
            // InternalDockerCompose.g:11234:3: ruleConfig
            {
             before(grammarAccess.getDockerComposeAccess().getConfigsConfigParserRuleCall_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleConfig();

            state._fsp--;

             after(grammarAccess.getDockerComposeAccess().getConfigsConfigParserRuleCall_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__ConfigsAssignment_4_1"


    // $ANTLR start "rule__DockerCompose__SecretsAssignment_5_1"
    // InternalDockerCompose.g:11243:1: rule__DockerCompose__SecretsAssignment_5_1 : ( ruleSecret ) ;
    public final void rule__DockerCompose__SecretsAssignment_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11247:1: ( ( ruleSecret ) )
            // InternalDockerCompose.g:11248:2: ( ruleSecret )
            {
            // InternalDockerCompose.g:11248:2: ( ruleSecret )
            // InternalDockerCompose.g:11249:3: ruleSecret
            {
             before(grammarAccess.getDockerComposeAccess().getSecretsSecretParserRuleCall_5_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSecret();

            state._fsp--;

             after(grammarAccess.getDockerComposeAccess().getSecretsSecretParserRuleCall_5_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DockerCompose__SecretsAssignment_5_1"


    // $ANTLR start "rule__Service__NameAssignment_1"
    // InternalDockerCompose.g:11258:1: rule__Service__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__Service__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11262:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:11263:2: ( ruleEString )
            {
            // InternalDockerCompose.g:11263:2: ( ruleEString )
            // InternalDockerCompose.g:11264:3: ruleEString
            {
             before(grammarAccess.getServiceAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__NameAssignment_1"


    // $ANTLR start "rule__Service__BuildAssignment_3_0_0_1"
    // InternalDockerCompose.g:11273:1: rule__Service__BuildAssignment_3_0_0_1 : ( rulePATH ) ;
    public final void rule__Service__BuildAssignment_3_0_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11277:1: ( ( rulePATH ) )
            // InternalDockerCompose.g:11278:2: ( rulePATH )
            {
            // InternalDockerCompose.g:11278:2: ( rulePATH )
            // InternalDockerCompose.g:11279:3: rulePATH
            {
             before(grammarAccess.getServiceAccess().getBuildPATHParserRuleCall_3_0_0_1_0()); 
            pushFollow(FOLLOW_2);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getBuildPATHParserRuleCall_3_0_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__BuildAssignment_3_0_0_1"


    // $ANTLR start "rule__Service__ImageAssignment_3_0_1_1"
    // InternalDockerCompose.g:11288:1: rule__Service__ImageAssignment_3_0_1_1 : ( ruleImage ) ;
    public final void rule__Service__ImageAssignment_3_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11292:1: ( ( ruleImage ) )
            // InternalDockerCompose.g:11293:2: ( ruleImage )
            {
            // InternalDockerCompose.g:11293:2: ( ruleImage )
            // InternalDockerCompose.g:11294:3: ruleImage
            {
             before(grammarAccess.getServiceAccess().getImageImageParserRuleCall_3_0_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleImage();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getImageImageParserRuleCall_3_0_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__ImageAssignment_3_0_1_1"


    // $ANTLR start "rule__Service__Cpu_countAssignment_3_1_1"
    // InternalDockerCompose.g:11303:1: rule__Service__Cpu_countAssignment_3_1_1 : ( ruleEInt ) ;
    public final void rule__Service__Cpu_countAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11307:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:11308:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:11308:2: ( ruleEInt )
            // InternalDockerCompose.g:11309:3: ruleEInt
            {
             before(grammarAccess.getServiceAccess().getCpu_countEIntParserRuleCall_3_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getCpu_countEIntParserRuleCall_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Cpu_countAssignment_3_1_1"


    // $ANTLR start "rule__Service__CommandAssignment_3_2_1"
    // InternalDockerCompose.g:11318:1: rule__Service__CommandAssignment_3_2_1 : ( ruleEString ) ;
    public final void rule__Service__CommandAssignment_3_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11322:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:11323:2: ( ruleEString )
            {
            // InternalDockerCompose.g:11323:2: ( ruleEString )
            // InternalDockerCompose.g:11324:3: ruleEString
            {
             before(grammarAccess.getServiceAccess().getCommandEStringParserRuleCall_3_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getCommandEStringParserRuleCall_3_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__CommandAssignment_3_2_1"


    // $ANTLR start "rule__Service__Container_nameAssignment_3_3_1"
    // InternalDockerCompose.g:11333:1: rule__Service__Container_nameAssignment_3_3_1 : ( ruleEString ) ;
    public final void rule__Service__Container_nameAssignment_3_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11337:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:11338:2: ( ruleEString )
            {
            // InternalDockerCompose.g:11338:2: ( ruleEString )
            // InternalDockerCompose.g:11339:3: ruleEString
            {
             before(grammarAccess.getServiceAccess().getContainer_nameEStringParserRuleCall_3_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getContainer_nameEStringParserRuleCall_3_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Container_nameAssignment_3_3_1"


    // $ANTLR start "rule__Service__RestartAssignment_3_4_1"
    // InternalDockerCompose.g:11348:1: rule__Service__RestartAssignment_3_4_1 : ( ruleRestartPolicy ) ;
    public final void rule__Service__RestartAssignment_3_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11352:1: ( ( ruleRestartPolicy ) )
            // InternalDockerCompose.g:11353:2: ( ruleRestartPolicy )
            {
            // InternalDockerCompose.g:11353:2: ( ruleRestartPolicy )
            // InternalDockerCompose.g:11354:3: ruleRestartPolicy
            {
             before(grammarAccess.getServiceAccess().getRestartRestartPolicyEnumRuleCall_3_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleRestartPolicy();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getRestartRestartPolicyEnumRuleCall_3_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__RestartAssignment_3_4_1"


    // $ANTLR start "rule__Service__InitAssignment_3_5_1"
    // InternalDockerCompose.g:11363:1: rule__Service__InitAssignment_3_5_1 : ( ruleEBoolean ) ;
    public final void rule__Service__InitAssignment_3_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11367:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:11368:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:11368:2: ( ruleEBoolean )
            // InternalDockerCompose.g:11369:3: ruleEBoolean
            {
             before(grammarAccess.getServiceAccess().getInitEBooleanParserRuleCall_3_5_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getInitEBooleanParserRuleCall_3_5_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__InitAssignment_3_5_1"


    // $ANTLR start "rule__Service__Read_onlyAssignment_3_6_1"
    // InternalDockerCompose.g:11378:1: rule__Service__Read_onlyAssignment_3_6_1 : ( ruleEBoolean ) ;
    public final void rule__Service__Read_onlyAssignment_3_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11382:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:11383:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:11383:2: ( ruleEBoolean )
            // InternalDockerCompose.g:11384:3: ruleEBoolean
            {
             before(grammarAccess.getServiceAccess().getRead_onlyEBooleanParserRuleCall_3_6_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getRead_onlyEBooleanParserRuleCall_3_6_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Read_onlyAssignment_3_6_1"


    // $ANTLR start "rule__Service__Depends_onAssignment_3_7_1_1"
    // InternalDockerCompose.g:11393:1: rule__Service__Depends_onAssignment_3_7_1_1 : ( ruleDependency ) ;
    public final void rule__Service__Depends_onAssignment_3_7_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11397:1: ( ( ruleDependency ) )
            // InternalDockerCompose.g:11398:2: ( ruleDependency )
            {
            // InternalDockerCompose.g:11398:2: ( ruleDependency )
            // InternalDockerCompose.g:11399:3: ruleDependency
            {
             before(grammarAccess.getServiceAccess().getDepends_onDependencyParserRuleCall_3_7_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDependency();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getDepends_onDependencyParserRuleCall_3_7_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__Depends_onAssignment_3_7_1_1"


    // $ANTLR start "rule__Service__NetworksAssignment_3_8_1_0"
    // InternalDockerCompose.g:11408:1: rule__Service__NetworksAssignment_3_8_1_0 : ( ruleNetworkConnector_short ) ;
    public final void rule__Service__NetworksAssignment_3_8_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11412:1: ( ( ruleNetworkConnector_short ) )
            // InternalDockerCompose.g:11413:2: ( ruleNetworkConnector_short )
            {
            // InternalDockerCompose.g:11413:2: ( ruleNetworkConnector_short )
            // InternalDockerCompose.g:11414:3: ruleNetworkConnector_short
            {
             before(grammarAccess.getServiceAccess().getNetworksNetworkConnector_shortParserRuleCall_3_8_1_0_0()); 
            pushFollow(FOLLOW_2);
            ruleNetworkConnector_short();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getNetworksNetworkConnector_shortParserRuleCall_3_8_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__NetworksAssignment_3_8_1_0"


    // $ANTLR start "rule__Service__NetworksAssignment_3_8_1_1"
    // InternalDockerCompose.g:11423:1: rule__Service__NetworksAssignment_3_8_1_1 : ( ruleNetworkConnector_long ) ;
    public final void rule__Service__NetworksAssignment_3_8_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11427:1: ( ( ruleNetworkConnector_long ) )
            // InternalDockerCompose.g:11428:2: ( ruleNetworkConnector_long )
            {
            // InternalDockerCompose.g:11428:2: ( ruleNetworkConnector_long )
            // InternalDockerCompose.g:11429:3: ruleNetworkConnector_long
            {
             before(grammarAccess.getServiceAccess().getNetworksNetworkConnector_longParserRuleCall_3_8_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNetworkConnector_long();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getNetworksNetworkConnector_longParserRuleCall_3_8_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__NetworksAssignment_3_8_1_1"


    // $ANTLR start "rule__Service__VolumesAssignment_3_9_1_0_1"
    // InternalDockerCompose.g:11438:1: rule__Service__VolumesAssignment_3_9_1_0_1 : ( ruleVolumeConnector_short ) ;
    public final void rule__Service__VolumesAssignment_3_9_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11442:1: ( ( ruleVolumeConnector_short ) )
            // InternalDockerCompose.g:11443:2: ( ruleVolumeConnector_short )
            {
            // InternalDockerCompose.g:11443:2: ( ruleVolumeConnector_short )
            // InternalDockerCompose.g:11444:3: ruleVolumeConnector_short
            {
             before(grammarAccess.getServiceAccess().getVolumesVolumeConnector_shortParserRuleCall_3_9_1_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleVolumeConnector_short();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getVolumesVolumeConnector_shortParserRuleCall_3_9_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__VolumesAssignment_3_9_1_0_1"


    // $ANTLR start "rule__Service__VolumesAssignment_3_9_1_1_1"
    // InternalDockerCompose.g:11453:1: rule__Service__VolumesAssignment_3_9_1_1_1 : ( ruleVolumeConnector_long ) ;
    public final void rule__Service__VolumesAssignment_3_9_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11457:1: ( ( ruleVolumeConnector_long ) )
            // InternalDockerCompose.g:11458:2: ( ruleVolumeConnector_long )
            {
            // InternalDockerCompose.g:11458:2: ( ruleVolumeConnector_long )
            // InternalDockerCompose.g:11459:3: ruleVolumeConnector_long
            {
             before(grammarAccess.getServiceAccess().getVolumesVolumeConnector_longParserRuleCall_3_9_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleVolumeConnector_long();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getVolumesVolumeConnector_longParserRuleCall_3_9_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__VolumesAssignment_3_9_1_1_1"


    // $ANTLR start "rule__Service__ConfigsAssignment_3_10_1_0_1"
    // InternalDockerCompose.g:11468:1: rule__Service__ConfigsAssignment_3_10_1_0_1 : ( ruleConfigConnector_short ) ;
    public final void rule__Service__ConfigsAssignment_3_10_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11472:1: ( ( ruleConfigConnector_short ) )
            // InternalDockerCompose.g:11473:2: ( ruleConfigConnector_short )
            {
            // InternalDockerCompose.g:11473:2: ( ruleConfigConnector_short )
            // InternalDockerCompose.g:11474:3: ruleConfigConnector_short
            {
             before(grammarAccess.getServiceAccess().getConfigsConfigConnector_shortParserRuleCall_3_10_1_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleConfigConnector_short();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getConfigsConfigConnector_shortParserRuleCall_3_10_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__ConfigsAssignment_3_10_1_0_1"


    // $ANTLR start "rule__Service__ConfigsAssignment_3_10_1_1_1"
    // InternalDockerCompose.g:11483:1: rule__Service__ConfigsAssignment_3_10_1_1_1 : ( ruleConfigConnector_long ) ;
    public final void rule__Service__ConfigsAssignment_3_10_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11487:1: ( ( ruleConfigConnector_long ) )
            // InternalDockerCompose.g:11488:2: ( ruleConfigConnector_long )
            {
            // InternalDockerCompose.g:11488:2: ( ruleConfigConnector_long )
            // InternalDockerCompose.g:11489:3: ruleConfigConnector_long
            {
             before(grammarAccess.getServiceAccess().getConfigsConfigConnector_longParserRuleCall_3_10_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleConfigConnector_long();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getConfigsConfigConnector_longParserRuleCall_3_10_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__ConfigsAssignment_3_10_1_1_1"


    // $ANTLR start "rule__Service__SecretsAssignment_3_11_1_0_1"
    // InternalDockerCompose.g:11498:1: rule__Service__SecretsAssignment_3_11_1_0_1 : ( ruleSecretConnector_short ) ;
    public final void rule__Service__SecretsAssignment_3_11_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11502:1: ( ( ruleSecretConnector_short ) )
            // InternalDockerCompose.g:11503:2: ( ruleSecretConnector_short )
            {
            // InternalDockerCompose.g:11503:2: ( ruleSecretConnector_short )
            // InternalDockerCompose.g:11504:3: ruleSecretConnector_short
            {
             before(grammarAccess.getServiceAccess().getSecretsSecretConnector_shortParserRuleCall_3_11_1_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSecretConnector_short();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getSecretsSecretConnector_shortParserRuleCall_3_11_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__SecretsAssignment_3_11_1_0_1"


    // $ANTLR start "rule__Service__SecretsAssignment_3_11_1_1_1"
    // InternalDockerCompose.g:11513:1: rule__Service__SecretsAssignment_3_11_1_1_1 : ( ruleSecretConnector_long ) ;
    public final void rule__Service__SecretsAssignment_3_11_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11517:1: ( ( ruleSecretConnector_long ) )
            // InternalDockerCompose.g:11518:2: ( ruleSecretConnector_long )
            {
            // InternalDockerCompose.g:11518:2: ( ruleSecretConnector_long )
            // InternalDockerCompose.g:11519:3: ruleSecretConnector_long
            {
             before(grammarAccess.getServiceAccess().getSecretsSecretConnector_longParserRuleCall_3_11_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleSecretConnector_long();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getSecretsSecretConnector_longParserRuleCall_3_11_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__SecretsAssignment_3_11_1_1_1"


    // $ANTLR start "rule__Service__DevicesAssignment_3_12_1_1"
    // InternalDockerCompose.g:11528:1: rule__Service__DevicesAssignment_3_12_1_1 : ( ruleDevice ) ;
    public final void rule__Service__DevicesAssignment_3_12_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11532:1: ( ( ruleDevice ) )
            // InternalDockerCompose.g:11533:2: ( ruleDevice )
            {
            // InternalDockerCompose.g:11533:2: ( ruleDevice )
            // InternalDockerCompose.g:11534:3: ruleDevice
            {
             before(grammarAccess.getServiceAccess().getDevicesDeviceParserRuleCall_3_12_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDevice();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getDevicesDeviceParserRuleCall_3_12_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__DevicesAssignment_3_12_1_1"


    // $ANTLR start "rule__Service__DnsAssignment_3_13_1_0_1"
    // InternalDockerCompose.g:11543:1: rule__Service__DnsAssignment_3_13_1_0_1 : ( ruleDNS ) ;
    public final void rule__Service__DnsAssignment_3_13_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11547:1: ( ( ruleDNS ) )
            // InternalDockerCompose.g:11548:2: ( ruleDNS )
            {
            // InternalDockerCompose.g:11548:2: ( ruleDNS )
            // InternalDockerCompose.g:11549:3: ruleDNS
            {
             before(grammarAccess.getServiceAccess().getDnsDNSParserRuleCall_3_13_1_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getDnsDNSParserRuleCall_3_13_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__DnsAssignment_3_13_1_0_1"


    // $ANTLR start "rule__Service__DnsAssignment_3_13_1_1"
    // InternalDockerCompose.g:11558:1: rule__Service__DnsAssignment_3_13_1_1 : ( ruleDNS ) ;
    public final void rule__Service__DnsAssignment_3_13_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11562:1: ( ( ruleDNS ) )
            // InternalDockerCompose.g:11563:2: ( ruleDNS )
            {
            // InternalDockerCompose.g:11563:2: ( ruleDNS )
            // InternalDockerCompose.g:11564:3: ruleDNS
            {
             before(grammarAccess.getServiceAccess().getDnsDNSParserRuleCall_3_13_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getDnsDNSParserRuleCall_3_13_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__DnsAssignment_3_13_1_1"


    // $ANTLR start "rule__Service__PortsAssignment_3_14_1_1"
    // InternalDockerCompose.g:11573:1: rule__Service__PortsAssignment_3_14_1_1 : ( rulePort ) ;
    public final void rule__Service__PortsAssignment_3_14_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11577:1: ( ( rulePort ) )
            // InternalDockerCompose.g:11578:2: ( rulePort )
            {
            // InternalDockerCompose.g:11578:2: ( rulePort )
            // InternalDockerCompose.g:11579:3: rulePort
            {
             before(grammarAccess.getServiceAccess().getPortsPortParserRuleCall_3_14_1_1_0()); 
            pushFollow(FOLLOW_2);
            rulePort();

            state._fsp--;

             after(grammarAccess.getServiceAccess().getPortsPortParserRuleCall_3_14_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Service__PortsAssignment_3_14_1_1"


    // $ANTLR start "rule__Port__ValueAssignment_1"
    // InternalDockerCompose.g:11588:1: rule__Port__ValueAssignment_1 : ( RULE_PORT_DEF ) ;
    public final void rule__Port__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11592:1: ( ( RULE_PORT_DEF ) )
            // InternalDockerCompose.g:11593:2: ( RULE_PORT_DEF )
            {
            // InternalDockerCompose.g:11593:2: ( RULE_PORT_DEF )
            // InternalDockerCompose.g:11594:3: RULE_PORT_DEF
            {
             before(grammarAccess.getPortAccess().getValuePORT_DEFTerminalRuleCall_1_0()); 
            match(input,RULE_PORT_DEF,FOLLOW_2); 
             after(grammarAccess.getPortAccess().getValuePORT_DEFTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Port__ValueAssignment_1"


    // $ANTLR start "rule__Device__ValueAssignment_1"
    // InternalDockerCompose.g:11603:1: rule__Device__ValueAssignment_1 : ( RULE_DEVICE_DEF ) ;
    public final void rule__Device__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11607:1: ( ( RULE_DEVICE_DEF ) )
            // InternalDockerCompose.g:11608:2: ( RULE_DEVICE_DEF )
            {
            // InternalDockerCompose.g:11608:2: ( RULE_DEVICE_DEF )
            // InternalDockerCompose.g:11609:3: RULE_DEVICE_DEF
            {
             before(grammarAccess.getDeviceAccess().getValueDEVICE_DEFTerminalRuleCall_1_0()); 
            match(input,RULE_DEVICE_DEF,FOLLOW_2); 
             after(grammarAccess.getDeviceAccess().getValueDEVICE_DEFTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Device__ValueAssignment_1"


    // $ANTLR start "rule__Dependency__ServiceAssignment_1"
    // InternalDockerCompose.g:11618:1: rule__Dependency__ServiceAssignment_1 : ( ( ruleEString ) ) ;
    public final void rule__Dependency__ServiceAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11622:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:11623:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:11623:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:11624:3: ( ruleEString )
            {
             before(grammarAccess.getDependencyAccess().getServiceServiceCrossReference_1_0()); 
            // InternalDockerCompose.g:11625:3: ( ruleEString )
            // InternalDockerCompose.g:11626:4: ruleEString
            {
             before(grammarAccess.getDependencyAccess().getServiceServiceEStringParserRuleCall_1_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getDependencyAccess().getServiceServiceEStringParserRuleCall_1_0_1()); 

            }

             after(grammarAccess.getDependencyAccess().getServiceServiceCrossReference_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dependency__ServiceAssignment_1"


    // $ANTLR start "rule__NetworkConnector_short__NetworkAssignment_2"
    // InternalDockerCompose.g:11637:1: rule__NetworkConnector_short__NetworkAssignment_2 : ( ( ruleEString ) ) ;
    public final void rule__NetworkConnector_short__NetworkAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11641:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:11642:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:11642:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:11643:3: ( ruleEString )
            {
             before(grammarAccess.getNetworkConnector_shortAccess().getNetworkNetworkCrossReference_2_0()); 
            // InternalDockerCompose.g:11644:3: ( ruleEString )
            // InternalDockerCompose.g:11645:4: ruleEString
            {
             before(grammarAccess.getNetworkConnector_shortAccess().getNetworkNetworkEStringParserRuleCall_2_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkConnector_shortAccess().getNetworkNetworkEStringParserRuleCall_2_0_1()); 

            }

             after(grammarAccess.getNetworkConnector_shortAccess().getNetworkNetworkCrossReference_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_short__NetworkAssignment_2"


    // $ANTLR start "rule__NetworkConnector_long__NetworkAssignment_1"
    // InternalDockerCompose.g:11656:1: rule__NetworkConnector_long__NetworkAssignment_1 : ( ( ruleEString ) ) ;
    public final void rule__NetworkConnector_long__NetworkAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11660:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:11661:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:11661:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:11662:3: ( ruleEString )
            {
             before(grammarAccess.getNetworkConnector_longAccess().getNetworkNetworkCrossReference_1_0()); 
            // InternalDockerCompose.g:11663:3: ( ruleEString )
            // InternalDockerCompose.g:11664:4: ruleEString
            {
             before(grammarAccess.getNetworkConnector_longAccess().getNetworkNetworkEStringParserRuleCall_1_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkConnector_longAccess().getNetworkNetworkEStringParserRuleCall_1_0_1()); 

            }

             after(grammarAccess.getNetworkConnector_longAccess().getNetworkNetworkCrossReference_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__NetworkAssignment_1"


    // $ANTLR start "rule__NetworkConnector_long__Ipv4_addressAssignment_3_0_1"
    // InternalDockerCompose.g:11675:1: rule__NetworkConnector_long__Ipv4_addressAssignment_3_0_1 : ( ruleDNS ) ;
    public final void rule__NetworkConnector_long__Ipv4_addressAssignment_3_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11679:1: ( ( ruleDNS ) )
            // InternalDockerCompose.g:11680:2: ( ruleDNS )
            {
            // InternalDockerCompose.g:11680:2: ( ruleDNS )
            // InternalDockerCompose.g:11681:3: ruleDNS
            {
             before(grammarAccess.getNetworkConnector_longAccess().getIpv4_addressDNSParserRuleCall_3_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getNetworkConnector_longAccess().getIpv4_addressDNSParserRuleCall_3_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Ipv4_addressAssignment_3_0_1"


    // $ANTLR start "rule__NetworkConnector_long__PriorityAssignment_3_1_1"
    // InternalDockerCompose.g:11690:1: rule__NetworkConnector_long__PriorityAssignment_3_1_1 : ( ruleEInt ) ;
    public final void rule__NetworkConnector_long__PriorityAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11694:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:11695:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:11695:2: ( ruleEInt )
            // InternalDockerCompose.g:11696:3: ruleEInt
            {
             before(grammarAccess.getNetworkConnector_longAccess().getPriorityEIntParserRuleCall_3_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getNetworkConnector_longAccess().getPriorityEIntParserRuleCall_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__PriorityAssignment_3_1_1"


    // $ANTLR start "rule__NetworkConnector_long__AliasesAssignment_3_2_1_1"
    // InternalDockerCompose.g:11705:1: rule__NetworkConnector_long__AliasesAssignment_3_2_1_1 : ( ruleAlias ) ;
    public final void rule__NetworkConnector_long__AliasesAssignment_3_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11709:1: ( ( ruleAlias ) )
            // InternalDockerCompose.g:11710:2: ( ruleAlias )
            {
            // InternalDockerCompose.g:11710:2: ( ruleAlias )
            // InternalDockerCompose.g:11711:3: ruleAlias
            {
             before(grammarAccess.getNetworkConnector_longAccess().getAliasesAliasParserRuleCall_3_2_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleAlias();

            state._fsp--;

             after(grammarAccess.getNetworkConnector_longAccess().getAliasesAliasParserRuleCall_3_2_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__AliasesAssignment_3_2_1_1"


    // $ANTLR start "rule__NetworkConnector_long__Link_local_ipsAssignment_3_3_1_1"
    // InternalDockerCompose.g:11720:1: rule__NetworkConnector_long__Link_local_ipsAssignment_3_3_1_1 : ( ruleDNS ) ;
    public final void rule__NetworkConnector_long__Link_local_ipsAssignment_3_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11724:1: ( ( ruleDNS ) )
            // InternalDockerCompose.g:11725:2: ( ruleDNS )
            {
            // InternalDockerCompose.g:11725:2: ( ruleDNS )
            // InternalDockerCompose.g:11726:3: ruleDNS
            {
             before(grammarAccess.getNetworkConnector_longAccess().getLink_local_ipsDNSParserRuleCall_3_3_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getNetworkConnector_longAccess().getLink_local_ipsDNSParserRuleCall_3_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkConnector_long__Link_local_ipsAssignment_3_3_1_1"


    // $ANTLR start "rule__Alias__AliasAssignment_1"
    // InternalDockerCompose.g:11735:1: rule__Alias__AliasAssignment_1 : ( ruleEString ) ;
    public final void rule__Alias__AliasAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11739:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:11740:2: ( ruleEString )
            {
            // InternalDockerCompose.g:11740:2: ( ruleEString )
            // InternalDockerCompose.g:11741:3: ruleEString
            {
             before(grammarAccess.getAliasAccess().getAliasEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getAliasAccess().getAliasEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Alias__AliasAssignment_1"


    // $ANTLR start "rule__VolumeConnector_short__VolumeAssignment_1"
    // InternalDockerCompose.g:11750:1: rule__VolumeConnector_short__VolumeAssignment_1 : ( ( ruleEString ) ) ;
    public final void rule__VolumeConnector_short__VolumeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11754:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:11755:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:11755:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:11756:3: ( ruleEString )
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getVolumeVolumeCrossReference_1_0()); 
            // InternalDockerCompose.g:11757:3: ( ruleEString )
            // InternalDockerCompose.g:11758:4: ruleEString
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getVolumeVolumeEStringParserRuleCall_1_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_shortAccess().getVolumeVolumeEStringParserRuleCall_1_0_1()); 

            }

             after(grammarAccess.getVolumeConnector_shortAccess().getVolumeVolumeCrossReference_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__VolumeAssignment_1"


    // $ANTLR start "rule__VolumeConnector_short__Container_pathAssignment_3"
    // InternalDockerCompose.g:11769:1: rule__VolumeConnector_short__Container_pathAssignment_3 : ( rulePATH ) ;
    public final void rule__VolumeConnector_short__Container_pathAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11773:1: ( ( rulePATH ) )
            // InternalDockerCompose.g:11774:2: ( rulePATH )
            {
            // InternalDockerCompose.g:11774:2: ( rulePATH )
            // InternalDockerCompose.g:11775:3: rulePATH
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getContainer_pathPATHParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_shortAccess().getContainer_pathPATHParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Container_pathAssignment_3"


    // $ANTLR start "rule__VolumeConnector_short__Access_modeAssignment_4_1"
    // InternalDockerCompose.g:11784:1: rule__VolumeConnector_short__Access_modeAssignment_4_1 : ( ruleAccessMode ) ;
    public final void rule__VolumeConnector_short__Access_modeAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11788:1: ( ( ruleAccessMode ) )
            // InternalDockerCompose.g:11789:2: ( ruleAccessMode )
            {
            // InternalDockerCompose.g:11789:2: ( ruleAccessMode )
            // InternalDockerCompose.g:11790:3: ruleAccessMode
            {
             before(grammarAccess.getVolumeConnector_shortAccess().getAccess_modeAccessModeEnumRuleCall_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleAccessMode();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_shortAccess().getAccess_modeAccessModeEnumRuleCall_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_short__Access_modeAssignment_4_1"


    // $ANTLR start "rule__VolumeConnector_long__VolumeAssignment_1_0_1"
    // InternalDockerCompose.g:11799:1: rule__VolumeConnector_long__VolumeAssignment_1_0_1 : ( ( ruleEString ) ) ;
    public final void rule__VolumeConnector_long__VolumeAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11803:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:11804:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:11804:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:11805:3: ( ruleEString )
            {
             before(grammarAccess.getVolumeConnector_longAccess().getVolumeVolumeCrossReference_1_0_1_0()); 
            // InternalDockerCompose.g:11806:3: ( ruleEString )
            // InternalDockerCompose.g:11807:4: ruleEString
            {
             before(grammarAccess.getVolumeConnector_longAccess().getVolumeVolumeEStringParserRuleCall_1_0_1_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_longAccess().getVolumeVolumeEStringParserRuleCall_1_0_1_0_1()); 

            }

             after(grammarAccess.getVolumeConnector_longAccess().getVolumeVolumeCrossReference_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__VolumeAssignment_1_0_1"


    // $ANTLR start "rule__VolumeConnector_long__TypeAssignment_1_1_1"
    // InternalDockerCompose.g:11818:1: rule__VolumeConnector_long__TypeAssignment_1_1_1 : ( ruleMountType ) ;
    public final void rule__VolumeConnector_long__TypeAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11822:1: ( ( ruleMountType ) )
            // InternalDockerCompose.g:11823:2: ( ruleMountType )
            {
            // InternalDockerCompose.g:11823:2: ( ruleMountType )
            // InternalDockerCompose.g:11824:3: ruleMountType
            {
             before(grammarAccess.getVolumeConnector_longAccess().getTypeMountTypeEnumRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleMountType();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_longAccess().getTypeMountTypeEnumRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__TypeAssignment_1_1_1"


    // $ANTLR start "rule__VolumeConnector_long__Container_pathAssignment_1_2_1"
    // InternalDockerCompose.g:11833:1: rule__VolumeConnector_long__Container_pathAssignment_1_2_1 : ( rulePATH ) ;
    public final void rule__VolumeConnector_long__Container_pathAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11837:1: ( ( rulePATH ) )
            // InternalDockerCompose.g:11838:2: ( rulePATH )
            {
            // InternalDockerCompose.g:11838:2: ( rulePATH )
            // InternalDockerCompose.g:11839:3: rulePATH
            {
             before(grammarAccess.getVolumeConnector_longAccess().getContainer_pathPATHParserRuleCall_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_longAccess().getContainer_pathPATHParserRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Container_pathAssignment_1_2_1"


    // $ANTLR start "rule__VolumeConnector_long__Read_onlyAssignment_1_3_1"
    // InternalDockerCompose.g:11848:1: rule__VolumeConnector_long__Read_onlyAssignment_1_3_1 : ( ruleEBoolean ) ;
    public final void rule__VolumeConnector_long__Read_onlyAssignment_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11852:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:11853:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:11853:2: ( ruleEBoolean )
            // InternalDockerCompose.g:11854:3: ruleEBoolean
            {
             before(grammarAccess.getVolumeConnector_longAccess().getRead_onlyEBooleanParserRuleCall_1_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_longAccess().getRead_onlyEBooleanParserRuleCall_1_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__Read_onlyAssignment_1_3_1"


    // $ANTLR start "rule__VolumeConnector_long__PropagationAssignment_1_4_2"
    // InternalDockerCompose.g:11863:1: rule__VolumeConnector_long__PropagationAssignment_1_4_2 : ( rulePropagationType ) ;
    public final void rule__VolumeConnector_long__PropagationAssignment_1_4_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11867:1: ( ( rulePropagationType ) )
            // InternalDockerCompose.g:11868:2: ( rulePropagationType )
            {
            // InternalDockerCompose.g:11868:2: ( rulePropagationType )
            // InternalDockerCompose.g:11869:3: rulePropagationType
            {
             before(grammarAccess.getVolumeConnector_longAccess().getPropagationPropagationTypeEnumRuleCall_1_4_2_0()); 
            pushFollow(FOLLOW_2);
            rulePropagationType();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_longAccess().getPropagationPropagationTypeEnumRuleCall_1_4_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__PropagationAssignment_1_4_2"


    // $ANTLR start "rule__VolumeConnector_long__NocopyAssignment_1_5_2"
    // InternalDockerCompose.g:11878:1: rule__VolumeConnector_long__NocopyAssignment_1_5_2 : ( ruleEBoolean ) ;
    public final void rule__VolumeConnector_long__NocopyAssignment_1_5_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11882:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:11883:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:11883:2: ( ruleEBoolean )
            // InternalDockerCompose.g:11884:3: ruleEBoolean
            {
             before(grammarAccess.getVolumeConnector_longAccess().getNocopyEBooleanParserRuleCall_1_5_2_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_longAccess().getNocopyEBooleanParserRuleCall_1_5_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__NocopyAssignment_1_5_2"


    // $ANTLR start "rule__VolumeConnector_long__SizeAssignment_1_6_2"
    // InternalDockerCompose.g:11893:1: rule__VolumeConnector_long__SizeAssignment_1_6_2 : ( ruleEInt ) ;
    public final void rule__VolumeConnector_long__SizeAssignment_1_6_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11897:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:11898:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:11898:2: ( ruleEInt )
            // InternalDockerCompose.g:11899:3: ruleEInt
            {
             before(grammarAccess.getVolumeConnector_longAccess().getSizeEIntParserRuleCall_1_6_2_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getVolumeConnector_longAccess().getSizeEIntParserRuleCall_1_6_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeConnector_long__SizeAssignment_1_6_2"


    // $ANTLR start "rule__ConfigConnector_short__ConfigAssignment_1"
    // InternalDockerCompose.g:11908:1: rule__ConfigConnector_short__ConfigAssignment_1 : ( ( ruleEString ) ) ;
    public final void rule__ConfigConnector_short__ConfigAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11912:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:11913:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:11913:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:11914:3: ( ruleEString )
            {
             before(grammarAccess.getConfigConnector_shortAccess().getConfigConfigCrossReference_1_0()); 
            // InternalDockerCompose.g:11915:3: ( ruleEString )
            // InternalDockerCompose.g:11916:4: ruleEString
            {
             before(grammarAccess.getConfigConnector_shortAccess().getConfigConfigEStringParserRuleCall_1_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getConfigConnector_shortAccess().getConfigConfigEStringParserRuleCall_1_0_1()); 

            }

             after(grammarAccess.getConfigConnector_shortAccess().getConfigConfigCrossReference_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_short__ConfigAssignment_1"


    // $ANTLR start "rule__ConfigConnector_long__ConfigAssignment_1_0_1"
    // InternalDockerCompose.g:11927:1: rule__ConfigConnector_long__ConfigAssignment_1_0_1 : ( ( ruleEString ) ) ;
    public final void rule__ConfigConnector_long__ConfigAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11931:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:11932:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:11932:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:11933:3: ( ruleEString )
            {
             before(grammarAccess.getConfigConnector_longAccess().getConfigConfigCrossReference_1_0_1_0()); 
            // InternalDockerCompose.g:11934:3: ( ruleEString )
            // InternalDockerCompose.g:11935:4: ruleEString
            {
             before(grammarAccess.getConfigConnector_longAccess().getConfigConfigEStringParserRuleCall_1_0_1_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getConfigConnector_longAccess().getConfigConfigEStringParserRuleCall_1_0_1_0_1()); 

            }

             after(grammarAccess.getConfigConnector_longAccess().getConfigConfigCrossReference_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__ConfigAssignment_1_0_1"


    // $ANTLR start "rule__ConfigConnector_long__TargetAssignment_1_1_1"
    // InternalDockerCompose.g:11946:1: rule__ConfigConnector_long__TargetAssignment_1_1_1 : ( rulePATH ) ;
    public final void rule__ConfigConnector_long__TargetAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11950:1: ( ( rulePATH ) )
            // InternalDockerCompose.g:11951:2: ( rulePATH )
            {
            // InternalDockerCompose.g:11951:2: ( rulePATH )
            // InternalDockerCompose.g:11952:3: rulePATH
            {
             before(grammarAccess.getConfigConnector_longAccess().getTargetPATHParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getConfigConnector_longAccess().getTargetPATHParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__TargetAssignment_1_1_1"


    // $ANTLR start "rule__ConfigConnector_long__UidAssignment_1_2_1"
    // InternalDockerCompose.g:11961:1: rule__ConfigConnector_long__UidAssignment_1_2_1 : ( RULE_QUOTED_INT ) ;
    public final void rule__ConfigConnector_long__UidAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11965:1: ( ( RULE_QUOTED_INT ) )
            // InternalDockerCompose.g:11966:2: ( RULE_QUOTED_INT )
            {
            // InternalDockerCompose.g:11966:2: ( RULE_QUOTED_INT )
            // InternalDockerCompose.g:11967:3: RULE_QUOTED_INT
            {
             before(grammarAccess.getConfigConnector_longAccess().getUidQUOTED_INTTerminalRuleCall_1_2_1_0()); 
            match(input,RULE_QUOTED_INT,FOLLOW_2); 
             after(grammarAccess.getConfigConnector_longAccess().getUidQUOTED_INTTerminalRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__UidAssignment_1_2_1"


    // $ANTLR start "rule__ConfigConnector_long__GidAssignment_1_3_1"
    // InternalDockerCompose.g:11976:1: rule__ConfigConnector_long__GidAssignment_1_3_1 : ( RULE_QUOTED_INT ) ;
    public final void rule__ConfigConnector_long__GidAssignment_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11980:1: ( ( RULE_QUOTED_INT ) )
            // InternalDockerCompose.g:11981:2: ( RULE_QUOTED_INT )
            {
            // InternalDockerCompose.g:11981:2: ( RULE_QUOTED_INT )
            // InternalDockerCompose.g:11982:3: RULE_QUOTED_INT
            {
             before(grammarAccess.getConfigConnector_longAccess().getGidQUOTED_INTTerminalRuleCall_1_3_1_0()); 
            match(input,RULE_QUOTED_INT,FOLLOW_2); 
             after(grammarAccess.getConfigConnector_longAccess().getGidQUOTED_INTTerminalRuleCall_1_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__GidAssignment_1_3_1"


    // $ANTLR start "rule__ConfigConnector_long__ModeAssignment_1_4_1"
    // InternalDockerCompose.g:11991:1: rule__ConfigConnector_long__ModeAssignment_1_4_1 : ( ruleEInt ) ;
    public final void rule__ConfigConnector_long__ModeAssignment_1_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:11995:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:11996:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:11996:2: ( ruleEInt )
            // InternalDockerCompose.g:11997:3: ruleEInt
            {
             before(grammarAccess.getConfigConnector_longAccess().getModeEIntParserRuleCall_1_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getConfigConnector_longAccess().getModeEIntParserRuleCall_1_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConfigConnector_long__ModeAssignment_1_4_1"


    // $ANTLR start "rule__SecretConnector_short__SecretAssignment_1"
    // InternalDockerCompose.g:12006:1: rule__SecretConnector_short__SecretAssignment_1 : ( ( ruleEString ) ) ;
    public final void rule__SecretConnector_short__SecretAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12010:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:12011:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:12011:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:12012:3: ( ruleEString )
            {
             before(grammarAccess.getSecretConnector_shortAccess().getSecretSecretCrossReference_1_0()); 
            // InternalDockerCompose.g:12013:3: ( ruleEString )
            // InternalDockerCompose.g:12014:4: ruleEString
            {
             before(grammarAccess.getSecretConnector_shortAccess().getSecretSecretEStringParserRuleCall_1_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getSecretConnector_shortAccess().getSecretSecretEStringParserRuleCall_1_0_1()); 

            }

             after(grammarAccess.getSecretConnector_shortAccess().getSecretSecretCrossReference_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_short__SecretAssignment_1"


    // $ANTLR start "rule__SecretConnector_long__SecretAssignment_1_0_1"
    // InternalDockerCompose.g:12025:1: rule__SecretConnector_long__SecretAssignment_1_0_1 : ( ( ruleEString ) ) ;
    public final void rule__SecretConnector_long__SecretAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12029:1: ( ( ( ruleEString ) ) )
            // InternalDockerCompose.g:12030:2: ( ( ruleEString ) )
            {
            // InternalDockerCompose.g:12030:2: ( ( ruleEString ) )
            // InternalDockerCompose.g:12031:3: ( ruleEString )
            {
             before(grammarAccess.getSecretConnector_longAccess().getSecretSecretCrossReference_1_0_1_0()); 
            // InternalDockerCompose.g:12032:3: ( ruleEString )
            // InternalDockerCompose.g:12033:4: ruleEString
            {
             before(grammarAccess.getSecretConnector_longAccess().getSecretSecretEStringParserRuleCall_1_0_1_0_1()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getSecretConnector_longAccess().getSecretSecretEStringParserRuleCall_1_0_1_0_1()); 

            }

             after(grammarAccess.getSecretConnector_longAccess().getSecretSecretCrossReference_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__SecretAssignment_1_0_1"


    // $ANTLR start "rule__SecretConnector_long__TargetAssignment_1_1_1"
    // InternalDockerCompose.g:12044:1: rule__SecretConnector_long__TargetAssignment_1_1_1 : ( rulePATH ) ;
    public final void rule__SecretConnector_long__TargetAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12048:1: ( ( rulePATH ) )
            // InternalDockerCompose.g:12049:2: ( rulePATH )
            {
            // InternalDockerCompose.g:12049:2: ( rulePATH )
            // InternalDockerCompose.g:12050:3: rulePATH
            {
             before(grammarAccess.getSecretConnector_longAccess().getTargetPATHParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            rulePATH();

            state._fsp--;

             after(grammarAccess.getSecretConnector_longAccess().getTargetPATHParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__TargetAssignment_1_1_1"


    // $ANTLR start "rule__SecretConnector_long__UidAssignment_1_2_1"
    // InternalDockerCompose.g:12059:1: rule__SecretConnector_long__UidAssignment_1_2_1 : ( RULE_QUOTED_INT ) ;
    public final void rule__SecretConnector_long__UidAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12063:1: ( ( RULE_QUOTED_INT ) )
            // InternalDockerCompose.g:12064:2: ( RULE_QUOTED_INT )
            {
            // InternalDockerCompose.g:12064:2: ( RULE_QUOTED_INT )
            // InternalDockerCompose.g:12065:3: RULE_QUOTED_INT
            {
             before(grammarAccess.getSecretConnector_longAccess().getUidQUOTED_INTTerminalRuleCall_1_2_1_0()); 
            match(input,RULE_QUOTED_INT,FOLLOW_2); 
             after(grammarAccess.getSecretConnector_longAccess().getUidQUOTED_INTTerminalRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__UidAssignment_1_2_1"


    // $ANTLR start "rule__SecretConnector_long__GidAssignment_1_3_1"
    // InternalDockerCompose.g:12074:1: rule__SecretConnector_long__GidAssignment_1_3_1 : ( RULE_QUOTED_INT ) ;
    public final void rule__SecretConnector_long__GidAssignment_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12078:1: ( ( RULE_QUOTED_INT ) )
            // InternalDockerCompose.g:12079:2: ( RULE_QUOTED_INT )
            {
            // InternalDockerCompose.g:12079:2: ( RULE_QUOTED_INT )
            // InternalDockerCompose.g:12080:3: RULE_QUOTED_INT
            {
             before(grammarAccess.getSecretConnector_longAccess().getGidQUOTED_INTTerminalRuleCall_1_3_1_0()); 
            match(input,RULE_QUOTED_INT,FOLLOW_2); 
             after(grammarAccess.getSecretConnector_longAccess().getGidQUOTED_INTTerminalRuleCall_1_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__GidAssignment_1_3_1"


    // $ANTLR start "rule__SecretConnector_long__ModeAssignment_1_4_1"
    // InternalDockerCompose.g:12089:1: rule__SecretConnector_long__ModeAssignment_1_4_1 : ( ruleEInt ) ;
    public final void rule__SecretConnector_long__ModeAssignment_1_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12093:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:12094:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:12094:2: ( ruleEInt )
            // InternalDockerCompose.g:12095:3: ruleEInt
            {
             before(grammarAccess.getSecretConnector_longAccess().getModeEIntParserRuleCall_1_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getSecretConnector_longAccess().getModeEIntParserRuleCall_1_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SecretConnector_long__ModeAssignment_1_4_1"


    // $ANTLR start "rule__Network__NameAssignment_1"
    // InternalDockerCompose.g:12104:1: rule__Network__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__Network__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12108:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12109:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12109:2: ( ruleEString )
            // InternalDockerCompose.g:12110:3: ruleEString
            {
             before(grammarAccess.getNetworkAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__NameAssignment_1"


    // $ANTLR start "rule__Network__DriverAssignment_3_1_0_1"
    // InternalDockerCompose.g:12119:1: rule__Network__DriverAssignment_3_1_0_1 : ( ruleEString ) ;
    public final void rule__Network__DriverAssignment_3_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12123:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12124:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12124:2: ( ruleEString )
            // InternalDockerCompose.g:12125:3: ruleEString
            {
             before(grammarAccess.getNetworkAccess().getDriverEStringParserRuleCall_3_1_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getDriverEStringParserRuleCall_3_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__DriverAssignment_3_1_0_1"


    // $ANTLR start "rule__Network__AttachableAssignment_3_1_1_1"
    // InternalDockerCompose.g:12134:1: rule__Network__AttachableAssignment_3_1_1_1 : ( ruleEBoolean ) ;
    public final void rule__Network__AttachableAssignment_3_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12138:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:12139:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:12139:2: ( ruleEBoolean )
            // InternalDockerCompose.g:12140:3: ruleEBoolean
            {
             before(grammarAccess.getNetworkAccess().getAttachableEBooleanParserRuleCall_3_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getAttachableEBooleanParserRuleCall_3_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__AttachableAssignment_3_1_1_1"


    // $ANTLR start "rule__Network__Enable_ipv6Assignment_3_1_2_1"
    // InternalDockerCompose.g:12149:1: rule__Network__Enable_ipv6Assignment_3_1_2_1 : ( ruleEBoolean ) ;
    public final void rule__Network__Enable_ipv6Assignment_3_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12153:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:12154:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:12154:2: ( ruleEBoolean )
            // InternalDockerCompose.g:12155:3: ruleEBoolean
            {
             before(grammarAccess.getNetworkAccess().getEnable_ipv6EBooleanParserRuleCall_3_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getEnable_ipv6EBooleanParserRuleCall_3_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Enable_ipv6Assignment_3_1_2_1"


    // $ANTLR start "rule__Network__InternalAssignment_3_1_3_1"
    // InternalDockerCompose.g:12164:1: rule__Network__InternalAssignment_3_1_3_1 : ( ruleEBoolean ) ;
    public final void rule__Network__InternalAssignment_3_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12168:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:12169:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:12169:2: ( ruleEBoolean )
            // InternalDockerCompose.g:12170:3: ruleEBoolean
            {
             before(grammarAccess.getNetworkAccess().getInternalEBooleanParserRuleCall_3_1_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getInternalEBooleanParserRuleCall_3_1_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__InternalAssignment_3_1_3_1"


    // $ANTLR start "rule__Network__ExternalAssignment_3_1_4_1"
    // InternalDockerCompose.g:12179:1: rule__Network__ExternalAssignment_3_1_4_1 : ( ruleEBoolean ) ;
    public final void rule__Network__ExternalAssignment_3_1_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12183:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:12184:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:12184:2: ( ruleEBoolean )
            // InternalDockerCompose.g:12185:3: ruleEBoolean
            {
             before(grammarAccess.getNetworkAccess().getExternalEBooleanParserRuleCall_3_1_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getExternalEBooleanParserRuleCall_3_1_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__ExternalAssignment_3_1_4_1"


    // $ANTLR start "rule__Network__Network_nameAssignment_3_1_5_1"
    // InternalDockerCompose.g:12194:1: rule__Network__Network_nameAssignment_3_1_5_1 : ( ruleEString ) ;
    public final void rule__Network__Network_nameAssignment_3_1_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12198:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12199:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12199:2: ( ruleEString )
            // InternalDockerCompose.g:12200:3: ruleEString
            {
             before(grammarAccess.getNetworkAccess().getNetwork_nameEStringParserRuleCall_3_1_5_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getNetwork_nameEStringParserRuleCall_3_1_5_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Network_nameAssignment_3_1_5_1"


    // $ANTLR start "rule__Network__LabelsAssignment_3_1_6_1"
    // InternalDockerCompose.g:12209:1: rule__Network__LabelsAssignment_3_1_6_1 : ( ruleNetworkLabel ) ;
    public final void rule__Network__LabelsAssignment_3_1_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12213:1: ( ( ruleNetworkLabel ) )
            // InternalDockerCompose.g:12214:2: ( ruleNetworkLabel )
            {
            // InternalDockerCompose.g:12214:2: ( ruleNetworkLabel )
            // InternalDockerCompose.g:12215:3: ruleNetworkLabel
            {
             before(grammarAccess.getNetworkAccess().getLabelsNetworkLabelParserRuleCall_3_1_6_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNetworkLabel();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getLabelsNetworkLabelParserRuleCall_3_1_6_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__LabelsAssignment_3_1_6_1"


    // $ANTLR start "rule__Network__Driver_optsAssignment_3_1_7_1"
    // InternalDockerCompose.g:12224:1: rule__Network__Driver_optsAssignment_3_1_7_1 : ( ruleNetworkDriverOpt ) ;
    public final void rule__Network__Driver_optsAssignment_3_1_7_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12228:1: ( ( ruleNetworkDriverOpt ) )
            // InternalDockerCompose.g:12229:2: ( ruleNetworkDriverOpt )
            {
            // InternalDockerCompose.g:12229:2: ( ruleNetworkDriverOpt )
            // InternalDockerCompose.g:12230:3: ruleNetworkDriverOpt
            {
             before(grammarAccess.getNetworkAccess().getDriver_optsNetworkDriverOptParserRuleCall_3_1_7_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNetworkDriverOpt();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getDriver_optsNetworkDriverOptParserRuleCall_3_1_7_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__Driver_optsAssignment_3_1_7_1"


    // $ANTLR start "rule__Network__IpamAssignment_3_1_8_1"
    // InternalDockerCompose.g:12239:1: rule__Network__IpamAssignment_3_1_8_1 : ( ruleIPAM ) ;
    public final void rule__Network__IpamAssignment_3_1_8_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12243:1: ( ( ruleIPAM ) )
            // InternalDockerCompose.g:12244:2: ( ruleIPAM )
            {
            // InternalDockerCompose.g:12244:2: ( ruleIPAM )
            // InternalDockerCompose.g:12245:3: ruleIPAM
            {
             before(grammarAccess.getNetworkAccess().getIpamIPAMParserRuleCall_3_1_8_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIPAM();

            state._fsp--;

             after(grammarAccess.getNetworkAccess().getIpamIPAMParserRuleCall_3_1_8_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Network__IpamAssignment_3_1_8_1"


    // $ANTLR start "rule__Volume__NameAssignment_1"
    // InternalDockerCompose.g:12254:1: rule__Volume__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__Volume__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12258:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12259:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12259:2: ( ruleEString )
            // InternalDockerCompose.g:12260:3: ruleEString
            {
             before(grammarAccess.getVolumeAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__NameAssignment_1"


    // $ANTLR start "rule__Volume__ExternalAssignment_3_0_1"
    // InternalDockerCompose.g:12269:1: rule__Volume__ExternalAssignment_3_0_1 : ( ruleEBoolean ) ;
    public final void rule__Volume__ExternalAssignment_3_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12273:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:12274:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:12274:2: ( ruleEBoolean )
            // InternalDockerCompose.g:12275:3: ruleEBoolean
            {
             before(grammarAccess.getVolumeAccess().getExternalEBooleanParserRuleCall_3_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getVolumeAccess().getExternalEBooleanParserRuleCall_3_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__ExternalAssignment_3_0_1"


    // $ANTLR start "rule__Volume__DriverAssignment_3_1_1"
    // InternalDockerCompose.g:12284:1: rule__Volume__DriverAssignment_3_1_1 : ( ruleEString ) ;
    public final void rule__Volume__DriverAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12288:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12289:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12289:2: ( ruleEString )
            // InternalDockerCompose.g:12290:3: ruleEString
            {
             before(grammarAccess.getVolumeAccess().getDriverEStringParserRuleCall_3_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeAccess().getDriverEStringParserRuleCall_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__DriverAssignment_3_1_1"


    // $ANTLR start "rule__Volume__Volume_nameAssignment_3_2_1"
    // InternalDockerCompose.g:12299:1: rule__Volume__Volume_nameAssignment_3_2_1 : ( ruleEString ) ;
    public final void rule__Volume__Volume_nameAssignment_3_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12303:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12304:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12304:2: ( ruleEString )
            // InternalDockerCompose.g:12305:3: ruleEString
            {
             before(grammarAccess.getVolumeAccess().getVolume_nameEStringParserRuleCall_3_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeAccess().getVolume_nameEStringParserRuleCall_3_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Volume_nameAssignment_3_2_1"


    // $ANTLR start "rule__Volume__LabelsAssignment_3_3_1"
    // InternalDockerCompose.g:12314:1: rule__Volume__LabelsAssignment_3_3_1 : ( ruleVolumeLabel ) ;
    public final void rule__Volume__LabelsAssignment_3_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12318:1: ( ( ruleVolumeLabel ) )
            // InternalDockerCompose.g:12319:2: ( ruleVolumeLabel )
            {
            // InternalDockerCompose.g:12319:2: ( ruleVolumeLabel )
            // InternalDockerCompose.g:12320:3: ruleVolumeLabel
            {
             before(grammarAccess.getVolumeAccess().getLabelsVolumeLabelParserRuleCall_3_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleVolumeLabel();

            state._fsp--;

             after(grammarAccess.getVolumeAccess().getLabelsVolumeLabelParserRuleCall_3_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__LabelsAssignment_3_3_1"


    // $ANTLR start "rule__Volume__Driver_optsAssignment_3_4_1"
    // InternalDockerCompose.g:12329:1: rule__Volume__Driver_optsAssignment_3_4_1 : ( ruleVolumeDriverOpt ) ;
    public final void rule__Volume__Driver_optsAssignment_3_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12333:1: ( ( ruleVolumeDriverOpt ) )
            // InternalDockerCompose.g:12334:2: ( ruleVolumeDriverOpt )
            {
            // InternalDockerCompose.g:12334:2: ( ruleVolumeDriverOpt )
            // InternalDockerCompose.g:12335:3: ruleVolumeDriverOpt
            {
             before(grammarAccess.getVolumeAccess().getDriver_optsVolumeDriverOptParserRuleCall_3_4_1_0()); 
            pushFollow(FOLLOW_2);
            ruleVolumeDriverOpt();

            state._fsp--;

             after(grammarAccess.getVolumeAccess().getDriver_optsVolumeDriverOptParserRuleCall_3_4_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Volume__Driver_optsAssignment_3_4_1"


    // $ANTLR start "rule__Config__NameAssignment_1"
    // InternalDockerCompose.g:12344:1: rule__Config__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__Config__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12348:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12349:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12349:2: ( ruleEString )
            // InternalDockerCompose.g:12350:3: ruleEString
            {
             before(grammarAccess.getConfigAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getConfigAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__NameAssignment_1"


    // $ANTLR start "rule__Config__ExternalAssignment_3_0_1"
    // InternalDockerCompose.g:12359:1: rule__Config__ExternalAssignment_3_0_1 : ( ruleEBoolean ) ;
    public final void rule__Config__ExternalAssignment_3_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12363:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:12364:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:12364:2: ( ruleEBoolean )
            // InternalDockerCompose.g:12365:3: ruleEBoolean
            {
             before(grammarAccess.getConfigAccess().getExternalEBooleanParserRuleCall_3_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getConfigAccess().getExternalEBooleanParserRuleCall_3_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__ExternalAssignment_3_0_1"


    // $ANTLR start "rule__Config__FileAssignment_3_1_1"
    // InternalDockerCompose.g:12374:1: rule__Config__FileAssignment_3_1_1 : ( ruleEString ) ;
    public final void rule__Config__FileAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12378:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12379:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12379:2: ( ruleEString )
            // InternalDockerCompose.g:12380:3: ruleEString
            {
             before(grammarAccess.getConfigAccess().getFileEStringParserRuleCall_3_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getConfigAccess().getFileEStringParserRuleCall_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__FileAssignment_3_1_1"


    // $ANTLR start "rule__Config__Config_nameAssignment_3_2_1"
    // InternalDockerCompose.g:12389:1: rule__Config__Config_nameAssignment_3_2_1 : ( ruleEString ) ;
    public final void rule__Config__Config_nameAssignment_3_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12393:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12394:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12394:2: ( ruleEString )
            // InternalDockerCompose.g:12395:3: ruleEString
            {
             before(grammarAccess.getConfigAccess().getConfig_nameEStringParserRuleCall_3_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getConfigAccess().getConfig_nameEStringParserRuleCall_3_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Config__Config_nameAssignment_3_2_1"


    // $ANTLR start "rule__Secret__NameAssignment_1"
    // InternalDockerCompose.g:12404:1: rule__Secret__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__Secret__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12408:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12409:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12409:2: ( ruleEString )
            // InternalDockerCompose.g:12410:3: ruleEString
            {
             before(grammarAccess.getSecretAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getSecretAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__NameAssignment_1"


    // $ANTLR start "rule__Secret__ExternalAssignment_3_0_1"
    // InternalDockerCompose.g:12419:1: rule__Secret__ExternalAssignment_3_0_1 : ( ruleEBoolean ) ;
    public final void rule__Secret__ExternalAssignment_3_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12423:1: ( ( ruleEBoolean ) )
            // InternalDockerCompose.g:12424:2: ( ruleEBoolean )
            {
            // InternalDockerCompose.g:12424:2: ( ruleEBoolean )
            // InternalDockerCompose.g:12425:3: ruleEBoolean
            {
             before(grammarAccess.getSecretAccess().getExternalEBooleanParserRuleCall_3_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;

             after(grammarAccess.getSecretAccess().getExternalEBooleanParserRuleCall_3_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__ExternalAssignment_3_0_1"


    // $ANTLR start "rule__Secret__FileAssignment_3_1_1"
    // InternalDockerCompose.g:12434:1: rule__Secret__FileAssignment_3_1_1 : ( ruleEString ) ;
    public final void rule__Secret__FileAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12438:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12439:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12439:2: ( ruleEString )
            // InternalDockerCompose.g:12440:3: ruleEString
            {
             before(grammarAccess.getSecretAccess().getFileEStringParserRuleCall_3_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getSecretAccess().getFileEStringParserRuleCall_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__FileAssignment_3_1_1"


    // $ANTLR start "rule__Secret__EnvironmentAssignment_3_2_1"
    // InternalDockerCompose.g:12449:1: rule__Secret__EnvironmentAssignment_3_2_1 : ( ruleEString ) ;
    public final void rule__Secret__EnvironmentAssignment_3_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12453:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12454:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12454:2: ( ruleEString )
            // InternalDockerCompose.g:12455:3: ruleEString
            {
             before(grammarAccess.getSecretAccess().getEnvironmentEStringParserRuleCall_3_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getSecretAccess().getEnvironmentEStringParserRuleCall_3_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__EnvironmentAssignment_3_2_1"


    // $ANTLR start "rule__Secret__Secret_nameAssignment_3_3_1"
    // InternalDockerCompose.g:12464:1: rule__Secret__Secret_nameAssignment_3_3_1 : ( ruleEString ) ;
    public final void rule__Secret__Secret_nameAssignment_3_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12468:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12469:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12469:2: ( ruleEString )
            // InternalDockerCompose.g:12470:3: ruleEString
            {
             before(grammarAccess.getSecretAccess().getSecret_nameEStringParserRuleCall_3_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getSecretAccess().getSecret_nameEStringParserRuleCall_3_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Secret__Secret_nameAssignment_3_3_1"


    // $ANTLR start "rule__VolumeLabel__NameAssignment_1"
    // InternalDockerCompose.g:12479:1: rule__VolumeLabel__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__VolumeLabel__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12483:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12484:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12484:2: ( ruleEString )
            // InternalDockerCompose.g:12485:3: ruleEString
            {
             before(grammarAccess.getVolumeLabelAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeLabelAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__NameAssignment_1"


    // $ANTLR start "rule__VolumeLabel__ValueAssignment_3"
    // InternalDockerCompose.g:12494:1: rule__VolumeLabel__ValueAssignment_3 : ( ruleEString ) ;
    public final void rule__VolumeLabel__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12498:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12499:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12499:2: ( ruleEString )
            // InternalDockerCompose.g:12500:3: ruleEString
            {
             before(grammarAccess.getVolumeLabelAccess().getValueEStringParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeLabelAccess().getValueEStringParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeLabel__ValueAssignment_3"


    // $ANTLR start "rule__VolumeDriverOpt__NameAssignment_1"
    // InternalDockerCompose.g:12509:1: rule__VolumeDriverOpt__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__VolumeDriverOpt__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12513:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12514:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12514:2: ( ruleEString )
            // InternalDockerCompose.g:12515:3: ruleEString
            {
             before(grammarAccess.getVolumeDriverOptAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeDriverOptAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__NameAssignment_1"


    // $ANTLR start "rule__VolumeDriverOpt__ValueAssignment_3"
    // InternalDockerCompose.g:12524:1: rule__VolumeDriverOpt__ValueAssignment_3 : ( ruleEString ) ;
    public final void rule__VolumeDriverOpt__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12528:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12529:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12529:2: ( ruleEString )
            // InternalDockerCompose.g:12530:3: ruleEString
            {
             before(grammarAccess.getVolumeDriverOptAccess().getValueEStringParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getVolumeDriverOptAccess().getValueEStringParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VolumeDriverOpt__ValueAssignment_3"


    // $ANTLR start "rule__NetworkLabel__NameAssignment_1"
    // InternalDockerCompose.g:12539:1: rule__NetworkLabel__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__NetworkLabel__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12543:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12544:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12544:2: ( ruleEString )
            // InternalDockerCompose.g:12545:3: ruleEString
            {
             before(grammarAccess.getNetworkLabelAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkLabelAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__NameAssignment_1"


    // $ANTLR start "rule__NetworkLabel__ValueAssignment_3"
    // InternalDockerCompose.g:12554:1: rule__NetworkLabel__ValueAssignment_3 : ( ruleEString ) ;
    public final void rule__NetworkLabel__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12558:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12559:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12559:2: ( ruleEString )
            // InternalDockerCompose.g:12560:3: ruleEString
            {
             before(grammarAccess.getNetworkLabelAccess().getValueEStringParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkLabelAccess().getValueEStringParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkLabel__ValueAssignment_3"


    // $ANTLR start "rule__NetworkDriverOpt__NameAssignment_1"
    // InternalDockerCompose.g:12569:1: rule__NetworkDriverOpt__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__NetworkDriverOpt__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12573:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12574:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12574:2: ( ruleEString )
            // InternalDockerCompose.g:12575:3: ruleEString
            {
             before(grammarAccess.getNetworkDriverOptAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkDriverOptAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__NameAssignment_1"


    // $ANTLR start "rule__NetworkDriverOpt__ValueAssignment_3"
    // InternalDockerCompose.g:12584:1: rule__NetworkDriverOpt__ValueAssignment_3 : ( ruleEString ) ;
    public final void rule__NetworkDriverOpt__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12588:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12589:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12589:2: ( ruleEString )
            // InternalDockerCompose.g:12590:3: ruleEString
            {
             before(grammarAccess.getNetworkDriverOptAccess().getValueEStringParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getNetworkDriverOptAccess().getValueEStringParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkDriverOpt__ValueAssignment_3"


    // $ANTLR start "rule__IPAM__DriverAssignment_1_0_1"
    // InternalDockerCompose.g:12599:1: rule__IPAM__DriverAssignment_1_0_1 : ( ruleEString ) ;
    public final void rule__IPAM__DriverAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12603:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12604:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12604:2: ( ruleEString )
            // InternalDockerCompose.g:12605:3: ruleEString
            {
             before(grammarAccess.getIPAMAccess().getDriverEStringParserRuleCall_1_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getIPAMAccess().getDriverEStringParserRuleCall_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__DriverAssignment_1_0_1"


    // $ANTLR start "rule__IPAM__ConfigsAssignment_1_1_1_1"
    // InternalDockerCompose.g:12614:1: rule__IPAM__ConfigsAssignment_1_1_1_1 : ( ruleIPAMConfig ) ;
    public final void rule__IPAM__ConfigsAssignment_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12618:1: ( ( ruleIPAMConfig ) )
            // InternalDockerCompose.g:12619:2: ( ruleIPAMConfig )
            {
            // InternalDockerCompose.g:12619:2: ( ruleIPAMConfig )
            // InternalDockerCompose.g:12620:3: ruleIPAMConfig
            {
             before(grammarAccess.getIPAMAccess().getConfigsIPAMConfigParserRuleCall_1_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIPAMConfig();

            state._fsp--;

             after(grammarAccess.getIPAMAccess().getConfigsIPAMConfigParserRuleCall_1_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__ConfigsAssignment_1_1_1_1"


    // $ANTLR start "rule__IPAM__OptionsAssignment_1_2_1"
    // InternalDockerCompose.g:12629:1: rule__IPAM__OptionsAssignment_1_2_1 : ( ruleIPAMOption ) ;
    public final void rule__IPAM__OptionsAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12633:1: ( ( ruleIPAMOption ) )
            // InternalDockerCompose.g:12634:2: ( ruleIPAMOption )
            {
            // InternalDockerCompose.g:12634:2: ( ruleIPAMOption )
            // InternalDockerCompose.g:12635:3: ruleIPAMOption
            {
             before(grammarAccess.getIPAMAccess().getOptionsIPAMOptionParserRuleCall_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIPAMOption();

            state._fsp--;

             after(grammarAccess.getIPAMAccess().getOptionsIPAMOptionParserRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAM__OptionsAssignment_1_2_1"


    // $ANTLR start "rule__IPAMConfig__SubnetAssignment_1_0_1"
    // InternalDockerCompose.g:12644:1: rule__IPAMConfig__SubnetAssignment_1_0_1 : ( ruleNetworkAddress ) ;
    public final void rule__IPAMConfig__SubnetAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12648:1: ( ( ruleNetworkAddress ) )
            // InternalDockerCompose.g:12649:2: ( ruleNetworkAddress )
            {
            // InternalDockerCompose.g:12649:2: ( ruleNetworkAddress )
            // InternalDockerCompose.g:12650:3: ruleNetworkAddress
            {
             before(grammarAccess.getIPAMConfigAccess().getSubnetNetworkAddressParserRuleCall_1_0_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNetworkAddress();

            state._fsp--;

             after(grammarAccess.getIPAMConfigAccess().getSubnetNetworkAddressParserRuleCall_1_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__SubnetAssignment_1_0_1"


    // $ANTLR start "rule__IPAMConfig__Ip_rangeAssignment_1_1_1"
    // InternalDockerCompose.g:12659:1: rule__IPAMConfig__Ip_rangeAssignment_1_1_1 : ( ruleNetworkAddress ) ;
    public final void rule__IPAMConfig__Ip_rangeAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12663:1: ( ( ruleNetworkAddress ) )
            // InternalDockerCompose.g:12664:2: ( ruleNetworkAddress )
            {
            // InternalDockerCompose.g:12664:2: ( ruleNetworkAddress )
            // InternalDockerCompose.g:12665:3: ruleNetworkAddress
            {
             before(grammarAccess.getIPAMConfigAccess().getIp_rangeNetworkAddressParserRuleCall_1_1_1_0()); 
            pushFollow(FOLLOW_2);
            ruleNetworkAddress();

            state._fsp--;

             after(grammarAccess.getIPAMConfigAccess().getIp_rangeNetworkAddressParserRuleCall_1_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Ip_rangeAssignment_1_1_1"


    // $ANTLR start "rule__IPAMConfig__GatewayAssignment_1_2_1"
    // InternalDockerCompose.g:12674:1: rule__IPAMConfig__GatewayAssignment_1_2_1 : ( ruleDNS ) ;
    public final void rule__IPAMConfig__GatewayAssignment_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12678:1: ( ( ruleDNS ) )
            // InternalDockerCompose.g:12679:2: ( ruleDNS )
            {
            // InternalDockerCompose.g:12679:2: ( ruleDNS )
            // InternalDockerCompose.g:12680:3: ruleDNS
            {
             before(grammarAccess.getIPAMConfigAccess().getGatewayDNSParserRuleCall_1_2_1_0()); 
            pushFollow(FOLLOW_2);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getIPAMConfigAccess().getGatewayDNSParserRuleCall_1_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__GatewayAssignment_1_2_1"


    // $ANTLR start "rule__IPAMConfig__Aux_addressesAssignment_1_3_1"
    // InternalDockerCompose.g:12689:1: rule__IPAMConfig__Aux_addressesAssignment_1_3_1 : ( ruleIPAMAddress ) ;
    public final void rule__IPAMConfig__Aux_addressesAssignment_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12693:1: ( ( ruleIPAMAddress ) )
            // InternalDockerCompose.g:12694:2: ( ruleIPAMAddress )
            {
            // InternalDockerCompose.g:12694:2: ( ruleIPAMAddress )
            // InternalDockerCompose.g:12695:3: ruleIPAMAddress
            {
             before(grammarAccess.getIPAMConfigAccess().getAux_addressesIPAMAddressParserRuleCall_1_3_1_0()); 
            pushFollow(FOLLOW_2);
            ruleIPAMAddress();

            state._fsp--;

             after(grammarAccess.getIPAMConfigAccess().getAux_addressesIPAMAddressParserRuleCall_1_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMConfig__Aux_addressesAssignment_1_3_1"


    // $ANTLR start "rule__IPAMOption__NameAssignment_1"
    // InternalDockerCompose.g:12704:1: rule__IPAMOption__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__IPAMOption__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12708:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12709:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12709:2: ( ruleEString )
            // InternalDockerCompose.g:12710:3: ruleEString
            {
             before(grammarAccess.getIPAMOptionAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getIPAMOptionAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__NameAssignment_1"


    // $ANTLR start "rule__IPAMOption__ValueAssignment_3"
    // InternalDockerCompose.g:12719:1: rule__IPAMOption__ValueAssignment_3 : ( ruleEString ) ;
    public final void rule__IPAMOption__ValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12723:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12724:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12724:2: ( ruleEString )
            // InternalDockerCompose.g:12725:3: ruleEString
            {
             before(grammarAccess.getIPAMOptionAccess().getValueEStringParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getIPAMOptionAccess().getValueEStringParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMOption__ValueAssignment_3"


    // $ANTLR start "rule__IPAMAddress__NameAssignment_1"
    // InternalDockerCompose.g:12734:1: rule__IPAMAddress__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__IPAMAddress__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12738:1: ( ( ruleEString ) )
            // InternalDockerCompose.g:12739:2: ( ruleEString )
            {
            // InternalDockerCompose.g:12739:2: ( ruleEString )
            // InternalDockerCompose.g:12740:3: ruleEString
            {
             before(grammarAccess.getIPAMAddressAccess().getNameEStringParserRuleCall_1_0()); 
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;

             after(grammarAccess.getIPAMAddressAccess().getNameEStringParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__NameAssignment_1"


    // $ANTLR start "rule__IPAMAddress__DnsAssignment_3"
    // InternalDockerCompose.g:12749:1: rule__IPAMAddress__DnsAssignment_3 : ( ruleDNS ) ;
    public final void rule__IPAMAddress__DnsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12753:1: ( ( ruleDNS ) )
            // InternalDockerCompose.g:12754:2: ( ruleDNS )
            {
            // InternalDockerCompose.g:12754:2: ( ruleDNS )
            // InternalDockerCompose.g:12755:3: ruleDNS
            {
             before(grammarAccess.getIPAMAddressAccess().getDnsDNSParserRuleCall_3_0()); 
            pushFollow(FOLLOW_2);
            ruleDNS();

            state._fsp--;

             after(grammarAccess.getIPAMAddressAccess().getDnsDNSParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IPAMAddress__DnsAssignment_3"


    // $ANTLR start "rule__DNS__Dns1Assignment_0"
    // InternalDockerCompose.g:12764:1: rule__DNS__Dns1Assignment_0 : ( ruleEInt ) ;
    public final void rule__DNS__Dns1Assignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12768:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:12769:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:12769:2: ( ruleEInt )
            // InternalDockerCompose.g:12770:3: ruleEInt
            {
             before(grammarAccess.getDNSAccess().getDns1EIntParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getDNSAccess().getDns1EIntParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Dns1Assignment_0"


    // $ANTLR start "rule__DNS__Dns2Assignment_2"
    // InternalDockerCompose.g:12779:1: rule__DNS__Dns2Assignment_2 : ( ruleEInt ) ;
    public final void rule__DNS__Dns2Assignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12783:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:12784:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:12784:2: ( ruleEInt )
            // InternalDockerCompose.g:12785:3: ruleEInt
            {
             before(grammarAccess.getDNSAccess().getDns2EIntParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getDNSAccess().getDns2EIntParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Dns2Assignment_2"


    // $ANTLR start "rule__DNS__Dns3Assignment_4"
    // InternalDockerCompose.g:12794:1: rule__DNS__Dns3Assignment_4 : ( ruleEInt ) ;
    public final void rule__DNS__Dns3Assignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12798:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:12799:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:12799:2: ( ruleEInt )
            // InternalDockerCompose.g:12800:3: ruleEInt
            {
             before(grammarAccess.getDNSAccess().getDns3EIntParserRuleCall_4_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getDNSAccess().getDns3EIntParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Dns3Assignment_4"


    // $ANTLR start "rule__DNS__Dns4Assignment_6"
    // InternalDockerCompose.g:12809:1: rule__DNS__Dns4Assignment_6 : ( ruleEInt ) ;
    public final void rule__DNS__Dns4Assignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12813:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:12814:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:12814:2: ( ruleEInt )
            // InternalDockerCompose.g:12815:3: ruleEInt
            {
             before(grammarAccess.getDNSAccess().getDns4EIntParserRuleCall_6_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getDNSAccess().getDns4EIntParserRuleCall_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DNS__Dns4Assignment_6"


    // $ANTLR start "rule__NetworkAddress__Dns1Assignment_0"
    // InternalDockerCompose.g:12824:1: rule__NetworkAddress__Dns1Assignment_0 : ( ruleEInt ) ;
    public final void rule__NetworkAddress__Dns1Assignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12828:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:12829:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:12829:2: ( ruleEInt )
            // InternalDockerCompose.g:12830:3: ruleEInt
            {
             before(grammarAccess.getNetworkAddressAccess().getDns1EIntParserRuleCall_0_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getNetworkAddressAccess().getDns1EIntParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Dns1Assignment_0"


    // $ANTLR start "rule__NetworkAddress__Dns2Assignment_2"
    // InternalDockerCompose.g:12839:1: rule__NetworkAddress__Dns2Assignment_2 : ( ruleEInt ) ;
    public final void rule__NetworkAddress__Dns2Assignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12843:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:12844:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:12844:2: ( ruleEInt )
            // InternalDockerCompose.g:12845:3: ruleEInt
            {
             before(grammarAccess.getNetworkAddressAccess().getDns2EIntParserRuleCall_2_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getNetworkAddressAccess().getDns2EIntParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Dns2Assignment_2"


    // $ANTLR start "rule__NetworkAddress__Dns3Assignment_4"
    // InternalDockerCompose.g:12854:1: rule__NetworkAddress__Dns3Assignment_4 : ( ruleEInt ) ;
    public final void rule__NetworkAddress__Dns3Assignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12858:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:12859:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:12859:2: ( ruleEInt )
            // InternalDockerCompose.g:12860:3: ruleEInt
            {
             before(grammarAccess.getNetworkAddressAccess().getDns3EIntParserRuleCall_4_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getNetworkAddressAccess().getDns3EIntParserRuleCall_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Dns3Assignment_4"


    // $ANTLR start "rule__NetworkAddress__Dns4Assignment_6"
    // InternalDockerCompose.g:12869:1: rule__NetworkAddress__Dns4Assignment_6 : ( ruleEInt ) ;
    public final void rule__NetworkAddress__Dns4Assignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12873:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:12874:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:12874:2: ( ruleEInt )
            // InternalDockerCompose.g:12875:3: ruleEInt
            {
             before(grammarAccess.getNetworkAddressAccess().getDns4EIntParserRuleCall_6_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getNetworkAddressAccess().getDns4EIntParserRuleCall_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__Dns4Assignment_6"


    // $ANTLR start "rule__NetworkAddress__NetIdAssignment_8"
    // InternalDockerCompose.g:12884:1: rule__NetworkAddress__NetIdAssignment_8 : ( ruleEInt ) ;
    public final void rule__NetworkAddress__NetIdAssignment_8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalDockerCompose.g:12888:1: ( ( ruleEInt ) )
            // InternalDockerCompose.g:12889:2: ( ruleEInt )
            {
            // InternalDockerCompose.g:12889:2: ( ruleEInt )
            // InternalDockerCompose.g:12890:3: ruleEInt
            {
             before(grammarAccess.getNetworkAddressAccess().getNetIdEIntParserRuleCall_8_0()); 
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;

             after(grammarAccess.getNetworkAddressAccess().getNetIdEIntParserRuleCall_8_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NetworkAddress__NetIdAssignment_8"

    // Delegated rules


    protected DFA3 dfa3 = new DFA3(this);
    protected DFA52 dfa52 = new DFA52(this);
    protected DFA53 dfa53 = new DFA53(this);
    protected DFA54 dfa54 = new DFA54(this);
    protected DFA55 dfa55 = new DFA55(this);
    protected DFA56 dfa56 = new DFA56(this);
    protected DFA57 dfa57 = new DFA57(this);
    protected DFA58 dfa58 = new DFA58(this);
    protected DFA59 dfa59 = new DFA59(this);
    protected DFA60 dfa60 = new DFA60(this);
    protected DFA61 dfa61 = new DFA61(this);
    protected DFA62 dfa62 = new DFA62(this);
    protected DFA63 dfa63 = new DFA63(this);
    protected DFA64 dfa64 = new DFA64(this);
    protected DFA65 dfa65 = new DFA65(this);
    protected DFA66 dfa66 = new DFA66(this);
    protected DFA73 dfa73 = new DFA73(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA75 dfa75 = new DFA75(this);
    protected DFA76 dfa76 = new DFA76(this);
    protected DFA77 dfa77 = new DFA77(this);
    protected DFA78 dfa78 = new DFA78(this);
    protected DFA89 dfa89 = new DFA89(this);
    protected DFA90 dfa90 = new DFA90(this);
    protected DFA91 dfa91 = new DFA91(this);
    protected DFA92 dfa92 = new DFA92(this);
    protected DFA93 dfa93 = new DFA93(this);
    protected DFA94 dfa94 = new DFA94(this);
    protected DFA95 dfa95 = new DFA95(this);
    protected DFA96 dfa96 = new DFA96(this);
    protected DFA97 dfa97 = new DFA97(this);
    protected DFA98 dfa98 = new DFA98(this);
    static final String dfa_1s = "\171\uffff";
    static final String dfa_2s = "\1\1\3\uffff\1\5\164\uffff";
    static final String dfa_3s = "\1\5\1\uffff\2\50\1\5\1\uffff\1\5\1\4\2\5\1\21\2\17\1\62\4\5\1\62\1\4\1\62\17\uffff\2\5\2\50\3\5\1\11\1\4\1\131\1\10\5\uffff\2\50\1\5\1\30\1\uffff\1\17\1\76\1\100\1\102\2\uffff\1\5\1\uffff\2\12\1\4\1\5\1\uffff\2\12\1\4\3\uffff\1\131\1\4\12\uffff\1\34\1\17\1\4\12\uffff\1\4\1\131\11\uffff\1\131\2\4\2\131\2\4\2\uffff";
    static final String dfa_4s = "\1\65\1\uffff\2\50\1\71\1\uffff\1\6\1\4\2\6\1\24\2\20\10\62\17\uffff\2\6\2\50\1\101\2\105\1\11\1\4\1\131\1\10\5\uffff\2\50\1\6\1\33\1\uffff\1\20\1\76\1\100\1\102\2\uffff\1\6\1\uffff\2\12\1\4\1\6\1\uffff\2\12\1\4\3\uffff\1\131\1\4\12\uffff\1\41\1\20\1\4\12\uffff\1\4\1\131\11\uffff\1\131\2\4\2\131\2\4\2\uffff";
    static final String dfa_5s = "\1\uffff\1\2\3\uffff\1\1\17\uffff\17\1\13\uffff\5\1\4\uffff\1\1\4\uffff\2\1\1\uffff\1\1\4\uffff\1\1\3\uffff\3\1\2\uffff\12\1\3\uffff\12\1\2\uffff\11\1\7\uffff\2\1";
    static final String dfa_6s = "\171\uffff}>";
    static final String[] dfa_7s = {
            "\1\2\1\3\33\uffff\6\1\1\uffff\11\1\1\uffff\3\1",
            "",
            "\1\4",
            "\1\4",
            "\2\5\33\uffff\2\5\1\16\1\17\1\20\1\21\1\uffff\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\uffff\1\22\1\23\1\24\4\5",
            "",
            "\1\25\1\26",
            "\1\27",
            "\1\30\1\31",
            "\1\32\1\33",
            "\1\34\1\35\1\36\1\37",
            "\1\40\1\41",
            "\1\42\1\43",
            "\1\44",
            "\1\46\1\47\53\uffff\1\45",
            "\2\43\53\uffff\1\50",
            "\2\43\53\uffff\1\51",
            "\2\43\53\uffff\1\52",
            "\1\53",
            "\1\55\55\uffff\1\54",
            "\1\56",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\57\1\60",
            "\1\61\1\62",
            "\1\63",
            "\1\63",
            "\1\64\1\65\51\uffff\1\71\11\uffff\1\66\1\67\1\70\1\72\1\uffff\1\73\1\uffff\1\74",
            "\1\75\1\76\63\uffff\1\77\1\uffff\1\100\6\uffff\1\101\1\102\1\103",
            "\1\111\1\112\63\uffff\1\104\1\uffff\1\105\6\uffff\1\106\1\107\1\110",
            "\1\113",
            "\1\114",
            "\1\115",
            "\1\116",
            "",
            "",
            "",
            "",
            "",
            "\1\117",
            "\1\117",
            "\1\120\1\121",
            "\1\122\1\123\1\124\1\125",
            "",
            "\1\126\1\127",
            "\1\130",
            "\1\131",
            "\1\132",
            "",
            "",
            "\1\133\1\134",
            "",
            "\1\135",
            "\1\136",
            "\1\137",
            "\1\140\1\141",
            "",
            "\1\142",
            "\1\143",
            "\1\144",
            "",
            "",
            "",
            "\1\145",
            "\1\146",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\147\1\150\1\151\1\152\1\153\1\154",
            "\1\155\1\156",
            "\1\157",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\160",
            "\1\161",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\162",
            "\1\163",
            "\1\164",
            "\1\165",
            "\1\166",
            "\1\167",
            "\1\170",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA3 extends DFA {

        public DFA3(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 3;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "()* loopback of 988:4: ( rule__Service__NetworksAssignment_3_8_1_1 )*";
        }
    }
    static final String dfa_8s = "\20\uffff";
    static final String dfa_9s = "\1\44\17\uffff";
    static final String dfa_10s = "\1\65\17\uffff";
    static final String dfa_11s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17";
    static final String dfa_12s = "\1\0\17\uffff}>";
    static final String[] dfa_13s = {
            "\1\11\1\12\1\13\1\14\1\uffff\2\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\15\1\16\1\17",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA52 extends DFA {

        public DFA52(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 52;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "9141:3: ( ({...}? => ( ( ( rule__Service__Alternatives_3_0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_8__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_9__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_10__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_11__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_12__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_13__0 ) ) ) ) | ({...}? => ( ( ( rule__Service__Group_3_14__0 ) ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA52_0 = input.LA(1);

                         
                        int index52_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA52_0 >= 41 && LA52_0 <= 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA52_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA52_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA52_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA52_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA52_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA52_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA52_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA52_0 == 36 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( LA52_0 == 37 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 10;}

                        else if ( LA52_0 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 11;}

                        else if ( LA52_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 12;}

                        else if ( LA52_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA52_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA52_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                         
                        input.seek(index52_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 52, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_14s = "\30\uffff";
    static final String dfa_15s = "\1\20\27\uffff";
    static final String dfa_16s = "\1\5\10\uffff\4\5\4\uffff\2\50\4\uffff\1\0";
    static final String dfa_17s = "\1\65\10\uffff\4\62\4\uffff\2\50\4\uffff\1\0";
    static final String dfa_18s = "\1\uffff\10\1\4\uffff\3\1\1\2\2\uffff\4\1\1\uffff";
    static final String dfa_19s = "\1\3\10\uffff\1\5\1\2\1\1\1\0\12\uffff\1\4}>";
    static final String[] dfa_20s = {
            "\2\20\33\uffff\2\20\1\11\1\12\1\13\1\14\1\uffff\2\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\15\1\16\1\17",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\21\1\22\53\uffff\1\23",
            "\2\20\53\uffff\1\24",
            "\2\20\53\uffff\1\25",
            "\2\20\53\uffff\1\26",
            "",
            "",
            "",
            "",
            "\1\27",
            "\1\27",
            "",
            "",
            "",
            "",
            "\1\uffff"
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[][] dfa_20 = unpackEncodedStringArray(dfa_20s);

    class DFA53 extends DFA {

        public DFA53(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 53;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "9381:2: ( rule__Service__UnorderedGroup_3__1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA53_12 = input.LA(1);

                         
                        int index53_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA53_12>=RULE_STRING && LA53_12<=RULE_ID)) ) {s = 16;}

                        else if ( LA53_12 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index53_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA53_11 = input.LA(1);

                         
                        int index53_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA53_11 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                        else if ( ((LA53_11>=RULE_STRING && LA53_11<=RULE_ID)) ) {s = 16;}

                         
                        input.seek(index53_11);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA53_10 = input.LA(1);

                         
                        int index53_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA53_10 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                        else if ( ((LA53_10>=RULE_STRING && LA53_10<=RULE_ID)) ) {s = 16;}

                         
                        input.seek(index53_10);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA53_0 = input.LA(1);

                         
                        int index53_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA53_0 >= 41 && LA53_0 <= 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA53_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA53_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA53_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA53_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA53_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA53_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA53_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( (LA53_0==36) ) {s = 9;}

                        else if ( (LA53_0==37) ) {s = 10;}

                        else if ( (LA53_0==38) ) {s = 11;}

                        else if ( (LA53_0==39) ) {s = 12;}

                        else if ( LA53_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA53_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA53_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( (LA53_0==EOF||(LA53_0>=RULE_STRING && LA53_0<=RULE_ID)||(LA53_0>=34 && LA53_0<=35)) ) {s = 16;}

                         
                        input.seek(index53_0);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA53_23 = input.LA(1);

                         
                        int index53_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 22;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 16;}

                         
                        input.seek(index53_23);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA53_9 = input.LA(1);

                         
                        int index53_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA53_9==RULE_STRING) ) {s = 17;}

                        else if ( (LA53_9==RULE_ID) ) {s = 18;}

                        else if ( LA53_9 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 19;}

                         
                        input.seek(index53_9);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 53, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_21s = "\1\5\10\uffff\4\5\5\uffff\2\50\3\uffff\1\0";
    static final String dfa_22s = "\1\65\10\uffff\4\62\5\uffff\2\50\3\uffff\1\0";
    static final String dfa_23s = "\1\uffff\10\1\4\uffff\3\1\1\2\1\1\2\uffff\3\1\1\uffff";
    static final String dfa_24s = "\1\4\10\uffff\1\5\1\3\1\2\1\0\12\uffff\1\1}>";
    static final String[] dfa_25s = {
            "\2\20\33\uffff\2\20\1\11\1\12\1\13\1\14\1\uffff\2\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\15\1\16\1\17",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\22\1\23\53\uffff\1\21",
            "\2\20\53\uffff\1\24",
            "\2\20\53\uffff\1\25",
            "\2\20\53\uffff\1\26",
            "",
            "",
            "",
            "",
            "",
            "\1\27",
            "\1\27",
            "",
            "",
            "",
            "\1\uffff"
    };
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[][] dfa_25 = unpackEncodedStringArray(dfa_25s);

    class DFA54 extends DFA {

        public DFA54(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 54;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "9393:2: ( rule__Service__UnorderedGroup_3__2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA54_12 = input.LA(1);

                         
                        int index54_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA54_12>=RULE_STRING && LA54_12<=RULE_ID)) ) {s = 16;}

                        else if ( LA54_12 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index54_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA54_23 = input.LA(1);

                         
                        int index54_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 22;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 16;}

                         
                        input.seek(index54_23);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA54_11 = input.LA(1);

                         
                        int index54_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA54_11>=RULE_STRING && LA54_11<=RULE_ID)) ) {s = 16;}

                        else if ( LA54_11 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index54_11);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA54_10 = input.LA(1);

                         
                        int index54_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA54_10>=RULE_STRING && LA54_10<=RULE_ID)) ) {s = 16;}

                        else if ( LA54_10 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index54_10);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA54_0 = input.LA(1);

                         
                        int index54_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA54_0 >= 41 && LA54_0 <= 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA54_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA54_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA54_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA54_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA54_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA54_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA54_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( (LA54_0==36) ) {s = 9;}

                        else if ( (LA54_0==37) ) {s = 10;}

                        else if ( (LA54_0==38) ) {s = 11;}

                        else if ( (LA54_0==39) ) {s = 12;}

                        else if ( LA54_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA54_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA54_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( (LA54_0==EOF||(LA54_0>=RULE_STRING && LA54_0<=RULE_ID)||(LA54_0>=34 && LA54_0<=35)) ) {s = 16;}

                         
                        input.seek(index54_0);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA54_9 = input.LA(1);

                         
                        int index54_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA54_9 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 17;}

                        else if ( (LA54_9==RULE_STRING) ) {s = 18;}

                        else if ( (LA54_9==RULE_ID) ) {s = 19;}

                         
                        input.seek(index54_9);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 54, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA55 extends DFA {

        public DFA55(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 55;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "9405:2: ( rule__Service__UnorderedGroup_3__3 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA55_12 = input.LA(1);

                         
                        int index55_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA55_12 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                        else if ( ((LA55_12>=RULE_STRING && LA55_12<=RULE_ID)) ) {s = 16;}

                         
                        input.seek(index55_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA55_11 = input.LA(1);

                         
                        int index55_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA55_11>=RULE_STRING && LA55_11<=RULE_ID)) ) {s = 16;}

                        else if ( LA55_11 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index55_11);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA55_10 = input.LA(1);

                         
                        int index55_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA55_10>=RULE_STRING && LA55_10<=RULE_ID)) ) {s = 16;}

                        else if ( LA55_10 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index55_10);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA55_0 = input.LA(1);

                         
                        int index55_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA55_0 >= 41 && LA55_0 <= 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA55_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA55_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA55_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA55_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA55_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA55_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA55_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( (LA55_0==36) ) {s = 9;}

                        else if ( (LA55_0==37) ) {s = 10;}

                        else if ( (LA55_0==38) ) {s = 11;}

                        else if ( (LA55_0==39) ) {s = 12;}

                        else if ( LA55_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA55_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA55_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( (LA55_0==EOF||(LA55_0>=RULE_STRING && LA55_0<=RULE_ID)||(LA55_0>=34 && LA55_0<=35)) ) {s = 16;}

                         
                        input.seek(index55_0);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA55_23 = input.LA(1);

                         
                        int index55_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 22;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 16;}

                         
                        input.seek(index55_23);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA55_9 = input.LA(1);

                         
                        int index55_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA55_9==RULE_STRING) ) {s = 17;}

                        else if ( (LA55_9==RULE_ID) ) {s = 18;}

                        else if ( LA55_9 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 19;}

                         
                        input.seek(index55_9);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 55, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_26s = "\1\4\10\uffff\1\5\1\2\1\1\1\0\12\uffff\1\3}>";
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);

    class DFA56 extends DFA {

        public DFA56(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 56;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_26;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "9417:2: ( rule__Service__UnorderedGroup_3__4 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA56_12 = input.LA(1);

                         
                        int index56_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA56_12 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                        else if ( ((LA56_12>=RULE_STRING && LA56_12<=RULE_ID)) ) {s = 16;}

                         
                        input.seek(index56_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA56_11 = input.LA(1);

                         
                        int index56_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA56_11>=RULE_STRING && LA56_11<=RULE_ID)) ) {s = 16;}

                        else if ( LA56_11 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index56_11);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA56_10 = input.LA(1);

                         
                        int index56_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA56_10>=RULE_STRING && LA56_10<=RULE_ID)) ) {s = 16;}

                        else if ( LA56_10 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index56_10);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA56_23 = input.LA(1);

                         
                        int index56_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 22;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 16;}

                         
                        input.seek(index56_23);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA56_0 = input.LA(1);

                         
                        int index56_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA56_0 >= 41 && LA56_0 <= 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA56_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA56_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA56_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA56_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA56_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA56_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA56_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( (LA56_0==36) ) {s = 9;}

                        else if ( (LA56_0==37) ) {s = 10;}

                        else if ( (LA56_0==38) ) {s = 11;}

                        else if ( (LA56_0==39) ) {s = 12;}

                        else if ( LA56_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA56_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA56_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( (LA56_0==EOF||(LA56_0>=RULE_STRING && LA56_0<=RULE_ID)||(LA56_0>=34 && LA56_0<=35)) ) {s = 16;}

                         
                        input.seek(index56_0);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA56_9 = input.LA(1);

                         
                        int index56_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA56_9==RULE_STRING) ) {s = 17;}

                        else if ( (LA56_9==RULE_ID) ) {s = 18;}

                        else if ( LA56_9 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 19;}

                         
                        input.seek(index56_9);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 56, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA57 extends DFA {

        public DFA57(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 57;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_26;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "9429:2: ( rule__Service__UnorderedGroup_3__5 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA57_12 = input.LA(1);

                         
                        int index57_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA57_12>=RULE_STRING && LA57_12<=RULE_ID)) ) {s = 16;}

                        else if ( LA57_12 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index57_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA57_11 = input.LA(1);

                         
                        int index57_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA57_11>=RULE_STRING && LA57_11<=RULE_ID)) ) {s = 16;}

                        else if ( LA57_11 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index57_11);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA57_10 = input.LA(1);

                         
                        int index57_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA57_10>=RULE_STRING && LA57_10<=RULE_ID)) ) {s = 16;}

                        else if ( LA57_10 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index57_10);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA57_23 = input.LA(1);

                         
                        int index57_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 22;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 16;}

                         
                        input.seek(index57_23);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA57_0 = input.LA(1);

                         
                        int index57_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA57_0 >= 41 && LA57_0 <= 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA57_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA57_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA57_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA57_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA57_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA57_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA57_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( (LA57_0==36) ) {s = 9;}

                        else if ( (LA57_0==37) ) {s = 10;}

                        else if ( (LA57_0==38) ) {s = 11;}

                        else if ( (LA57_0==39) ) {s = 12;}

                        else if ( LA57_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA57_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA57_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( (LA57_0==EOF||(LA57_0>=RULE_STRING && LA57_0<=RULE_ID)||(LA57_0>=34 && LA57_0<=35)) ) {s = 16;}

                         
                        input.seek(index57_0);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA57_9 = input.LA(1);

                         
                        int index57_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA57_9==RULE_STRING) ) {s = 17;}

                        else if ( (LA57_9==RULE_ID) ) {s = 18;}

                        else if ( LA57_9 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 19;}

                         
                        input.seek(index57_9);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 57, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA58 extends DFA {

        public DFA58(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 58;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_24;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "9441:2: ( rule__Service__UnorderedGroup_3__6 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA58_12 = input.LA(1);

                         
                        int index58_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA58_12>=RULE_STRING && LA58_12<=RULE_ID)) ) {s = 16;}

                        else if ( LA58_12 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index58_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA58_23 = input.LA(1);

                         
                        int index58_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 22;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 16;}

                         
                        input.seek(index58_23);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA58_11 = input.LA(1);

                         
                        int index58_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA58_11 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                        else if ( ((LA58_11>=RULE_STRING && LA58_11<=RULE_ID)) ) {s = 16;}

                         
                        input.seek(index58_11);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA58_10 = input.LA(1);

                         
                        int index58_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA58_10>=RULE_STRING && LA58_10<=RULE_ID)) ) {s = 16;}

                        else if ( LA58_10 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index58_10);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA58_0 = input.LA(1);

                         
                        int index58_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA58_0 >= 41 && LA58_0 <= 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA58_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA58_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA58_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA58_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA58_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA58_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA58_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( (LA58_0==36) ) {s = 9;}

                        else if ( (LA58_0==37) ) {s = 10;}

                        else if ( (LA58_0==38) ) {s = 11;}

                        else if ( (LA58_0==39) ) {s = 12;}

                        else if ( LA58_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA58_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA58_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( (LA58_0==EOF||(LA58_0>=RULE_STRING && LA58_0<=RULE_ID)||(LA58_0>=34 && LA58_0<=35)) ) {s = 16;}

                         
                        input.seek(index58_0);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA58_9 = input.LA(1);

                         
                        int index58_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA58_9==RULE_STRING) ) {s = 17;}

                        else if ( (LA58_9==RULE_ID) ) {s = 18;}

                        else if ( LA58_9 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 19;}

                         
                        input.seek(index58_9);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 58, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA59 extends DFA {

        public DFA59(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 59;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_26;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "9453:2: ( rule__Service__UnorderedGroup_3__7 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA59_12 = input.LA(1);

                         
                        int index59_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA59_12>=RULE_STRING && LA59_12<=RULE_ID)) ) {s = 16;}

                        else if ( LA59_12 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index59_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA59_11 = input.LA(1);

                         
                        int index59_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA59_11 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                        else if ( ((LA59_11>=RULE_STRING && LA59_11<=RULE_ID)) ) {s = 16;}

                         
                        input.seek(index59_11);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA59_10 = input.LA(1);

                         
                        int index59_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA59_10>=RULE_STRING && LA59_10<=RULE_ID)) ) {s = 16;}

                        else if ( LA59_10 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index59_10);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA59_23 = input.LA(1);

                         
                        int index59_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 22;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 16;}

                         
                        input.seek(index59_23);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA59_0 = input.LA(1);

                         
                        int index59_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA59_0 >= 41 && LA59_0 <= 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA59_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA59_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA59_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA59_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA59_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA59_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA59_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( (LA59_0==36) ) {s = 9;}

                        else if ( (LA59_0==37) ) {s = 10;}

                        else if ( (LA59_0==38) ) {s = 11;}

                        else if ( (LA59_0==39) ) {s = 12;}

                        else if ( LA59_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA59_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA59_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( (LA59_0==EOF||(LA59_0>=RULE_STRING && LA59_0<=RULE_ID)||(LA59_0>=34 && LA59_0<=35)) ) {s = 16;}

                         
                        input.seek(index59_0);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA59_9 = input.LA(1);

                         
                        int index59_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA59_9==RULE_STRING) ) {s = 17;}

                        else if ( (LA59_9==RULE_ID) ) {s = 18;}

                        else if ( LA59_9 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 19;}

                         
                        input.seek(index59_9);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 59, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA60 extends DFA {

        public DFA60(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 60;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_26;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "9465:2: ( rule__Service__UnorderedGroup_3__8 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA60_12 = input.LA(1);

                         
                        int index60_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA60_12>=RULE_STRING && LA60_12<=RULE_ID)) ) {s = 16;}

                        else if ( LA60_12 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index60_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA60_11 = input.LA(1);

                         
                        int index60_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA60_11 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                        else if ( ((LA60_11>=RULE_STRING && LA60_11<=RULE_ID)) ) {s = 16;}

                         
                        input.seek(index60_11);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA60_10 = input.LA(1);

                         
                        int index60_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA60_10>=RULE_STRING && LA60_10<=RULE_ID)) ) {s = 16;}

                        else if ( LA60_10 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index60_10);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA60_23 = input.LA(1);

                         
                        int index60_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 22;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 16;}

                         
                        input.seek(index60_23);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA60_0 = input.LA(1);

                         
                        int index60_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA60_0 >= 41 && LA60_0 <= 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA60_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA60_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA60_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA60_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA60_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA60_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA60_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( (LA60_0==36) ) {s = 9;}

                        else if ( (LA60_0==37) ) {s = 10;}

                        else if ( (LA60_0==38) ) {s = 11;}

                        else if ( (LA60_0==39) ) {s = 12;}

                        else if ( LA60_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA60_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA60_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( (LA60_0==EOF||(LA60_0>=RULE_STRING && LA60_0<=RULE_ID)||(LA60_0>=34 && LA60_0<=35)) ) {s = 16;}

                         
                        input.seek(index60_0);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA60_9 = input.LA(1);

                         
                        int index60_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA60_9==RULE_STRING) ) {s = 17;}

                        else if ( (LA60_9==RULE_ID) ) {s = 18;}

                        else if ( LA60_9 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 19;}

                         
                        input.seek(index60_9);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 60, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA61 extends DFA {

        public DFA61(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 61;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "9477:2: ( rule__Service__UnorderedGroup_3__9 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA61_12 = input.LA(1);

                         
                        int index61_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA61_12>=RULE_STRING && LA61_12<=RULE_ID)) ) {s = 16;}

                        else if ( LA61_12 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index61_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA61_11 = input.LA(1);

                         
                        int index61_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA61_11 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                        else if ( ((LA61_11>=RULE_STRING && LA61_11<=RULE_ID)) ) {s = 16;}

                         
                        input.seek(index61_11);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA61_10 = input.LA(1);

                         
                        int index61_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA61_10 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                        else if ( ((LA61_10>=RULE_STRING && LA61_10<=RULE_ID)) ) {s = 16;}

                         
                        input.seek(index61_10);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA61_0 = input.LA(1);

                         
                        int index61_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA61_0 >= 41 && LA61_0 <= 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA61_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA61_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA61_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA61_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA61_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA61_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA61_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( (LA61_0==36) ) {s = 9;}

                        else if ( (LA61_0==37) ) {s = 10;}

                        else if ( (LA61_0==38) ) {s = 11;}

                        else if ( (LA61_0==39) ) {s = 12;}

                        else if ( LA61_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA61_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA61_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( (LA61_0==EOF||(LA61_0>=RULE_STRING && LA61_0<=RULE_ID)||(LA61_0>=34 && LA61_0<=35)) ) {s = 16;}

                         
                        input.seek(index61_0);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA61_23 = input.LA(1);

                         
                        int index61_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 22;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 16;}

                         
                        input.seek(index61_23);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA61_9 = input.LA(1);

                         
                        int index61_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA61_9==RULE_STRING) ) {s = 17;}

                        else if ( (LA61_9==RULE_ID) ) {s = 18;}

                        else if ( LA61_9 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 19;}

                         
                        input.seek(index61_9);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 61, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA62 extends DFA {

        public DFA62(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 62;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "9489:2: ( rule__Service__UnorderedGroup_3__10 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA62_12 = input.LA(1);

                         
                        int index62_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA62_12>=RULE_STRING && LA62_12<=RULE_ID)) ) {s = 16;}

                        else if ( LA62_12 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index62_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA62_23 = input.LA(1);

                         
                        int index62_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 22;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 16;}

                         
                        input.seek(index62_23);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA62_11 = input.LA(1);

                         
                        int index62_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA62_11>=RULE_STRING && LA62_11<=RULE_ID)) ) {s = 16;}

                        else if ( LA62_11 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index62_11);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA62_10 = input.LA(1);

                         
                        int index62_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA62_10>=RULE_STRING && LA62_10<=RULE_ID)) ) {s = 16;}

                        else if ( LA62_10 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index62_10);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA62_0 = input.LA(1);

                         
                        int index62_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA62_0 >= 41 && LA62_0 <= 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA62_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA62_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA62_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA62_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA62_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA62_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA62_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( (LA62_0==36) ) {s = 9;}

                        else if ( (LA62_0==37) ) {s = 10;}

                        else if ( (LA62_0==38) ) {s = 11;}

                        else if ( (LA62_0==39) ) {s = 12;}

                        else if ( LA62_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA62_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA62_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( (LA62_0==EOF||(LA62_0>=RULE_STRING && LA62_0<=RULE_ID)||(LA62_0>=34 && LA62_0<=35)) ) {s = 16;}

                         
                        input.seek(index62_0);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA62_9 = input.LA(1);

                         
                        int index62_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA62_9 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 17;}

                        else if ( (LA62_9==RULE_STRING) ) {s = 18;}

                        else if ( (LA62_9==RULE_ID) ) {s = 19;}

                         
                        input.seek(index62_9);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 62, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA63 extends DFA {

        public DFA63(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 63;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_26;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "9501:2: ( rule__Service__UnorderedGroup_3__11 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA63_12 = input.LA(1);

                         
                        int index63_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA63_12 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                        else if ( ((LA63_12>=RULE_STRING && LA63_12<=RULE_ID)) ) {s = 16;}

                         
                        input.seek(index63_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA63_11 = input.LA(1);

                         
                        int index63_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA63_11>=RULE_STRING && LA63_11<=RULE_ID)) ) {s = 16;}

                        else if ( LA63_11 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index63_11);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA63_10 = input.LA(1);

                         
                        int index63_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA63_10>=RULE_STRING && LA63_10<=RULE_ID)) ) {s = 16;}

                        else if ( LA63_10 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index63_10);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA63_23 = input.LA(1);

                         
                        int index63_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 22;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 16;}

                         
                        input.seek(index63_23);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA63_0 = input.LA(1);

                         
                        int index63_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA63_0 >= 41 && LA63_0 <= 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA63_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA63_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA63_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA63_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA63_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA63_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA63_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( (LA63_0==36) ) {s = 9;}

                        else if ( (LA63_0==37) ) {s = 10;}

                        else if ( (LA63_0==38) ) {s = 11;}

                        else if ( (LA63_0==39) ) {s = 12;}

                        else if ( LA63_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA63_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA63_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( (LA63_0==EOF||(LA63_0>=RULE_STRING && LA63_0<=RULE_ID)||(LA63_0>=34 && LA63_0<=35)) ) {s = 16;}

                         
                        input.seek(index63_0);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA63_9 = input.LA(1);

                         
                        int index63_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA63_9==RULE_STRING) ) {s = 17;}

                        else if ( (LA63_9==RULE_ID) ) {s = 18;}

                        else if ( LA63_9 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 19;}

                         
                        input.seek(index63_9);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 63, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA64 extends DFA {

        public DFA64(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 64;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_24;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "9513:2: ( rule__Service__UnorderedGroup_3__12 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA64_12 = input.LA(1);

                         
                        int index64_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA64_12 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                        else if ( ((LA64_12>=RULE_STRING && LA64_12<=RULE_ID)) ) {s = 16;}

                         
                        input.seek(index64_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA64_23 = input.LA(1);

                         
                        int index64_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 22;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 16;}

                         
                        input.seek(index64_23);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA64_11 = input.LA(1);

                         
                        int index64_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA64_11>=RULE_STRING && LA64_11<=RULE_ID)) ) {s = 16;}

                        else if ( LA64_11 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index64_11);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA64_10 = input.LA(1);

                         
                        int index64_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA64_10>=RULE_STRING && LA64_10<=RULE_ID)) ) {s = 16;}

                        else if ( LA64_10 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index64_10);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA64_0 = input.LA(1);

                         
                        int index64_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA64_0 >= 41 && LA64_0 <= 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA64_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA64_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA64_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA64_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA64_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA64_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA64_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( (LA64_0==36) ) {s = 9;}

                        else if ( (LA64_0==37) ) {s = 10;}

                        else if ( (LA64_0==38) ) {s = 11;}

                        else if ( (LA64_0==39) ) {s = 12;}

                        else if ( LA64_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA64_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA64_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( (LA64_0==EOF||(LA64_0>=RULE_STRING && LA64_0<=RULE_ID)||(LA64_0>=34 && LA64_0<=35)) ) {s = 16;}

                         
                        input.seek(index64_0);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA64_9 = input.LA(1);

                         
                        int index64_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA64_9==RULE_STRING) ) {s = 17;}

                        else if ( (LA64_9==RULE_ID) ) {s = 18;}

                        else if ( LA64_9 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 19;}

                         
                        input.seek(index64_9);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 64, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_27s = "\1\4\10\uffff\1\5\1\3\1\2\1\1\12\uffff\1\0}>";
    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);

    class DFA65 extends DFA {

        public DFA65(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 65;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_27;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "9525:2: ( rule__Service__UnorderedGroup_3__13 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA65_23 = input.LA(1);

                         
                        int index65_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 22;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 16;}

                         
                        input.seek(index65_23);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA65_12 = input.LA(1);

                         
                        int index65_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA65_12>=RULE_STRING && LA65_12<=RULE_ID)) ) {s = 16;}

                        else if ( LA65_12 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index65_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA65_11 = input.LA(1);

                         
                        int index65_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA65_11>=RULE_STRING && LA65_11<=RULE_ID)) ) {s = 16;}

                        else if ( LA65_11 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                         
                        input.seek(index65_11);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA65_10 = input.LA(1);

                         
                        int index65_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA65_10>=RULE_STRING && LA65_10<=RULE_ID)) ) {s = 16;}

                        else if ( LA65_10 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index65_10);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA65_0 = input.LA(1);

                         
                        int index65_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA65_0 >= 41 && LA65_0 <= 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA65_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA65_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA65_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA65_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA65_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA65_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA65_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( (LA65_0==36) ) {s = 9;}

                        else if ( (LA65_0==37) ) {s = 10;}

                        else if ( (LA65_0==38) ) {s = 11;}

                        else if ( (LA65_0==39) ) {s = 12;}

                        else if ( LA65_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA65_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA65_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( (LA65_0==EOF||(LA65_0>=RULE_STRING && LA65_0<=RULE_ID)||(LA65_0>=34 && LA65_0<=35)) ) {s = 16;}

                         
                        input.seek(index65_0);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA65_9 = input.LA(1);

                         
                        int index65_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA65_9==RULE_STRING) ) {s = 17;}

                        else if ( (LA65_9==RULE_ID) ) {s = 18;}

                        else if ( LA65_9 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 19;}

                         
                        input.seek(index65_9);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 65, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_28s = "\1\4\10\uffff\1\5\1\3\1\1\1\0\12\uffff\1\2}>";
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);

    class DFA66 extends DFA {

        public DFA66(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 66;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_28;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "9537:2: ( rule__Service__UnorderedGroup_3__14 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA66_12 = input.LA(1);

                         
                        int index66_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA66_12>=RULE_STRING && LA66_12<=RULE_ID)) ) {s = 16;}

                        else if ( LA66_12 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 11) ) {s = 22;}

                         
                        input.seek(index66_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA66_11 = input.LA(1);

                         
                        int index66_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA66_11 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 10) ) {s = 21;}

                        else if ( ((LA66_11>=RULE_STRING && LA66_11<=RULE_ID)) ) {s = 16;}

                         
                        input.seek(index66_11);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA66_23 = input.LA(1);

                         
                        int index66_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 22;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getServiceAccess().getUnorderedGroup_3()) ) {s = 16;}

                         
                        input.seek(index66_23);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA66_10 = input.LA(1);

                         
                        int index66_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA66_10>=RULE_STRING && LA66_10<=RULE_ID)) ) {s = 16;}

                        else if ( LA66_10 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 9) ) {s = 20;}

                         
                        input.seek(index66_10);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA66_0 = input.LA(1);

                         
                        int index66_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA66_0 >= 41 && LA66_0 <= 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 0) ) {s = 1;}

                        else if ( LA66_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 1) ) {s = 2;}

                        else if ( LA66_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 2) ) {s = 3;}

                        else if ( LA66_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA66_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA66_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 5) ) {s = 6;}

                        else if ( LA66_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 6) ) {s = 7;}

                        else if ( LA66_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( (LA66_0==36) ) {s = 9;}

                        else if ( (LA66_0==37) ) {s = 10;}

                        else if ( (LA66_0==38) ) {s = 11;}

                        else if ( (LA66_0==39) ) {s = 12;}

                        else if ( LA66_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 12) ) {s = 13;}

                        else if ( LA66_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 13) ) {s = 14;}

                        else if ( LA66_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 14) ) {s = 15;}

                        else if ( (LA66_0==EOF||(LA66_0>=RULE_STRING && LA66_0<=RULE_ID)||(LA66_0>=34 && LA66_0<=35)) ) {s = 16;}

                         
                        input.seek(index66_0);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA66_9 = input.LA(1);

                         
                        int index66_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA66_9==RULE_STRING) ) {s = 17;}

                        else if ( (LA66_9==RULE_ID) ) {s = 18;}

                        else if ( LA66_9 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getServiceAccess().getUnorderedGroup_3(), 8) ) {s = 19;}

                         
                        input.seek(index66_9);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 66, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_29s = "\13\uffff";
    static final String dfa_30s = "\1\10\12\uffff";
    static final String dfa_31s = "\1\5\3\uffff\1\17\4\uffff\2\0";
    static final String dfa_32s = "\1\101\3\uffff\1\20\4\uffff\2\0";
    static final String dfa_33s = "\1\uffff\3\1\1\uffff\3\1\1\2\2\uffff";
    static final String dfa_34s = "\1\2\10\uffff\1\1\1\0}>";
    static final String[] dfa_35s = {
            "\2\10\33\uffff\6\10\1\uffff\7\10\1\4\5\10\4\uffff\1\1\1\2\1\3\1\5\1\uffff\1\6\1\uffff\1\7",
            "",
            "",
            "",
            "\1\11\1\12",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff"
    };

    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final char[] dfa_31 = DFA.unpackEncodedStringToUnsignedChars(dfa_31s);
    static final char[] dfa_32 = DFA.unpackEncodedStringToUnsignedChars(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[][] dfa_35 = unpackEncodedStringArray(dfa_35s);

    class DFA73 extends DFA {

        public DFA73(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 73;
            this.eot = dfa_29;
            this.eof = dfa_30;
            this.min = dfa_31;
            this.max = dfa_32;
            this.accept = dfa_33;
            this.special = dfa_34;
            this.transition = dfa_35;
        }
        public String getDescription() {
            return "9832:2: ( rule__VolumeConnector_long__UnorderedGroup_1__1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA73_10 = input.LA(1);

                         
                        int index73_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index73_10);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA73_9 = input.LA(1);

                         
                        int index73_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index73_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA73_0 = input.LA(1);

                         
                        int index73_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA73_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 0) ) {s = 1;}

                        else if ( LA73_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 1) ) {s = 2;}

                        else if ( LA73_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 2) ) {s = 3;}

                        else if ( (LA73_0==48) ) {s = 4;}

                        else if ( LA73_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 4) ) {s = 5;}

                        else if ( LA73_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 5) ) {s = 6;}

                        else if ( LA73_0 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 6) ) {s = 7;}

                        else if ( (LA73_0==EOF||(LA73_0>=RULE_STRING && LA73_0<=RULE_ID)||(LA73_0>=34 && LA73_0<=39)||(LA73_0>=41 && LA73_0<=47)||(LA73_0>=49 && LA73_0<=53)) ) {s = 8;}

                         
                        input.seek(index73_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 73, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_36s = "\1\2\10\uffff\1\0\1\1}>";
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = dfa_29;
            this.eof = dfa_30;
            this.min = dfa_31;
            this.max = dfa_32;
            this.accept = dfa_33;
            this.special = dfa_36;
            this.transition = dfa_35;
        }
        public String getDescription() {
            return "9844:2: ( rule__VolumeConnector_long__UnorderedGroup_1__2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA74_9 = input.LA(1);

                         
                        int index74_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index74_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA74_10 = input.LA(1);

                         
                        int index74_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index74_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA74_0 = input.LA(1);

                         
                        int index74_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA74_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 0) ) {s = 1;}

                        else if ( LA74_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 1) ) {s = 2;}

                        else if ( LA74_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 2) ) {s = 3;}

                        else if ( (LA74_0==48) ) {s = 4;}

                        else if ( LA74_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 4) ) {s = 5;}

                        else if ( LA74_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 5) ) {s = 6;}

                        else if ( LA74_0 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 6) ) {s = 7;}

                        else if ( (LA74_0==EOF||(LA74_0>=RULE_STRING && LA74_0<=RULE_ID)||(LA74_0>=34 && LA74_0<=39)||(LA74_0>=41 && LA74_0<=47)||(LA74_0>=49 && LA74_0<=53)) ) {s = 8;}

                         
                        input.seek(index74_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 74, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_37s = "\1\0\10\uffff\1\2\1\1}>";
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);

    class DFA75 extends DFA {

        public DFA75(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 75;
            this.eot = dfa_29;
            this.eof = dfa_30;
            this.min = dfa_31;
            this.max = dfa_32;
            this.accept = dfa_33;
            this.special = dfa_37;
            this.transition = dfa_35;
        }
        public String getDescription() {
            return "9856:2: ( rule__VolumeConnector_long__UnorderedGroup_1__3 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA75_0 = input.LA(1);

                         
                        int index75_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA75_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 0) ) {s = 1;}

                        else if ( LA75_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 1) ) {s = 2;}

                        else if ( LA75_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 2) ) {s = 3;}

                        else if ( (LA75_0==48) ) {s = 4;}

                        else if ( LA75_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 4) ) {s = 5;}

                        else if ( LA75_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 5) ) {s = 6;}

                        else if ( LA75_0 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 6) ) {s = 7;}

                        else if ( (LA75_0==EOF||(LA75_0>=RULE_STRING && LA75_0<=RULE_ID)||(LA75_0>=34 && LA75_0<=39)||(LA75_0>=41 && LA75_0<=47)||(LA75_0>=49 && LA75_0<=53)) ) {s = 8;}

                         
                        input.seek(index75_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA75_10 = input.LA(1);

                         
                        int index75_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index75_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA75_9 = input.LA(1);

                         
                        int index75_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index75_9);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 75, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA76 extends DFA {

        public DFA76(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 76;
            this.eot = dfa_29;
            this.eof = dfa_30;
            this.min = dfa_31;
            this.max = dfa_32;
            this.accept = dfa_33;
            this.special = dfa_34;
            this.transition = dfa_35;
        }
        public String getDescription() {
            return "9868:2: ( rule__VolumeConnector_long__UnorderedGroup_1__4 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA76_10 = input.LA(1);

                         
                        int index76_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index76_10);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA76_9 = input.LA(1);

                         
                        int index76_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index76_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA76_0 = input.LA(1);

                         
                        int index76_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA76_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 0) ) {s = 1;}

                        else if ( LA76_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 1) ) {s = 2;}

                        else if ( LA76_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 2) ) {s = 3;}

                        else if ( (LA76_0==48) ) {s = 4;}

                        else if ( LA76_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 4) ) {s = 5;}

                        else if ( LA76_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 5) ) {s = 6;}

                        else if ( LA76_0 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 6) ) {s = 7;}

                        else if ( (LA76_0==EOF||(LA76_0>=RULE_STRING && LA76_0<=RULE_ID)||(LA76_0>=34 && LA76_0<=39)||(LA76_0>=41 && LA76_0<=47)||(LA76_0>=49 && LA76_0<=53)) ) {s = 8;}

                         
                        input.seek(index76_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 76, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA77 extends DFA {

        public DFA77(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 77;
            this.eot = dfa_29;
            this.eof = dfa_30;
            this.min = dfa_31;
            this.max = dfa_32;
            this.accept = dfa_33;
            this.special = dfa_37;
            this.transition = dfa_35;
        }
        public String getDescription() {
            return "9880:2: ( rule__VolumeConnector_long__UnorderedGroup_1__5 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA77_0 = input.LA(1);

                         
                        int index77_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA77_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 0) ) {s = 1;}

                        else if ( LA77_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 1) ) {s = 2;}

                        else if ( LA77_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 2) ) {s = 3;}

                        else if ( (LA77_0==48) ) {s = 4;}

                        else if ( LA77_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 4) ) {s = 5;}

                        else if ( LA77_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 5) ) {s = 6;}

                        else if ( LA77_0 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 6) ) {s = 7;}

                        else if ( (LA77_0==EOF||(LA77_0>=RULE_STRING && LA77_0<=RULE_ID)||(LA77_0>=34 && LA77_0<=39)||(LA77_0>=41 && LA77_0<=47)||(LA77_0>=49 && LA77_0<=53)) ) {s = 8;}

                         
                        input.seek(index77_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA77_10 = input.LA(1);

                         
                        int index77_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index77_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA77_9 = input.LA(1);

                         
                        int index77_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index77_9);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 77, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_38s = "\1\1\10\uffff\1\2\1\0}>";
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);

    class DFA78 extends DFA {

        public DFA78(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 78;
            this.eot = dfa_29;
            this.eof = dfa_30;
            this.min = dfa_31;
            this.max = dfa_32;
            this.accept = dfa_33;
            this.special = dfa_38;
            this.transition = dfa_35;
        }
        public String getDescription() {
            return "9892:2: ( rule__VolumeConnector_long__UnorderedGroup_1__6 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA78_10 = input.LA(1);

                         
                        int index78_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index78_10);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA78_0 = input.LA(1);

                         
                        int index78_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA78_0 == 58 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 0) ) {s = 1;}

                        else if ( LA78_0 == 59 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 1) ) {s = 2;}

                        else if ( LA78_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 2) ) {s = 3;}

                        else if ( (LA78_0==48) ) {s = 4;}

                        else if ( LA78_0 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 4) ) {s = 5;}

                        else if ( LA78_0 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 5) ) {s = 6;}

                        else if ( LA78_0 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 6) ) {s = 7;}

                        else if ( (LA78_0==EOF||(LA78_0>=RULE_STRING && LA78_0<=RULE_ID)||(LA78_0>=34 && LA78_0<=39)||(LA78_0>=41 && LA78_0<=47)||(LA78_0>=49 && LA78_0<=53)) ) {s = 8;}

                         
                        input.seek(index78_0);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA78_9 = input.LA(1);

                         
                        int index78_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( getUnorderedGroupHelper().canSelect(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getVolumeConnector_longAccess().getUnorderedGroup_1()) ) {s = 8;}

                         
                        input.seek(index78_9);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 78, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_39s = "\1\12\12\uffff";
    static final String dfa_40s = "\1\5\12\uffff";
    static final String dfa_41s = "\1\120\12\uffff";
    static final String dfa_42s = "\1\uffff\11\1\1\2";
    static final String dfa_43s = "\1\0\12\uffff}>";
    static final String[] dfa_44s = {
            "\2\12\33\uffff\6\12\40\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final char[] dfa_40 = DFA.unpackEncodedStringToUnsignedChars(dfa_40s);
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[][] dfa_44 = unpackEncodedStringArray(dfa_44s);

    class DFA89 extends DFA {

        public DFA89(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 89;
            this.eot = dfa_29;
            this.eof = dfa_39;
            this.min = dfa_40;
            this.max = dfa_41;
            this.accept = dfa_42;
            this.special = dfa_43;
            this.transition = dfa_44;
        }
        public String getDescription() {
            return "10244:2: ( rule__Network__UnorderedGroup_3_1__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA89_0 = input.LA(1);

                         
                        int index89_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA89_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA89_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA89_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA89_0 == 75 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA89_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA89_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA89_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA89_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA89_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA89_0==EOF||(LA89_0>=RULE_STRING && LA89_0<=RULE_ID)||(LA89_0>=34 && LA89_0<=39)) ) {s = 10;}

                         
                        input.seek(index89_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 89, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_45s = "\12\uffff";
    static final String dfa_46s = "\1\110\11\uffff";
    static final String dfa_47s = "\1\120\11\uffff";
    static final String dfa_48s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11";
    static final String dfa_49s = "\1\0\11\uffff}>";
    static final String[] dfa_50s = {
            "\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final char[] dfa_46 = DFA.unpackEncodedStringToUnsignedChars(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[][] dfa_50 = unpackEncodedStringArray(dfa_50s);

    class DFA90 extends DFA {

        public DFA90(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 90;
            this.eot = dfa_45;
            this.eof = dfa_45;
            this.min = dfa_46;
            this.max = dfa_47;
            this.accept = dfa_48;
            this.special = dfa_49;
            this.transition = dfa_50;
        }
        public String getDescription() {
            return "10258:3: ( ({...}? => ( ( ( rule__Network__Group_3_1_0__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_1__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_2__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_3__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_4__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_5__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_6__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_7__0 ) ) ) ) | ({...}? => ( ( ( rule__Network__Group_3_1_8__0 ) ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA90_0 = input.LA(1);

                         
                        int index90_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA90_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA90_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA90_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA90_0 == 75 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA90_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA90_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA90_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA90_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA90_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                         
                        input.seek(index90_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 90, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA91 extends DFA {

        public DFA91(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 91;
            this.eot = dfa_29;
            this.eof = dfa_39;
            this.min = dfa_40;
            this.max = dfa_41;
            this.accept = dfa_42;
            this.special = dfa_43;
            this.transition = dfa_44;
        }
        public String getDescription() {
            return "10408:2: ( rule__Network__UnorderedGroup_3_1__1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA91_0 = input.LA(1);

                         
                        int index91_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA91_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA91_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA91_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA91_0 == 75 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA91_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA91_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA91_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA91_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA91_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA91_0==EOF||(LA91_0>=RULE_STRING && LA91_0<=RULE_ID)||(LA91_0>=34 && LA91_0<=39)) ) {s = 10;}

                         
                        input.seek(index91_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 91, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA92 extends DFA {

        public DFA92(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 92;
            this.eot = dfa_29;
            this.eof = dfa_39;
            this.min = dfa_40;
            this.max = dfa_41;
            this.accept = dfa_42;
            this.special = dfa_43;
            this.transition = dfa_44;
        }
        public String getDescription() {
            return "10420:2: ( rule__Network__UnorderedGroup_3_1__2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA92_0 = input.LA(1);

                         
                        int index92_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA92_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA92_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA92_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA92_0 == 75 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA92_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA92_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA92_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA92_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA92_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA92_0==EOF||(LA92_0>=RULE_STRING && LA92_0<=RULE_ID)||(LA92_0>=34 && LA92_0<=39)) ) {s = 10;}

                         
                        input.seek(index92_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 92, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA93 extends DFA {

        public DFA93(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 93;
            this.eot = dfa_29;
            this.eof = dfa_39;
            this.min = dfa_40;
            this.max = dfa_41;
            this.accept = dfa_42;
            this.special = dfa_43;
            this.transition = dfa_44;
        }
        public String getDescription() {
            return "10432:2: ( rule__Network__UnorderedGroup_3_1__3 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA93_0 = input.LA(1);

                         
                        int index93_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA93_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA93_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA93_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA93_0 == 75 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA93_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA93_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA93_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA93_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA93_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA93_0==EOF||(LA93_0>=RULE_STRING && LA93_0<=RULE_ID)||(LA93_0>=34 && LA93_0<=39)) ) {s = 10;}

                         
                        input.seek(index93_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 93, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA94 extends DFA {

        public DFA94(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 94;
            this.eot = dfa_29;
            this.eof = dfa_39;
            this.min = dfa_40;
            this.max = dfa_41;
            this.accept = dfa_42;
            this.special = dfa_43;
            this.transition = dfa_44;
        }
        public String getDescription() {
            return "10444:2: ( rule__Network__UnorderedGroup_3_1__4 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA94_0 = input.LA(1);

                         
                        int index94_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA94_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA94_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA94_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA94_0 == 75 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA94_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA94_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA94_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA94_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA94_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA94_0==EOF||(LA94_0>=RULE_STRING && LA94_0<=RULE_ID)||(LA94_0>=34 && LA94_0<=39)) ) {s = 10;}

                         
                        input.seek(index94_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 94, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA95 extends DFA {

        public DFA95(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 95;
            this.eot = dfa_29;
            this.eof = dfa_39;
            this.min = dfa_40;
            this.max = dfa_41;
            this.accept = dfa_42;
            this.special = dfa_43;
            this.transition = dfa_44;
        }
        public String getDescription() {
            return "10456:2: ( rule__Network__UnorderedGroup_3_1__5 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA95_0 = input.LA(1);

                         
                        int index95_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA95_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA95_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA95_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA95_0 == 75 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA95_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA95_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA95_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA95_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA95_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA95_0==EOF||(LA95_0>=RULE_STRING && LA95_0<=RULE_ID)||(LA95_0>=34 && LA95_0<=39)) ) {s = 10;}

                         
                        input.seek(index95_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 95, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA96 extends DFA {

        public DFA96(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 96;
            this.eot = dfa_29;
            this.eof = dfa_39;
            this.min = dfa_40;
            this.max = dfa_41;
            this.accept = dfa_42;
            this.special = dfa_43;
            this.transition = dfa_44;
        }
        public String getDescription() {
            return "10468:2: ( rule__Network__UnorderedGroup_3_1__6 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA96_0 = input.LA(1);

                         
                        int index96_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA96_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA96_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA96_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA96_0 == 75 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA96_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA96_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA96_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA96_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA96_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA96_0==EOF||(LA96_0>=RULE_STRING && LA96_0<=RULE_ID)||(LA96_0>=34 && LA96_0<=39)) ) {s = 10;}

                         
                        input.seek(index96_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 96, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA97 extends DFA {

        public DFA97(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 97;
            this.eot = dfa_29;
            this.eof = dfa_39;
            this.min = dfa_40;
            this.max = dfa_41;
            this.accept = dfa_42;
            this.special = dfa_43;
            this.transition = dfa_44;
        }
        public String getDescription() {
            return "10480:2: ( rule__Network__UnorderedGroup_3_1__7 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA97_0 = input.LA(1);

                         
                        int index97_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA97_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA97_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA97_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA97_0 == 75 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA97_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA97_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA97_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA97_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA97_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA97_0==EOF||(LA97_0>=RULE_STRING && LA97_0<=RULE_ID)||(LA97_0>=34 && LA97_0<=39)) ) {s = 10;}

                         
                        input.seek(index97_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 97, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA98 extends DFA {

        public DFA98(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 98;
            this.eot = dfa_29;
            this.eof = dfa_39;
            this.min = dfa_40;
            this.max = dfa_41;
            this.accept = dfa_42;
            this.special = dfa_43;
            this.transition = dfa_44;
        }
        public String getDescription() {
            return "10492:2: ( rule__Network__UnorderedGroup_3_1__8 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA98_0 = input.LA(1);

                         
                        int index98_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA98_0 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 0) ) {s = 1;}

                        else if ( LA98_0 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 1) ) {s = 2;}

                        else if ( LA98_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 2) ) {s = 3;}

                        else if ( LA98_0 == 75 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 3) ) {s = 4;}

                        else if ( LA98_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 4) ) {s = 5;}

                        else if ( LA98_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 5) ) {s = 6;}

                        else if ( LA98_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 6) ) {s = 7;}

                        else if ( LA98_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 7) ) {s = 8;}

                        else if ( LA98_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getNetworkAccess().getUnorderedGroup_3_1(), 8) ) {s = 9;}

                        else if ( (LA98_0==EOF||(LA98_0>=RULE_STRING && LA98_0<=RULE_ID)||(LA98_0>=34 && LA98_0<=39)) ) {s = 10;}

                         
                        input.seek(index98_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 98, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0004000000000002L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000062L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000060L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x003BFEF000000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000040L,0x0000000006000000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x00000000001E0000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000018000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0004000000000060L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0xBC01000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x1400000000000000L,0x0000000000000038L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0004000000000010L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x03C0000000000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000E00000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x000000000F000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x00000003F0000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000000000L,0x000000000001FF40L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000000000L,0x0000000000180100L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000000000L,0x000000000000F100L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000000L,0x0000000000023000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000000L,0x0000000000063000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000000L,0x0000000001E00000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x000000FC00000002L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x003BFEF000000002L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x03C0000000000002L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0xBC01000000000002L,0x0000000000000002L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x1400000000000002L,0x0000000000000038L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000002L,0x000000000001FF00L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000002L,0x000000000000F100L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000002L,0x0000000000023000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000002L,0x0000000000063000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000002L,0x0000000000180100L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000002L,0x0000000001E00000L});

}
